{
"version":3,
"file":"Main.js",
"sourceRoot":"file:///",
"sources":["/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/app/Module.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/_backend/html5/HTML5Application.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/app/Application.hx","/Users/markus/Projects/haxe/openfl-modular-example-91ee77c94bbf95e0219ee37dae222bbb6444cfd1/Export/html5/haxe/ApplicationMain.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/EventDispatcher.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/Vector.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/ObjectPool.hx","/usr/local/lib/haxe/std/js/_std/haxe/ds/ObjectMap.hx","/usr/local/lib/haxe/std/List.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/DisplayObject.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/InteractiveObject.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/DisplayObjectContainer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/Sprite.hx","/Users/markus/Projects/haxe/openfl-modular-example-91ee77c94bbf95e0219ee37dae222bbb6444cfd1/Source/Main.hx","/usr/local/lib/haxe/std/js/_std/EReg.hx","/usr/local/lib/haxe/std/js/_std/HxOverrides.hx","/usr/local/lib/haxe/std/Lambda.hx","/Users/markus/Projects/haxe/openfl-modular-example-91ee77c94bbf95e0219ee37dae222bbb6444cfd1/Export/html5/haxe/ManifestResources.hx","/Users/markus/Projects/haxe/openfl-modular-example-91ee77c94bbf95e0219ee37dae222bbb6444cfd1/Source/Module1.hx","/Users/markus/Projects/haxe/openfl-modular-example-91ee77c94bbf95e0219ee37dae222bbb6444cfd1/Source/Module2.hx","/Users/markus/Projects/haxe/openfl-modular-example-91ee77c94bbf95e0219ee37dae222bbb6444cfd1/Source/Module3.hx","/Users/markus/Projects/haxe/openfl-modular-example-91ee77c94bbf95e0219ee37dae222bbb6444cfd1/Source/Module4.hx","/usr/local/lib/haxe/std/js/_std/Reflect.hx","/usr/local/lib/haxe/std/js/_std/Std.hx","/usr/local/lib/haxe/std/StringBuf.hx","/usr/local/lib/haxe/std/StringTools.hx","/usr/local/lib/haxe/std/js/_std/Type.hx","/usr/local/lib/haxe/std/UInt.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/haxe/CallStack.hx","/usr/local/lib/haxe/std/haxe/Int64.hx","/usr/local/lib/haxe/std/js/_std/haxe/Log.hx","/usr/local/lib/haxe/std/haxe/Serializer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/haxe/Timer.hx","/usr/local/lib/haxe/std/haxe/Unserializer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/haxe/io/Bytes.hx","/usr/local/lib/haxe/std/haxe/crypto/Base64.hx","/usr/local/lib/haxe/std/haxe/crypto/BaseCode.hx","/usr/local/lib/haxe/std/js/_std/haxe/ds/IntMap.hx","/usr/local/lib/haxe/std/js/_std/haxe/ds/StringMap.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/haxe/io/FPHelper.hx","/usr/local/lib/haxe/std/haxe/io/Path.hx","/usr/local/lib/haxe/std/js/Boot.hx","/usr/local/lib/haxe/std/js/Browser.hx","/usr/local/lib/haxe/std/js/html/CanvasElement.hx","/usr/local/lib/haxe/std/js/html/compat/ArrayBuffer.hx","/usr/local/lib/haxe/std/js/html/compat/DataView.hx","/usr/local/lib/haxe/std/js/html/compat/Float32Array.hx","/usr/local/lib/haxe/std/js/html/compat/Float64Array.hx","/usr/local/lib/haxe/std/js/html/compat/Uint8Array.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/_backend/html5/HTML5AudioSource.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/_backend/html5/HTML5GLRenderContext.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/_backend/html5/HTML5HTTPRequest.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/_backend/html5/HTML5Mouse.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/_backend/html5/HTML5Renderer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/_backend/html5/HTML5Window.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/app/Event.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/app/Future.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/app/Preloader.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/app/Promise.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/_macros/EventMacro.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/ui/Window.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/ui/Joystick.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/ui/Gamepad.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/system/ThreadPool.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/Renderer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/ui/Touch.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/ConsoleRenderContext.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/FlashRenderContext.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/Image.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/UInt8Array.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/math/color/ARGB.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/math/color/RGBA.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/math/color/BGRA.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/ImageBuffer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/cairo/Cairo.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/cairo/CairoFTFontFace.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/cairo/CairoFontFace.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/cairo/CairoFontOptions.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/cairo/CairoGlyph.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/cairo/CairoImageSurface.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/cairo/CairoPattern.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/cairo/CairoSurface.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/console/IndexBuffer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/console/Shader.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/console/VertexBuffer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/console/VertexOutput.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/format/BMP.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/format/JPEG.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/format/PNG.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/opengl/GL.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/opengl/GLES2Context.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/opengl/GLES3Context.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/BytePointer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/opengl/WebGL2Context.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/opengl/WebGLContext.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/utils/ImageCanvasUtil.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/graphics/utils/ImageDataUtil.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/math/ColorMatrix.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/Float32Array.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/math/Matrix3.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/math/Matrix4.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/math/Rectangle.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/math/Vector2.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/math/Vector4.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/ALAudioContext.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/ALCAudioContext.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/AudioBuffer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/AudioManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/AudioSource.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/FlashAudioContext.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/HTML5AudioContext.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/codecs/vorbis/VorbisComment.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/codecs/vorbis/VorbisFile.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/codecs/vorbis/VorbisInfo.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/openal/AL.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/openal/ALBuffer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/openal/ALC.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/openal/ALContext.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/openal/ALDevice.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/media/openal/ALSource.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/net/HTTPRequest.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/net/HTTPRequestHeader.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/Font.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/_macros/HTTPRequestMacro.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/Bytes.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/net/URLLoader.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/system/CFFI.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/system/CFFIPointer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/system/Clipboard.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/system/Display.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/system/DisplayMode.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/system/System.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/UInt16Array.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/Glyph.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/GlyphMetrics.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/GlyphPosition.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/TextDirection.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/TextLayout.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/TextScript.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/UTF8String.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/unifill/Utf16.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/unifill/Unifill.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/unifill/CodePoint.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/unifill/CodePointIter.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/unifill/Exception.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/unifill/InternalEncoding.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/unifill/InternalEncodingIter.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/text/unifill/Unicode.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/ui/GamepadAxis.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/ui/GamepadButton.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/ui/JoystickHatPosition.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/ui/KeyCode.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/ui/KeyModifier.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/ui/Mouse.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/ui/ScanCode.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/AssetCache.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/_macros/AssetsMacro.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/AssetLibrary.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/AssetManifest.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/Assets.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/UInt8ClampedArray.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/Int8Array.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/Int16Array.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/UInt32Array.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/Int32Array.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/Float64Array.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/DataPointer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/GLUtils.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/Log.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/compress/Deflate.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/compress/LZMA.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/lime/lime/utils/compress/Zlib.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/Lib.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/Lib.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/TouchData.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/AbstractBlendModeManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/AbstractFilterManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/AbstractMaskManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/AbstractRenderer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/AbstractShaderManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/DrawCommandBuffer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/DrawCommandReader.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/RenderSession.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/cairo/CairoBitmap.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/cairo/CairoDisplayObject.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/cairo/CairoGraphics.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/cairo/CairoRenderer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/cairo/CairoTextField.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/canvas/CanvasBitmap.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/canvas/CanvasBlendModeManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/canvas/CanvasDisplayObject.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/canvas/CanvasGraphics.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/canvas/CanvasMaskManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/canvas/CanvasRenderer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/canvas/CanvasShape.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/canvas/CanvasTextField.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/console/ConsoleRenderer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/dom/DOMBitmap.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/dom/DOMDisplayObject.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/dom/DOMMaskManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/dom/DOMRenderer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/dom/DOMShape.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/dom/DOMTextField.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/opengl/GLBitmap.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/opengl/GLBlendModeManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/opengl/GLDisplayObject.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/opengl/GLFilterManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/Shader.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/macros/ShaderMacro.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/opengl/GLMaskManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/opengl/GLRenderer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/opengl/GLShaderManager.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/renderer/opengl/GLShape.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/AGALConverter.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/Context3DStateCache.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/GLCompressedTextureFormats.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/GLUtils.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/SamplerState.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/atf/ATFReader.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/opengl/GLContext3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/opengl/GLCubeTexture.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/opengl/GLIndexBuffer3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/opengl/GLProgram3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/opengl/GLRectangleTexture.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/opengl/GLStage3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/opengl/GLTexture.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/opengl/GLTextureBase.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/opengl/GLVertexBuffer3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/stage3D/opengl/GLVideoTexture.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/swf/SWFLite.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/utils/AssetLibrary.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/swf/SWFLiteLibrary.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/symbols/SWFSymbol.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/symbols/BitmapSymbol.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/symbols/ButtonSymbol.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/symbols/DynamicTextSymbol.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/symbols/FontSymbol.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/symbols/ShapeSymbol.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/symbols/SpriteSymbol.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/symbols/StaticTextSymbol.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/text/HTMLParser.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/text/TextEngine.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/text/TextFormatRange.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/text/TextLayoutGroup.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/timeline/Frame.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/timeline/FrameObject.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/_internal/utils/PerlinNoise.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/Application.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/Bitmap.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/BitmapData.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/BlendMode.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/CapsStyle.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/FrameLabel.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/GradientType.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/Graphics.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/GraphicsBitmapFill.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/GraphicsEndFill.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/GraphicsGradientFill.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/GraphicsPath.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/GraphicsPathWinding.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/GraphicsSolidFill.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/GraphicsStroke.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/GraphicsTrianglePath.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/InterpolationMethod.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/JPEGEncoderOptions.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/JointStyle.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/LineScaleMode.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/Loader.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/LoaderInfo.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/MovieClip.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/PNGEncoderOptions.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/PixelSnapping.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/Preloader.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/ShaderData.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/ShaderInput.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/ShaderParameter.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/ShaderParameterType.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/ShaderPrecision.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/Shape.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/SimpleButton.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/SpreadMethod.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/Stage.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/Stage3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/StageAlign.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/StageDisplayState.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/StageQuality.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/StageScaleMode.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/TriangleCulling.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display/Window.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DBlendFactor.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DBufferUsage.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DCompareMode.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DMipFilter.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DProfile.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DProgramType.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DRenderMode.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DStencilAction.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DTextureFilter.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DTextureFormat.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DTriangleFace.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DVertexBufferFormat.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Context3DWrapMode.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/IndexBuffer3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/Program3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/VertexBuffer3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/textures/TextureBase.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/textures/CubeTexture.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/textures/RectangleTexture.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/textures/Texture.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/display3D/textures/VideoTexture.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/errors/Error.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/errors/ArgumentError.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/errors/IOError.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/errors/EOFError.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/errors/IllegalOperationError.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/errors/RangeError.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/errors/TypeError.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/Event.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/ActivityEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/TextEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/ErrorEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/FocusEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/FullScreenEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/GameInputEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/HTTPStatusEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/IOErrorEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/KeyboardEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/MouseEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/NetStatusEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/ProgressEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/SecurityErrorEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/TouchEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/UncaughtErrorEvent.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/events/UncaughtErrorEvents.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/external/ExternalInterface.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/filters/BitmapFilter.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/filters/BlurFilter.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/filters/ColorMatrixFilter.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/filters/DropShadowFilter.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/filters/GlowFilter.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/geom/ColorTransform.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/geom/Matrix.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/geom/Matrix3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/geom/Orientation3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/geom/Point.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/geom/Rectangle.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/geom/Transform.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/geom/Vector3D.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/media/ID3Info.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/media/Sound.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/media/SoundChannel.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/media/SoundLoaderContext.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/media/SoundTransform.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/media/SoundMixer.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/net/NetConnection.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/net/NetStream.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/net/URLLoaderDataFormat.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/net/URLRequest.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/net/URLRequestHeader.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/net/URLVariables.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/system/ApplicationDomain.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/system/LoaderContext.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/system/Security.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/system/SecurityDomain.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/AntiAliasType.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/Font.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/FontStyle.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/FontType.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/GridFitType.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/StaticText.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/TextField.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/TextFieldAutoSize.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/TextFieldType.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/TextFormat.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/TextFormatAlign.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/text/TextLineMetrics.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/ui/GameInput.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/ui/GameInputControl.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/ui/GameInputDevice.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/ui/Keyboard.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/ui/Mouse.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/ui/MouseCursor.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/utils/AssetCache.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/utils/Assets.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/utils/ByteArray.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/utils/CompressionAlgorithm.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/utils/Endian.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/utils/Object.hx","/usr/local/lib/haxe/std/js/_std/Math.hx","/Users/markus/Projects/wildworks/AJ-Next-Haxe/vendor/openfl/openfl/net/URLRequestDefaults.hx"],
"sourcesContent":["package lime.app;\n\n\nimport lime.graphics.RenderContext;\nimport lime.graphics.Renderer;\nimport lime.ui.Gamepad;\nimport lime.ui.GamepadAxis;\nimport lime.ui.GamepadButton;\nimport lime.ui.Joystick;\nimport lime.ui.JoystickHatPosition;\nimport lime.ui.KeyCode;\nimport lime.ui.KeyModifier;\nimport lime.ui.Touch;\nimport lime.ui.Window;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Module implements IModule {\n\t\n\t\n\t/**\n\t * Exit events are dispatched when the application is exiting\n\t */\n\tpublic var onExit = new Event<Int->Void> ();\n\t\n\t@:noCompletion private var __application:Application;\n\t@:noCompletion private var __preloader:Preloader;\n\t@:noCompletion private var __renderers:Array<Renderer>;\n\t@:noCompletion private var __windows:Array<Window>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t__renderers = new Array ();\n\t\t__windows = new Array ();\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function addRenderer (renderer:Renderer):Void {\n\t\t\n\t\trenderer.onRender.add (render.bind (renderer));\n\t\trenderer.onContextLost.add (onRenderContextLost.bind (renderer));\n\t\trenderer.onContextRestored.add (onRenderContextRestored.bind (renderer));\n\t\t\n\t\t__renderers.push (renderer);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function addWindow (window:Window):Void {\n\t\t\n\t\twindow.onActivate.add (onWindowActivate.bind (window));\n\t\twindow.onClose.add (__onWindowClose.bind (window), false, -10000);\n\t\twindow.onCreate.add (onWindowCreate.bind (window));\n\t\twindow.onDeactivate.add (onWindowDeactivate.bind (window));\n\t\twindow.onDropFile.add (onWindowDropFile.bind (window));\n\t\twindow.onEnter.add (onWindowEnter.bind (window));\n\t\twindow.onFocusIn.add (onWindowFocusIn.bind (window));\n\t\twindow.onFocusOut.add (onWindowFocusOut.bind (window));\n\t\twindow.onFullscreen.add (onWindowFullscreen.bind (window));\n\t\twindow.onKeyDown.add (onKeyDown.bind (window));\n\t\twindow.onKeyUp.add (onKeyUp.bind (window));\n\t\twindow.onLeave.add (onWindowLeave.bind (window));\n\t\twindow.onMinimize.add (onWindowMinimize.bind (window));\n\t\twindow.onMouseDown.add (onMouseDown.bind (window));\n\t\twindow.onMouseMove.add (onMouseMove.bind (window));\n\t\twindow.onMouseMoveRelative.add (onMouseMoveRelative.bind (window));\n\t\twindow.onMouseUp.add (onMouseUp.bind (window));\n\t\twindow.onMouseWheel.add (onMouseWheel.bind (window));\n\t\twindow.onMove.add (onWindowMove.bind (window));\n\t\twindow.onResize.add (onWindowResize.bind (window));\n\t\twindow.onRestore.add (onWindowRestore.bind (window));\n\t\twindow.onTextEdit.add (onTextEdit.bind (window));\n\t\twindow.onTextInput.add (onTextInput.bind (window));\n\t\t\n\t\tif (window.id > -1) {\n\t\t\t\n\t\t\tonWindowCreate (window);\n\t\t\t\n\t\t}\n\t\t\n\t\t__windows.push (window);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function registerModule (application:Application):Void {\n\t\t\n\t\t__application = application;\n\t\t\n\t\tapplication.onExit.add (onModuleExit, false, 0);\n\t\tapplication.onUpdate.add (update);\n\t\t\n\t\tfor (gamepad in Gamepad.devices) {\n\t\t\t\n\t\t\t__onGamepadConnect (gamepad);\n\t\t\t\n\t\t}\n\t\t\n\t\tGamepad.onConnect.add (__onGamepadConnect);\n\t\t\n\t\tfor (joystick in Joystick.devices) {\n\t\t\t\n\t\t\t__onJoystickConnect (joystick);\n\t\t\t\n\t\t}\n\t\t\n\t\tJoystick.onConnect.add (__onJoystickConnect);\n\t\t\n\t\tTouch.onCancel.add (onTouchCancel);\n\t\tTouch.onStart.add (onTouchStart);\n\t\tTouch.onMove.add (onTouchMove);\n\t\tTouch.onEnd.add (onTouchEnd);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function removeRenderer (renderer:Renderer):Void {\n\t\t\n\t\tif (renderer != null && __renderers.indexOf (renderer) > -1) {\n\t\t\t\n\t\t\t__renderers.remove (renderer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function removeWindow (window:Window):Void {\n\t\t\n\t\tif (window != null && __windows.indexOf (window) > -1) {\n\t\t\t\n\t\t\t__windows.remove (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function setPreloader (preloader:Preloader):Void {\n\t\t\n\t\tif (__preloader != null) {\n\t\t\t\n\t\t\t__preloader.onProgress.remove (onPreloadProgress);\n\t\t\t__preloader.onComplete.remove (onPreloadComplete);\n\t\t\t\n\t\t}\n\t\t\n\t\t__preloader = preloader;\n\t\t\n\t\tif (preloader == null || preloader.complete) {\n\t\t\t\n\t\t\tonPreloadComplete ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpreloader.onProgress.add (onPreloadProgress);\n\t\t\tpreloader.onComplete.add (onPreloadComplete);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function unregisterModule (application:Application):Void {\n\t\t\n\t\t__application.onExit.remove (onModuleExit);\n\t\t__application.onUpdate.remove (update);\n\t\t\n\t\tGamepad.onConnect.remove (__onGamepadConnect);\n\t\tJoystick.onConnect.remove (__onJoystickConnect);\n\t\tTouch.onCancel.remove (onTouchCancel);\n\t\tTouch.onStart.remove (onTouchStart);\n\t\tTouch.onMove.remove (onTouchMove);\n\t\tTouch.onEnd.remove (onTouchEnd);\n\t\t\n\t\tonModuleExit (0);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Called when a gamepad axis move event is fired\n\t * @param\tgamepad\tThe current gamepad\n\t * @param\taxis\tThe axis that was moved\n\t * @param\tvalue\tThe axis value (between 0 and 1)\n\t */\n\tpublic function onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a gamepad button down event is fired\n\t * @param\tgamepad\tThe current gamepad\n\t * @param\tbutton\tThe button that was pressed\n\t */\n\tpublic function onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void { }\n\t\n\t\n\t/**\n\t * Called when a gamepad button up event is fired\n\t * @param\tgamepad\tThe current gamepad\n\t * @param\tbutton\tThe button that was released\n\t */\n\tpublic function onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void { }\n\t\n\t\n\t/**\n\t * Called when a gamepad is connected\n\t * @param\tgamepad\tThe gamepad that was connected\n\t */\n\tpublic function onGamepadConnect (gamepad:Gamepad):Void { }\n\t\n\t\n\t/**\n\t * Called when a gamepad is disconnected\n\t * @param\tgamepad\tThe gamepad that was disconnected\n\t */\n\tpublic function onGamepadDisconnect (gamepad:Gamepad):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick axis move event is fired\n\t * @param\tjoystick\tThe current joystick\n\t * @param\taxis\tThe axis that was moved\n\t * @param\tvalue\tThe axis value (between 0 and 1)\n\t */\n\tpublic function onJoystickAxisMove (joystick:Joystick, axis:Int, value:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick button down event is fired\n\t * @param\tjoystick\tThe current joystick\n\t * @param\tbutton\tThe button that was pressed\n\t */\n\tpublic function onJoystickButtonDown (joystick:Joystick, button:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick button up event is fired\n\t * @param\tjoystick\tThe current joystick\n\t * @param\tbutton\tThe button that was released\n\t */\n\tpublic function onJoystickButtonUp (joystick:Joystick, button:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick is connected\n\t * @param\tjoystick\tThe joystick that was connected\n\t */\n\tpublic function onJoystickConnect (joystick:Joystick):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick is disconnected\n\t * @param\tjoystick\tThe joystick that was disconnected\n\t */\n\tpublic function onJoystickDisconnect (joystick:Joystick):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick hat move event is fired\n\t * @param\tjoystick\tThe current joystick\n\t * @param\that\tThe hat that was moved\n\t * @param\tposition\tThe current hat position\n\t */\n\tpublic function onJoystickHatMove (joystick:Joystick, hat:Int, position:JoystickHatPosition):Void { }\n\t\n\t\n\t/**\n\t * Called when a joystick axis move event is fired\n\t * @param\tjoystick\tThe current joystick\n\t * @param\ttrackball\tThe trackball that was moved\n\t * @param\tx\tThe x movement of the trackball (between 0 and 1)\n\t * @param\ty\tThe y movement of the trackball (between 0 and 1)\n\t */\n\tpublic function onJoystickTrackballMove (joystick:Joystick, trackball:Int, x:Float, y:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a key down event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tkeyCode\tThe code of the key that was pressed\n\t * @param\tmodifier\tThe modifier of the key that was pressed\n\t */\n\tpublic function onKeyDown (window:Window, keyCode:KeyCode, modifier:KeyModifier):Void { }\n\t\n\t\n\t/**\n\t * Called when a key up event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tkeyCode\tThe code of the key that was released\n\t * @param\tmodifier\tThe modifier of the key that was released\n\t */\n\tpublic function onKeyUp (window:Window, keyCode:KeyCode, modifier:KeyModifier):Void { }\n\t\n\t\n\t/**\n\t * Called when the module is exiting\n\t */\n\tpublic function onModuleExit (code:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse down event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tx\tThe current x coordinate of the mouse\n\t * @param\ty\tThe current y coordinate of the mouse\n\t * @param\tbutton\tThe ID of the mouse button that was pressed\n\t */\n\tpublic function onMouseDown (window:Window, x:Float, y:Float, button:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse move event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tx\tThe current x coordinate of the mouse\n\t * @param\ty\tThe current y coordinate of the mouse\n\t * @param\tbutton\tThe ID of the mouse button that was pressed\n\t */\n\tpublic function onMouseMove (window:Window, x:Float, y:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse move relative event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tx\tThe x movement of the mouse\n\t * @param\ty\tThe y movement of the mouse\n\t * @param\tbutton\tThe ID of the mouse button that was pressed\n\t */\n\tpublic function onMouseMoveRelative (window:Window, x:Float, y:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse up event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tx\tThe current x coordinate of the mouse\n\t * @param\ty\tThe current y coordinate of the mouse\n\t * @param\tbutton\tThe ID of the button that was released\n\t */\n\tpublic function onMouseUp (window:Window, x:Float, y:Float, button:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a mouse wheel event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tdeltaX\tThe amount of horizontal scrolling (if applicable)\n\t * @param\tdeltaY\tThe amount of vertical scrolling (if applicable)\n\t */\n\tpublic function onMouseWheel (window:Window, deltaX:Float, deltaY:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a preload complete event is fired\n\t */\n\tpublic function onPreloadComplete ():Void { }\n\t\n\t\n\t/**\n\t * Called when a preload progress event is fired\n\t * @param\tloaded\tThe number of items that are loaded\n\t * @param\ttotal\tThe total number of items will be loaded\n\t */\n\tpublic function onPreloadProgress (loaded:Int, total:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a render context is lost\n\t * @param\trenderer\tThe renderer dispatching the event\n\t */\n\tpublic function onRenderContextLost (renderer:Renderer):Void { }\n\t\n\t\n\t/**\n\t * Called when a render context is restored\n\t * @param\trenderer\tThe renderer dispatching the event\n\t * @param\tcontext\tThe current render context\n\t */\n\tpublic function onRenderContextRestored (renderer:Renderer, context:RenderContext):Void { }\n\t\n\t\n\t/**\n\t * Called when a text edit event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\ttext\tThe current replacement text\n\t * @param\tstart\tThe starting index for the edit\n\t * @param\tlength\tThe length of the edit\n\t */\n\tpublic function onTextEdit (window:Window, text:String, start:Int, length:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a text input event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\ttext\tThe current input text\n\t */\n\tpublic function onTextInput (window:Window, text:String):Void { }\n\t\n\t\n\t/**\n\t * Called when a touch cancel event is fired\n\t * @param\ttouch\tThe current touch object\n\t */\n\tpublic function onTouchCancel (touch:Touch):Void { }\n\t\n\t\n\t/**\n\t * Called when a touch end event is fired\n\t * @param\ttouch\tThe current touch object\n\t */\n\tpublic function onTouchEnd (touch:Touch):Void { }\n\t\n\t\n\t/**\n\t * Called when a touch move event is fired\n\t * @param\ttouch\tThe current touch object\n\t */\n\tpublic function onTouchMove (touch:Touch):Void { }\n\t\n\t\n\t/**\n\t * Called when a touch start event is fired\n\t * @param\ttouch\tThe current touch object\n\t */\n\tpublic function onTouchStart (touch:Touch):Void { }\n\t\n\t\n\t/**\n\t * Called when a window activate event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowActivate (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window close event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowClose (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window create event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowCreate (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window deactivate event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowDeactivate (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window drop file event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowDropFile (window:Window, file:String):Void { }\n\t\n\t\n\t/**\n\t * Called when a window enter event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowEnter (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window focus in event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowFocusIn (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window focus out event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowFocusOut (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window enters fullscreen\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowFullscreen (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window leave event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowLeave (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window move event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\tx\tThe x position of the window in desktop coordinates\n\t * @param\ty\tThe y position of the window in desktop coordinates\n\t */\n\tpublic function onWindowMove (window:Window, x:Float, y:Float):Void { }\n\t\n\t\n\t/**\n\t * Called when a window is minimized\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowMinimize (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a window resize event is fired\n\t * @param\twindow\tThe window dispatching the event\n\t * @param\twidth\tThe width of the window\n\t * @param\theight\tThe height of the window\n\t */\n\tpublic function onWindowResize (window:Window, width:Int, height:Int):Void { }\n\t\n\t\n\t/**\n\t * Called when a window is restored from being minimized or fullscreen\n\t * @param\twindow\tThe window dispatching the event\n\t */\n\tpublic function onWindowRestore (window:Window):Void { }\n\t\n\t\n\t/**\n\t * Called when a render event is fired\n\t * @param\trenderer\tThe renderer dispatching the event\n\t */\n\tpublic function render (renderer:Renderer):Void { }\n\t\n\t\n\t/**\n\t * Called when an update event is fired\n\t * @param\tdeltaTime\tThe amount of time in milliseconds that has elapsed since the last update\n\t */\n\tpublic function update (deltaTime:Int):Void { }\n\t\n\t\n\t@:noCompletion private function __onGamepadConnect (gamepad:Gamepad):Void {\n\t\t\n\t\tonGamepadConnect (gamepad);\n\t\t\n\t\tgamepad.onAxisMove.add (onGamepadAxisMove.bind (gamepad));\n\t\tgamepad.onButtonDown.add (onGamepadButtonDown.bind (gamepad));\n\t\tgamepad.onButtonUp.add (onGamepadButtonUp.bind (gamepad));\n\t\tgamepad.onDisconnect.add (onGamepadDisconnect.bind (gamepad));\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __onJoystickConnect (joystick:Joystick):Void {\n\t\t\n\t\tonJoystickConnect (joystick);\n\t\t\n\t\tjoystick.onAxisMove.add (onJoystickAxisMove.bind (joystick));\n\t\tjoystick.onButtonDown.add (onJoystickButtonDown.bind (joystick));\n\t\tjoystick.onButtonUp.add (onJoystickButtonUp.bind (joystick));\n\t\tjoystick.onDisconnect.add (onJoystickDisconnect.bind (joystick));\n\t\tjoystick.onHatMove.add (onJoystickHatMove.bind (joystick));\n\t\tjoystick.onTrackballMove.add (onJoystickTrackballMove.bind (joystick));\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __onWindowClose (window:Window):Void {\n\t\t\n\t\tonWindowClose (window);\n\t\t\n\t\t__windows.remove (window);\n\t\t\n\t}\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport js.html.KeyboardEvent;\nimport js.Browser;\nimport lime.app.Application;\nimport lime.app.Config;\nimport lime.media.AudioManager;\nimport lime.graphics.Renderer;\nimport lime.ui.GamepadAxis;\nimport lime.ui.KeyCode;\nimport lime.ui.KeyModifier;\nimport lime.ui.Gamepad;\nimport lime.ui.GamepadButton;\nimport lime.ui.Joystick;\nimport lime.ui.Window;\n\n@:access(lime._backend.html5.HTML5Window)\n@:access(lime.app.Application)\n@:access(lime.graphics.Renderer)\n@:access(lime.ui.Gamepad)\n@:access(lime.ui.Joystick)\n@:access(lime.ui.Window)\n\n\nclass HTML5Application {\n\t\n\t\n\tprivate var gameDeviceCache = new Map<Int, GameDeviceData> ();\n\t\n\tprivate var currentUpdate:Float;\n\tprivate var deltaTime:Float;\n\tprivate var framePeriod:Float;\n\tprivate var lastUpdate:Float;\n\tprivate var nextUpdate:Float;\n\tprivate var parent:Application;\n\t#if stats\n\tprivate var stats:Dynamic;\n\t#end\n\t\n\t\n\tpublic inline function new (parent:Application) {\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t\tcurrentUpdate = 0;\n\t\tlastUpdate = 0;\n\t\tnextUpdate = 0;\n\t\tframePeriod = -1;\n\t\t\n\t\tAudioManager.init ();\n\t\t\n\t}\n\t\n\t\n\tprivate function convertKeyCode (keyCode:Int):KeyCode {\n\t\t\n\t\tif (keyCode >= 65 && keyCode <= 90) {\n\t\t\t\n\t\t\treturn keyCode + 32;\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (keyCode) {\n\t\t\t\n\t\t\tcase 16: return KeyCode.LEFT_SHIFT;\n\t\t\tcase 17: return KeyCode.LEFT_CTRL;\n\t\t\tcase 18: return KeyCode.LEFT_ALT;\n\t\t\tcase 20: return KeyCode.CAPS_LOCK;\n\t\t\tcase 33: return KeyCode.PAGE_UP;\n\t\t\tcase 34: return KeyCode.PAGE_DOWN;\n\t\t\tcase 35: return KeyCode.END;\n\t\t\tcase 36: return KeyCode.HOME;\n\t\t\tcase 37: return KeyCode.LEFT;\n\t\t\tcase 38: return KeyCode.UP;\n\t\t\tcase 39: return KeyCode.RIGHT;\n\t\t\tcase 40: return KeyCode.DOWN;\n\t\t\tcase 45: return KeyCode.INSERT;\n\t\t\tcase 46: return KeyCode.DELETE;\n\t\t\tcase 96: return KeyCode.NUMPAD_0;\n\t\t\tcase 97: return KeyCode.NUMPAD_1;\n\t\t\tcase 98: return KeyCode.NUMPAD_2;\n\t\t\tcase 99: return KeyCode.NUMPAD_3;\n\t\t\tcase 100: return KeyCode.NUMPAD_4;\n\t\t\tcase 101: return KeyCode.NUMPAD_5;\n\t\t\tcase 102: return KeyCode.NUMPAD_6;\n\t\t\tcase 103: return KeyCode.NUMPAD_7;\n\t\t\tcase 104: return KeyCode.NUMPAD_8;\n\t\t\tcase 105: return KeyCode.NUMPAD_9;\n\t\t\tcase 106: return KeyCode.NUMPAD_MULTIPLY;\n\t\t\tcase 107: return KeyCode.NUMPAD_PLUS;\n\t\t\tcase 109: return KeyCode.NUMPAD_MINUS;\n\t\t\tcase 110: return KeyCode.NUMPAD_PERIOD;\n\t\t\tcase 111: return KeyCode.NUMPAD_DIVIDE;\n\t\t\tcase 112: return KeyCode.F1;\n\t\t\tcase 113: return KeyCode.F2;\n\t\t\tcase 114: return KeyCode.F3;\n\t\t\tcase 115: return KeyCode.F4;\n\t\t\tcase 116: return KeyCode.F5;\n\t\t\tcase 117: return KeyCode.F6;\n\t\t\tcase 118: return KeyCode.F7;\n\t\t\tcase 119: return KeyCode.F8;\n\t\t\tcase 120: return KeyCode.F9;\n\t\t\tcase 121: return KeyCode.F10;\n\t\t\tcase 122: return KeyCode.F11;\n\t\t\tcase 123: return KeyCode.F12;\n\t\t\tcase 124: return KeyCode.F13;\n\t\t\tcase 125: return KeyCode.F14;\n\t\t\tcase 126: return KeyCode.F15;\n\t\t\tcase 144: return KeyCode.NUM_LOCK;\n\t\t\tcase 186: return KeyCode.SEMICOLON;\n\t\t\tcase 187: return KeyCode.EQUALS;\n\t\t\tcase 188: return KeyCode.COMMA;\n\t\t\tcase 189: return KeyCode.MINUS;\n\t\t\tcase 190: return KeyCode.PERIOD;\n\t\t\tcase 191: return KeyCode.SLASH;\n\t\t\tcase 192: return KeyCode.GRAVE;\n\t\t\tcase 219: return KeyCode.LEFT_BRACKET;\n\t\t\tcase 220: return KeyCode.BACKSLASH;\n\t\t\tcase 221: return KeyCode.RIGHT_BRACKET;\n\t\t\tcase 222: return KeyCode.SINGLE_QUOTE;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn keyCode;\n\t\t\n\t}\n\t\n\t\n\tpublic function create (config:Config):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function exec ():Int {\n\t\t\n\t\tBrowser.window.addEventListener (\"keydown\", handleKeyEvent, false);\n\t\tBrowser.window.addEventListener (\"keyup\", handleKeyEvent, false);\n\t\tBrowser.window.addEventListener (\"focus\", handleWindowEvent, false);\n\t\tBrowser.window.addEventListener (\"blur\", handleWindowEvent, false);\n\t\tBrowser.window.addEventListener (\"resize\", handleWindowEvent, false);\n\t\tBrowser.window.addEventListener (\"beforeunload\", handleWindowEvent, false);\n\t\t\n\t\t#if stats\n\t\tstats = untyped __js__(\"new Stats ()\");\n\t\tstats.domElement.style.position = \"absolute\";\n\t\tstats.domElement.style.top = \"0px\";\n\t\tBrowser.document.body.appendChild (stats.domElement);\n\t\t#end\n\t\t\n\t\tuntyped __js__ (\"\n\t\t\tif (!CanvasRenderingContext2D.prototype.isPointInStroke) {\n\t\t\t\tCanvasRenderingContext2D.prototype.isPointInStroke = function (path, x, y) {\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (!CanvasRenderingContext2D.prototype.isPointInPath) {\n\t\t\t\tCanvasRenderingContext2D.prototype.isPointInPath = function (path, x, y) {\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\tif ('performance' in window == false) {\n\t\t\t\twindow.performance = {};\n\t\t\t}\n\t\t\t\n\t\t\tif ('now' in window.performance == false) {\n\t\t\t\tvar offset = Date.now();\n\t\t\t\tif (performance.timing && performance.timing.navigationStart) {\n\t\t\t\t\toffset = performance.timing.navigationStart\n\t\t\t\t}\n\t\t\t\twindow.performance.now = function now() {\n\t\t\t\t\treturn Date.now() - offset;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar lastTime = 0;\n\t\t\tvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\t\t\tfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n\t\t\t\twindow.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n\t\t\t\twindow.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n\t\t\t}\n\t\t\t\n\t\t\tif (!window.requestAnimationFrame)\n\t\t\t\twindow.requestAnimationFrame = function(callback, element) {\n\t\t\t\t\tvar currTime = new Date().getTime();\n\t\t\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\t\t\tvar id = window.setTimeout(function() { callback(currTime + timeToCall); }, \n\t\t\t\t\t  timeToCall);\n\t\t\t\t\tlastTime = currTime + timeToCall;\n\t\t\t\t\treturn id;\n\t\t\t\t};\n\t\t\t\n\t\t\tif (!window.cancelAnimationFrame)\n\t\t\t\twindow.cancelAnimationFrame = function(id) {\n\t\t\t\t\tclearTimeout(id);\n\t\t\t\t};\n\t\t\t\n\t\t\twindow.requestAnimFrame = window.requestAnimationFrame;\n\t\t\");\n\t\t\n\t\tlastUpdate = Date.now ().getTime ();\n\t\t\n\t\thandleApplicationEvent ();\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function exit ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function getFrameRate ():Float {\n\t\t\n\t\tif (framePeriod < 0) {\n\t\t\t\n\t\t\treturn 60;\n\t\t\t\n\t\t} else if (framePeriod == 1000) {\n\t\t\t\n\t\t\treturn 0;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn 1000 / framePeriod;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleApplicationEvent (?__):Void {\n\t\t\n\t\tif (parent.window != null) {\n\t\t\t\n\t\t\tparent.window.backend.updateSize ();\n\t\t\t\n\t\t}\n\t\t\n\t\tupdateGameDevices ();\n\t\t\n\t\tcurrentUpdate = Date.now ().getTime ();\n\t\t\n\t\tif (currentUpdate >= nextUpdate) {\n\t\t\t\n\t\t\t#if stats\n\t\t\tstats.begin ();\n\t\t\t#end\n\t\t\t\n\t\t\tdeltaTime = currentUpdate - lastUpdate;\n\t\t\t\n\t\t\tparent.onUpdate.dispatch (Std.int (deltaTime));\n\t\t\t\n\t\t\tif (parent.renderer != null && parent.renderer.context != null) {\n\t\t\t\t\n\t\t\t\tparent.renderer.render ();\n\t\t\t\tparent.renderer.onRender.dispatch ();\n\t\t\t\t\n\t\t\t\tif (!parent.renderer.onRender.canceled) {\n\t\t\t\t\t\n\t\t\t\t\tparent.renderer.flip ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#if stats\n\t\t\tstats.end ();\n\t\t\t#end\n\t\t\t\n\t\t\tif (framePeriod < 0) {\n\t\t\t\t\n\t\t\t\tnextUpdate = currentUpdate;\n\t\t\t\tnextUpdate = currentUpdate;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tnextUpdate = currentUpdate + framePeriod;\n\t\t\t\t\n\t\t\t\t//while (nextUpdate <= currentUpdate) {\n\t\t\t\t\t//\n\t\t\t\t\t//nextUpdate += framePeriod;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tlastUpdate = currentUpdate;\n\t\t\t\n\t\t}\n\t\t\n\t\tBrowser.window.requestAnimationFrame (cast handleApplicationEvent);\n\t\t\n\t}\n\t\n\t\n\tprivate function handleKeyEvent (event:KeyboardEvent):Void {\n\t\t\n\t\tif (parent.window != null) {\n\t\t\t\n\t\t\t// space and arrow keys\n\t\t\t\n\t\t\t// switch (event.keyCode) {\n\t\t\t\t\n\t\t\t// \tcase 32, 37, 38, 39, 40: event.preventDefault ();\n\t\t\t\t\n\t\t\t// }\n\t\t\t\n\t\t\t// TODO: Use event.key instead where supported\n\t\t\t\n\t\t\tvar keyCode = cast convertKeyCode (event.keyCode != null ? event.keyCode : event.which);\n\t\t\tvar modifier = (event.shiftKey ? (KeyModifier.SHIFT) : 0) | (event.ctrlKey ? (KeyModifier.CTRL) : 0) | (event.altKey ? (KeyModifier.ALT) : 0) | (event.metaKey ? (KeyModifier.META) : 0);\n\t\t\t\n\t\t\tif (event.type == \"keydown\") {\n\t\t\t\t\n\t\t\t\tparent.window.onKeyDown.dispatch (keyCode, modifier);\n\t\t\t\t\n\t\t\t\tif (parent.window.onKeyDown.canceled) {\n\t\t\t\t\t\n\t\t\t\t\tevent.preventDefault ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tparent.window.onKeyUp.dispatch (keyCode, modifier);\n\t\t\t\t\n\t\t\t\tif (parent.window.onKeyUp.canceled) {\n\t\t\t\t\t\n\t\t\t\t\tevent.preventDefault ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleWindowEvent (event:js.html.Event):Void {\n\t\t\n\t\tif (parent.window != null) {\n\t\t\t\n\t\t\tswitch (event.type) {\n\t\t\t\t\n\t\t\t\tcase \"focus\":\n\t\t\t\t\t\n\t\t\t\t\tparent.window.onFocusIn.dispatch ();\n\t\t\t\t\tparent.window.onActivate.dispatch ();\n\t\t\t\t\n\t\t\t\tcase \"blur\":\n\t\t\t\t\t\n\t\t\t\t\tparent.window.onFocusOut.dispatch ();\n\t\t\t\t\tparent.window.onDeactivate.dispatch ();\n\t\t\t\t\n\t\t\t\tcase \"resize\":\n\t\t\t\t\t\n\t\t\t\t\tparent.window.backend.handleResizeEvent (event);\n\t\t\t\t\n\t\t\t\tcase \"beforeunload\":\n\t\t\t\t\t\n\t\t\t\t\tif (!event.defaultPrevented) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.window.onClose.dispatch ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (parent.window != null && parent.window.onClose.canceled) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tevent.preventDefault ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function setFrameRate (value:Float):Float {\n\t\t\n\t\tif (value >= 60) {\n\t\t\t\n\t\t\tframePeriod = -1;\n\t\t\t\n\t\t} else if (value > 0) {\n\t\t\t\n\t\t\tframePeriod = 1000 / value;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tframePeriod = 1000;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function updateGameDevices ():Void {\n\t\t\n\t\tvar devices = Joystick.__getDeviceData ();\n\t\tif (devices == null) return;\n\t\t\n\t\tvar id, gamepad, joystick, data:Dynamic, cache;\n\t\t\n\t\tfor (i in 0...devices.length) {\n\t\t\t\n\t\t\tid = i;\n\t\t\tdata = devices[id];\n\t\t\t\n\t\t\tif (data == null) continue;\n\t\t\t\n\t\t\tif (!gameDeviceCache.exists (id)) {\n\t\t\t\t\n\t\t\t\tcache = new GameDeviceData ();\n\t\t\t\tcache.id = id;\n\t\t\t\tcache.connected = data.connected;\n\t\t\t\t\n\t\t\t\tfor (i in 0...data.buttons.length) {\n\t\t\t\t\t\n\t\t\t\t\tcache.buttons.push (data.buttons[i].value);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (i in 0...data.axes.length) {\n\t\t\t\t\t\n\t\t\t\t\tcache.axes.push (data.axes[i]);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (data.mapping == \"standard\") {\n\t\t\t\t\t\n\t\t\t\t\tcache.isGamepad = true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgameDeviceCache.set (id, cache);\n\t\t\t\t\n\t\t\t\tif (data.connected) {\n\t\t\t\t\t\n\t\t\t\t\tJoystick.__connect (id);\n\t\t\t\t\t\n\t\t\t\t\tif (cache.isGamepad) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tGamepad.__connect (id);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcache = gameDeviceCache.get (id);\n\t\t\t\n\t\t\tjoystick = Joystick.devices.get (id);\n\t\t\tgamepad = Gamepad.devices.get (id);\n\t\t\t\n\t\t\tif (data.connected) {\n\t\t\t\t\n\t\t\t\tvar button:GamepadButton;\n\t\t\t\tvar value:Float;\n\t\t\t\t\n\t\t\t\tfor (i in 0...data.buttons.length) {\n\t\t\t\t\t\n\t\t\t\t\tvalue = data.buttons[i].value;\n\t\t\t\t\t\n\t\t\t\t\tif (value != cache.buttons[i]) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (i == 6) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tjoystick.onAxisMove.dispatch (data.axes.length, value);\n\t\t\t\t\t\t\tif (gamepad != null) gamepad.onAxisMove.dispatch (GamepadAxis.TRIGGER_LEFT, value);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else if (i == 7) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tjoystick.onAxisMove.dispatch (data.axes.length + 1, value);\n\t\t\t\t\t\t\tif (gamepad != null) gamepad.onAxisMove.dispatch (GamepadAxis.TRIGGER_RIGHT, value);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (value > 0) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tjoystick.onButtonDown.dispatch (i);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tjoystick.onButtonUp.dispatch (i);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (gamepad != null) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tbutton = switch (i) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcase 0: GamepadButton.A;\n\t\t\t\t\t\t\t\t\tcase 1: GamepadButton.B;\n\t\t\t\t\t\t\t\t\tcase 2: GamepadButton.X;\n\t\t\t\t\t\t\t\t\tcase 3: GamepadButton.Y;\n\t\t\t\t\t\t\t\t\tcase 4: GamepadButton.LEFT_SHOULDER;\n\t\t\t\t\t\t\t\t\tcase 5: GamepadButton.RIGHT_SHOULDER;\n\t\t\t\t\t\t\t\t\tcase 8: GamepadButton.BACK;\n\t\t\t\t\t\t\t\t\tcase 9: GamepadButton.START;\n\t\t\t\t\t\t\t\t\tcase 10: GamepadButton.LEFT_STICK;\n\t\t\t\t\t\t\t\t\tcase 11: GamepadButton.RIGHT_STICK;\n\t\t\t\t\t\t\t\t\tcase 12: GamepadButton.DPAD_UP;\n\t\t\t\t\t\t\t\t\tcase 13: GamepadButton.DPAD_DOWN;\n\t\t\t\t\t\t\t\t\tcase 14: GamepadButton.DPAD_LEFT;\n\t\t\t\t\t\t\t\t\tcase 15: GamepadButton.DPAD_RIGHT;\n\t\t\t\t\t\t\t\t\tcase 16: GamepadButton.GUIDE;\n\t\t\t\t\t\t\t\t\tdefault: continue;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (value > 0) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tgamepad.onButtonDown.dispatch (button);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tgamepad.onButtonUp.dispatch (button);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcache.buttons[i] = value;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (i in 0...data.axes.length) {\n\t\t\t\t\t\n\t\t\t\t\tif (data.axes[i] != cache.axes[i]) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tjoystick.onAxisMove.dispatch (i, data.axes[i]);\n\t\t\t\t\t\tif (gamepad != null) gamepad.onAxisMove.dispatch (i, data.axes[i]);\n\t\t\t\t\t\tcache.axes[i] = data.axes[i];\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (cache.connected) {\n\t\t\t\t\n\t\t\t\tcache.connected = false;\n\t\t\t\t\n\t\t\t\tJoystick.__disconnect (id);\n\t\t\t\tGamepad.__disconnect (id);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass GameDeviceData {\n\t\n\t\n\tpublic var connected:Bool;\n\tpublic var id:Int;\n\tpublic var isGamepad:Bool;\n\tpublic var buttons:Array<Float>;\n\tpublic var axes:Array<Float>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tconnected = true;\n\t\tbuttons = [];\n\t\taxes = [];\n\t\t\n\t}\n\t\n\t\n}","package lime.app;\n\n\nimport lime.graphics.Renderer;\nimport lime.system.System;\nimport lime.ui.Window;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n/** \n * The Application class forms the foundation for most Lime projects.\n * It is common to extend this class in a main class. It is then possible\n * to override \"on\" functions in the class in order to handle standard events\n * that are relevant.\n */\nclass Application extends Module {\n\t\n\t\n\t/**\n\t * The current Application instance that is executing\n\t**/\n\tpublic static var current (default, null):Application;\n\t\n\t\n\t/**\n\t * Configuration values for the application, such as window options or a package name\n\t**/\n\tpublic var config (default, null):Config;\n\t\n\t/**\n\t * The current frame rate (measured in frames-per-second) of the application.\n\t *\n\t * On some platforms, a frame rate of 60 or greater may imply vsync, which will\n\t * perform more quickly on displays with a higher refresh rate\n\t**/\n\tpublic var frameRate (get, set):Float;\n\t\n\t/**\n\t * A list of currently attached Module instances\n\t**/\n\tpublic var modules (default, null):Array<IModule>;\n\t\n\t/**\n\t * The Preloader for the current Application\n\t**/\n\tpublic var preloader (get, null):Preloader;\n\t\n\t/**\n\t * Update events are dispatched each frame (usually just before rendering)\n\t */\n\tpublic var onUpdate = new Event<Int->Void> ();\n\t\n\t/**\n\t * The Renderer associated with this Application, or the first Renderer\n\t * if there are multiple Renderer instances\n\t**/\n\tpublic var renderer (get, null):Renderer;\n\t\n\t/**\n\t * A list of Renderer instances associated with this Application\n\t**/\n\tpublic var renderers (get, null):Array<Renderer>;\n\t\n\t/**\n\t * The Window associated with this Application, or the first Window\n\t * if there are multiple Windows active\n\t**/\n\tpublic var window (get, null):Window;\n\t\n\t/**\n\t * A list of active Window instances associated with this Application\n\t**/\n\tpublic var windows (get, null):Array<Window>;\n\t\n\t@:noCompletion private var backend:ApplicationBackend;\n\t@:noCompletion private var windowByID:Map<Int, Window>;\n\t\n\t\n\tprivate static function __init__ () {\n\t\t\n\t\tvar init = ApplicationBackend;\n\t\t#if (js && html5 && es5get)\n\t\tvar p = untyped Application.prototype;\n\t\tuntyped Object.defineProperties (p, {\n\t\t\t\"frameRate\": { get: p.get_frameRate, set: p.set_frameRate },\n\t\t\t\"preloader\": { get: p.get_preloader },\n\t\t\t\"renderer\": { get: p.get_renderer },\n\t\t\t\"renderers\": { get: p.get_renderers },\n\t\t\t\"window\": { get: p.get_window },\n\t\t\t\"windows\": { get: p.get_windows }\n\t\t});\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Creates a new Application instance\n\t**/\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tif (Application.current == null) {\n\t\t\t\n\t\t\tApplication.current = this;\n\t\t\t\n\t\t}\n\t\t\n\t\tmodules = new Array ();\n\t\twindowByID = new Map ();\n\t\t\n\t\tbackend = new ApplicationBackend (this);\n\t\t\n\t\tregisterModule (this);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds a new module to the Application\n\t * @param\tmodule\tA module to add\n\t */\n\tpublic function addModule (module:IModule):Void {\n\t\t\n\t\tmodule.registerModule (this);\n\t\tmodules.push (module);\n\t\t\n\t\tif (__renderers.length > 0) {\n\t\t\t\n\t\t\tfor (renderer in __renderers) {\n\t\t\t\t\n\t\t\t\tmodule.addRenderer (renderer);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__windows.length > 0) {\n\t\t\t\n\t\t\tfor (window in __windows) {\n\t\t\t\t\n\t\t\t\tmodule.addWindow (window);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tmodule.setPreloader (__preloader);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds a new Renderer to the Application. By default, this is\n\t * called automatically by create()\n\t * @param\trenderer\tA Renderer object to add\n\t */\n\tpublic override function addRenderer (renderer:Renderer):Void {\n\t\t\n\t\tsuper.addRenderer (renderer);\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.addRenderer (renderer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Initializes the Application, using the settings defined in\n\t * the config instance. By default, this is called automatically\n\t * when building the project using Lime's command-line tools\n\t * @param\tconfig\tA Config object\n\t */\n\tpublic function create (config:Config):Void {\n\t\t\n\t\tthis.config = config;\n\t\t\n\t\tbackend.create (config);\n\t\t\n\t\tif (config != null) {\n\t\t\t\n\t\t\tif (Reflect.hasField (config, \"fps\")) {\n\t\t\t\t\n\t\t\t\tframeRate = config.fps;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (Reflect.hasField (config, \"windows\")) {\n\t\t\t\t\n\t\t\t\tfor (windowConfig in config.windows) {\n\t\t\t\t\t\n\t\t\t\t\tvar window = new Window (windowConfig);\n\t\t\t\t\tcreateWindow (window);\n\t\t\t\t\t\n\t\t\t\t\t#if ((flash && !air) || html5)\n\t\t\t\t\tbreak;\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (__preloader == null || __preloader.complete) {\n\t\t\t\t\n\t\t\t\tsetPreloader (__preloader);\n\t\t\t\t\n\t\t\t\tfor (module in modules) {\n\t\t\t\t\t\n\t\t\t\t\tsetPreloader (__preloader);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Adds a new Window to the Application. By default, this is\n\t * called automatically by create()\n\t * @param\twindow\tA Window object to add\n\t */\n\tpublic function createWindow (window:Window):Void {\n\t\t\n\t\tsuper.addWindow (window);\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.addWindow (window);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (window.renderer == null) {\n\t\t\t\n\t\t\tvar renderer = new Renderer (window);\n\t\t\taddRenderer (renderer);\n\t\t\t\n\t\t}\n\t\t\n\t\twindow.create (this);\n\t\t//__windows.push (window);\n\t\twindowByID.set (window.id, window);\n\t\t\n\t\twindow.onCreate.dispatch ();\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Execute the Application. On native platforms, this method\n\t * blocks until the application is finished running. On other \n\t * platforms, it will return immediately\n\t * @return An exit code, 0 if there was no error\n\t */\n\tpublic function exec ():Int {\n\t\t\n\t\tApplication.current = this;\n\t\t\n\t\treturn backend.exec ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function onModuleExit (code:Int):Void {\n\t\t\n\t\tbackend.exit ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function onWindowClose (window:Window):Void {\n\t\t\n\t\tremoveWindow (window);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Removes a module from the Application\n\t * @param\tmodule\tA module to remove\n\t */\n\tpublic function removeModule (module:IModule):Void {\n\t\t\n\t\tif (module != null) {\n\t\t\t\n\t\t\tmodule.unregisterModule (this);\n\t\t\tmodules.remove (module);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public override function removeWindow (window:Window):Void {\n\t\t\n\t\tif (window != null && windowByID.exists (window.id)) {\n\t\t\t\n\t\t\t__windows.remove (window);\n\t\t\twindowByID.remove (window.id);\n\t\t\twindow.close ();\n\t\t\t\n\t\t\tif (window.renderer != null) {\n\t\t\t\t\n\t\t\t\tremoveRenderer (window.renderer);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (this.window == window) {\n\t\t\t\t\n\t\t\t\tthis.window = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (__windows.length == 0) {\n\t\t\t\t\n\t\t\t\tSystem.exit (0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public override function setPreloader (preloader:Preloader):Void {\n\t\t\n\t\tsuper.setPreloader (preloader);\n\t\t\n\t\tfor (module in modules) {\n\t\t\t\n\t\t\tmodule.setPreloader (preloader);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_frameRate ():Float {\n\t\t\n\t\treturn backend.getFrameRate ();\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_frameRate (value:Float):Float {\n\t\t\n\t\treturn backend.setFrameRate (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_preloader ():Preloader {\n\t\t\n\t\treturn __preloader;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_renderer ():Renderer {\n\t\t\n\t\treturn __renderers[0];\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_renderers ():Array<Renderer> {\n\t\t\n\t\treturn __renderers;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_window ():Window {\n\t\t\n\t\treturn __windows[0];\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_windows ():Array<Window> {\n\t\t\n\t\treturn __windows;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if air\n@:noCompletion private typedef ApplicationBackend = lime._backend.air.AIRApplication;\n#elseif flash\n@:noCompletion private typedef ApplicationBackend = lime._backend.flash.FlashApplication;\n#elseif (js && html5)\n@:noCompletion private typedef ApplicationBackend = lime._backend.html5.HTML5Application;\n#else\n@:noCompletion private typedef ApplicationBackend = lime._backend.native.NativeApplication;\n#end","package;\n\n\n#if macro\nimport haxe.macro.Compiler;\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\n#end\n\n@:access(lime.app.Application)\n@:access(lime.system.System)\n@:access(openfl.display.Stage)\n\n\n@:dox(hide) class ApplicationMain {\n\t\n\t\n\t#if !macro\n\t\n\t\n\tpublic static function main () {\n\t\t\n\t\tvar projectName = \"Main\";\n\t\t\n\t\tvar config = {\n\t\t\t\n\t\t\tbuild: \"6\",\n\t\t\tcompany: \"ACME\",\n\t\t\tfile: \"Main\",\n\t\t\tfps: 30,\n\t\t\tname: \"ModulesProject\",\n\t\t\torientation: \"\",\n\t\t\tpackageName: \"com.sample.modulesproject\",\n\t\t\tversion: \"1.0.0\",\n\t\t\twindows: [\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tallowHighDPI: false,\n\t\t\t\t\talwaysOnTop: false,\n\t\t\t\t\tantialiasing: 4,\n\t\t\t\t\tbackground: 2776949,\n\t\t\t\t\tborderless: false,\n\t\t\t\t\tcolorDepth: 16,\n\t\t\t\t\tdepthBuffer: false,\n\t\t\t\t\tdisplay: 0,\n\t\t\t\t\tfullscreen: false,\n\t\t\t\t\thardware: true,\n\t\t\t\t\theight: 0,\n\t\t\t\t\thidden: #if munit true #else false #end,\n\t\t\t\t\tmaximized: false,\n\t\t\t\t\tminimized: false,\n\t\t\t\t\tparameters: {},\n\t\t\t\t\tresizable: false,\n\t\t\t\t\tstencilBuffer: true,\n\t\t\t\t\ttitle: \"ModulesProject\",\n\t\t\t\t\tvsync: false,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\tx: null,\n\t\t\t\t\ty: null\n\t\t\t\t},\n\t\t\t]\n\t\t\t\n\t\t};\n\t\t\n\t\tlime.system.System.__registerEntryPoint (projectName, create, config);\n\t\t\n\t\t#if (hxtelemetry && !macro)\n\t\tvar telemetry = new hxtelemetry.HxTelemetry.Config ();\n\t\ttelemetry.allocations = true;\n\t\ttelemetry.host = \"localhost\";\n\t\ttelemetry.app_name = config.name;\n\t\tReflect.setField (config, \"telemetry\", telemetry);\n\t\t#end\n\t\t\n\t\t#if (js && html5)\n\t\t#if (munit || utest)\n\t\tlime.system.System.embed (projectName, null, 0, 0, config);\n\t\t#end\n\t\t#else\n\t\tcreate (config);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function create (config:lime.app.Config):Void {\n\t\t\n\t\tvar app = new openfl.display.Application ();\n\t\tapp.create (config);\n\t\t\n\t\tManifestResources.init (config);\n\t\t\n\t\tvar preloader = getPreloader ();\n\t\tapp.setPreloader (preloader);\n\t\tpreloader.create (config);\n\t\tpreloader.onComplete.add (start.bind (app.window.stage));\n\t\t\n\t\tfor (library in ManifestResources.preloadLibraries) {\n\t\t\t\n\t\t\tpreloader.addLibrary (library);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (name in ManifestResources.preloadLibraryNames) {\n\t\t\t\n\t\t\tpreloader.addLibraryName (name);\n\t\t\t\n\t\t}\n\t\t\n\t\tpreloader.load ();\n\t\t\n\t\tvar result = app.exec ();\n\t\t\n\t\t#if (sys && !ios && !nodejs && !emscripten)\n\t\tlime.system.System.exit (result);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function start (stage:openfl.display.Stage):Void {\n\t\t\n\t\t#if flash\n\t\t\n\t\tApplicationMain.getEntryPoint ();\n\t\t\n\t\t#else\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tApplicationMain.getEntryPoint ();\n\t\t\t\n\t\t\tstage.dispatchEvent (new openfl.events.Event (openfl.events.Event.RESIZE, false, false));\n\t\t\t\n\t\t\tif (stage.window.fullscreen) {\n\t\t\t\t\n\t\t\t\tstage.dispatchEvent (new openfl.events.FullScreenEvent (openfl.events.FullScreenEvent.FULL_SCREEN, false, false, true, true));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t#if !display\n\t\t\tstage.__handleError (e);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#end\n\t\n\t\n\tmacro public static function getEntryPoint () {\n\t\t\n\t\tvar hasMain = false;\n\t\t\n\t\tswitch (Context.follow (Context.getType (\"Main\"))) {\n\t\t\t\n\t\t\tcase TInst (t, params):\n\t\t\t\t\n\t\t\t\tvar type = t.get ();\n\t\t\t\t\n\t\t\t\tfor (method in type.statics.get ()) {\n\t\t\t\t\t\n\t\t\t\t\tif (method.name == \"main\") {\n\t\t\t\t\t\t\n\t\t\t\t\t\thasMain = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (hasMain) {\n\t\t\t\t\t\n\t\t\t\t\treturn Context.parse (\"@:privateAccess Main.main ()\", Context.currentPos ());\n\t\t\t\t\t\n\t\t\t\t} else if (type.constructor != null) {\n\t\t\t\t\t\n\t\t\t\t\treturn macro {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar current = stage.getChildAt (0);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (current == null || !Std.is (current, openfl.display.DisplayObjectContainer)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcurrent = new openfl.display.MovieClip ();\n\t\t\t\t\t\t\tstage.addChild (current);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tnew DocumentClass (cast current);\n\t\t\t\t\t\t\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tContext.fatalError (\"Main class \\\"Main\\\" has neither a static main nor a constructor.\", Context.currentPos ());\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tContext.fatalError (\"Main class \\\"Main\\\" isn't a class.\", Context.currentPos ());\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tmacro public static function getPreloader () {\n\t\t\n\t\t\n\t\treturn macro { new openfl.display.Preloader (new openfl.display.Preloader.DefaultPreloader ()); };\n\t\t\n\t\t\n\t}\n\t\n\t\n\t#if !macro\n\t@:noCompletion @:dox(hide) public static function __init__ () {\n\t\t\n\t\tvar init = lime.app.Application;\n\t\t\n\t\t#if neko\n\t\t// Copy from https://github.com/HaxeFoundation/haxe/blob/development/std/neko/_std/Sys.hx#L164\n\t\t// since Sys.programPath () isn't available in __init__\n\t\tvar sys_program_path = {\n\t\t\tvar m = neko.vm.Module.local().name;\n\t\t\ttry {\n\t\t\t\tsys.FileSystem.fullPath(m);\n\t\t\t} catch (e:Dynamic) {\n\t\t\t\t// maybe the neko module name was supplied without .n extension...\n\t\t\t\tif (!StringTools.endsWith(m, \".n\")) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsys.FileSystem.fullPath(m + \".n\");\n\t\t\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\t\tm;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tm;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar loader = new neko.vm.Loader (untyped $loader);\n\t\tloader.addPath (haxe.io.Path.directory (#if (haxe_ver >= 3.3) sys_program_path #else Sys.executablePath () #end));\n\t\tloader.addPath (\"./\");\n\t\tloader.addPath (\"@executable_path/\");\n\t\t#end\n\t\t\n\t}\n\t#end\n\t\n\t\n}\n\n\n#if !macro\n\n\n@:build(DocumentClass.build())\n@:keep @:dox(hide) class DocumentClass extends Main {}\n\n\n#else\n\n\nclass DocumentClass {\n\t\n\t\n\tmacro public static function build ():Array<Field> {\n\t\t\n\t\tvar classType = Context.getLocalClass ().get ();\n\t\tvar searchTypes = classType;\n\t\t\n\t\twhile (searchTypes != null) {\n\t\t\t\n\t\t\tif (searchTypes.module == \"openfl.display.DisplayObject\" || searchTypes.module == \"flash.display.DisplayObject\") {\n\t\t\t\t\n\t\t\t\tvar fields = Context.getBuildFields ();\n\t\t\t\t\n\t\t\t\tvar method = macro {\n\t\t\t\t\t\n\t\t\t\t\tcurrent.addChild (this);\n\t\t\t\t\tsuper ();\n\t\t\t\t\tdispatchEvent (new openfl.events.Event (openfl.events.Event.ADDED_TO_STAGE, false, false));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: [ { name: \"current\", opt: false, type: macro :openfl.display.DisplayObjectContainer, value: null } ], expr: method, params: [], ret: macro :Void }), pos: Context.currentPos () });\n\t\t\t\t\n\t\t\t\treturn fields;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (searchTypes.superClass != null) {\n\t\t\t\t\n\t\t\t\tsearchTypes = searchTypes.superClass.t.get ();\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tsearchTypes = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end","package openfl.events;\n\n\nimport openfl.events.EventPhase;\nimport openfl.events.IEventDispatcher;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.events.Event)\n\n\nclass EventDispatcher implements IEventDispatcher {\n\t\n\t\n\tprivate var __eventMap:Map<String, Array<Listener>>;\n\tprivate var __iterators:Map<String, Array<DispatchIterator>>;\n\tprivate var __targetDispatcher:IEventDispatcher;\n\t\n\t\n\tpublic function new (target:IEventDispatcher = null):Void {\n\t\t\n\t\tif (target != null) {\n\t\t\t\n\t\t\t__targetDispatcher = target;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function addEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {\n\t\t\n\t\tif (listener == null) return;\n\t\t\n\t\tif (__eventMap == null) {\n\t\t\t\n\t\t\t__eventMap = new Map ();\n\t\t\t__iterators = new Map ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!__eventMap.exists (type)) {\n\t\t\t\n\t\t\tvar list = new Array<Listener> ();\n\t\t\tlist.push (new Listener (listener, useCapture, priority));\n\t\t\t\n\t\t\tvar iterator = new DispatchIterator (list);\n\t\t\t\n\t\t\t__eventMap.set (type, list);\n\t\t\t__iterators.set (type, [ iterator ]);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar list = __eventMap.get (type);\n\t\t\t\n\t\t\tfor (i in 0...list.length) {\n\t\t\t\t\n\t\t\t\tif (list[i].match (listener, useCapture)) return;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar iterators = __iterators.get (type);\n\t\t\t\n\t\t\tfor (iterator in iterators) {\n\t\t\t\t\n\t\t\t\tif (iterator.active) {\n\t\t\t\t\t\n\t\t\t\t\titerator.copy ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__addListenerByPriority(list, new Listener (listener, useCapture, priority));\n\t\t\t\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function dispatchEvent (event:Event):Bool {\n\t\t\n\t\tif (__targetDispatcher != null) {\n\t\t\t\n\t\t\tevent.target = __targetDispatcher;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tevent.target = this;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __dispatchEvent (event);\n\t\t\n\t}\n\t\n\t\n\tpublic function hasEventListener (type:String):Bool {\n\t\t\n\t\tif (__eventMap == null) return false;\n\t\t\n\t\treturn __eventMap.exists (type);\n\t\t\n\t}\n\t\n\t\n\tpublic function removeEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false):Void {\n\t\t\n\t\tif (__eventMap == null || listener == null) return;\n\t\t\n\t\tvar list = __eventMap.get (type);\n\t\tif (list == null) return;\n\t\t\n\t\tvar iterators = __iterators.get (type);\n\t\t\n\t\tfor (i in 0...list.length) {\n\t\t\t\n\t\t\tif (list[i].match (listener, useCapture)) {\n\t\t\t\t\n\t\t\t\tfor (iterator in iterators) {\n\t\t\t\t\t\n\t\t\t\t\titerator.remove (list[i], i);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlist.splice (i, 1);\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (list.length == 0) {\n\t\t\t\n\t\t\t__eventMap.remove (type);\n\t\t\t__iterators.remove (type);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!__eventMap.iterator ().hasNext ()) {\n\t\t\t\n\t\t\t__eventMap = null;\n\t\t\t__iterators = null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String { \n\t\t\n\t\tvar full = Type.getClassName (Type.getClass (this));\n\t\tvar short = full.split (\".\").pop ();\n\t\t\n\t\treturn untyped \"[object \" + short + \"]\";\n\t\t\n\t}\n\t\n\t\n\tpublic function willTrigger (type:String):Bool {\n\t\t\n\t\treturn hasEventListener (type);\n\t\t\n\t}\n\t\n\t\n\tprivate function __dispatchEvent (event:Event):Bool {\n\t\t\n\t\tif (__eventMap == null || event == null) return true;\n\t\t\n\t\tvar type = event.type;\n\t\t\n\t\tvar list = __eventMap.get (type);\n\t\tif (list == null) return true;\n\t\t\n\t\tif (event.target == null) {\n\t\t\t\n\t\t\tif (__targetDispatcher != null) {\n\t\t\t\t\n\t\t\t\tevent.target = __targetDispatcher;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tevent.target = this;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tevent.currentTarget = this;\n\t\t\n\t\tvar capture = (event.eventPhase == EventPhase.CAPTURING_PHASE);\n\t\tvar index = 0;\n\t\t\n\t\tvar iterators = __iterators.get (type);\n\t\tvar iterator = iterators[0];\n\t\t\n\t\tif (iterator.active) {\n\t\t\t\n\t\t\titerator = new DispatchIterator (list);\n\t\t\titerators.push (iterator);\n\t\t\t\n\t\t}\n\t\t\n\t\titerator.reset (list);\n\t\t\n\t\tfor (listener in iterator) {\n\t\t\t\n\t\t\tif (listener == null) continue;\n\t\t\t\n\t\t\tif (listener.useCapture == capture) {\n\t\t\t\t\n\t\t\t\t//listener.callback (event.clone ());\n\t\t\t\tlistener.callback (event);\n\t\t\t\t\n\t\t\t\tif (event.__isCanceledNow) {\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (iterator != iterators[0]) {\n\t\t\t\n\t\t\titerators.remove (iterator);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tprivate function __removeAllListeners ():Void {\n\t\t\n\t\t__eventMap = null;\n\t\t__iterators = null;\n\t\t\n\t}\n\t\n\t\n\tprivate function __addListenerByPriority(list: Array<Listener>, listener: Listener): Void {\n\n\t\tvar numElements: Int = list.length;\n\t\tvar addAtPosition: Int = numElements;\t\n\n\t\tfor (i in 0...numElements) {\n\n\t\t\tif (list[i].priority < listener.priority) {\n\n\t\t\t\taddAtPosition = i;\n\n\t\t\t\tbreak;\t\n\n\t\t\t}\n\n\t\t}\n\n\t\tlist.insert(addAtPosition, listener);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:dox(hide) private class DispatchIterator {\n\t\n\t\n\tpublic var active:Bool;\n\tpublic var index (default, null):Int;\n\t\n\tprivate var isCopy:Bool;\n\tprivate var list:Array<Listener>;\n\t\n\t\n\tpublic function new (list:Array<Listener>) {\n\t\t\n\t\tthis.list = list;\n\t\tindex = list.length;\n\t\t\n\t}\n\t\n\t\n\tpublic function copy ():Void {\n\t\t\n\t\tif (!isCopy) {\n\t\t\t\n\t\t\tlist = list.copy ();\n\t\t\tisCopy = true;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function hasNext ():Bool {\n\t\t\n\t\tif (index < list.length) {\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tactive = false;\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function next ():Listener {\n\t\t\n\t\treturn list[index++];\n\t\t\n\t}\n\t\n\t\n\tpublic function remove (listener:Listener, listIndex:Int):Void {\n\t\t\n\t\tif (active) {\n\t\t\t\n\t\t\tif (!isCopy) {\n\t\t\t\t\n\t\t\t\tif (listIndex < index) {\n\t\t\t\t\t\n\t\t\t\t\tindex--;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tfor (i in index...list.length) {\n\t\t\t\t\t\n\t\t\t\t\tif (list[i] == listener) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlist.splice (i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function reset (list:Array<Listener>):Void {\n\t\t\n\t\tthis.list = list;\n\t\t\n\t\tactive = true;\n\t\tisCopy = false;\n\t\tindex = 0;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nprivate class Listener {\n\t\n\t\n\tpublic var callback:Dynamic->Void;\n\tpublic var priority:Int;\n\tpublic var useCapture:Bool;\n\t\n\t\n\tpublic function new (callback:Dynamic->Void, useCapture:Bool, priority:Int) {\n\t\t\n\t\tthis.callback = callback;\n\t\tthis.useCapture = useCapture;\n\t\tthis.priority = priority;\n\t\t\n\t}\n\t\n\t\n\tpublic function match (callback:Dynamic->Void, useCapture:Bool) {\n\t\t\n\t\treturn (Reflect.compareMethods (this.callback, callback) && this.useCapture == useCapture);\n\t\t\n\t}\n\t\n\t\n}","package openfl; #if (!flash || display)\n\n\nimport haxe.Constraints.Function;\nimport openfl.utils.ByteArray;\n\n@:multiType(T)\n\n\nabstract Vector<T>(AbstractVector<T>) from AbstractVector<T> {\n\t\n\t\n\tpublic var fixed (get, set):Bool;\n\tpublic var length (get, set):Int;\n\t\n\t\n\tpublic function new (?length:Int, ?fixed:Bool, ?array:Array<T>):Void;\n\t\n\t\n\tpublic inline function concat (?a:Vector<T>):Vector<T> {\n\t\t\n\t\tvar data:IVector<T> = cast (a != null ? (a:AbstractVector<T>).data : null);\n\t\treturn cast new AbstractVector<T> (this.data.concat (data));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copy ():Vector<T> {\n\t\t\n\t\treturn cast new AbstractVector<T> (this.data.copy ());\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess public inline function get (index:Int):T {\n\t\t\n\t\treturn this.data.get (index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function indexOf (x:T, ?from:Int = 0):Int {\n\t\t\n\t\treturn this.data.indexOf (x, from);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function insertAt (index:Int, element:T):Void {\n\t\t\n\t\tthis.data.insertAt (index, element);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function iterator<T> ():Iterator<T> {\n\t\t\n\t\treturn this.data.iterator ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function join (sep:String = \",\"):String {\n\t\t\n\t\treturn this.data.join (sep);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function lastIndexOf (x:T, ?from:Int = 0):Int {\n\t\t\n\t\treturn this.data.lastIndexOf (x, from);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pop ():Null<T> {\n\t\t\n\t\treturn this.data.pop ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function push (x:T):Int {\n\t\t\n\t\treturn this.data.push (x);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function removeAt (index:Int):T {\n\t\t\n\t\treturn this.data.removeAt (index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function reverse ():Vector<T> {\n\t\t\n\t\treturn cast new AbstractVector<T> (this.data.reverse ());\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess public inline function set (index:Int, value:T):T {\n\t\t\n\t\treturn this.data.set (index, value);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function shift ():Null<T> {\n\t\t\n\t\treturn this.data.shift ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function slice (?pos:Int, ?end:Int):Vector<T> {\n\t\t\n\t\treturn cast new AbstractVector<T> (this.data.slice (pos, end));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function sort (f:T->T->Int):Void {\n\t\t\n\t\tthis.data.sort (f);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function splice (pos:Int, len:Int):Vector<T> {\n\t\t\n\t\treturn cast new AbstractVector<T> (this.data.splice (pos, len));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn (this != null && this.data != null) ? this.data.toString () : null;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unshift (x:T):Void {\n\t\t\n\t\tthis.data.unshift (x);\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function ofArray<T> (a:Array<T>):Vector<T> {\n\t\t\n\t\tvar vector = new Vector<T> ();\n\t\t\n\t\tfor (i in 0...a.length) {\n\t\t\t\n\t\t\tvector[i] = cast a[i];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn vector;\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function convert<T,U> (v:AbstractVector<T>):AbstractVector<U> {\n\t\t\n\t\treturn cast v;\n\t\t\n\t}\n\t\n\t\n\t@:to static #if (!js && !flash) inline #end function toBoolVector<T:Bool> (t:AbstractVector<T>, length:Int, fixed:Bool, array:Array<T>):AbstractVector<T> {\n\t\t\n\t\treturn new AbstractVector<T> (cast new BoolVector (length, fixed), array);\n\t\t\n\t}\n\t\n\t\n\t@:to static #if (!js && !flash) inline #end function toIntVector<T:Int> (t:AbstractVector<T>, length:Int, fixed:Bool, array:Array<T>):AbstractVector<T> {\n\t\t\n\t\treturn new AbstractVector<T> (cast new IntVector (length, fixed), array);\n\t\t\n\t}\n\t\n\t\n\t@:to static #if (!js && !flash) inline #end function toFloatVector<T:Float> (t:AbstractVector<T>, length:Int, fixed:Bool, array:Array<T>):AbstractVector<T> {\n\t\t\n\t\treturn new AbstractVector<T> (cast new FloatVector (length, fixed), array);\n\t\t\n\t}\n\t\n\t\n\t#if !cs\n\t@:to static #if (!js && !flash) inline #end function toFunctionVector<T:Function> (t:AbstractVector<T>, length:Int, fixed:Bool, array:Array<T>):AbstractVector<T> {\n\t\t\n\t\treturn new AbstractVector<T> (cast new FunctionVector (length, fixed), array);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t@:to static #if (!js && !flash) inline #end function toObjectVector<T> (t:AbstractVector<T>, length:Int, fixed:Bool, array:Array<T>):AbstractVector<T> {\n\t\t\n\t\treturn cast new AbstractVector<T> (cast new ObjectVector<T> (length, fixed), array);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_fixed ():Bool {\n\t\t\n\t\treturn this.data.fixed;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_fixed (value:Bool):Bool {\n\t\t\n\t\treturn this.data.fixed = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_length ():Int {\n\t\t\n\t\treturn this.data.length;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_length (value:Int):Int {\n\t\t\n\t\treturn this.data.length = value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n// Wrap sub-types in a common wrapper to allow\n// for Vector<T> to Vector<Dynamic> conversion\n// while retaining the underlying type\n\n@:dox(hide) private class AbstractVector<T> {\n\t\n\t\n\tpublic var data:IVector<T>;\n\t\n\t\n\tpublic function new (data:IVector<T>, ?array:Array<T>) {\n\t\t\n\t\tthis.data = data;\n\t\t\n\t\tif (array != null) {\n\t\t\t\n\t\t\tvar cacheFixed = data.fixed;\n\t\t\tdata.fixed = false;\n\t\t\t\n\t\t\tfor (i in 0...array.length) {\n\t\t\t\t\n\t\t\t\tdata.set (i, cast array[i]);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tdata.fixed = cacheFixed;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:keep private function toJSON () {\n\t\t\n\t\treturn @:privateAccess data.toJSON ();\n\t\t\n\t}\n\t\n\t\n}\n\n\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:dox(hide) private class BoolVector implements IVector<Bool> {\n\t\n\t\n\tpublic var fixed:Bool;\n\tpublic var length (get, set):Int;\n\t\n\tprivate var __array:Array<Bool>;\n\t\n\t\n\tpublic function new (?length:Int, ?fixed:Bool, ?array:Array<Bool>):Void {\n\t\t\n\t\tif (array == null) {\n\t\t\t\n\t\t\tarray = new Array<Bool> ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__array = array;\n\t\t\n\t\tif (length != null) {\n\t\t\t\n\t\t\tthis.length = length;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.fixed = (fixed == true);\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (?a:IVector<Bool>):IVector<Bool> {\n\t\t\n\t\tif (a == null) {\n\t\t\t\n\t\t\treturn new BoolVector (__array.copy ());\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn new BoolVector (__array.concat (cast (a, BoolVector).__array));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copy ():IVector<Bool> {\n\t\t\n\t\treturn new BoolVector (fixed, __array.copy ());\n\t\t\n\t}\n\t\n\t\n\tpublic function get (index:Int):Bool {\n\t\t\n\t\tif (index >= __array.length) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn __array[index];\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function indexOf (x:Bool, ?from:Int = 0):Int {\n\t\t\n\t\tfor (i in from...__array.length) {\n\t\t\t\n\t\t\tif (__array[i] == x) {\n\t\t\t\t\n\t\t\t\treturn i;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function insertAt (index:Int, element:Bool):Void {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\t__array.insert (index, element);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function iterator<Bool> ():Iterator<Bool> {\n\t\t\n\t\treturn cast __array.iterator ();\n\t\t\n\t}\n\t\n\t\n\tpublic function join (sep:String = \",\"):String {\n\t\t\n\t\treturn __array.join (sep);\n\t\t\n\t}\n\t\n\t\n\tpublic function lastIndexOf (x:Bool, ?from:Int = 0):Int {\n\t\t\n\t\tvar i = __array.length - 1;\n\t\t\n\t\twhile (i >= from) {\n\t\t\t\n\t\t\tif (__array[i] == x) return i;\n\t\t\ti--;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function pop ():Null<Bool> {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.pop ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function push (x:Bool):Int {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.push (x);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn __array.length;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function removeAt (index:Int):Bool {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\treturn __array.splice (index, 1)[0];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function reverse ():IVector<Bool> {\n\t\t\n\t\t__array.reverse ();\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function set (index:Int, value:Bool):Bool {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\treturn __array[index] = value;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function shift ():Null<Bool> {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.shift ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function slice (?startIndex:Int = 0, ?endIndex:Int = 16777215):IVector<Bool> {\n\t\t\n\t\treturn new BoolVector (__array.slice (startIndex, endIndex));\n\t\t\n\t}\n\t\n\t\n\tpublic function sort (f:Bool->Bool->Int):Void {\n\t\t\n\t\t__array.sort (f);\n\t\t\n\t}\n\t\n\t\n\tpublic function splice (pos:Int, len:Int):IVector<Bool> {\n\t\t\n\t\treturn new BoolVector (__array.splice (pos, len));\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:keep private function toJSON () {\n\t\t\n\t\treturn __array;\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn __array != null ? __array.toString () : null;\n\t\t\n\t}\n\t\n\t\n\tpublic function unshift (x:Bool):Void {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\t__array.unshift (x);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_length ():Int {\n\t\t\n\t\treturn __array.length;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_length (value:Int):Int {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\t#if cpp\n\t\t\t\n\t\t\tcpp.NativeArray.setSize (__array, value);\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tvar currentLength = __array.length;\n\t\t\tif (value < 0) value = 0;\n\t\t\t\n\t\t\tif (value > currentLength) {\n\t\t\t\t\n\t\t\t\tfor (i in currentLength...value) {\n\t\t\t\t\t\n\t\t\t\t\t__array[i] = false;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\twhile (__array.length > value) {\n\t\t\t\t\t\n\t\t\t\t\t__array.pop ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __array.length;\n\t\t\n\t}\n\t\n\t\n}\n\n\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:dox(hide) private class FloatVector implements IVector<Float> {\n\t\n\t\n\tpublic var fixed:Bool;\n\tpublic var length (get, set):Int;\n\t\n\tprivate var __array:Array<Float>;\n\t\n\t\n\tpublic function new (?length:Int, ?fixed:Bool, ?array:Array<Float>):Void {\n\t\t\n\t\tif (array == null) {\n\t\t\t\n\t\t\tarray = new Array<Float> ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__array = array;\n\t\t\n\t\tif (length != null) {\n\t\t\t\n\t\t\tthis.length = length;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.fixed = (fixed == true);\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (?a:IVector<Float>):IVector<Float> {\n\t\t\n\t\tif (a == null) {\n\t\t\t\n\t\t\treturn new FloatVector (__array.copy ());\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn new FloatVector (__array.concat (cast (a, FloatVector).__array));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copy ():IVector<Float> {\n\t\t\n\t\treturn new FloatVector (fixed, __array.copy ());\n\t\t\n\t}\n\t\n\t\n\tpublic function get (index:Int):Float {\n\t\t\n\t\treturn __array[index];\n\t\t\n\t}\n\t\n\t\n\tpublic function indexOf (x:Float, ?from:Int = 0):Int {\n\t\t\n\t\tfor (i in from...__array.length) {\n\t\t\t\n\t\t\tif (__array[i] == x) {\n\t\t\t\t\n\t\t\t\treturn i;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function insertAt (index:Int, element:Float):Void {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\t__array.insert (index, element);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function iterator<Float> ():Iterator<Float> {\n\t\t\n\t\treturn cast __array.iterator ();\n\t\t\n\t}\n\t\n\t\n\tpublic function join (sep:String = \",\"):String {\n\t\t\n\t\treturn __array.join (sep);\n\t\t\n\t}\n\t\n\t\n\tpublic function lastIndexOf (x:Float, ?from:Int = 0):Int {\n\t\t\n\t\tvar i = __array.length - 1;\n\t\t\n\t\twhile (i >= from) {\n\t\t\t\n\t\t\tif (__array[i] == x) return i;\n\t\t\ti--;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function pop ():Null<Float> {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.pop ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function push (x:Float):Int {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.push (x);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn __array.length;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function removeAt (index:Int):Float {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\treturn __array.splice (index, 1)[0];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function reverse ():IVector<Float> {\n\t\t\n\t\t__array.reverse ();\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function set (index:Int, value:Float):Float {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\treturn __array[index] = value;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function shift ():Null<Float> {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.shift ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function slice (?startIndex:Int = 0, ?endIndex:Int = 16777215):IVector<Float> {\n\t\t\n\t\treturn new FloatVector (__array.slice (startIndex, endIndex));\n\t\t\n\t}\n\t\n\t\n\tpublic function sort (f:Float->Float->Int):Void {\n\t\t\n\t\t__array.sort (f);\n\t\t\n\t}\n\t\n\t\n\tpublic function splice (pos:Int, len:Int):IVector<Float> {\n\t\t\n\t\treturn new FloatVector (__array.splice (pos, len));\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:keep private function toJSON () {\n\t\t\n\t\treturn __array;\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn __array != null ? __array.toString () : null;\n\t\t\n\t}\n\t\n\t\n\tpublic function unshift (x:Float):Void {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\t__array.unshift (x);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_length ():Int {\n\t\t\n\t\treturn __array.length;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_length (value:Int):Int {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\t#if cpp\n\t\t\t\n\t\t\tcpp.NativeArray.setSize (__array, value);\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tvar currentLength = __array.length;\n\t\t\tif (value < 0) value = 0;\n\t\t\t\n\t\t\tif (value > currentLength) {\n\t\t\t\t\n\t\t\t\tfor (i in currentLength...value) {\n\t\t\t\t\t\n\t\t\t\t\t__array[i] = 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\twhile (__array.length > value) {\n\t\t\t\t\t\n\t\t\t\t\t__array.pop ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __array.length;\n\t\t\n\t}\n\t\n\t\n}\n\n\n\n\n#if !cs\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:dox(hide) private class FunctionVector implements IVector<Function> {\n\t\n\t\n\tpublic var fixed:Bool;\n\tpublic var length (get, set):Int;\n\t\n\tprivate var __array:Array<Function>;\n\t\n\t\n\tpublic function new (?length:Int, ?fixed:Bool, ?array:Array<Function>):Void {\n\t\t\n\t\tif (array == null) {\n\t\t\t\n\t\t\tarray = new Array<Function> ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__array = array;\n\t\t\n\t\tif (length != null) {\n\t\t\t\n\t\t\tthis.length = length;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.fixed = (fixed == true);\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (?a:IVector<Function>):IVector<Function> {\n\t\t\n\t\tif (a == null) {\n\t\t\t\n\t\t\treturn new FunctionVector (__array.copy ());\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn new FunctionVector (__array.concat (cast (a, FunctionVector).__array));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copy ():IVector<Function> {\n\t\t\n\t\treturn new FunctionVector (fixed, __array.copy ());\n\t\t\n\t}\n\t\n\t\n\tpublic function get (index:Int):Function {\n\t\t\n\t\tif (index >= __array.length) {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn __array[index];\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function indexOf (x:Function, ?from:Int = 0):Int {\n\t\t\n\t\tfor (i in from...__array.length) {\n\t\t\t\n\t\t\tif (Reflect.compareMethods (__array[i], x)) {\n\t\t\t\t\n\t\t\t\treturn i;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function insertAt (index:Int, element:Function):Void {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\t__array.insert (index, element);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function iterator<Function> ():Iterator<Function> {\n\t\t\n\t\treturn cast __array.iterator ();\n\t\t\n\t}\n\t\n\t\n\tpublic function join (sep:String = \",\"):String {\n\t\t\n\t\treturn __array.join (sep);\n\t\t\n\t}\n\t\n\t\n\tpublic function lastIndexOf (x:Function, ?from:Int = 0):Int {\n\t\t\n\t\tvar i = __array.length - 1;\n\t\t\n\t\twhile (i >= from) {\n\t\t\t\n\t\t\tif (Reflect.compareMethods (__array[i], x)) return i;\n\t\t\ti--;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function pop ():Function {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.pop ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function push (x:Function):Int {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.push (x);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn __array.length;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function removeAt (index:Int):Function {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\treturn __array.splice (index, 1)[0];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function reverse ():IVector<Function> {\n\t\t\n\t\t__array.reverse ();\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function set (index:Int, value:Function):Function {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\treturn __array[index] = value;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function shift ():Function {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.shift ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function slice (?startIndex:Int = 0, ?endIndex:Int = 16777215):IVector<Function> {\n\t\t\n\t\treturn new FunctionVector (__array.slice (startIndex, endIndex));\n\t\t\n\t}\n\t\n\t\n\tpublic function sort (f:Function->Function->Int):Void {\n\t\t\n\t\t__array.sort (f);\n\t\t\n\t}\n\t\n\t\n\tpublic function splice (pos:Int, len:Int):IVector<Function> {\n\t\t\n\t\treturn new FunctionVector (__array.splice (pos, len));\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:keep private function toJSON () {\n\t\t\n\t\treturn __array;\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn __array != null ? __array.toString () : null;\n\t\t\n\t}\n\t\n\t\n\tpublic function unshift (x:Function):Void {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\t__array.unshift (x);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_length ():Int {\n\t\t\n\t\treturn __array.length;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_length (value:Int):Int {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\t#if cpp\n\t\t\t\n\t\t\tcpp.NativeArray.setSize (__array, value);\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tvar currentLength = __array.length;\n\t\t\tif (value < 0) value = 0;\n\t\t\t\n\t\t\tif (value > currentLength) {\n\t\t\t\t\n\t\t\t\tfor (i in currentLength...value) {\n\t\t\t\t\t\n\t\t\t\t\t__array[i] = null;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\twhile (__array.length > value) {\n\t\t\t\t\t\n\t\t\t\t\t__array.pop ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __array.length;\n\t\t\n\t}\n\t\n\t\n}\n#end\n\n\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:dox(hide) private class IntVector implements IVector<Int> {\n\t\n\t\n\tpublic var fixed:Bool;\n\tpublic var length (get, set):Int;\n\t\n\tprivate var __array:Array<Int>;\n\t\n\t\n\tpublic function new (?length:Int, ?fixed:Bool, ?array:Array<Int>):Void {\n\t\t\n\t\tif (array == null) {\n\t\t\t\n\t\t\tarray = new Array<Int> ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__array = array;\n\t\t\n\t\tif (length != null) {\n\t\t\t\n\t\t\tthis.length = length;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.fixed = (fixed == true);\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (?a:IVector<Int>):IVector<Int> {\n\t\t\n\t\tif (a == null) {\n\t\t\t\n\t\t\treturn new IntVector (__array.copy ());\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn new IntVector (__array.concat (cast (a, IntVector).__array));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copy ():IVector<Int> {\n\t\t\n\t\treturn new IntVector (fixed, __array.copy ());\n\t\t\n\t}\n\t\n\t\n\tpublic function get (index:Int):Int {\n\t\t\n\t\treturn __array[index];\n\t\t\n\t}\n\t\n\t\n\tpublic function indexOf (x:Int, ?from:Int = 0):Int {\n\t\t\n\t\tfor (i in from...__array.length) {\n\t\t\t\n\t\t\tif (__array[i] == x) {\n\t\t\t\t\n\t\t\t\treturn i;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function insertAt (index:Int, element:Int):Void {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\t__array.insert (index, element);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function iterator<Int> ():Iterator<Int> {\n\t\t\n\t\treturn cast __array.iterator ();\n\t\t\n\t}\n\t\n\t\n\tpublic function join (sep:String = \",\"):String {\n\t\t\n\t\treturn __array.join (sep);\n\t\t\n\t}\n\t\n\t\n\tpublic function lastIndexOf (x:Int, ?from:Int = 0):Int {\n\t\t\n\t\tvar i = __array.length - 1;\n\t\t\n\t\twhile (i >= from) {\n\t\t\t\n\t\t\tif (__array[i] == x) return i;\n\t\t\ti--;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function pop ():Null<Int> {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.pop ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function push (x:Int):Int {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.push (x);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn __array.length;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function removeAt (index:Int):Int {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\treturn __array.splice (index, 1)[0];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function reverse ():IVector<Int> {\n\t\t\n\t\t__array.reverse ();\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function set (index:Int, value:Int):Int {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\treturn __array[index] = value;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function shift ():Null<Int> {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.shift ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function slice (?startIndex:Int = 0, ?endIndex:Int = 16777215):IVector<Int> {\n\t\t\n\t\treturn new IntVector (__array.slice (startIndex, endIndex));\n\t\t\n\t}\n\t\n\t\n\tpublic function sort (f:Int->Int->Int):Void {\n\t\t\n\t\t__array.sort (f);\n\t\t\n\t}\n\t\n\t\n\tpublic function splice (pos:Int, len:Int):IVector<Int> {\n\t\t\n\t\treturn new IntVector (__array.splice (pos, len));\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:keep private function toJSON () {\n\t\t\n\t\treturn __array;\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn __array != null ? __array.toString () : null;\n\t\t\n\t}\n\t\n\t\n\tpublic function unshift (x:Int):Void {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\t__array.unshift (x);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_length ():Int {\n\t\t\n\t\treturn __array.length;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_length (value:Int):Int {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\t#if cpp\n\t\t\t\n\t\t\tcpp.NativeArray.setSize (__array, value);\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tvar currentLength = __array.length;\n\t\t\tif (value < 0) value = 0;\n\t\t\t\n\t\t\tif (value > currentLength) {\n\t\t\t\t\n\t\t\t\tfor (i in currentLength...value) {\n\t\t\t\t\t\n\t\t\t\t\t__array[i] = 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\twhile (__array.length > value) {\n\t\t\t\t\t\n\t\t\t\t\t__array.pop ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __array.length;\n\t\t\n\t}\n\t\n\t\n}\n\n\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:dox(hide) private class ObjectVector<T> implements IVector<T> {\n\t\n\t\n\tpublic var fixed:Bool;\n\tpublic var length (get, set):Int;\n\t\n\tprivate var __array:Array<T>;\n\t\n\t\n\tpublic function new (?length:Int, ?fixed:Bool, ?array:Array<T>):Void {\n\t\t\n\t\tif (array == null) {\n\t\t\t\n\t\t\tarray = new Array<T> ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__array = array;\n\t\t\n\t\tif (length != null) {\n\t\t\t\n\t\t\tthis.length = length;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.fixed = (fixed == true);\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (?a:IVector<T>):IVector<T> {\n\t\t\n\t\tif (a == null) {\n\t\t\t\n\t\t\treturn new ObjectVector (__array.copy ());\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn new ObjectVector (__array.concat (cast (cast (a, ObjectVector<Dynamic>).__array)));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copy ():IVector<T> {\n\t\t\n\t\treturn new ObjectVector (__array.copy ());\n\t\t\n\t}\n\t\n\t\n\tpublic function get (index:Int):T {\n\t\t\n\t\treturn __array[index];\n\t\t\n\t}\n\t\n\t\n\tpublic function indexOf (x:T, ?from:Int = 0):Int {\n\t\t\n\t\tfor (i in from...__array.length) {\n\t\t\t\n\t\t\tif (__array[i] == x) {\n\t\t\t\t\n\t\t\t\treturn i;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function insertAt (index:Int, element:T):Void {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\t__array.insert (index, element);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function iterator<T> ():Iterator<T> {\n\t\t\n\t\treturn cast __array.iterator ();\n\t\t\n\t}\n\t\n\t\n\tpublic function join (sep:String = \",\"):String {\n\t\t\n\t\treturn __array.join (sep);\n\t\t\n\t}\n\t\n\t\n\tpublic function lastIndexOf (x:T, ?from:Int = 0):Int {\n\t\t\n\t\tvar i = __array.length - 1;\n\t\t\n\t\twhile (i >= from) {\n\t\t\t\n\t\t\tif (__array[i] == x) return i;\n\t\t\ti--;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function pop ():T {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.pop ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function push (x:T):Int {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.push (x);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn __array.length;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function removeAt (index:Int):T {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\treturn __array.splice (index, 1)[0];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function reverse ():IVector<T> {\n\t\t\n\t\t__array.reverse ();\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function set (index:Int, value:T):T {\n\t\t\n\t\tif (!fixed || index < __array.length) {\n\t\t\t\n\t\t\treturn __array[index] = value;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function shift ():T {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\treturn __array.shift ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function slice (?startIndex:Int = 0, ?endIndex:Int = 16777215):IVector<T> {\n\t\t\n\t\treturn new ObjectVector (__array.slice (startIndex, endIndex));\n\t\t\n\t}\n\t\n\t\n\tpublic function sort (f:T->T->Int):Void {\n\t\t\n\t\t__array.sort (f);\n\t\t\n\t}\n\t\n\t\n\tpublic function splice (pos:Int, len:Int):IVector<T> {\n\t\t\n\t\treturn new ObjectVector (__array.splice (pos, len));\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:keep private function toJSON () {\n\t\t\n\t\treturn __array;\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn __array != null ? __array.toString () : null;\n\t\t\n\t}\n\t\n\t\n\tpublic function unshift (x:T):Void {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\t__array.unshift (x);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_length ():Int {\n\t\t\n\t\treturn __array.length;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_length (value:Int):Int {\n\t\t\n\t\tif (!fixed) {\n\t\t\t\n\t\t\t#if cpp\n\t\t\t\n\t\t\tcpp.NativeArray.setSize (__array, value);\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tvar currentLength = __array.length;\n\t\t\tif (value < 0) value = 0;\n\t\t\t\n\t\t\tif (value > currentLength) {\n\t\t\t\t\n\t\t\t\tfor (i in currentLength...value) {\n\t\t\t\t\t\n\t\t\t\t\t__array.push (null);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\twhile (__array.length > value) {\n\t\t\t\t\t\n\t\t\t\t\t__array.pop ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __array.length;\n\t\t\n\t}\n\t\n\n}\n\n\n\n\n@:dox(hide) private interface IVector<T> {\n\t\n\tpublic var fixed:Bool;\n\tpublic var length (get, set):Int;\n\t\n\tpublic function concat (?a:IVector<T>):IVector<T>;\n\tpublic function copy ():IVector<T>;\n\tpublic function get (index:Int):T;\n\tpublic function indexOf (x:T, ?from:Int = 0):Int;\n\tpublic function insertAt (index:Int, element:T):Void;\n\tpublic function iterator<T> ():Iterator<T>;\n\tpublic function join (sep:String = \",\"):String;\n\tpublic function lastIndexOf (x:T, ?from:Int = 0):Int;\n\tpublic function pop ():Null<T>;\n\tpublic function push (x:T):Int;\n\tpublic function removeAt (index:Int):T;\n\tpublic function reverse ():IVector<T>;\n\tpublic function set (index:Int, value:T):T;\n\tpublic function shift ():Null<T>;\n\tpublic function slice (?pos:Int, ?end:Int):IVector<T>;\n\tpublic function sort (f:T -> T -> Int):Void;\n\tpublic function splice (pos:Int, len:Int):IVector<T>;\n\tpublic function toString ():String;\n\tpublic function unshift (x:T):Void;\n\t\n\t@:noCompletion private function toJSON ():Dynamic;\n\t\n}\n\n\n\n\n#else\n\n\n\n\nabstract Vector<T>(VectorData<T>) {\n\t\n\t\n\tpublic var fixed (get, set):Bool;\n\tpublic var length (get, set):Int;\n\t\n\t\n\tpublic inline function new (?length:Int, ?fixed:Bool, ?array:Array<T>):Void {\n\t\t\n\t\tif (array != null) {\n\t\t\t\n\t\t\tthis = VectorData.ofArray (array);\n\t\t\t\n\t\t\t//if (length != null) this.length = length;\n\t\t\t//if (fixed != null) this.fixed = fixed;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis = new VectorData<T> (length, fixed);\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function concat (?a:VectorData<T>):Vector<T> {\n\t\t\n\t\tif (a == null) {\n\t\t\t\n\t\t\treturn this.concat ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn this.concat (a);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copy ():Vector<T> {\n\t\t\n\t\tvar vec = new VectorData<T> (this.length, this.fixed);\n\t\t\n\t\tfor (i in 0...this.length) {\n\t\t\t\n\t\t\tvec[i] = this[i];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn vec;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function indexOf (x:T, from:Int = 0):Int {\n\t\t\n\t\treturn this.indexOf (x, from);\n\t\t\n\t}\n\t\n\t\n\tpublic function insertAt (index:Int, element:T):Void {\n\t\t\n\t\t#if flash19\n\t\tthis.insertAt (index, element);\n\t\t#else\n\t\tReflect.callMethod (this.splice, this.splice, [ index, 0, element ]);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function iterator<T> ():Iterator<T> {\n\t\t\n\t\treturn new VectorDataIterator<T> (this);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function join (sep:String = \",\"):String {\n\t\t\n\t\treturn this.join (sep);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function lastIndexOf (x:T, from:Int = 0x7fffffff):Int {\n\t\t\n\t\treturn this.lastIndexOf (x, from);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pop ():Null<T> {\n\t\t\n\t\treturn this.pop ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function push (x:T):Int {\n\t\t\n\t\treturn this.push (x);\n\t\t\n\t}\n\t\n\t\n\tpublic function removeAt (index:Int):T {\n\t\t\n\t\t#if flash19\n\t\treturn this.removeAt (index);\n\t\t#else\n\t\treturn Reflect.callMethod (this.splice, this.splice, [ index, 1 ])[0];\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function reverse ():Vector<T> {\n\t\t\n\t\treturn this.reverse ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function shift ():Null<T> {\n\t\t\n\t\treturn this.shift ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function slice (pos:Int = 0, end:Int = 16777215):Vector<T> {\n\t\t\n\t\treturn this.slice (pos, end);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function sort (f:T -> T -> Int):Void {\n\t\t\n\t\tthis.sort (f);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function splice (pos:Int, len:Int):Vector<T> {\n\t\t\n\t\treturn this.splice (pos, len);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn this != null ? \"[\" + this.toString () + \"]\" : null;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unshift (x:T):Void {\n\t\t\n\t\tthis.unshift (x);\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function ofArray<T> (a:Array<Dynamic>):Vector<T> {\n\t\t\n\t\treturn VectorData.ofArray (a);\n\t\t\n\t}\n\t\n\t\n\tpublic inline static function convert<T,U> (v:Vector<T>):Vector<U> {\n\t\t\n\t\treturn cast VectorData.convert (v);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) @:arrayAccess public inline function get (index:Int):Null<T> {\n\t\t\n\t\treturn this[index];\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) @:arrayAccess public inline function set (index:Int, value:T):T {\n\t\t\n\t\treturn this[index] = value;\n\t\t\n\t}\n\t\n\t\n\t/*@:noCompletion @:dox(hide) @:from public static inline function fromArray<T> (value:Array<T>):Vector<T> {\n\t\t\n\t\treturn VectorData.ofArray (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) @:to public inline function toArray<T> ():Array<T> {\n\t\t\n\t\tvar array = new Array<T> ();\n\t\t\n\t\tfor (value in this) {\n\t\t\t\n\t\t\tarray.push (value);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn array;\n\t\t\n\t}*/\n\t\n\t\n\t@:noCompletion @:dox(hide) @:from public static inline function fromHaxeVector<T> (value:haxe.ds.Vector<T>):Vector<T> {\n\t\t\n\t\treturn cast value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) @:to public inline function toHaxeVector<T> ():haxe.ds.Vector<T> {\n\t\t\n\t\treturn cast this;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) @:from public static inline function fromVectorData<T> (value:VectorData<T>):Vector<T> {\n\t\t\n\t\treturn cast value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) @:to public inline function toVectorData<T> ():VectorData<T> {\n\t\t\n\t\treturn cast this;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_fixed ():Bool {\n\t\t\n\t\treturn this.fixed;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_fixed (value:Bool):Bool {\n\t\t\n\t\treturn this.fixed = value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_length ():Int {\n\t\t\n\t\treturn this.length;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_length (value:Int):Int {\n\t\t\n\t\treturn this.length = value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:dox(hide) private class VectorDataIterator<T> {\n\t\n\t\n\tprivate var index:Int;\n\tprivate var vectorData:VectorData<T>;\n\t\n\t\n\tpublic function new (data:VectorData<T>) {\n\t\t\n\t\tindex = 0;\n\t\tvectorData = data;\n\t\t\n\t}\n\t\n\t\n\tpublic function hasNext ():Bool {\n\t\t\n\t\treturn index < vectorData.length;\n\t\t\n\t}\n\t\n\t\n\tpublic function next ():T {\n\t\t\n\t\treturn vectorData[index++];\n\t\t\n\t}\n\t\n\t\n}\n\n\nprivate typedef VectorData<T> = flash.Vector<T>;\n\n\n#end","package lime.utils;\n\n\nimport haxe.ds.ObjectMap;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:generic class ObjectPool<T> {\n\t\n\t\n\tpublic var activeObjects (default, null):Int;\n\tpublic var inactiveObjects (default, null):Int;\n\tpublic var size (get, set):Null<Int>;\n\t\n\tprivate var __inactiveObject0:T;\n\tprivate var __inactiveObject1:T;\n\tprivate var __inactiveObjectList:List<T>;\n\tprivate var __pool:Map<T, Bool>;\n\tprivate var __size:Null<Int>;\n\t\n\t\n\tpublic function new (create:Void->T = null, clean:T->Void = null, size:Null<Int> = null) {\n\t\t\n\t\tif (create != null) {\n\t\t\t\n\t\t\tthis.create = create;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (clean != null) {\n\t\t\t\n\t\t\tthis.clean = clean;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (size != null) {\n\t\t\t\n\t\t\tthis.size = size;\n\t\t\t\n\t\t}\n\t\t\n\t\t__pool = cast new ObjectMap ();\n\t\t\n\t\tactiveObjects = 0;\n\t\tinactiveObjects = 0;\n\t\t\n\t\t__inactiveObject0 = null;\n\t\t__inactiveObject1 = null;\n\t\t__inactiveObjectList = new List<T> ();\n\t\t\n\t}\n\t\n\t\n\tpublic function add (object:T):Void {\n\t\t\n\t\tif (!__pool.exists (object)) {\n\t\t\t\n\t\t\t__pool.set (object, false);\n\t\t\tclean (object);\n\t\t\t__addInactive (object);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic dynamic function clean (object:T):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function clear ():Void {\n\t\t\n\t\t__pool = cast new ObjectMap ();\n\t\t\n\t\tactiveObjects = 0;\n\t\tinactiveObjects = 0;\n\t\t\n\t\t__inactiveObject0 = null;\n\t\t__inactiveObject1 = null;\n\t\t__inactiveObjectList.clear ();\n\t\t\n\t}\n\t\n\t\n\tpublic dynamic function create ():T {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function get ():T {\n\t\t\n\t\tvar object = null;\n\t\t\n\t\tif (inactiveObjects > 0) {\n\t\t\t\n\t\t\tobject = __getInactive ();\n\t\t\t\n\t\t} else if (__size == null || activeObjects < __size) {\n\t\t\t\n\t\t\tobject = create ();\n\t\t\t\n\t\t\tif (object != null) {\n\t\t\t\t\n\t\t\t\t__pool.set (object, true);\n\t\t\t\tactiveObjects++;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn object;\n\t\t\n\t}\n\t\n\t\n\tpublic function release (object:T):Void {\n\t\t\n\t\t#if debug\n\t\tif (!__pool.exists (object)) {\n\t\t\t\n\t\t\tLog.error (\"Object is not a member of the pool\");\n\t\t\t\n\t\t} else if (!__pool.get (object)) {\n\t\t\t\n\t\t\tLog.error (\"Object has already been released\");\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tactiveObjects--;\n\t\t\n\t\tif (__size == null || activeObjects + inactiveObjects < __size) {\n\t\t\t\n\t\t\tclean (object);\n\t\t\t__addInactive (object);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__pool.remove (object);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __addInactive (object:T):Void {\n\t\t\n\t\t#if debug\n\t\t__pool.set (object, false);\n\t\t#end\n\t\t\n\t\tif (__inactiveObject0 == null) {\n\t\t\t\n\t\t\t__inactiveObject0 = object;\n\t\t\t\n\t\t} else if (__inactiveObject1 == null) {\n\t\t\t\n\t\t\t__inactiveObject1 = object;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__inactiveObjectList.add (object);\n\t\t\t\n\t\t}\n\t\t\n\t\tinactiveObjects++;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __getInactive ():T {\n\t\t\n\t\tvar object = null;\n\t\t\n\t\tif (__inactiveObject0 != null) {\n\t\t\t\n\t\t\tobject = __inactiveObject0;\n\t\t\t__inactiveObject0 = null;\n\t\t\t\n\t\t} else if (__inactiveObject1 != null) {\n\t\t\t\n\t\t\tobject = __inactiveObject1;\n\t\t\t__inactiveObject1 = null;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tobject = __inactiveObjectList.pop ();\n\t\t\t\n\t\t\tif (__inactiveObjectList.length > 0) {\n\t\t\t\t\n\t\t\t\t__inactiveObject0 = __inactiveObjectList.pop ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (__inactiveObjectList.length > 0) {\n\t\t\t\t\n\t\t\t\t__inactiveObject1 = __inactiveObjectList.pop ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#if debug\n\t\t__pool.set (object, true);\n\t\t#end\n\t\t\n\t\tinactiveObjects--;\n\t\tactiveObjects++;\n\t\t\n\t\treturn object;\n\t\t\n\t}\n\t\n\t\n\tprivate function __removeInactive (count:Int):Void {\n\t\t\n\t\tif (count <= 0 || inactiveObjects == 0) return;\n\t\t\n\t\tif (__inactiveObject0 != null) {\n\t\t\t\n\t\t\t__pool.remove (__inactiveObject0);\n\t\t\t__inactiveObject0 = null;\n\t\t\tinactiveObjects--;\n\t\t\tcount--;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (count == 0 || inactiveObjects == 0) return;\n\t\t\n\t\tif (__inactiveObject1 != null) {\n\t\t\t\n\t\t\t__pool.remove (__inactiveObject1);\n\t\t\t__inactiveObject1 = null;\n\t\t\tinactiveObjects--;\n\t\t\tcount--;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (count == 0 || inactiveObjects == 0) return;\n\t\t\n\t\tfor (object in __inactiveObjectList) {\n\t\t\t\n\t\t\t__pool.remove (object);\n\t\t\t__inactiveObjectList.remove (object);\n\t\t\tinactiveObjects--;\n\t\t\tcount--;\n\t\t\t\n\t\t\tif (count == 0 || inactiveObjects == 0) return;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_size ():Null<Int> {\n\t\t\n\t\treturn __size;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_size (value:Null<Int>):Null<Int> {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\t__size = null;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar current = inactiveObjects + activeObjects;\n\t\t\t__size = value;\n\t\t\t\n\t\t\tif (current > value) {\n\t\t\t\t\n\t\t\t\t__removeInactive (current - value);\n\t\t\t\t\n\t\t\t} else if (value > current) {\n\t\t\t\t\n\t\t\t\tvar object;\n\t\t\t\t\n\t\t\t\tfor (i in 0...(value - current)) {\n\t\t\t\t\t\n\t\t\t\t\tobject = create ();\n\t\t\t\t\t\n\t\t\t\t\tif (object != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__pool.set (object, false);\n\t\t\t\t\t\t__inactiveObjectList.add (object);\n\t\t\t\t\t\tinactiveObjects++;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n@:coreApi\nclass ObjectMap<K:{ }, V> implements haxe.Constraints.IMap<K,V> {\n\n\tstatic var count = 0;\n\n\tstatic inline function assignId(obj: { } ):Int {\n\t\treturn untyped obj.__id__ = ++count;\n\t}\n\n\tstatic inline function getId(obj: { } ):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h : { };\n\n\tpublic function new() : Void {\n\t\th = { __keys__: {} };\n\t}\n\n\tpublic function set(key:K, value:V):Void untyped {\n\t\tvar id : Int = getId(key) || assignId(key);\n\t\th[id] = value;\n\t\th.__keys__[id] = key;\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove( key : K ) : Bool {\n\t\tvar id = getId(key);\n\t\tif ( untyped h.__keys__[id] == null ) return false;\n\t\tuntyped  __js__(\"delete\")(h[id]);\n\t\tuntyped  __js__(\"delete\")(h.__keys__[id]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(h.__keys__[key]);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<V> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[getId(i)]; }\n\t\t};\n\t}\n\t\n\tpublic function copy() : ObjectMap<K,V> {\n\t\tvar copied = new ObjectMap();\n\t\tfor(key in keys()) copied.set(key, get(key));\n\t\treturn copied;\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n}","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tA linked-list of elements. The list is composed of element container objects\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole list content every time.\n\n\t@see https://haxe.org/manual/std-List.html\n**/\nclass List<T> {\n\n\tprivate var h : ListNode<T>;\n\tprivate var q : ListNode<T>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x = ListNode.create(item, null);\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq.next = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x = ListNode.create(item, h);\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h.item;\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q.item;\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h.item;\n\t\th = h.next;\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurrence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev:ListNode<T> = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l.item == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l.next;\n\t\t\t\telse\n\t\t\t\t\tprev.next = l.next;\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l.next;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator() : ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l.item));\n\t\t\tl = l.next;\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l.item);\n\t\t\tl = l.next;\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n\n#if neko\nprivate extern class ListNode<T> extends neko.NativeArray<Dynamic> {\n\tvar item(get,set):T;\n\tvar next(get,set):ListNode<T>;\n\tprivate inline function get_item():T return this[0];\n\tprivate inline function set_item(v:T):T return this[0] = v;\n\tprivate inline function get_next():ListNode<T> return this[1];\n\tprivate inline function set_next(v:ListNode<T>):ListNode<T> return this[1] = v;\n\tinline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn untyped __dollar__array(item, next);\n\t}\n}\n#else\nprivate class ListNode<T> {\n\tpublic var item:T;\n\tpublic var next:ListNode<T>;\n\tpublic function new(item:T, next:ListNode<T>) {\n\t\tthis.item = item;\n\t\tthis.next = next;\n\t}\n\t@:extern public inline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn new ListNode(item, next);\n\t}\n}\n#end\n\nprivate class ListIterator<T> {\n\tvar head:ListNode<T>;\n\n\tpublic inline function new(head:ListNode<T>) {\n\t\tthis.head = head;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tvar val = head.item;\n\t\thead = head.next;\n\t\treturn val;\n\t}\n}\n","package openfl.display;\n\n\nimport lime.graphics.cairo.Cairo;\nimport lime.ui.MouseCursor;\nimport lime.utils.ObjectPool;\nimport openfl._internal.renderer.cairo.CairoBitmap;\nimport openfl._internal.renderer.cairo.CairoDisplayObject;\nimport openfl._internal.renderer.cairo.CairoGraphics;\nimport openfl._internal.renderer.canvas.CanvasBitmap;\nimport openfl._internal.renderer.canvas.CanvasDisplayObject;\nimport openfl._internal.renderer.canvas.CanvasGraphics;\nimport openfl._internal.renderer.dom.DOMBitmap;\nimport openfl._internal.renderer.dom.DOMDisplayObject;\nimport openfl._internal.renderer.opengl.GLBitmap;\nimport openfl._internal.renderer.opengl.GLDisplayObject;\nimport openfl._internal.renderer.opengl.GLRenderer;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.Lib;\nimport openfl.display.Stage;\nimport openfl.errors.TypeError;\nimport openfl.events.Event;\nimport openfl.events.EventPhase;\nimport openfl.events.EventDispatcher;\nimport openfl.events.MouseEvent;\nimport openfl.events.TouchEvent;\nimport openfl.filters.BitmapFilter;\nimport openfl.geom.ColorTransform;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.geom.Transform;\nimport openfl.Vector;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\nimport js.html.CSSStyleDeclaration;\nimport js.html.Element;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.events.Event)\n@:access(openfl.display.Bitmap)\n@:access(openfl.display.DisplayObjectContainer)\n@:access(openfl.display.Graphics)\n@:access(openfl.display.Stage)\n@:access(openfl.filters.BitmapFilter)\n@:access(openfl.geom.ColorTransform)\n@:access(openfl.geom.Matrix)\n@:access(openfl.geom.Rectangle)\n\n\nclass DisplayObject extends EventDispatcher implements IBitmapDrawable #if openfl_dynamic implements Dynamic<DisplayObject> #end {\n\t\n\t\n\tprivate static var __broadcastEvents = new Map<String, Array<DisplayObject>> ();\n\tprivate static var __instanceCount = 0;\n\tprivate static var __tempStack = new ObjectPool<Vector<DisplayObject>> (function () { return new Vector<DisplayObject> (); }, function (stack) { stack.length = 0; });\n\t\n\t@:keep public var alpha (get, set):Float;\n\tpublic var blendMode (get, set):BlendMode;\n\tpublic var cacheAsBitmap (get, set):Bool;\n\tpublic var cacheAsBitmapMatrix (get, set):Matrix;\n\tpublic var filters (get, set):Array<BitmapFilter>;\n\t@:keep public var height (get, set):Float;\n\tpublic var loaderInfo (get, never):LoaderInfo;\n\tpublic var mask (get, set):DisplayObject;\n\tpublic var mouseX (get, never):Float;\n\tpublic var mouseY (get, never):Float;\n\tpublic var name (get, set):String;\n\tpublic var opaqueBackground:Null <Int>;\n\tpublic var parent (default, null):DisplayObjectContainer;\n\tpublic var root (get, never):DisplayObject;\n\t@:keep public var rotation (get, set):Float;\n\tpublic var scale9Grid:Rectangle;\n\t@:keep public var scaleX (get, set):Float;\n\t@:keep public var scaleY (get, set):Float;\n\tpublic var scrollRect (get, set):Rectangle;\n\tpublic var stage (default, null):Stage;\n\t@:keep public var transform (get, set):Transform;\n\tpublic var visible (get, set):Bool;\n\t@:keep public var width (get, set):Float;\n\t@:keep public var x (get, set):Float;\n\t@:keep public var y (get, set):Float;\n\n\tpublic var _lastParentOrSelfChangeFrameID : UInt;\n\tpublic var _lastChildChangeFrameID : UInt;\n\t\n\tprivate var __alpha:Float;\n\tprivate var __blendMode:BlendMode;\n\tprivate var __cacheAsBitmap:Bool;\n\tprivate var __cacheAsBitmapMatrix:Matrix;\n\tprivate var __cacheBitmap:Bitmap;\n\tprivate var __cacheBitmapBackground:Null<Int>;\n\tprivate var __cacheBitmapColorTransform:ColorTransform;\n\tprivate var __cacheBitmapData:BitmapData;\n\tprivate var __cacheBitmapRender:Bool;\n\tprivate var __cairo:Cairo;\n\tprivate var __children:Array<DisplayObject>;\n\tprivate var __filters:Array<BitmapFilter>;\n\tprivate var __graphics:Graphics;\n\tprivate var __interactive:Bool;\n\tprivate var __isMask:Bool;\n\tprivate var __loaderInfo:LoaderInfo;\n\tprivate var __mask:DisplayObject;\n\tprivate var __maskTarget:DisplayObject;\n\tprivate var __name:String;\n\tprivate var __objectTransform:Transform;\n\tprivate var __renderable:Bool;\n\tprivate var __renderDirty:Bool;\n\tprivate var __renderParent:DisplayObject;\n\tprivate var __renderTransform:Matrix;\n\tprivate var __renderTransformCache:Matrix;\n\tprivate var __renderTransformChanged:Bool;\n\tprivate var __rotation:Float;\n\tprivate var __rotationCosine:Float;\n\tprivate var __rotationSine:Float;\n\tprivate var __scaleX:Float;\n\tprivate var __scaleY:Float;\n\tprivate var __scrollRect:Rectangle;\n\tprivate var __transform:Matrix;\n\tprivate var __transformDirty:Bool;\n\tprivate var __visible:Bool;\n\tprivate var __worldAlpha:Float;\n\tprivate var __worldAlphaChanged:Bool;\n\tprivate var __worldBlendMode:BlendMode;\n\tprivate var __worldClip:Rectangle;\n\tprivate var __worldClipChanged:Bool;\n\tprivate var __worldColorTransform:ColorTransform;\n\tprivate var __worldTransform:Matrix;\n\tprivate var __worldVisible:Bool;\n\tprivate var __worldVisibleChanged:Bool;\n\tprivate var __worldTransformInvalid:Bool;\n\tprivate var __worldZ:Int;\n\t\n\t#if (js && html5)\n\tprivate var __canvas:CanvasElement;\n\tprivate var __context:CanvasRenderingContext2D;\n\tprivate var __style:CSSStyleDeclaration;\n\t#end\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (DisplayObject.prototype, {\n\t\t\t\"alpha\": { get: untyped __js__ (\"function () { return this.get_alpha (); }\"), set: untyped __js__ (\"function (v) { return this.set_alpha (v); }\") },\n\t\t\t\"blendMode\": { get: untyped __js__ (\"function () { return this.get_blendMode (); }\"), set: untyped __js__ (\"function (v) { return this.set_blendMode (v); }\") },\n\t\t\t\"cacheAsBitmap\": { get: untyped __js__ (\"function () { return this.get_cacheAsBitmap (); }\"), set: untyped __js__ (\"function (v) { return this.set_cacheAsBitmap (v); }\") },\n\t\t\t\"cacheAsBitmapMatrix\": { get: untyped __js__ (\"function () { return this.get_cacheAsBitmapMatrix (); }\"), set: untyped __js__ (\"function (v) { return this.set_cacheAsBitmapMatrix (v); }\") },\n\t\t\t\"filters\": { get: untyped __js__ (\"function () { return this.get_filters (); }\"), set: untyped __js__ (\"function (v) { return this.set_filters (v); }\") },\n\t\t\t\"height\": { get: untyped __js__ (\"function () { return this.get_height (); }\"), set: untyped __js__ (\"function (v) { return this.set_height (v); }\") },\n\t\t\t\"loaderInfo\": { get: untyped __js__ (\"function () { return this.get_loaderInfo (); }\") },\n\t\t\t\"mask\": { get: untyped __js__ (\"function () { return this.get_mask (); }\"), set: untyped __js__ (\"function (v) { return this.set_mask (v); }\") },\n\t\t\t\"mouseX\": { get: untyped __js__ (\"function () { return this.get_mouseX (); }\") },\n\t\t\t\"mouseY\": { get: untyped __js__ (\"function () { return this.get_mouseY (); }\") },\n\t\t\t\"name\": { get: untyped __js__ (\"function () { return this.get_name (); }\"), set: untyped __js__ (\"function (v) { return this.set_name (v); }\") },\n\t\t\t\"root\": { get: untyped __js__ (\"function () { return this.get_root (); }\") },\n\t\t\t\"rotation\": { get: untyped __js__ (\"function () { return this.get_rotation (); }\"), set: untyped __js__ (\"function (v) { return this.set_rotation (v); }\") },\n\t\t\t\"scaleX\": { get: untyped __js__ (\"function () { return this.get_scaleX (); }\"), set: untyped __js__ (\"function (v) { return this.set_scaleX (v); }\") },\n\t\t\t\"scaleY\": { get: untyped __js__ (\"function () { return this.get_scaleY (); }\"), set: untyped __js__ (\"function (v) { return this.set_scaleY (v); }\") },\n\t\t\t\"scrollRect\": { get: untyped __js__ (\"function () { return this.get_scrollRect (); }\"), set: untyped __js__ (\"function (v) { return this.set_scrollRect (v); }\") },\n\t\t\t\"transform\": { get: untyped __js__ (\"function () { return this.get_transform (); }\"), set: untyped __js__ (\"function (v) { return this.set_transform (v); }\") },\n\t\t\t\"visible\": { get: untyped __js__ (\"function () { return this.get_visible (); }\"), set: untyped __js__ (\"function (v) { return this.set_visible (v); }\") },\n\t\t\t\"width\": { get: untyped __js__ (\"function () { return this.get_width (); }\"), set: untyped __js__ (\"function (v) { return this.set_width (v); }\") },\n\t\t\t\"x\": { get: untyped __js__ (\"function () { return this.get_x (); }\"), set: untyped __js__ (\"function (v) { return this.set_x (v); }\") },\n\t\t\t\"y\": { get: untyped __js__ (\"function () { return this.get_y (); }\"), set: untyped __js__ (\"function (v) { return this.set_y (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__alpha = 1;\n\t\t__blendMode = NORMAL;\n\t\t__cacheAsBitmap = false;\n\t\t__transform = new Matrix ();\n\t\t__visible = true;\n\t\t\n\t\t__rotation = 0;\n\t\t__rotationSine = 0;\n\t\t__rotationCosine = 1;\n\t\t__scaleX = 1;\n\t\t__scaleY = 1;\n\t\t\n\t\t__worldAlpha = 1;\n\t\t__worldBlendMode = NORMAL;\n\t\t__worldTransform = new Matrix ();\n\t\t__worldColorTransform = new ColorTransform ();\n\t\t__renderTransform = new Matrix ();\n\t\t#if dom\n\t\t__worldVisible = true;\n\t\t#end\n\t\t\n\t\tname = \"instance\" + (++__instanceCount);\n\t\t\n\t}\n\t\n\t\n\tpublic override function addEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase Event.ACTIVATE, Event.DEACTIVATE, Event.ENTER_FRAME, Event.EXIT_FRAME, Event.FRAME_CONSTRUCTED, Event.RENDER:\n\t\t\t\t\n\t\t\t\tif (!__broadcastEvents.exists (type)) {\n\t\t\t\t\t\n\t\t\t\t\t__broadcastEvents.set (type, []);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dispatchers = __broadcastEvents.get (type);\n\t\t\t\t\n\t\t\t\tif (dispatchers.indexOf (this) == -1) {\n\t\t\t\t\t\n\t\t\t\t\tdispatchers.push (this);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\tsuper.addEventListener (type, listener, useCapture, priority, useWeakReference);\n\t\t\n\t}\n\t\n\t\n\tpublic override function dispatchEvent (event:Event):Bool {\n\t\t\n\t\tif (Std.is (event, MouseEvent)) {\n\t\t\t\n\t\t\tvar mouseEvent:MouseEvent = cast event;\n\t\t\tmouseEvent.stageX = __getRenderTransform ().__transformX (mouseEvent.localX, mouseEvent.localY);\n\t\t\tmouseEvent.stageY = __getRenderTransform ().__transformY (mouseEvent.localX, mouseEvent.localY);\n\t\t\t\n\t\t} else if (Std.is (event, TouchEvent)) {\n\t\t\t\n\t\t\tvar touchEvent:TouchEvent = cast event;\n\t\t\ttouchEvent.stageX = __getRenderTransform ().__transformX (touchEvent.localX, touchEvent.localY);\n\t\t\ttouchEvent.stageY = __getRenderTransform ().__transformY (touchEvent.localX, touchEvent.localY);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __dispatchWithCapture (event);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBounds (targetCoordinateSpace:DisplayObject):Rectangle {\n\t\t\n\t\tvar matrix;\n\t\tvar usingTemp = false;\n\t\t\n\t\tif (targetCoordinateSpace != null) {\n\t\t\t\n\t\t\tmatrix = __getWorldTransform ().clone ();\n\t\t\tmatrix.concat (targetCoordinateSpace.__getWorldTransform ().clone ().invert ());\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tusingTemp = true;\n\t\t\tmatrix = Matrix.__pool.get ();\n\t\t\tmatrix.identity ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar bounds = new Rectangle ();\n\t\t__getBounds (bounds, matrix);\n\t\t\n\t\tif (usingTemp) {\n\t\t\t\n\t\t\tMatrix.__pool.release (matrix);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn bounds;\n\t\t\n\t}\n\t\n\t\n\tpublic function getRect (targetCoordinateSpace:DisplayObject):Rectangle {\n\t\t\n\t\t// should not account for stroke widths, but is that possible?\n\t\treturn getBounds (targetCoordinateSpace);\n\t\t\n\t}\n\t\n\t\n\tpublic function globalToLocal (pos:Point):Point {\n\t\t\n\t\treturn __globalToLocal (pos, new Point ());\n\t\t\n\t}\n\t\n\t\n\tpublic function hitTestObject (obj:DisplayObject):Bool {\n\t\t\n\t\tif (obj != null && obj.parent != null && parent != null) {\n\t\t\t\n\t\t\tvar currentBounds = getBounds (this);\n\t\t\tvar targetBounds = obj.getBounds (this);\n\t\t\t\n\t\t\treturn currentBounds.intersects (targetBounds);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function hitTestPoint (x:Float, y:Float, shapeFlag:Bool = false):Bool {\n\t\t\n\t\tif (stage != null) {\n\t\t\t\n\t\t\treturn __hitTest (x, y, shapeFlag, null, true, this);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function localToGlobal (point:Point):Point {\n\t\t\n\t\treturn __getRenderTransform ().transformPoint (point);\n\t\t\n\t}\n\t\n\t\n\tpublic override function removeEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false):Void {\n\t\t\n\t\tsuper.removeEventListener (type, listener, useCapture);\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase Event.ACTIVATE, Event.DEACTIVATE, Event.ENTER_FRAME, Event.EXIT_FRAME, Event.FRAME_CONSTRUCTED, Event.RENDER:\n\t\t\t\t\n\t\t\t\tif (!hasEventListener (type)) {\n\t\t\t\t\t\n\t\t\t\t\tif (__broadcastEvents.exists (type)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__broadcastEvents.get (type).remove (this);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __cleanup ():Void {\n\t\t\n\t\t__cairo = null;\n\t\t\n\t\t#if (js && html5)\n\t\t__canvas = null;\n\t\t__context = null;\n\t\t#end\n\t\t\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\t__graphics.__cleanup ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __dispatch (event:Event):Bool {\n\t\t\n\t\tif (__eventMap != null && hasEventListener (event.type)) {\n\t\t\t\n\t\t\tvar result = super.__dispatchEvent (event);\n\t\t\t\n\t\t\tif (event.__isCanceled) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn result;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tprivate function __dispatchChildren (event:Event):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate override function __dispatchEvent (event:Event):Bool {\n\t\t\n\t\tvar result = super.__dispatchEvent (event);\n\t\t\n\t\tif (event.__isCanceled) {\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (event.bubbles && parent != null && parent != this) {\n\t\t\t\n\t\t\tevent.eventPhase = EventPhase.BUBBLING_PHASE;\n\t\t\t\n\t\t\tif (event.target == null) {\n\t\t\t\t\n\t\t\t\tevent.target = this;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tparent.__dispatchEvent (event);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\tprivate function __dispatchStack (event:Event, stack:Array<DisplayObject>):Void {\n\t\t\n\t\tvar target:DisplayObject;\n\t\tvar length = stack.length;\n\t\t\n\t\tif (length == 0) {\n\t\t\t\n\t\t\tevent.eventPhase = EventPhase.AT_TARGET;\n\t\t\ttarget = cast event.target;\n\t\t\ttarget.__dispatch (event);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tevent.eventPhase = EventPhase.CAPTURING_PHASE;\n\t\t\tevent.target = stack[stack.length - 1];\n\t\t\t\n\t\t\tfor (i in 0...length - 1) {\n\t\t\t\t\n\t\t\t\tstack[i].__dispatch (event);\n\t\t\t\t\n\t\t\t\tif (event.__isCanceled) {\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tevent.eventPhase = EventPhase.AT_TARGET;\n\t\t\ttarget = cast event.target;\n\t\t\ttarget.__dispatch (event);\n\t\t\t\n\t\t\tif (event.__isCanceled) {\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (event.bubbles) {\n\t\t\t\t\n\t\t\t\tevent.eventPhase = EventPhase.BUBBLING_PHASE;\n\t\t\t\tvar i = length - 2;\n\t\t\t\t\n\t\t\t\twhile (i >= 0) {\n\t\t\t\t\t\n\t\t\t\t\tstack[i].__dispatch (event);\n\t\t\t\t\t\n\t\t\t\t\tif (event.__isCanceled) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ti--;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __dispatchWithCapture (event:Event):Bool {\n\t\t\n\t\tif (event.target == null) {\n\t\t\t\n\t\t\tevent.target = this;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (parent != null) {\n\t\t\t\n\t\t\tevent.eventPhase = CAPTURING_PHASE;\n\t\t\t\n\t\t\tif (parent == stage) {\n\t\t\t\t\n\t\t\t\tparent.__dispatch (event);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar stack = __tempStack.get ();\n\t\t\t\tvar parent = parent;\n\t\t\t\tvar i = 0;\n\t\t\t\t\n\t\t\t\twhile (parent != null) {\n\t\t\t\t\t\n\t\t\t\t\tstack[i] = parent;\n\t\t\t\t\tparent = parent.parent;\n\t\t\t\t\ti++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (j in 0...i) {\n\t\t\t\t\t\n\t\t\t\t\tstack[i - j - 1].__dispatch (event);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__tempStack.release (stack);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tevent.eventPhase = AT_TARGET;\n\t\t\n\t\treturn __dispatchEvent (event);\n\t\t\n\t}\n\t\n\t\n\tprivate function __enterFrame (deltaTime:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function __getBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\t__graphics.__getBounds (rect, matrix);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __getCursor ():MouseCursor {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate function __getFilterBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\t// TODO: Should this be __getRenderBounds, to account for scrollRect?\n\t\t\n\t\t__getBounds (rect, matrix);\n\t\t\n\t\tif (__filters != null && __filters.length > 0) {\n\t\t\t\n\t\t\tvar extension = Rectangle.__pool.get ();\n\t\t\t\n\t\t\tfor (filter in __filters) {\n\t\t\t\textension.__expand (-filter.__leftExtension, -filter.__topExtension, filter.__leftExtension + filter.__rightExtension, filter.__topExtension + filter.__bottomExtension);\n\t\t\t}\n\t\t\t\n\t\t\trect.width += extension.width;\n\t\t\trect.height += extension.height;\n\t\t\trect.x += extension.x;\n\t\t\trect.y += extension.y;\n\t\t\t\n\t\t\tRectangle.__pool.release (extension);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __getInteractive (stack:Array<DisplayObject>):Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate function __getLocalBounds (rect:Rectangle):Void {\n\t\t\n\t\t//var cacheX = __transform.tx;\n\t\t//var cacheY = __transform.ty;\n\t\t//__transform.tx = __transform.ty = 0;\n\t\t\n\t\t__getBounds (rect, __transform);\n\t\t\n\t\t//__transform.tx = cacheX;\n\t\t//__transform.ty = cacheY;\n\t\t\n\t\trect.x -= __transform.tx;\n\t\trect.y -= __transform.ty;\n\t\t\n\t}\n\t\n\t\n\tprivate function __getRenderBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tif (__scrollRect == null) {\n\t\t\t\n\t\t\t__getBounds (rect, matrix);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar r = Rectangle.__pool.get ();\n\t\t\tr.copyFrom (__scrollRect);\n\t\t\tr.__transform (r, matrix);\n\t\t\trect.__expand (matrix.tx, matrix.ty, r.width, r.height);\n\t\t\tRectangle.__pool.release (r);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __getRenderTransform ():Matrix {\n\t\t\n\t\t__getWorldTransform ();\n\t\treturn __renderTransform;\n\t\t\n\t}\n\t\n\t\n\tprivate function __getWorldTransform ():Matrix {\n\n\t\tvar transformDirty = __transformDirty || __worldTransformInvalid;\n\n\t\tif (transformDirty) {\n\n\t\t\tvar list = [];\n\t\t\tvar current = this;\n\n\t\t\tif (parent == null) {\n\t\t\t\t\n\t\t\t\t__update (true, false);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\twhile (current != stage) {\n\t\t\t\t\t\n\t\t\t\t\tlist.push (current);\n\t\t\t\t\tcurrent = current.parent;\n\t\t\t\t\t\n\t\t\t\t\tif (current == null) break;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar i = list.length;\n\t\t\twhile (--i >= 0) {\n\n\t\t\t\tcurrent = list[i];\n\t\t\t\tcurrent.__update (true, false);\n\t\t\t\tcurrent.__worldTransformInvalid = false;\n\n\t\t\t}\n\t\t\t\t\n\n\t\t}\n\t\t\n\t\treturn __worldTransform;\n\t\t\n\t}\n\t\n\t\n\tprivate function __globalToLocal (global:Point, local:Point):Point {\n\t\t\n\t\t__getRenderTransform ();\n\t\t\n\t\tif (global == local) {\n\t\t\t\n\t\t\t__renderTransform.__transformInversePoint (global);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tlocal.x = __renderTransform.__transformInverseX (global.x, global.y);\n\t\t\tlocal.y = __renderTransform.__transformInverseY (global.x, global.y);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn local;\n\t\t\n\t}\n\t\n\t\n\tprivate function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\n\t\t\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\tif (!hitObject.visible || __isMask) return false;\n\t\t\tif (mask != null && !mask.__hitTestMask (x, y)) return false;\n\t\t\t\n\t\t\tif (__graphics.__hitTest (x, y, shapeFlag, __getRenderTransform ())) {\n\t\t\t\t\n\t\t\t\tif (stack != null && !interactiveOnly) {\n\t\t\t\t\t\n\t\t\t\t\tstack.push (hitObject);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate function __hitTestMask (x:Float, y:Float):Bool {\n\t\t\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\tif (__graphics.__hitTest (x, y, true, __getRenderTransform ())) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate function __readGraphicsData (graphicsData:Vector<IGraphicsData>, recurse:Bool):Void {\n\t\t\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\t__graphics.__readGraphicsData (graphicsData);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderCairo (renderSession:RenderSession):Void {\n\t\t\n\t\t#if lime_cairo\n\t\t__updateCacheBitmap (renderSession, !__worldColorTransform.__isDefault ());\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) {\n\t\t\t\n\t\t\tCairoBitmap.render (__cacheBitmap, renderSession);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tCairoDisplayObject.render (this, renderSession);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderCairoMask (renderSession:RenderSession):Void {\n\t\t\n\t\t#if lime_cairo\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\tCairoGraphics.renderMask (__graphics, renderSession);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderCanvas (renderSession:RenderSession):Void {\n\t\t\n\t\tif (mask == null || (mask.width > 0 && mask.height > 0)) {\n\t\t\t\n\t\t\t__updateCacheBitmap (renderSession, !__worldColorTransform.__isDefault ());\n\t\t\t\n\t\t\tif (__cacheBitmap != null && !__cacheBitmapRender) {\n\t\t\t\t\n\t\t\t\tCanvasBitmap.render (__cacheBitmap, renderSession);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tCanvasDisplayObject.render (this, renderSession);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderCanvasMask (renderSession:RenderSession):Void {\n\t\t\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\tCanvasGraphics.renderMask (__graphics, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderDOM (renderSession:RenderSession):Void {\n\t\t\n\t\t#if dom\n\t\t__updateCacheBitmap (renderSession, !__worldColorTransform.__isDefault ());\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) {\n\t\t\t\n\t\t\t__renderDOMClear (renderSession);\n\t\t\t__cacheBitmap.stage = stage;\n\t\t\t\n\t\t\tDOMBitmap.render (__cacheBitmap, renderSession);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tDOMDisplayObject.render (this, renderSession);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderDOMClear (renderSession:RenderSession):Void {\n\t\t\n\t\t#if dom\n\t\tDOMDisplayObject.clear (this, renderSession);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderGL (renderSession:RenderSession):Void {\n\t\t\n\t\t__updateCacheBitmap (renderSession, false);\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) {\n\t\t\t\n\t\t\tGLBitmap.render (__cacheBitmap, renderSession);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tGLDisplayObject.render (this, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderGLMask (renderSession:RenderSession):Void {\n\t\t\n\t\t__updateCacheBitmap (renderSession, false);\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) {\n\t\t\t\n\t\t\tGLBitmap.renderMask (__cacheBitmap, renderSession);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tGLDisplayObject.renderMask (this, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __setParentRenderDirty ():Void {\n\t\t\n\t\tvar renderParent = __renderParent != null ? __renderParent : parent;\n\t\tif (renderParent != null && !renderParent.__renderDirty) {\n\t\t\t\n\t\t\trenderParent.__renderDirty = true;\n\t\t\trenderParent.__setParentRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __setRenderDirty ():Void {\n\t\t\n\t\tif (!__renderDirty) {\n\t\t\t\n\t\t\t__renderDirty = true;\n\t\t\t__setParentRenderDirty ();\n\t\t\t\n\t\t}\n\n\t\tsetRequiresRedraw();\n\t\t\n\t}\n\t\n\t\n\tprivate function __setStageReference (stage:Stage):Void {\n\t\t\n\t\tthis.stage = stage;\n\t\t\n\t}\n\t\n\t\n\tprivate function __setTransformDirty ():Void {\n\t\t\n\t\tif (!__transformDirty) {\n\t\t\t\n\t\t\t__transformDirty = true;\n\t\t\t\n\t\t\t__setWorldTransformInvalid ();\n\t\t\t__setParentRenderDirty ();\n\t\t}\n\n\t\tsetRequiresRedraw();\n\t}\n\t\n\t\n\tprivate function __setWorldTransformInvalid ():Void {\n\t\t\n\t\t__worldTransformInvalid = true;\n\t\t\n\t}\n\t\n\t\n\tprivate function __stopAllMovieClips ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\n\tpublic function setRequiresRedraw():Void\n\t{\n\n\t\tvar p : DisplayObjectContainer = this.parent;\n\t\tvar frameID : UInt = Stage.frameID;\n\t\t_lastParentOrSelfChangeFrameID = frameID;\n\n\t\twhile (p != null && p._lastChildChangeFrameID != frameID) {\n\n\t\t\tp._lastChildChangeFrameID = frameID;\n\t\t\tp = p.parent;\n\n\t\t}\n\n\t}\n\n\tpublic function __forceUpdateTransforms():Void {\n\n\t\tvar renderParent = __renderParent != null ? __renderParent : parent;\n\t\t__renderable = (visible && __scaleX != 0 && __scaleY != 0 && !__isMask && (renderParent == null || !renderParent.__isMask));\n\t\t__updateTransforms();\n\t\t__transformDirty = false;\n\n\t}\n\t\n\tpublic function __update (transformOnly:Bool, updateChildren:Bool, ?maskGraphics:Graphics = null):Void {\n\n\t\tvar renderParent = __renderParent != null ? __renderParent : parent;\n\t\tif (__isMask && renderParent == null) renderParent = __maskTarget;\n\t\t__renderable = (visible && __scaleX != 0 && __scaleY != 0 && !__isMask && (renderParent == null || !renderParent.__isMask));\n\t\t__updateTransforms ();\n\t\t\n\t\t//if (updateChildren && __transformDirty) {\n\t\t\t\n\t\t\t__transformDirty = false;\n\t\t\t\n\t\t//}\n\t\t\n\t\tif (maskGraphics != null) {\n\t\t\t\n\t\t\t__updateMask (maskGraphics);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!transformOnly) {\n\t\t\t\n\t\t\t#if dom\n\t\t\t__renderTransformChanged = !__renderTransform.equals (__renderTransformCache);\n\t\t\t\n\t\t\tif (__renderTransformCache == null) {\n\t\t\t\t\n\t\t\t\t__renderTransformCache = __renderTransform.clone ();\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__renderTransformCache.copyFrom (__renderTransform);\n\t\t\t\t\n\t\t\t}\n\t\t\t#end\n\t\t\t\n\t\t\tif (!__worldColorTransform.__equals (transform.colorTransform)) {\n\t\t\t\t\n\t\t\t\t__worldColorTransform = transform.colorTransform.__clone ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (renderParent != null) {\n\t\t\t\t\n\t\t\t\t#if !dom\n\t\t\t\t\n\t\t\t\t__worldAlpha = alpha * renderParent.__worldAlpha;\n\t\t\t\t__worldColorTransform.__combine (renderParent.__worldColorTransform);\n\t\t\t\t\n\t\t\t\tif (__blendMode == null || __blendMode == NORMAL) {\n\t\t\t\t\t\n\t\t\t\t\t// TODO: Handle multiple blend modes better\n\t\t\t\t\t__worldBlendMode = renderParent.__blendMode;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t__worldBlendMode = __blendMode;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\n\t\t\t\tvar worldVisible = (renderParent.__worldVisible && visible);\n\t\t\t\t__worldVisibleChanged = (__worldVisible != worldVisible);\n\t\t\t\t__worldVisible = worldVisible;\n\t\t\t\t\n\t\t\t\tvar worldAlpha = alpha * renderParent.__worldAlpha;\n\t\t\t\t__worldAlphaChanged = (__worldAlpha != worldAlpha);\n\t\t\t\t__worldAlpha = worldAlpha;\n\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__worldAlpha = alpha;\n\t\t\t\t\n\t\t\t\t#if dom\n\t\t\t\t\n\t\t\t\t__worldVisibleChanged = (__worldVisible != visible);\n\t\t\t\t__worldVisible = visible;\n\t\t\t\t\n\t\t\t\t__worldAlphaChanged = (__worldAlpha != alpha);\n\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t//if (updateChildren && __renderDirty) {\n\t\t\t\t\n\t\t\t\t//__renderDirty = false;\n\t\t\t\t\n\t\t\t//}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (updateChildren && mask != null) {\n\t\t\t\n\t\t\tmask.__update (transformOnly, true, maskGraphics);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __updateCacheBitmap (renderSession:RenderSession, force:Bool):Void {\n\t\t\n\t\tif (__cacheBitmapRender) return;\n\t\t\n\t\tif (cacheAsBitmap) {\n\t\t\t\n\t\t\tvar matrix = null, rect = null;\n\t\t\t\n\t\t\t//if (!renderSession.lockTransform) __getWorldTransform ();\n\t\t\t__update (false, true);\n\t\t\t\n\t\t\tvar needRender = (__cacheBitmap == null || (__renderDirty && (force || (__children != null && __children.length > 0) || (__graphics!= null && __graphics.__dirty))) || opaqueBackground != __cacheBitmapBackground || !__cacheBitmapColorTransform.__equals (__worldColorTransform));\n\t\t\tvar updateTransform = (needRender || (!__cacheBitmap.__worldTransform.equals (__worldTransform)));\n\t\t\tvar hasFilters = (__filters != null && __filters.length > 0);\n\t\t\t\n\t\t\tvar bitmapWidth = 0, bitmapHeight = 0;\n\t\t\t\n\t\t\tif (updateTransform || hasFilters) {\n\t\t\t\t\n\t\t\t\tmatrix = Matrix.__pool.get ();\n\t\t\t\trect = Rectangle.__pool.get ();\n\t\t\t\tmatrix.identity ();\n\t\t\t\t\n\t\t\t\t__getFilterBounds (rect, __renderTransform);\n\t\t\t\t\n\t\t\t\tbitmapWidth = Math.ceil (rect.width);\n\t\t\t\tbitmapHeight = Math.ceil (rect.height);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hasFilters) {\n\t\t\t\t\n\t\t\t\tif (__cacheBitmap != null && (bitmapWidth != __cacheBitmap.width || bitmapHeight != __cacheBitmap.height)) {\n\t\t\t\t\t\n\t\t\t\t\tneedRender = true;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tfor (filter in __filters) {\n\t\t\t\t\t\tif (filter.__renderDirty) {\n\t\t\t\t\t\t\tneedRender = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (needRender) {\n\t\t\t\t\n\t\t\t\t__cacheBitmapBackground = opaqueBackground;\n\t\t\t\tvar color = opaqueBackground != null ? (0xFF << 24) | opaqueBackground : 0;\n\t\t\t\t\n\t\t\t\tif (rect.width >= 0.5 && rect.height >= 0.5) {\n\t\t\t\t\t\n\t\t\t\t\tif (__cacheBitmap == null || bitmapWidth != __cacheBitmap.width || bitmapHeight != __cacheBitmap.height) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__cacheBitmapData = new BitmapData (bitmapWidth, bitmapHeight, true, color);\n\t\t\t\t\t\t//__cacheBitmapData.disposeImage ();\n\t\t\t\t\t\t\n\t\t\t\t\t\t#if !openfljs\n\t\t\t\t\t\tif (__cacheBitmap == null) __cacheBitmap = new Bitmap ();\n\t\t\t\t\t\t__cacheBitmap.__bitmapData = __cacheBitmapData;\n\t\t\t\t\t\t#end\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__cacheBitmapData.fillRect (__cacheBitmapData.rect, color);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t__cacheBitmap = null;\n\t\t\t\t\t__cacheBitmapData = null;\n\t\t\t\t\treturn;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (updateTransform || needRender) {\n\t\t\t\t\n\t\t\t\t__cacheBitmap.__worldTransform.copyFrom (__worldTransform);\n\t\t\t\t\n\t\t\t\t__cacheBitmap.__renderTransform.identity ();\n\t\t\t\t__cacheBitmap.__renderTransform.tx = rect.x;\n\t\t\t\t__cacheBitmap.__renderTransform.ty = rect.y;\n\t\t\t\t\n\t\t\t\tmatrix.concat (__renderTransform);\n\t\t\t\tmatrix.tx -= Math.round (rect.x);\n\t\t\t\tmatrix.ty -= Math.round (rect.y);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__cacheBitmap.smoothing = renderSession.allowSmoothing;\n\t\t\t__cacheBitmap.__renderable = __renderable;\n\t\t\t__cacheBitmap.__worldAlpha = __worldAlpha;\n\t\t\t__cacheBitmap.__worldBlendMode = __worldBlendMode;\n\t\t\t__cacheBitmap.__scrollRect = __scrollRect;\n\t\t\t//__cacheBitmap.filters = filters;\n\t\t\t__cacheBitmap.mask = __mask;\n\t\t\t\n\t\t\tif (needRender) {\n\t\t\t\t\n\t\t\t\t__cacheBitmapRender = true;\n\t\t\t\t\n\t\t\t\t@:privateAccess __cacheBitmapData.__draw (this, matrix, null, null, null, renderSession.allowSmoothing);\n\t\t\t\t\n\t\t\t\tif (hasFilters) {\n\t\t\t\t\t\n\t\t\t\t\tvar needSecondBitmapData = false;\n\t\t\t\t\tvar needCopyOfOriginal = false;\n\t\t\t\t\t\n\t\t\t\t\tfor (filter in __filters) {\n\t\t\t\t\t\tif (filter.__needSecondBitmapData) {\n\t\t\t\t\t\t\tneedSecondBitmapData = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (filter.__preserveObject) {\n\t\t\t\t\t\t\tneedCopyOfOriginal = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar bitmapData = __cacheBitmapData;\n\t\t\t\t\tvar bitmapData2 = null;\n\t\t\t\t\tvar bitmapData3 = null;\n\t\t\t\t\t\n\t\t\t\t\t// TODO: Cache if used repeatedly\n\t\t\t\t\t\n\t\t\t\t\tif (needSecondBitmapData) {\n\t\t\t\t\t\tbitmapData2 = new BitmapData (bitmapData.width, bitmapData.height, true, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitmapData2 = bitmapData;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (needCopyOfOriginal) {\n\t\t\t\t\t\tbitmapData3 = new BitmapData (bitmapData.width, bitmapData.height, true, 0);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar sourceRect = bitmapData.rect;\n\t\t\t\t\tvar destPoint = new Point (); // TODO: ObjectPool\n\t\t\t\t\tvar cacheBitmap, lastBitmap;\n\t\t\t\t\t\n\t\t\t\t\tfor (filter in __filters) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (filter.__preserveObject) {\n\t\t\t\t\t\t\tbitmapData3.copyPixels (bitmapData, bitmapData.rect, destPoint);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tlastBitmap = filter.__applyFilter (bitmapData2, bitmapData, sourceRect, destPoint);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (filter.__preserveObject) {\n\t\t\t\t\t\t\tlastBitmap.draw (bitmapData3, null, transform.colorTransform);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfilter.__renderDirty = false;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (needSecondBitmapData && lastBitmap == bitmapData2) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcacheBitmap = bitmapData;\n\t\t\t\t\t\t\tbitmapData = bitmapData2;\n\t\t\t\t\t\t\tbitmapData2 = cacheBitmap;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t__cacheBitmap.bitmapData = bitmapData;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__cacheBitmapRender = false;\n\t\t\t\t\n\t\t\t\tif (__cacheBitmapColorTransform == null) __cacheBitmapColorTransform = new ColorTransform ();\n\t\t\t\t__cacheBitmapColorTransform.__copyFrom (__worldColorTransform);\n\t\t\t\t\n\t\t\t\tif (!__cacheBitmapColorTransform.__isDefault ()) {\n\t\t\t\t\t\n\t\t\t\t\t__cacheBitmapData.colorTransform (__cacheBitmapData.rect, __cacheBitmapColorTransform);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (updateTransform) {\n\t\t\t\t\n\t\t\t\t__update (false, true);\n\t\t\t\t\n\t\t\t\tMatrix.__pool.release (matrix);\n\t\t\t\tRectangle.__pool.release (rect);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (__cacheBitmap != null) {\n\t\t\t\n\t\t\t#if dom\n\t\t\t__cacheBitmap.__renderDOMClear (renderSession);\n\t\t\t#end\n\t\t\t\n\t\t\t__cacheBitmap = null;\n\t\t\t__cacheBitmapData = null;\n\t\t\t__cacheBitmapColorTransform = null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function __updateChildren (transformOnly:Bool):Void {\n\t\t\n\t\tvar renderParent = __renderParent != null ? __renderParent : parent;\n\t\t__renderable = (visible && __scaleX != 0 && __scaleY != 0 && !__isMask && (renderParent == null || !renderParent.__isMask));\n\t\t__worldAlpha = alpha;\n\t\t__worldBlendMode = blendMode;\n\t\t\n\t\tif (__transformDirty) {\n\t\t\t\n\t\t\t__transformDirty = false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function __updateMask (maskGraphics:Graphics):Void {\n\t\t\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\tmaskGraphics.__commands.overrideMatrix (this.__worldTransform);\n\t\t\tmaskGraphics.__commands.append (__graphics.__commands);\n\t\t\tmaskGraphics.__dirty = true;\n\t\t\tmaskGraphics.__visible = true;\n\t\t\t\n\t\t\tif (maskGraphics.__bounds == null) {\n\t\t\t\t\n\t\t\t\tmaskGraphics.__bounds = new Rectangle();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__graphics.__getBounds (maskGraphics.__bounds, @:privateAccess Matrix.__identity);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function __updateTransforms (overrideTransform:Matrix = null):Void {\n\t\t\n\t\tvar overrided = overrideTransform != null;\n\t\tvar local = overrided ? overrideTransform : __transform;\n\t\t\n\t\tif (__worldTransform == null) {\n\t\t\t\n\t\t\t__worldTransform = new Matrix ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__renderTransform == null) {\n\t\t\t\n\t\t\t__renderTransform = new Matrix ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar renderParent = __renderParent != null ? __renderParent : parent;\n\t\tvar parentTransform;\n\t\t\n\t\tif (!overrided && parent != null) {\n\t\t\t\n\t\t\tparentTransform = parent.__worldTransform;\n\t\t\t\n\t\t\t__worldTransform.a = local.a * parentTransform.a + local.b * parentTransform.c;\n\t\t\t__worldTransform.b = local.a * parentTransform.b + local.b * parentTransform.d;\n\t\t\t__worldTransform.c = local.c * parentTransform.a + local.d * parentTransform.c;\n\t\t\t__worldTransform.d = local.c * parentTransform.b + local.d * parentTransform.d;\n\t\t\t__worldTransform.tx = local.tx * parentTransform.a + local.ty * parentTransform.c + parentTransform.tx;\n\t\t\t__worldTransform.ty = local.tx * parentTransform.b + local.ty * parentTransform.d + parentTransform.ty;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__worldTransform.copyFrom (local);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!overrided && renderParent != null) {\n\t\t\t\n\t\t\tparentTransform = renderParent.__renderTransform;\n\t\t\t\n\t\t\t__renderTransform.a = local.a * parentTransform.a + local.b * parentTransform.c;\n\t\t\t__renderTransform.b = local.a * parentTransform.b + local.b * parentTransform.d;\n\t\t\t__renderTransform.c = local.c * parentTransform.a + local.d * parentTransform.c;\n\t\t\t__renderTransform.d = local.c * parentTransform.b + local.d * parentTransform.d;\n\t\t\t__renderTransform.tx = local.tx * parentTransform.a + local.ty * parentTransform.c + parentTransform.tx;\n\t\t\t__renderTransform.ty = local.tx * parentTransform.b + local.ty * parentTransform.d + parentTransform.ty;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__renderTransform.copyFrom (local);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__scrollRect != null) {\n\t\t\t\n\t\t\t__renderTransform.__translateTransformed (-__scrollRect.x, -__scrollRect.y);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_alpha ():Float {\n\t\t\n\t\treturn __alpha;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_alpha (value:Float):Float {\n\t\t\n\t\tif (value > 1.0) value = 1.0;\n\t\tif (value != __alpha) __setRenderDirty ();\n\t\treturn __alpha = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_blendMode ():BlendMode {\n\t\t\n\t\treturn __blendMode;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_blendMode (value:BlendMode):BlendMode {\n\t\t\n\t\tif (value == null) value = NORMAL;\n\t\tif (value != __blendMode) __setRenderDirty ();\n\t\treturn __blendMode = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_cacheAsBitmap ():Bool {\n\t\t\n\t\treturn false;//(__filters == null ? __cacheAsBitmap : true);\n\t\t\n\t}\n\t\n\t\n\tprivate function set_cacheAsBitmap (value:Bool):Bool {\n\t\t\n\t\t__setRenderDirty ();\n\t\treturn __cacheAsBitmap = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_cacheAsBitmapMatrix ():Matrix {\n\t\t\n\t\treturn __cacheAsBitmapMatrix;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_cacheAsBitmapMatrix (value:Matrix):Matrix {\n\t\t\n\t\t__setRenderDirty ();\n\t\treturn __cacheAsBitmapMatrix = value.clone ();\n\t\t\n\t}\n\t\n\t\n\tprivate function get_filters ():Array<BitmapFilter> {\n\t\t\n\t\tif (__filters == null) {\n\t\t\t\n\t\t\treturn new Array ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn __filters.copy ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function set_filters (value:Array<BitmapFilter>):Array<BitmapFilter> {\n\t\t\n\t\tif (value != null && value.length > 0) {\n\t\t\t\n\t\t\t__filters = value;\n\t\t\t//__updateFilters = true;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__filters = null;\n\t\t\t//__updateFilters = false;\n\t\t\t\n\t\t}\n\t\t\n\t\t__setRenderDirty ();\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_height ():Float {\n\t\t\n\t\tvar rect = Rectangle.__pool.get ();\n\t\t__getLocalBounds (rect);\n\t\tvar height = rect.height;\n\t\tRectangle.__pool.release (rect);\n\t\treturn height;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_height (value:Float):Float {\n\t\t\n\t\tvar rect = Rectangle.__pool.get ();\n\t\tvar matrix = Matrix.__pool.get ();\n\t\tmatrix.identity ();\n\t\t\n\t\t__getBounds (rect, matrix);\n\t\t\n\t\tif (value != rect.height) {\n\t\t\t\n\t\t\tscaleY = value / rect.height;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tscaleY = 1;\n\t\t\t\n\t\t}\n\t\t\n\t\tRectangle.__pool.release (rect);\n\t\tMatrix.__pool.release (matrix);\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_loaderInfo ():LoaderInfo {\n\t\t\n\t\tif (stage != null) {\n\t\t\t\n\t\t\treturn Lib.current.__loaderInfo;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_mask ():DisplayObject {\n\t\t\n\t\treturn __mask;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_mask (value:DisplayObject):DisplayObject {\n\t\t\n\t\tif (value != __mask) {\n\t\t\t\n\t\t\t__setTransformDirty ();\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__mask != null) {\n\t\t\t\n\t\t\t__mask.__isMask = false;\n\t\t\t__mask.__maskTarget = null;\n\t\t\t__mask.__setTransformDirty ();\n\t\t\t__mask.__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (value != null) {\n\t\t\t\n\t\t\tvalue.__isMask = true;\n\t\t\tvalue.__maskTarget = this;\n\t\t\tvalue.__setWorldTransformInvalid ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__cacheBitmap != null && __cacheBitmap.mask != value) {\n\t\t\t\n\t\t\t__cacheBitmap.mask = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __mask = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_mouseX ():Float {\n\t\t\n\t\tvar mouseX = (stage != null ? stage.__mouseX : Lib.current.stage.__mouseX);\n\t\tvar mouseY = (stage != null ? stage.__mouseY : Lib.current.stage.__mouseY);\n\t\t\n\t\treturn __getRenderTransform ().__transformInverseX (mouseX, mouseY);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_mouseY ():Float {\n\t\t\n\t\tvar mouseX = (stage != null ? stage.__mouseX : Lib.current.stage.__mouseX);\n\t\tvar mouseY = (stage != null ? stage.__mouseY : Lib.current.stage.__mouseY);\n\t\t\n\t\treturn __getRenderTransform ().__transformInverseY (mouseX, mouseY);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_name ():String {\n\t\t\n\t\treturn __name;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_name (value:String):String {\n\t\t\n\t\treturn __name = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_root ():DisplayObject {\n\t\t\n\t\tif (stage != null) {\n\t\t\t\n\t\t\treturn Lib.current;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_rotation ():Float {\n\t\t\n\t\treturn __rotation;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_rotation (value:Float):Float {\n\t\t\n\t\tif (value != __rotation) {\n\t\t\t\n\t\t\t__rotation = value;\n\t\t\tvar radians = __rotation * (Math.PI / 180);\n\t\t\t__rotationSine = Math.sin (radians);\n\t\t\t__rotationCosine = Math.cos (radians);\n\t\t\t\n\t\t\t__transform.a = __rotationCosine * __scaleX;\n\t\t\t__transform.b = __rotationSine * __scaleX;\n\t\t\t__transform.c = -__rotationSine * __scaleY;\n\t\t\t__transform.d = __rotationCosine * __scaleY;\n\t\t\t\n\t\t\t__setTransformDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:keep private function get_scaleX ():Float {\n\t\t\n\t\treturn __scaleX;\n\t\t\n\t}\n\t\n\t\n\t@:keep private function set_scaleX (value:Float):Float {\n\t\t\n\t\tif (value != __scaleX) {\n\t\t\t\n\t\t\t__scaleX = value;\n\t\t\t\n\t\t\tif (__transform.b == 0) {\n\t\t\t\t\n\t\t\t\tif (value != __transform.a) __setTransformDirty ();\n\t\t\t\t__transform.a = value;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar a = __rotationCosine * value;\n\t\t\t\tvar b = __rotationSine * value;\n\t\t\t\t\n\t\t\t\tif (__transform.a != a || __transform.b != b) {\n\t\t\t\t\t\n\t\t\t\t\t__setTransformDirty ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__transform.a = a;\n\t\t\t\t__transform.b = b;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:keep private function get_scaleY ():Float {\n\t\t\n\t\treturn __scaleY;\n\t\t\n\t}\n\t\n\t\n\t@:keep private function set_scaleY (value:Float):Float {\n\t\t\n\t\tif (value != __scaleY) {\n\t\t\t\n\t\t\t__scaleY = value;\n\t\t\t\n\t\t\tif (__transform.c == 0) {\n\t\t\t\t\n\t\t\t\tif (value != __transform.d) __setTransformDirty ();\n\t\t\t\t__transform.d = value;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar c = -__rotationSine * value;\n\t\t\t\tvar d = __rotationCosine * value;\n\t\t\t\t\n\t\t\t\tif (__transform.d != d || __transform.c != c) {\n\t\t\t\t\t\n\t\t\t\t\t__setTransformDirty ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__transform.c = c;\n\t\t\t\t__transform.d = d;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_scrollRect ():Rectangle {\n\t\t\n\t\tif (__scrollRect == null) {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __scrollRect.clone();\n\t\t\n\t}\n\t\n\t\n\tprivate function set_scrollRect (value:Rectangle):Rectangle {\n\t\t\n\t\tif (value != __scrollRect) {\n\t\t\t\n\t\t\t__setTransformDirty ();\n\t\t\t#if dom __setRenderDirty (); #end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __scrollRect = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_transform ():Transform {\n\t\t\n\t\tif (__objectTransform == null) {\n\t\t\t\n\t\t\t__objectTransform = new Transform (this);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __objectTransform;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_transform (value:Transform):Transform {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\tthrow new TypeError (\"Parameter transform must be non-null.\");\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__objectTransform == null) {\n\t\t\t\n\t\t\t__objectTransform = new Transform (this);\n\t\t\t\n\t\t}\n\t\t\n\t\t__setTransformDirty ();\n\t\t__objectTransform.matrix = value.matrix;\n\t\t__objectTransform.colorTransform = value.colorTransform.__clone();\n\t\t\n\t\treturn __objectTransform;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_visible ():Bool {\n\t\t\n\t\treturn __visible;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_visible (value:Bool):Bool {\n\t\t\n\t\tif (value != __visible) __setRenderDirty ();\n\t\treturn __visible = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_width ():Float {\n\t\t\n\t\tvar rect = Rectangle.__pool.get ();\n\t\t__getLocalBounds (rect);\n\t\tvar width = rect.width;\n\t\tRectangle.__pool.release (rect);\n\t\treturn width;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_width (value:Float):Float {\n\t\t\n\t\tvar rect = Rectangle.__pool.get ();\n\t\tvar matrix = Matrix.__pool.get ();\n\t\tmatrix.identity ();\n\t\t\n\t\t__getBounds (rect, matrix);\n\t\t\n\t\tif (value != rect.width) {\n\t\t\t\n\t\t\tscaleX = value / rect.width;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tscaleX = 1;\n\t\t\t\n\t\t}\n\t\t\n\t\tRectangle.__pool.release (rect);\n\t\tMatrix.__pool.release (matrix);\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_x ():Float {\n\t\t\n\t\treturn __transform.tx;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_x (value:Float):Float {\n\t\t\n\t\tif (value != __transform.tx) __setTransformDirty ();\n\t\treturn __transform.tx = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_y ():Float {\n\t\t\n\t\treturn __transform.ty;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_y (value:Float):Float {\n\t\t\n\t\tif (value != __transform.ty) __setTransformDirty ();\n\t\treturn __transform.ty = value;\n\t\t\n\t}\n\t\n\t\n}\n","package openfl.display;\n\n\nimport openfl.geom.Rectangle;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass InteractiveObject extends DisplayObject {\n\t\n\t\n\tpublic var doubleClickEnabled:Bool;\n\tpublic var focusRect:Null<Bool>;\n\tpublic var mouseEnabled:Bool;\n\tpublic var needsSoftKeyboard:Bool;\n\t\n\tpublic var softKeyboardInputAreaOfInterest:Rectangle;\n\tpublic var tabEnabled (get, set):Bool;\n\tpublic var tabIndex (get, set):Int;\n\t\n\tprivate var __tabEnabled:Null<Bool>;\n\tprivate var __tabIndex:Int;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (InteractiveObject.prototype, {\n\t\t\t\"tabEnabled\": { get: untyped __js__ (\"function () { return this.get_tabEnabled (); }\"), set: untyped __js__ (\"function (v) { return this.set_tabEnabled (v); }\") },\n\t\t\t\"tabIndex\": { get: untyped __js__ (\"function () { return this.get_tabIndex (); }\"), set: untyped __js__ (\"function (v) { return this.set_tabIndex (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tdoubleClickEnabled = false;\n\t\tmouseEnabled = true;\n\t\tneedsSoftKeyboard = false;\n\t\t__tabEnabled = null;\n\t\t__tabIndex = -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function requestSoftKeyboard ():Bool {\n\t\t\n\t\topenfl._internal.Lib.notImplemented ();\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate function __allowMouseFocus ():Bool {\n\t\t\n\t\treturn tabEnabled;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getInteractive (stack:Array<DisplayObject>):Bool {\n\t\t\n\t\tif (stack != null) {\n\t\t\t\n\t\t\tstack.push (this);\n\t\t\t\n\t\t\tif (parent != null) {\n\t\t\t\t\n\t\t\t\tparent.__getInteractive (stack);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\n\t\t\n\t\tif (!hitObject.visible || __isMask || (interactiveOnly && !mouseEnabled)) return false;\n\t\treturn super.__hitTest (x, y, shapeFlag, stack, interactiveOnly, hitObject);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_tabEnabled ():Bool {\n\t\t\n\t\treturn __tabEnabled == true ? true : false;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_tabEnabled (value:Bool):Bool {\n\t\t\n\t\treturn __tabEnabled = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_tabIndex ():Int {\n\t\t\n\t\treturn __tabIndex;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_tabIndex (value:Int):Int {\n\t\t\n\t\treturn __tabIndex = value;\n\t\t\n\t}\n\t\n\t\n}\n","package openfl.display;\n\n\nimport Type.ValueType;\nimport openfl._internal.renderer.cairo.CairoGraphics;\nimport openfl._internal.renderer.cairo.CairoRenderer;\nimport openfl._internal.renderer.canvas.CanvasGraphics;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.Stage;\nimport openfl.errors.RangeError;\nimport openfl.errors.TypeError;\nimport openfl.events.Event;\nimport openfl.events.EventPhase;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.events.Event)\n@:access(openfl.display.Graphics)\n@:access(openfl.errors.Error)\n@:access(openfl.geom.Point)\n@:access(openfl.geom.Rectangle)\n\n\nclass DisplayObjectContainer extends InteractiveObject {\n\t\n\t\n\tpublic var mouseChildren:Bool;\n\tpublic var numChildren (get, never):Int;\n\tpublic var tabChildren:Bool;\n\n\tprivate var __isInitialized:Bool;\n\tprivate var __removedChildren:Vector<DisplayObject>;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperty (DisplayObjectContainer.prototype, \"numChildren\", { get: untyped __js__ (\"function () { return this.get_numChildren (); }\") });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tmouseChildren = true;\n\t\t__isInitialized = false;\n\t\t__children = new Array<DisplayObject> ();\n\t\t__removedChildren = new Vector<DisplayObject> ();\n\n\t\t\n\t}\n\t\n\t\n\tpublic function addChild (child:DisplayObject):DisplayObject {\n\n\t\treturn addChildAt (child, numChildren);\n\t\t\n\t}\n\n\tprivate function __addChildAtInternal (child:DisplayObject, index:Int):DisplayObject {\n\t\tif (child == null) {\n\n\t\t\tvar error = new TypeError (\"Error #2007: Parameter child must be non-null.\");\n\t\t\terror.errorID = 2007;\n\t\t\tthrow error;\n\n\t\t}\n\t\tif (index > __children.length || index < 0) {\n\n\t\t\tthrow \"Invalid index position \" + index;\n\n\t\t}\n\n\t\tif (child.parent == this) {\n\n\t\t\tif (__children[index] != child) {\n\n\t\t\t\t__children.remove (child);\n\t\t\t\t__children.insert (index, child);\n\n\t\t\t\t__setRenderDirty ();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif (child.parent != null) {\n\n\t\t\t\tchild.parent.removeChild (child);\n\n\t\t\t}\n\n\t\t\t__children.insert (index, child);\n\t\t\tchild.parent = this;\n\n\t\t\tvar addedToStage = (stage != null && child.stage == null);\n\n\t\t\tif (addedToStage) {\n\n\t\t\t\tthis.__setStageReference (stage);\n\n\t\t\t}\n\n\t\t\tchild.__setTransformDirty ();\n\t\t\tchild.__setRenderDirty ();\n\t\t\t__setRenderDirty();\n\n\t\t\tvar event = new Event (Event.ADDED, true);\n\t\t\tevent.target = child;\n\t\t\tchild.__dispatchWithCapture (event);\n\n\t\t\tif (addedToStage) {\n\n\t\t\t\tvar event = new Event (Event.ADDED_TO_STAGE, false, false);\n\t\t\t\tchild.__dispatchWithCapture (event);\n\t\t\t\tchild.__dispatchChildren (event);\n\n\t\t\t}\n\n\t\t}\n\n\t\t__initializeChild(child);\n\n\t\treturn child;\n\t}\n\n\tpublic function addChildAt (child:DisplayObject, index:Int):DisplayObject {\n\n\t\t__initializeSelf(); //make sure children are initialized\n\n\t\treturn __addChildAtInternal(child, index);\n\t}\n\t\n\t\n\tpublic function areInaccessibleObjectsUnderPoint (point:Point):Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function contains (child:DisplayObject):Bool {\n\t\t\n\t\twhile (child != this && child != null) {\n\t\t\t\n\t\t\tchild = child.parent;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn child == this;\n\t\t\n\t}\n\t\n\t\n\tpublic function getChildAt (index:Int):DisplayObject {\n\n\t\t__initializeSelf();//make sure children are initialized\n\t\tif (index >= 0 && index < __children.length) {\n\t\t\tvar child =  __children[index];\n\t\t\treturn child;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\n\n\tprivate function __initializeSelf() : Void{\n\t\tif(!__isInitialized) {\n\t\t\t__isInitialized = true;\n\t\t\t__enterFrame(0);\n\t\t}\n\t}\n\tprivate function __initializeChild(child : DisplayObject) : Void{\n\n\t\tvar fun = Reflect.field(child,\"__initializeSelf\");\n\t\tif(Reflect.isFunction(fun))\n\t\t{\n\t\t\tReflect.callMethod(child, fun, [0]);\n\t\t}\n\t}\n\t\n\tpublic function getChildByName (name:String):DisplayObject {\n\n\t\t__initializeSelf();\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tif (child.name == name) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t\n\tpublic function getChildIndex (child:DisplayObject):Int {\n\n\t\t__initializeSelf();\n\t\tfor (i in 0...__children.length) {\n\t\t\t\n\t\t\tif (__children[i] == child) return i;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function getObjectsUnderPoint (point:Point):Array<DisplayObject> {\n\t\t\n\t\tvar stack = new Array<DisplayObject> ();\n\t\t__hitTest (point.x, point.y, false, stack, false, this);\n\t\tstack.reverse ();\n\t\treturn stack;\n\t\t\n\t}\n\t\n\t\n\tpublic function removeChild (child:DisplayObject):DisplayObject {\n\t\t\n\t\tif (child != null && child.parent == this) {\n\t\t\t\n\t\t\tchild.__setTransformDirty ();\n\t\t\tchild.__setRenderDirty ();\n\t\t\t__setRenderDirty();\n\t\t\t\n\t\t\tvar event = new Event (Event.REMOVED, true);\n\t\t\tchild.__dispatchWithCapture (event);\n\t\t\t\n\t\t\tif (stage != null) {\n\t\t\t\t\n\t\t\t\tif (child.stage != null && stage.focus == child) {\n\t\t\t\t\t\n\t\t\t\t\tstage.focus = null;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar event = new Event (Event.REMOVED_FROM_STAGE, false, false);\n\t\t\t\tchild.__dispatchWithCapture (event);\n\t\t\t\tchild.__dispatchChildren (event);\n\t\t\t\tchild.__setStageReference (null);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tchild.parent = null;\n\t\t\t__children.remove (child);\n\t\t\t__removedChildren.push (child);\n\t\t\tchild.__setTransformDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn child;\n\t\t\n\t}\n\t\n\t\n\tpublic function removeChildAt (index:Int):DisplayObject {\n\t\t\n\t\tif (index >= 0 && index < __children.length) {\n\t\t\t\n\t\t\treturn removeChild (__children[index]);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function removeChildren (beginIndex:Int = 0, endIndex:Int = 0x7FFFFFFF):Void {\n\t\t\n\t\tif (endIndex == 0x7FFFFFFF) { \n\t\t\t\n\t\t\tendIndex = __children.length - 1;\n\t\t\t\n\t\t\tif (endIndex < 0) {\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (beginIndex > __children.length - 1) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t} else if (endIndex < beginIndex || beginIndex < 0 || endIndex > __children.length) {\n\t\t\t\n\t\t\tthrow new RangeError (\"The supplied index is out of bounds.\");\n\t\t\t\n\t\t}\n\t\t\n\t\tvar numRemovals = endIndex - beginIndex;\n\t\twhile (numRemovals >= 0) {\n\t\t\t\n\t\t\tremoveChildAt (beginIndex);\n\t\t\tnumRemovals--;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function resolve (fieldName:String):DisplayObject {\n\t\t\n\t\tif (__children == null) return null;\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tif (child.name == fieldName) {\n\t\t\t\t\n\t\t\t\treturn child;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function setChildIndex (child:DisplayObject, index:Int):Void {\n\n\t\t__initializeSelf();\n\t\tif (index < 0 || index > __children.length || child.parent != this || __children[index] == child)\n\t\t\treturn;\n\t\t__children.remove (child);\n\t\t__children.insert (index, child);\n\t\t\n\t}\n\t\n\t\n\tpublic function stopAllMovieClips ():Void {\n\t\t\n\t\t__stopAllMovieClips ();\n\t\t\n\t}\n\t\n\t\n\tpublic function swapChildren (child1:DisplayObject, child2:DisplayObject):Void {\n\n\t\t__initializeSelf();\n\t\tif (child1.parent == this && child2.parent == this) {\n\t\t\t\n\t\t\tvar index1 = __children.indexOf (child1);\n\t\t\tvar index2 = __children.indexOf (child2);\n\t\t\t\n\t\t\t__children[index1] = child2;\n\t\t\t__children[index2] = child1;\n\t\t\t\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function swapChildrenAt (index1:Int, index2:Int):Void {\n\n\t\t__initializeSelf();\n\t\tvar swap:DisplayObject = __children[index1];\n\t\t__children[index1] = __children[index2];\n\t\t__children[index2] = swap;\n\t\tswap = null;\n\t\t__setRenderDirty ();\n\t\t\n\t}\n\t\n\t\n\tprivate override function __dispatchChildren (event:Event):Void {\n\t\t\n\t\tif (__children != null) {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tevent.target = child;\n\t\t\t\t\n\t\t\t\tif (!child.__dispatchWithCapture (event)) {\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tchild.__dispatchChildren (event);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __enterFrame (deltaTime:Int):Void {\n\t\tif(__children == null) return;\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tchild.__enterFrame (deltaTime);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tsuper.__getBounds (rect, matrix);\n\t\t\n\t\tif (__children.length == 0) return;\n\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\t__updateTransforms (matrix);\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tif (child.__scaleX == 0 || child.__scaleY == 0) continue;\n\t\t\tchild.__getBounds (rect, child.__worldTransform);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\t__updateTransforms ();\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getFilterBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tsuper.__getFilterBounds (rect, matrix);\n\t\t\n\t\tif (__children.length == 0) return;\n\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\t__updateTransforms (matrix);\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tif (child.__scaleX == 0 || child.__scaleY == 0 || child.__isMask) continue;\n\t\t\tchild.__getFilterBounds (rect, child.__worldTransform);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\t__updateTransforms ();\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getRenderBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tif (__scrollRect != null) {\n\t\t\t\n\t\t\tsuper.__getRenderBounds (rect, matrix);\n\t\t\treturn;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tsuper.__getBounds (rect, matrix);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__children.length == 0) return;\n\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\t__updateTransforms (matrix);\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tif (child.__scaleX == 0 || child.__scaleY == 0 || child.__isMask) continue;\n\t\t\tchild.__getRenderBounds (rect, child.__worldTransform);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\t__updateTransforms ();\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\n\t\t\n\t\tif (!hitObject.visible || __isMask || (interactiveOnly && !mouseEnabled && !mouseChildren)) return false;\n\t\tif (mask != null && !mask.__hitTestMask (x, y)) return false;\n\t\t\n\t\tif (__scrollRect != null) {\n\t\t\t\n\t\t\tvar point = Point.__pool.get ();\n\t\t\tpoint.setTo (x, y);\n\t\t\t__getRenderTransform ().__transformInversePoint (point);\n\t\t\t\n\t\t\tif (!__scrollRect.containsPoint (point)) {\n\t\t\t\t\n\t\t\t\tPoint.__pool.release (point);\n\t\t\t\treturn false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tPoint.__pool.release (point);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar i = __children.length;\n\t\tif (interactiveOnly) {\n\t\t\t\n\t\t\tif (stack == null || !mouseChildren) {\n\t\t\t\t\n\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\n\t\t\t\t\tif (__children[i].__hitTest (x, y, shapeFlag, null, true, cast __children[i])) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (stack != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstack.push (hitObject);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (stack != null) {\n\t\t\t\t\n\t\t\t\tvar length = stack.length;\n\t\t\t\t\n\t\t\t\tvar interactive = false;\n\t\t\t\tvar hitTest = false;\n\t\t\t\t\n\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\n\t\t\t\t\tinteractive = __children[i].__getInteractive (null);\n\t\t\t\t\t\n\t\t\t\t\tif (interactive || (mouseEnabled && !hitTest)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (__children[i].__hitTest (x, y, shapeFlag, stack, true, cast __children[i])) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\thitTest = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (hitTest) {\n\t\t\t\t\t\n\t\t\t\t\tstack.insert (length, hitObject);\n\t\t\t\t\treturn true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\twhile (--i >= 0) {\n\t\t\t\t\n\t\t\t\t__children[i].__hitTest (x, y, shapeFlag, stack, false, cast __children[i]);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __hitTestMask (x:Float, y:Float):Bool {\n\t\t\n\t\tvar i = __children.length;\n\t\t\n\t\twhile (--i >= 0) {\n\t\t\t\n\t\t\tif (__children[i].__hitTestMask (x, y)) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __readGraphicsData (graphicsData:Vector<IGraphicsData>, recurse:Bool):Void {\n\t\t\n\t\tsuper.__readGraphicsData (graphicsData, recurse);\n\t\t\n\t\tif (recurse) {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tchild.__readGraphicsData (graphicsData, recurse);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCairo (renderSession:RenderSession):Void {\n\t\t\n\t\t#if lime_cairo\n\t\tif (!__renderable || __worldAlpha <= 0) return;\n\t\t\n\t\tsuper.__renderCairo (renderSession);\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) return;\n\t\t\n\t\trenderSession.maskManager.pushObject (this);\n\t\t\n\t\tif (renderSession.clearRenderDirty) {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tchild.__renderCairo (renderSession);\n\t\t\t\tchild.__renderDirty = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__renderDirty = false;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tchild.__renderCairo (renderSession);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (orphan in __removedChildren) {\n\t\t\t\n\t\t\tif (orphan.stage == null) {\n\t\t\t\t\n\t\t\t\torphan.__cleanup ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__removedChildren.length = 0;\n\t\t\n\t\trenderSession.maskManager.popObject (this);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCairoMask (renderSession:RenderSession):Void {\n\t\t\n\t\t#if lime_cairo\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\tCairoGraphics.renderMask (__graphics, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tchild.__renderCairoMask (renderSession);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCanvas (renderSession:RenderSession):Void {\n\t\t\n\t\tif (!__renderable || __worldAlpha <= 0 || (mask != null && (mask.width <= 0 || mask.height <= 0))) return;\n\t\t\n\t\t#if !neko\n\t\t\n\t\tsuper.__renderCanvas (renderSession);\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) return;\n\t\t\n\t\trenderSession.maskManager.pushObject (this);\n\t\t\n\t\tif (renderSession.clearRenderDirty) {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tchild.__renderCanvas (renderSession);\n\t\t\t\tchild.__renderDirty = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__renderDirty = false;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tchild.__renderCanvas (renderSession);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (orphan in __removedChildren) {\n\t\t\t\n\t\t\tif (orphan.stage == null) {\n\t\t\t\t\n\t\t\t\torphan.__cleanup ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__removedChildren.length = 0;\n\t\t\n\t\trenderSession.maskManager.popObject (this);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCanvasMask (renderSession:RenderSession):Void {\n\t\t\n\t\tif (__graphics != null) {\n\t\t\t\n\t\t\tCanvasGraphics.renderMask (__graphics, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar bounds = Rectangle.__pool.get ();\n\t\t__getLocalBounds (bounds);\n\t\t\n\t\trenderSession.context.rect (0, 0, bounds.width, bounds.height);\n\t\t\n\t\tRectangle.__pool.release (bounds);\n\t\t/*for (child in __children) {\n\t\t\t\n\t\t\tchild.__renderMask (renderSession);\n\t\t\t\n\t\t}*/\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderDOM (renderSession:RenderSession):Void {\n\t\t\n\t\t#if dom\n\t\t\n\t\tsuper.__renderDOM (renderSession);\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) return;\n\t\t\n\t\trenderSession.maskManager.pushObject (this);\n\t\t\n\t\tif (renderSession.clearRenderDirty) {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tchild.__renderDOM (renderSession);\n\t\t\t\tchild.__renderDirty = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__renderDirty = false;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tchild.__renderDOM (renderSession);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (orphan in __removedChildren) {\n\t\t\t\n\t\t\tif (orphan.stage == null) {\n\t\t\t\t\n\t\t\t\torphan.__renderDOM (renderSession);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__removedChildren.length = 0;\n\t\t\n\t\trenderSession.maskManager.popObject (this);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderDOMClear (renderSession:RenderSession):Void {\n\t\t\n\t\t#if dom\n\t\tfor (child in __children) {\n\t\t\tchild.__renderDOMClear (renderSession);\n\t\t}\n\t\t\n\t\tfor (orphan in __removedChildren) {\n\t\t\tif (orphan.stage == null) {\n\t\t\t\torphan.__renderDOMClear (renderSession);\n\t\t\t}\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderGL (renderSession:RenderSession):Void {\n\t\t\n\t\tif (!__renderable || __worldAlpha <= 0) return;\n\t\t\n\t\tsuper.__renderGL (renderSession);\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) return;\n\t\t\n\t\tif (__children.length > 0) {\n\t\t\t\n\t\t\trenderSession.maskManager.pushObject (this);\n\t\t\trenderSession.filterManager.pushObject (this);\n\t\t\t\n\t\t\tif (renderSession.clearRenderDirty) {\n\t\t\t\t\n\t\t\t\tfor (child in __children) {\n\t\t\t\t\t\n\t\t\t\t\tchild.__renderGL (renderSession);\n\t\t\t\t\tchild.__renderDirty = false;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__renderDirty = false;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tfor (child in __children) {\n\t\t\t\t\t\n\t\t\t\t\tchild.__renderGL (renderSession);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (orphan in __removedChildren) {\n\t\t\t\n\t\t\tif (orphan.stage == null) {\n\t\t\t\t\n\t\t\t\torphan.__cleanup ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__removedChildren.length = 0;\n\t\t\n\t\tif (__children.length > 0) {\n\t\t\t\n\t\t\trenderSession.filterManager.popObject (this);\n\t\t\trenderSession.maskManager.popObject (this);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderGLMask (renderSession:RenderSession):Void {\n\t\t\n\t\tsuper.__renderGLMask (renderSession);\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) return;\n\t\t\n\t\tif (renderSession.clearRenderDirty) {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tchild.__renderGLMask (renderSession);\n\t\t\t\tchild.__renderDirty = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__renderDirty = false;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor (child in __children) {\n\t\t\t\t\n\t\t\t\tchild.__renderGLMask (renderSession);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (orphan in __removedChildren) {\n\t\t\t\n\t\t\tif (orphan.stage == null) {\n\t\t\t\t\n\t\t\t\torphan.__cleanup ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__removedChildren.length = 0;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __setStageReference (stage:Stage):Void {\n\t\t\n\t\tsuper.__setStageReference (stage);\n\t\t\n\t\tif (__children != null) {\n\t\t\t\n\t\t\tfor (child in __children) {\n\n\t\t\t\tif(child != null) {\n\n\t\t\t\t\tchild.__setStageReference (stage);\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __setWorldTransformInvalid ():Void {\n\t\t\n\t\tif (!__worldTransformInvalid) {\n\t\t\t\n\t\t\t__worldTransformInvalid = true;\n\t\t\t\n\t\t\tif (__children != null) {\n\t\t\t\t\n\t\t\t\tfor (child in __children) {\n\t\t\t\t\t\n\t\t\t\t\tchild.__setWorldTransformInvalid ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\n\n\tprivate override function __stopAllMovieClips ():Void {\n\t\t\n\t\tfor (child in __children) {\n\t\t\t\n\t\t\tchild.__stopAllMovieClips ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function __update (transformOnly:Bool, updateChildren:Bool, ?maskGraphics:Graphics = null):Void {\n\t\t\n\t\tsuper.__update (transformOnly, updateChildren, maskGraphics);\n\n\t\tif (!updateChildren) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar frameID:UInt = Stage.frameID;\n\t\tvar selfOrParentChanged = _lastParentOrSelfChangeFrameID == frameID;\n\n\t\tfor (child in __children) {\n\n\t\t\tif (selfOrParentChanged) {\n\n\t\t\t\tchild._lastParentOrSelfChangeFrameID = frameID;\n\n\t\t\t}\n\t\t\tif (child._lastParentOrSelfChangeFrameID == frameID || child._lastChildChangeFrameID == frameID) {\n\n\t\t\t\tchild.__update (transformOnly, true, maskGraphics);\n\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n\tpublic override function __forceUpdateTransforms():Void {\n\n\t\tsuper.__forceUpdateTransforms();\n\n\t\tfor (child in __children) {\n\n\t\t\tchild.__forceUpdateTransforms();\n\n\t\t}\n\t}\n\t\n\tpublic override function __updateChildren (transformOnly:Bool):Void {\n\t\t\n\t\tsuper.__updateChildren (transformOnly);\n\n\t\tfor (child in __children) {\n\n\t\t\tchild.__forceUpdateTransforms();\n\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_numChildren ():Int {\n\t\t\n\t\treturn __children.length;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport lime.ui.MouseCursor;\nimport openfl._internal.renderer.canvas.CanvasGraphics;\nimport openfl._internal.renderer.canvas.CanvasShape;\nimport openfl._internal.renderer.dom.DOMShape;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.Graphics)\n@:access(openfl.display.Stage)\n@:access(openfl.geom.Point)\n\n\nclass Sprite extends DisplayObjectContainer {\n\t\n\t\n\tpublic var buttonMode:Bool;\n\tpublic var dropTarget (default, null):DisplayObject;\n\tpublic var graphics (get, never):Graphics;\n\tpublic var hitArea:Sprite;\n\tpublic var useHandCursor:Bool;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperty (Sprite.prototype, \"graphics\", { get: untyped __js__ (\"function () { return this.get_graphics (); }\") });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tbuttonMode = false;\n\t\tuseHandCursor = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function startDrag (lockCenter:Bool = false, bounds:Rectangle = null):Void {\n\t\t\n\t\tif (stage != null) {\n\t\t\t\n\t\t\tstage.__startDrag (this, lockCenter, bounds);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function stopDrag ():Void {\n\t\t\n\t\tif (stage != null) {\n\t\t\t\n\t\t\tstage.__stopDrag (this);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getCursor ():MouseCursor {\n\t\t\n\t\treturn (buttonMode && useHandCursor) ? POINTER : null;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\n\t\t\n\t\tif (!hitObject.visible || __isMask) return __hitTestHitArea (x, y, shapeFlag, stack, interactiveOnly, hitObject);\n\t\tif (mask != null && !mask.__hitTestMask (x, y)) return __hitTestHitArea (x, y, shapeFlag, stack, interactiveOnly, hitObject);\n\t\t\n\t\tif (__scrollRect != null) {\n\t\t\t\n\t\t\tvar point = Point.__pool.get ();\n\t\t\tpoint.setTo (x, y);\n\t\t\t__getRenderTransform ().__transformInversePoint (point);\n\t\t\t\n\t\t\tif (!__scrollRect.containsPoint (point)) {\n\t\t\t\t\n\t\t\t\tPoint.__pool.release (point);\n\t\t\t\treturn __hitTestHitArea (x, y, shapeFlag, stack, true, hitObject);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tPoint.__pool.release (point);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (super.__hitTest (x, y, shapeFlag, stack, interactiveOnly, hitObject)) {\n\t\t\t\n\t\t\treturn interactiveOnly;\n\t\t\t\n\t\t} else if (hitArea == null && __graphics != null && __graphics.__hitTest (x, y, shapeFlag, __getRenderTransform ())) {\n\t\t\t\n\t\t\tif (stack != null && (!interactiveOnly || mouseEnabled)) {\n\t\t\t\t\n\t\t\t\tstack.push (hitObject);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __hitTestHitArea (x, y, shapeFlag, stack, interactiveOnly, hitObject);\n\t\t\n\t}\n\t\n\t\n\tprivate function __hitTestHitArea (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\n\t\t\n\t\tif (hitArea != null) {\n\t\t\t\n\t\t\tif (!hitArea.mouseEnabled) {\n\t\t\t\t\n\t\t\t\thitArea.mouseEnabled = true;\n\t\t\t\tvar hitTest = hitArea.__hitTest (x, y, shapeFlag, null, true, hitObject);\n\t\t\t\thitArea.mouseEnabled = false;\n\t\t\t\t\n\t\t\t\tif (hitTest) {\n\t\t\t\t\t\n\t\t\t\t\tstack[stack.length] = hitObject;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn hitTest;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} \n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __hitTestMask (x:Float, y:Float):Bool {\n\t\t\n\t\tif (super.__hitTestMask (x, y)) {\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t} else if (__graphics != null && __graphics.__hitTest (x, y, true, __getRenderTransform ())) {\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_graphics ():Graphics {\n\t\t\n\t\tif (__graphics == null) {\n\t\t\t\n\t\t\t__graphics = new Graphics (this);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __graphics;\n\t\t\n\t}\n\t\n\t\n\tprivate override function get_tabEnabled ():Bool {\n\t\t\n\t\treturn (__tabEnabled == null ? buttonMode : __tabEnabled);\n\t\t\n\t}\n\t\n\t\n}","import haxe.Log;\nimport openfl.Assets;\nimport openfl.display.MovieClip;\nimport openfl.display.Sprite;\nimport openfl.events.Event;\nimport openfl.events.UncaughtErrorEvent;\nimport openfl.external.ExternalInterface;\nimport openfl.system.Security;\nimport openfl.ui.Mouse;\n\n\nclass Main extends Sprite\n{\n\tpublic function new()\n\t{\n\t\tsuper();\n\n\t\taddEventListener(Event.ADDED_TO_STAGE, addedToStageHandler);\n\n\t}\n\n\tprivate function addedToStageHandler(e : Event) : Void\n\t{\n\t\tremoveEventListener(Event.ADDED_TO_STAGE, addedToStageHandler);\n\n\t\t#if debug\n\t\tSecurity.allowDomain(\"*\");\n\t\tSecurity.allowInsecureDomain(\"*\");\n\t\t#end\n\n\t\ttrace(\"added to stage\");\n\n\t\tnew Module1();\n\t}\n\n}","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic inline function new( r : String, opt : String ) : Void {\n\t\tthis.r = new HaxeRegExp(r, opt.split(\"u\").join(\"\")); // 'u' (utf8) depends on page encoding\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic inline function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n\n\tpublic static inline function escape( s : String ) : String {\n\t\treturn (cast s).replace(escapeRe, \"\\\\$&\");\n\t}\n\tstatic var escapeRe = new js.RegExp(\"[.*+?^${}()|[\\\\]\\\\\\\\]\", \"g\");\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\t@:pure\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn js.Lib.undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\t@:pure\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif (len == null) {\n\t\t\tlen = s.length;\n\t\t} else if (len < 0) {\n\t\t\tif (pos == 0)\n\t\t\t\tlen = s.length + len;\n\t\t\telse\n\t\t\t\treturn \"\";\n\t\t}\n\n\t\t#if (js_es < 5)\n\t\tif (pos < 0) {\n\t\t\tpos = s.length + pos;\n\t\t\tif (pos < 0)\n\t\t\t\tpos = 0;\n\t\t}\n\t\t#end\n\n\t\treturn (cast s).substr(pos, len);\n\t}\n\n\t@:pure\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t@:pure\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\t@:pure\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if (js_es < 5)\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe `Lambda` class is a collection of methods to support functional\n\tprogramming. It is ideally used with `using Lambda` and then acts as an\n\textension to Iterable types.\n\n\tOn static platforms, working with the Iterable structure might be slower\n\tthan performing the operations directly on known types, such as Array and\n\tList.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n\n\t@see https://haxe.org/manual/std-Lambda.html\n**/\nclass Lambda {\n\n\t/**\n\t\tCreates an Array from Iterable `it`.\n\n\t\tIf `it` is an Array, this function returns a copy of it.\n\t**/\n\tpublic static function array<A>( it : Iterable<A> ) : Array<A> {\n\t\tvar a = new Array<A>();\n\t\tfor(i in it)\n\t\t\ta.push(i);\n\t\treturn a;\n\t}\n\n\t/**\n\t\tCreates a List form Iterable `it`.\n\n\t\tIf `it` is a List, this function returns a copy of it.\n\t**/\n\tpublic static function list<A>( it : Iterable<A> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor(i in it)\n\t\t\tl.add(i);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tCreates a new List by applying function `f` to all elements of `it`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function map<A,B>( it : Iterable<A>, f : A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tfor( x in it )\n\t\t\tl.add(f(x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tSimilar to map, but also passes the index of each element to `f`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function mapi<A,B>( it : Iterable<A>, f : Int -> A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tvar i = 0;\n\t\tfor( x in it )\n\t\t\tl.add(f(i++,x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tConcatenate a list of lists.\n\n\t\tThe order of elements is preserved.\n\t**/\n\tpublic static function flatten<A>( it : Iterable<Iterable<A>> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor (e in it)\n\t\t\tfor (x in e)\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tA composition of map and flatten.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function flatMap<A,B>( it : Iterable<A>, f: A -> Iterable<B> ) : List<B> {\n\t\treturn Lambda.flatten(Lambda.map(it, f));\n\t}\n\n\t/**\n\t\tTells if `it` contains `elt`.\n\n\t\tThis function returns true as soon as an element is found which is equal\n\t\tto `elt` according to the `==` operator.\n\n\t\tIf no such element is found, the result is false.\n\t**/\n\tpublic static function has<A>( it : Iterable<A>, elt : A ) : Bool {\n\t\tfor( x in it )\n\t\t\tif( x == elt )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `it` contains an element for which `f` is true.\n\n\t\tThis function returns true as soon as an element is found for which a\n\t\tcall to `f` returns true.\n\n\t\tIf no such element is found, the result is false.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function exists<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `f` is true for all elements of `it`.\n\n\t\tThis function returns false as soon as an element is found for which a\n\t\tcall to `f` returns false.\n\n\t\tIf no such element is found, the result is true.\n\n\t\tIn particular, this function always returns true if `it` is empty.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function foreach<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( !f(x) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t/**\n\t\tCalls `f` on all elements of `it`, in order.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function iter<A>( it : Iterable<A>, f : A -> Void ) {\n\t\tfor( x in it )\n\t\t\tf(x);\n\t}\n\n\t/**\n\t\tReturns a List containing those elements of `it` for which `f` returned\n\t\ttrue.\n\n\t\tIf `it` is empty, the result is the empty List even if `f` is null.\n\n\t\tOtherwise if `f` is null, the result is unspecified.\n\t**/\n\tpublic static function filter<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tvar l = new List<A>();\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tFunctional fold on Iterable `it`, using function `f` with start argument\n\t\t`first`.\n\n\t\tIf `it` has no elements, the result is `first`.\n\n\t\tOtherwise the first element of `it` is passed to `f` alongside `first`.\n\t\tThe result of that call is then passed to `f` with the next element of\n\t\t`it`, and so on until `it` has no more elements.\n\n\t\tIf `it` or `f` are null, the result is unspecified.\n\t**/\n\tpublic static function fold<A,B>( it : Iterable<A>, f : A -> B -> B, first : B ) : B {\n\t\tfor( x in it )\n\t\t\tfirst = f(x,first);\n\t\treturn first;\n\t}\n\n\t/**\n\t\tReturns the number of elements in `it` for which `pred` is true, or the\n\t\ttotal number of elements in `it` if `pred` is null.\n\n\t\tThis function traverses all elements.\n\t**/\n\tpublic static function count<A>( it : Iterable<A>, ?pred : A -> Bool ) {\n\t\tvar n = 0;\n\t\tif( pred == null )\n\t\t\tfor( _ in it )\n\t\t\t\tn++;\n\t\telse\n\t\t\tfor( x in it )\n\t\t\t\tif( pred(x) )\n\t\t\t\t\tn++;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tTells if Iterable `it` does not contain any element.\n\t**/\n\tpublic static function empty<T>( it : Iterable<T> ) : Bool {\n\t\treturn !it.iterator().hasNext();\n\t}\n\n\t/**\n\t\tReturns the index of the first element `v` within Iterable `it`.\n\n\t\tThis function uses operator `==` to check for equality.\n\n\t\tIf `v` does not exist in `it`, the result is -1.\n\t**/\n\tpublic static function indexOf<T>( it : Iterable<T>, v : T ) : Int {\n\t\tvar i = 0;\n\t\tfor( v2 in it ) {\n\t\t\tif( v == v2 )\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t\tReturns the first element of `it` for which `f` is true.\n\n\t\tThis function returns as soon as an element is found for which a call to\n\t\t`f` returns true.\n\n\t\tIf no such element is found, the result is null.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function find<T>( it : Iterable<T>, f : T -> Bool ) : Null<T> {\n\t\tfor( v in it ) {\n\t\t\tif(f(v)) return v;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tReturns a new List containing all elements of Iterable `a` followed by\n\t\tall elements of Iterable `b`.\n\n\t\tIf `a` or `b` are null, the result is unspecified.\n\t**/\n\tpublic static function concat<T>( a : Iterable<T>, b : Iterable<T> ) : List<T> {\n\t\tvar l = new List();\n\t\tfor( x in a )\n\t\t\tl.add(x);\n\t\tfor( x in b )\n\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n}\n","package;\n\n\nimport lime.app.Config;\nimport lime.utils.AssetLibrary;\nimport lime.utils.AssetManifest;\nimport lime.utils.Assets;\n\n#if sys\nimport sys.FileSystem;\n#end\n\n@:access(lime.utils.Assets)\n\n\n@:keep @:dox(hide) class ManifestResources {\n\t\n\t\n\tpublic static var preloadLibraries:Array<AssetLibrary>;\n\tpublic static var preloadLibraryNames:Array<String>;\n\t\n\t\n\tpublic static function init (config:Config):Void {\n\t\t\n\t\tpreloadLibraries = new Array ();\n\t\tpreloadLibraryNames = new Array ();\n\t\t\n\t\tvar rootPath = null;\n\t\t\n\t\tif (config != null && Reflect.hasField (config, \"rootPath\")) {\n\t\t\t\n\t\t\trootPath = Reflect.field (config, \"rootPath\");\n\t\t\t\n\t\t}\n\t\t\n\t\tif (rootPath == null) {\n\t\t\t\n\t\t\t#if (ios || tvos || emscripten)\n\t\t\trootPath = \"assets/\";\n\t\t\t#elseif (sys && windows && !cs)\n\t\t\trootPath = FileSystem.absolutePath (haxe.io.Path.directory (#if (haxe_ver >= 3.3) Sys.programPath () #else Sys.executablePath () #end)) + \"/\";\n\t\t\t#else\n\t\t\trootPath = \"\";\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\tAssets.defaultRootPath = rootPath;\n\t\t\n\t\t#if (openfl && !flash && !display)\n\t\t\n\t\t#end\n\t\t\n\t\tvar data, manifest, library;\n\t\t\n\t\tdata = '{\"name\":null,\"assets\":\"ah\",\"version\":2,\"libraryArgs\":[],\"libraryType\":null}';\n\t\tmanifest = AssetManifest.parse (data, rootPath);\n\t\tlibrary = AssetLibrary.fromManifest (manifest);\n\t\tAssets.registerLibrary (\"default\", library);\n\t\t\n\t\t\n\t\tlibrary = Assets.getLibrary (\"default\");\n\t\tif (library != null) preloadLibraries.push (library);\n\t\telse preloadLibraryNames.push (\"default\");\n\t\t\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !display\n#if flash\n\n@:keep @:bind #if display private #end class __ASSET__manifest_default_json extends null { }\n\n\n#elseif (desktop || cpp)\n\n@:file(\"\") #if display private #end class __ASSET__manifest_default_json extends haxe.io.Bytes {}\n\n\n\n#else\n\n\n\n#end\n\n#if (openfl && !flash)\n\n\n\n#end\n#end","package;\n\n\nclass Module1 {\n\t\n\tpublic function new () {\n\t\ttrace(\"module 1 loaded\");\n\t\tnew Module2();\n\t}\n\t\n}","package;\n\n\nclass Module2 {\n\t\n\tpublic function new () {\n\t\ttrace(\"module 2 loaded\");\n\t\tnew Module3();\n\t}\n\t\n}","package;\n\n\nimport flash.display.MovieClip;\n\n\nclass Module3 {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tvar a = new MovieClip();\n\t\ttrace(\"module 3 loaded\");\n\t\tnew Module4();\n\t}\n\t\n\t\n}","package;\n\n\nimport openfl.display.MovieClip;\n\nclass Module4 {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tvar a = new MovieClip();\n\t\ttrace(\"module 4 loaded\");\n\t}\n\t\n\t\n}","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\t@:pure\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn js.Object.prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = js.Object.prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function isFunction( f : Dynamic ) : Bool {\n\t\treturn js.Lib.typeof(f) == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function isObject( v : Dynamic ) : Bool {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = js.Lib.typeof(v);\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\t@:pure\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",__js__('var Int = { };'));\n\t\t__feature__(\"Dynamic.*\",__js__('var Dynamic = { };'));\n\t\t__feature__(\"Float.*\",__js__('var Float = Number'));\n\t\t__feature__(\"Bool.*\",__js__('var Bool = Boolean'));\n\t\t__feature__(\"Class.*\",__js__('var Class = { };'));\n\t\t__feature__(\"Enum.*\",__js__('var Enum = { };'));\n\n#if (js_es < 5)\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)\n\tto the `String` class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cpp\nusing cpp.NativeString;\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlEncode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\t\treturn postProcessUrlEncode(java.net.URLEncoder.encode(s, \"UTF-8\"));\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#elseif hl\n\t\t\tvar len = 0;\n\t\t\tvar b = @:privateAccess s.bytes.urlEncode(len);\n\t\t\treturn @:privateAccess String.__alloc__(b,len);\n\t\t#elseif lua\n\t\t\ts = lua.NativeStringTools.gsub(s, \"\\n\", \"\\r\\n\");\n\t\t\ts = lua.NativeStringTools.gsub(s, \"([^%w %-%_%.%~])\", function (c) {\n\t\t\t\treturn lua.NativeStringTools.format(\"%%%02X\", lua.NativeStringTools.byte(c) + '');\n\t\t\t});\n\t\t\ts = lua.NativeStringTools.gsub(s, \" \", \"+\");\n\t\t\treturn s;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n#if java\n\tprivate static function postProcessUrlEncode( s : String ) : String {\n\t\tvar ret = new StringBuf();\n\t\tvar i = 0,\n\t\t    len = s.length;\n\t\twhile (i < len) {\n\t\t\tswitch(_charAt(s, i++)) {\n\t\t\tcase '+'.code:\n\t\t\t\tret.add('%20');\n\t\t\tcase '%'.code if (i <= len - 2):\n\t\t\t\tvar c1 = _charAt(s, i++),\n\t\t\t\t    c2 = _charAt(s, i++);\n\t\t\t\tswitch[c1, c2] {\n\t\t\t\tcase ['2'.code, '1'.code]:\n\t\t\t\t\tret.addChar('!'.code);\n\t\t\t\tcase ['2'.code, '7'.code]:\n\t\t\t\t\tret.addChar('\\''.code);\n\t\t\t\tcase ['2'.code, '8'.code]:\n\t\t\t\t\tret.addChar('('.code);\n\t\t\t\tcase ['2'.code, '9'.code]:\n\t\t\t\t\tret.addChar(')'.code);\n\t\t\t\tcase ['7'.code, 'E'.code] | ['7'.code, 'e'.code]:\n\t\t\t\t\tret.addChar('~'.code);\n\t\t\t\tcase _:\n\t\t\t\t\tret.addChar('%'.code);\n\t\t\t\t\tret.addChar(cast c1);\n\t\t\t\t\tret.addChar(cast c2);\n\t\t\t\t}\n\t\t\tcase chr:\n\t\t\t\tret.addChar(cast chr);\n\t\t\t}\n\t\t}\n\t\treturn ret.toString();\n\t}\n#end\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlDecode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#elseif hl\n\t\t\tvar len = 0;\n\t\t\tvar b = @:privateAccess s.bytes.urlDecode(len);\n\t\t\treturn @:privateAccess String.__alloc__(b,len);\n\t\t#elseif lua\n\t\t\ts = lua.NativeStringTools.gsub (s, \"+\", \" \");\n\t\t\ts = lua.NativeStringTools.gsub (s, \"%%(%x%x)\",\n\t\t\t\tfunction(h) {return lua.NativeStringTools.char(lua.Lua.tonumber(h,16));});\n\t\t\ts = lua.NativeStringTools.gsub (s, \"\\r\\n\", \"\\n\");\n\t\t\treturn s;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: `htmlUnescape(htmlEscape(s)) == s`\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is `null`, the result is unspecified.\n\n\t\tIf `start` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java || python) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif cpp\n\t\tif (s.length<start.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str();\n\t\tvar p1 = start.c_str();\n\t\tfor(i in 0...start.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#elseif hl\n\t\treturn @:privateAccess (s.length >= start.length && s.bytes.compare(0,start.bytes,0,start.length<<1) == 0);\n\t\t#elseif python\n\t\treturn python.NativeStringTools.startswith(s, start);\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is `null`, the result is unspecified.\n\n\t\tIf `end` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java || python) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif cpp\n\t\tif (s.length<end.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str().add( s.length-end.length );\n\t\tvar p1 = end.c_str();\n\t\tfor(i in 0...end.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#elseif hl\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn @:privateAccess (slen >= elen && s.bytes.compare((slen - elen) << 1, end.bytes, 0, elen << 1) == 0);\n\t\t#elseif python\n\t\treturn python.NativeStringTools.endswith(s, end);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String `\"\"`, or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\t#if (python || lua)\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length) return false;\n\t\t#end\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for `ltrim(rtrim(s))`.\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurrences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String `\"\"`, `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String `\"\"`, `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits `length` equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof()` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\n\t\tcharacter.\n\t**/\n\tpublic static #if !eval inline #end function fastCodeAt( s : String, index : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (untyped s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#elseif hl\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\n\t\t#elseif lua\n\t\treturn lua.NativeStringTools.byte(s,index+1);\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash || cpp || hl)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif (neko || lua || eval)\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#elseif python\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Unix.\n\t\tThe input will be quoted, or escaped if necessary.\n\t*/\n\tpublic static function quoteUnixArg(argument:String):String {\n\t\t// Based on cpython's shlex.quote().\n\t\t// https://hg.python.org/cpython/file/a3f076d4f54f/Lib/shlex.py#l278\n\n\t\tif (argument == \"\")\n\t\t\treturn \"''\";\n\n\t\tif (!~/[^a-zA-Z0-9_@%+=:,.\\/-]/.match(argument))\n\t\t\treturn argument;\n\n\t\t// use single quotes, and put single quotes into double quotes\n\t\t// the string $'b is then quoted as '$'\"'\"'b'\n\t\treturn \"'\" + replace(argument, \"'\", \"'\\\"'\\\"'\") + \"'\";\n\t}\n\n\t/**\n\t\tCharacter codes of the characters that will be escaped by `quoteWinArg(_, true)`.\n\t*/\n\tpublic static var winMetaCharacters = [\" \".code, \"(\".code, \")\".code, \"%\".code, \"!\".code, \"^\".code, \"\\\"\".code, \"<\".code, \">\".code, \"&\".code, \"|\".code, \"\\n\".code, \"\\r\".code, \",\".code, \";\".code];\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Windows.\n\t\tThe input will be quoted, or escaped if necessary, such that the output\n\t\twill be parsed as a single argument using the rule specified in\n\t\thttp://msdn.microsoft.com/en-us/library/ms880421\n\n\t\tExamples:\n\t\t```\n\t\tquoteWinArg(\"abc\") == \"abc\";\n\t\tquoteWinArg(\"ab c\") == '\"ab c\"';\n\t\t```\n\t*/\n\tpublic static function quoteWinArg(argument:String, escapeMetaCharacters:Bool):String {\n\t\t// If there is no space, tab, back-slash, or double-quotes, and it is not an empty string.\n\t\tif (!~/^[^ \\t\\\\\"]+$/.match(argument)) {\n\n\t\t\t// Based on cpython's subprocess.list2cmdline().\n\t\t\t// https://hg.python.org/cpython/file/50741316dd3a/Lib/subprocess.py#l620\n\n\t\t\tvar result = new StringBuf();\n\t\t\tvar needquote = argument.indexOf(\" \") != -1 || argument.indexOf(\"\\t\") != -1 || argument == \"\";\n\n\t\t\tif (needquote)\n\t\t\t\tresult.add('\"');\n\n\t\t\tvar bs_buf = new StringBuf();\n\t\t\tfor (i in 0...argument.length) {\n\t\t\t\tswitch (argument.charCodeAt(i)) {\n\t\t\t\t\tcase \"\\\\\".code:\n\t\t\t\t\t\t// Don't know if we need to double yet.\n\t\t\t\t\t\tbs_buf.add(\"\\\\\");\n\t\t\t\t\tcase '\"'.code:\n\t\t\t\t\t\t// Double backslashes.\n\t\t\t\t\t\tvar bs = bs_buf.toString();\n\t\t\t\t\t\tresult.add(bs);\n\t\t\t\t\t\tresult.add(bs);\n\t\t\t\t\t\tbs_buf = new StringBuf();\n\t\t\t\t\t\tresult.add('\\\\\"');\n\t\t\t\t\tcase c:\n\t\t\t\t\t\t// Normal char\n\t\t\t\t\t\tif (bs_buf.length > 0) {\n\t\t\t\t\t\t\tresult.add(bs_buf.toString());\n\t\t\t\t\t\t\tbs_buf = new StringBuf();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.addChar(c);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add remaining backslashes, if any.\n\t\t\tresult.add(bs_buf.toString());\n\n\t\t\tif (needquote) {\n\t\t\t\tresult.add(bs_buf.toString());\n\t\t\t\tresult.add('\"');\n\t\t\t}\n\n\t\t\targument = result.toString();\n\t\t}\n\n\t\tif (escapeMetaCharacters) {\n\t\t\tvar result = new StringBuf();\n\t\t\tfor (i in 0...argument.length) {\n\t\t\t\tvar c = argument.charCodeAt(i);\n\t\t\t\tif (winMetaCharacters.indexOf(c) >= 0) {\n\t\t\t\t\tresult.addChar(\"^\".code);\n\t\t\t\t}\n\t\t\t\tresult.addChar(c);\n\t\t\t}\n\t\t\treturn result.toString();\n\t\t} else {\n\t\t\treturn argument;\n\t\t}\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static inline function getClass<T>( o : T ) : Class<T> {\n\t\treturn if (o == null) null else @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\t#if !js_enums_as_objects\n\t\treturn o.__enum__;\n\t\t#else\n\t\treturn $hxEnums[o.__enum__];\n\t\t#end\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tcase 9:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);\n\t\tcase 10:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);\n\t\tcase 11:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);\n\t\tcase 12:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);\n\t\tcase 13:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);\n\t\tcase 14:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t}\n\n\t#if (js_es < 5)\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\t#else\n\tpublic static inline function createEmptyInstance<T>( cl : Class<T> ) : T {\n\t\treturn js.Object.create((cast cl).prototype);\n\t}\n\t#end\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static inline function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\treturn ((cast e).__constructs__ : Array<String>).copy();\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function typeof( v : Dynamic ) : ValueType {\n\t\tswitch (js.Lib.typeof(v)) {\n\t\tcase \"boolean\":\n\t\t\treturn TBool;\n\t\tcase \"string\":\n\t\t\treturn TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null ){\n\t\t\t\t#if !js_enums_as_objects\n\t\t\t\treturn TEnum(e);\n\t\t\t\t#else\n\t\t\t\treturn TEnum(untyped $hxEnums[e]);\n\t\t\t\t#end\n\t\t\t}\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\t#if !js_enums_as_objects\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\t#else\n\t\t\tif (a._hx_index != b._hx_index)\n\t\t\t\treturn false;\n\t\t\tfor (f in Reflect.fields(a)){\n\t\t\t\tif ( !enumEq(a[f],b[f]) ){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t#end\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\t#if !js_enums_as_objects\n\t\treturn untyped e[0];\n\t\t#else\n\t\treturn untyped $hxEnums[e.__enum__].__constructs__[e._hx_index];\n\t\t#end\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\t#if !js_enums_as_objects\n\t\treturn untyped e.slice(2);\n\t\t#else\n\t\tvar n = enumConstructor(e);\n\t\tvar params:Array<String> = untyped __js__(\"$hxEnums[{0}.__enum__][{1}].__params__\",e,n);\n\t\treturn params != null ? [for (p in params) untyped e[p]] : [];\n\t\t#end\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\t#if js_enums_as_objects\n\t\treturn untyped e._hx_index;\n\t\t#else\n\t\treturn untyped e[1];\n\t\t#end\n\t}\n\n\tpublic inline static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped __define_feature__(\"Type.allEnums\", e.__empty_constructs__);\n\t}\n\n}\n\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n#if ((flash || flash9doc || cs || hl) && !doc_gen)\n/**\n\tThe unsigned `Int` type is only defined for Flash and C#. It's currently\n\thandled the same as a normal Int.\n\n\t@see https://haxe.org/manual/types-basic-types.html\n**/\n@:coreType\n@:notNull\n@:runtimeValue\n@:analyzer(no_const_propagation)\nabstract UInt to Int from Int\n{\n\t@:commutative @:op(A+B) private static function addI(lhs:UInt, rhs:Int):UInt;\n\t@:commutative @:op(A+B) private static function addF(lhs:UInt, rhs:Float):Float;\n\t@:op(A+B) private static function add(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A*B) private static function mulI(lhs:UInt, rhs:Int):UInt;\n\t@:commutative @:op(A*B) private static function mulF(lhs:UInt, rhs:Float):Float;\n\t@:op(A*B) private static function mul(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A%B) private static function modI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A%B) private static function modF(lhs:UInt, rhs:Float):Float;\n\t@:op(A%B) private static function mod(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A-B) private static function subI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A-B) private static function subF(lhs:UInt, rhs:Float):Float;\n\t@:op(A-B) private static function sub(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A/B) private static function divI(lhs:UInt, rhs:Int):Float;\n\t@:op(A/B) private static function divF(lhs:UInt, rhs:Float):Float;\n\t@:op(A/B) private static function div(lhs:UInt, rhs:UInt):Float;\n\n\t@:commutative @:op(A|B) private static function orI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A|B) private static function or(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A^B) private static function xorI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A^B) private static function xor(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A&B) private static function andI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A&B) private static function and(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A<<B) private static function shl(lhs:UInt, rhs:Int):UInt;\n\t@:op(A>>B) private static inline function shr(lhs:UInt, rhs:Int):UInt return lhs >>> rhs;\n\t@:op(A>>>B) private static function ushr(lhs:UInt, rhs:Int):UInt;\n\n\t@:op(A>B) private static function gt(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A>=B) private static function gte(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A<B) private static function lt(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A<=B) private static function lte(lhs:UInt, rhs:UInt):Bool;\n\n\t@:op(A>B) private static function gtf(lhs:UInt, rhs:Float):Bool;\n\t@:op(A>B) private static function gtf2(lhs:Float, rhs:UInt):Bool;\n\t@:op(A>=B) private static function gtef(lhs:UInt, rhs:Float):Bool;\n\t@:op(A>=B) private static function gtef2(lhs:Float, rhs:UInt):Bool;\n\t@:op(A<B) private static function ltf(lhs:UInt, rhs:Float):Bool;\n\t@:op(A<B) private static function ltf2(lhs:Float, rhs:UInt):Bool;\n\t@:op(A<=B) private static function ltef(lhs:UInt, rhs:Float):Bool;\n\t@:op(A<=B) private static function ltef2(lhs:Float, rhs:UInt):Bool;\n\n\t@:op(~A) private static function bneg(t:UInt):UInt;\n\n\t@:commutative @:op(A == B) private static function equalsInt<T:Int>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A != B) private static function notEqualsInt<T:Int>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A == B) private static function equalsFloat<T:Float>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A != B) private static function notEqualsFloat<T:Float>(a:UInt, b:T):Bool;\n\n\t@:op(++A) private function prefixIncrement():UInt;\n\t@:op(A++) private function postfixIncrement():UInt;\n\t@:op(--A) private function prefixDecrement():UInt;\n\t@:op(A--) private function postfixDecrement():UInt;\n}\n#else\n/**\n\tThe unsigned `Int` type is only defined for Flash and C#.\n\tSimulate it for other platforms.\n\n\t@see https://haxe.org/manual/types-basic-types.html\n**/\nabstract UInt(Int) from Int to Int {\n\n\t@:op(A + B) private static inline function add(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() + b.toInt();\n\t}\n\n\t@:op(A / B) private static inline function div(a:UInt, b:UInt):Float {\n\t\treturn a.toFloat() / b.toFloat();\n\t}\n\n\t@:op(A * B) private static inline function mul(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() * b.toInt();\n\t}\n\n\t@:op(A - B) private static inline function sub(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() - b.toInt();\n\t}\n\n\t@:op(A > B) private static #if !js inline #end function gt(a:UInt, b:UInt):Bool {\n\t\tvar aNeg = a.toInt() < 0;\n\t\tvar bNeg = b.toInt() < 0;\n\t\treturn\n\t\t\tif( aNeg != bNeg ) aNeg;\n\t\t\telse a.toInt() > b.toInt();\n\t}\n\n\t@:op(A >= B) private static #if !js inline #end function gte(a:UInt, b:UInt):Bool {\n\t\tvar aNeg = a.toInt() < 0;\n\t\tvar bNeg = b.toInt() < 0;\n\t\treturn\n\t\t\tif( aNeg != bNeg ) aNeg;\n\t\t\telse a.toInt() >= b.toInt();\n\t}\n\n\t@:op(A < B) private static inline function lt(a:UInt, b:UInt):Bool {\n\t\treturn gt(b, a);\n\t}\n\n\t@:op(A <= B) private static inline function lte(a:UInt, b:UInt):Bool {\n\t\treturn gte(b, a);\n\t}\n\n\t@:op(A & B) private static inline function and(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() & b.toInt();\n\t}\n\n\t@:op(A | B) private static inline function or(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() | b.toInt();\n\t}\n\n\t@:op(A ^ B) private static inline function xor(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() ^ b.toInt();\n\t}\n\n\t@:op(A << B) private static inline function shl(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() << b;\n\t}\n\n\t@:op(A >> B) private static inline function shr(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() >>> b;\n\t}\n\n\t@:op(A >>> B) private static inline function ushr(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() >>> b;\n\t}\n\n\t@:op(A % B) private static inline function mod(a:UInt, b:UInt):UInt {\n\t\treturn Std.int( a.toFloat() % b.toFloat() );\n\t}\n\n\t@:commutative @:op(A + B) private static inline function addWithFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() + b;\n\t}\n\n\t@:commutative @:op(A * B) private static inline function mulWithFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() * b;\n\t}\n\n\t@:op(A / B) private static inline function divFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() / b;\n\t}\n\n\t@:op(A / B) private static inline function floatDiv(a:Float, b:UInt):Float {\n\t\treturn a / b.toFloat();\n\t}\n\n\t@:op(A - B) private static inline function subFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() - b;\n\t}\n\n\t@:op(A - B) private static inline function floatSub(a:Float, b:UInt):Float {\n\t\treturn a - b.toFloat();\n\t}\n\n\t@:op(A > B) private static inline function gtFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() > b;\n\t}\n\n\t@:commutative @:op(A == B) private static inline function equalsInt<T:Int>(a:UInt, b:T):Bool {\n\t\treturn a.toInt() == b;\n\t}\n\n\t@:commutative @:op(A != B) private static inline function notEqualsInt<T:Int>(a:UInt, b:T):Bool {\n\t\treturn a.toInt() != b;\n\t}\n\n\t@:commutative @:op(A == B) private static inline function equalsFloat<T:Float>(a:UInt, b:T):Bool {\n\t\treturn a.toFloat() == b;\n\t}\n\n\t@:commutative @:op(A != B) private static inline function notEqualsFloat<T:Float>(a:UInt, b:T):Bool {\n\t\treturn a.toFloat() != b;\n\t}\n\n\t@:op(A >= B) private static inline function gteFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() >= b;\n\t}\n\n\n\t@:op(A > B) private static inline function floatGt(a:Float, b:UInt):Bool {\n\t\treturn a > b.toFloat();\n\t}\n\n\t@:op(A >= B) private static inline function floatGte(a:Float, b:UInt):Bool {\n\t\treturn a >= b.toFloat();\n\t}\n\n\t@:op(A < B) private static inline function ltFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() < b;\n\t}\n\n\t@:op(A <= B) private static inline function lteFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() <= b;\n\t}\n\n\t@:op(A < B) private static inline function floatLt(a:Float, b:UInt):Bool {\n\t\treturn a < b.toFloat();\n\t}\n\n\t@:op(A <= B) private static inline function floatLte(a:Float, b:UInt):Bool {\n\t\treturn a <= b.toFloat();\n\t}\n\n\t@:op(A % B) private static inline function modFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() % b;\n\t}\n\n\t@:op(A % B) private static inline function floatMod(a:Float, b:UInt):Float {\n\t\treturn a % b.toFloat();\n\t}\n\n\t@:op(~A) private inline function negBits():UInt {\n\t\treturn ~this;\n\t}\n\n\t@:op(++A) private inline function prefixIncrement():UInt {\n\t\treturn ++this;\n\t}\n\n\t@:op(A++) private inline function postfixIncrement():UInt {\n\t\treturn this++;\n\t}\n\n\t@:op(--A) private inline function prefixDecrement():UInt {\n\t\treturn --this;\n\t}\n\n\t@:op(A--) private inline function postfixDecrement():UInt {\n\t\treturn this--;\n\t}\n\n\t// TODO: radix is just defined to deal with doc_gen issues\n\tprivate inline function toString(?radix:Int):String {\n\t\treturn Std.string(toFloat());\n\t}\n\n\tprivate inline function toInt():Int {\n\t\treturn this;\n\t}\n\n\t@:to private #if (!js || analyzer) inline #end function toFloat():Float {\n\t\tvar int = toInt();\n\t\tif (int < 0) {\n\t\t\treturn 4294967296.0 + int;\n\t\t}\n\t\telse {\n\t\t\t// + 0.0 here to make sure we promote to Float on some platforms\n\t\t\t// In particular, PHP was having issues when comparing to Int in the == op.\n\t\t\treturn int + 0.0;\n\t\t}\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tElements return by `CallStack` methods.\n**/\nenum StackItem {\n\tCFunction;\n\tModule( m : String );\n\tFilePos( s : Null<StackItem>, file : String, line : Int );\n\tMethod( classname : String, method : String );\n\tLocalFunction( ?v : Int );\n}\n\n/**\n\tGet informations about the call stack.\n**/\nclass CallStack {\n\t#if js\n\tstatic var lastException:js.Error;\n\n\tstatic function getStack(e:js.Error):Array<StackItem> {\n\t\tif (e == null) return [];\n\t\t// https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\t\tvar oldValue = (untyped Error).prepareStackTrace;\n\t\t(untyped Error).prepareStackTrace = function (error, callsites :Array<Dynamic>) {\n\t\t\tvar stack = [];\n\t\t\tfor (site in callsites) {\n\t\t\t\tif (wrapCallSite != null) site = wrapCallSite(site);\n\t\t\t\tvar method = null;\n\t\t\t\tvar fullName :String = site.getFunctionName();\n\t\t\t\tif (fullName != null) {\n\t\t\t\t\tvar idx = fullName.lastIndexOf(\".\");\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tvar className = fullName.substr(0, idx);\n\t\t\t\t\t\tvar methodName = fullName.substr(idx+1);\n\t\t\t\t\t\tmethod = Method(className, methodName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstack.push(FilePos(method, site.getFileName(), site.getLineNumber()));\n\t\t\t}\n\t\t\treturn stack;\n\t\t}\n\t\tvar a = makeStack(e.stack);\n\t\t(untyped Error).prepareStackTrace = oldValue;\n\t\treturn a;\n\t}\n\n\t// support for source-map-support module\n\t@:noCompletion\n\tpublic static var wrapCallSite:Dynamic->Dynamic;\n\t#end\n\n\t/**\n\t\tReturn the call stack elements, or an empty array if not available.\n\t**/\n\tpublic static function callStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\tvar a = makeStack(untyped __dollar__callstack());\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a = makeStack( new flash.errors.Error().getStackTrace() );\n\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\treturn makeStack(\"%s\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_call_stack(true);\n\t\t\treturn makeStack(s);\n\t\t#elseif js\n\t\t\ttry {\n\t\t\t\tthrow new js.Error();\n\t\t\t} catch( e : Dynamic ) {\n\t\t\t\tvar a = getStack(e);\n\t\t\t\ta.shift(); // remove Stack.callStack()\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.lang.Thread.currentThread().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\tstack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(1, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar infos = python.lib.Traceback.extract_stack();\n\t\t\tinfos.pop();\n\t\t\tinfos.reverse();\n\t\t\tfor (elem in infos)\n\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturn the exception stack : this is the stack elements between\n\t\tthe place the last exception was thrown and the place it was\n\t\tcaught, or an empty array if not available.\n\t**/\n\t#if cpp @:noStack #end /* Do not mess up the exception stack */\n\tpublic static function exceptionStack() : Array<StackItem> {\n\t\t#if neko\n\t\t\treturn makeStack(untyped __dollar__excstack());\n\t\t#elseif as3\n\t\t\treturn new Array();\n\t\t#elseif flash\n\t\t\tvar err : flash.errors.Error = untyped flash.Boot.lastError;\n\t\t\tif( err == null ) return new Array();\n\t\t\tvar a = makeStack( err.getStackTrace() );\n\t\t\tvar c = callStack();\n\t\t\tvar i = c.length - 1;\n\t\t\twhile( i > 0 ) {\n\t\t\t\tif( Std.string(a[a.length-1]) == Std.string(c[i]) )\n\t\t\t\t\ta.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t\ti--;\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\treturn makeStack(\"%e\");\n\t\t#elseif cpp\n\t\t\tvar s:Array<String> = untyped __global__.__hxcpp_get_exception_stack();\n\t\t\treturn makeStack(s);\n\t\t#elseif java\n\t\t\tvar stack = [];\n\t\t\tfor ( el in java.internal.Exceptions.currentException().getStackTrace() ) {\n\t\t\t\tvar className = el.getClassName();\n\t\t\t\tvar methodName = el.getMethodName();\n\t\t\t\tvar fileName = el.getFileName();\n\t\t\t\tvar lineNumber = el.getLineNumber();\n\t\t\t\tvar method = Method( className, methodName );\n\t\t\t\tif ( fileName != null || lineNumber >= 0 ) {\n\t\t\t\t\tstack.push( FilePos( method, fileName, lineNumber ) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstack.push( method );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// stack.shift();\n\t\t\tstack.shift();\n\t\t\tstack.pop();\n\t\t\treturn stack;\n\t\t#elseif cs\n\t\t\treturn makeStack(new cs.system.diagnostics.StackTrace(cs.internal.Exceptions.exception, true));\n\t\t#elseif python\n\t\t\tvar stack = [];\n\t\t\tvar exc = python.lib.Sys.exc_info();\n\t\t\tif (exc._3 != null)\n\t\t\t{\n\t\t\t\tvar infos = python.lib.Traceback.extract_tb(exc._3);\n\t\t\t\tinfos.reverse();\n\t\t\t\tfor (elem in infos)\n\t\t\t\t\tstack.push(FilePos(null, elem._1, elem._2));\n\t\t\t}\n\t\t\treturn stack;\n\t\t#elseif js\n\t\t\treturn untyped __define_feature__(\"haxe.CallStack.exceptionStack\", getStack(lastException));\n\t\t#else\n\t\t\treturn []; // Unsupported\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a representation of the stack as a printable string.\n\t**/\n\tpublic static function toString( stack : Array<StackItem> ) {\n\t\tvar b = new StringBuf();\n\t\t#if cpp\n\t\tstack = stack.copy ();\n\t\tstack.reverse();\n\t\t#end\n\t\tfor( s in stack ) {\n\t\t\tb.add(\"\\nCalled from \");\n\t\t\titemToString(b,s);\n\t\t}\n\t\treturn b.toString();\n\t}\n\n\tprivate static function itemToString( b : StringBuf, s ) {\n\t\tswitch( s ) {\n\t\tcase CFunction:\n\t\t\tb.add(\"a C function\");\n\t\tcase Module(m):\n\t\t\tb.add(\"module \");\n\t\t\tb.add(m);\n\t\tcase FilePos(s,file,line):\n\t\t\tif( s != null ) {\n\t\t\t\titemToString(b,s);\n\t\t\t\tb.add(\" (\");\n\t\t\t}\n\t\t\tb.add(file);\n\t\t\tb.add(\" line \");\n\t\t\tb.add(line);\n\t\t\tif( s != null ) b.add(\")\");\n\t\tcase Method(cname,meth):\n\t\t\tb.add(cname);\n\t\t\tb.add(\".\");\n\t\t\tb.add(meth);\n\t\tcase LocalFunction(n):\n\t\t\tb.add(\"local function #\");\n\t\t\tb.add(n);\n\t\t}\n\t}\n\n\t#if cpp @:noStack #end /* Do not mess up the exception stack */\n\tprivate static function makeStack(s #if cs : cs.system.diagnostics.StackTrace #end) {\n\t\t#if neko\n\t\t\tvar a = new Array();\n\t\t\tvar l = untyped __dollar__asize(s);\n\t\t\tvar i = 0;\n\t\t\twhile( i < l ) {\n\t\t\t\tvar x = s[i++];\n\t\t\t\tif( x == null )\n\t\t\t\t\ta.unshift(CFunction);\n\t\t\t\telse if( untyped __dollar__typeof(x) == __dollar__tstring )\n\t\t\t\t\ta.unshift(Module(new String(x)));\n\t\t\t\telse\n\t\t\t\t\ta.unshift(FilePos(null,new String(untyped x[0]),untyped x[1]));\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif flash\n\t\t\tvar a = new Array();\n\t\t\tvar r = ~/at ([^\\/]+?)\\$?(\\/[^\\(]+)?\\(\\)(\\[(.*?):([0-9]+)\\])?/;\n\t\t\tvar rlambda = ~/^MethodInfo-([0-9]+)$/g;\n\t\t\twhile( r.match(s) ) {\n\t\t\t\tvar cl = r.matched(1).split(\"::\").join(\".\");\n\t\t\t\tvar meth = r.matched(2);\n\t\t\t\tvar item;\n\t\t\t\tif( meth == null ) {\n\t\t\t\t\tif( rlambda.match(cl) )\n\t\t\t\t\t\titem = LocalFunction(Std.parseInt(rlambda.matched(1)));\n\t\t\t\t\telse\n\t\t\t\t\t\titem = Method(cl,\"new\");\n\t\t\t\t} else\n\t\t\t\t\titem = Method(cl,meth.substr(1));\n\t\t\t\tif( r.matched(3) != null )\n\t\t\t\t\titem = FilePos( item, r.matched(4), Std.parseInt(r.matched(5)) );\n\t\t\t\ta.push(item);\n\t\t\t\ts = r.matchedRight();\n\t\t\t}\n\t\t\treturn a;\n\t\t#elseif php\n\t\t\tif (!untyped __call__(\"isset\", __var__(\"GLOBALS\", s)))\n\t\t\t\treturn [];\n\t\t\tvar a : Array<String> = untyped __var__(\"GLOBALS\", s);\n\t\t\tvar m = [];\n\t\t\tfor( i in 0...a.length - ((s == \"%s\") ? 2 : 0)) {\n\t\t\t\tvar d = a[i].split(\"::\");\n\t\t\t\tm.unshift(Method(d[0],d[1]));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif cpp\n\t\t\tvar stack : Array<String> = s;\n\t\t\tvar m = new Array<StackItem>();\n\t\t\tfor(func in stack) {\n\t\t\t\tvar words = func.split(\"::\");\n\t\t\t\tif (words.length==0)\n\t\t\t\t\tm.push(CFunction)\n\t\t\t\telse if (words.length==2)\n\t\t\t\t\tm.push(Method(words[0],words[1]));\n\t\t\t\telse if (words.length==4)\n\t\t\t\t\tm.push(FilePos( Method(words[0],words[1]),words[2],Std.parseInt(words[3])));\n\t\t\t}\n\t\t\treturn m;\n\t\t#elseif js\n\t\t\tif (s == null) {\n\t\t\t\treturn [];\n\t\t\t} else if ((untyped __js__(\"typeof\"))(s) == \"string\") {\n\t\t\t\t// Return the raw lines in browsers that don't support prepareStackTrace\n\t\t\t\tvar stack : Array<String> = s.split(\"\\n\");\n\t\t\t\tif( stack[0] == \"Error\" ) stack.shift();\n\t\t\t\tvar m = [];\n\t\t\t\tvar rie10 = ~/^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$/;\n\t\t\t\tfor( line in stack ) {\n\t\t\t\t\tif( rie10.match(line) ) {\n\t\t\t\t\t\tvar path = rie10.matched(1).split(\".\");\n\t\t\t\t\t\tvar meth = path.pop();\n\t\t\t\t\t\tvar file = rie10.matched(2);\n\t\t\t\t\t\tvar line = Std.parseInt(rie10.matched(3));\n\t\t\t\t\t\tm.push(FilePos( meth == \"Anonymous function\" ? LocalFunction() : meth == \"Global code\" ? null : Method(path.join(\".\"),meth), file, line ));\n\t\t\t\t\t} else\n\t\t\t\t\t\tm.push(Module(StringTools.trim(line))); // A little weird, but better than nothing\n\t\t\t\t}\n\t\t\t\treturn m;\n\t\t\t} else {\n\t\t\t\treturn cast s;\n\t\t\t}\n\t\t#elseif cs\n\t\t\tvar stack = [];\n\t\t\tfor (i in 0...s.FrameCount)\n\t\t\t{\n\t\t\t\tvar frame = s.GetFrame(i);\n\t\t\t\tvar m = frame.GetMethod();\n\n\t\t\t\tvar method = StackItem.Method(m.ReflectedType.ToString(), m.Name);\n\n\t\t\t\tvar fileName = frame.GetFileName();\n\t\t\t\tvar lineNumber = frame.GetFileLineNumber();\n\n\t\t\t\tif (fileName != null || lineNumber >= 0)\n\t\t\t\t\tstack.push(FilePos(method, fileName, lineNumber));\n\t\t\t\telse\n\t\t\t\t\tstack.push(method);\n\t\t\t}\n\t\t\treturn stack;\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\nusing haxe.Int64;\n\n /**\n\tA cross-platform signed 64-bit integer.\n\tInt64 instances can be created from two 32-bit words using `Int64.make()`.\n **/\n#if flash\n@:notNull\n#end\nabstract Int64(__Int64) from __Int64 to __Int64\n{\n\tprivate inline function new( x : __Int64 )\n\t\tthis = x;\n\n\t/**\n\t\tMakes a copy of `this` Int64.\n\t**/\n\tpublic inline function copy():Int64\n\t\treturn make( high, low );\n\n\t/**\n\t\tConstruct an Int64 from two 32-bit words `high` and `low`.\n\t**/\n\tpublic static inline function make( high:Int32, low:Int32 ) : Int64\n\t\treturn new Int64( new __Int64(high, low) );\n\n\t/**\n\t\tReturns an Int64 with the value of the Int `x`.\n\t\t`x` is sign-extended to fill 64 bits.\n\t**/\n\t@:from public static inline function ofInt( x : Int ) : Int64\n#if lua\n\t\treturn make( (x:Int32) >> 31, (x:Int32));\n#else\n\t\treturn make( x >> 31, x );\n#end\n\n\t/**\n\t\tReturns an Int with the value of the Int64 `x`.\n\t\tThrows an exception  if `x` cannot be represented in 32 bits.\n\t**/\n\tpublic static inline function toInt( x : Int64 ) : Int {\n\t\tif( x.high != x.low >> 31 )\n\t\t\tthrow \"Overflow\";\n\n\t\treturn x.low;\n\t}\n\n\t/**\n\t\tReturns whether the value `val` is of type `haxe.Int64`\n\t**/\n\tinline public static function is( val : Dynamic ) : Bool\n\t\treturn Std.is(val,__Int64);\n\n\t/**\n\t\tReturns the high 32-bit word of `x`.\n\t**/\n\t@:deprecated(\"Use high instead\")\n\tpublic static inline function getHigh( x : Int64 ) : Int32\n\t\treturn x.high;\n\n\t/**\n\t\tReturns the low 32-bit word of `x`.\n\t**/\n\t@:deprecated(\"Use low instead\")\n\tpublic static inline function getLow( x : Int64 ) : Int32\n\t\treturn x.low;\n\n\t/**\n\t\tReturns `true` if `x` is less than zero.\n\t**/\n\tpublic static inline function isNeg( x : Int64) : Bool\n\t\treturn x.high < 0;\n\n\t/**\n\t\tReturns `true` if `x` is exactly zero.\n\t**/\n\tpublic static inline function isZero( x : Int64 ) : Bool\n\t\treturn x == 0;\n\n\t/**\n\t\tCompares `a` and `b` in signed mode.\n\t\tReturns a negative value if `a < b`, positive if `a > b`,\n\t\tor 0 if `a == b`.\n\t**/\n\tpublic static inline function compare( a : Int64, b : Int64 ) : Int {\n\t\tvar v = a.high - b.high;\n\t\tv = if( v != 0 ) v else Int32.ucompare(a.low, b.low);\n\t\treturn a.high < 0 ? (b.high < 0 ? v : -1) : (b.high >= 0 ? v : 1);\n\t}\n\n\t/**\n\t\tCompares `a` and `b` in unsigned mode.\n\t\tReturns a negative value if `a < b`, positive if `a > b`,\n\t\tor 0 if `a == b`.\n\t**/\n\tpublic static inline function ucompare( a : Int64, b : Int64 ) : Int {\n\t\tvar v = Int32.ucompare(a.high, b.high);\n\t\treturn if( v != 0 ) v else Int32.ucompare(a.low, b.low);\n\t}\n\n\t/**\n\t\tReturns a signed decimal `String` representation of `x`.\n\t**/\n\tpublic static inline function toStr(x:Int64) : String\n\t\treturn x.toString();\n\n\t#if as3 public #else private #end function toString() : String\n\t{\n\t\tvar i : Int64 = cast this;\n\t\tif ( i == 0 )\n\t\t\treturn \"0\";\n\t\tvar str = \"\";\n\t\tvar neg = false;\n\t\tif( i.isNeg() ) {\n\t\t\tneg = true;\n\t\t\t// i = -i; cannot negate here as --9223372036854775808 = -9223372036854775808\n\t\t}\n\t\tvar ten : Int64 = 10;\n\t\twhile( i != 0 ) {\n\t\t\tvar r = i.divMod( ten );\n\t\t\tif (r.modulus.isNeg()) {\n\t\t\t\tstr = Int64.neg(r.modulus).low + str;\n\t\t\t\ti = Int64.neg(r.quotient);\n\t\t\t} else {\n\t\t\t\tstr = r.modulus.low + str;\n\t\t\t\ti = r.quotient;\n\t\t\t}\n\t\t}\n\t\tif( neg ) str = \"-\" + str;\n\t\treturn str;\n\t}\n\n\tpublic static inline function parseString( sParam : String ) : Int64 {\n\t\treturn Int64Helper.parseString( sParam );\n\t}\n\n\tpublic static inline function fromFloat( f : Float ) : Int64 {\n\t\treturn Int64Helper.fromFloat( f );\n\t}\n\n\t/**\n\t\tPerforms signed integer divison of `dividend` by `divisor`.\n\t\tReturns `{ quotient : Int64, modulus : Int64 }`.\n\t**/\n\tpublic static function divMod( dividend : Int64, divisor : Int64 ) : { quotient : Int64, modulus : Int64 }\n\t{\n\t\t// Handle special cases of 0 and 1\n\t\tif( divisor.high == 0 )\n\t\t{\n\t\t\tswitch( divisor.low ) {\n\t\t\t\tcase 0: throw \"divide by zero\";\n\t\t\t\tcase 1: return { quotient : dividend.copy(), modulus : 0 };\n\t\t\t}\n\t\t}\n\n\t\tvar divSign = dividend.isNeg() != divisor.isNeg();\n\n\t\tvar modulus = dividend.isNeg() ? -dividend : dividend.copy();\n\t\tdivisor = divisor.isNeg() ? -divisor : divisor;\n\n\t\tvar quotient : Int64 = 0;\n\t\tvar mask : Int64 = 1;\n\n\t\twhile( !divisor.isNeg() ) {\n\t\t\tvar cmp = ucompare( divisor, modulus );\n\t\t\tdivisor <<= 1;\n\t\t\tmask <<= 1;\n\t\t\tif( cmp >= 0 ) break;\n\t\t}\n\n\t\twhile( mask != 0 ) {\n\t\t\tif( ucompare(modulus, divisor) >= 0 ) {\n\t\t\t\tquotient |= mask;\n\t\t\t\tmodulus -= divisor;\n\t\t\t}\n\t\t\tmask >>>= 1;\n\t\t\tdivisor >>>= 1;\n\t\t}\n\n\t\tif( divSign ) quotient = -quotient;\n\t\tif( dividend.isNeg() ) modulus = -modulus;\n\n\t\treturn {\n\t\t\tquotient : quotient,\n\t\t\tmodulus  : modulus\n\t\t};\n\t}\n\n\t/**\n\t\tReturns the negative of `x`.\n\t**/\n\t@:op(-A) public static inline function neg( x : Int64 ) : Int64 {\n\t\tvar high = ~x.high;\n\t\tvar low = -x.low;\n\t\tif( low == 0 )\n\t\t\thigh++;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(++A) private inline function preIncrement() : Int64 {\n\t\tthis = copy();\n\t\tthis.low++;\n\t\tif( this.low == 0 ) this.high++;\n\t\treturn cast this;\n\t}\n\n\t@:op(A++) private inline function postIncrement() : Int64 {\n\t\tvar ret = this;\n\t\tpreIncrement();\n\t\treturn ret;\n\t}\n\n\t@:op(--A) private inline function preDecrement() : Int64 {\n\t\tthis = copy();\n\t\tif( this.low == 0 ) this.high--;\n\t\tthis.low--;\n\t\treturn cast this;\n\t}\n\n\t@:op(A--) private inline function postDecrement() : Int64 {\n\t\tvar ret = this;\n\t\tpreDecrement();\n\t\treturn ret;\n\t}\n\n\t/**\n\t\tReturns the sum of `a` and `b`.\n\t**/\n\t@:op(A + B) public static inline function add( a : Int64, b : Int64 ) : Int64 {\n\t\tvar high = a.high + b.high;\n\t\tvar low = a.low + b.low;\n\t\tif( Int32.ucompare( low, a.low ) < 0 ) high++;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(A + B) @:commutative private static inline function addInt( a : Int64, b : Int ) : Int64\n\t\treturn add( a, b );\n\n\t/**\n\t\tReturns `a` minus `b`.\n\t**/\n\t@:op(A - B) public static inline function sub( a : Int64, b : Int64 ) : Int64 {\n\t\tvar high = a.high - b.high;\n\t\tvar low = a.low - b.low;\n\t\tif( Int32.ucompare( a.low, b.low ) < 0 ) high--;\n        return make( high, low );\n\t}\n\n\t@:op(A - B) private static inline function subInt( a : Int64, b : Int ) : Int64\n\t\treturn sub( a, b );\n\n\t@:op(A - B) private static inline function intSub( a : Int, b : Int64 ) : Int64\n\t\treturn sub( a, b );\n\n\t/**\n\t\tReturns the product of `a` and `b`.\n\t**/\n\t@:op(A * B) public static #if !lua inline #end function mul( a : Int64, b : Int64 ) : Int64 {\n\t\tvar mask = 0xFFFF;\n\t\tvar al = a.low & mask, ah = a.low >>> 16;\n\t\tvar bl = b.low & mask, bh = b.low >>> 16;\n\t\tvar p00 = al * bl;\n\t\tvar p10 = ah * bl;\n\t\tvar p01 = al * bh;\n\t\tvar p11 = ah * bh;\n\t\tvar low = p00;\n\t\tvar high = p11 + (p01 >>> 16) + (p10 >>> 16);\n\t\tp01 <<= 16;\n\t\tlow += p01;\n\t\tif( Int32.ucompare(low, p01) < 0 ) high++;\n\t\tp10 <<= 16;\n\t\tlow += p10;\n\t\tif( Int32.ucompare(low, p10) < 0 ) high++;\n\t\thigh += a.low * b.high + a.high * b.low;\n\t\treturn make( high, low );\n\t}\n\n\t@:op(A * B) @:commutative private static inline function mulInt( a : Int64, b : Int ) : Int64\n\t\treturn mul( a, b );\n\n\t/**\n\t\tReturns the quotient of `a` divided by `b`.\n\t**/\n\t@:op(A / B) public static inline function div( a : Int64, b : Int64 ) : Int64\n\t\treturn divMod(a, b).quotient;\n\n\t@:op(A / B) private static inline function divInt( a : Int64, b : Int ) : Int64\n\t\treturn div( a, b );\n\n\t@:op(A / B) private static inline function intDiv( a : Int, b : Int64 ) : Int64\n\t\treturn div( a, b ).toInt();\n\n\t/**\n\t\tReturns the modulus of `a` divided by `b`.\n\t**/\n\t@:op(A % B) public static inline function mod( a : Int64, b : Int64 ) : Int64\n\t\treturn divMod(a, b).modulus;\n\n\t@:op(A % B) private static inline function modInt( a : Int64, b : Int ) : Int64\n\t\treturn mod( a, b ).toInt();\n\n\t@:op(A % B) private static inline function intMod( a : Int, b : Int64 ) : Int64\n\t\treturn mod( a, b ).toInt();\n\n\t/**\n\t\tReturns `true` if `a` is equal to `b`.\n\t**/\n\t@:op(A == B) public static inline function eq( a : Int64, b : Int64 ) : Bool\n\t\treturn a.high == b.high && a.low == b.low;\n\n\t@:op(A == B) @:commutative private static inline function eqInt( a : Int64, b : Int ) : Bool\n\t\treturn eq( a, b );\n\n\t/**\n\t\tReturns `true` if `a` is not equal to `b`.\n\t**/\n\t@:op(A != B) public static inline function neq( a : Int64, b : Int64 ) : Bool\n\t\treturn a.high != b.high || a.low != b.low;\n\n\t@:op(A != B) @:commutative private static inline function neqInt( a : Int64, b : Int ) : Bool\n\t\treturn neq(a, b);\n\n\t@:op(A < B) private static inline function lt( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) < 0;\n\n\t@:op(A < B) private static inline function ltInt( a : Int64, b : Int ) : Bool\n\t\treturn lt(a, b);\n\n\t@:op(A < B) private static inline function intLt( a : Int, b : Int64 ) : Bool\n\t\treturn lt(a, b);\n\n\t@:op(A <= B) private static inline function lte( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) <= 0;\n\n\t@:op(A <= B) private static inline function lteInt( a : Int64, b : Int ) : Bool\n\t\treturn lte(a, b);\n\n\t@:op(A <= B) private static inline function intLte( a : Int, b : Int64 ) : Bool\n\t\treturn lte(a, b);\n\n\t@:op(A > B) private static inline function gt( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) > 0;\n\n\t@:op(A > B) private static inline function gtInt( a : Int64, b : Int ) : Bool\n\t\treturn gt(a, b);\n\n\t@:op(A > B) private static inline function intGt( a : Int, b : Int64 ) : Bool\n\t\treturn gt( a, b );\n\n\t@:op(A >= B) private static inline function gte( a : Int64, b : Int64 ) : Bool\n\t\treturn compare(a, b) >= 0;\n\n\t@:op(A >= B) private static inline function gteInt( a : Int64, b : Int ) : Bool\n\t\treturn gte(a, b);\n\n\t@:op(A >= B) private static inline function intGte( a : Int, b : Int64 ) : Bool\n\t\treturn gte(a, b);\n\n\t/**\n\t\tReturns the bitwise NOT of `a`.\n\t**/\n\t@:op(~A) private static inline function complement( a : Int64 ) : Int64\n\t\treturn make( ~a.high, ~a.low );\n\n\t/**\n\t\tReturns the bitwise AND of `a` and `b`.\n\t**/\n\t@:op(A & B) public static inline function and( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high & b.high, a.low & b.low );\n\n\t/**\n\t\tReturns the bitwise OR of `a` and `b`.\n\t**/\n\t@:op(A | B) public static inline function or( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high | b.high, a.low | b.low );\n\n\t/**\n\t\tReturns the bitwise XOR of `a` and `b`.\n\t**/\n\t@:op(A ^ B) public static inline function xor( a : Int64, b : Int64 ) : Int64\n\t\treturn make( a.high ^ b.high, a.low ^ b.low );\n\n\t/**\n\t\tReturns `a` left-shifted by `b` bits.\n\t**/\n\t@:op(A << B) public static inline function shl( a : Int64, b : Int ) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( (a.high << b) | (a.low >>> (32-b)), a.low << b)\n\t\t\telse make( a.low << (b-32), 0 );\n\t}\n\n\t/**\n\t\tReturns `a` right-shifted by `b` bits in signed mode.\n\t\t`a` is sign-extended.\n\t**/\n\t@:op(A >> B) public static inline function shr( a : Int64, b : Int) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( a.high >> b, (a.high << (32-b)) | (a.low >>> b) );\n\t\t\telse make( a.high >> 31, a.high >> (b - 32) );\n\t}\n\n\t/**\n\t\tReturns `a` right-shifted by `b` bits in unsigned mode.\n\t\t`a` is padded with zeroes.\n\t**/\n\t@:op(A >>> B) public static inline function ushr( a : Int64, b : Int ) : Int64 {\n\t\tb &= 63;\n\t\treturn if( b == 0 ) a.copy()\n\t\t\telse if( b < 32 ) make( a.high >>> b, (a.high << (32-b)) | (a.low >>> b) );\n\t\t\telse make( 0, a.high >>> (b - 32) );\n\t}\n\n\tpublic var high(get, never) : Int32;\n\tprivate inline function get_high() return this.high;\n\tprivate inline function set_high(x) return this.high = x;\n\n\tpublic var low(get, never) : Int32;\n\tprivate inline function get_low() return this.low;\n\tprivate inline function set_low(x) return this.low = x;\n}\n\n/**\n  * This typedef will fool @:coreApi into thinking that we are using\n  * the same underlying type, even though it might be different on\n  * specific platforms.\n  */\nprivate typedef __Int64 = ___Int64;\n\nprivate class ___Int64 {\n\tpublic var high : Int32;\n\tpublic var low : Int32;\n\n\tpublic inline function new( high, low ) {\n\t\tthis.high = high;\n\t\tthis.low = low;\n\t}\n\n\t/**\n\t\tWe also define toString here to ensure we always get a pretty string\n\t\twhen tracing or calling Std.string. This tends not to happen when\n\t\ttoString is only in the abstract.\n\t**/\n\tpublic function toString() : String\n\t\treturn Int64.toStr( cast this );\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n@:coreApi class Log {\n\t@:access(js.Boot.__string_rec)\n\tpublic static dynamic function trace( v : Dynamic, ?infos : PosInfos ) : Void {\n\t\tvar msg = if (infos != null) infos.fileName + \":\" + infos.lineNumber + \": \" else \"\";\n\t\tmsg += js.Boot.__string_rec(v, \"\");\n\t\tif (infos != null && infos.customParams != null)\n\t\t\tfor (v in infos.customParams)\n\t\t\t\tmsg += \",\" + js.Boot.__string_rec(v, \"\");\n\t\tif( js.Lib.typeof(untyped console) != \"undefined\" && (untyped console).log != null )\n\t\t\t(untyped console).log(msg);\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Serializer class can be used to encode values and objects into a `String`,\n\tfrom which the `Unserializer` class can recreate the original representation.\n\n\tThis class can be used in two ways:\n\n\t- create a `new Serializer()` instance, call its `serialize()` method with\n\t\tany argument and finally retrieve the String representation from\n\t\t`toString()`\n\t- call `Serializer.run()` to obtain the serialized representation of a\n\t\tsingle argument\n\n\tSerialization is guaranteed to work for all haxe-defined classes, but may\n\tor may not work for instances of external/native classes.\n\n\tThe specification of the serialization format can be found here:\n\t<https://haxe.org/manual/serialization/format>\n**/\nclass Serializer {\n\n\t/**\n\t\tIf the values you are serializing can contain circular references or\n\t\tobjects repetitions, you should set `USE_CACHE` to true to prevent\n\t\tinfinite loops.\n\n\t\tThis may also reduce the size of serialization Strings at the expense of\n\t\tperformance.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useCache field.\n\t**/\n\tpublic static var USE_CACHE = false;\n\n\t/**\n\t\tUse constructor indexes for enums instead of names.\n\n\t\tThis may reduce the size of serialization Strings, but makes them less\n\t\tsuited for long-term storage: If constructors are removed or added from\n\t\tthe enum, the indices may no longer match.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useEnumIndex field.\n\t**/\n\tpublic static var USE_ENUM_INDEX = false;\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\tstatic var BASE64_CODES = null;\n\n\tvar buf : StringBuf;\n\tvar cache : Array<Dynamic>;\n\tvar shash : haxe.ds.StringMap<Int>;\n\tvar scount : Int;\n\n\t/**\n\t\tThe individual cache setting for `this` Serializer instance.\n\n\t\tSee USE_CACHE for a complete description.\n\t**/\n\tpublic var useCache : Bool;\n\n\t/**\n\t\tThe individual enum index setting for `this` Serializer instance.\n\n\t\tSee USE_ENUM_INDEX for a complete description.\n\t**/\n\tpublic var useEnumIndex : Bool;\n\n\t/**\n\t\tCreates a new Serializer instance.\n\n\t\tSubsequent calls to `this.serialize` will append values to the\n\t\tinternal buffer of this String. Once complete, the contents can be\n\t\tretrieved through a call to `this.toString`.\n\n\t\tEach Serializer instance maintains its own cache if this.useCache` is\n\t\ttrue.\n\t**/\n\tpublic function new() {\n\t\tbuf = new StringBuf();\n\t\tcache = new Array();\n\t\tuseCache = USE_CACHE;\n\t\tuseEnumIndex = USE_ENUM_INDEX;\n\t\tshash = new haxe.ds.StringMap();\n\t\tscount = 0;\n\t}\n\n\t/**\n\t\tReturn the String representation of `this` Serializer.\n\n\t\tThe exact format specification can be found here:\n\t\thttps://haxe.org/manual/serialization/format\n\t**/\n\tpublic function toString() {\n\t\treturn buf.toString();\n\t}\n\n\t/* prefixes :\n\t\ta : array\n\t\tb : hash\n\t\tc : class\n\t\td : Float\n\t\te : reserved (float exp)\n\t\tf : false\n\t\tg : object end\n\t\th : array/list/hash end\n\t\ti : Int\n\t\tj : enum (by index)\n\t\tk : NaN\n\t\tl : list\n\t\tm : -Inf\n\t\tn : null\n\t\to : object\n\t\tp : +Inf\n\t\tq : haxe.ds.IntMap\n\t\tr : reference\n\t\ts : bytes (base64)\n\t\tt : true\n\t\tu : array nulls\n\t\tv : date\n\t\tw : enum\n\t\tx : exception\n\t\ty : urlencoded string\n\t\tz : zero\n\t\tA : Class<Dynamic>\n\t\tB : Enum<Dynamic>\n\t\tM : haxe.ds.ObjectMap\n\t\tC : custom\n\t*/\n\n\tfunction serializeString( s : String ) {\n\t\tvar x = shash.get(s);\n\t\tif( x != null ) {\n\t\t\tbuf.add(\"R\");\n\t\t\tbuf.add(x);\n\t\t\treturn;\n\t\t}\n\t\tshash.set(s,scount++);\n\t\t#if old_serialize\n\t\t\t// no more support for -D old_serialize due to 'j' reuse\n\t\t\t#if error #end\n\t\t#end\n\t\tbuf.add(\"y\");\n\t\ts = StringTools.urlEncode(s);\n\t\tbuf.add(s.length);\n\t\tbuf.add(\":\");\n\t\tbuf.add(s);\n\t}\n\n\tfunction serializeRef(v) {\n\t\t#if js\n\t\tvar vt = js.Lib.typeof(v);\n\t\t#end\n\t\tfor( i in 0...cache.length ) {\n\t\t\t#if js\n\t\t\tvar ci = cache[i];\n\t\t\tif( js.Lib.typeof(ci) == vt && ci == v ) {\n\t\t\t#else\n\t\t\tif( cache[i] == v ) {\n\t\t\t#end\n\t\t\t\tbuf.add(\"r\");\n\t\t\t\tbuf.add(i);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tcache.push(v);\n\t\treturn false;\n\t}\n\n\t#if flash\n\t// only the instance variables\n\n\tfunction serializeClassFields(v,c) {\n\t\tvar xml : flash.xml.XML = untyped __global__[\"flash.utils.describeType\"](c);\n\t\tvar vars = xml.factory[0].child(\"variable\");\n\t\tfor( i in 0...vars.length() ) {\n\t\t\tvar f = vars[i].attribute(\"name\").toString();\n\t\t\tif( !v.hasOwnProperty(f) )\n\t\t\t\tcontinue;\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\t#end\n\n\tfunction serializeFields(v) {\n\t\tfor( f in Reflect.fields(v) ) {\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\n\t/**\n\t\tSerializes `v`.\n\n\t\tAll haxe-defined values and objects with the exception of functions can\n\t\tbe serialized. Serialization of external/native objects is not\n\t\tguaranteed to work.\n\n\t\tThe values of `this.useCache` and `this.useEnumIndex` may affect\n\t\tserialization output.\n\t**/\n\tpublic function serialize( v : Dynamic ) {\n\t\tswitch( Type.typeof(v) ) {\n\t\tcase TNull:\n\t\t\tbuf.add(\"n\");\n\t\tcase TInt:\n\t\t\tvar v : Int = v;\n\t\t\tif( v == 0 ) {\n\t\t\t\tbuf.add(\"z\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbuf.add(\"i\");\n\t\t\tbuf.add(v);\n\t\tcase TFloat:\n\t\t\tvar v : Float = v;\n\t\t\tif( Math.isNaN(v) )\n\t\t\t\tbuf.add(\"k\");\n\t\t\telse if( !Math.isFinite(v) )\n\t\t\t\tbuf.add(if( v < 0 ) \"m\" else \"p\");\n\t\t\telse {\n\t\t\t\tbuf.add(\"d\");\n\t\t\t\tbuf.add(v);\n\t\t\t}\n\t\tcase TBool:\n\t\t\tbuf.add(if( v ) \"t\" else \"f\");\n\t\tcase TClass(c):\n\t\t\tif( #if neko untyped c.__is_String #else c == String #end ) {\n\t\t\t\tserializeString(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\treturn;\n\t\t\tswitch( #if (neko || cs || python) Type.getClassName(c) #else c #end ) {\n\t\t\tcase #if (neko || cs || python) \"Array\" #else cast Array #end:\n\t\t\t\tvar ucount = 0;\n\t\t\t\tbuf.add(\"a\");\n\t\t\t\t#if (flash || python || hl)\n\t\t\t\tvar v : Array<Dynamic> = v;\n\t\t\t\t#end\n\t\t\t\tvar l = #if (neko || flash || php || cs || java || python || hl || lua || eval) v.length #elseif cpp v.__length() #else __getField(v, \"length\") #end;\n\t\t\t\tfor( i in 0...l ) {\n\t\t\t\t\tif( v[i] == null )\n\t\t\t\t\t\tucount++;\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tucount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tserialize(v[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\telse {\n\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"List\" #else cast List #end:\n\t\t\t\tbuf.add(\"l\");\n\t\t\t\tvar v : List<Dynamic> = v;\n\t\t\t\tfor( i in v )\n\t\t\t\t\tserialize(i);\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"Date\" #else cast Date #end:\n\t\t\t\tvar d : Date = v;\n\t\t\t\tbuf.add(\"v\");\n\t\t\t\tbuf.add(d.getTime());\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.StringMap\" #else cast haxe.ds.StringMap #end:\n\t\t\t\tbuf.add(\"b\");\n\t\t\t\tvar v : haxe.ds.StringMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tserializeString(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.IntMap\" #else cast haxe.ds.IntMap #end:\n\t\t\t\tbuf.add(\"q\");\n\t\t\t\tvar v : haxe.ds.IntMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tbuf.add(\":\");\n\t\t\t\t\tbuf.add(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.ObjectMap\" #else cast haxe.ds.ObjectMap #end:\n\t\t\t\tbuf.add(\"M\");\n\t\t\t\tvar v : haxe.ds.ObjectMap<Dynamic,Dynamic> = v;\n\t\t\t\tfor ( k in v.keys() ) {\n\t\t\t\t\t#if (js || neko)\n\t\t\t\t\tvar id = Reflect.field(k, \"__id__\");\n\t\t\t\t\tReflect.deleteField(k, \"__id__\");\n\t\t\t\t\tserialize(k);\n\t\t\t\t\tReflect.setField(k, \"__id__\", id);\n\t\t\t\t\t#else\n\t\t\t\t\tserialize(k);\n\t\t\t\t\t#end\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.io.Bytes\" #else cast haxe.io.Bytes #end:\n\t\t\t\tvar v : haxe.io.Bytes = v;\n\t\t\t\t#if neko\n\t\t\t\tvar chars = new String(base_encode(v.getData(),untyped BASE64.__s));\n\t\t\t\tbuf.add(\"s\");\n\t\t\t\tbuf.add(chars.length);\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(chars);\n\t\t\t\t#else\n\n\t\t\t\tbuf.add(\"s\");\n\t\t\t\tbuf.add(Math.ceil((v.length * 8) / 6));\n\t\t\t\tbuf.add(\":\");\n\n\t\t\t\tvar i = 0;\n\t\t\t\tvar max = v.length - 2;\n\t\t\t\tvar b64 = BASE64_CODES;\n\t\t\t\tif( b64 == null ) {\n\t\t\t\t\tb64 = new haxe.ds.Vector(BASE64.length);\n\t\t\t\t\tfor( i in 0...BASE64.length )\n\t\t\t\t\t\tb64[i] = BASE64.charCodeAt(i);\n\t\t\t\t\tBASE64_CODES = b64;\n\t\t\t\t}\n\t\t\t\twhile( i < max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tvar b3 = v.get(i++);\n\n\t\t\t\t\tbuf.addChar(b64[b1 >> 2]);\n\t\t\t\t\tbuf.addChar(b64[((b1 << 4) | (b2 >> 4)) & 63]);\n\t\t\t\t\tbuf.addChar(b64[((b2 << 2) | (b3 >> 6)) & 63]);\n\t\t\t\t\tbuf.addChar(b64[b3 & 63]);\n\t\t\t\t}\n\t\t\t\tif( i == max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tbuf.addChar(b64[b1 >> 2]);\n\t\t\t\t\tbuf.addChar(b64[((b1 << 4) | (b2 >> 4)) & 63]);\n\t\t\t\t\tbuf.addChar(b64[(b2 << 2) & 63]);\n\t\t\t\t} else if( i == max + 1 ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tbuf.addChar(b64[b1 >> 2]);\n\t\t\t\t\tbuf.addChar(b64[(b1 << 4) & 63]);\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\tdefault:\n\t\t\t\tif( useCache ) cache.pop();\n\t\t\t\tif( #if flash try v.hxSerialize != null catch( e : Dynamic ) false #elseif (cs || java || python) Reflect.hasField(v, \"hxSerialize\") #elseif (php && php7) php.Global.method_exists(v, 'hxSerialize') #else v.hxSerialize != null #end  ) {\n\t\t\t\t\tbuf.add(\"C\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\tv.hxSerialize(this);\n\t\t\t\t\tbuf.add(\"g\");\n\t\t\t\t} else {\n\t\t\t\t\tbuf.add(\"c\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\t#if flash\n\t\t\t\t\tserializeClassFields(v,c);\n\t\t\t\t\t#else\n\t\t\t\t\tserializeFields(v);\n\t\t\t\t\t#end\n\t\t\t\t}\n\t\t\t}\n\t\tcase TObject:\n\t\t\tif (Std.is(v,Class)) {\n\t\t\t\tvar className = Type.getClassName(v);\n\t\t\t\t#if (flash || cpp)\n\t\t\t\t// Currently, Enum and Class are the same for flash and cpp.\n\t\t\t\t//  use resolveEnum to test if it is actually an enum\n\t\t\t\tif (Type.resolveEnum(className)!=null) buf.add(\"B\") else\n\t\t\t\t#end\n\t\t\t\tbuf.add(\"A\");\n\t\t\t\tserializeString(className);\n\t\t\t} else if (Std.is(v,Enum)) {\n\t\t\t\tbuf.add(\"B\");\n\t\t\t\tserializeString(Type.getEnumName(v));\n\t\t\t} else {\n\t\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\t\treturn;\n\t\t\t\tbuf.add(\"o\");\n\t\t\t\tserializeFields(v);\n\t\t\t}\n\t\tcase TEnum(e):\n\t\t\tif( useCache ) {\n\t\t\t\tif( serializeRef(v) )\n\t\t\t\t\treturn;\n\t\t\t\tcache.pop();\n\t\t\t}\n\t\t\tbuf.add(useEnumIndex?\"j\":\"w\");\n\t\t\tserializeString(Type.getEnumName(e));\n\t\t\t#if neko\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(new String(v.tag));\n\t\t\tbuf.add(\":\");\n\t\t\tif( v.args == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tvar l : Int = untyped __dollar__asize(v.args);\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l )\n\t\t\t\t\tserialize(v.args[i]);\n\t\t\t}\n\t\t\t#elseif flash\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tvar i : Int = v.index;\n\t\t\t\tbuf.add(i);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar pl : Array<Dynamic> = v.params;\n\t\t\tif( pl == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(pl.length);\n\t\t\t\tfor( p in pl )\n\t\t\t\t\tserialize(p);\n\t\t\t}\n\t\t\t#elseif cpp\n\t\t\tvar enumBase:cpp.EnumBase = v;\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(enumBase.getIndex());\n\t\t\t} else\n\t\t\t\tserializeString(enumBase.getTag());\n\t\t\tbuf.add(\":\");\n\t\t\tvar len = enumBase.getParamCount();\n\t\t\tbuf.add(len);\n\t\t\tfor( p in 0...len )\n\t\t\t\tserialize( enumBase.getParamI(p));\n\t\t\t#elseif php\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l : Int = untyped __call__(\"count\", v.params);\n\t\t\tif( l == 0 || v.params == null)\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l ) {\n\t\t\t\t\t#if (php && php7)\n\t\t\t\t\tserialize(v.params[i]);\n\t\t\t\t\t#elseif php\n\t\t\t\t\tserialize(untyped __field__(v, __php__(\"params\"), i));\n\t\t\t\t\t#end\n\t\t\t\t}\n\t\t\t}\n\t\t\t#elseif (java || cs || python || hl || eval)\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(Type.enumIndex(v));\n\t\t\t} else\n\t\t\t\tserializeString(Type.enumConstructor(v));\n\t\t\tbuf.add(\":\");\n\t\t\tvar arr:Array<Dynamic> = Type.enumParameters(v);\n\t\t\tif (arr != null)\n\t\t\t{\n\t\t\t\tbuf.add(arr.length);\n\t\t\t\tfor (v in arr)\n\t\t\t\t\tserialize(v);\n\t\t\t} else {\n\t\t\t\tbuf.add(\"0\");\n\t\t\t}\n\n\t\t\t#elseif js_enums_as_objects\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v._hx_index);\n\t\t\t} else\n\t\t\t\tserializeString(Type.enumConstructor(v));\n\t\t\tbuf.add(\":\");\n\t\t\tvar params = Type.enumParameters(v);\n\t\t\tbuf.add(params.length);\n\t\t\tfor(p in params) serialize(p);\n\t\t\t#else\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v[1]);\n\t\t\t} else\n\t\t\t\tserializeString(v[0]);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l = __getField(v, \"length\");\n\t\t\tbuf.add(l - 2);\n\t\t\tfor( i in 2...l )\n\t\t\t\tserialize(v[i]);\n\t\t\t#end\n\t\t\tif( useCache ) cache.push(v);\n\t\tcase TFunction:\n\t\t\tthrow \"Cannot serialize function\";\n\t\tdefault:\n\t\t\t#if neko\n\t\t\tif( untyped (__i32__kind != null && __dollar__iskind(v,__i32__kind)) ) {\n\t\t\t\tbuf.add(\"i\");\n\t\t\t\tbuf.add(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t#end\n\t\t\tthrow \"Cannot serialize \"+Std.string(v);\n\t\t}\n\t}\n\n\t@:extern inline function __getField(o:Dynamic, f:String):Dynamic return untyped o[f];\n\n\tpublic function serializeException( e : Dynamic ) {\n\t\tbuf.add(\"x\");\n\t\t#if flash\n\t\tif( untyped __is__(e,__global__[\"Error\"]) ) {\n\t\t\tvar e : flash.errors.Error = e;\n\t\t\tvar s = e.getStackTrace();\n\t\t\tif( s == null )\n\t\t\t\tserialize(e.message);\n\t\t\telse\n\t\t\t\tserialize(s);\n\t\t\treturn;\n\t\t}\n\t\t#end\n\t\tserialize(e);\n\t}\n\n\t/**\n\t\tSerializes `v` and returns the String representation.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tSerializer, serialize `v` into it and obtain the result through a call\n\t\tto toString().\n\t**/\n\tpublic static function run( v : Dynamic ) {\n\t\tvar s = new Serializer();\n\t\ts.serialize(v);\n\t\treturn s.toString();\n\t}\n\n\t#if neko\n\tstatic var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\t#end\n\n}\n\n","package haxe;\n#if !lime_cffi\n\n\n// Original haxe.Timer class\n\n/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#elseif (haxe_ver >= \"3.4.0\")\n\t\tprivate var event : MainLoop.MainEvent;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this.run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#elseif (haxe_ver >= \"3.4.0\")\n\t\t\tvar dt = time_ms / 1000;\n\t\t\tevent = MainLoop.add(function() {\n\t\t\t\t@:privateAccess event.nextRun += dt;\n\t\t\t\trun();\n\t\t\t});\n\t\t\tevent.delay(dt);\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\tif(timer != null) {\n\t\t\t\ttimer.cancel();\n\t\t\t\ttimer = null;\n\t\t\t}\n\t\t\ttask = null;\n\t\t#elseif (haxe_ver >= \"3.4.0\")\n\t\t\tif( event != null ) {\n\t\t\t\tevent.stop();\n\t\t\t\tevent = null;\n\t\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static inline function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn js.Browser.window.performance.now () / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif python\n\t\t\treturn Sys.cpuTime();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\t\t\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload override public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n\n\n#else\n\n\nimport lime.system.System;\n\n\nclass Timer {\n\t\n\t\n\tprivate static var sRunningTimers:Array <Timer> = [];\n\t\n\tprivate var mTime:Float;\n\tprivate var mFireAt:Float;\n\tprivate var mRunning:Bool;\n\t\n\t\n\tpublic function new (time:Float) {\n\t\t\n\t\tmTime = time;\n\t\tsRunningTimers.push (this);\n\t\tmFireAt = getMS () + mTime;\n\t\tmRunning = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function delay (f:Void -> Void, time:Int) {\n\t\t\n\t\tvar t = new Timer (time);\n\t\t\n\t\tt.run = function () {\n\t\t\t\n\t\t\tt.stop ();\n\t\t\tf ();\n\t\t\t\n\t\t};\n\t\t\n\t\treturn t;\n\t\t\n\t}\n\t\n\t\n\tprivate static function getMS ():Float {\n\t\t\n\t\treturn System.getTimer ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function measure<T> (f:Void -> T, ?pos:PosInfos):T {\n\t\t\n\t\tvar t0 = stamp ();\n\t\tvar r = f ();\n\t\tLog.trace ((stamp () - t0) + \"s\", pos);\n\t\treturn r;\n\t\t\n\t}\n\t\n\t\n\tdynamic public function run () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stamp ():Float {\n\t\t\n\t\treturn System.getTimer () / 1000;\n\t\t\n\t}\n\t\n\t\n\tpublic function stop ():Void {\n\t\t\n\t\tif (mRunning) {\n\t\t\t\n\t\t\tmRunning = false;\n\t\t\t\n\t\t\tfor (i in 0...sRunningTimers.length) {\n\t\t\t\t\n\t\t\t\tif (sRunningTimers[i] == this) {\n\t\t\t\t\t\n\t\t\t\t\tsRunningTimers[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __check (inTime:Float) {\n\t\t\n\t\tif (inTime >= mFireAt) {\n\t\t\t\n\t\t\tmFireAt += mTime;\n\t\t\trun ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n@:noDoc\ntypedef TypeResolver = {\n\tfunction resolveClass( name : String ) : Class<Dynamic>;\n\tfunction resolveEnum( name : String ) : Enum<Dynamic>;\n}\n\n/**\n\tThe `Unserializer` class is the complement to the `Serializer` class. It parses\n\ta serialization `String` and creates objects from the contained data.\n\n\tThis class can be used in two ways:\n\n\t- create a `new Unserializer()` instance with a given serialization\n\t\tString, then call its `unserialize()` method until all values are\n\t\textracted\n\t- call `Unserializer.run()`  to unserialize a single value from a given\n\t\tString\n\n\tThe specification of the serialization format can be found here:\n\t<https://haxe.org/manual/serialization/format>\n**/\nclass Unserializer {\n\n\t/**\n\t\tThis value can be set to use custom type resolvers.\n\n\t\tA type resolver finds a `Class` or `Enum` instance from a given `String`. \n\t\tBy default, the Haxe `Type` Api is used.\n\n\t\tA type resolver must provide two methods:\n\n\t\t1. `resolveClass(name:String):Class<Dynamic>` is called to determine a\n\t\t\t\t`Class` from a class name\n\t\t2. `resolveEnum(name:String):Enum<Dynamic>` is called to determine an\n\t\t\t\t`Enum` from an enum name\n\n\t\tThis value is applied when a new `Unserializer` instance is created.\n\t\tChanging it afterwards has no effect on previously created instances.\n\t**/\n\tpublic static var DEFAULT_RESOLVER : TypeResolver = new DefaultResolver();\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\n\t#if !neko\n\tstatic var CODES = null;\n\n\tstatic function initCodes() {\n\t\tvar codes =\n\t\t\t#if flash\n\t\t\t\tnew flash.utils.ByteArray();\n\t\t\t#else\n\t\t\t\tnew Array();\n\t\t\t#end\n\t\tfor( i in 0...BASE64.length )\n\t\t\tcodes[StringTools.fastCodeAt(BASE64,i)] = i;\n\t\treturn codes;\n\t}\n\t#end\n\n \tvar buf : String;\n \tvar pos : Int;\n \tvar length : Int;\n \tvar cache : Array<Dynamic>;\n \tvar scache : Array<String>;\n \tvar resolver : TypeResolver;\n \t#if neko\n \tvar upos : Int;\n \t#end\n\n\t/**\n\t\tCreates a new Unserializer instance, with its internal buffer\n\t\tinitialized to `buf`.\n\n\t\tThis does not parse `buf` immediately. It is parsed only when calls to\n\t\t`this.unserialize` are made.\n\n\t\tEach Unserializer instance maintains its own cache.\n\t**/\n \tpublic function new( buf : String ) {\n \t\tthis.buf = buf;\n \t\tlength = buf.length;\n \t\tpos = 0;\n \t\t#if neko\n \t\tupos = 0;\n \t\t#end\n \t\tscache = new Array();\n \t\tcache = new Array();\n\t\tvar r = DEFAULT_RESOLVER;\n\t\tif( r == null ) {\n\t\t\tr = new DefaultResolver();\n\t\t\tDEFAULT_RESOLVER = r;\n\t\t}\n\t\tresolver = r;\n \t}\n\n\t/**\n\t\tSets the type resolver of `this` Unserializer instance to `r`.\n\n\t\tIf `r` is null, a special resolver is used which returns null for all\n\t\tinput values.\n\n\t\tSee `DEFAULT_RESOLVER` for more information on type resolvers.\n\t**/\n \tpublic function setResolver( r ) {\n\t\tif( r == null )\n\t\t\tresolver = NullResolver.instance;\n\t\telse\n\t\t\tresolver = r;\n\t}\n\n\t/**\n\t\tGets the type resolver of `this` Unserializer instance.\n\n\t\tSee `DEFAULT_RESOLVER` for more information on type resolvers.\n\t**/\n \tpublic function getResolver() {\n\t\treturn resolver;\n\t}\n\n\tinline function get(p) : Int {\n\t\treturn StringTools.fastCodeAt(buf, p);\n\t}\n\n \tfunction readDigits() {\n \t\tvar k = 0;\n \t\tvar s = false;\n \t\tvar fpos = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n\t\t\tif( StringTools.isEof(c) )\n\t\t\t\tbreak;\n \t\t\tif( c == \"-\".code ) {\n \t\t\t\tif( pos != fpos )\n \t\t\t\t\tbreak;\n \t\t\t\ts = true;\n \t\t\t\tpos++;\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\tif( c < \"0\".code || c > \"9\".code )\n \t\t\t\tbreak;\n \t\t\tk = k * 10 + (c - \"0\".code);\n \t\t\tpos++;\n \t\t}\n \t\tif( s )\n \t\t\tk *= -1;\n \t\treturn k;\n \t}\n\n\tfunction readFloat() {\n\t\tvar p1 = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n\t\t\tif( StringTools.isEof(c)) break;\n \t\t\t// + - . , 0-9\n \t\t\tif( (c >= 43 && c < 58) || c == \"e\".code || c == \"E\".code )\n \t\t\t\tpos++;\n \t\t\telse\n \t\t\t\tbreak;\n \t\t}\n \t\treturn Std.parseFloat(buf.substr(p1,pos-p1));\n\t}\n\n\tfunction unserializeObject(o) {\n \t\twhile( true ) {\n \t\t\tif( pos >= length )\n \t\t\t\tthrow \"Invalid object\";\n \t\t\tif( get(pos) == \"g\".code )\n \t\t\t\tbreak;\n \t\t\tvar k : Dynamic = unserialize();\n \t\t\tif( !Std.is(k,String) )\n \t\t\t\tthrow \"Invalid object key\";\n \t\t\tvar v = unserialize();\n \t\t\tReflect.setField(o,k,v);\n \t\t}\n \t\tpos++;\n\t}\n\n\tfunction unserializeEnum( edecl, tag ) {\n\t\tif( get(pos++) != \":\".code )\n\t\t\tthrow \"Invalid enum format\";\n\t\tvar nargs = readDigits();\n\t\tif( nargs == 0 )\n\t\t\treturn Type.createEnum(edecl,tag);\n\t\tvar args = new Array();\n\t\twhile( nargs-- > 0 )\n\t\t\targs.push(unserialize());\n\t\treturn Type.createEnum(edecl,tag,args);\n\t}\n\n\t/**\n\t\tUnserializes the next part of `this` Unserializer instance and returns\n\t\tthe according value.\n\n\t\tThis function may call `this.resolver.resolveClass` to determine a\n\t\tClass from a String, and `this.resolver.resolveEnum` to determine an\n\t\tEnum from a String.\n\n\t\tIf `this` Unserializer instance contains no more or invalid data, an\n\t\texception is thrown.\n\n\t\tThis operation may fail on structurally valid data if a type cannot be\n\t\tresolved or if a field cannot be set. This can happen when unserializing\n\t\tStrings that were serialized on a different Haxe target, in which the\n\t\tserialization side has to make sure not to include platform-specific\n\t\tdata.\n\n\t\tClasses are created from `Type.createEmptyInstance`, which means their\n\t\tconstructors are not called.\n\t**/\n \tpublic function unserialize() : Dynamic {\n \t\tswitch( get(pos++) ) {\n \t\tcase \"n\".code:\n \t\t\treturn null;\n \t\tcase \"t\".code:\n \t\t\treturn true;\n \t\tcase \"f\".code:\n \t\t\treturn false;\n \t\tcase \"z\".code:\n \t\t\treturn 0;\n \t\tcase \"i\".code:\n \t\t\treturn readDigits();\n \t\tcase \"d\".code:\n \t\t\treturn readFloat();\n\t\tcase \"y\".code:\n \t\t\tvar len = readDigits();\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n \t\t\t\tthrow \"Invalid string length\";\n\t\t\tvar s = buf.substr(pos,len);\n\t\t\tpos += len;\n\t\t\ts = StringTools.urlDecode(s);\n\t\t\tscache.push(s);\n\t\t\treturn s;\n \t\tcase \"k\".code:\n \t\t\treturn Math.NaN;\n \t\tcase \"m\".code:\n \t\t\treturn Math.NEGATIVE_INFINITY;\n \t\tcase \"p\".code:\n \t\t\treturn Math.POSITIVE_INFINITY;\n \t\tcase \"a\".code:\n\t\t\tvar buf = buf;\n \t\t\tvar a = new Array<Dynamic>();\n \t\t\t#if cpp var cachePos = cache.length; #end\n \t\t\tcache.push(a);\n \t\t\twhile( true ) {\n \t\t\t\tvar c = get(pos);\n \t\t\t\tif( c == \"h\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tbreak;\n\t\t\t\t}\n \t\t\t\tif( c == \"u\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tvar n = readDigits();\n \t\t\t\t\ta[a.length+n-1] = null;\n \t\t\t\t} else\n \t\t\t\t\ta.push(unserialize());\n \t\t\t}\n \t\t\t#if cpp\n \t\t\treturn cache[cachePos] = cpp.NativeArray.resolveVirtualArray(a);\n \t\t\t#else\n \t\t\treturn a;\n \t\t\t#end\n \t\tcase \"o\".code:\n\t \t\tvar o = {};\n\t \t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n \t\tcase \"r\".code:\n \t\t\tvar n = readDigits();\n \t\t\tif( n < 0 || n >= cache.length )\n \t\t\t\tthrow \"Invalid reference\";\n \t\t\treturn cache[n];\n \t\tcase \"R\".code:\n\t\t\tvar n = readDigits();\n\t\t\tif( n < 0 || n >= scache.length )\n\t\t\t\tthrow \"Invalid string reference\";\n\t\t\treturn scache[n];\n \t\tcase \"x\".code:\n\t\t\tthrow unserialize();\n\t\tcase \"c\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n\t\tcase \"w\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tvar e = unserializeEnum(edecl, unserialize());\n\t\t\tcache.push(e);\n\t\t\treturn e;\n \t\tcase \"j\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tpos++; /* skip ':' */\n\t\t\tvar index = readDigits();\n\t\t\tvar tag = Type.getEnumConstructs(edecl)[index];\n\t\t\tif( tag == null )\n\t\t\t\tthrow \"Unknown enum index \"+name+\"@\"+index;\n\t\t\tvar e = unserializeEnum(edecl, tag);\n\t\t\tcache.push(e);\n\t\t\treturn e;\n\t\tcase \"l\".code:\n\t\t\tvar l = new List();\n\t\t\tcache.push(l);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code )\n\t\t\t\tl.add(unserialize());\n\t\t\tpos++;\n\t\t\treturn l;\n\t\tcase \"b\".code:\n\t\t\tvar h = new haxe.ds.StringMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"q\".code:\n\t\t\tvar h = new haxe.ds.IntMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\tvar c = get(pos++);\n\t\t\twhile( c == \":\".code ) {\n\t\t\t\tvar i = readDigits();\n\t\t\t\th.set(i,unserialize());\n\t\t\t\tc = get(pos++);\n\t\t\t}\n\t\t\tif( c != \"h\".code )\n\t\t\t\tthrow \"Invalid IntMap format\";\n\t\t\treturn h;\n\t\tcase \"M\".code:\n\t\t\tvar h = new haxe.ds.ObjectMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"v\".code:\n\t\t\tvar d;\n\t\t\tif(\tget(pos) >= '0'.code && get(pos) <= '9'.code &&\n\t\t\t\tget(pos + 1) >= '0'.code && get(pos + 1) <= '9'.code &&\n\t\t\t\tget(pos + 2) >= '0'.code && get(pos + 2) <= '9'.code &&\n\t\t\t\tget(pos + 3) >= '0'.code && get(pos + 3) <= '9'.code &&\n\t\t\t\tget(pos + 4) == '-'.code\n\t\t\t\t) {\n\t\t\t\t// Included for backwards compatibility\n\t\t\t\td = Date.fromString(buf.substr(pos,19));\n\t\t\t\tpos += 19;\n\t\t\t} else\n\t\t\t\td = Date.fromTime(readFloat());\n\t\t\tcache.push(d);\n\t\t\treturn d;\n \t\tcase \"s\".code:\n \t\t\tvar len = readDigits();\n\t\t\tvar buf = buf;\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n\t\t\t\tthrow \"Invalid bytes length\";\n\t\t\t#if neko\n\t\t\tvar bytes = haxe.io.Bytes.ofData( base_decode(untyped buf.substr(pos,len).__s,untyped BASE64.__s) );\n\t\t\t#else\n\t\t\tvar codes = CODES;\n\t\t\tif( codes == null ) {\n\t\t\t\tcodes = initCodes();\n\t\t\t\tCODES = codes;\n\t\t\t}\n\t\t\tvar i = pos;\n\t\t\tvar rest = len & 3;\n\t\t\tvar size = (len >> 2) * 3 + ((rest >= 2) ? rest - 1 : 0);\n\t\t\tvar max = i + (len - rest);\n\t\t\tvar bytes = haxe.io.Bytes.alloc(size);\n\t\t\tvar bpos = 0;\n\t\t\twhile( i < max ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\tvar c4 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c3 << 6) | c4);\n\t\t\t}\n\t\t\tif( rest >= 2 ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tif( rest == 3 ) {\n\t\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\t}\n\t\t\t}\n \t\t\t#end\n\t\t\tpos += len;\n\t\t\tcache.push(bytes);\n\t\t\treturn bytes;\n\t\tcase \"C\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o : Dynamic = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\to.hxUnserialize(this);\n\t\t\tif( get(pos++) != \"g\".code )\n\t\t\t\tthrow \"Invalid custom data\";\n\t\t\treturn o;\n\t\tcase \"A\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\treturn cl;\n\t\tcase \"B\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar e = resolver.resolveEnum(name);\n\t\t\tif( e == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\treturn e;\n \t\tdefault:\n \t\t}\n \t\tpos--;\n \t\tthrow (\"Invalid char \"+buf.charAt(pos)+\" at position \"+pos);\n \t}\n\n\t/**\n\t\tUnserializes `v` and returns the according value.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tUnserializer with `v` as buffer and calling its unserialize() method\n\t\tonce.\n\t**/\n\tpublic static function run( v : String ) : Dynamic {\n\t\treturn new Unserializer(v).unserialize();\n\t}\n\n\t#if neko\n\tstatic var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n\n}\n\nprivate class DefaultResolver {\n\tpublic function new() {}\n\t@:final public inline function resolveClass(name:String):Class<Dynamic> return Type.resolveClass(name);\n\t@:final public inline function resolveEnum(name:String):Enum<Dynamic> return Type.resolveEnum(name);\n}\n\nprivate class NullResolver {\n\tfunction new() {}\n\t@:final public inline function resolveClass(name:String):Class<Dynamic> return null;\n\t@:final public inline function resolveEnum(name:String):Enum<Dynamic> return null;\n\tpublic static var instance(get,null):NullResolver;\n\tinline static function get_instance():NullResolver {\n\t\tif (instance == null) instance = new NullResolver();\n\t\treturn instance;\n\t}\n}\n","/*\n * Copyright (C)2005-2016 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io; #if !js\n\n\n#if cpp\nusing cpp.NativeArray;\n#end\n\n#if !macro\n@:autoBuild(lime._macros.AssetsMacro.embedBytes()) // Enable @:bytes embed metadata\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\nclass Bytes {\n\n\tpublic var length(default,null) : Int;\n\tvar b : BytesData;\n\n\tfunction new(length,b) {\n\t\tthis.length = length;\n\t\tthis.b = b;\n\t\t#if flash\n\t\tb.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t#end\n\t}\n\n\tpublic inline function get( pos : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped $sget(b,pos);\n\t\t#elseif flash\n\t\treturn b[pos];\n\t\t#elseif php\n\t\treturn b.get(pos);\n\t\t#elseif cpp\n\t\treturn untyped b[pos];\n\t\t#elseif java\n\t\treturn untyped b[pos] & 0xFF;\n\t\t#elseif python\n\t\treturn python.Syntax.arrayAccess(b, pos);\n\t\t#else\n\t\treturn b[pos];\n\t\t#end\n\t}\n\n\tpublic inline function set( pos : Int, v : Int ) : Void {\n\t\t#if neko\n\t\tuntyped $sset(b,pos,v);\n\t\t#elseif flash\n\t\tb[pos] = v;\n\t\t#elseif php\n\t\tb.set(pos, v);\n\t\t#elseif cpp\n\t\tuntyped b[pos] = v;\n\t\t#elseif java\n\t\tb[pos] = cast v;\n\t\t#elseif cs\n\t\tb[pos] = cast v;\n\t\t#elseif python\n\t\tpython.Syntax.arraySet(b, pos, v & 0xFF);\n\t\t#else\n\t\tb[pos] = v & 0xFF;\n\t\t#end\n\t}\n\n\tpublic function blit( pos : Int, src : Bytes, srcpos : Int, len : Int ) : Void {\n\t\t#if !neko\n\t\tif( pos < 0 || srcpos < 0 || len < 0 || pos + len > length || srcpos + len > src.length ) throw Error.OutsideBounds;\n\t\t#end\n\t\t#if neko\n\t\ttry untyped $sblit(b,pos,src.b,srcpos,len) catch( e : Dynamic ) throw Error.OutsideBounds;\n\t\t#elseif php\n\t\tb.blit(pos, src.b, srcpos, len);\n\t\t#elseif flash\n\t\tb.position = pos;\n\t\tif( len > 0 ) b.writeBytes(src.b,srcpos,len);\n\t\t#elseif java\n\t\tjava.lang.System.arraycopy(src.b, srcpos, b, pos, len);\n\t\t#elseif cs\n\t\tcs.system.Array.Copy(src.b, srcpos, b, pos, len);\n\t\t#elseif python\n\t\tpython.Syntax.pythonCode(\"self.b[{0}:{0}+{1}] = src.b[srcpos:srcpos+{1}]\", pos, len);\n\t\t#elseif cpp\n\t\tb.blit(pos, src.b, srcpos, len);\n\t\t#else\n\t\tvar b1 = b;\n\t\tvar b2 = src.b;\n\t\tif( b1 == b2 && pos > srcpos ) {\n\t\t\tvar i = len;\n\t\t\twhile( i > 0 ) {\n\t\t\t\ti--;\n\t\t\t\tb1[i + pos] = b2[i + srcpos];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tfor( i in 0...len )\n\t\t\tb1[i+pos] = b2[i+srcpos];\n\t\t#end\n\t}\n\n\tpublic function fill( pos : Int, len : Int, value : Int ) {\n\t\t#if flash\n\t\tvar v4 = value&0xFF;\n\t\tv4 |= v4<<8;\n\t\tv4 |= v4<<16;\n\t\tb.position = pos;\n\t\tfor( i in 0...len>>2 )\n\t\t\tb.writeUnsignedInt(v4);\n\t\tpos += len&~3;\n\t\tfor( i in 0...len&3 )\n\t\t\tset(pos++,value);\n\t\t#elseif cpp\n\t\tuntyped __global__.__hxcpp_memory_memset(b,pos,len,value);\n\t\t#else\n\t\tfor( i in 0...len )\n\t\t\tset(pos++, value);\n\t\t#end\n\t}\n\n\tpublic function sub( pos : Int, len : Int ) : Bytes {\n\t\t#if !neko\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\t#end\n\t\t#if neko\n\t\treturn try new Bytes(len,untyped __dollar__ssub(b,pos,len)) catch( e : Dynamic ) throw Error.OutsideBounds;\n\t\t#elseif flash\n\t\tb.position = pos;\n\t\tvar b2 = new flash.utils.ByteArray();\n\t\tb.readBytes(b2,0,len);\n\t\treturn new Bytes(len,b2);\n\t\t#elseif php\n\t\treturn new Bytes(len, b.sub(pos, len));\n\t\t#elseif java\n\t\tvar newarr = new java.NativeArray(len);\n\t\tjava.lang.System.arraycopy(b, pos, newarr, 0, len);\n\t\treturn new Bytes(len, newarr);\n\t\t#elseif cs\n\t\tvar newarr = new cs.NativeArray(len);\n\t\tcs.system.Array.Copy(b, pos, newarr, 0, len);\n\t\treturn new Bytes(len, newarr);\n\t\t#elseif python\n\t\treturn new Bytes(len, python.Syntax.arrayAccess(b, pos, pos+len) );\n\t\t#else\n\t\treturn new Bytes(len,b.slice(pos,pos+len));\n\t\t#end\n\t}\n\n\tpublic function compare( other : Bytes ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__compare(b,other.b);\n\t\t#elseif flash\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tb1.position = 0;\n\t\tb2.position = 0;\n\t\tb1.endian = flash.utils.Endian.BIG_ENDIAN;\n\t\tb2.endian = flash.utils.Endian.BIG_ENDIAN;\n\t\tfor( i in 0...len>>2 )\n\t\t\tif( b1.readUnsignedInt() != b2.readUnsignedInt() ) {\n\t\t\t\tb1.position -= 4;\n\t\t\t\tb2.position -= 4;\n\t\t\t\tvar d = b1.readUnsignedInt() - b2.readUnsignedInt();\n\t\t\t\tb1.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\tb2.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\treturn d;\n\t\t\t}\n\t\tfor( i in 0...len & 3 )\n\t\t\tif( b1.readUnsignedByte() != b2.readUnsignedByte() ) {\n\t\t\t\tb1.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\tb2.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\t\treturn b1[b1.position-1] - b2[b2.position-1];\n\t\t\t}\n\t\tb1.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\tb2.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\treturn length - other.length;\n\t\t#elseif php\n\t\treturn b.compare(other.b);\n\t\t//#elseif cs\n\t\t//TODO: memcmp if unsafe flag is on\n\t\t#elseif cpp\n\t\treturn b.memcmp(other.b);\n\t\t#else\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tfor( i in 0...len )\n\t\t\tif( b1[i] != b2[i] )\n\t\t\t\treturn untyped b1[i] - untyped b2[i];\n\t\treturn length - other.length;\n\t\t#end\n\t}\n\n\n\t/**\n\t\tReturns the IEEE double precision value at given position (in low endian encoding).\n\t\tResult is unspecified if reading outside of the bounds\n\t**/\n\t#if (neko_v21 || (cpp && !cppia) || flash) inline #end\n\tpublic function getDouble( pos : Int ) : Float {\n\t\t#if neko_v21\n\t\treturn untyped $sgetd(b, pos, false);\n\t\t#elseif flash\n\t\tb.position = pos;\n\t\treturn b.readDouble();\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 8 > length ) throw Error.OutsideBounds;\n\t\treturn untyped __global__.__hxcpp_memory_get_double(b,pos);\n\t\t#else\n\t\treturn FPHelper.i64ToDouble(getInt32(pos),getInt32(pos+4));\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the IEEE single precision value at given position (in low endian encoding).\n\t\tResult is unspecified if reading outside of the bounds\n\t**/\n\t#if (neko_v21 || (cpp && !cppia) || flash) inline #end\n\tpublic function getFloat( pos : Int ) : Float {\n\t\t#if neko_v21\n\t\treturn untyped $sgetf(b, pos, false);\n\t\t#elseif flash\n\t\tb.position = pos;\n\t\treturn b.readFloat();\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 4 > length ) throw Error.OutsideBounds;\n\t\treturn untyped __global__.__hxcpp_memory_get_float(b,pos);\n\t\t#else\n\t\treturn FPHelper.i32ToFloat(getInt32(pos));\n\t\t#end\n\t}\n\n\t/**\n\t\tStore the IEEE double precision value at given position in low endian encoding.\n\t\tResult is unspecified if writing outside of the bounds.\n\t**/\n\t#if (neko_v21 || flash) inline #end\n\tpublic function setDouble( pos : Int, v : Float ) : Void {\n\t\t#if neko_v21\n\t\tuntyped $ssetd(b, pos, v, false);\n\t\t#elseif neko\n\t\tuntyped $sblit(b, pos, FPHelper._double_bytes(v,false), 0, 8);\n\t\t#elseif flash\n\t\tb.position = pos;\n\t\tb.writeDouble(v);\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 8 > length ) throw Error.OutsideBounds;\n\t\tuntyped __global__.__hxcpp_memory_set_double(b,pos,v);\n\t\t#else\n\t\tvar i = FPHelper.doubleToI64(v);\n\t\tsetInt32(pos, i.low);\n\t\tsetInt32(pos + 4, i.high);\n\t\t#end\n\t}\n\n\t/**\n\t\tStore the IEEE single precision value at given position in low endian encoding.\n\t\tResult is unspecified if writing outside of the bounds.\n\t**/\n\t#if (neko_v21 || flash) inline #end\n\tpublic function setFloat( pos : Int, v : Float ) : Void {\n\t\t#if neko_v21\n\t\tuntyped $ssetf(b, pos, v, false);\n\t\t#elseif neko\n\t\tuntyped $sblit(b, pos, FPHelper._float_bytes(v,false), 0, 4);\n\t\t#elseif flash\n\t\tb.position = pos;\n\t\tb.writeFloat(v);\n\t\t#elseif cpp\n\t\tif( pos < 0 || pos + 4 > length ) throw Error.OutsideBounds;\n\t\tuntyped __global__.__hxcpp_memory_set_float(b,pos,v);\n\t\t#else\n\t\tsetInt32(pos, FPHelper.floatToI32(v));\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the 16 bit unsigned integer at given position (in low endian encoding).\n\t**/\n\tpublic inline function getUInt16( pos : Int ) : Int {\n\t\t#if neko_v21\n\t\treturn untyped $sget16(b, pos, false);\n\t\t#else\n\t\treturn get(pos) | (get(pos + 1) << 8);\n\t\t#end\n\t}\n\n\t/**\n\t\tStore the 16 bit unsigned integer at given position (in low endian encoding).\n\t**/\n\tpublic inline function setUInt16( pos : Int, v : Int ) : Void {\n\t\t#if neko_v21\n\t\tuntyped $sset16(b, pos, v, false);\n\t\t#else\n\t\tset(pos, v);\n\t\tset(pos + 1, v >> 8);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the 32 bit integer at given position (in low endian encoding).\n\t**/\n\tpublic inline function getInt32( pos : Int ) : Int {\n\t\t#if neko_v21\n\t\treturn untyped $sget32(b, pos, false);\n\t\t#elseif (php || python)\n\t\tvar v = get(pos) | (get(pos + 1) << 8) | (get(pos + 2) << 16) | (get(pos+3) << 24);\n\t\treturn if( v & 0x80000000 != 0 ) v | 0x80000000 else v;\n\t\t#elseif lua\n\t\tvar v = get(pos) | (get(pos + 1) << 8) | (get(pos + 2) << 16) | (get(pos+3) << 24);\n\t\treturn lua.Boot.clamp(if( v & 0x80000000 != 0 ) v | 0x80000000 else v);\n\t\t#else\n\t\treturn get(pos) | (get(pos + 1) << 8) | (get(pos + 2) << 16) | (get(pos+3) << 24);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the 64 bit integer at given position (in low endian encoding).\n\t**/\n\tpublic inline function getInt64( pos : Int ) : haxe.Int64 {\n\t\treturn haxe.Int64.make(getInt32(pos+4),getInt32(pos));\n\t}\n\n\t/**\n\t\tStore the 32 bit integer at given position (in low endian encoding).\n\t**/\n\tpublic inline function setInt32( pos : Int, v : Int ) : Void {\n\t\t#if neko_v21\n\t\tuntyped $sset32(b, pos, v, false);\n\t\t#else\n\t\tset(pos, v & 0xFF);\n\t\tset(pos + 1, v >> 8 & 0xFF);\n\t\tset(pos + 2, v >> 16 & 0xFF);\n\t\tset(pos + 3, v >>> 24 & 0xFF);\n\t\t#end\n\t}\n\n\t/**\n\t\tStore the 64 bit integer at given position (in low endian encoding).\n\t**/\n\tpublic inline function setInt64( pos : Int, v : haxe.Int64 ) : Void {\n\t\tsetInt32(pos, v.low);\n\t\tsetInt32(pos + 4, v.high);\n\t}\n\n\tpublic function getString( pos : Int, len : Int ) : String {\n\t\t#if !neko\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\t#end\n\t\t#if neko\n\t\treturn try new String(untyped __dollar__ssub(b,pos,len)) catch( e : Dynamic ) throw Error.OutsideBounds;\n\t\t#elseif flash\n\t\tb.position = pos;\n\t\treturn b.readUTFBytes(len);\n\t\t#elseif php\n\t\treturn b.getString(pos, len);\n\t\t#elseif cpp\n\t\tvar result:String=\"\";\n\t\tuntyped __global__.__hxcpp_string_of_bytes(b,result,pos,len);\n\t\treturn result;\n\t\t#elseif cs\n\t\treturn cs.system.text.Encoding.UTF8.GetString(b, pos, len);\n\t\t#elseif java\n\t\ttry\n\t\t\treturn new String(b, pos, len, \"UTF-8\")\n\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif python\n\t\treturn python.Syntax.pythonCode(\"self.b[{0}:{0}+{1}].decode('UTF-8','replace')\", pos, len);\n\t\t#elseif lua\n\t\tvar begin = cast(Math.min(pos,b.length),Int);\n\t\tvar end = cast(Math.min(pos+len,b.length),Int);\n\t\treturn [for (i in begin...end) String.fromCharCode(b[i])].join(\"\");\n\t\t#else\n\t\tvar s = \"\";\n\t\tvar b = b;\n\t\tvar fcc = String.fromCharCode;\n\t\tvar i = pos;\n\t\tvar max = pos+len;\n\t\t// utf8-decode and utf16-encode\n\t\twhile( i < max ) {\n\t\t\tvar c = b[i++];\n\t\t\tif( c < 0x80 ) {\n\t\t\t\tif( c == 0 ) break;\n\t\t\t\ts += fcc(c);\n\t\t\t} else if( c < 0xE0 )\n\t\t\t\ts += fcc( ((c & 0x3F) << 6) | (b[i++] & 0x7F) );\n\t\t\telse if( c < 0xF0 ) {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\ts += fcc( ((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (b[i++] & 0x7F) );\n\t\t\t} else {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\tvar c3 = b[i++];\n\t\t\t\tvar u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);\n\t\t\t\t// surrogate pair\n\t\t\t\ts += fcc( (u >> 10) + 0xD7C0 );\n\t\t\t\ts += fcc( (u & 0x3FF) | 0xDC00 );\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t\t#end\n\t}\n\n\t@:deprecated(\"readString is deprecated, use getString instead\")\n\t@:noCompletion\n\tpublic inline function readString(pos:Int, len:Int):String {\n\t\treturn getString(pos, len);\n\t}\n\n\tpublic function toString() : String {\n\t\t#if neko\n\t\treturn new String(untyped __dollar__ssub(b,0,length));\n\t\t#elseif flash\n\t\tb.position = 0;\n\t\treturn b.toString();\n\t\t#elseif php\n\t\treturn b.toString();\n\t\t#elseif cs\n\t\treturn cs.system.text.Encoding.UTF8.GetString(b, 0, length);\n\t\t#elseif java\n\t\ttry\n\t\t{\n\t\t\treturn new String(b, 0, length, \"UTF-8\");\n\t\t}\n\t\tcatch (e:Dynamic) throw e;\n\t\t#else\n\t\treturn getString(0,length);\n\t\t#end\n\t}\n\n\tpublic function toHex() : String {\n\t\tvar s = new StringBuf();\n\t\tvar chars = [];\n\t\tvar str = \"0123456789abcdef\";\n\t\tfor( i in 0...str.length )\n\t\t\tchars.push(str.charCodeAt(i));\n\t\tfor( i in 0...length ) {\n\t\t\tvar c = get(i);\n\t\t\ts.addChar(chars[c >> 4]);\n\t\t\ts.addChar(chars[c & 15]);\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function getData() : BytesData {\n\t\treturn b;\n\t}\n\n\tpublic static function alloc( length : Int ) : Bytes {\n\t\t#if neko\n\t\treturn new Bytes(length,untyped __dollar__smake(length));\n\t\t#elseif flash\n\t\tvar b = new flash.utils.ByteArray();\n\t\tb.length = length;\n\t\treturn new Bytes(length,b);\n\t\t#elseif php\n\t\treturn new Bytes(length, BytesData.alloc(length));\n\t\t#elseif cpp\n\t\tvar a = new BytesData();\n\t\tif (length>0) cpp.NativeArray.setSize(a, length);\n\t\treturn new Bytes(length, a);\n\t\t#elseif cs\n\t\treturn new Bytes(length, new cs.NativeArray(length));\n\t\t#elseif java\n\t\treturn new Bytes(length, new java.NativeArray(length));\n\t\t#elseif python\n\t\treturn new Bytes(length, new python.Bytearray(length));\n\t\t#else\n\t\tvar a = new Array();\n\t\tfor( i in 0...length )\n\t\t\ta.push(0);\n\t\treturn new Bytes(length,a);\n\t\t#end\n\t}\n\n\t@:pure\n\tpublic static function ofString( s : String ) : Bytes {\n\t\t#if neko\n\t\treturn new Bytes(s.length,untyped __dollar__ssub(s.__s,0,s.length));\n\t\t#elseif flash\n\t\tvar b = new flash.utils.ByteArray();\n\t\tb.writeUTFBytes(s);\n\t\treturn new Bytes(b.length,b);\n\t\t#elseif php\n\t\tvar x = BytesData.ofString(s);\n\t\treturn new Bytes(x.length, x);\n\t\t#elseif cpp\n\t\tvar a = new BytesData();\n\t\tuntyped __global__.__hxcpp_bytes_of_string(a,s);\n\t\treturn new Bytes(a.length, a);\n\t\t#elseif cs\n\t\tvar b = cs.system.text.Encoding.UTF8.GetBytes(s);\n\t\treturn new Bytes(b.Length, b);\n\t\t#elseif java\n\t\ttry\n\t\t{\n\t\t\tvar b:BytesData = untyped s.getBytes(\"UTF-8\");\n\t\t\treturn new Bytes(b.length, b);\n\t\t}\n\t\tcatch (e:Dynamic) throw e;\n\n\t\t#elseif python\n\t\t\tvar b:BytesData = new python.Bytearray(s, \"UTF-8\");\n\t\t\treturn new Bytes(b.length, b);\n\n\t\t#elseif lua\n\t\t\tvar bytes = [for (c in 0...s.length) StringTools.fastCodeAt(s,c)];\n\t\t\treturn new Bytes(bytes.length, bytes);\n\t\t#else\n\t\tvar a = new Array();\n\t\t// utf16-decode and utf8-encode\n\t\tvar i = 0;\n\t\twhile( i < s.length ) {\n\t\t\tvar c : Int = StringTools.fastCodeAt(s,i++);\n\t\t\t// surrogate pair\n\t\t\tif( 0xD800 <= c && c <= 0xDBFF )\n\t\t\t       c = (c - 0xD7C0 << 10) | (StringTools.fastCodeAt(s,i++) & 0x3FF);\n\t\t\tif( c <= 0x7F )\n\t\t\t\ta.push(c);\n\t\t\telse if( c <= 0x7FF ) {\n\t\t\t\ta.push( 0xC0 | (c >> 6) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\ta.push( 0xE0 | (c >> 12) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else {\n\t\t\t\ta.push( 0xF0 | (c >> 18) );\n\t\t\t\ta.push( 0x80 | ((c >> 12) & 63) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t}\n\t\t}\n\t\treturn new Bytes(a.length,a);\n\t\t#end\n\t}\n\n\tpublic static function ofData( b : BytesData ) {\n\t\t#if flash\n\t\treturn new Bytes(b.length,b);\n\t\t#elseif neko\n\t\treturn new Bytes(untyped __dollar__ssize(b),b);\n\t\t#elseif php\n\t\treturn new Bytes(b.length, b);\n\t\t#elseif cs\n\t\treturn new Bytes(b.Length,b);\n\t\t#else\n\t\treturn new Bytes(b.length,b);\n\t\t#end\n\t}\n\n\t/**\n\t\tRead the most efficiently possible the n-th byte of the data.\n\t\tBehavior when reading outside of the available data is unspecified.\n\t**/\n\tpublic inline static function fastGet( b : BytesData, pos : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(b,pos);\n\t\t#elseif flash\n\t\treturn b[pos];\n\t\t#elseif php\n\t\treturn b.get(pos);\n\t\t#elseif cpp\n\t\treturn untyped b.unsafeGet(pos);\n\t\t#elseif java\n\t\treturn untyped b[pos] & 0xFF;\n\t\t#else\n\t\treturn b[pos];\n\t\t#end\n\t}\n\n}\n\n\n#else\n\n\n#if !nodejs\nimport js.html.compat.Uint8Array;\nimport js.html.compat.DataView;\n#end\n\n#if !macro\n@:autoBuild(lime._macros.AssetsMacro.embedBytes()) // Enable @:bytes embed metadata\n#end\n\nclass Bytes {\n\n\tpublic var length(default,null) : Int;\n\tvar b : js.html.Uint8Array;\n\tvar data : js.html.DataView;\n\n\tfunction new(data:BytesData) {\n\t\tthis.length = data.byteLength;\n\t\tthis.b = new js.html.Uint8Array(data);\n\t\tuntyped {\n\t\t\tb.bufferValue = data; // some impl does not return the same instance in .buffer\n\t\t\tdata.hxBytes = this;\n\t\t\tdata.bytes = this.b;\n\t\t}\n\t}\n\n\tpublic inline function get( pos : Int ) : Int {\n\t\treturn b[pos];\n\t}\n\n\tpublic inline function set( pos : Int, v : Int ) : Void {\n\t\tb[pos] = v & 0xFF; // the &0xFF is necessary for js.html.compat support\n\t}\n\n\tpublic function blit( pos : Int, src : Bytes, srcpos : Int, len : Int ) : Void {\n\t\tif( pos < 0 || srcpos < 0 || len < 0 || pos + len > length || srcpos + len > src.length ) throw Error.OutsideBounds;\n\t\tif( srcpos == 0 && len == src.b.byteLength )\n\t\t\tb.set(src.b,pos);\n\t\telse\n\t\t\tb.set(src.b.subarray(srcpos,srcpos+len),pos);\n\t}\n\n\tpublic function fill( pos : Int, len : Int, value : Int ) : Void {\n\t\tfor( i in 0...len )\n\t\t\tset(pos++, value);\n\t}\n\n\tpublic function sub( pos : Int, len : Int ) : Bytes {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\treturn new Bytes(b.buffer.slice(pos+b.byteOffset,pos+b.byteOffset+len));\n\t}\n\n\tpublic function compare( other : Bytes ) : Int {\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tfor( i in 0...len )\n\t\t\tif( b1[i] != b2[i] )\n\t\t\t\treturn b1[i] - b2[i];\n\t\treturn length - other.length;\n\t}\n\n\tinline function initData() : Void {\n\t\tif( data == null ) data = new js.html.DataView(b.buffer, b.byteOffset, b.byteLength);\n\t}\n\n\tpublic function getDouble( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat64(pos, true);\n\t}\n\n\tpublic function getFloat( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat32(pos, true);\n\t}\n\n\tpublic function setDouble( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat64(pos, v, true);\n\t}\n\n\tpublic function setFloat( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat32(pos, v, true);\n\t}\n\n\tpublic function getUInt16( pos : Int ) : Int {\n\t\tinitData();\n\t\treturn data.getUint16(pos, true);\n\t}\n\n\tpublic function setUInt16( pos : Int, v : Int ) : Void {\n\t\tinitData();\n\t\tdata.setUint16(pos, v, true);\n\t}\n\n\tpublic function getInt32( pos : Int ) : Int {\n\t\tinitData();\n\t\treturn data.getInt32(pos, true);\n\t}\n\n\tpublic function setInt32( pos : Int, v : Int ) : Void {\n\t\tinitData();\n\t\tdata.setInt32(pos, v, true);\n\t}\n\n\tpublic function getInt64( pos : Int ) : haxe.Int64 {\n\t\treturn Int64.make(getInt32(pos + 4),getInt32(pos));\n\t}\n\n\tpublic function setInt64( pos : Int, v : haxe.Int64 ) : Void {\n\t\tsetInt32(pos, v.low);\n\t\tsetInt32(pos + 4, v.high);\n\t}\n\n\tpublic function getString( pos : Int, len : Int ) : String {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\tvar s = \"\";\n\t\tvar b = b;\n\t\tvar fcc = String.fromCharCode;\n\t\tvar i = pos;\n\t\tvar max = pos+len;\n\t\t// utf8-decode and utf16-encode\n\t\twhile( i < max ) {\n\t\t\tvar c = b[i++];\n\t\t\tif( c < 0x80 ) {\n\t\t\t\tif( c == 0 ) break;\n\t\t\t\ts += fcc(c);\n\t\t\t} else if( c < 0xE0 )\n\t\t\t\ts += fcc( ((c & 0x3F) << 6) | (b[i++] & 0x7F) );\n\t\t\telse if( c < 0xF0 ) {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\ts += fcc( ((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (b[i++] & 0x7F) );\n\t\t\t} else {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\tvar c3 = b[i++];\n\t\t\t\tvar u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);\n\t\t\t\t// surrogate pair\n\t\t\t\ts += fcc( (u >> 10) + 0xD7C0 );\n\t\t\t\ts += fcc( (u & 0x3FF) | 0xDC00 );\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t}\n\n\t@:deprecated(\"readString is deprecated, use getString instead\")\n\t@:noCompletion\n\tpublic inline function readString(pos:Int, len:Int):String {\n\t\treturn getString(pos, len);\n\t}\n\n\tpublic function toString() : String {\n\t\treturn getString(0,length);\n\t}\n\n\tpublic function toHex() : String {\n\t\tvar s = new StringBuf();\n\t\tvar chars = [];\n\t\tvar str = \"0123456789abcdef\";\n\t\tfor( i in 0...str.length )\n\t\t\tchars.push(str.charCodeAt(i));\n\t\tfor( i in 0...length ) {\n\t\t\tvar c = get(i);\n\t\t\ts.addChar(chars[c >> 4]);\n\t\t\ts.addChar(chars[c & 15]);\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function getData() : BytesData {\n\t\treturn untyped b.bufferValue;\n\t}\n\n\tpublic static inline function alloc( length : Int ) : Bytes {\n\t\treturn new Bytes(new BytesData(length));\n\t}\n\n\tpublic static function ofString( s : String ) : Bytes {\n\t\tvar a = new Array();\n\t\t// utf16-decode and utf8-encode\n\t\tvar i = 0;\n\t\twhile( i < s.length ) {\n\t\t\tvar c : Int = StringTools.fastCodeAt(s,i++);\n\t\t\t// surrogate pair\n\t\t\tif( 0xD800 <= c && c <= 0xDBFF )\n\t\t\t    c = (c - 0xD7C0 << 10) | (StringTools.fastCodeAt(s,i++) & 0x3FF);\n\t\t\tif( c <= 0x7F )\n\t\t\t\ta.push(c);\n\t\t\telse if( c <= 0x7FF ) {\n\t\t\t\ta.push( 0xC0 | (c >> 6) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\ta.push( 0xE0 | (c >> 12) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else {\n\t\t\t\ta.push( 0xF0 | (c >> 18) );\n\t\t\t\ta.push( 0x80 | ((c >> 12) & 63) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t}\n\t\t}\n\t\treturn new Bytes(new js.html.Uint8Array(a).buffer);\n\t}\n\n\tpublic static function ofData( b : BytesData ) : Bytes {\n\t\tvar hb = untyped b.hxBytes;\n\t\tif( hb != null ) return hb;\n\t\treturn new Bytes(b);\n\t}\n\n\tpublic inline static function fastGet( b : BytesData, pos : Int ) : Int {\n\t\t// this requires that we have wrapped it with haxe.io.Bytes beforehand\n\t\treturn untyped b.bytes[pos];\n\t}\n\n}\n\n\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.crypto;\n\n/**\n\tAllows to encode/decode String and bytes using Base64 encoding.\n**/\nclass Base64 {\n\n\tpublic static var CHARS(default,null) = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\tpublic static var BYTES(default,null) = haxe.io.Bytes.ofString(CHARS);\n\n\tpublic static function encode( bytes : haxe.io.Bytes, complement = true ) : String {\n\t\tvar str = new BaseCode(BYTES).encodeBytes(bytes).toString();\n\t\tif( complement )\n\t\t\tswitch (bytes.length % 3) {\n\t\t\tcase 1:\n\t\t\t\tstr += \"==\";\n\t\t\tcase 2:\n\t\t\t\tstr += \"=\";\n\t\t\tdefault:\n\t\t\t}\n\t\treturn str;\n\t}\n\n\tpublic static function decode( str : String, complement = true ) : haxe.io.Bytes {\n\t\tif( complement )\n\t\t\twhile( str.charCodeAt(str.length-1) == \"=\".code )\n\t\t\t\tstr = str.substr(0,-1);\n\t\treturn new BaseCode(BYTES).decodeBytes(haxe.io.Bytes.ofString(str));\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.crypto;\n\n/**\n\tAllows to encode/decode String and bytes using a power of two base dictionary.\n**/\nclass BaseCode {\n\n\tvar base : haxe.io.Bytes;\n\tvar nbits : Int;\n\tvar tbl : Array<Int>;\n\n\tpublic function new( base : haxe.io.Bytes ) {\n\t\tvar len = base.length;\n\t\tvar nbits = 1;\n\t\twhile( len > 1 << nbits )\n\t\t\tnbits++;\n\t\tif( nbits > 8 || len != 1 << nbits )\n\t\t\tthrow \"BaseCode : base length must be a power of two.\";\n\t\tthis.base = base;\n\t\tthis.nbits = nbits;\n\t}\n\n\tpublic function encodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {\n\t\t#if (neko && !interp)\n\t\treturn haxe.io.Bytes.ofData( base_encode(b.getData(),base.getData()) );\n\t\t#else\n\t\tvar nbits = this.nbits;\n\t\tvar base = this.base;\n\t\tvar size = Std.int(b.length * 8 / nbits);\n\t\tvar out = haxe.io.Bytes.alloc(size + (((b.length * 8) % nbits == 0) ? 0 : 1) );\n\t\tvar buf = 0;\n\t\tvar curbits = 0;\n\t\tvar mask = (1 << nbits) - 1;\n\t\tvar pin = 0;\n\t\tvar pout = 0;\n\t\twhile( pout < size ) {\n\t\t\twhile( curbits < nbits ) {\n\t\t\t\tcurbits += 8;\n\t\t\t\tbuf <<= 8;\n\t\t\t\tbuf |= b.get(pin++);\n\t\t\t}\n\t\t\tcurbits -= nbits;\n\t\t\tout.set(pout++,base.get((buf >> curbits) & mask));\n\t\t}\n\t\tif( curbits > 0 )\n\t\t\tout.set(pout++,base.get((buf << (nbits - curbits)) & mask));\n\t\treturn out;\n\t\t#end\n\t}\n\n\tfunction initTable() {\n\t\tvar tbl = new Array();\n\t\tfor( i in 0...256 )\n\t\t\ttbl[i] = -1;\n\t\tfor( i in 0...base.length )\n\t\t\ttbl[base.get(i)] = i;\n\t\tthis.tbl = tbl;\n\t}\n\n\tpublic function decodeBytes( b : haxe.io.Bytes ) : haxe.io.Bytes {\n\t\t#if (neko && !interp)\n\t\treturn haxe.io.Bytes.ofData( base_decode(b.getData(),base.getData()) );\n\t\t#else\n\t\tvar nbits = this.nbits;\n\t\tvar base = this.base;\n\t\tif( this.tbl == null ) initTable();\n\t\tvar tbl = this.tbl;\n\t\tvar size = (b.length * nbits) >> 3;\n\t\tvar out = haxe.io.Bytes.alloc(size);\n\t\tvar buf = 0;\n\t\tvar curbits = 0;\n\t\tvar pin = 0;\n\t\tvar pout = 0;\n\t\twhile( pout < size ) {\n\t\t\twhile( curbits < 8 ) {\n\t\t\t\tcurbits += nbits;\n\t\t\t\tbuf <<= nbits;\n\t\t\t\tvar i = tbl[b.get(pin++)];\n\t\t\t\tif( i == -1 )\n\t\t\t\t\tthrow \"BaseCode : invalid encoded char\";\n\t\t\t\tbuf |= i;\n\t\t\t}\n\t\t\tcurbits -= 8;\n\t\t\tout.set(pout++,(buf >> curbits) & 0xFF);\n\t\t}\n\t\treturn out;\n\t\t#end\n\t}\n\n\tpublic function encodeString( s : String ) {\n\t\t#if (neko && !interp)\n\t\treturn neko.NativeString.toString( base_encode(neko.NativeString.ofString(s),base.getData()) );\n\t\t#else\n\t\treturn encodeBytes(haxe.io.Bytes.ofString(s)).toString();\n\t\t#end\n\t}\n\n\tpublic function decodeString( s : String ) {\n\t\t#if (neko && !interp)\n\t\treturn neko.NativeString.toString( base_decode(neko.NativeString.ofString(s),base.getData()) );\n\t\t#else\n\t\treturn decodeBytes(haxe.io.Bytes.ofString(s)).toString();\n\t\t#end\n\t}\n\n\tpublic static function encode( s : String, base : String ) {\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\n\t\treturn b.encodeString(s);\n\t}\n\n\tpublic static function decode( s : String, base : String ) {\n\t\tvar b = new BaseCode(haxe.io.Bytes.ofString(base));\n\t\treturn b.decodeString(s);\n\t}\n\n\t#if neko\n\tprivate static var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\tprivate static var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class IntMap<T> implements haxe.Constraints.IMap<Int,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic inline function set( key : Int, value : T ) : Void {\n\t\tuntyped h[key] = value;\n\t}\n\n\tpublic inline function get( key : Int ) : Null<T> {\n\t\treturn untyped h[key];\n\t}\n\n\tpublic inline function exists( key : Int ) : Bool {\n\t\treturn untyped h.hasOwnProperty(key);\n\t}\n\n\tpublic function remove( key : Int ) : Bool {\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped  __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<Int> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for( var key in {0} ) {1}\", h, if( h.hasOwnProperty(key) ) a.push(key|0));\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[i]; }\n\t\t};\n\t}\n\t\n\tpublic function copy() : IntMap<T> {\n\t\tvar copied = new IntMap();\n\t\tfor(key in keys()) copied.set(key, get(key));\n\t\treturn copied;\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\t\n\tpublic function copy() : StringMap<T> {\n\t\tvar copied = new StringMap();\n\t\tfor(key in keys()) copied.set(key, get(key));\n\t\treturn copied;\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length-1 )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {};\");\n\t}\n\n}\n","/*\n * Copyright (C)2005-2016 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tHelper that converts between floating point and binary representation.\n\tAlways works in low-endian encoding.\n**/\nclass FPHelper {\n\n\t#if neko_v21\n\t// stored in helper\n\t#elseif neko\n\tstatic var i64tmp = new neko.vm.Tls<Int64>();\n\t#elseif !(java || cs)\n\tstatic var i64tmp = Int64.ofInt(0);\n\t#end\n\n\t#if neko\n\t\t#if neko_v21\n\t\tstatic var helpers = new neko.vm.Tls<neko.NativeArray<Dynamic>>();\n\t\t#else\n\t\tstatic var helperf = new neko.vm.Tls<neko.NativeString>();\n\t\tstatic var helperd = new neko.vm.Tls<neko.NativeString>();\n\t\tstatic var _float_of_bytes = neko.Lib.load(\"std\",\"float_of_bytes\",2);\n\t\tstatic var _double_of_bytes = neko.Lib.load(\"std\",\"double_of_bytes\",2);\n\t\tstatic var _float_bytes = neko.Lib.load(\"std\",\"float_bytes\",2);\n\t\tstatic var _double_bytes = neko.Lib.load(\"std\",\"double_bytes\",2);\n\t\t#end\n\t#elseif flash\n\t\tstatic var helper = {\n\t\t\tvar b = new flash.utils.ByteArray();\n\t\t\tb.endian = flash.utils.Endian.LITTLE_ENDIAN;\n\t\t\tb;\n\t\t}\n\t#elseif php\n\t\tstatic var isLittleEndian : Bool = untyped __call__('unpack','S','\\x01\\x00')[1] == 1;\n\t#else\n\t\tstatic inline var LN2 = 0.6931471805599453; // Math.log(2)\n\t#end\n\n\t#if neko_v21 inline #end\n\tpublic static function i32ToFloat( i : Int ) : Float {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $itof(i,false);\n\t\t\t#else\n\t\t\tvar helper = helperf.value;\n\t\t\tif( helper == null )\n\t\t\t\thelperf.value = helper = neko.NativeString.alloc(4);\n\t\t\tuntyped $sset(helper,0,i&0xFF);\n\t\t\tuntyped $sset(helper,1,(i>>8)&0xFF);\n\t\t\tuntyped $sset(helper,2,(i>>16)&0xFF);\n\t\t\tuntyped $sset(helper,3,i>>>24);\n\t\t\treturn _float_of_bytes(helper,false);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_le_int32_as_float32(i);\n\t\t#elseif cs\n\t\t\tvar helper = new SingleHelper(0);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\thelper.i = i;\n\t\t\t} else {\n\t\t\t\thelper.i = ((i >>> 24) & 0xFF) | (((i >> 16) & 0xFF) << 8) | (((i >> 8) & 0xFF) << 16) | ((i & 0xFF) << 24);\n\t\t\t}\n\n\t\t\treturn helper.f;\n\t\t#elseif java\n\t\t\treturn java.lang.Float.FloatClass.intBitsToFloat(i);\n\t\t#elseif php\n\t\t\treturn untyped  __call__('unpack', 'f', __call__('pack', 'l', i))[1];\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeUnsignedInt(i);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readFloat();\n\t\t#else\n\t\t\tvar sign = 1 - ((i >>> 31) << 1);\n\t\t\tvar exp = (i >>> 23) & 0xFF;\n\t\t\tvar sig = i & 0x7FFFFF;\n\t\t\tif( sig == 0 && exp == 0 )\n\t\t\t\treturn 0.0;\n\t\t\treturn sign*(1 + Math.pow(2, -23)*sig) * Math.pow(2, exp-127);\n\t\t#end\n\t}\n\n\t#if neko_v21 inline #end\n\tpublic static function floatToI32( f : Float ) : Int {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $ftoi(f,false);\n\t\t\t#else\n\t\t\tvar r = _float_bytes(f,false);\n\t\t\treturn untyped $sget(r,0) | ($sget(r,1)<<8) | ($sget(r,2)<<16) | ($sget(r,3)<<24);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_float32_as_le_int32(f);\n\t\t#elseif cs\n\t\t\tvar helper = new SingleHelper(f);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\treturn helper.i;\n\t\t\t} else {\n\t\t\t\tvar i = helper.i;\n\t\t\t\treturn ((i >>> 24) & 0xFF) | (((i >> 16) & 0xFF) << 8) | (((i >> 8) & 0xFF) << 16) | ((i & 0xFF) << 24);\n\t\t\t}\n\t\t#elseif java\n\t\t\treturn java.lang.Float.FloatClass.floatToRawIntBits(f);\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeFloat(f);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readUnsignedInt();\n\t\t#elseif php\n\t\t\treturn untyped __call__('unpack','l',__call__('pack', 'f', f))[1];\n\t\t#else\n\t\t\tif( f == 0 ) return 0;\n\t\t\tvar af = f < 0 ? -f : f;\n\t\t\tvar exp = Math.floor(Math.log(af) / LN2);\n\t\t\tif( exp < -127 ) exp = -127 else if( exp > 128 ) exp = 128;\n\t\t\tvar sig = Math.round((af / Math.pow(2, exp) - 1) * 0x800000);\n\t\t\tif( sig == 0x800000 && exp < 128 ){\n\t\t\t\tsig = 0;\n\t\t\t\texp++;\n\t\t\t}\n\t\t\treturn (f < 0 ? 0x80000000 : 0) | ((exp + 127) << 23) | sig;\n\t\t#end\n\t}\n\n\t#if neko_v21 inline #end\n\tpublic static function i64ToDouble( low : Int, high : Int ) : Float {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\treturn untyped $itod(low,high,false);\n\t\t\t#else\n\t\t\tvar helper = helperd.value;\n\t\t\tif( helper == null )\n\t\t\t\thelperd.value = helper = neko.NativeString.alloc(8);\n\t\t\tuntyped $sset(helper,0,low&0xFF);\n\t\t\tuntyped $sset(helper,1,(low>>8)&0xFF);\n\t\t\tuntyped $sset(helper,2,(low>>16)&0xFF);\n\t\t\tuntyped $sset(helper,3,low>>>24);\n\t\t\tuntyped $sset(helper,4,high&0xFF);\n\t\t\tuntyped $sset(helper,5,(high>>8)&0xFF);\n\t\t\tuntyped $sset(helper,6,(high>>16)&0xFF);\n\t\t\tuntyped $sset(helper,7,high>>>24);\n\t\t\treturn _double_of_bytes(helper,false);\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__hxcpp_reinterpret_le_int32s_as_float64(low,high);\n\t\t#elseif cs\n\t\t\tvar helper = new FloatHelper(0);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\thelper.i = haxe.Int64.make(high,low);\n\t\t\t} else {\n\t\t\t\tvar i1 = high,\n\t\t\t\t    i2 = low;\n\t\t\t\tvar j2 = ((i1 >>> 24) & 0xFF) | (((i1 >> 16) & 0xFF) << 8) | (((i1 >> 8) & 0xFF) << 16) | ((i1 & 0xFF) << 24);\n\t\t\t\tvar j1 = ((i2 >>> 24) & 0xFF) | (((i2 >> 16) & 0xFF) << 8) | (((i2 >> 8) & 0xFF) << 16) | ((i2 & 0xFF) << 24);\n\t\t\t\thelper.i = haxe.Int64.make(j1,j2);\n\t\t\t}\n\t\t\treturn helper.f;\n\t\t#elseif java\n\t\t\treturn java.lang.Double.DoubleClass.longBitsToDouble( Int64.make(high,low) );\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeUnsignedInt(low);\n\t\t\thelper.writeUnsignedInt(high);\n\t\t\thelper.position = 0;\n\t\t\treturn helper.readDouble();\n\t\t#elseif php\n\t\t\treturn untyped  __call__('unpack', 'd', __call__('pack', 'ii', isLittleEndian ? low : high, isLittleEndian ? high : low))[1];\n\t\t#else\n\t\t\t#if python\n\t\t\tif (low == 0 && high == 2146435072) {\n\t\t\t\treturn Math.POSITIVE_INFINITY;\n\t\t\t} else if (low == 0 && high == -1048576 ) {\n\t\t\t\treturn Math.NEGATIVE_INFINITY;\n\t\t\t}\n\t\t\t#end\n\t\t\tvar sign = 1 - ((high >>> 31) << 1);\n\t\t\tvar exp = ((high >> 20) & 0x7FF) - 1023;\n\t\t\tvar sig = (high&0xFFFFF) * 4294967296. + (low>>>31) * 2147483648. + (low&0x7FFFFFFF);\n\t\t\tif( sig == 0 && exp == -1023 )\n\t\t\t\treturn 0.0;\n\t\t\treturn sign*(1.0 + Math.pow(2, -52)*sig) * Math.pow(2, exp);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns an Int64 representing the bytes representation of the double precision IEEE float value.\n\t\tWARNING : for performance reason, the same Int64 value might be reused every time. Copy its low/high values before calling again.\n\t\tWe still ensure that this is safe to use in a multithread environment\n\t**/\n\tpublic static function doubleToI64( v : Float ) : Int64 {\n\t\t#if neko\n\t\t\t#if neko_v21\n\t\t\tvar helper = helpers.value;\n\t\t\tif( helper == null ) {\n\t\t\t\thelpers.value = helper = neko.NativeArray.alloc(2);\n\t\t\t\thelper[0] = neko.NativeArray.alloc(2);\n\t\t\t\thelper[1] = haxe.Int64.ofInt(0);\n\t\t\t}\n\t\t\tvar i64 : haxe.Int64 = helper[1], int2 = helper[0];\n\t\t\tuntyped $dtoi(v,int2,false);\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(int2[0]);\n\t\t\t\ti64.set_high(int2[1]);\n\t\t\t}\n\t\t\treturn i64;\n\t\t\t#else\n\t\t\tvar r = _double_bytes(v,false), i64 = i64tmp.value;\n\t\t\tif( i64 == null )\n\t\t\t\ti64 = i64tmp.value = haxe.Int64.ofInt(0);\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(untyped $sget(r,0) | ($sget(r,1)<<8) | ($sget(r,2)<<16) | ($sget(r,3)<<24));\n\t\t\t\ti64.set_high(untyped $sget(r,4) | ($sget(r,5)<<8) | ($sget(r,6)<<16) | ($sget(r,7)<<24));\n\t\t\t}\n\t\t\treturn i64;\n\t\t\t#end\n\t\t#elseif cpp\n\t\t\treturn Int64.make(untyped __global__.__hxcpp_reinterpret_float64_as_le_int32_high(v),\n\t\t\t\t               untyped __global__.__hxcpp_reinterpret_float64_as_le_int32_low(v) );\n\t\t#elseif java\n\t\t\treturn java.lang.Double.DoubleClass.doubleToRawLongBits(v);\n\t\t#elseif cs\n\t\t\tvar helper = new FloatHelper(v);\n\t\t\tif( cs.system.BitConverter.IsLittleEndian )\n\t\t\t{\n\t\t\t\treturn helper.i;\n\t\t\t} else {\n\t\t\t\tvar i = helper.i;\n\t\t\t\tvar i1 = haxe.Int64.getHigh(i),\n\t\t\t\t    i2 = haxe.Int64.getLow(i);\n\t\t\t\tvar j2 = ((i1 >>> 24) & 0xFF) | (((i1 >> 16) & 0xFF) << 8) | (((i1 >> 8) & 0xFF) << 16) | ((i1 & 0xFF) << 24);\n\t\t\t\tvar j1 = ((i2 >>> 24) & 0xFF) | (((i2 >> 16) & 0xFF) << 8) | (((i2 >> 8) & 0xFF) << 16) | ((i2 & 0xFF) << 24);\n\n\t\t\t\treturn haxe.Int64.make(j1,j2);\n\t\t\t}\n\t\t#elseif flash\n\t\t\tvar helper = helper;\n\t\t\thelper.position = 0;\n\t\t\thelper.writeDouble(v);\n\t\t\thelper.position = 0;\n\t\t\tvar i64 = i64tmp;\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(cast helper.readUnsignedInt());\n\t\t\t\ti64.set_high(cast helper.readUnsignedInt());\n\t\t\t}\n\t\t\treturn i64;\n\t\t#elseif php\n\t\t\tvar a = untyped __call__('unpack',isLittleEndian ? 'V2' : 'N2',__call__('pack', 'd', v));\n\t\t\tvar i64 = i64tmp;\n\t\t\t@:privateAccess {\n\t\t\t\ti64.set_low(a[isLittleEndian ? 1 : 2]);\n\t\t\t\ti64.set_high(a[isLittleEndian ? 2 : 1]);\n\t\t\t}\n\t\t\treturn i64;\n\t\t#else\n\t\t\tvar i64 = i64tmp;\n\t\t\tif( v == 0 ) {\n\t\t\t\t@:privateAccess {\n\t\t\t\t\ti64.set_low(0);\n\t\t\t\t\ti64.set_high(0);\n\t\t\t\t}\n\t\t\t} else if (!Math.isFinite(v)) @:privateAccess {\n\t\t\t\tif (v > 0) {\n\t\t\t\t\ti64.set_low(0);\n\t\t\t\t\ti64.set_high(2146435072);\n\t\t\t\t} else {\n\t\t\t\t\ti64.set_low(0);\n\t\t\t\t\ti64.set_high(-1048576);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar av = v < 0 ? -v : v;\n\t\t\t\tvar exp = Math.floor(Math.log(av) / LN2);\n\t\t\t\tvar sig = Math.fround(((av / Math.pow(2, exp)) - 1) * 4503599627370496.); // 2^52\n\t\t\t\tvar sig_l = Std.int(sig);\n\t\t\t\tvar sig_h = Std.int(sig / 4294967296.0);\n\t\t\t\t@:privateAccess {\n\t\t\t\t\ti64.set_low(sig_l);\n\t\t\t\t\ti64.set_high((v < 0 ? 0x80000000 : 0) | ((exp + 1023) << 20) | sig_h);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn i64;\n\t\t#end\n\t}\n\n}\n\n#if cs\n@:meta(System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Explicit))\n@:nativeGen @:struct private class SingleHelper\n{\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var i:Int;\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var f:Single;\n\n\tpublic function new(f:Single)\n\t{\n\t\tthis.i = 0;\n\t\tthis.f = f;\n\t}\n}\n\n@:meta(System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Explicit))\n@:nativeGen @:struct private class FloatHelper\n{\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var i:haxe.Int64;\n\t@:meta(System.Runtime.InteropServices.FieldOffset(0))\n\tpublic var f:Float;\n\n\tpublic function new(f:Float)\n\t{\n\t\tthis.i = haxe.Int64.ofInt(0);\n\t\tthis.f = f;\n\t}\n}\n\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tThis class provides a convenient way of working with paths. It supports the\n\tcommon path formats:\n\n\t- directory1/directory2/filename.extension\n\t- directory1\\directory2\\filename.extension\n**/\nclass Path {\n\n\t/**\n\t\tThe directory.\n\n\t\tThis is the leading part of the path that is not part of the file name\n\t\tand the extension.\n\n\t\tDoes not end with a `/` or `\\` separator.\n\n\t\tIf the path has no directory, the value is null.\n\t**/\n\tpublic var dir : String;\n\n\t/**\n\t\tThe file name.\n\n\t\tThis is the part of the part between the directory and the extension.\n\n\t\tIf there is no file name, e.g. for \".htaccess\" or \"/dir/\", the value\n\t\tis the empty String \"\".\n\t**/\n\tpublic var file : String;\n\n\t/**\n\t\tThe file extension.\n\n\t\tIt is separated from the file name by a dot. This dot is not part of\n\t\tthe extension.\n\n\t\tIf the path has no extension, the value is null.\n\t**/\n\tpublic var ext : String;\n\n\t/**\n\t\tTrue if the last directory separator is a backslash, false otherwise.\n\t**/\n\tpublic var backslash : Bool;\n\n\t/**\n\t\tCreates a new Path instance by parsing `path`.\n\n\t\tPath information can be retrieved by accessing the dir, file and ext\n\t\tproperties.\n\t**/\n\tpublic function new( path : String ) {\n\t\tswitch (path) {\n\t\t\tcase \".\" | \"..\":\n\t\t\t\tdir = path;\n\t\t\t\tfile = \"\";\n\t\t\t\treturn;\n\t\t}\n\t\tvar c1 = path.lastIndexOf(\"/\");\n\t\tvar c2 = path.lastIndexOf(\"\\\\\");\n\t\tif( c1 < c2 ) {\n\t\t\tdir = path.substr(0,c2);\n\t\t\tpath = path.substr(c2+1);\n\t\t\tbackslash = true;\n\t\t} else if( c2 < c1 ) {\n\t\t\tdir = path.substr(0,c1);\n\t\t\tpath = path.substr(c1+1);\n\t\t} else\n\t\t\tdir = null;\n\t\tvar cp = path.lastIndexOf(\".\");\n\t\tif( cp != -1 ) {\n\t\t\text = path.substr(cp+1);\n\t\t\tfile = path.substr(0,cp);\n\t\t} else {\n\t\t\text = null;\n\t\t\tfile = path;\n\t\t}\n\t}\n\n\t/**\n\t\tReturns a String representation of `this` path.\n\n\t\tIf `this.backslash` is true, backslash is used as directory separator,\n\t\totherwise slash is used. This only affects the separator between\n\t\t`this.dir` and `this.file`.\n\n\t\tIf `this.directory` or `this.extension` is null, their representation\n\t\tis the empty String \"\".\n\t**/\n\tpublic function toString() : String {\n\t\treturn (if( dir == null ) \"\" else dir + if( backslash ) \"\\\\\" else \"/\") + file + (if( ext == null ) \"\" else \".\" + ext);\n\t}\n\n\t/**\n\t\tReturns the String representation of `path` without the file extension.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function withoutExtension( path : String ) : String {\n\t\tvar s = new Path(path);\n\t\ts.ext = null;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns the String representation of `path` without the directory.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function withoutDirectory( path ) : String {\n\t\tvar s = new Path(path);\n\t\ts.dir = null;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns the directory of `path`.\n\n\t\tIf the directory is null, the empty String `\"\"` is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function directory( path ) : String {\n\t\tvar s = new Path(path);\n\t\tif( s.dir == null )\n\t\t\treturn \"\";\n\t\treturn s.dir;\n\t}\n\n\t/**\n\t\tReturns the extension of `path`.\n\n\t\tIf the extension is null, the empty String `\"\"` is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function extension( path ) : String {\n\t\tvar s = new Path(path);\n\t\tif( s.ext == null )\n\t\t\treturn \"\";\n\t\treturn s.ext;\n\t}\n\n\t/**\n\t\tReturns a String representation of `path` where the extension is `ext`.\n\n\t\tIf `path` has no extension, `ext` is added as extension.\n\n\t\tIf `path` or `ext` are null, the result is unspecified.\n\t**/\n\tpublic static function withExtension( path, ext ) : String {\n\t\tvar s = new Path(path);\n\t\ts.ext = ext;\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tJoins all paths in `paths` together.\n\n\t\tIf `paths` is empty, the empty String `\"\"` is returned. Otherwise the\n\t\tpaths are joined with a slash between them.\n\n\t\tIf `paths` is null, the result is unspecified.\n\t**/\n\tpublic static function join(paths:Array<String>) : String {\n\t\tvar paths = paths.filter(function(s) return s != null && s != \"\");\n\t\tif (paths.length == 0) {\n\t\t\treturn \"\";\n\t\t}\n\t\tvar path = paths[0];\n\t\tfor (i in 1...paths.length) {\n\t\t\tpath = addTrailingSlash(path);\n\t\t\tpath += paths[i];\n\t\t}\n\t\treturn normalize(path);\n\t}\n\n\t/**\n\t\tNormalize a given `path` (e.g. make '/usr/local/../lib' to '/usr/lib').\n\n\t\tAlso replaces backslashes \\ with slashes / and afterwards turns\n\t\tmultiple slashes into a single one.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function normalize(path : String) : String {\n\t\tvar slash = \"/\";\n\t\tpath = path.split(\"\\\\\").join(slash);\n\t\tif (path == slash) return slash;\n\n\t\tvar target = [];\n\n\t\tfor( token in path.split(slash) ) {\n\t\t\tif(token == '..' && target.length > 0 && target[target.length-1] != \"..\") {\n\t\t\t\ttarget.pop();\n\t\t\t} else if(token != '.') {\n\t\t\t\ttarget.push(token);\n\t\t\t}\n\t\t}\n\n\t\tvar tmp = target.join(slash);\n\t\tvar regex = ~/([^:])\\/+/g;\n\t\tvar result = regex.replace(tmp, \"$1\" +slash);\n\t\tvar acc = new StringBuf();\n\t\tvar colon = false;\n\t\tvar slashes = false;\n\t\tfor (i in 0...tmp.length) {\n\t\t\tswitch (StringTools.fastCodeAt(tmp, i)) {\n\t\t\t\tcase \":\".code:\n\t\t\t\t\tacc.add(\":\");\n\t\t\t\t\tcolon = true;\n\t\t\t\tcase \"/\".code if (!colon):\n\t\t\t\t\tslashes = true;\n\t\t\t\tcase i:\n\t\t\t\t\tcolon = false;\n\t\t\t\t\tif (slashes) {\n\t\t\t\t\t\tacc.add(\"/\");\n\t\t\t\t\t\tslashes = false;\n\t\t\t\t\t}\n\t\t\t\t\tacc.addChar(i);\n\t\t\t}\n\t\t}\n\t\treturn acc.toString();\n\t}\n\n\t/**\n\t\tAdds a trailing slash to `path`, if it does not have one already.\n\n\t\tIf the last slash in `path` is a backslash, a backslash is appended to\n\t\t`path`.\n\n\t\tIf the last slash in `path` is a slash, or if no slash is found, a slash\n\t\tis appended to `path`. In particular, this applies to the empty String\n\t\t`\"\"`.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\tpublic static function addTrailingSlash( path : String ) : String {\n\t\tif (path.length == 0)\n\t\t\treturn \"/\";\n\t\tvar c1 = path.lastIndexOf(\"/\");\n\t\tvar c2 = path.lastIndexOf(\"\\\\\");\n\t\treturn if ( c1 < c2 ) {\n\t\t\tif (c2 != path.length - 1) path + \"\\\\\";\n\t\t\telse path;\n\t\t} else {\n\t\t\tif (c1 != path.length - 1) path + \"/\";\n\t\t\telse path;\n\t\t}\n\t}\n\n\t/**\n\t\tRemoves trailing slashes from `path`.\n\n\t\tIf `path` does not end with a `/` or `\\`, `path` is returned unchanged.\n\n\t\tOtherwise the substring of `path` excluding the trailing slashes or\n\t\tbackslashes is returned.\n\n\t\tIf `path` is null, the result is unspecified.\n\t**/\n\t@:require(haxe_ver >= 3.1)\n\tpublic static function removeTrailingSlashes ( path : String ) : String {\n\t\twhile (true) {\n\t\t\tswitch(path.charCodeAt(path.length - 1)) {\n\t\t\t\tcase '/'.code | '\\\\'.code: path = path.substr(0, -1);\n\t\t\t\tcase _: break;\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t\tReturns true if the path is an absolute path, and false otherwise.\n\t**/\n\t@:require(haxe_ver >= 3.2)\n\tpublic static function isAbsolute ( path : String ) : Bool {\n\t\tif (StringTools.startsWith(path, '/')) return true;\n\t\tif (path.charAt(1) == ':') return true;\n\t\tif (StringTools.startsWith(path, '\\\\\\\\')) return true;\n\t\treturn false;\n\t}\n\n\tprivate static function unescape( path : String ) : String {\n\t\tvar regex = ~/-x([0-9][0-9])/g;\n\t\treturn regex.map(path, function(regex) return String.fromCharCode(Std.parseInt(regex.matched(1))));\n\t}\n\n\tprivate static function escape( path : String, allowSlashes : Bool = false ) : String {\n\t\tvar regex = allowSlashes ? ~/[^A-Za-z0-9_\\/\\\\\\.]/g : ~/[^A-Za-z0-9_\\.]/g;\n\t\treturn regex.map(path, function(v) return '-x' + v.matched(0).charCodeAt(0));\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nprivate class HaxeError extends js.Error {\n\n\tvar val:Dynamic;\n\n\tpublic function new(val:Dynamic) untyped {\n\t\tsuper();\n\t\tthis.val = __define_feature__(\"js.Boot.HaxeError\", val);\n\t\tthis.message = String(val);\n\t\tif (js.Error.captureStackTrace) js.Error.captureStackTrace(this, HaxeError);\n\t}\n\n\tpublic static function wrap(val:Dynamic):Dynamic untyped {\n\t\treturn if (__instanceof__(val, js.Error)) val else new HaxeError(val);\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = js.Lib.typeof(o);\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\t#if js_enums_as_objects\n\t\t\t\tif (o.__enum__) {\n\t\t\t\t\tvar e = $hxEnums[o.__enum__];\n\t\t\t\t\tvar n = e.__constructs__[o._hx_index];\n\t\t\t\t\tvar con = e[n];\n\t\t\t\t\tif (con.__params__) {\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\treturn n + \"(\" +\n\t\t\t\t\t\t\t[for (p in (con.__params__:Array<String>)) __string_rec(o[p],s)].join(\",\") + \")\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn n;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\t#if !js_enums_as_objects\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\t#end\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && js.Lib.typeof(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn js.Lib.typeof(o) == \"number\" && untyped __js__(\"(o|0) === o\");\n\t\tcase Float:\n\t\t\treturn js.Lib.typeof(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn js.Lib.typeof(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn js.Lib.typeof(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( js.Lib.typeof(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( js.Lib.typeof(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\t#if !js_enums_as_objects\n\t\t\treturn untyped o.__enum__ == cl;\n\t\t\t#else\n\t\t\treturn (untyped $hxEnums[o.__enum__]) == cl;\n\t\t\t#end\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped ({}).toString;\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) {\n\t\treturn untyped js.Lib.global[name];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\t/** The global window object. */\n\tpublic static var window(get, never):js.html.Window;\n\tinline static function get_window() return untyped __js__(\"window\");\n\n\t/** Shortcut to Window.document. */\n\tpublic static var document(get, never):js.html.HTMLDocument;\n\tinline static function get_document() return untyped __js__(\"window.document\");\n\n\t/** Shortcut to Window.location. */\n\tpublic static var location(get, never):js.html.Location;\n\tinline static function get_location() return untyped __js__(\"window.location\");\n\n\t/** Shortcut to Window.navigator. */\n\tpublic static var navigator(get, never):js.html.Navigator;\n\tinline static function get_navigator() return untyped __js__(\"window.navigator\");\n\n\t/** Shortcut to Window.console. */\n\tpublic static var console(get, never):js.html.Console;\n\tinline static function get_console() return untyped __js__(\"window.console\");\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\tinline static function get_supported() return untyped __typeof__(window) != \"undefined\";\n\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\tif (s.length == 0) {\n\t\t\t\tvar key = \"_hx_\" + Math.random();\n\t\t\t\ts.setItem(key,key);\n\t\t\t\ts.removeItem(key);\n\t\t\t}\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\tif (s.length == 0) {\n\t\t\t\tvar key = \"_hx_\" + Math.random();\n\t\t\t\ts.setItem(key,key);\n\t\t\t\ts.removeItem(key);\n\t\t\t}\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest() : XMLHttpRequest\n\t{\n\t\tif( untyped __js__(\"typeof XMLHttpRequest\") != \"undefined\" ) {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif( untyped __js__(\"typeof ActiveXObject\") != \"undefined\" ) {\n\t\t\treturn untyped __new__(\"ActiveXObject\",\"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n\t/**\n\t\tDisplay an alert message box containing the given message. See also `Window.alert()`.\n\t**/\n\tpublic static function alert( v : Dynamic ) {\n\t\t@:privateAccess window.alert(Boot.__string_rec(v,\"\"));\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\HTMLCanvasElement.webidl. Do not edit!\n\npackage js.html;\n\n/**\n\tThe `HTMLCanvasElement` interface provides properties and methods for manipulating the layout and presentation of canvas elements. The `HTMLCanvasElement` interface also inherits the properties and methods of the `HTMLElement` interface.\n\n\tDocumentation [HTMLCanvasElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement>\n**/\n@:native(\"HTMLCanvasElement\")\nextern class CanvasElement extends Element\n{\n\t\n\t/**\n\t\tIs a positive `integer` reflecting the `width` HTML attribute of the `canvas` element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of `300` is used.\n\t**/\n\tvar width : Int;\n\t\n\t/**\n\t\tIs a positive `integer` reflecting the `height` HTML attribute of the `canvas` element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of `150` is used.\n\t**/\n\tvar height : Int;\n\t\n\t/** @throws DOMError */\n\t\n\t/**\n\t\tReturns a drawing context on the canvas, or null if the context ID is not supported. A drawing context lets you draw on the canvas. Calling getContext with `\"2d\"` returns a `CanvasRenderingContext2D` object, whereas calling it with `\"experimental-webgl\"` (or `\"webgl\"`) returns a `WebGLRenderingContext` object. This context is only available on browsers that implement WebGL.\n\t**/\n\tfunction getContext( contextId : String, ?contextOptions : Dynamic ) : Dynamic/*MISSING nsISupports*/;\n\t/** @throws DOMError */\n\t\n\t/**\n\t\tReturns a data-URL containing a representation of the image in the format specified by the `type` parameter (defaults to `png`). The returned image is in a resolution of 96dpi.\n\t**/\n\tfunction toDataURL( ?type : String = \"\", ?encoderOptions : Dynamic ) : String;\n\t/** @throws DOMError */\n\t\n\t/**\n\t\tCreates a `Blob` object representing the image contained in the canvas; this file may be cached on the disk or stored in memory at the discretion of the user agent.\n\t**/\n\tfunction toBlob( callback : Blob -> Void, ?type : String = \"\", ?encoderOptions : Dynamic ) : Void;\n\t\n\t/** Shorthand for getting a CanvasRenderingContext2D. */\n\tinline function getContext2d( ?attribs : {} ) : CanvasRenderingContext2D {\n\t\treturn cast getContext(\"2d\", attribs);\n\t}\n\t/** Shorthand for getting a js.html.webgl.RenderingContext. */\n\tinline function getContextWebGL( ?attribs : js.html.webgl.ContextAttributes ) : js.html.webgl.RenderingContext {\n\t\treturn CanvasUtil.getContextWebGL(this, attribs);\n\t}\n}\n\nprivate class CanvasUtil {\n\tpublic static function getContextWebGL( canvas :CanvasElement, attribs :{} ) {\n\t\tfor (name in [\"webgl\", \"experimental-webgl\"]) {\n\t\t\tvar ctx = canvas.getContext(name, attribs);\n\t\t\tif (ctx != null) return ctx;\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\n@:ifFeature(\"js.html.ArrayBuffer.*\")\nclass ArrayBuffer {\n\n\tpublic var byteLength : Int;\n\tvar a : Array<Int>;\n\n\tpublic function new( ?a : Dynamic ) {\n\t\tif( Std.is(a,Array) ) {\n\t\t\tthis.a = a;\n\t\t\tbyteLength = a.length;\n\t\t} else {\n\t\t\tvar len : Int = a;\n\t\t\tthis.a = [];\n\t\t\tfor( i in 0...len )\n\t\t\t\tthis.a[i] = 0;\n\t\t\tbyteLength = len;\n\t\t}\n\t}\n\n\tpublic function slice(begin,?end) {\n\t\treturn new ArrayBuffer(a.slice(begin,end));\n\t}\n\n\tstatic function sliceImpl(begin,?end) {\n\t\tvar u = new js.html.Uint8Array(js.Lib.nativeThis, begin, end == null ? null : end - begin);\n\t\tvar result = new js.html.ArrayBuffer(u.byteLength);\n\t\tvar resultArray = new js.html.Uint8Array(result);\n\t\tresultArray.set(u);\n\t\treturn result;\n\t}\n\n\tstatic function __init__() untyped {\n\t\t__js__(\"var ArrayBuffer = {0} || {1}\", js.Lib.global.ArrayBuffer, js.html.compat.ArrayBuffer);\n\t\tif( __js__(\"ArrayBuffer\").prototype.slice == null ) __js__(\"ArrayBuffer\").prototype.slice = sliceImpl; // IE10\n\t}\n}\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\nimport haxe.io.Error;\n\n@:ifFeature(\"js.html.DataView.*\")\n@:access(js.html.compat.ArrayBuffer)\nclass DataView {\n\n\tvar buf : ArrayBuffer;\n\tvar offset : Int;\n\tvar length : Int;\n\n\tpublic var byteLength(default,null):Int;\n\tpublic var byteOffset(default,null):Int;\n\tpublic var buffer(default,null):ArrayBuffer;\n\n\tpublic function new( buffer : ArrayBuffer, ?byteOffset : Int, ?byteLength : Int ) : Void {\n\t\tthis.buf = buffer;\n\t\tthis.offset = byteOffset == null ? 0 : byteOffset;\n\t\tthis.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;\n\t\tif( offset < 0 || length < 0 || offset+length > buffer.byteLength )\n\t\t\tthrow OutsideBounds;\n\t\tthis.byteLength = length;\n\t\tthis.byteOffset = offset;\n\t\tthis.buffer = buf;\n\t}\n\n\tpublic function getInt8( byteOffset : Int ) : Int {\n\t\tvar v = buf.a[offset + byteOffset];\n\t\treturn v >= 0x80 ? v - 256 : v;\n\t}\n\n\tpublic function getUint8( byteOffset : Int ) : Int {\n\t\treturn buf.a[offset + byteOffset];\n\t}\n\n\tpublic function getInt16( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar v = getUint16(byteOffset, littleEndian);\n\t\treturn v >= 0x8000 ? v - 65536 : v;\n\t}\n\n\tpublic function getUint16( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\treturn littleEndian ? buf.a[offset + byteOffset] | (buf.a[offset + byteOffset + 1] << 8) : (buf.a[offset + byteOffset]<<8) | buf.a[offset + byteOffset + 1];\n\t}\n\n\tpublic function getInt32( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar p = offset + byteOffset;\n\t\tvar a = buf.a[p++];\n\t\tvar b = buf.a[p++];\n\t\tvar c = buf.a[p++];\n\t\tvar d = buf.a[p++];\n\t\treturn littleEndian ? a | (b<<8) | (c<<16) | (d<<24) : d | (c << 8) | (b << 16) | (a << 24);\n\t}\n\n\tpublic function getUint32( byteOffset : Int, ?littleEndian : Bool ) : Int {\n\t\tvar v = getInt32(byteOffset, littleEndian);\n\t\treturn v < 0 ? cast (v + 4294967296.) : v;\n\t}\n\n\tpublic function getFloat32( byteOffset : Int, ?littleEndian : Bool ) : Float {\n\t\treturn haxe.io.FPHelper.i32ToFloat(getInt32(byteOffset,littleEndian));\n\t}\n\n\tpublic function getFloat64( byteOffset : Int, ?littleEndian : Bool ) : Float {\n\t\tvar a = getInt32(byteOffset, littleEndian);\n\t\tvar b = getInt32(byteOffset + 4, littleEndian);\n\t\treturn haxe.io.FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);\n\t}\n\n\tpublic function setInt8( byteOffset : Int, value : Int ) : Void {\n\t\tbuf.a[byteOffset + offset] = (value < 0) ? (value + 128) & 0xFF : value & 0xFF;\n\t}\n\n\tpublic function setUint8( byteOffset : Int, value : Int ) : Void {\n\t\tbuf.a[byteOffset + offset] = value & 0xFF;\n\t}\n\n\tpublic function setInt16( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tsetUint16(byteOffset, value < 0 ? value + 65536 : value, littleEndian);\n\t}\n\n\tpublic function setUint16( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tvar p = byteOffset + offset;\n\t\tif( littleEndian ) {\n\t\t\tbuf.a[p] = value&0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t} else {\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p] = value&0xFF;\n\t\t}\n\t}\n\n\tpublic function setInt32( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tsetUint32(byteOffset, value, littleEndian);\n\t}\n\n\tpublic function setUint32( byteOffset : Int, value : Int, ?littleEndian : Bool ) : Void {\n\t\tvar p = byteOffset + offset;\n\t\tif( littleEndian ) {\n\t\t\tbuf.a[p++] = value & 0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p++] = (value>>16) & 0xFF;\n\t\t\tbuf.a[p++] = value >>> 24;\n\t\t} else {\n\t\t\tbuf.a[p++] = value >>> 24;\n\t\t\tbuf.a[p++] = (value>>16) & 0xFF;\n\t\t\tbuf.a[p++] = (value>>8) & 0xFF;\n\t\t\tbuf.a[p++] = value & 0xFF;\n\t\t}\n\t}\n\n\tpublic function setFloat32( byteOffset : Int, value : Float, ?littleEndian : Bool ) : Void {\n\t\tsetUint32(byteOffset, haxe.io.FPHelper.floatToI32(value),littleEndian);\n\t}\n\n\tpublic function setFloat64( byteOffset : Int, value : Float, ?littleEndian : Bool ) : Void {\n\t\tvar i64 = haxe.io.FPHelper.doubleToI64(value);\n\t\tif( littleEndian ) {\n\t\t\tsetUint32(byteOffset, i64.low);\n\t\t\tsetUint32(byteOffset, i64.high);\n\t\t} else {\n\t\t\tsetUint32(byteOffset, i64.high);\n\t\t\tsetUint32(byteOffset, i64.low);\n\t\t}\n\t}\n\n\tstatic function __init__() {\n\t\tuntyped __js__(\"var DataView = {0} || {1}\", js.Lib.global.DataView, js.html.compat.DataView);\n\t}\n\n}\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\nimport js.Lib.nativeThis;\n\n@:ifFeature(\"js.html.Float32Array.*\")\nclass Float32Array {\n\n\tstatic var BYTES_PER_ELEMENT = 4;\n\n\tstatic function _new( ?arg1 : Dynamic, ?offset : Int, ?length : Int ) : Dynamic {\n\t\tvar arr : Array<Float>;\n\t\tif( untyped __typeof__(arg1) == 'number' ) {\n\t\t\tarr = new Array();\n\t\t\tfor( i in 0...arg1 )\n\t\t\t\tarr[i] = 0;\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length << 2;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer([for( i in 0...arr.length << 2 ) 0]); // no sync\n\t\t\t}\n\t\t} else if( Std.is(arg1,ArrayBuffer) ) {\n\t\t\tvar buffer : ArrayBuffer = arg1;\n\t\t\tif( offset == null ) offset = 0;\n\t\t\tif( length == null ) length = (buffer.byteLength - offset) >> 2;\n\t\t\tarr = [];\n\t\t\t// decode buffer\n\t\t\tfor( i in 0...length ) {\n\t\t\t\tvar val = untyped buffer.a[offset++] | (buffer.a[offset++] << 8) | (buffer.a[offset++] << 16) | (buffer.a[offset++] << 24);\n\t\t\t\tarr.push(haxe.io.FPHelper.i32ToFloat(val));\n\t\t\t}\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length<<2;\n\t\t\t\tarr.byteOffset = offset;\n\t\t\t\tarr.buffer = buffer;\n\t\t\t}\n\t\t} else if( Std.is(arg1, Array) ) {\n\t\t\tarr = (arg1 : Array<Float>).copy();\n\t\t\t// loss of memory sync between buffer and array\n\t\t\tvar buffer = [];\n\t\t\tfor( f in arr ) {\n\t\t\t\tvar i = haxe.io.FPHelper.floatToI32(f);\n\t\t\t\tbuffer.push(i&0xFF);\n\t\t\t\tbuffer.push((i>>8)&0xFF);\n\t\t\t\tbuffer.push((i>>16)&0xFF);\n\t\t\t\tbuffer.push(i>>>24);\n\t\t\t}\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length << 2;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(buffer);\n\t\t\t}\n\t\t} else\n\t\t\tthrow \"TODO \"+arg1;\n\t\tuntyped {\n\t\t\tarr.subarray = _subarray;\n\t\t\tarr.set = _set;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tstatic function _set( ?arg : Dynamic, ?offset : Int ) {\n\t\tif( Std.is(arg.buffer,ArrayBuffer) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( arg.byteLength + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...arg.byteLength )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else if( Std.is(arg,Array) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( a.length + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...a.length )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t}\n\n\tstatic function _subarray( start : Int, ?end : Int ) {\n\t\tvar a = _new(nativeThis.slice(start,end));\n\t\ta.byteOffset = start * 4;\n\t\treturn a;\n\t}\n\n\tstatic function __init__() {\n\t\tuntyped __js__(\"var Float32Array = {0} || {1}\", js.Lib.global.Float32Array, _new);\n\t}\n\n}\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\nimport js.Lib.nativeThis;\n\n@:ifFeature(\"js.html.Float64Array.*\")\nclass Float64Array {\n\n\tstatic var BYTES_PER_ELEMENT = 8;\n\n\tstatic function _new( ?arg1 : Dynamic, ?offset : Int, ?length : Int ) : Dynamic {\n\t\tvar arr : Array<Float>;\n\t\tif( untyped __typeof__(arg1) == 'number' ) {\n\t\t\tarr = new Array();\n\t\t\tfor( i in 0...arg1 )\n\t\t\t\tarr[i] = 0;\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length << 3;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer([for( i in 0...arr.length << 3 ) 0]); // no sync\n\t\t\t}\n\t\t} else if( Std.is(arg1,ArrayBuffer) ) {\n\t\t\tvar buffer : ArrayBuffer = arg1;\n\t\t\tif( offset == null ) offset = 0;\n\t\t\tif( length == null ) length = (buffer.byteLength - offset) >> 3;\n\t\t\tarr = [];\n\t\t\t// decode buffer\n\t\t\tfor( i in 0...length ) {\n\t\t\t\tvar val1 = untyped buffer.a[offset++] | (buffer.a[offset++] << 8) | (buffer.a[offset++] << 16) | (buffer.a[offset++] << 24);\n\t\t\t\tvar val2 = untyped buffer.a[offset++] | (buffer.a[offset++] << 8) | (buffer.a[offset++] << 16) | (buffer.a[offset++] << 24);\n\t\t\t\tarr.push(haxe.io.FPHelper.i64ToDouble(val1,val2));\n\t\t\t}\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length<<3;\n\t\t\t\tarr.byteOffset = offset;\n\t\t\t\tarr.buffer = buffer;\n\t\t\t}\n\t\t} else if( Std.is(arg1, Array) ) {\n\t\t\tarr = (arg1 : Array<Float>).copy();\n\t\t\t// loss of memory sync between buffer and array\n\t\t\tvar buffer = [];\n\t\t\tfor( f in arr ) {\n\t\t\t\tvar v = haxe.io.FPHelper.doubleToI64(f);\n\t\t\t\tvar i = v.low;\n\t\t\t\tbuffer.push(i&0xFF);\n\t\t\t\tbuffer.push((i>>8)&0xFF);\n\t\t\t\tbuffer.push((i>>16)&0xFF);\n\t\t\t\tbuffer.push(i>>>24);\n\t\t\t\tvar i = v.high;\n\t\t\t\tbuffer.push(i&0xFF);\n\t\t\t\tbuffer.push((i>>8)&0xFF);\n\t\t\t\tbuffer.push((i>>16)&0xFF);\n\t\t\t\tbuffer.push(i>>>24);\n\t\t\t}\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length << 3;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(buffer);\n\t\t\t}\n\t\t} else\n\t\t\tthrow \"TODO \"+arg1;\n\t\tuntyped {\n\t\t\tarr.subarray = _subarray;\n\t\t\tarr.set = _set;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tstatic function _set( ?arg : Dynamic, ?offset : Int ) {\n\t\tif( Std.is(arg.buffer,ArrayBuffer) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( arg.byteLength + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...arg.byteLength )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else if( Std.is(arg,Array) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( a.length + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...a.length )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t}\n\n\tstatic function _subarray( start : Int, ?end : Int ) {\n\t\tvar a = _new(nativeThis.slice(start,end));\n\t\ta.byteOffset = start * 8;\n\t\treturn a;\n\t}\n\n\tstatic function __init__() {\n\t\tuntyped __js__(\"var Float64Array = {0} || ({1} ? 'notsupported' : null) || {2}\", js.Lib.global.Float64Array, js.Lib.global.Float32Array, _new);\n\t}\n\n}\n#end\n","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n#if !nodejs\nimport js.Lib.nativeThis;\n\n@:ifFeature(\"js.html.Uint8Array.*\")\nclass Uint8Array {\n\n\tstatic var BYTES_PER_ELEMENT = 1;\n\n\tstatic function _new( ?arg1 : Dynamic, ?offset : Int, ?length : Int ) : Dynamic {\n\t\tvar arr;\n\t\tif( untyped __typeof__(arg1) == 'number' ) {\n\t\t\tarr = new Array();\n\t\t\tfor( i in 0...arg1 )\n\t\t\t\tarr[i] = 0;\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else if( Std.is(arg1,ArrayBuffer) ) {\n\t\t\tvar buffer : ArrayBuffer = arg1;\n\t\t\tif( offset == null ) offset = 0;\n\t\t\tif( length == null ) length = buffer.byteLength - offset;\n\t\t\tif( offset == 0 )\n\t\t\t\tarr = cast @:privateAccess buffer.a;\n\t\t\telse\n\t\t\t\t// here we are losing the fact that we should reference the same data,\n\t\t\t\t// but I don't see another way to have this behaviour while keeping [] access\n\t\t\t\tarr = cast @:privateAccess buffer.a.slice(offset, offset+length);\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = offset;\n\t\t\t\tarr.buffer = buffer;\n\t\t\t}\n\t\t} else if( Std.is(arg1, Array) ) {\n\t\t\tarr = (arg1 : Array<Int>).copy();\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else\n\t\t\tthrow \"TODO \"+arg1;\n\t\tuntyped {\n\t\t\tarr.subarray = _subarray;\n\t\t\tarr.set = _set;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tstatic function _set( ?arg : Dynamic, ?offset : Int ) {\n\t\tif( Std.is(arg.buffer,ArrayBuffer) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( arg.byteLength + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...arg.byteLength )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else if( Std.is(arg,Array) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( a.length + offset > nativeThis.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...a.length )\n\t\t\t\tnativeThis[i + offset] = a[i];\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t}\n\n\tstatic function _subarray( start : Int, ?end : Int ) {\n\t\tvar a = _new(nativeThis.slice(start,end));\n\t\ta.byteOffset = start;\n\t\treturn a;\n\t}\n\n\tstatic function __init__() {\n\t\tuntyped __js__(\"var Uint8Array = {0} || {1}\", js.Lib.global.Uint8Array, _new);\n\t}\n\n}\n#end","package lime._backend.html5;\n\n\nimport lime.media.AudioSource;\nimport lime.math.Vector4;\n\n@:access(lime.media.AudioBuffer)\n\n\nclass HTML5AudioSource {\n\t\n\t\n\tprivate var completed:Bool;\n\tprivate var gain:Float;\n\tprivate var id:Int;\n\tprivate var length:Int;\n\tprivate var loops:Int;\n\tprivate var parent:AudioSource;\n\tprivate var playing:Bool;\n\tprivate var position:Vector4;\n\t\n\t\n\tpublic function new (parent:AudioSource) {\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t\tid = -1;\n\t\tgain = 1;\n\t\tposition = new Vector4 ();\n\t\t\n\t}\n\t\n\t\n\tpublic function dispose ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function init ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function play (?spriteKey:String):Void {\n\t\t\n\t\t#if howlerjs\n\t\t\n\t\tif (playing || parent.buffer == null) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tplaying = true;\n\t\t\n\t\tvar time = getCurrentTime ();\n\t\t\n\t\tcompleted = false;\n\t\t\n\t\tvar cacheVolume = untyped parent.buffer.__srcHowl._volume;\n\t\tuntyped parent.buffer.__srcHowl._volume = parent.gain;\n\t\t\n\t\tif (spriteKey != null) {\n\t\t\tid = parent.buffer.__srcHowl.play (spriteKey);\n\t\t} else {\n\t\t\tid = parent.buffer.__srcHowl.play ();\n\n\t\t\t// these values are configured per-sprite in soundsprites.\n\t\t\t// setting them in here breaks HTML5 Howler soundsprites, like those\n\t\t\t// used by IE 11, or other browsers that don't support WebAudio API.\n\t\t\tuntyped parent.buffer.__srcHowl._volume = cacheVolume;\n\t\t\t//setGain (parent.gain);\n\t\t\tsetPosition (parent.position);\n\t\t\tsetCurrentTime (time);\n\t\t}\n\t\t\n\t\tparent.buffer.__srcHowl.on (\"end\", howl_onEnd, id);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pause ():Void {\n\t\t\n\t\t#if howlerjs\n\t\t\n\t\tplaying = false;\n\t\tif (parent.buffer != null) parent.buffer.__srcHowl.pause (id);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function stop ():Void {\n\t\t\n\t\t#if howlerjs\n\t\t\n\t\tplaying = false;\n\t\tif (parent.buffer != null) parent.buffer.__srcHowl.stop (id);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function howl_onEnd () {\n\t\t\n\t\t#if howlerjs\n\t\t\n\t\tplaying = false;\n\t\t\n\t\tif (loops > 0) {\n\t\t\t\n\t\t\tloops--;\n\t\t\tstop ();\n\t\t\t//currentTime = 0;\n\t\t\tplay ();\n\t\t\treturn;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tparent.buffer.__srcHowl.stop (id);\n\t\t\t\n\t\t}\n\t\t\n\t\tcompleted = true;\n\t\tparent.onComplete.dispatch ();\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tpublic function getCurrentTime ():Int {\n\t\t\n\t\tif (id == -1) {\n\t\t\t\n\t\t\treturn 0;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if howlerjs\n\t\t\n\t\tif (completed) {\n\t\t\t\n\t\t\treturn getLength ();\n\t\t\t\n\t\t} else if (parent.buffer != null) {\n\t\t\t\n\t\t\tvar time = Std.int (parent.buffer.__srcHowl.seek (id) * 1000) - parent.offset;\n\t\t\tif (time < 0) return 0;\n\t\t\treturn time;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function setCurrentTime (value:Int):Int {\n\t\t\n\t\t#if howlerjs\n\t\t\n\t\tif (parent.buffer != null) {\n\t\t\t\n\t\t\t//if (playing) buffer.__srcHowl.play (id);\n\t\t\tvar pos = (value + parent.offset) / 1000;\n\t\t\tif (pos < 0) pos = 0;\n\t\t\tparent.buffer.__srcHowl.seek (pos, id);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic function getGain ():Float {\n\t\t\n\t\treturn gain;\n\t\t\n\t}\n\t\n\t\n\tpublic function setGain (value:Float):Float {\n\t\t\n\t\t#if howlerjs\n\t\t\n\t\tif (parent.buffer != null) {\n\t\t\t\n\t\t\tparent.buffer.__srcHowl.volume (value, id);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn gain = value;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLength ():Int {\n\t\t\n\t\tif (length != 0) {\n\t\t\t\n\t\t\treturn length;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if howlerjs\n\t\t\n\t\tif (parent.buffer != null) {\n\t\t\t\n\t\t\treturn Std.int (parent.buffer.__srcHowl.duration () * 1000);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function setLength (value:Int):Int {\n\t\t\n\t\treturn length = value;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLoops ():Int {\n\t\t\n\t\treturn loops;\n\t\t\n\t}\n\t\n\t\n\tpublic function setLoops (value:Int):Int {\n\t\t\n\t\treturn loops = value;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPosition ():Vector4 {\n\t\t\n\t\t#if howlerjs\n\t\t\n\t\t// TODO: Use 3D audio plugin\n\t\t\n\t\t#end\n\t\t\n\t\treturn position;\n\t\t\n\t}\n\t\n\t\n\tpublic function setPosition (value:Vector4):Vector4 {\n\t\t\n\t\tposition.x = value.x;\n\t\tposition.y = value.y;\n\t\tposition.z = value.z;\n\t\tposition.w = value.w;\n\t\t\n\t\t#if howlerjs\n\t\t\n\t\t// TODO: Use 3D audio plugin\n\t\t\n\t\t#end\n\t\t\n\t\treturn position;\n\t\t\n\t}\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport haxe.io.Bytes;\nimport haxe.Int64;\nimport js.html.webgl.RenderingContext in WebGLRenderingContext;\nimport js.html.CanvasElement;\nimport js.Browser;\nimport lime.graphics.opengl.*;\nimport lime.utils.ArrayBuffer;\nimport lime.utils.ArrayBufferView;\nimport lime.utils.BytePointer;\nimport lime.utils.DataPointer;\nimport lime.utils.Float32Array;\nimport lime.utils.Int32Array;\nimport lime.utils.UInt8Array;\nimport lime.utils.UInt32Array;\n\n@:allow(lime.ui.Window)\n\n\nclass HTML5GLRenderContext {\n\t\n\t\n\tpublic var DEPTH_BUFFER_BIT = 0x00000100;\n\tpublic var STENCIL_BUFFER_BIT = 0x00000400;\n\tpublic var COLOR_BUFFER_BIT = 0x00004000;\n\t\n\tpublic var POINTS = 0x0000;\n\tpublic var LINES = 0x0001;\n\tpublic var LINE_LOOP = 0x0002;\n\tpublic var LINE_STRIP = 0x0003;\n\tpublic var TRIANGLES = 0x0004;\n\tpublic var TRIANGLE_STRIP = 0x0005;\n\tpublic var TRIANGLE_FAN = 0x0006;\n\t\n\tpublic var ZERO = 0;\n\tpublic var ONE = 1;\n\tpublic var SRC_COLOR = 0x0300;\n\tpublic var ONE_MINUS_SRC_COLOR = 0x0301;\n\tpublic var SRC_ALPHA = 0x0302;\n\tpublic var ONE_MINUS_SRC_ALPHA = 0x0303;\n\tpublic var DST_ALPHA = 0x0304;\n\tpublic var ONE_MINUS_DST_ALPHA = 0x0305;\n\t\n\tpublic var DST_COLOR = 0x0306;\n\tpublic var ONE_MINUS_DST_COLOR = 0x0307;\n\tpublic var SRC_ALPHA_SATURATE = 0x0308;\n\t\n\tpublic var FUNC_ADD = 0x8006;\n\tpublic var BLEND_EQUATION = 0x8009;\n\tpublic var BLEND_EQUATION_RGB = 0x8009;\n\tpublic var BLEND_EQUATION_ALPHA = 0x883D;\n\t\n\tpublic var FUNC_SUBTRACT = 0x800A;\n\tpublic var FUNC_REVERSE_SUBTRACT = 0x800B;\n\t\n\tpublic var BLEND_DST_RGB = 0x80C8;\n\tpublic var BLEND_SRC_RGB = 0x80C9;\n\tpublic var BLEND_DST_ALPHA = 0x80CA;\n\tpublic var BLEND_SRC_ALPHA = 0x80CB;\n\tpublic var CONSTANT_COLOR = 0x8001;\n\tpublic var ONE_MINUS_CONSTANT_COLOR = 0x8002;\n\tpublic var CONSTANT_ALPHA = 0x8003;\n\tpublic var ONE_MINUS_CONSTANT_ALPHA = 0x8004;\n\tpublic var BLEND_COLOR = 0x8005;\n\t\n\tpublic var ARRAY_BUFFER = 0x8892;\n\tpublic var ELEMENT_ARRAY_BUFFER = 0x8893;\n\tpublic var ARRAY_BUFFER_BINDING = 0x8894;\n\tpublic var ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;\n\t\n\tpublic var STREAM_DRAW = 0x88E0;\n\tpublic var STATIC_DRAW = 0x88E4;\n\tpublic var DYNAMIC_DRAW = 0x88E8;\n\t\n\tpublic var BUFFER_SIZE = 0x8764;\n\tpublic var BUFFER_USAGE = 0x8765;\n\t\n\tpublic var CURRENT_VERTEX_ATTRIB = 0x8626;\n\t\n\tpublic var FRONT = 0x0404;\n\tpublic var BACK = 0x0405;\n\tpublic var FRONT_AND_BACK = 0x0408;\n\t\n\tpublic var CULL_FACE = 0x0B44;\n\tpublic var BLEND = 0x0BE2;\n\tpublic var DITHER = 0x0BD0;\n\tpublic var STENCIL_TEST = 0x0B90;\n\tpublic var DEPTH_TEST = 0x0B71;\n\tpublic var SCISSOR_TEST = 0x0C11;\n\tpublic var POLYGON_OFFSET_FILL = 0x8037;\n\tpublic var SAMPLE_ALPHA_TO_COVERAGE = 0x809E;\n\tpublic var SAMPLE_COVERAGE = 0x80A0;\n\t\n\tpublic var NO_ERROR = 0;\n\tpublic var INVALID_ENUM = 0x0500;\n\tpublic var INVALID_VALUE = 0x0501;\n\tpublic var INVALID_OPERATION = 0x0502;\n\tpublic var OUT_OF_MEMORY = 0x0505;\n\t\n\tpublic var CW  = 0x0900;\n\tpublic var CCW = 0x0901;\n\t\n\tpublic var LINE_WIDTH = 0x0B21;\n\tpublic var ALIASED_POINT_SIZE_RANGE = 0x846D;\n\tpublic var ALIASED_LINE_WIDTH_RANGE = 0x846E;\n\tpublic var CULL_FACE_MODE = 0x0B45;\n\tpublic var FRONT_FACE = 0x0B46;\n\tpublic var DEPTH_RANGE = 0x0B70;\n\tpublic var DEPTH_WRITEMASK = 0x0B72;\n\tpublic var DEPTH_CLEAR_VALUE = 0x0B73;\n\tpublic var DEPTH_FUNC = 0x0B74;\n\tpublic var STENCIL_CLEAR_VALUE = 0x0B91;\n\tpublic var STENCIL_FUNC = 0x0B92;\n\tpublic var STENCIL_FAIL = 0x0B94;\n\tpublic var STENCIL_PASS_DEPTH_FAIL = 0x0B95;\n\tpublic var STENCIL_PASS_DEPTH_PASS = 0x0B96;\n\tpublic var STENCIL_REF = 0x0B97;\n\tpublic var STENCIL_VALUE_MASK = 0x0B93;\n\tpublic var STENCIL_WRITEMASK = 0x0B98;\n\tpublic var STENCIL_BACK_FUNC = 0x8800;\n\tpublic var STENCIL_BACK_FAIL = 0x8801;\n\tpublic var STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;\n\tpublic var STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;\n\tpublic var STENCIL_BACK_REF = 0x8CA3;\n\tpublic var STENCIL_BACK_VALUE_MASK = 0x8CA4;\n\tpublic var STENCIL_BACK_WRITEMASK = 0x8CA5;\n\tpublic var VIEWPORT = 0x0BA2;\n\tpublic var SCISSOR_BOX = 0x0C10;\n\t\n\tpublic var COLOR_CLEAR_VALUE = 0x0C22;\n\tpublic var COLOR_WRITEMASK = 0x0C23;\n\tpublic var UNPACK_ALIGNMENT = 0x0CF5;\n\tpublic var PACK_ALIGNMENT = 0x0D05;\n\tpublic var MAX_TEXTURE_SIZE = 0x0D33;\n\tpublic var MAX_VIEWPORT_DIMS = 0x0D3A;\n\tpublic var SUBPIXEL_BITS = 0x0D50;\n\tpublic var RED_BITS = 0x0D52;\n\tpublic var GREEN_BITS = 0x0D53;\n\tpublic var BLUE_BITS = 0x0D54;\n\tpublic var ALPHA_BITS = 0x0D55;\n\tpublic var DEPTH_BITS = 0x0D56;\n\tpublic var STENCIL_BITS = 0x0D57;\n\tpublic var POLYGON_OFFSET_UNITS = 0x2A00;\n\t\n\tpublic var POLYGON_OFFSET_FACTOR = 0x8038;\n\tpublic var TEXTURE_BINDING_2D = 0x8069;\n\tpublic var SAMPLE_BUFFERS = 0x80A8;\n\tpublic var SAMPLES = 0x80A9;\n\tpublic var SAMPLE_COVERAGE_VALUE = 0x80AA;\n\tpublic var SAMPLE_COVERAGE_INVERT = 0x80AB;\n\t\n\tpublic var COMPRESSED_TEXTURE_FORMATS = 0x86A3;\n\t\n\tpublic var DONT_CARE = 0x1100;\n\tpublic var FASTEST = 0x1101;\n\tpublic var NICEST = 0x1102;\n\t\n\tpublic var GENERATE_MIPMAP_HINT = 0x8192;\n\t\n\tpublic var BYTE = 0x1400;\n\tpublic var UNSIGNED_BYTE = 0x1401;\n\tpublic var SHORT = 0x1402;\n\tpublic var UNSIGNED_SHORT = 0x1403;\n\tpublic var INT = 0x1404;\n\tpublic var UNSIGNED_INT = 0x1405;\n\tpublic var FLOAT = 0x1406;\n\t\n\tpublic var DEPTH_COMPONENT = 0x1902;\n\tpublic var ALPHA = 0x1906;\n\tpublic var RGB = 0x1907;\n\tpublic var RGBA = 0x1908;\n\tpublic var LUMINANCE = 0x1909;\n\tpublic var LUMINANCE_ALPHA = 0x190A;\n\t\n\tpublic var UNSIGNED_SHORT_4_4_4_4 = 0x8033;\n\tpublic var UNSIGNED_SHORT_5_5_5_1 = 0x8034;\n\tpublic var UNSIGNED_SHORT_5_6_5 = 0x8363;\n\t\n\tpublic var FRAGMENT_SHADER = 0x8B30;\n\tpublic var VERTEX_SHADER = 0x8B31;\n\tpublic var MAX_VERTEX_ATTRIBS = 0x8869;\n\tpublic var MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;\n\tpublic var MAX_VARYING_VECTORS = 0x8DFC;\n\tpublic var MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\n\tpublic var MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;\n\tpublic var MAX_TEXTURE_IMAGE_UNITS = 0x8872;\n\tpublic var MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;\n\tpublic var SHADER_TYPE = 0x8B4F;\n\tpublic var DELETE_STATUS = 0x8B80;\n\tpublic var LINK_STATUS = 0x8B82;\n\tpublic var VALIDATE_STATUS = 0x8B83;\n\tpublic var ATTACHED_SHADERS = 0x8B85;\n\tpublic var ACTIVE_UNIFORMS = 0x8B86;\n\tpublic var ACTIVE_ATTRIBUTES = 0x8B89;\n\tpublic var SHADING_LANGUAGE_VERSION = 0x8B8C;\n\tpublic var CURRENT_PROGRAM = 0x8B8D;\n\t\n\tpublic var NEVER = 0x0200;\n\tpublic var LESS = 0x0201;\n\tpublic var EQUAL = 0x0202;\n\tpublic var LEQUAL = 0x0203;\n\tpublic var GREATER = 0x0204;\n\tpublic var NOTEQUAL = 0x0205;\n\tpublic var GEQUAL = 0x0206;\n\tpublic var ALWAYS = 0x0207;\n\t\n\tpublic var KEEP = 0x1E00;\n\tpublic var REPLACE = 0x1E01;\n\tpublic var INCR = 0x1E02;\n\tpublic var DECR = 0x1E03;\n\tpublic var INVERT = 0x150A;\n\tpublic var INCR_WRAP = 0x8507;\n\tpublic var DECR_WRAP = 0x8508;\n\t\n\tpublic var VENDOR = 0x1F00;\n\tpublic var RENDERER = 0x1F01;\n\tpublic var VERSION = 0x1F02;\n\t\n\tpublic var NEAREST = 0x2600;\n\tpublic var LINEAR = 0x2601;\n\t\n\tpublic var NEAREST_MIPMAP_NEAREST = 0x2700;\n\tpublic var LINEAR_MIPMAP_NEAREST = 0x2701;\n\tpublic var NEAREST_MIPMAP_LINEAR = 0x2702;\n\tpublic var LINEAR_MIPMAP_LINEAR = 0x2703;\n\t\n\tpublic var TEXTURE_MAG_FILTER = 0x2800;\n\tpublic var TEXTURE_MIN_FILTER = 0x2801;\n\tpublic var TEXTURE_WRAP_S = 0x2802;\n\tpublic var TEXTURE_WRAP_T = 0x2803;\n\t\n\tpublic var TEXTURE_2D = 0x0DE1;\n\tpublic var TEXTURE = 0x1702;\n\t\n\tpublic var TEXTURE_CUBE_MAP = 0x8513;\n\tpublic var TEXTURE_BINDING_CUBE_MAP = 0x8514;\n\tpublic var TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\n\tpublic var TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\n\tpublic var TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\n\tpublic var TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\n\tpublic var TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\n\tpublic var TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;\n\tpublic var MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;\n\t\n\tpublic var TEXTURE0 = 0x84C0;\n\tpublic var TEXTURE1 = 0x84C1;\n\tpublic var TEXTURE2 = 0x84C2;\n\tpublic var TEXTURE3 = 0x84C3;\n\tpublic var TEXTURE4 = 0x84C4;\n\tpublic var TEXTURE5 = 0x84C5;\n\tpublic var TEXTURE6 = 0x84C6;\n\tpublic var TEXTURE7 = 0x84C7;\n\tpublic var TEXTURE8 = 0x84C8;\n\tpublic var TEXTURE9 = 0x84C9;\n\tpublic var TEXTURE10 = 0x84CA;\n\tpublic var TEXTURE11 = 0x84CB;\n\tpublic var TEXTURE12 = 0x84CC;\n\tpublic var TEXTURE13 = 0x84CD;\n\tpublic var TEXTURE14 = 0x84CE;\n\tpublic var TEXTURE15 = 0x84CF;\n\tpublic var TEXTURE16 = 0x84D0;\n\tpublic var TEXTURE17 = 0x84D1;\n\tpublic var TEXTURE18 = 0x84D2;\n\tpublic var TEXTURE19 = 0x84D3;\n\tpublic var TEXTURE20 = 0x84D4;\n\tpublic var TEXTURE21 = 0x84D5;\n\tpublic var TEXTURE22 = 0x84D6;\n\tpublic var TEXTURE23 = 0x84D7;\n\tpublic var TEXTURE24 = 0x84D8;\n\tpublic var TEXTURE25 = 0x84D9;\n\tpublic var TEXTURE26 = 0x84DA;\n\tpublic var TEXTURE27 = 0x84DB;\n\tpublic var TEXTURE28 = 0x84DC;\n\tpublic var TEXTURE29 = 0x84DD;\n\tpublic var TEXTURE30 = 0x84DE;\n\tpublic var TEXTURE31 = 0x84DF;\n\tpublic var ACTIVE_TEXTURE = 0x84E0;\n\t\n\tpublic var REPEAT = 0x2901;\n\tpublic var CLAMP_TO_EDGE = 0x812F;\n\tpublic var MIRRORED_REPEAT = 0x8370;\n\t\n\tpublic var FLOAT_VEC2 = 0x8B50;\n\tpublic var FLOAT_VEC3 = 0x8B51;\n\tpublic var FLOAT_VEC4 = 0x8B52;\n\tpublic var INT_VEC2 = 0x8B53;\n\tpublic var INT_VEC3 = 0x8B54;\n\tpublic var INT_VEC4 = 0x8B55;\n\tpublic var BOOL = 0x8B56;\n\tpublic var BOOL_VEC2 = 0x8B57;\n\tpublic var BOOL_VEC3 = 0x8B58;\n\tpublic var BOOL_VEC4 = 0x8B59;\n\tpublic var FLOAT_MAT2 = 0x8B5A;\n\tpublic var FLOAT_MAT3 = 0x8B5B;\n\tpublic var FLOAT_MAT4 = 0x8B5C;\n\tpublic var SAMPLER_2D = 0x8B5E;\n\tpublic var SAMPLER_CUBE = 0x8B60;\n\t\n\tpublic var VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;\n\tpublic var VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;\n\tpublic var VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;\n\tpublic var VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;\n\tpublic var VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;\n\tpublic var VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;\n\tpublic var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\n\t\n\tpublic var VERTEX_PROGRAM_POINT_SIZE = 0x8642;\n\tpublic var POINT_SPRITE = 0x8861;\n\t\n\tpublic var COMPILE_STATUS = 0x8B81;\n\t\n\tpublic var LOW_FLOAT = 0x8DF0;\n\tpublic var MEDIUM_FLOAT = 0x8DF1;\n\tpublic var HIGH_FLOAT = 0x8DF2;\n\tpublic var LOW_INT = 0x8DF3;\n\tpublic var MEDIUM_INT = 0x8DF4;\n\tpublic var HIGH_INT = 0x8DF5;\n\t\n\tpublic var FRAMEBUFFER = 0x8D40;\n\tpublic var RENDERBUFFER = 0x8D41;\n\t\n\tpublic var RGBA4 = 0x8056;\n\tpublic var RGB5_A1 = 0x8057;\n\tpublic var RGB565 = 0x8D62;\n\tpublic var DEPTH_COMPONENT16 = 0x81A5;\n\tpublic var STENCIL_INDEX = 0x1901;\n\tpublic var STENCIL_INDEX8 = 0x8D48;\n\tpublic var DEPTH_STENCIL = 0x84F9;\n\t\n\tpublic var RENDERBUFFER_WIDTH = 0x8D42;\n\tpublic var RENDERBUFFER_HEIGHT = 0x8D43;\n\tpublic var RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;\n\tpublic var RENDERBUFFER_RED_SIZE = 0x8D50;\n\tpublic var RENDERBUFFER_GREEN_SIZE = 0x8D51;\n\tpublic var RENDERBUFFER_BLUE_SIZE = 0x8D52;\n\tpublic var RENDERBUFFER_ALPHA_SIZE = 0x8D53;\n\tpublic var RENDERBUFFER_DEPTH_SIZE = 0x8D54;\n\tpublic var RENDERBUFFER_STENCIL_SIZE = 0x8D55;\n\t\n\tpublic var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;\n\tpublic var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;\n\tpublic var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;\n\tpublic var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\n\t\n\tpublic var COLOR_ATTACHMENT0 = 0x8CE0;\n\tpublic var DEPTH_ATTACHMENT = 0x8D00;\n\tpublic var STENCIL_ATTACHMENT = 0x8D20;\n\tpublic var DEPTH_STENCIL_ATTACHMENT = 0x821A;\n\t\n\tpublic var NONE = 0;\n\t\n\tpublic var FRAMEBUFFER_COMPLETE = 0x8CD5;\n\tpublic var FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;\n\tpublic var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\n\tpublic var FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;\n\tpublic var FRAMEBUFFER_UNSUPPORTED = 0x8CDD;\n\t\n\tpublic var FRAMEBUFFER_BINDING = 0x8CA6;\n\tpublic var RENDERBUFFER_BINDING = 0x8CA7;\n\tpublic var MAX_RENDERBUFFER_SIZE = 0x84E8;\n\t\n\tpublic var INVALID_FRAMEBUFFER_OPERATION = 0x0506;\n\t\n\tpublic var UNPACK_FLIP_Y_WEBGL = 0x9240;\n\tpublic var UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\n\tpublic var CONTEXT_LOST_WEBGL = 0x9242;\n\tpublic var UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\n\tpublic var BROWSER_DEFAULT_WEBGL = 0x9244;\n\t\n\tpublic var READ_BUFFER = 0x0C02;\n\tpublic var UNPACK_ROW_LENGTH = 0x0CF2;\n\tpublic var UNPACK_SKIP_ROWS = 0x0CF3;\n\tpublic var UNPACK_SKIP_PIXELS = 0x0CF4;\n\tpublic var PACK_ROW_LENGTH = 0x0D02;\n\tpublic var PACK_SKIP_ROWS = 0x0D03;\n\tpublic var PACK_SKIP_PIXELS = 0x0D04;\n\tpublic var TEXTURE_BINDING_3D = 0x806A;\n\tpublic var UNPACK_SKIP_IMAGES = 0x806D;\n\tpublic var UNPACK_IMAGE_HEIGHT = 0x806E;\n\tpublic var MAX_3D_TEXTURE_SIZE = 0x8073;\n\tpublic var MAX_ELEMENTS_VERTICES = 0x80E8;\n\tpublic var MAX_ELEMENTS_INDICES = 0x80E9;\n\tpublic var MAX_TEXTURE_LOD_BIAS = 0x84FD;\n\tpublic var MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;\n\tpublic var MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;\n\tpublic var MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;\n\tpublic var MIN_PROGRAM_TEXEL_OFFSET = 0x8904;\n\tpublic var MAX_PROGRAM_TEXEL_OFFSET = 0x8905;\n\tpublic var MAX_VARYING_COMPONENTS = 0x8B4B;\n\tpublic var FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;\n\tpublic var RASTERIZER_DISCARD = 0x8C89;\n\tpublic var VERTEX_ARRAY_BINDING = 0x85B5;\n\tpublic var MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;\n\tpublic var MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;\n\tpublic var MAX_SERVER_WAIT_TIMEOUT = 0x9111;\n\tpublic var MAX_ELEMENT_INDEX = 0x8D6B;\n\t\n\tpublic var RED = 0x1903;\n\tpublic var RGB8 = 0x8051;\n\tpublic var RGBA8 = 0x8058;\n\tpublic var RGB10_A2 = 0x8059;\n\tpublic var TEXTURE_3D = 0x806F;\n\tpublic var TEXTURE_WRAP_R = 0x8072;\n\tpublic var TEXTURE_MIN_LOD = 0x813A;\n\tpublic var TEXTURE_MAX_LOD = 0x813B;\n\tpublic var TEXTURE_BASE_LEVEL = 0x813C;\n\tpublic var TEXTURE_MAX_LEVEL = 0x813D;\n\tpublic var TEXTURE_COMPARE_MODE = 0x884C;\n\tpublic var TEXTURE_COMPARE_FUNC = 0x884D;\n\tpublic var SRGB = 0x8C40;\n\tpublic var SRGB8 = 0x8C41;\n\tpublic var SRGB8_ALPHA8 = 0x8C43;\n\tpublic var COMPARE_REF_TO_TEXTURE = 0x884E;\n\tpublic var RGBA32F = 0x8814;\n\tpublic var RGB32F = 0x8815;\n\tpublic var RGBA16F = 0x881A;\n\tpublic var RGB16F = 0x881B;\n\tpublic var TEXTURE_2D_ARRAY = 0x8C1A;\n\tpublic var TEXTURE_BINDING_2D_ARRAY = 0x8C1D;\n\tpublic var R11F_G11F_B10F = 0x8C3A;\n\tpublic var RGB9_E5 = 0x8C3D;\n\tpublic var RGBA32UI = 0x8D70;\n\tpublic var RGB32UI = 0x8D71;\n\tpublic var RGBA16UI = 0x8D76;\n\tpublic var RGB16UI = 0x8D77;\n\tpublic var RGBA8UI = 0x8D7C;\n\tpublic var RGB8UI = 0x8D7D;\n\tpublic var RGBA32I = 0x8D82;\n\tpublic var RGB32I = 0x8D83;\n\tpublic var RGBA16I = 0x8D88;\n\tpublic var RGB16I = 0x8D89;\n\tpublic var RGBA8I = 0x8D8E;\n\tpublic var RGB8I = 0x8D8F;\n\tpublic var RED_INTEGER = 0x8D94;\n\tpublic var RGB_INTEGER = 0x8D98;\n\tpublic var RGBA_INTEGER = 0x8D99;\n\tpublic var R8 = 0x8229;\n\tpublic var RG8 = 0x822B;\n\tpublic var R16F = 0x822D;\n\tpublic var R32F = 0x822E;\n\tpublic var RG16F = 0x822F;\n\tpublic var RG32F = 0x8230;\n\tpublic var R8I = 0x8231;\n\tpublic var R8UI = 0x8232;\n\tpublic var R16I = 0x8233;\n\tpublic var R16UI = 0x8234;\n\tpublic var R32I = 0x8235;\n\tpublic var R32UI = 0x8236;\n\tpublic var RG8I = 0x8237;\n\tpublic var RG8UI = 0x8238;\n\tpublic var RG16I = 0x8239;\n\tpublic var RG16UI = 0x823A;\n\tpublic var RG32I = 0x823B;\n\tpublic var RG32UI = 0x823C;\n\tpublic var R8_SNORM = 0x8F94;\n\tpublic var RG8_SNORM = 0x8F95;\n\tpublic var RGB8_SNORM = 0x8F96;\n\tpublic var RGBA8_SNORM = 0x8F97;\n\tpublic var RGB10_A2UI = 0x906F;\n\tpublic var TEXTURE_IMMUTABLE_FORMAT = 0x912F;\n\tpublic var TEXTURE_IMMUTABLE_LEVELS = 0x82DF;\n\t\n\tpublic var UNSIGNED_INT_2_10_10_10_REV = 0x8368;\n\tpublic var UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\n\tpublic var UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\n\tpublic var FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\n\tpublic var UNSIGNED_INT_24_8 = 0x84FA;\n\tpublic var HALF_FLOAT = 0x140B;\n\tpublic var RG = 0x8227;\n\tpublic var RG_INTEGER = 0x8228;\n\tpublic var INT_2_10_10_10_REV = 0x8D9F;\n\t\n\tpublic var CURRENT_QUERY = 0x8865;\n\tpublic var QUERY_RESULT = 0x8866;\n\tpublic var QUERY_RESULT_AVAILABLE = 0x8867;\n\tpublic var ANY_SAMPLES_PASSED = 0x8C2F;\n\tpublic var ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A;\n\t\n\tpublic var MAX_DRAW_BUFFERS = 0x8824;\n\tpublic var DRAW_BUFFER0 = 0x8825;\n\tpublic var DRAW_BUFFER1 = 0x8826;\n\tpublic var DRAW_BUFFER2 = 0x8827;\n\tpublic var DRAW_BUFFER3 = 0x8828;\n\tpublic var DRAW_BUFFER4 = 0x8829;\n\tpublic var DRAW_BUFFER5 = 0x882A;\n\tpublic var DRAW_BUFFER6 = 0x882B;\n\tpublic var DRAW_BUFFER7 = 0x882C;\n\tpublic var DRAW_BUFFER8 = 0x882D;\n\tpublic var DRAW_BUFFER9 = 0x882E;\n\tpublic var DRAW_BUFFER10 = 0x882F;\n\tpublic var DRAW_BUFFER11 = 0x8830;\n\tpublic var DRAW_BUFFER12 = 0x8831;\n\tpublic var DRAW_BUFFER13 = 0x8832;\n\tpublic var DRAW_BUFFER14 = 0x8833;\n\tpublic var DRAW_BUFFER15 = 0x8834;\n\tpublic var MAX_COLOR_ATTACHMENTS = 0x8CDF;\n\tpublic var COLOR_ATTACHMENT1 = 0x8CE1;\n\tpublic var COLOR_ATTACHMENT2 = 0x8CE2;\n\tpublic var COLOR_ATTACHMENT3 = 0x8CE3;\n\tpublic var COLOR_ATTACHMENT4 = 0x8CE4;\n\tpublic var COLOR_ATTACHMENT5 = 0x8CE5;\n\tpublic var COLOR_ATTACHMENT6 = 0x8CE6;\n\tpublic var COLOR_ATTACHMENT7 = 0x8CE7;\n\tpublic var COLOR_ATTACHMENT8 = 0x8CE8;\n\tpublic var COLOR_ATTACHMENT9 = 0x8CE9;\n\tpublic var COLOR_ATTACHMENT10 = 0x8CEA;\n\tpublic var COLOR_ATTACHMENT11 = 0x8CEB;\n\tpublic var COLOR_ATTACHMENT12 = 0x8CEC;\n\tpublic var COLOR_ATTACHMENT13 = 0x8CED;\n\tpublic var COLOR_ATTACHMENT14 = 0x8CEE;\n\tpublic var COLOR_ATTACHMENT15 = 0x8CEF;\n\t\n\tpublic var SAMPLER_3D = 0x8B5F;\n\tpublic var SAMPLER_2D_SHADOW = 0x8B62;\n\tpublic var SAMPLER_2D_ARRAY = 0x8DC1;\n\tpublic var SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\n\tpublic var SAMPLER_CUBE_SHADOW = 0x8DC5;\n\tpublic var INT_SAMPLER_2D = 0x8DCA;\n\tpublic var INT_SAMPLER_3D = 0x8DCB;\n\tpublic var INT_SAMPLER_CUBE = 0x8DCC;\n\tpublic var INT_SAMPLER_2D_ARRAY = 0x8DCF;\n\tpublic var UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\n\tpublic var UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\n\tpublic var UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\n\tpublic var UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\tpublic var MAX_SAMPLES = 0x8D57;\n\tpublic var SAMPLER_BINDING = 0x8919;\n\t\n\tpublic var PIXEL_PACK_BUFFER = 0x88EB;\n\tpublic var PIXEL_UNPACK_BUFFER = 0x88EC;\n\tpublic var PIXEL_PACK_BUFFER_BINDING = 0x88ED;\n\tpublic var PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;\n\tpublic var COPY_READ_BUFFER = 0x8F36;\n\tpublic var COPY_WRITE_BUFFER = 0x8F37;\n\tpublic var COPY_READ_BUFFER_BINDING = 0x8F36;\n\tpublic var COPY_WRITE_BUFFER_BINDING = 0x8F37;\n\t\n\tpublic var FLOAT_MAT2x3 = 0x8B65;\n\tpublic var FLOAT_MAT2x4 = 0x8B66;\n\tpublic var FLOAT_MAT3x2 = 0x8B67;\n\tpublic var FLOAT_MAT3x4 = 0x8B68;\n\tpublic var FLOAT_MAT4x2 = 0x8B69;\n\tpublic var FLOAT_MAT4x3 = 0x8B6A;\n\tpublic var UNSIGNED_INT_VEC2 = 0x8DC6;\n\tpublic var UNSIGNED_INT_VEC3 = 0x8DC7;\n\tpublic var UNSIGNED_INT_VEC4 = 0x8DC8;\n\tpublic var UNSIGNED_NORMALIZED = 0x8C17;\n\tpublic var SIGNED_NORMALIZED = 0x8F9C;\n\t\n\tpublic var VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;\n\tpublic var VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;\n\t\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;\n\tpublic var MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;\n\tpublic var TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;\n\tpublic var TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;\n\tpublic var MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;\n\tpublic var MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;\n\tpublic var INTERLEAVED_ATTRIBS = 0x8C8C;\n\tpublic var SEPARATE_ATTRIBS = 0x8C8D;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;\n\tpublic var TRANSFORM_FEEDBACK = 0x8E22;\n\tpublic var TRANSFORM_FEEDBACK_PAUSED = 0x8E23;\n\tpublic var TRANSFORM_FEEDBACK_ACTIVE = 0x8E24;\n\tpublic var TRANSFORM_FEEDBACK_BINDING = 0x8E25;\n\t\n\tpublic var FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;\n\tpublic var FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;\n\tpublic var FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;\n\tpublic var FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;\n\tpublic var FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;\n\tpublic var FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;\n\tpublic var FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;\n\tpublic var FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;\n\tpublic var FRAMEBUFFER_DEFAULT = 0x8218;\n\tpublic var DEPTH24_STENCIL8 = 0x88F0;\n\tpublic var DRAW_FRAMEBUFFER_BINDING = 0x8CA6;\n\tpublic var READ_FRAMEBUFFER = 0x8CA8;\n\tpublic var DRAW_FRAMEBUFFER = 0x8CA9;\n\tpublic var READ_FRAMEBUFFER_BINDING = 0x8CAA;\n\tpublic var RENDERBUFFER_SAMPLES = 0x8CAB;\n\tpublic var FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4;\n\tpublic var FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;\n\t\n\tpublic var UNIFORM_BUFFER = 0x8A11;\n\tpublic var UNIFORM_BUFFER_BINDING = 0x8A28;\n\tpublic var UNIFORM_BUFFER_START = 0x8A29;\n\tpublic var UNIFORM_BUFFER_SIZE = 0x8A2A;\n\tpublic var MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;\n\tpublic var MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;\n\tpublic var MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;\n\tpublic var MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;\n\tpublic var MAX_UNIFORM_BLOCK_SIZE = 0x8A30;\n\tpublic var MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;\n\tpublic var MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;\n\tpublic var UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;\n\tpublic var ACTIVE_UNIFORM_BLOCKS = 0x8A36;\n\tpublic var UNIFORM_TYPE = 0x8A37;\n\tpublic var UNIFORM_SIZE = 0x8A38;\n\tpublic var UNIFORM_BLOCK_INDEX = 0x8A3A;\n\tpublic var UNIFORM_OFFSET = 0x8A3B;\n\tpublic var UNIFORM_ARRAY_STRIDE = 0x8A3C;\n\tpublic var UNIFORM_MATRIX_STRIDE = 0x8A3D;\n\tpublic var UNIFORM_IS_ROW_MAJOR = 0x8A3E;\n\tpublic var UNIFORM_BLOCK_BINDING = 0x8A3F;\n\tpublic var UNIFORM_BLOCK_DATA_SIZE = 0x8A40;\n\tpublic var UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;\n\tpublic var UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;\n\tpublic var UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;\n\tpublic var UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;\n\t\n\tpublic var OBJECT_TYPE = 0x9112;\n\tpublic var SYNC_CONDITION = 0x9113;\n\tpublic var SYNC_STATUS = 0x9114;\n\tpublic var SYNC_FLAGS = 0x9115;\n\tpublic var SYNC_FENCE = 0x9116;\n\tpublic var SYNC_GPU_COMMANDS_COMPLETE = 0x9117;\n\tpublic var UNSIGNALED = 0x9118;\n\tpublic var SIGNALED = 0x9119;\n\tpublic var ALREADY_SIGNALED = 0x911A;\n\tpublic var TIMEOUT_EXPIRED = 0x911B;\n\tpublic var CONDITION_SATISFIED = 0x911C;\n\tpublic var WAIT_FAILED = 0x911D;\n\tpublic var SYNC_FLUSH_COMMANDS_BIT = 0x00000001;\n\t\n\tpublic var COLOR = 0x1800;\n\tpublic var DEPTH = 0x1801;\n\tpublic var STENCIL = 0x1802;\n\tpublic var MIN = 0x8007;\n\tpublic var MAX = 0x8008;\n\tpublic var DEPTH_COMPONENT24 = 0x81A6;\n\tpublic var STREAM_READ = 0x88E1;\n\tpublic var STREAM_COPY = 0x88E2;\n\tpublic var STATIC_READ = 0x88E5;\n\tpublic var STATIC_COPY = 0x88E6;\n\tpublic var DYNAMIC_READ = 0x88E9;\n\tpublic var DYNAMIC_COPY = 0x88EA;\n\tpublic var DEPTH_COMPONENT32F = 0x8CAC;\n\tpublic var DEPTH32F_STENCIL8 = 0x8CAD;\n\tpublic var INVALID_INDEX = 0xFFFFFFFF;\n\tpublic var TIMEOUT_IGNORED = -1;\n\tpublic var MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 0x9247;\n\t\n\t#if (js && html5)\n\tpublic var canvas (get, never):CanvasElement;\n\tpublic var drawingBufferHeight (get, never):Int;\n\tpublic var drawingBufferWidth (get, never):Int;\n\t#end\n\t\n\tpublic var type:GLContextType;\n\tpublic var version (default, null):Int;\n\t\n\tprivate var __context:WebGL2RenderingContext;\n\tprivate var __contextLost:Bool;\n\t\n\t\n\tprivate function new (context:WebGL2RenderingContext) {\n\t\t\n\t\t__context = context;\n\t\tversion = 1;\n\t\ttype = WEBGL;\n\t\t\n\t\tif (context != null) {\n\t\t\t\n\t\t\tvar gl = context;\n\t\t\t\n\t\t\tif (Reflect.hasField (gl, \"rawgl\")) {\n\t\t\t\t\n\t\t\t\tgl = Reflect.field (context, \"rawgl\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (Reflect.hasField (Browser.window, \"WebGL2RenderingContext\") && Std.is (gl, WebGL2RenderingContext)) {\n\t\t\t\t\n\t\t\t\tversion = 2;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function activeTexture (texture:Int):Void {\n\t\t\n\t\t__context.activeTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function attachShader (program:GLProgram, shader:GLShader):Void {\n\t\t\n\t\t__context.attachShader (program, shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function beginQuery (target:Int, query:GLQuery):Void {\n\t\t\n\t\t__context.beginQuery (target, query);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function beginTransformFeedback (primitiveNode:Int):Void {\n\t\t\n\t\t__context.beginTransformFeedback (primitiveNode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindAttribLocation (program:GLProgram, index:Int, name:String):Void {\n\t\t\n\t\t__context.bindAttribLocation (program, index, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindBuffer (target:Int, buffer:GLBuffer):Void {\n\t\t\n\t\t__context.bindBuffer (target, buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindBufferBase (target:Int, index:Int, buffer:GLBuffer):Void {\n\t\t\n\t\t__context.bindBufferBase (target, index, buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindBufferRange (target:Int, index:Int, buffer:GLBuffer, offset:DataPointer, size:Int):Void {\n\t\t\n\t\t__context.bindBufferRange (target, index, buffer, offset.toValue (), size);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindFramebuffer (target:Int, framebuffer:GLFramebuffer):Void {\n\t\t\n\t\t__context.bindFramebuffer (target, framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindRenderbuffer (target:Int, renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\t__context.bindRenderbuffer (target, renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindSampler (unit:Int, sampler:GLSampler):Void {\n\t\t\n\t\t__context.bindSampler (unit, sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindTexture (target:Int, texture:GLTexture):Void {\n\t\t\n\t\t__context.bindTexture (target, texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindTransformFeedback (target:Int, transformFeedback:GLTransformFeedback):Void {\n\t\t\n\t\t__context.bindTransformFeedback (target, transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindVertexArray (vertexArray:GLVertexArrayObject):Void {\n\t\t\n\t\t__context.bindVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendColor (red:Float, green:Float, blue:Float, alpha:Float):Void {\n\t\t\n\t\t__context.blendColor (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendEquation (mode:Int):Void {\n\t\t\n\t\t__context.blendEquation (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendEquationSeparate (modeRGB:Int, modeAlpha:Int):Void {\n\t\t\n\t\t__context.blendEquationSeparate (modeRGB, modeAlpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendFunc (sfactor:Int, dfactor:Int):Void {\n\t\t\n\t\t__context.blendFunc (sfactor, dfactor);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendFuncSeparate (srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void {\n\t\t\n\t\t__context.blendFuncSeparate (srcRGB, dstRGB, srcAlpha, dstAlpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blitFramebuffer (srcX0:Int, srcY0:Int, srcX1:Int, srcY1:Int, dstX0:Int, dstY0:Int, dstX1:Int, dstY1:Int, mask:Int, filter:Int):Void {\n\t\t\n\t\t__context.blitFramebuffer (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bufferData (target:Int, size:Int, data:DataPointer, usage:Int):Void {\n\t\t\n\t\t__context.bufferData (target, data.toBufferView (size), usage);\n\t\t\n\t}\n\t\n\t\n\t//public function bufferData (target:Int, srcData:ArrayBufferView, usage:Int):Void {\n\t//public function bufferData (target:Int, srcData:ArrayBuffer, usage:Int):Void {\n\t//public function bufferData (target:Int, size:Int, usage:Int):Void {\n\t//public function bufferData (target:Int, srcData:ArrayBufferView, usage:Int, srcOffset:Int = 0, length:Int = 0):Void {\n\tpublic function bufferDataWEBGL (target:Int, srcData:Dynamic, usage:Int, ?srcOffset:Int, ?length:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.bufferData (target, srcData, usage, srcOffset, length);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.bufferData (target, srcData, usage);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bufferSubData (target:Int, dstByteOffset:Int, size:Int, data:DataPointer):Void {\n\t\t\n\t\t__context.bufferSubData (target, dstByteOffset, data.toBufferView (size));\n\t\t\n\t}\n\t\n\t\n\t//public function bufferSubData (target:Int, dstByteOffset:Int, srcData:ArrayBufferView):Void {\n\t//public function bufferSubData (target:Int, dstByteOffset:Int, srcData:ArrayBuffer):Void {\n\t//public function bufferSubData (target:Int, dstByteOffset:Int, srcData:ArrayBufferView, srcOffset:Int = 0, length:Int = 0):Void {\n\tpublic function bufferSubDataWEBGL (target:Int, dstByteOffset:Int, srcData:Dynamic, ?srcOffset:Int, ?length:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.bufferSubData (target, dstByteOffset, srcData, srcOffset, length);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.bufferSubData (target, dstByteOffset, srcData);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function checkFramebufferStatus (target:Int):Int {\n\t\t\n\t\treturn __context.checkFramebufferStatus (target);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clear (mask:Int):Void {\n\t\t\n\t\t__context.clear (mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferfi (buffer:Int, drawbuffer:Int, depth:Float, stencil:Int):Void {\n\t\t\n\t\t__context.clearBufferfi (buffer, drawbuffer, depth, stencil);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferfv (buffer:Int, drawbuffer:Int, values:DataPointer):Void {\n\t\t\n\t\t__context.clearBufferfv (buffer, drawbuffer, values.toFloat32Array ());\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferfvWEBGL (buffer:Int, drawbuffer:Int, values:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\t__context.clearBufferfv (buffer, drawbuffer, values, srcOffset);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferiv (buffer:Int, drawbuffer:Int, values:DataPointer):Void {\n\t\t\n\t\t__context.clearBufferiv (buffer, drawbuffer, values.toInt32Array ());\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferivWEBGL (buffer:Int, drawbuffer:Int, values:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\t__context.clearBufferiv (buffer, drawbuffer, values, srcOffset);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferuiv (buffer:Int, drawbuffer:Int, values:DataPointer):Void {\n\t\t\n\t\t__context.clearBufferuiv (buffer, drawbuffer, values.toUInt32Array ());\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferuivWEBGL (buffer:Int, drawbuffer:Int, values:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\t__context.clearBufferuiv (buffer, drawbuffer, values, srcOffset);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearColor (red:Float, green:Float, blue:Float, alpha:Float):Void {\n\t\t\n\t\t__context.clearColor (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\t@:dox(hide) @:noCompletion public inline function clearDepth (depth:Float):Void {\n\t\t\n\t\t__context.clearDepth (depth);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearDepthf (depth:Float):Void {\n\t\t\n\t\tclearDepth (depth);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearStencil (s:Int):Void {\n\t\t\n\t\t__context.clearStencil (s);\n\t\t\n\t}\n\t\n\t\n\t//public inline function clientWaitSync (sync:GLSync, flags:Int, timeout:Dynamic /*int64*/):Int {\n\t//public inline function clientWaitSync (sync:GLSync, flags:Int, timeout:Int64):Int {\n\tpublic inline function clientWaitSync (sync:GLSync, flags:Int, timeout:Dynamic):Int {\n\t\t\n\t\treturn __context.clientWaitSync (sync, flags, timeout);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copyBufferSubData (readTarget:Int, writeTarget:Int, readOffset:DataPointer, writeOffset:DataPointer, size:Int):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function colorMask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {\n\t\t\n\t\t__context.colorMask (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compileShader (shader:GLShader):Void {\n\t\t\n\t\t__context.compileShader (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\t__context.compressedTexImage2D (target, level, internalformat, width, height, border, data.toBufferView (imageSize));\n\t\t\n\t}\n\t\n\t\n\t//public function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, srcData:ArrayBufferView):Void {\n\t//public function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, offset:Int):Void {\n\t//public function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, srcData:ArrayBufferView, srcOffset:Int = 0, srcLengthOverride:Int = 0):Void {\n\tpublic function compressedTexImage2DWEBGL (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, srcData:Dynamic, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.compressedTexImage2D (target, level, internalformat, width, height, border, srcData, srcOffset, srcLengthOverride);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.compressedTexImage2D (target, level, internalformat, width, height, border, srcData);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compressedTexImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\t__context.compressedTexImage3D (target, level, internalformat, width, height, depth, border, data.toBufferView (imageSize));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compressedTexImage3DWEBGL (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, srcData:Dynamic, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\t__context.compressedTexImage3D (target, level, internalformat, width, height, depth, border, srcData, srcOffset, srcLengthOverride);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\t__context.compressedTexSubImage2D (target, level, xoffset, yoffset, width, height, format, data.toBufferView (imageSize));\n\t\t\n\t}\n\t\n\t\n\t//public function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, srcData:ArrayBufferView):Void {\n\t//public function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, offset:Int):Void {\n\t//public function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, srcData:ArrayBufferView, srcOffset:Int = 0, srcLengthOverride:Int = 0):Void {\n\tpublic function compressedTexSubImage2DWEBGL (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, srcData:Dynamic, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.compressedTexSubImage2D (target, level, xoffset, yoffset, width, height, format, srcData, srcOffset, srcLengthOverride);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.compressedTexSubImage2D (target, level, xoffset, yoffset, width, height, format, srcData);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compressedTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\t__context.compressedTexSubImage3D (target, level, xoffset, yoffset, zoffset, width, height, depth, format, data.toBufferView (imageSize));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compressedTexSubImage3DWEBGL (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, srcData:ArrayBufferView, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\t__context.compressedTexSubImage3D (target, level, xoffset, yoffset, zoffset, width, height, depth, format, srcData, srcOffset, srcLengthOverride);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copySubBufferData (readTarget:Int, writeTarget:Int, readOffset:DataPointer, writeOffset:DataPointer, size:Int):Void {\n\t\t\n\t\t__context.copySubBufferData (readTarget, writeTarget, readOffset.toValue (), writeOffset.toValue (), size);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copyTexImage2D (target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void {\n\t\t\n\t\t__context.copyTexImage2D (target, level, internalformat, x, y, width, height, border);\n\t\t\n\t}\n\t \n\t\n\tpublic inline function copyTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\t__context.copyTexSubImage2D (target, level, xoffset, yoffset, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copyTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\t__context.copyTexSubImage3D (target, level, xoffset, yoffset, zoffset, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createBuffer ():GLBuffer {\n\t\t\n\t\treturn __context.createBuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createFramebuffer ():GLFramebuffer {\n\t\t\n\t\treturn __context.createFramebuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createProgram ():GLProgram {\n\t\t\n\t\treturn __context.createProgram ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createQuery ():GLQuery {\n\t\t\n\t\treturn __context.createQuery ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createRenderbuffer ():GLRenderbuffer {\n\t\t\n\t\treturn __context.createRenderbuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createSampler ():GLSampler {\n\t\t\n\t\treturn __context.createSampler ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createShader (type:Int):GLShader {\n\t\t\n\t\treturn __context.createShader (type);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createTexture ():GLTexture {\n\t\t\n\t\treturn __context.createTexture ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createTransformFeedback ():GLTransformFeedback {\n\t\t\n\t\treturn __context.createTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createVertexArray ():GLVertexArrayObject {\n\t\t\n\t\treturn __context.createVertexArray ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function cullFace (mode:Int):Void {\n\t\t\n\t\t__context.cullFace (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteBuffer (buffer:GLBuffer):Void {\n\t\t\n\t\t__context.deleteBuffer (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteFramebuffer (framebuffer:GLFramebuffer):Void {\n\t\t\n\t\t__context.deleteFramebuffer (framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteProgram (program:GLProgram):Void {\n\t\t\n\t\t__context.deleteProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteQuery (query:GLQuery):Void {\n\t\t\n\t\t__context.deleteQuery (query);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteRenderbuffer (renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\t__context.deleteRenderbuffer (renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteSampler (sampler:GLSampler):Void {\n\t\t\n\t\t__context.deleteSampler (sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteShader (shader:GLShader):Void {\n\t\t\n\t\t__context.deleteShader (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteSync (sync:GLSync):Void {\n\t\t\n\t\t__context.deleteSync (sync);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteTexture (texture:GLTexture):Void {\n\t\t\n\t\t__context.deleteTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteTransformFeedback (transformFeedback:GLTransformFeedback):Void {\n\t\t\n\t\t__context.deleteTransformFeedback (transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteVertexArray (vertexArray:GLVertexArrayObject):Void {\n\t\t\n\t\t__context.deleteVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function depthFunc (func:Int):Void {\n\t\t\n\t\t__context.depthFunc (func);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function depthMask (flag:Bool):Void {\n\t\t\n\t\t__context.depthMask (flag);\n\t\t\n\t}\n\t\n\t\n\t@:dox(hide) @:noCompletion public inline function depthRange (zNear:Float, zFar:Float):Void {\n\t\t\n\t\t__context.depthRange (zNear, zFar);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function depthRangef (zNear:Float, zFar:Float):Void {\n\t\t\n\t\tdepthRange (zNear, zFar);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function detachShader (program:GLProgram, shader:GLShader):Void {\n\t\t\n\t\t__context.detachShader (program, shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function disable (cap:Int):Void {\n\t\t\n\t\t__context.disable (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function disableVertexAttribArray (index:Int):Void {\n\t\t\n\t\t__context.disableVertexAttribArray (index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawArrays (mode:Int, first:Int, count:Int):Void {\n\t\t\n\t\t__context.drawArrays (mode, first, count);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawArraysInstanced (mode:Int, first:Int, count:Int, instanceCount:Int):Void {\n\t\t\n\t\t__context.drawArraysInstanced (mode, first, count, instanceCount);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawBuffers (buffers:Array<Int>):Void {\n\t\t\n\t\t__context.drawBuffers (buffers);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawElements (mode:Int, count:Int, type:Int, offset:DataPointer):Void {\n\t\t\n\t\t__context.drawElements (mode, count, type, offset.toValue ());\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawElementsInstanced (mode:Int, count:Int, type:Int, offset:DataPointer, instanceCount:Int):Void {\n\t\t\n\t\t__context.drawElementsInstanced (mode, count, type, offset.toValue (), instanceCount);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawRangeElements (mode:Int, start:Int, end:Int, count:Int, type:Int, offset:DataPointer):Void {\n\t\t\n\t\t__context.drawRangeElements (mode, start, end, count, type, offset.toValue ());\n\t\t\n\t}\n\t\n\t\n\tpublic inline function enable (cap:Int):Void {\n\t\t\n\t\t__context.enable (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function enableVertexAttribArray (index:Int):Void {\n\t\t\n\t\t__context.enableVertexAttribArray (index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function endQuery (target:Int):Void {\n\t\t\n\t\t__context.endQuery (target);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function endTransformFeedback ():Void {\n\t\t\n\t\t__context.endTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function fenceSync (condition:Int, flags:Int):GLSync {\n\t\t\n\t\treturn __context.fenceSync (condition, flags);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function finish ():Void {\n\t\t\n\t\t__context.finish ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function flush ():Void {\n\t\t\n\t\t__context.flush ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function framebufferRenderbuffer (target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\t__context.framebufferRenderbuffer (target, attachment, renderbuffertarget, renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function framebufferTexture2D (target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void {\n\t\t\n\t\t__context.framebufferTexture2D (target, attachment, textarget, texture, level);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function framebufferTextureLayer (target:Int, attachment:Int, texture:GLTexture, level:Int, layer:Int):Void {\n\t\t\n\t\t__context.framebufferTextureLayer (target, attachment, texture, level, layer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function frontFace (mode:Int):Void {\n\t\t\n\t\t__context.frontFace (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function generateMipmap (target:Int):Void {\n\t\t\n\t\t__context.generateMipmap (target);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveAttrib (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn __context.getActiveAttrib (program, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniform (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn __context.getActiveUniform (program, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniformBlocki (program:GLProgram, uniformBlockIndex:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn getActiveUniformBlockParameter (program, uniformBlockIndex, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getActiveUniformBlockiv (program:GLProgram, uniformBlockIndex:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tvar view = params.toInt32Array ();\n\t\tview[0] = getActiveUniformBlockParameter (program, uniformBlockIndex, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniformBlockName (program:GLProgram, uniformBlockIndex:Int):String {\n\t\t\n\t\treturn __context.getActiveUniformBlockName (program, uniformBlockIndex);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniformBlockParameter (program:GLProgram, uniformBlockIndex:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getActiveUniformBlockParameter (program, uniformBlockIndex, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniforms (program:GLProgram, uniformIndices:Array<Int>, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getActiveUniforms (program, uniformIndices, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniformsiv (program:GLProgram, uniformIndices:Array<Int>, pname:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getAttachedShaders (program:GLProgram):Array<GLShader> {\n\t\t\n\t\treturn __context.getAttachedShaders (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getAttribLocation (program:GLProgram, name:String):Int {\n\t\t\n\t\treturn __context.getAttribLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBoolean (pname:Int):Bool {\n\t\t\n\t\treturn getParameter (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBooleanv (pname:Int, params:DataPointer):Void {\n\t\t\n\t\tvar view = params.toUInt8Array ();\n\t\tvar result = getParameter (pname);\n\t\t\n\t\tif (Std.is (result, Array)) {\n\t\t\t\n\t\t\tvar data:Array<Bool> = result;\n\t\t\t\n\t\t\tfor (i in 0...data.length) {\n\t\t\t\t\n\t\t\t\tview[i] = data[i] ? 1 : 0;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tview[0] = cast (result, Bool) ? 1 : 0;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBufferParameter (target:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getBufferParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBufferParameteri (target:Int, pname:Int):Int {\n\t\t\n\t\treturn getBufferParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBufferParameteri64v (target:Int, pname:Int, params:DataPointer):Void{\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function getBufferParameteriv (target:Int, pname:Int, data:DataPointer):Void {\n\t\t\n\t\tvar view = data.toInt32Array ();\n\t\tview[0] = getBufferParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBufferPointerv (target:Int, pname:Int):DataPointer {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBufferSubData (target:Int, offset:DataPointer, size:Int /*GLsizeiptr*/, data:DataPointer):Void {\n\t\t\n\t\t__context.getBufferSubData (target, offset.toValue (), data.toBufferView (size));\n\t\t\n\t}\n\t\n\t\n\t//public function getBufferSubData (target:Int, srcByteOffset:DataPointer, dstData:js.html.ArrayBuffer, ?srcOffset:Int, ?length:Int):Void {\n\t//public function getBufferSubData (target:Int, srcByteOffset:DataPointer, dstData:Dynamic /*SharedArrayBuffer*/, ?srcOffset:Int, ?length:Int):Void {\n\tpublic function getBufferSubDataWEBGL (target:Int, srcByteOffset:DataPointer, dstData:Dynamic, ?srcOffset:Int, ?length:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.getBufferSubData (target, srcByteOffset, dstData, srcOffset, length);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.getBufferSubData (target, srcByteOffset, dstData);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getContextAttributes ():GLContextAttributes {\n\t\t\n\t\treturn __context.getContextAttributes ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getError ():Int {\n\t\t\n\t\treturn __context.getError ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getExtension (name:String):Dynamic {\n\t\t\n\t\treturn __context.getExtension (name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getFloat (pname:Int):Float {\n\t\t\n\t\treturn getParameter (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getFloatv (pname:Int, params:DataPointer):Void {\n\t\t\n\t\tvar view = params.toFloat32Array ();\n\t\t\n\t\tvar result = getParameter (pname);\n\t\t\n\t\tif (Std.is (result, ArrayBufferView)) {\n\t\t\t\n\t\t\tvar data:Float32Array = result;\n\t\t\t\n\t\t\tfor (i in 0...data.length) {\n\t\t\t\t\n\t\t\t\tview[i] = data[i];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tview[0] = cast (result, Float);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getFragDataLocation (program:GLProgram, name:String):Int {\n\t\t\n\t\treturn __context.getFragDataLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getFramebufferAttachmentParameter (target:Int, attachment:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getFramebufferAttachmentParameter (target, attachment, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getFramebufferAttachmentParameteri (target:Int, attachment:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn getFramebufferAttachmentParameter (target, attachment, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getFramebufferAttachmentParameteriv (target:Int, attachment:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tvar value = getFramebufferAttachmentParameteri (target, attachment, pname);\n\t\t\n\t\tvar view = params.toInt32Array ();\n\t\tview[0] = value;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getIndexedParameter (target:Int, index:Int):Dynamic {\n\t\t\n\t\treturn __context.getIndexedParameter (target, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInteger (pname:Int):Int {\n\t\t\n\t\treturn getParameter (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInteger64 (pname:Int):Int64 {\n\t\t\n\t\treturn Int64.ofInt (0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInteger64i (pname:Int):Int64 {\n\t\t\n\t\treturn Int64.ofInt (0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInteger64i_v (pname:Int, index:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function getInteger64v (pname:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getIntegeri (pname:Int):Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getIntegeri_v (pname:Int, index:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function getIntegerv (pname:Int, params:DataPointer):Void {\n\t\t\n\t\tvar view = params.toInt32Array ();\n\t\tvar result = getParameter (pname);\n\t\t\n\t\tif (Std.is (result, ArrayBufferView)) {\n\t\t\t\n\t\t\tvar data:Int32Array = result;\n\t\t\t\n\t\t\tfor (i in 0...data.length) {\n\t\t\t\t\n\t\t\t\tview[i] = data[i];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tview[0] = cast (result, Int);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInternalformati (target:Int, internalformat:Int, pname:Int):Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getInternalformativ (target:Int, internalformat:Int, pname:Int, bufSize:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInternalformatParameter (target:Int, internalformat:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getInternalformatParameter (target, internalformat, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getParameter (pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getParameter (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getProgramBinary (program:GLProgram, binaryFormat:Int):Bytes {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getProgrami (program:GLProgram, pname:Int):Int {\n\t\t\n\t\treturn getProgramParameter (program, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getProgramiv (program:GLProgram, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tvar view = params.toInt32Array ();\n\t\tview[0] = getProgramParameter (program, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getProgramInfoLog (program:GLProgram):String {\n\t\t\n\t\treturn __context.getProgramInfoLog (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getProgramParameter (program:GLProgram, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getProgramParameter (program, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getQuery (target:Int, pname:Int):GLQuery {\n\t\t\n\t\treturn __context.getQuery (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getQueryi (target:Int, pname:Int):Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getQueryiv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getQueryObjectui (query:GLQuery, pname:Int):Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getQueryObjectuiv (query:GLQuery, pname:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getQueryParameter (query:GLQuery, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getQueryParameter (query, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getRenderbufferParameter (target:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getRenderbufferParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getRenderbufferParameteri (target:Int, pname:Int):Int {\n\t\t\n\t\treturn getRenderbufferParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getRenderbufferParameteriv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tvar view = params.toInt32Array ();\n\t\tview[0] = getRenderbufferParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSamplerParameter (sampler:GLSampler, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getSamplerParameter (sampler, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSamplerParameterf (sampler:GLSampler, pname:Int):Float {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSamplerParameterfv (sampler:GLSampler, pname:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSamplerParameteri (sampler:GLSampler, pname:Int):Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSamplerParameteriv (sampler:GLSampler, pname:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderi (shader:GLShader, pname:Int):Int {\n\t\t\n\t\treturn getShaderParameter (shader, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getShaderiv (shader:GLShader, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tvar view = params.toInt32Array ();\n\t\tview[0] = getShaderParameter (shader, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderInfoLog (shader:GLShader):String {\n\t\t\n\t\treturn __context.getShaderInfoLog (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderParameter (shader:GLShader, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getShaderParameter (shader, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderPrecisionFormat (shadertype:Int, precisiontype:Int):GLShaderPrecisionFormat {\n\t\t\n\t\treturn __context.getShaderPrecisionFormat (shadertype, precisiontype);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderSource (shader:GLShader):String {\n\t\t\n\t\treturn __context.getShaderSource (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic function getString (pname:Int):String {\n\t\t\n\t\tif (pname == GL.EXTENSIONS) {\n\t\t\t\n\t\t\treturn getSupportedExtensions ().join (\" \");\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn getParameter (pname);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getStringi (name:Int, index:Int):String {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSupportedExtensions ():Array<String> {\n\t\t\n\t\treturn __context.getSupportedExtensions ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSyncParameter (sync:GLSync, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getSyncParameter (sync, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSyncParameteri (sync:GLSync, pname:Int):Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSyncParameteriv (sync:GLSync, pname:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getTexParameter (target:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getTexParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getTexParameterf (target:Int, pname:Int):Float {\n\t\t\n\t\treturn getTexParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getTexParameterfv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tvar view = params.toFloat32Array ();\n\t\tview[0] = getTexParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getTexParameteri (target:Int, pname:Int):Int {\n\t\t\n\t\treturn getTexParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getTexParameteriv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tvar view = params.toInt32Array ();\n\t\tview[0] = getTexParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getTransformFeedbackVarying (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn __context.getTransformFeedbackVarying (program, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniform (program:GLProgram, location:GLUniformLocation):Dynamic {\n\t\t\n\t\treturn __context.getUniform (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformf (program:GLProgram, location:GLUniformLocation):Float {\n\t\t\n\t\treturn getUniform (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic function getUniformfv (program:GLProgram, location:GLUniformLocation, params:DataPointer):Void {\n\t\t\n\t\tvar view = params.toFloat32Array ();\n\t\tview[0] = getUniformf (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformi (program:GLProgram, location:GLUniformLocation):Dynamic {\n\t\t\n\t\treturn getUniform (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic function getUniformiv (program:GLProgram, location:GLUniformLocation, params:DataPointer):Void {\n\t\t\n\t\tvar value = getUniformi (program, location);\n\t\t\n\t\tvar view = params.toInt32Array ();\n\t\tview[0] = value;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformui (program:GLProgram, location:GLUniformLocation):Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getUniformuiv (program:GLProgram, location:GLUniformLocation, params:DataPointer):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformBlockIndex (program:GLProgram, uniformBlockName:String):Int {\n\t\t\n\t\treturn __context.getUniformBlockIndex (program, uniformBlockName);\n\t\t\n\t}\n\t\n\t\n\t//public inline function getUniformIndices (program:GLProgram, uniformNames:String):Array<Int> {\n\t//public inline function getUniformIndices (program:GLProgram, uniformNames:Array<String>):Array<Int> {\n\tpublic inline function getUniformIndices (program:GLProgram, uniformNames:Dynamic):Array<Int> {\n\t\t\n\t\treturn __context.getUniformIndices (program, uniformNames);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformLocation (program:GLProgram, name:String):GLUniformLocation {\n\t\t\n\t\treturn __context.getUniformLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttrib (index:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn __context.getVertexAttrib (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribf (index:Int, pname:Int):Float {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getVertexAttribfv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribi (index:Int, pname:Int):Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribIi (index:Int, pname:Int):Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribIiv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribIui (index:Int, pname:Int):Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribIuiv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function getVertexAttribiv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t@:dox(hide) @:noCompletion public inline function getVertexAttribOffset (index:Int, pname:Int):DataPointer {\n\t\t\n\t\treturn __context.getVertexAttribOffset (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribPointerv (index:Int, pname:Int):DataPointer {\n\t\t\n\t\treturn getVertexAttribOffset (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function hint (target:Int, mode:Int):Void {\n\t\t\n\t\t__context.hint (target, mode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function invalidateFramebuffer (target:Int, attachments:Array<Int>):Void {\n\t\t\n\t\t__context.invalidateFramebuffer (target, attachments);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function invalidateSubFramebuffer (target:Int, attachments:Array<Int>, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\t__context.invalidateSubFramebuffer (target, attachments, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isBuffer (buffer:GLBuffer):Bool {\n\t\t\n\t\treturn __context.isBuffer (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isContextLost ():Bool {\n\t\t\n\t\treturn __contextLost || __context.isContextLost ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isEnabled (cap:Int):Bool {\n\t\t\n\t\treturn __context.isEnabled (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isFramebuffer (framebuffer:GLFramebuffer):Bool {\n\t\t\n\t\treturn __context.isFramebuffer (framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isProgram (program:GLProgram):Bool {\n\t\t\n\t\treturn __context.isProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isQuery (query:GLQuery):Bool {\n\t\t\n\t\treturn __context.isQuery (query);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isRenderbuffer (renderbuffer:GLRenderbuffer):Bool {\n\t\t\n\t\treturn __context.isRenderbuffer (renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isSampler (sampler:GLSampler):Bool {\n\t\t\n\t\treturn __context.isSampler (sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isShader (shader:GLShader):Bool {\n\t\t\n\t\treturn __context.isShader (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isSync (sync:GLSync):Bool {\n\t\t\n\t\treturn __context.isSync (sync);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isTexture (texture:GLTexture):Bool {\n\t\t\n\t\treturn __context.isTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isTransformFeedback (transformFeedback:GLTransformFeedback):Bool {\n\t\t\n\t\treturn __context.isTransformFeedback (transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isVertexArray (vertexArray:GLVertexArrayObject):Bool {\n\t\t\n\t\treturn __context.isVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function lineWidth (width:Float):Void {\n\t\t\n\t\t__context.lineWidth (width);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function linkProgram (program:GLProgram):Void {\n\t\t\n\t\t__context.linkProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function mapBufferRange (target:Int, offset:DataPointer, length:Int, access:Int):DataPointer {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pauseTransformFeedback ():Void {\n\t\t\n\t\t__context.pauseTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pixelStorei (pname:Int, param:Int):Void {\n\t\t\n\t\t__context.pixelStorei (pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function polygonOffset (factor:Float, units:Float):Void {\n\t\t\n\t\t__context.polygonOffset (factor, units);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function programBinary (program:GLProgram, binaryFormat:Int, binary:DataPointer, length:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function programParameteri (program:GLProgram, pname:Int, value:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readBuffer (src:Int):Void {\n\t\t\n\t\t__context.readBuffer (src);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:DataPointer):Void {\n\t\t\n\t\t__context.readPixels (x, y, width, height, format, type, pixels.toBufferView ());\n\t\t\n\t}\n\t\n\t\n\t//public function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\n\t//public function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView, ?dstOffset:Int):Void {\n\tpublic function readPixelsWEBGL (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView, ?dstOffset:Int):Void {\n\t\t\n\t\tif (dstOffset != null) {\n\t\t\t\n\t\t\t__context.readPixels (x, y, width, height, format, type, pixels, dstOffset);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.readPixels (x, y, width, height, format, type, pixels);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function releaseShaderCompiler ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function renderbufferStorage (target:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\t__context.renderbufferStorage (target, internalformat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function renderbufferStorageMultisample (target:Int, samples:Int, internalFormat:Int, width:Int, height:Int):Void {\n\t\t\n\t\t__context.renderbufferStorageMultisample (target, samples, internalFormat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function resumeTransformFeedback ():Void {\n\t\t\n\t\t__context.resumeTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function sampleCoverage (value:Float, invert:Bool):Void {\n\t\t\n\t\t__context.sampleCoverage (value, invert);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function samplerParameterf (sampler:GLSampler, pname:Int, param:Float):Void {\n\t\t\n\t\t__context.samplerParameterf (sampler, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function samplerParameteri (sampler:GLSampler, pname:Int, param:Int):Void {\n\t\t\n\t\t__context.samplerParameteri (sampler, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function scissor (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\t__context.scissor (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function shaderBinary (shaders:Array<GLShader>, binaryformat:Int, binary:DataPointer, length:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic inline function shaderSource (shader:GLShader, source:String):Void {\n\t\t\n\t\t__context.shaderSource (shader, source);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilFunc (func:Int, ref:Int, mask:Int):Void {\n\t\t\n\t\t__context.stencilFunc (func, ref, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilFuncSeparate (face:Int, func:Int, ref:Int, mask:Int):Void {\n\t\t\n\t\t__context.stencilFuncSeparate (face, func, ref, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilMask (mask:Int):Void {\n\t\t\n\t\t__context.stencilMask (mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilMaskSeparate (face:Int, mask:Int):Void {\n\t\t\n\t\t__context.stencilMaskSeparate (face, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilOp (fail:Int, zfail:Int, zpass:Int):Void {\n\t\t\n\t\t__context.stencilOp (fail, zfail, zpass);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilOpSeparate (face:Int, fail:Int, zfail:Int, zpass:Int):Void {\n\t\t\n\t\t__context.stencilOpSeparate (face, fail, zfail, zpass);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\t__context.texImage2D (target, level, internalformat, width, height, border, format, type, data.toBufferView ());\n\t\t\n\t}\n\t\n\t\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:Dynamic /*ImageBitmap*/):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:#if (js && html5) CanvasElement #else Dynamic #end):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:#if (js && html5) ImageData #else Dynamic #end):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:#if (js && html5) ImageElement #else Dynamic #end):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:#if (js && html5) VideoElement #else Dynamic #end):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:CanvasElement):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:Dynamic /*ImageBitmap*/):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ImageData):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ImageElement):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, offset:DataPointer):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:VideoElement):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, srcData:ArrayBufferView, srcOffset:Int):Void {\n\tpublic function texImage2DWEBGL (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Dynamic, ?format:Int, ?type:Int, ?srcData:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.texImage2D (target, level, internalformat, width, height, border, format, type, srcData, srcOffset);\n\t\t\t\n\t\t} else if (format != null) {\n\t\t\t\n\t\t\t__context.texImage2D (target, level, internalformat, width, height, border, format, type, srcData);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.texImage2D (target, level, internalformat, width, height, border); // target, level, internalformat, format, type, pixels\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\t__context.texImage3D (target, level, internalformat, width, height, depth, border, format, type, data.toBufferView ());\n\t\t\n\t}\n\t\n\t\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.CanvasElement):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.ImageElement):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.VideoElement):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:Dynamic /*js.html.ImageBitmap*/):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.ImageData):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, offset:DataPointer):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, srcData:js.html.ArrayBufferView, ?srcOffset:Int):Void {\n\tpublic inline function texImage3DWEBGL (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, srcData:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\t__context.texImage3D (target, level, internalformat, width, height, depth, border, format, type, srcData, srcOffset);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texStorage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\t__context.texStorage2D (target, level, internalformat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texStorage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int):Void {\n\t\t\n\t\t__context.texStorage3D (target, level, internalformat, width, height, depth);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texParameterf (target:Int, pname:Int, param:Float):Void {\n\t\t\n\t\t__context.texParameterf (target, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texParameteri (target:Int, pname:Int, param:Int):Void {\n\t\t\n\t\t__context.texParameteri (target, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\t__context.texSubImage2D (target, level, xoffset, yoffset, width, height, format, type, data.toBufferView ());\n\t\t\n\t}\n\t\n\t\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:#if (js && html5) CanvasElement #else Dynamic #end):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:Dynamic /*ImageBitmap*/):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:#if (js && html5) ImageData #else Dynamic #end):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:#if (js && html5) ImageElement #else Dynamic #end):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:#if (js && html5) VideoElement #else Dynamic #end):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:CanvasElement):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:Dynamic /*ImageBitmap*/):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ImageData):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ImageElement):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, offset:DataPointer):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:VideoElement):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, srcData:ArrayBufferView, srcOffset:Int):Void {\n\tpublic function texSubImage2DWEBGL (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Dynamic, ?type:Int, ?srcData:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.texSubImage2D (target, level, xoffset, yoffset, width, height, format, type, srcData, srcOffset);\n\t\t\t\n\t\t} else if (type != null) {\n\t\t\t\n\t\t\t__context.texSubImage2D (target, level, xoffset, yoffset, width, height, format, type, srcData);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.texSubImage2D (target, level, xoffset, yoffset, width, height, format); // target, level, xoffset, yoffset, format, type, pixels\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\t__context.texSubImage3D (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data.toBufferView ());\n\t\t\n\t}\n\t\n\t\n\t//public inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, offset:DataPointer):Void {\n\t//public inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:js.html.ImageData):Void {\n\t//public inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:js.html.ImageElement):Void {\n\t//public inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:js.html.CanvasElement):Void {\n\t//public inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:js.html.VideoElement):Void {\n\t//public inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:Dynamic /*ImageBitmap*/):Void {\n\t//public inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, pixels:js.html.ArrayBufferView):Void {\n\tpublic inline function texSubImage3DWEBGL (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\t__context.texSubImage3D (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, source, srcOffset);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function transformFeedbackVaryings (program:GLProgram, varyings:Array<String>, bufferMode:Int):Void {\n\t\t\n\t\t__context.transformFeedbackVaryings (program, varyings, bufferMode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1f (location:GLUniformLocation, v0:Float):Void {\n\t\t\n\t\t__context.uniform1f (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform1fv (location, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT));\n\t\t\n\t}\n\t\n\t\n\t//public function uniform1fv (location:GLUniformLocation, data:Float32Array):Void {\n\t//public function uniform1fv (location:GLUniformLocation, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t//public function uniform1fv (location:GLUniformLocation, data:Array<Float>):Void {\n\tpublic function uniform1fvWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniform1fv (location, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniform1fv (location, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1i (location:GLUniformLocation, v0:Int):Void {\n\t\t\n\t\t__context.uniform1i (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform1iv (location, v.toInt32Array (count * Int32Array.BYTES_PER_ELEMENT));\n\t\t\n\t}\n\t\n\t\n\t//public function uniform1iv (location:GLUniformLocation, data:Int32Array):Void {\n\t//public function uniform1iv (location:GLUniformLocation, data:Int32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t//public function uniform1iv (location:GLUniformLocation, data:Array<Int>):Void {\n\tpublic function uniform1ivWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniform1iv (location, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniform1iv (location, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1ui (location:GLUniformLocation, v0:Int):Void {\n\t\t\n\t\treturn __context.uniform1ui (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform1uiv (location, v.toUInt32Array (count * UInt32Array.BYTES_PER_ELEMENT));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1uivWEBGL (location:GLUniformLocation, data:UInt32Array, ?srcOffset:Dynamic, ?srcLength:Int):Void {\n\t\t\n\t\t__context.uniform1uiv (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2f (location:GLUniformLocation, v0:Float, v1:Float):Void {\n\t\t\n\t\t__context.uniform2f (location, v0, v1);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform2fv (location, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 2));\n\t\t\n\t}\n\t\n\t\n\t//public function uniform2fv (location:GLUniformLocation, data:Float32Array):Void {\n\t//public function uniform2fv (location:GLUniformLocation, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t//public function uniform2fv (location:GLUniformLocation, data:Array<Float>):Void {\n\tpublic function uniform2fvWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniform2fv (location, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniform2fv (location, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2i (location:GLUniformLocation, x:Int, y:Int):Void {\n\t\t\n\t\t__context.uniform2i (location, x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform2iv (location, v.toInt32Array (count * Int32Array.BYTES_PER_ELEMENT * 2));\n\t\t\n\t}\n\t\n\t\n\t//public function uniform2iv (location:GLUniformLocation, data:Int32Array):Void {\n\t//public function uniform2iv (location:GLUniformLocation, data:Int32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t//public function uniform2iv (location:GLUniformLocation, data:Array<Int>):Void {\n\tpublic function uniform2ivWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniform2iv (location, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniform2iv (location, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2ui (location:GLUniformLocation, v0:Int, v1:Int):Void {\n\t\t\n\t\t__context.uniform2ui (location, v0, v1);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform2uiv (location, v.toUInt32Array (count * UInt32Array.BYTES_PER_ELEMENT * 2));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2uivWEBGL (location:GLUniformLocation, data:UInt32Array, ?srcOffset:Dynamic, ?srcLength:Int):Void {\n\t\t\n\t\t__context.uniform2uiv (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3f (location:GLUniformLocation, v0:Float, v1:Float, v2:Float):Void {\n\t\t\n\t\t__context.uniform3f (location, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform3fv (location, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 3));\n\t\t\n\t}\n\t\n\t\n\t//public function uniform3fv (location:GLUniformLocation, data:Float32Array):Void {\n\t//public function uniform3fv (location:GLUniformLocation, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t//public function uniform3fv (location:GLUniformLocation, data:Array<Float>):Void {\n\tpublic function uniform3fvWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniform3fv (location, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniform3fv (location, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3i (location:GLUniformLocation, x:Int, y:Int, z:Int):Void {\n\t\t\n\t\t__context.uniform3i (location, x, y, z);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform3iv (location, v.toInt32Array (count * Int32Array.BYTES_PER_ELEMENT * 3));\n\t\t\n\t}\n\t\n\t\n\t//public function uniform3iv (location:GLUniformLocation, data:Int32Array):Void {\n\t//public function uniform3iv (location:GLUniformLocation, data:Int32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t//public function uniform3iv (location:GLUniformLocation, data:Array<Int>):Void {\n\tpublic function uniform3ivWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniform3iv (location, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniform3iv (location, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3ui (location:GLUniformLocation, v0:Int, v1:Int, v2:Int):Void {\n\t\t\n\t\t__context.uniform3ui (location, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform3uiv (location, v.toUInt32Array (count * UInt32Array.BYTES_PER_ELEMENT * 3));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3uivWEBGL (location:GLUniformLocation, data:UInt32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\t__context.uniform3uiv (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4f (location:GLUniformLocation, v0:Float, v1:Float, v2:Float, v3:Float):Void {\n\t\t\n\t\t__context.uniform4f (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform4fv (location, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 4));\n\t\t\n\t}\n\t\n\t\n\t//public function uniform4fv (location:GLUniformLocation, data:Float32Array):Void {\n\t//public function uniform4fv (location:GLUniformLocation, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t//public function uniform4fv (location:GLUniformLocation, data:Array<Float>):Void {\n\tpublic function uniform4fvWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniform4fv (location, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniform4fv (location, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4i (location:GLUniformLocation, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\t__context.uniform4i (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform4iv (location, v.toInt32Array (count * Int32Array.BYTES_PER_ELEMENT * 4));\n\t\t\n\t}\n\t\n\t\n\t//public function uniform4iv (location:GLUniformLocation, data:Int32Array):Void {\n\t//public function uniform4iv (location:GLUniformLocation, data:Int32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t//public function uniform4iv (location:GLUniformLocation, data:Array<Int>):Void {\n\tpublic function uniform4ivWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniform4iv (location, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniform4iv (location, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4ui (location:GLUniformLocation, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\t__context.uniform4ui (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.uniform4uiv (location, v.toUInt32Array (count * UInt32Array.BYTES_PER_ELEMENT * 4));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4uivWEBGL (location:GLUniformLocation, data:UInt32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\t__context.uniform4uiv (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformBlockBinding (program:GLProgram, uniformBlockIndex:Int, uniformBlockBinding:Int):Void {\n\t\t\n\t\t__context.uniformBlockBinding (program, uniformBlockIndex, uniformBlockBinding);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix2fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\t__context.uniformMatrix2fv (location, transpose, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 4));\n\t\t\n\t}\n\t\n\t\n\t//public function uniformMatrix2fv (location:GLUniformLocation, transpose:Bool, data:Float32Array):Void {\n\t//public function uniformMatrix2fv (location:GLUniformLocation, transpose:Bool, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t//public function uniformMatrix2fv (location:GLUniformLocation, transpose:Bool, data:Array<Float>):Void {\n\tpublic function uniformMatrix2fvWEBGL (location:GLUniformLocation, transpose:Bool, ?data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniformMatrix2fv (location, transpose, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniformMatrix2fv (location, transpose, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix2x3fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\t__context.uniformMatrix2x3fv (location, transpose, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 6));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix2x3fvWEBGL (location:GLUniformLocation, transpose:Bool, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\t__context.uniformMatrix2x3fv (location, transpose, data, srcOffset, srcLength);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix2x4fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\t__context.uniformMatrix2x4fv (location, transpose, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 8));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix2x4fvWEBGL (location:GLUniformLocation, transpose:Bool, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\t__context.uniformMatrix2x4fv (location, transpose, data, srcOffset, srcLength);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix3fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\t__context.uniformMatrix3fv (location, transpose, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 9));\n\t\t\n\t}\n\t\n\t\n\t//public function uniformMatrix3fv (location:GLUniformLocation, transpose:Bool, data:Float32Array):Void {\n\t//public function uniformMatrix3fv (location:GLUniformLocation, transpose:Bool, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t//public function uniformMatrix3fv (location:GLUniformLocation, transpose:Bool, data:Array<Float>):Void {\n\tpublic function uniformMatrix3fvWEBGL (location:GLUniformLocation, transpose:Bool, ?data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniformMatrix3fv (location, transpose, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniformMatrix3fv (location, transpose, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix3x2fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\t__context.uniformMatrix3x2fv (location, transpose, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 6));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix3x2fvWEBGL (location:GLUniformLocation, transpose:Bool, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\t__context.uniformMatrix3x2fv (location, transpose, data, srcOffset, srcLength);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix3x4fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\t__context.uniformMatrix3x4fv (location, transpose, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 12));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix3x4fvWEBGL (location:GLUniformLocation, transpose:Bool, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\t__context.uniformMatrix3x4fv (location, transpose, data, srcOffset, srcLength);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix4fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\t__context.uniformMatrix4fv (location, transpose, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 16));\n\t\t\n\t}\n\t\n\t\n\t//public function uniformMatrix4fv (location:GLUniformLocation, transpose:Bool, data:Float32Array):Void {\n\t//public function uniformMatrix4fv (location:GLUniformLocation, transpose:Bool, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t//public function uniformMatrix4fv (location:GLUniformLocation, transpose:Bool, data:Array<Float>):Void {\n\tpublic function uniformMatrix4fvWEBGL (location:GLUniformLocation, transpose:Bool, ?data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniformMatrix4fv (location, transpose, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniformMatrix4fv (location, transpose, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix4x2fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\t__context.uniformMatrix4x2fv (location, transpose, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 8));\n\t\t\n\t}\n\t\n\t\n\tpublic function uniformMatrix4x2fvWEBGL (location:GLUniformLocation, transpose:Bool, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tif (srcOffset != null) {\n\t\t\t\n\t\t\t__context.uniformMatrix4x2fv (location, transpose, data, srcOffset, srcLength);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__context.uniformMatrix4x2fv (location, transpose, data);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix4x3fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\t__context.uniformMatrix4x3fv (location, transpose, v.toFloat32Array (count * Float32Array.BYTES_PER_ELEMENT * 12));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix4x3fvWEBGL (location:GLUniformLocation, transpose:Bool, data:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\t__context.uniformMatrix4x3fv (location, transpose, data, srcOffset, srcLength);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unmapBuffer (target:Int):Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function useProgram (program:GLProgram):Void {\n\t\t\n\t\t__context.useProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function validateProgram (program:GLProgram):Void {\n\t\t\n\t\t__context.validateProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib1f (index:Int, v0:Float):Void {\n\t\t\n\t\t__context.vertexAttrib1f (index, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib1fv (index:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.vertexAttrib1fv (index, v.toFloat32Array ());\n\t\t\n\t}\n\t\n\t\n\t//public function vertexAttrib1fv (index:Int, v:Float32Array):Void {\n\t//public function vertexAttrib1fv (index:Int, v:Array<Float>):Void {\n\tpublic inline function vertexAttrib1fvWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\t__context.vertexAttrib1fv (index, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib2f (index:Int, v0:Float, v1:Float):Void {\n\t\t\n\t\t__context.vertexAttrib2f (index, v0, v1);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib2fv (index:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.vertexAttrib2fv (index, v.toFloat32Array ());\n\t\t\n\t}\n\t\n\t\n\t//public function vertexAttrib2fv (index:Int, v:Float32Array):Void {\n\t//public function vertexAttrib2fv (index:Int, v:Array<Float>):Void {\n\tpublic inline function vertexAttrib2fvWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\t__context.vertexAttrib2fv (index, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib3f (index:Int, v0:Float, v1:Float, v2:Float):Void {\n\t\t\n\t\t__context.vertexAttrib3f (index, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib3fv (index:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.vertexAttrib3fv (index, v.toFloat32Array ());\n\t\t\n\t}\n\t\n\t\n\t//public function vertexAttrib3fv (index:Int, v:Float32Array):Void {\n\t//public function vertexAttrib3fv (index:Int, v:Array<Float>):Void {\n\tpublic inline function vertexAttrib3fvWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\t__context.vertexAttrib3fv (index, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib4f (index:Int, v0:Float, v1:Float, v2:Float, v3:Float):Void {\n\t\t\n\t\t__context.vertexAttrib4f (index, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib4fv (index:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.vertexAttrib4fv (index, v.toFloat32Array ());\n\t\t\n\t}\n\t\n\t\n\t//public function vertexAttrib4fv (index:Int, v:Float32Array):Void {\n\t//public function vertexAttrib4fv (index:Int, v:Array<Float>):Void {\n\tpublic inline function vertexAttrib4fvWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\t__context.vertexAttrib4fv (index, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribDivisor (index:Int, divisor:Int):Void {\n\t\t\n\t\t__context.vertexAttribDivisor (index, divisor);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4i (index:Int, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\t__context.vertexAttribI4i (index, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4iv (index:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.vertexAttribI4iv (index, v.toInt32Array ());\n\t\t\n\t}\n\t\n\t\n\t//public function vertexAttribI4iv (index:Int, v:js.html.Int32Array) {\n\t//public function vertexAttribI4iv (index:Int, v:Array<Int>) {\n\tpublic inline function vertexAttribI4ivWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\t__context.vertexAttribI4iv (index, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4ui (index:Int, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\t__context.vertexAttribI4ui (index, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4uiv (index:Int, v:DataPointer):Void {\n\t\t\n\t\t__context.vertexAttribI4uiv (index, v.toUInt32Array ());\n\t\t\n\t}\n\t\n\t\n\t//public function vertexAttribI4iv (index:Int, v:js.html.Uint32Array) {\n\t//public function vertexAttribI4iv (index:Int, v:Array<Int>) {\n\tpublic inline function vertexAttribI4uivWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\t__context.vertexAttribI4uiv (index, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribIPointer (index:Int, size:Int, type:Int, stride:Int, offset:DataPointer):Void {\n\t\t\n\t\t__context.vertexAttribIPointer (index, size, type, stride, offset.toValue ());\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribPointer (index:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:DataPointer):Void {\n\t\t\n\t\t__context.vertexAttribPointer (index, size, type, normalized, stride, offset.toValue ());\n\t\t\n\t}\n\t\n\t\n\tpublic inline function viewport (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\t__context.viewport (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\t//public inline function waitSync (sync:GLSync, flags:Int, timeout:Dynamic):Void {\n\t//public inline function waitSync (sync:GLSync, flags:Int, timeout:Int64):Void {\n\tpublic inline function waitSync (sync:GLSync, flags:Int, timeout:Dynamic /*int64*/):Void {\n\t\t\n\t\t__context.waitSync (sync, flags, timeout);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tprivate function get_canvas ():CanvasElement {\n\t\t\n\t\treturn __context.canvas;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_drawingBufferHeight ():Int {\n\t\t\n\t\treturn __context.drawingBufferHeight;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_drawingBufferWidth ():Int {\n\t\t\n\t\treturn __context.drawingBufferWidth;\n\t\t\n\t}\n\t#end\n\t\n\t\n}\n\n\n@:native(\"WebGL2RenderingContext\")\nextern class WebGL2RenderingContext extends WebGLRenderingContext {\n\t\n\t\n\tpublic static inline var DEPTH_BUFFER_BIT:Int = 256;\n\tpublic static inline var STENCIL_BUFFER_BIT:Int = 1024;\n\tpublic static inline var COLOR_BUFFER_BIT:Int = 16384;\n\tpublic static inline var POINTS:Int = 0;\n\tpublic static inline var LINES:Int = 1;\n\tpublic static inline var LINE_LOOP:Int = 2;\n\tpublic static inline var LINE_STRIP:Int = 3;\n\tpublic static inline var TRIANGLES:Int = 4;\n\tpublic static inline var TRIANGLE_STRIP:Int = 5;\n\tpublic static inline var TRIANGLE_FAN:Int = 6;\n\tpublic static inline var ZERO:Int = 0;\n\tpublic static inline var ONE:Int = 1;\n\tpublic static inline var SRC_COLOR:Int = 768;\n\tpublic static inline var ONE_MINUS_SRC_COLOR:Int = 769;\n\tpublic static inline var SRC_ALPHA:Int = 770;\n\tpublic static inline var ONE_MINUS_SRC_ALPHA:Int = 771;\n\tpublic static inline var DST_ALPHA:Int = 772;\n\tpublic static inline var ONE_MINUS_DST_ALPHA:Int = 773;\n\tpublic static inline var DST_COLOR:Int = 774;\n\tpublic static inline var ONE_MINUS_DST_COLOR:Int = 775;\n\tpublic static inline var SRC_ALPHA_SATURATE:Int = 776;\n\tpublic static inline var FUNC_ADD:Int = 32774;\n\tpublic static inline var BLEND_EQUATION:Int = 32777;\n\tpublic static inline var BLEND_EQUATION_RGB:Int = 32777;\n\tpublic static inline var BLEND_EQUATION_ALPHA:Int = 34877;\n\tpublic static inline var FUNC_SUBTRACT:Int = 32778;\n\tpublic static inline var FUNC_REVERSE_SUBTRACT:Int = 32779;\n\tpublic static inline var BLEND_DST_RGB:Int = 32968;\n\tpublic static inline var BLEND_SRC_RGB:Int = 32969;\n\tpublic static inline var BLEND_DST_ALPHA:Int = 32970;\n\tpublic static inline var BLEND_SRC_ALPHA:Int = 32971;\n\tpublic static inline var CONSTANT_COLOR:Int = 32769;\n\tpublic static inline var ONE_MINUS_CONSTANT_COLOR:Int = 32770;\n\tpublic static inline var CONSTANT_ALPHA:Int = 32771;\n\tpublic static inline var ONE_MINUS_CONSTANT_ALPHA:Int = 32772;\n\tpublic static inline var BLEND_COLOR:Int = 32773;\n\tpublic static inline var ARRAY_BUFFER:Int = 34962;\n\tpublic static inline var ELEMENT_ARRAY_BUFFER:Int = 34963;\n\tpublic static inline var ARRAY_BUFFER_BINDING:Int = 34964;\n\tpublic static inline var ELEMENT_ARRAY_BUFFER_BINDING:Int = 34965;\n\tpublic static inline var STREAM_DRAW:Int = 35040;\n\tpublic static inline var STATIC_DRAW:Int = 35044;\n\tpublic static inline var DYNAMIC_DRAW:Int = 35048;\n\tpublic static inline var BUFFER_SIZE:Int = 34660;\n\tpublic static inline var BUFFER_USAGE:Int = 34661;\n\tpublic static inline var CURRENT_VERTEX_ATTRIB:Int = 34342;\n\tpublic static inline var FRONT:Int = 1028;\n\tpublic static inline var BACK:Int = 1029;\n\tpublic static inline var FRONT_AND_BACK:Int = 1032;\n\tpublic static inline var CULL_FACE:Int = 2884;\n\tpublic static inline var BLEND:Int = 3042;\n\tpublic static inline var DITHER:Int = 3024;\n\tpublic static inline var STENCIL_TEST:Int = 2960;\n\tpublic static inline var DEPTH_TEST:Int = 2929;\n\tpublic static inline var SCISSOR_TEST:Int = 3089;\n\tpublic static inline var POLYGON_OFFSET_FILL:Int = 32823;\n\tpublic static inline var SAMPLE_ALPHA_TO_COVERAGE:Int = 32926;\n\tpublic static inline var SAMPLE_COVERAGE:Int = 32928;\n\tpublic static inline var NO_ERROR:Int = 0;\n\tpublic static inline var INVALID_ENUM:Int = 1280;\n\tpublic static inline var INVALID_VALUE:Int = 1281;\n\tpublic static inline var INVALID_OPERATION:Int = 1282;\n\tpublic static inline var OUT_OF_MEMORY:Int = 1285;\n\tpublic static inline var CW:Int = 2304;\n\tpublic static inline var CCW:Int = 2305;\n\tpublic static inline var LINE_WIDTH:Int = 2849;\n\tpublic static inline var ALIASED_POINT_SIZE_RANGE:Int = 33901;\n\tpublic static inline var ALIASED_LINE_WIDTH_RANGE:Int = 33902;\n\tpublic static inline var CULL_FACE_MODE:Int = 2885;\n\tpublic static inline var FRONT_FACE:Int = 2886;\n\tpublic static inline var DEPTH_RANGE:Int = 2928;\n\tpublic static inline var DEPTH_WRITEMASK:Int = 2930;\n\tpublic static inline var DEPTH_CLEAR_VALUE:Int = 2931;\n\tpublic static inline var DEPTH_FUNC:Int = 2932;\n\tpublic static inline var STENCIL_CLEAR_VALUE:Int = 2961;\n\tpublic static inline var STENCIL_FUNC:Int = 2962;\n\tpublic static inline var STENCIL_FAIL:Int = 2964;\n\tpublic static inline var STENCIL_PASS_DEPTH_FAIL:Int = 2965;\n\tpublic static inline var STENCIL_PASS_DEPTH_PASS:Int = 2966;\n\tpublic static inline var STENCIL_REF:Int = 2967;\n\tpublic static inline var STENCIL_VALUE_MASK:Int = 2963;\n\tpublic static inline var STENCIL_WRITEMASK:Int = 2968;\n\tpublic static inline var STENCIL_BACK_FUNC:Int = 34816;\n\tpublic static inline var STENCIL_BACK_FAIL:Int = 34817;\n\tpublic static inline var STENCIL_BACK_PASS_DEPTH_FAIL:Int = 34818;\n\tpublic static inline var STENCIL_BACK_PASS_DEPTH_PASS:Int = 34819;\n\tpublic static inline var STENCIL_BACK_REF:Int = 36003;\n\tpublic static inline var STENCIL_BACK_VALUE_MASK:Int = 36004;\n\tpublic static inline var STENCIL_BACK_WRITEMASK:Int = 36005;\n\tpublic static inline var VIEWPORT:Int = 2978;\n\tpublic static inline var SCISSOR_BOX:Int = 3088;\n\tpublic static inline var COLOR_CLEAR_VALUE:Int = 3106;\n\tpublic static inline var COLOR_WRITEMASK:Int = 3107;\n\tpublic static inline var UNPACK_ALIGNMENT:Int = 3317;\n\tpublic static inline var PACK_ALIGNMENT:Int = 3333;\n\tpublic static inline var MAX_TEXTURE_SIZE:Int = 3379;\n\tpublic static inline var MAX_VIEWPORT_DIMS:Int = 3386;\n\tpublic static inline var SUBPIXEL_BITS:Int = 3408;\n\tpublic static inline var RED_BITS:Int = 3410;\n\tpublic static inline var GREEN_BITS:Int = 3411;\n\tpublic static inline var BLUE_BITS:Int = 3412;\n\tpublic static inline var ALPHA_BITS:Int = 3413;\n\tpublic static inline var DEPTH_BITS:Int = 3414;\n\tpublic static inline var STENCIL_BITS:Int = 3415;\n\tpublic static inline var POLYGON_OFFSET_UNITS:Int = 10752;\n\tpublic static inline var POLYGON_OFFSET_FACTOR:Int = 32824;\n\tpublic static inline var TEXTURE_BINDING_2D:Int = 32873;\n\tpublic static inline var SAMPLE_BUFFERS:Int = 32936;\n\tpublic static inline var SAMPLES:Int = 32937;\n\tpublic static inline var SAMPLE_COVERAGE_VALUE:Int = 32938;\n\tpublic static inline var SAMPLE_COVERAGE_INVERT:Int = 32939;\n\tpublic static inline var COMPRESSED_TEXTURE_FORMATS:Int = 34467;\n\tpublic static inline var DONT_CARE:Int = 4352;\n\tpublic static inline var FASTEST:Int = 4353;\n\tpublic static inline var NICEST:Int = 4354;\n\tpublic static inline var GENERATE_MIPMAP_HINT:Int = 33170;\n\tpublic static inline var BYTE:Int = 5120;\n\tpublic static inline var UNSIGNED_BYTE:Int = 5121;\n\tpublic static inline var SHORT:Int = 5122;\n\tpublic static inline var UNSIGNED_SHORT:Int = 5123;\n\tpublic static inline var INT:Int = 5124;\n\tpublic static inline var UNSIGNED_INT:Int = 5125;\n\tpublic static inline var FLOAT:Int = 5126;\n\tpublic static inline var DEPTH_COMPONENT:Int = 6402;\n\tpublic static inline var ALPHA:Int = 6406;\n\tpublic static inline var RGB:Int = 6407;\n\tpublic static inline var RGBA:Int = 6408;\n\tpublic static inline var LUMINANCE:Int = 6409;\n\tpublic static inline var LUMINANCE_ALPHA:Int = 6410;\n\tpublic static inline var UNSIGNED_SHORT_4_4_4_4:Int = 32819;\n\tpublic static inline var UNSIGNED_SHORT_5_5_5_1:Int = 32820;\n\tpublic static inline var UNSIGNED_SHORT_5_6_5:Int = 33635;\n\tpublic static inline var FRAGMENT_SHADER:Int = 35632;\n\tpublic static inline var VERTEX_SHADER:Int = 35633;\n\tpublic static inline var MAX_VERTEX_ATTRIBS:Int = 34921;\n\tpublic static inline var MAX_VERTEX_UNIFORM_VECTORS:Int = 36347;\n\tpublic static inline var MAX_VARYING_VECTORS:Int = 36348;\n\tpublic static inline var MAX_COMBINED_TEXTURE_IMAGE_UNITS:Int = 35661;\n\tpublic static inline var MAX_VERTEX_TEXTURE_IMAGE_UNITS:Int = 35660;\n\tpublic static inline var MAX_TEXTURE_IMAGE_UNITS:Int = 34930;\n\tpublic static inline var MAX_FRAGMENT_UNIFORM_VECTORS:Int = 36349;\n\tpublic static inline var SHADER_TYPE:Int = 35663;\n\tpublic static inline var DELETE_STATUS:Int = 35712;\n\tpublic static inline var LINK_STATUS:Int = 35714;\n\tpublic static inline var VALIDATE_STATUS:Int = 35715;\n\tpublic static inline var ATTACHED_SHADERS:Int = 35717;\n\tpublic static inline var ACTIVE_UNIFORMS:Int = 35718;\n\tpublic static inline var ACTIVE_ATTRIBUTES:Int = 35721;\n\tpublic static inline var SHADING_LANGUAGE_VERSION:Int = 35724;\n\tpublic static inline var CURRENT_PROGRAM:Int = 35725;\n\tpublic static inline var NEVER:Int = 512;\n\tpublic static inline var LESS:Int = 513;\n\tpublic static inline var EQUAL:Int = 514;\n\tpublic static inline var LEQUAL:Int = 515;\n\tpublic static inline var GREATER:Int = 516;\n\tpublic static inline var NOTEQUAL:Int = 517;\n\tpublic static inline var GEQUAL:Int = 518;\n\tpublic static inline var ALWAYS:Int = 519;\n\tpublic static inline var KEEP:Int = 7680;\n\tpublic static inline var REPLACE:Int = 7681;\n\tpublic static inline var INCR:Int = 7682;\n\tpublic static inline var DECR:Int = 7683;\n\tpublic static inline var INVERT:Int = 5386;\n\tpublic static inline var INCR_WRAP:Int = 34055;\n\tpublic static inline var DECR_WRAP:Int = 34056;\n\tpublic static inline var VENDOR:Int = 7936;\n\tpublic static inline var RENDERER:Int = 7937;\n\tpublic static inline var VERSION:Int = 7938;\n\tpublic static inline var NEAREST:Int = 9728;\n\tpublic static inline var LINEAR:Int = 9729;\n\tpublic static inline var NEAREST_MIPMAP_NEAREST:Int = 9984;\n\tpublic static inline var LINEAR_MIPMAP_NEAREST:Int = 9985;\n\tpublic static inline var NEAREST_MIPMAP_LINEAR:Int = 9986;\n\tpublic static inline var LINEAR_MIPMAP_LINEAR:Int = 9987;\n\tpublic static inline var TEXTURE_MAG_FILTER:Int = 10240;\n\tpublic static inline var TEXTURE_MIN_FILTER:Int = 10241;\n\tpublic static inline var TEXTURE_WRAP_S:Int = 10242;\n\tpublic static inline var TEXTURE_WRAP_T:Int = 10243;\n\tpublic static inline var TEXTURE_2D:Int = 3553;\n\tpublic static inline var TEXTURE:Int = 5890;\n\tpublic static inline var TEXTURE_CUBE_MAP:Int = 34067;\n\tpublic static inline var TEXTURE_BINDING_CUBE_MAP:Int = 34068;\n\tpublic static inline var TEXTURE_CUBE_MAP_POSITIVE_X:Int = 34069;\n\tpublic static inline var TEXTURE_CUBE_MAP_NEGATIVE_X:Int = 34070;\n\tpublic static inline var TEXTURE_CUBE_MAP_POSITIVE_Y:Int = 34071;\n\tpublic static inline var TEXTURE_CUBE_MAP_NEGATIVE_Y:Int = 34072;\n\tpublic static inline var TEXTURE_CUBE_MAP_POSITIVE_Z:Int = 34073;\n\tpublic static inline var TEXTURE_CUBE_MAP_NEGATIVE_Z:Int = 34074;\n\tpublic static inline var MAX_CUBE_MAP_TEXTURE_SIZE:Int = 34076;\n\tpublic static inline var TEXTURE0:Int = 33984;\n\tpublic static inline var TEXTURE1:Int = 33985;\n\tpublic static inline var TEXTURE2:Int = 33986;\n\tpublic static inline var TEXTURE3:Int = 33987;\n\tpublic static inline var TEXTURE4:Int = 33988;\n\tpublic static inline var TEXTURE5:Int = 33989;\n\tpublic static inline var TEXTURE6:Int = 33990;\n\tpublic static inline var TEXTURE7:Int = 33991;\n\tpublic static inline var TEXTURE8:Int = 33992;\n\tpublic static inline var TEXTURE9:Int = 33993;\n\tpublic static inline var TEXTURE10:Int = 33994;\n\tpublic static inline var TEXTURE11:Int = 33995;\n\tpublic static inline var TEXTURE12:Int = 33996;\n\tpublic static inline var TEXTURE13:Int = 33997;\n\tpublic static inline var TEXTURE14:Int = 33998;\n\tpublic static inline var TEXTURE15:Int = 33999;\n\tpublic static inline var TEXTURE16:Int = 34000;\n\tpublic static inline var TEXTURE17:Int = 34001;\n\tpublic static inline var TEXTURE18:Int = 34002;\n\tpublic static inline var TEXTURE19:Int = 34003;\n\tpublic static inline var TEXTURE20:Int = 34004;\n\tpublic static inline var TEXTURE21:Int = 34005;\n\tpublic static inline var TEXTURE22:Int = 34006;\n\tpublic static inline var TEXTURE23:Int = 34007;\n\tpublic static inline var TEXTURE24:Int = 34008;\n\tpublic static inline var TEXTURE25:Int = 34009;\n\tpublic static inline var TEXTURE26:Int = 34010;\n\tpublic static inline var TEXTURE27:Int = 34011;\n\tpublic static inline var TEXTURE28:Int = 34012;\n\tpublic static inline var TEXTURE29:Int = 34013;\n\tpublic static inline var TEXTURE30:Int = 34014;\n\tpublic static inline var TEXTURE31:Int = 34015;\n\tpublic static inline var ACTIVE_TEXTURE:Int = 34016;\n\tpublic static inline var REPEAT:Int = 10497;\n\tpublic static inline var CLAMP_TO_EDGE:Int = 33071;\n\tpublic static inline var MIRRORED_REPEAT:Int = 33648;\n\tpublic static inline var FLOAT_VEC2:Int = 35664;\n\tpublic static inline var FLOAT_VEC3:Int = 35665;\n\tpublic static inline var FLOAT_VEC4:Int = 35666;\n\tpublic static inline var INT_VEC2:Int = 35667;\n\tpublic static inline var INT_VEC3:Int = 35668;\n\tpublic static inline var INT_VEC4:Int = 35669;\n\tpublic static inline var BOOL:Int = 35670;\n\tpublic static inline var BOOL_VEC2:Int = 35671;\n\tpublic static inline var BOOL_VEC3:Int = 35672;\n\tpublic static inline var BOOL_VEC4:Int = 35673;\n\tpublic static inline var FLOAT_MAT2:Int = 35674;\n\tpublic static inline var FLOAT_MAT3:Int = 35675;\n\tpublic static inline var FLOAT_MAT4:Int = 35676;\n\tpublic static inline var SAMPLER_2D:Int = 35678;\n\tpublic static inline var SAMPLER_CUBE:Int = 35680;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_ENABLED:Int = 34338;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_SIZE:Int = 34339;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_STRIDE:Int = 34340;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_TYPE:Int = 34341;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_NORMALIZED:Int = 34922;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_POINTER:Int = 34373;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:Int = 34975;\n\tpublic static inline var IMPLEMENTATION_COLOR_READ_TYPE:Int = 35738;\n\tpublic static inline var IMPLEMENTATION_COLOR_READ_FORMAT:Int = 35739;\n\tpublic static inline var COMPILE_STATUS:Int = 35713;\n\tpublic static inline var LOW_FLOAT:Int = 36336;\n\tpublic static inline var MEDIUM_FLOAT:Int = 36337;\n\tpublic static inline var HIGH_FLOAT:Int = 36338;\n\tpublic static inline var LOW_INT:Int = 36339;\n\tpublic static inline var MEDIUM_INT:Int = 36340;\n\tpublic static inline var HIGH_INT:Int = 36341;\n\tpublic static inline var FRAMEBUFFER:Int = 36160;\n\tpublic static inline var RENDERBUFFER:Int = 36161;\n\tpublic static inline var RGBA4:Int = 32854;\n\tpublic static inline var RGB5_A1:Int = 32855;\n\tpublic static inline var RGB565:Int = 36194;\n\tpublic static inline var DEPTH_COMPONENT16:Int = 33189;\n\tpublic static inline var STENCIL_INDEX:Int = 6401;\n\tpublic static inline var STENCIL_INDEX8:Int = 36168;\n\tpublic static inline var DEPTH_STENCIL:Int = 34041;\n\tpublic static inline var RENDERBUFFER_WIDTH:Int = 36162;\n\tpublic static inline var RENDERBUFFER_HEIGHT:Int = 36163;\n\tpublic static inline var RENDERBUFFER_INTERNAL_FORMAT:Int = 36164;\n\tpublic static inline var RENDERBUFFER_RED_SIZE:Int = 36176;\n\tpublic static inline var RENDERBUFFER_GREEN_SIZE:Int = 36177;\n\tpublic static inline var RENDERBUFFER_BLUE_SIZE:Int = 36178;\n\tpublic static inline var RENDERBUFFER_ALPHA_SIZE:Int = 36179;\n\tpublic static inline var RENDERBUFFER_DEPTH_SIZE:Int = 36180;\n\tpublic static inline var RENDERBUFFER_STENCIL_SIZE:Int = 36181;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:Int = 36048;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:Int = 36049;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:Int = 36050;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:Int = 36051;\n\tpublic static inline var COLOR_ATTACHMENT0:Int = 36064;\n\tpublic static inline var DEPTH_ATTACHMENT:Int = 36096;\n\tpublic static inline var STENCIL_ATTACHMENT:Int = 36128;\n\tpublic static inline var DEPTH_STENCIL_ATTACHMENT:Int = 33306;\n\tpublic static inline var NONE:Int = 0;\n\tpublic static inline var FRAMEBUFFER_COMPLETE:Int = 36053;\n\tpublic static inline var FRAMEBUFFER_INCOMPLETE_ATTACHMENT:Int = 36054;\n\tpublic static inline var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:Int = 36055;\n\tpublic static inline var FRAMEBUFFER_INCOMPLETE_DIMENSIONS:Int = 36057;\n\tpublic static inline var FRAMEBUFFER_UNSUPPORTED:Int = 36061;\n\tpublic static inline var FRAMEBUFFER_BINDING:Int = 36006;\n\tpublic static inline var RENDERBUFFER_BINDING:Int = 36007;\n\tpublic static inline var MAX_RENDERBUFFER_SIZE:Int = 34024;\n\tpublic static inline var INVALID_FRAMEBUFFER_OPERATION:Int = 1286;\n\tpublic static inline var UNPACK_FLIP_Y_WEBGL:Int = 37440;\n\tpublic static inline var UNPACK_PREMULTIPLY_ALPHA_WEBGL:Int = 37441;\n\tpublic static inline var CONTEXT_LOST_WEBGL:Int = 37442;\n\tpublic static inline var UNPACK_COLORSPACE_CONVERSION_WEBGL:Int = 37443;\n\tpublic static inline var BROWSER_DEFAULT_WEBGL:Int = 37444;\n\t\n\tpublic static inline var READ_BUFFER = 0x0C02;\n\tpublic static inline var UNPACK_ROW_LENGTH = 0x0CF2;\n\tpublic static inline var UNPACK_SKIP_ROWS = 0x0CF3;\n\tpublic static inline var UNPACK_SKIP_PIXELS = 0x0CF4;\n\tpublic static inline var PACK_ROW_LENGTH = 0x0D02;\n\tpublic static inline var PACK_SKIP_ROWS = 0x0D03;\n\tpublic static inline var PACK_SKIP_PIXELS = 0x0D04;\n\tpublic static inline var TEXTURE_BINDING_3D = 0x806A;\n\tpublic static inline var UNPACK_SKIP_IMAGES = 0x806D;\n\tpublic static inline var UNPACK_IMAGE_HEIGHT = 0x806E;\n\tpublic static inline var MAX_3D_TEXTURE_SIZE = 0x8073;\n\tpublic static inline var MAX_ELEMENTS_VERTICES = 0x80E8;\n\tpublic static inline var MAX_ELEMENTS_INDICES = 0x80E9;\n\tpublic static inline var MAX_TEXTURE_LOD_BIAS = 0x84FD;\n\tpublic static inline var MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;\n\tpublic static inline var MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;\n\tpublic static inline var MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;\n\tpublic static inline var MIN_PROGRAM_TEXEL_OFFSET = 0x8904;\n\tpublic static inline var MAX_PROGRAM_TEXEL_OFFSET = 0x8905;\n\tpublic static inline var MAX_VARYING_COMPONENTS = 0x8B4B;\n\tpublic static inline var FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;\n\tpublic static inline var RASTERIZER_DISCARD = 0x8C89;\n\tpublic static inline var VERTEX_ARRAY_BINDING = 0x85B5;\n\tpublic static inline var MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;\n\tpublic static inline var MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;\n\tpublic static inline var MAX_SERVER_WAIT_TIMEOUT = 0x9111;\n\tpublic static inline var MAX_ELEMENT_INDEX = 0x8D6B;\n\t\n\tpublic static inline var RED = 0x1903;\n\tpublic static inline var RGB8 = 0x8051;\n\tpublic static inline var RGBA8 = 0x8058;\n\tpublic static inline var RGB10_A2 = 0x8059;\n\tpublic static inline var TEXTURE_3D = 0x806F;\n\tpublic static inline var TEXTURE_WRAP_R = 0x8072;\n\tpublic static inline var TEXTURE_MIN_LOD = 0x813A;\n\tpublic static inline var TEXTURE_MAX_LOD = 0x813B;\n\tpublic static inline var TEXTURE_BASE_LEVEL = 0x813C;\n\tpublic static inline var TEXTURE_MAX_LEVEL = 0x813D;\n\tpublic static inline var TEXTURE_COMPARE_MODE = 0x884C;\n\tpublic static inline var TEXTURE_COMPARE_FUNC = 0x884D;\n\tpublic static inline var SRGB = 0x8C40;\n\tpublic static inline var SRGB8 = 0x8C41;\n\tpublic static inline var SRGB8_ALPHA8 = 0x8C43;\n\tpublic static inline var COMPARE_REF_TO_TEXTURE = 0x884E;\n\tpublic static inline var RGBA32F = 0x8814;\n\tpublic static inline var RGB32F = 0x8815;\n\tpublic static inline var RGBA16F = 0x881A;\n\tpublic static inline var RGB16F = 0x881B;\n\tpublic static inline var TEXTURE_2D_ARRAY = 0x8C1A;\n\tpublic static inline var TEXTURE_BINDING_2D_ARRAY = 0x8C1D;\n\tpublic static inline var R11F_G11F_B10F = 0x8C3A;\n\tpublic static inline var RGB9_E5 = 0x8C3D;\n\tpublic static inline var RGBA32UI = 0x8D70;\n\tpublic static inline var RGB32UI = 0x8D71;\n\tpublic static inline var RGBA16UI = 0x8D76;\n\tpublic static inline var RGB16UI = 0x8D77;\n\tpublic static inline var RGBA8UI = 0x8D7C;\n\tpublic static inline var RGB8UI = 0x8D7D;\n\tpublic static inline var RGBA32I = 0x8D82;\n\tpublic static inline var RGB32I = 0x8D83;\n\tpublic static inline var RGBA16I = 0x8D88;\n\tpublic static inline var RGB16I = 0x8D89;\n\tpublic static inline var RGBA8I = 0x8D8E;\n\tpublic static inline var RGB8I = 0x8D8F;\n\tpublic static inline var RED_INTEGER = 0x8D94;\n\tpublic static inline var RGB_INTEGER = 0x8D98;\n\tpublic static inline var RGBA_INTEGER = 0x8D99;\n\tpublic static inline var R8 = 0x8229;\n\tpublic static inline var RG8 = 0x822B;\n\tpublic static inline var R16F = 0x822D;\n\tpublic static inline var R32F = 0x822E;\n\tpublic static inline var RG16F = 0x822F;\n\tpublic static inline var RG32F = 0x8230;\n\tpublic static inline var R8I = 0x8231;\n\tpublic static inline var R8UI = 0x8232;\n\tpublic static inline var R16I = 0x8233;\n\tpublic static inline var R16UI = 0x8234;\n\tpublic static inline var R32I = 0x8235;\n\tpublic static inline var R32UI = 0x8236;\n\tpublic static inline var RG8I = 0x8237;\n\tpublic static inline var RG8UI = 0x8238;\n\tpublic static inline var RG16I = 0x8239;\n\tpublic static inline var RG16UI = 0x823A;\n\tpublic static inline var RG32I = 0x823B;\n\tpublic static inline var RG32UI = 0x823C;\n\tpublic static inline var R8_SNORM = 0x8F94;\n\tpublic static inline var RG8_SNORM = 0x8F95;\n\tpublic static inline var RGB8_SNORM = 0x8F96;\n\tpublic static inline var RGBA8_SNORM = 0x8F97;\n\tpublic static inline var RGB10_A2UI = 0x906F;\n\tpublic static inline var TEXTURE_IMMUTABLE_FORMAT = 0x912F;\n\tpublic static inline var TEXTURE_IMMUTABLE_LEVELS = 0x82DF;\n\t\n\tpublic static inline var UNSIGNED_INT_2_10_10_10_REV = 0x8368;\n\tpublic static inline var UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\n\tpublic static inline var UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\n\tpublic static inline var FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\n\tpublic static inline var UNSIGNED_INT_24_8 = 0x84FA;\n\tpublic static inline var HALF_FLOAT = 0x140B;\n\tpublic static inline var RG = 0x8227;\n\tpublic static inline var RG_INTEGER = 0x8228;\n\tpublic static inline var INT_2_10_10_10_REV = 0x8D9F;\n\t\n\tpublic static inline var CURRENT_QUERY = 0x8865;\n\tpublic static inline var QUERY_RESULT = 0x8866;\n\tpublic static inline var QUERY_RESULT_AVAILABLE = 0x8867;\n\tpublic static inline var ANY_SAMPLES_PASSED = 0x8C2F;\n\tpublic static inline var ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A;\n\t\n\tpublic static inline var MAX_DRAW_BUFFERS = 0x8824;\n\tpublic static inline var DRAW_BUFFER0 = 0x8825;\n\tpublic static inline var DRAW_BUFFER1 = 0x8826;\n\tpublic static inline var DRAW_BUFFER2 = 0x8827;\n\tpublic static inline var DRAW_BUFFER3 = 0x8828;\n\tpublic static inline var DRAW_BUFFER4 = 0x8829;\n\tpublic static inline var DRAW_BUFFER5 = 0x882A;\n\tpublic static inline var DRAW_BUFFER6 = 0x882B;\n\tpublic static inline var DRAW_BUFFER7 = 0x882C;\n\tpublic static inline var DRAW_BUFFER8 = 0x882D;\n\tpublic static inline var DRAW_BUFFER9 = 0x882E;\n\tpublic static inline var DRAW_BUFFER10 = 0x882F;\n\tpublic static inline var DRAW_BUFFER11 = 0x8830;\n\tpublic static inline var DRAW_BUFFER12 = 0x8831;\n\tpublic static inline var DRAW_BUFFER13 = 0x8832;\n\tpublic static inline var DRAW_BUFFER14 = 0x8833;\n\tpublic static inline var DRAW_BUFFER15 = 0x8834;\n\tpublic static inline var MAX_COLOR_ATTACHMENTS = 0x8CDF;\n\tpublic static inline var COLOR_ATTACHMENT1 = 0x8CE1;\n\tpublic static inline var COLOR_ATTACHMENT2 = 0x8CE2;\n\tpublic static inline var COLOR_ATTACHMENT3 = 0x8CE3;\n\tpublic static inline var COLOR_ATTACHMENT4 = 0x8CE4;\n\tpublic static inline var COLOR_ATTACHMENT5 = 0x8CE5;\n\tpublic static inline var COLOR_ATTACHMENT6 = 0x8CE6;\n\tpublic static inline var COLOR_ATTACHMENT7 = 0x8CE7;\n\tpublic static inline var COLOR_ATTACHMENT8 = 0x8CE8;\n\tpublic static inline var COLOR_ATTACHMENT9 = 0x8CE9;\n\tpublic static inline var COLOR_ATTACHMENT10 = 0x8CEA;\n\tpublic static inline var COLOR_ATTACHMENT11 = 0x8CEB;\n\tpublic static inline var COLOR_ATTACHMENT12 = 0x8CEC;\n\tpublic static inline var COLOR_ATTACHMENT13 = 0x8CED;\n\tpublic static inline var COLOR_ATTACHMENT14 = 0x8CEE;\n\tpublic static inline var COLOR_ATTACHMENT15 = 0x8CEF;\n\t\n\tpublic static inline var SAMPLER_3D = 0x8B5F;\n\tpublic static inline var SAMPLER_2D_SHADOW = 0x8B62;\n\tpublic static inline var SAMPLER_2D_ARRAY = 0x8DC1;\n\tpublic static inline var SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\n\tpublic static inline var SAMPLER_CUBE_SHADOW = 0x8DC5;\n\tpublic static inline var INT_SAMPLER_2D = 0x8DCA;\n\tpublic static inline var INT_SAMPLER_3D = 0x8DCB;\n\tpublic static inline var INT_SAMPLER_CUBE = 0x8DCC;\n\tpublic static inline var INT_SAMPLER_2D_ARRAY = 0x8DCF;\n\tpublic static inline var UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\n\tpublic static inline var UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\n\tpublic static inline var UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\n\tpublic static inline var UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\tpublic static inline var MAX_SAMPLES = 0x8D57;\n\tpublic static inline var SAMPLER_BINDING = 0x8919;\n\t\n\tpublic static inline var PIXEL_PACK_BUFFER = 0x88EB;\n\tpublic static inline var PIXEL_UNPACK_BUFFER = 0x88EC;\n\tpublic static inline var PIXEL_PACK_BUFFER_BINDING = 0x88ED;\n\tpublic static inline var PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;\n\tpublic static inline var COPY_READ_BUFFER = 0x8F36;\n\tpublic static inline var COPY_WRITE_BUFFER = 0x8F37;\n\tpublic static inline var COPY_READ_BUFFER_BINDING = 0x8F36;\n\tpublic static inline var COPY_WRITE_BUFFER_BINDING = 0x8F37;\n\t\n\tpublic static inline var FLOAT_MAT2x3 = 0x8B65;\n\tpublic static inline var FLOAT_MAT2x4 = 0x8B66;\n\tpublic static inline var FLOAT_MAT3x2 = 0x8B67;\n\tpublic static inline var FLOAT_MAT3x4 = 0x8B68;\n\tpublic static inline var FLOAT_MAT4x2 = 0x8B69;\n\tpublic static inline var FLOAT_MAT4x3 = 0x8B6A;\n\tpublic static inline var UNSIGNED_INT_VEC2 = 0x8DC6;\n\tpublic static inline var UNSIGNED_INT_VEC3 = 0x8DC7;\n\tpublic static inline var UNSIGNED_INT_VEC4 = 0x8DC8;\n\tpublic static inline var UNSIGNED_NORMALIZED = 0x8C17;\n\tpublic static inline var SIGNED_NORMALIZED = 0x8F9C;\n\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;\n\t\n\tpublic static inline var TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;\n\tpublic static inline var MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;\n\tpublic static inline var TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;\n\tpublic static inline var TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;\n\tpublic static inline var TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;\n\tpublic static inline var TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;\n\tpublic static inline var MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;\n\tpublic static inline var MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;\n\tpublic static inline var INTERLEAVED_ATTRIBS = 0x8C8C;\n\tpublic static inline var SEPARATE_ATTRIBS = 0x8C8D;\n\tpublic static inline var TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;\n\tpublic static inline var TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;\n\tpublic static inline var TRANSFORM_FEEDBACK = 0x8E22;\n\tpublic static inline var TRANSFORM_FEEDBACK_PAUSED = 0x8E23;\n\tpublic static inline var TRANSFORM_FEEDBACK_ACTIVE = 0x8E24;\n\tpublic static inline var TRANSFORM_FEEDBACK_BINDING = 0x8E25;\n\t\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;\n\tpublic static inline var FRAMEBUFFER_DEFAULT = 0x8218;\n\tpublic static inline var DEPTH24_STENCIL8 = 0x88F0;\n\tpublic static inline var DRAW_FRAMEBUFFER_BINDING = 0x8CA6;\n\tpublic static inline var READ_FRAMEBUFFER = 0x8CA8;\n\tpublic static inline var DRAW_FRAMEBUFFER = 0x8CA9;\n\tpublic static inline var READ_FRAMEBUFFER_BINDING = 0x8CAA;\n\tpublic static inline var RENDERBUFFER_SAMPLES = 0x8CAB;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4;\n\tpublic static inline var FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;\n\t\n\tpublic static inline var UNIFORM_BUFFER = 0x8A11;\n\tpublic static inline var UNIFORM_BUFFER_BINDING = 0x8A28;\n\tpublic static inline var UNIFORM_BUFFER_START = 0x8A29;\n\tpublic static inline var UNIFORM_BUFFER_SIZE = 0x8A2A;\n\tpublic static inline var MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;\n\tpublic static inline var MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;\n\tpublic static inline var MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;\n\tpublic static inline var MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;\n\tpublic static inline var MAX_UNIFORM_BLOCK_SIZE = 0x8A30;\n\tpublic static inline var MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;\n\tpublic static inline var MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;\n\tpublic static inline var UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;\n\tpublic static inline var ACTIVE_UNIFORM_BLOCKS = 0x8A36;\n\tpublic static inline var UNIFORM_TYPE = 0x8A37;\n\tpublic static inline var UNIFORM_SIZE = 0x8A38;\n\tpublic static inline var UNIFORM_BLOCK_INDEX = 0x8A3A;\n\tpublic static inline var UNIFORM_OFFSET = 0x8A3B;\n\tpublic static inline var UNIFORM_ARRAY_STRIDE = 0x8A3C;\n\tpublic static inline var UNIFORM_MATRIX_STRIDE = 0x8A3D;\n\tpublic static inline var UNIFORM_IS_ROW_MAJOR = 0x8A3E;\n\tpublic static inline var UNIFORM_BLOCK_BINDING = 0x8A3F;\n\tpublic static inline var UNIFORM_BLOCK_DATA_SIZE = 0x8A40;\n\tpublic static inline var UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;\n\tpublic static inline var UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;\n\tpublic static inline var UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;\n\tpublic static inline var UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;\n\t\n\tpublic static inline var OBJECT_TYPE = 0x9112;\n\tpublic static inline var SYNC_CONDITION = 0x9113;\n\tpublic static inline var SYNC_STATUS = 0x9114;\n\tpublic static inline var SYNC_FLAGS = 0x9115;\n\tpublic static inline var SYNC_FENCE = 0x9116;\n\tpublic static inline var SYNC_GPU_COMMANDS_COMPLETE = 0x9117;\n\tpublic static inline var UNSIGNALED = 0x9118;\n\tpublic static inline var SIGNALED = 0x9119;\n\tpublic static inline var ALREADY_SIGNALED = 0x911A;\n\tpublic static inline var TIMEOUT_EXPIRED = 0x911B;\n\tpublic static inline var CONDITION_SATISFIED = 0x911C;\n\tpublic static inline var WAIT_FAILED = 0x911D;\n\tpublic static inline var SYNC_FLUSH_COMMANDS_BIT = 0x00000001;\n\t\n\tpublic static inline var COLOR = 0x1800;\n\tpublic static inline var DEPTH = 0x1801;\n\tpublic static inline var STENCIL = 0x1802;\n\tpublic static inline var MIN = 0x8007;\n\tpublic static inline var MAX = 0x8008;\n\tpublic static inline var DEPTH_COMPONENT24 = 0x81A6;\n\tpublic static inline var STREAM_READ = 0x88E1;\n\tpublic static inline var STREAM_COPY = 0x88E2;\n\tpublic static inline var STATIC_READ = 0x88E5;\n\tpublic static inline var STATIC_COPY = 0x88E6;\n\tpublic static inline var DYNAMIC_READ = 0x88E9;\n\tpublic static inline var DYNAMIC_COPY = 0x88EA;\n\tpublic static inline var DEPTH_COMPONENT32F = 0x8CAC;\n\tpublic static inline var DEPTH32F_STENCIL8 = 0x8CAD;\n\tpublic static inline var INVALID_INDEX = 0xFFFFFFFF;\n\tpublic static inline var TIMEOUT_IGNORED = -1;\n\tpublic static inline var MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 0x9247;\n\t\n\tpublic function beginQuery (target:Int, query:GLQuery):Void;\n\tpublic function beginTransformFeedback (primitiveNode:Int):Void;\n\tpublic function bindBufferBase (target:Int, index:Int, buffer:GLBuffer):Void;\n\tpublic function bindBufferRange (target:Int, index:Int, buffer:GLBuffer, offset:DataPointer, size:DataPointer):Void;\n\tpublic function bindSampler (unit:Int, sampler:GLSampler):Void;\n\tpublic function bindTransformFeedback (target:Int, transformFeedback:GLTransformFeedback):Void;\n\tpublic function bindVertexArray (vertexArray:GLVertexArrayObject):Void;\n\tpublic function blitFramebuffer (srcX0:Int, srcY0:Int, srcX1:Int, srcY1:Int, dstX0:Int, dstY0:Int, dstX1:Int, dstY1:Int, mask:Int, filter:Int):Void;\n\t\n\t@:overload(function (target:Int, data:js.html.ArrayBufferView, usage:Int, srcOffset:Int, ?length:Int):Void {})\n\t@:overload(function (target:Int, size:Int, usage:Int):Void {})\n\t@:overload(function (target:Int, data:js.html.ArrayBufferView, usage:Int):Void {})\n\t@:overload(function (target:Int, data:js.html.ArrayBuffer, usage:Int):Void {})\n\toverride function bufferData (target:Int, data:Dynamic /*MISSING SharedArrayBuffer*/, usage:Int):Void;\n\t\n\t@:overload(function (target:Int, dstByteOffset:Int, srcData:js.html.ArrayBufferView, srcOffset:Int, ?length:Int):Void {})\n\t@:overload(function (target:Int, offset:Int, data:js.html.ArrayBufferView):Void {})\n\t@:overload(function (target:Int, offset:Int, data:js.html.ArrayBuffer):Void {})\n\toverride function bufferSubData (target:Int, offset:Int, data:Dynamic /*MISSING SharedArrayBuffer*/):Void;\n\t\n\tpublic function clearBufferfi (buffer:Int, drawbuffer:Int, depth:Float, stencil:Int):Void;\n\t\n\t@:overload(function (buffer:Int, drawbuffer:Int, values:js.html.Float32Array, ?srcOffset:Int):Void {})\n\t@:overload(function (buffer:Int, drawbuffer:Int, depth:Float, stencil:Int):Void {})\n\tpublic function clearBufferfv (buffer:Int, drawbuffer:Int, values:Array<Float>, ?srcOffset:Int):Void;\n\t\n\t@:overload(function (buffer:Int, drawbuffer:Int, values:js.html.Int32Array, ?srcOffset:Int):Void {})\n\t@:overload(function (buffer:Int, drawbuffer:Int, depth:Float, stencil:Int):Void {})\n\tpublic function clearBufferiv (buffer:Int, drawbuffer:Int, values:Array<Int>, ?srcOffset:Int):Void;\n\t\n\t@:overload(function (buffer:Int, drawbuffer:Int, values:js.html.Uint32Array, ?srcOffset:Int):Void {})\n\t@:overload(function (buffer:Int, drawbuffer:Int, depth:Float, stencil:Int):Void {})\n\tpublic function clearBufferuiv (buffer:Int, drawbuffer:Int, values:Array<Int>, ?srcOffset:Int):Void;\n\t\n\tpublic function clientWaitSync (sync:GLSync, flags:Int, timeout:Dynamic /*Int64*/):Int;\n\t\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, offset:Int):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, srcData:js.html.ArrayBufferView, ?srcOffset:Int, ?srcLengthOverride:Int):Void {})\n\toverride function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:js.html.ArrayBufferView):Void;\n\t\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, offset:Int):Void {})\n\tpublic function compressedTexImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, srcData:ArrayBufferView, ?srcOffset:Int, ?srcLengthOverride:Int):Void;\n\t\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, offset:Int):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, srcData:js.html.ArrayBufferView, ?srcOffset:Int, ?srcLengthOverride:Int):Void {})\n\toverride function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:js.html.ArrayBufferView):Void;\n\t\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, offset:Int):Void {})\n\tpublic function compressedTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, srcData:ArrayBufferView, ?srcOffset:Int, ?srcLengthOverride:Int):Void;\n\t\n\tpublic function copySubBufferData (readTarget:Int, writeTarget:Int, readOffset:DataPointer, writeOffset:DataPointer, size:Int):Void;\n\tpublic function copyTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, x:Int, y:Int, width:Int, height:Int):Void;\n\tpublic function createQuery ():GLQuery;\n\tpublic function createSampler ():GLSampler;\n\tpublic function createTransformFeedback ():GLTransformFeedback;\n\tpublic function createVertexArray ():GLVertexArrayObject;\n\tpublic function deleteQuery (query:GLQuery):Void;\n\tpublic function deleteSampler (sampler:GLSampler):Void;\n\tpublic function deleteSync (sync:GLSync):Void;\n\tpublic function deleteTransformFeedback (transformFeedback:GLTransformFeedback):Void;\n\tpublic function deleteVertexArray (vertexArray:GLVertexArrayObject):Void;\n\tpublic function drawArraysInstanced (mode:Int, first:Int, count:Int, instanceCount:Int):Void;\n\tpublic function drawBuffers (buffers:Array<Int>):Void;\n\tpublic function drawElementsInstanced (mode:Int, count:Int, type:Int, offset:DataPointer, instanceCount:Int):Void;\n\tpublic function drawRangeElements (mode:Int, start:Int, end:Int, count:Int, type:Int, offset:DataPointer):Void;\n\tpublic function endQuery (target:Int):Void;\n\tpublic function endTransformFeedback ():Void;\n\tpublic function fenceSync (condition:Int, flags:Int):GLSync;\n\tpublic function framebufferTextureLayer (target:Int, attachment:Int, texture:GLTexture, level:Int, layer:Int):Void;\n\tpublic function getActiveUniformBlockName (program:GLProgram, uniformBlockIndex:Int):String;\n\tpublic function getActiveUniformBlockParameter (program:GLProgram, uniformBlockIndex:Int, pname:Int):Dynamic;\n\tpublic function getActiveUniforms (program:GLProgram, uniformIndices:Array<Int>, pname:Int):Dynamic;\n\t\n\t@:overload(function (target:Int, srcByteOffset:DataPointer, dstData:js.html.ArrayBuffer, ?srcOffset:Int, ?length:Int):Void {})\n\tpublic function getBufferSubData (target:Int, srcByteOffset:DataPointer, dstData:Dynamic /*SharedArrayBuffer*/, ?srcOffset:Int, ?length:Int):Void;\n\t\n\tpublic function getFragDataLocation (program:GLProgram, name:String):Int;\n\tpublic function getIndexedParameter (target:Int, index:Int):Dynamic;\n\tpublic function getInternalformatParameter (target:Int, internalformat:Int, pname:Int):Dynamic;\n\tpublic function getQuery (target:Int, pname:Int):GLQuery;\n\tpublic function getQueryParameter (query:GLQuery, pname:Int):Dynamic;\n\tpublic function getSamplerParameter (sampler:GLSampler, pname:Int):Dynamic;\n\tpublic function getSyncParameter (sync:GLSync, pname:Int):Dynamic;\n\tpublic function getTransformFeedbackVarying (program:GLProgram, index:Int):GLActiveInfo;\n\tpublic function getUniformBlockIndex (program:GLProgram, uniformBlockName:String):Int;\n\t\n\t@:overload(function (program:GLProgram, uniformNames:String):Array<Int> {})\n\tpublic function getUniformIndices (program:GLProgram, uniformNames:Array<String>):Array<Int>;\n\t\n\tpublic function invalidateFramebuffer (target:Int, attachments:Array<Int>):Void;\n\tpublic function invalidateSubFramebuffer (target:Int, attachments:Array<Int>, x:Int, y:Int, width:Int, height:Int):Void;\n\tpublic function isQuery (query:GLQuery):Bool;\n\tpublic function isSampler (sampler:GLSampler):Bool;\n\tpublic function isSync (sync:GLSync):Bool;\n\tpublic function isTransformFeedback (transformFeedback:GLTransformFeedback):Bool;\n\tpublic function isVertexArray (vertexArray:GLVertexArrayObject):Bool;\n\tpublic function pauseTransformFeedback ():Void;\n\tpublic function readBuffer (src:Int):Void;\n\t\n\t@:overload(function (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:js.html.ArrayBufferView):Void {})\n\t@:overload(function (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, offset:Int):Void {})\n\t@:overload(function (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:js.html.ArrayBufferView, dstOffset:Int):Void {})\n\toverride function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:js.html.ArrayBufferView):Void;\n\t\n\tpublic function renderbufferStorageMultisample (target:Int, samples:Int, internalFormat:Int, width:Int, height:Int):Void;\n\tpublic function resumeTransformFeedback ():Void;\n\tpublic function samplerParameterf (sampler:GLSampler, pname:Int, param:Float):Void;\n\tpublic function samplerParameteri (sampler:GLSampler, pname:Int, param:Int):Void;\n\t\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, offset:DataPointer):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, srcData:js.html.ArrayBufferView, srcOffset:Int):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, source:Dynamic /*js.html.ImageBitmap*/):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, source:js.html.ImageData):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, source:js.html.ImageElement):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, source:js.html.CanvasElement):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, source:js.html.VideoElement):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:js.html.ArrayBufferView):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:js.html.ImageData):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, format:Int, type:Int, image:js.html.ImageElement):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, format:Int, type:Int, canvas:js.html.CanvasElement):Void {})\n\toverride function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, video:js.html.VideoElement):Void;\n\t\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.CanvasElement):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.ImageElement):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.VideoElement):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:Dynamic /*js.html.ImageBitmap*/):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.ImageData):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.ArrayBufferView):Void {})\n\t@:overload(function (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, offset:DataPointer):Void {})\n\tpublic function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, srcData:js.html.ArrayBufferView, ?srcOffset:Int):Void;\n\t\n\tpublic function texStorage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int):Void;\n\tpublic function texStorage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int):Void;\n\t\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, srcData:js.html.ArrayBufferView, srcOffset:Int):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, offset:DataPointer):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, source:js.html.ImageData):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, source:js.html.ImageElement):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, source:js.html.CanvasElement):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, source:js.html.VideoElement):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, source:Dynamic /*ImageBitmap*/):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:js.html.ArrayBufferView):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:js.html.ImageData):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, image:js.html.ImageElement):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, canvas:js.html.CanvasElement):Void {})\n\toverride function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, video:js.html.VideoElement):Void;\n\t\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, offset:DataPointer):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:js.html.ImageData):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:js.html.ImageElement):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:js.html.CanvasElement):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:js.html.VideoElement):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:Dynamic /*ImageBitmap*/):Void {})\n\t@:overload(function (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, pixels:js.html.ArrayBufferView, ?srcOffset:Int):Void {})\n\tpublic function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, video:js.html.VideoElement):Void;\n\t\n\tpublic function transformFeedbackVaryings (program:GLProgram, varyings:Array<String>, bufferMode:Int):Void;\n\tpublic function uniform1ui (location:GLUniformLocation, v0:Int):Void;\n\tpublic function uniform2ui (location:GLUniformLocation, v0:Int, v1:Int):Void;\n\tpublic function uniform3ui (location:GLUniformLocation, v0:Int, v1:Int, v2:Int):Void;\n\tpublic function uniform4ui (location:GLUniformLocation, v0:Int, v1:Int, v2:Int, v3:Int):Void;\n\t\n\t@:overload(function (location:GLUniformLocation, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {})\n\t@:overload(function (location:GLUniformLocation, data:Array<Float>, ?srcOffset:Int, ?srcLength:Int):Void {})\n\toverride function uniform1fv (location:GLUniformLocation, data:Array<Float>):Void;\n\t\n\t@:overload(function (location:GLUniformLocation, data:js.html.Int32Array, ?srcOffset:Int, ?srcLength:Int):Void {})\n\t@:overload(function (location:GLUniformLocation, data:Array<Int>, ?srcOffset:Int, ?srcLength:Int):Void {})\n\toverride function uniform1iv (location:GLUniformLocation, data:Array<Int>):Void;\n\t\n\tpublic function uniform1uiv (location:GLUniformLocation, data:js.html.Uint32Array, ?srcOffset:Int, ?srcLength:Int):Void;\n\t\n\t@:overload(function (location:GLUniformLocation, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {})\n\t@:overload(function (location:GLUniformLocation, data:Array<Float>, ?srcOffset:Int, ?srcLength:Int):Void {})\n\toverride function uniform2fv (location:GLUniformLocation, data:Array<Float>):Void;\n\t\n\t@:overload(function (location:GLUniformLocation, data:js.html.Int32Array, ?srcOffset:Int, ?srcLength:Int):Void {})\n\t@:overload(function (location:GLUniformLocation, data:Array<Int>, ?srcOffset:Int, ?srcLength:Int):Void {})\n\toverride function uniform2iv (location:GLUniformLocation, data:Array<Int>):Void;\n\t\n\tpublic function uniform2uiv (location:GLUniformLocation, data:js.html.Uint32Array, ?srcOffset:Int, ?srcLength:Int):Void;\n\t\n\t@:overload(function (location:GLUniformLocation, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {})\n\t@:overload(function (location:GLUniformLocation, data:Array<Float>, ?srcOffset:Int, ?srcLength:Int):Void {})\n\toverride function uniform3fv (location:GLUniformLocation, data:Array<Float>):Void;\n\t\n\t@:overload(function (location:GLUniformLocation, data:js.html.Int32Array, ?srcOffset:Int, ?srcLength:Int):Void {})\n\t@:overload(function (location:GLUniformLocation, data:Array<Int>, ?srcOffset:Int, ?srcLength:Int):Void {})\n\toverride function uniform3iv (location:GLUniformLocation, data:Array<Int>):Void;\n\t\n\tpublic function uniform3uiv (location:GLUniformLocation, data:js.html.Uint32Array, ?srcOffset:Int, ?srcLength:Int):Void;\n\t\n\t@:overload(function (location:GLUniformLocation, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {})\n\t@:overload(function (location:GLUniformLocation, data:Array<Float>, ?srcOffset:Int, ?srcLength:Int):Void {})\n\toverride function uniform4fv (location:GLUniformLocation, data:Array<Float>):Void;\n\t\n\t@:overload(function (location:GLUniformLocation, data:js.html.Int32Array, ?srcOffset:Int, ?srcLength:Int):Void {})\n\t@:overload(function (location:GLUniformLocation, data:Array<Int>, ?srcOffset:Int, ?srcLength:Int):Void {})\n\toverride function uniform4iv (location:GLUniformLocation, data:Array<Int>):Void;\n\t\n\tpublic function uniform4uiv (location:GLUniformLocation, data:js.html.Uint32Array, ?srcOffset:Int, ?srcLength:Int):Void;\n\t\n\tpublic function uniformBlockBinding (program:GLProgram, uniformBlockIndex:Int, uniformBlockBinding:Int):Void;\n\t\n\t@:overload(function (location:GLUniformLocation, transpose:Bool, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {})\n\t@:overload(function (location:GLUniformLocation, transpose:Bool, data:Array<Float>, ?srcOffset:Int, ?srcLength:Int):Void {})\n\toverride function uniformMatrix2fv (location:GLUniformLocation, transpose:Bool, data:Array<Float>):Void;\n\t\n\tpublic function uniformMatrix2x3fv (location:GLUniformLocation, transpose:Bool, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void;\n\tpublic function uniformMatrix2x4fv (location:GLUniformLocation, transpose:Bool, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void;\n\t\n\t@:overload(function (location:GLUniformLocation, transpose:Bool, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {})\n\t@:overload(function (location:GLUniformLocation, transpose:Bool, data:Array<Float>, ?srcOffset:Int, ?srcLength:Int):Void {})\n\toverride function uniformMatrix3fv (location:GLUniformLocation, transpose:Bool, data:Array<Float>):Void;\n\t\n\tpublic function uniformMatrix3x2fv (location:GLUniformLocation, transpose:Bool, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void;\n\tpublic function uniformMatrix3x4fv (location:GLUniformLocation, transpose:Bool, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void;\n\t\n\t@:overload(function (location:GLUniformLocation, transpose:Bool, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {})\n\t@:overload(function (location:GLUniformLocation, transpose:Bool, data:Array<Float>, ?srcOffset:Int, ?srcLength:Int):Void {})\n\toverride function uniformMatrix4fv (location:GLUniformLocation, transpose:Bool, data:Array<Float>):Void;\n\t\n\tpublic function uniformMatrix4x2fv (location:GLUniformLocation, transpose:Bool, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void;\n\tpublic function uniformMatrix4x3fv (location:GLUniformLocation, transpose:Bool, data:js.html.Float32Array, ?srcOffset:Int, ?srcLength:Int):Void;\n\tpublic function vertexAttribDivisor (index:Int, divisor:Int):Void;\n\tpublic function vertexAttribI4i (index:Int, v0:Int, v1:Int, v2:Int, v3:Int):Void;\n\tpublic function vertexAttribI4ui (index:Int, v0:Int, v1:Int, v2:Int, v3:Int):Void;\n\t\n\t@:overload(function (index:Int, value:js.html.Int32Array):Void {})\n\tpublic function vertexAttribI4iv (index:Int, value:Array<Int>):Void;\n\t\n\t@:overload(function (index:Int, value:js.html.Uint32Array):Void {})\n\tpublic function vertexAttribI4uiv (index:Int, value:Array<Int>):Void;\n\t\n\tpublic function vertexAttribIPointer (index:Int, size:Int, type:Int, stride:Int, offset:DataPointer):Void;\n\tpublic function waitSync (sync:GLSync, flags:Int, timeout:Dynamic /*int64*/):Void;\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport js.html.AnchorElement;\nimport js.html.ErrorEvent;\nimport js.html.Event;\nimport js.html.Image in JSImage;\nimport js.html.ProgressEvent;\nimport js.html.XMLHttpRequest;\nimport js.Browser;\nimport haxe.io.Bytes;\nimport js.html.XMLHttpRequestResponseType;\nimport lime.app.Future;\nimport lime.app.Promise;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.net.HTTPRequest;\nimport lime.net.HTTPRequestHeader;\nimport lime.utils.AssetType;\n\n@:access(lime.graphics.ImageBuffer)\n@:access(lime.graphics.Image)\n\nclass HTML5HTTPRequest {\n\t\n\t\n\tprivate static var activeRequests = 0;\n\tprivate static var originElement:AnchorElement;\n\tprivate static var originHostname:String;\n\tprivate static var originPort:String;\n\tprivate static var originProtocol:String;\n\tprivate static var requestLimit = 4;\n\tprivate static var requestQueue = new List<QueueItem> ();\n\tprivate static var supportsImageProgress:Null<Bool>;\n\t\n\tprivate var binary:Bool;\n\tprivate var parent:_IHTTPRequest;\n\tprivate var request:XMLHttpRequest;\n\tprivate var validStatus0:Bool;\n\t\t\n\tpublic function new () {\n\t\t\n\t\t validStatus0 = ~/Tizen/gi.match (Browser.window.navigator.userAgent);\n\t\t\n\t}\n\t\n\t\n\tpublic function cancel ():Void {\n\t\t\n\t\tif (request != null) {\n\t\t\t\n\t\t\trequest.abort ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function init (parent:_IHTTPRequest):Void {\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t}\n\t\n\t\n\tprivate function load (uri:String, progress:Dynamic, readyStateChange:Dynamic):Void {\n\t\t\n\t\trequest = new XMLHttpRequest ();\n\t\t\n\t\tif (parent.method == POST) {\n\t\t\t\n\t\t\trequest.upload.addEventListener (\"progress\", progress, false);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\trequest.addEventListener (\"progress\", progress, false);\n\t\t\t\n\t\t}\n\t\t\n\t\trequest.onreadystatechange = readyStateChange;\n\t\t\n\t\tvar query = \"\";\n\t\t\n\t\tif (parent.data == null) {\n\t\t\t\n\t\t\tfor (key in parent.formData.keys ()) {\n\t\t\t\t\n\t\t\t\tif (query.length > 0) query += \"&\";\n\t\t\t\tquery += StringTools.urlEncode (key) + \"=\" + StringTools.urlEncode (Std.string (parent.formData.get (key)));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (parent.method == GET && query != \"\") {\n\t\t\t\t\n\t\t\t\tif (uri.indexOf (\"?\") > -1) {\n\t\t\t\t\t\n\t\t\t\t\turi += \"&\" + query;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\turi += \"?\" + query;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tquery = \"\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\trequest.open (Std.string (parent.method), uri, true);\n\t\t\n\t\tif (parent.timeout > 0) {\n\t\t\t\n\t\t\trequest.timeout = parent.timeout;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (binary) {\n\t\t\t\n\t\t\trequest.responseType = ARRAYBUFFER;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar contentType = null;\n\t\t\n\t\tfor (header in parent.headers) {\n\t\t\t\n\t\t\tif (header.name == \"Content-Type\") {\n\t\t\t\t\n\t\t\t\tcontentType = header.value;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\trequest.setRequestHeader (header.name, header.value);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (parent.contentType != null) {\n\t\t\t\n\t\t\tcontentType = parent.contentType;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (contentType == null) {\n\t\t\t\n\t\t\tif (parent.data != null) {\n\t\t\t\t\n\t\t\t\tcontentType = \"application/octet-stream\";\n\t\t\t\t\n\t\t\t} else if (query != \"\") {\n\t\t\t\t\n\t\t\t\tcontentType = \"application/x-www-form-urlencoded\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (contentType != null) {\n\t\t\t\n\t\t\trequest.setRequestHeader (\"Content-Type\", contentType);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (parent.withCredentials) {\n\t\t\t\n\t\t\trequest.withCredentials = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (parent.data != null) {\n\t\t\t\n\t\t\trequest.send (parent.data.getData ());\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\trequest.send (query);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function loadData (uri:String):Future<Bytes> {\n\t\t\n\t\tvar promise = new Promise<Bytes> ();\n\t\t\n\t\tif (activeRequests < requestLimit) {\n\t\t\t\n\t\t\tactiveRequests++;\n\t\t\t__loadData (uri, promise);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\trequestQueue.add ({ instance: this, uri: uri, promise: promise, type: AssetType.BINARY });\n\t\t\t\n\t\t}\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tprivate static function loadImage (uri:String):Future<Image> {\n\t\t\n\t\tvar promise = new Promise<Image> ();\n\t\t\n\t\tif (activeRequests < requestLimit) {\n\t\t\t\n\t\t\tactiveRequests++;\n\t\t\t__loadImage (uri, promise);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\trequestQueue.add ({ instance: null, uri: uri, promise: promise, type: AssetType.IMAGE });\n\t\t\t\n\t\t}\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic function loadText (uri:String):Future<String> {\n\t\t\n\t\tvar promise = new Promise<String> ();\n\t\t\n\t\tif (activeRequests < requestLimit) {\n\t\t\t\n\t\t\tactiveRequests++;\n\t\t\t__loadText (uri, promise);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\trequestQueue.add ({ instance: this, uri: uri, promise: promise, type: AssetType.TEXT });\n\t\t\t\n\t\t}\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tprivate static function processQueue ():Void {\n\t\t\n\t\tif (activeRequests < requestLimit && requestQueue.length > 0) {\n\t\t\t\n\t\t\tactiveRequests++;\n\t\t\t\n\t\t\tvar queueItem = requestQueue.pop ();\n\t\t\t\n\t\t\tswitch (queueItem.type) {\n\t\t\t\t\n\t\t\t\tcase IMAGE:\n\t\t\t\t\t\n\t\t\t\t\t__loadImage (queueItem.uri, queueItem.promise);\n\t\t\t\t\n\t\t\t\tcase TEXT:\n\t\t\t\t\t\n\t\t\t\t\tqueueItem.instance.__loadText (queueItem.uri, queueItem.promise);\n\t\t\t\t\n\t\t\t\tcase BINARY:\n\t\t\t\t\t\n\t\t\t\t\tqueueItem.instance.__loadData (queueItem.uri, queueItem.promise);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\tactiveRequests--;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function processResponse ():Void {\n\t\t\n\t\tif (parent.enableResponseHeaders) {\n\t\t\t\n\t\t\tparent.responseHeaders = [];\n\t\t\tvar name, value;\n\t\t\t\n\t\t\tfor (line in request.getAllResponseHeaders ().split (\"\\n\")) {\n\t\t\t\t\n\t\t\t\tname = StringTools.trim (line.substr (0, line.indexOf (\":\")));\n\t\t\t\tvalue = StringTools.trim (line.substr (line.indexOf (\":\") + 1));\n\t\t\t\t\n\t\t\t\tif (name != \"\") {\n\t\t\t\t\t\n\t\t\t\t\tparent.responseHeaders.push (new HTTPRequestHeader (name, value));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tparent.responseStatus = request.status;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __fixHostname (hostname:String):String {\n\t\t\n\t\treturn hostname == null ? \"\" : hostname;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __fixPort (port:String, protocol:String):String {\n\t\t\n\t\tif (port == null || port == \"\") {\n\t\t\t\n\t\t\treturn switch (protocol) {\n\t\t\t\t\n\t\t\t\tcase \"ftp:\": \"21\";\n\t\t\t\tcase \"gopher:\": \"70\";\n\t\t\t\tcase \"http:\": \"80\";\n\t\t\t\tcase \"https:\": \"443\";\n\t\t\t\tcase \"ws:\": \"80\";\n\t\t\t\tcase \"wss:\": \"443\";\n\t\t\t\tdefault: \"\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn port;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __fixProtocol (protocol:String):String {\n\t\t\n\t\treturn (protocol == null || protocol == \"\") ? \"http:\" : protocol;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __isSameOrigin (path:String):Bool {\n\t\t\n\t\tif (originElement == null) {\n\t\t\t\n\t\t\toriginElement = Browser.document.createAnchorElement ();\n\t\t\t\n\t\t\toriginHostname = __fixHostname (Browser.location.hostname);\n\t\t\toriginProtocol = __fixProtocol (Browser.location.protocol);\n\t\t\toriginPort = __fixPort (Browser.location.port, originProtocol);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar a = originElement;\n\t\ta.href = path;\n\t\t\n\t\tif (a.hostname == \"\") {\n\t\t\t\n\t\t\t// Workaround for IE, updates other properties\n\t\t\ta.href = a.href;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar hostname = __fixHostname (a.hostname);\n\t\tvar protocol = __fixProtocol (a.protocol);\n\t\tvar port = __fixPort (a.port, protocol);\n\t\t\n\t\tvar sameHost = (hostname == \"\" || (hostname == originHostname));\n\t\tvar samePort = (port == \"\" || (port == originPort));\n\t\t\n\t\treturn (protocol != \"file:\" && sameHost && samePort);\n\t\t\n\t}\n\t\n\t\n\tpublic function __loadData (uri:String, promise:Promise<Bytes>):Void {\n\t\t\n\t\tvar progress = function (event) {\n\t\t\t\n\t\t\tpromise.progress (event.loaded, event.total);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar readyStateChange = function (event) {\n\t\t\t\n\t\t\tif (request.readyState != 4) return;\n\t\t\t\n\t\t\tif (request.status != null && ((request.status >= 200 && request.status < 400) || (validStatus0 && request.status == 0))) {\n\t\t\t\t\n\t\t\t\tvar bytes;\n\t\t\t\t\n\t\t\t\tif (request.responseType == NONE) {\n\t\t\t\t\t\n\t\t\t\t\tbytes = Bytes.ofString (request.responseText);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tbytes = Bytes.ofData (request.response);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tprocessResponse ();\n\t\t\t\tpromise.complete (bytes);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tprocessResponse ();\n\t\t\t\tpromise.error (request.status);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\trequest = null;\n\t\t\t\n\t\t\tactiveRequests--;\n\t\t\tprocessQueue ();\n\t\t\t\n\t\t}\n\t\t\n\t\tbinary = true;\n\t\tload (uri, progress, readyStateChange);\n\t\t\n\t}\n\t\n\t\n\tprivate static function __loadImage (uri:String, promise:Promise<Image>):Void {\n\t\t\n\t\tvar image = new JSImage ();\n\t\t\n\t\tif (!__isSameOrigin (uri)) {\n\t\t\t\n\t\t\timage.crossOrigin = \"Anonymous\";\n\t\t\t\n\t\t}\n\t\t\n\t\tif (supportsImageProgress == null) {\n\t\t\t\n\t\t\tsupportsImageProgress = untyped __js__ (\"'onprogress' in image\");\n\t\t\t\n\t\t}\n\t\t\n\t\tif (supportsImageProgress || StringTools.startsWith (uri, \"data:\")) {\n\t\t\t\n\t\t\timage.addEventListener (\"load\", function (event) {\n\t\t\t\t\n\t\t\t\tvar buffer = new ImageBuffer (null, image.width, image.height);\n\t\t\t\tbuffer.__srcImage = cast image;\n\t\t\t\t\n\t\t\t\tactiveRequests--;\n\t\t\t\tprocessQueue ();\n\t\t\t\t\n\t\t\t\tpromise.complete (new Image (buffer));\n\t\t\t\t\n\t\t\t}, false);\n\t\t\t\n\t\t\timage.addEventListener (\"progress\", function (event) {\n\t\t\t\t\n\t\t\t\tpromise.progress (event.loaded, event.total);\n\t\t\t\t\n\t\t\t}, false);\n\t\t\t\n\t\t\timage.addEventListener (\"error\", function (event) {\n\t\t\t\t\n\t\t\t\tactiveRequests--;\n\t\t\t\tprocessQueue ();\n\t\t\t\t\n\t\t\t\tpromise.error (event.detail);\n\t\t\t\t\n\t\t\t}, false);\n\t\t\t\n\t\t\timage.src = uri;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar request = new XMLHttpRequest ();\n\t\t\t\n\t\t\trequest.onload = function (_) {\n\t\t\t\t\n\t\t\t\tactiveRequests--;\n\t\t\t\tprocessQueue ();\n\t\t\t\t\n\t\t\t\tvar img = new Image ();\n\t\t\t\timg.__fromBytes (Bytes.ofData (request.response), function (img) {\n\t\t\t\t\tpromise.complete (img);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\trequest.onerror = function (event:ErrorEvent) {\n\t\t\t\t\n\t\t\t\tpromise.error (event.message);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\trequest.onprogress = function (event:ProgressEvent) {\n\t\t\t\t\n\t\t\t\tif (event.lengthComputable) {\n\t\t\t\t\t\n\t\t\t\t\tpromise.progress (event.loaded, event.total);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\trequest.open (\"GET\", uri, true);\n\t\t\trequest.responseType = XMLHttpRequestResponseType.ARRAYBUFFER;\n\t\t\trequest.overrideMimeType ('text/plain; charset=x-user-defined'); \n\t\t\trequest.send (null);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __loadText (uri:String, promise:Promise<String>):Void {\n\t\t\n\t\tvar progress = function (event) {\n\t\t\t\n\t\t\tpromise.progress (event.loaded, event.total);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar readyStateChange = function (event) {\n\t\t\t\n\t\t\tif (request.readyState != 4) return;\n\t\t\t\n\t\t\tif (request.status != null && ((request.status >= 200 && request.status <= 400) || (validStatus0 && request.status == 0))) {\n\t\t\t\t\n\t\t\t\tprocessResponse ();\n\t\t\t\tpromise.complete (request.responseText);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tprocessResponse ();\n\t\t\t\tpromise.error (request.status);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\trequest = null;\n\t\t\t\n\t\t\tactiveRequests--;\n\t\t\tprocessQueue ();\n\t\t\t\n\t\t}\n\t\t\n\t\tbinary = false;\n\t\tload (uri, progress, readyStateChange);\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:dox(hide) typedef QueueItem = {\n\t\n\tvar instance:HTML5HTTPRequest;\n\tvar type:AssetType;\n\tvar promise:Dynamic;\n\tvar uri:String;\n\t\n}","package lime._backend.html5;\n\n\nimport lime.app.Application;\nimport lime.ui.MouseCursor;\nimport lime.ui.Window;\n\n@:access(lime.app.Application)\n@:access(lime.ui.Window)\n\n\nclass HTML5Mouse {\n\t\n\t\n\tprivate static var __cursor:MouseCursor;\n\tprivate static var __hidden:Bool;\n\t\n\t\n\tpublic static function hide ():Void {\n\t\t\n\t\tif (!__hidden) {\n\t\t\t\n\t\t\t__hidden = true;\n\t\t\t\n\t\t\tfor (window in Application.current.windows) {\n\t\t\t\t\n\t\t\t\twindow.backend.element.style.cursor = \"none\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function show ():Void {\n\t\t\n\t\tif (__hidden) {\n\t\t\t\n\t\t\t__hidden = false;\n\t\t\t\n\t\t\tvar cacheValue = __cursor;\n\t\t\t__cursor = null;\n\t\t\tset_cursor (cacheValue);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function warp (x:Int, y:Int, window:Window):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tpublic static function get_cursor ():MouseCursor {\n\t\t\n\t\tif (__cursor == null) return DEFAULT;\n\t\treturn __cursor;\n\t\t\n\t}\n\t\n\t\n\tpublic static function set_cursor (value:MouseCursor):MouseCursor {\n\t\t\n\t\tif (__cursor != value) {\n\t\t\t\n\t\t\tif (!__hidden) {\n\t\t\t\t\n\t\t\t\tfor (window in Application.current.windows) {\n\t\t\t\t\t\n\t\t\t\t\twindow.backend.element.style.cursor = switch (value) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase ARROW: \"default\";\n\t\t\t\t\t\tcase CROSSHAIR: \"crosshair\";\n\t\t\t\t\t\tcase MOVE: \"move\";\n\t\t\t\t\t\tcase POINTER: \"pointer\";\n\t\t\t\t\t\tcase RESIZE_NESW: \"nesw-resize\";\n\t\t\t\t\t\tcase RESIZE_NS: \"ns-resize\";\n\t\t\t\t\t\tcase RESIZE_NWSE: \"nwse-resize\";\n\t\t\t\t\t\tcase RESIZE_WE: \"ew-resize\";\n\t\t\t\t\t\tcase TEXT: \"text\";\n\t\t\t\t\t\tcase WAIT: \"wait\";\n\t\t\t\t\t\tcase WAIT_ARROW: \"wait\";\n\t\t\t\t\t\tdefault: \"auto\";\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__cursor = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __cursor;\n\t\t\n\t}\n\t\n\t\n\tpublic static function get_lock ():Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic static function set_lock (value:Bool):Bool {\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport haxe.macro.Compiler;\nimport js.html.webgl.RenderingContext;\nimport js.html.CanvasElement;\nimport js.Browser;\nimport lime.app.Application;\nimport lime.graphics.Image;\nimport lime.graphics.opengl.GL;\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.Renderer;\nimport lime.math.Rectangle;\n\n@:access(lime._backend.html5.HTML5GLRenderContext)\n@:access(lime.app.Application)\n@:access(lime.graphics.opengl.GL)\n@:access(lime.graphics.GLRenderContext)\n@:access(lime.graphics.Renderer)\n@:access(lime.ui.Window)\n\n\nclass HTML5Renderer {\n\t\n\t\n\tprivate var parent:Renderer;\n\t\n\t\n\tpublic function new (parent:Renderer) {\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t}\n\t\n\t\n\tpublic function create ():Void {\n\t\t\n\t\tcreateContext ();\n\t\t\n\t\tswitch (parent.context) {\n\t\t\t\n\t\t\tcase OPENGL (_):\n\t\t\t\t\n\t\t\t\tparent.window.backend.canvas.addEventListener (\"webglcontextlost\", handleEvent, false);\n\t\t\t\tparent.window.backend.canvas.addEventListener (\"webglcontextrestored\", handleEvent, false);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function createContext ():Void {\n\t\t\n\t\tif (parent.window.backend.div != null) {\n\t\t\t\n\t\t\tparent.context = DOM (cast parent.window.backend.div);\n\t\t\tparent.type = DOM;\n\t\t\t\n\t\t} else if (parent.window.backend.canvas != null) {\n\t\t\t\n\t\t\tvar webgl:RenderingContext = null;\n\t\t\t\n\t\t\tif (#if (canvas || munit) false #elseif webgl true #else !Reflect.hasField (parent.window.config, \"hardware\") || parent.window.config.hardware #end) {\n\t\t\t\t\n\t\t\t\tvar transparentBackground = Reflect.hasField (parent.window.config, \"background\") && parent.window.config.background == null;\n\t\t\t\tvar colorDepth = Reflect.hasField (parent.window.config, \"colorDepth\") ? parent.window.config.colorDepth : 16;\n\t\t\t\t\n\t\t\t\tvar options = {\n\t\t\t\t\t\n\t\t\t\t\talpha: (transparentBackground || colorDepth > 16) ? true : false,\n\t\t\t\t\tantialias: Reflect.hasField (parent.window.config, \"antialiasing\") ? parent.window.config.antialiasing > 0 : false,\n\t\t\t\t\tdepth: Reflect.hasField (parent.window.config, \"depthBuffer\") ? parent.window.config.depthBuffer : true,\n\t\t\t\t\tpremultipliedAlpha: true,\n\t\t\t\t\tstencil: Reflect.hasField (parent.window.config, \"stencilBuffer\") ? parent.window.config.stencilBuffer : false,\n\t\t\t\t\tpreserveDrawingBuffer: false\n\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tfor (name in [ #if !webgl1 \"webgl2\", #end \"webgl\", \"experimental-webgl\" ]) {\n\t\t\t\t\t\n\t\t\t\t\twebgl = cast parent.window.backend.canvas.getContext (name, options);\n\t\t\t\t\tif (webgl != null) break;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (webgl == null) {\n\t\t\t\t\n\t\t\t\tparent.context = CANVAS (cast parent.window.backend.canvas.getContext (\"2d\"));\n\t\t\t\tparent.type = CANVAS;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t#if webgl_debug\n\t\t\t\twebgl = untyped WebGLDebugUtils.makeDebugContext (webgl);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\t#if ((js && html5) && !display)\n\t\t\t\tGL.context = new GLRenderContext (cast webgl);\n\t\t\t\tparent.context = OPENGL (GL.context);\n\t\t\t\t#else\n\t\t\t\tparent.context = OPENGL (new GLRenderContext ());\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tparent.type = OPENGL;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function flip ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function handleEvent (event:js.html.Event):Void {\n\t\t\n\t\tswitch (event.type) {\n\t\t\t\n\t\t\tcase \"webglcontextlost\":\n\t\t\t\t\n\t\t\t\tevent.preventDefault ();\n\t\t\t\t\n\t\t\t\t#if !display\n\t\t\t\tif (GL.context != null) {\n\t\t\t\t\t\n\t\t\t\t\tGL.context.__contextLost = true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tparent.context = null;\n\t\t\t\t\n\t\t\t\tparent.onContextLost.dispatch ();\n\t\t\t\t\n\t\t\tcase \"webglcontextrestored\":\n\t\t\t\t\n\t\t\t\tcreateContext ();\n\t\t\t\t\n\t\t\t\tparent.onContextRestored.dispatch (parent.context);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function readPixels (rect:Rectangle):Image {\n\t\t\n\t\t// TODO: Handle DIV, improve 3D canvas support\n\t\t\n\t\tif (parent.window.backend.canvas != null) {\n\t\t\t\n\t\t\tif (rect == null) {\n\t\t\t\t\n\t\t\t\trect = new Rectangle (0, 0, parent.window.backend.canvas.width, parent.window.backend.canvas.height);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\trect.__contract (0, 0, parent.window.backend.canvas.width, parent.window.backend.canvas.height);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (rect.width > 0 && rect.height > 0) {\n\t\t\t\t\n\t\t\t\tvar canvas:CanvasElement = cast Browser.document.createElement (\"canvas\");\n\t\t\t\tcanvas.width = Std.int (rect.width);\n\t\t\t\tcanvas.height = Std.int (rect.height);\n\t\t\t\t\n\t\t\t\tvar context = canvas.getContext (\"2d\");\n\t\t\t\tcontext.drawImage (parent.window.backend.canvas, -rect.x, -rect.y);\n\t\t\t\t\n\t\t\t\treturn Image.fromCanvas (canvas);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function render ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime._backend.html5;\n\n\nimport haxe.Timer;\nimport js.html.CanvasElement;\nimport js.html.DivElement;\nimport js.html.Element;\nimport js.html.FocusEvent;\nimport js.html.InputElement;\nimport js.html.InputEvent;\nimport js.html.LinkElement;\nimport js.html.MouseEvent;\nimport js.html.TouchEvent;\nimport js.html.ClipboardEvent;\nimport js.Browser;\nimport lime.app.Application;\nimport lime.graphics.utils.ImageCanvasUtil;\nimport lime.graphics.Image;\nimport lime.system.Display;\nimport lime.system.DisplayMode;\nimport lime.system.System;\nimport lime.system.Clipboard;\nimport lime.ui.Gamepad;\nimport lime.ui.Joystick;\nimport lime.ui.Touch;\nimport lime.ui.Window;\n\n\n@:access(lime.app.Application)\n@:access(lime.ui.Gamepad)\n@:access(lime.ui.Joystick)\n@:access(lime.ui.Window)\n\n\nclass HTML5Window {\n\t\n\t\n\tprivate static var dummyCharacter = String.fromCharCode (127);\n\tprivate static var textInput:InputElement;\n\tprivate static var windowID:Int = 0;\n\t\n\tpublic var canvas:CanvasElement;\n\tpublic var div:DivElement;\n\tpublic var element:Element;\n\t#if stats\n\tpublic var stats:Dynamic;\n\t#end\n\t\n\tprivate var cacheElementHeight:Float;\n\tprivate var cacheElementWidth:Float;\n\tprivate var cacheMouseX:Float;\n\tprivate var cacheMouseY:Float;\n\tprivate var currentTouches = new Map<Int, Touch> ();\n\tprivate var enableTextEvents:Bool;\n\tprivate var isFullscreen:Bool;\n\tprivate var parent:Window;\n\tprivate var primaryTouch:Touch;\n\tprivate var requestedFullscreen:Bool;\n\tprivate var resizeElement:Bool;\n\tprivate var scale = 1.0;\n\tprivate var setHeight:Int;\n\tprivate var setWidth:Int;\n\tprivate var unusedTouchesPool = new List<Touch> ();\n\t\n\t\n\tpublic function new (parent:Window) {\n\t\t\n\t\tthis.parent = parent;\n\t\t\n\t\tif (parent.config != null && Reflect.hasField (parent.config, \"element\")) {\n\t\t\t\n\t\t\telement = parent.config.element;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if !dom\n\t\tif (parent.config != null && Reflect.hasField (parent.config, \"allowHighDPI\") && parent.config.allowHighDPI) {\n\t\t\t\n\t\t\tscale = Browser.window.devicePixelRatio;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tparent.__scale = scale;\n\t\t\n\t\tcacheMouseX = 0;\n\t\tcacheMouseY = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function alert (message:String, title:String):Void {\n\t\t\n\t\tif (message != null) {\n\t\t\t\n\t\t\tBrowser.alert (message);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function close ():Void {\n\t\t\n\t\tparent.application.removeWindow (parent);\n\t\t\n\t}\n\t\n\t\n\tpublic function create (application:Application):Void {\n\t\t\n\t\tsetWidth = parent.width;\n\t\tsetHeight = parent.height;\n\t\t\n\t\tparent.id = windowID++;\n\t\t\n\t\tif (Std.is (element, CanvasElement)) {\n\t\t\t\n\t\t\tcanvas = cast element;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if dom\n\t\t\tdiv = cast Browser.document.createElement (\"div\");\n\t\t\t#else\n\t\t\tcanvas = cast Browser.document.createElement (\"canvas\");\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\tif (canvas != null) {\n\t\t\t\n\t\t\tvar style = canvas.style;\n\t\t\tstyle.setProperty (\"-webkit-transform\", \"translateZ(0)\", null);\n\t\t\tstyle.setProperty (\"transform\", \"translateZ(0)\", null);\n\t\t\t\n\t\t} else if (div != null) {\n\t\t\t\n\t\t\tvar style = div.style;\n\t\t\tstyle.setProperty (\"-webkit-transform\", \"translate3D(0,0,0)\", null);\n\t\t\tstyle.setProperty (\"transform\", \"translate3D(0,0,0)\", null);\n\t\t\t//style.setProperty (\"-webkit-transform-style\", \"preserve-3d\", null);\n\t\t\t//style.setProperty (\"transform-style\", \"preserve-3d\", null);\n\t\t\tstyle.position = \"relative\";\n\t\t\tstyle.overflow = \"hidden\";\n\t\t\tstyle.setProperty (\"-webkit-user-select\", \"none\", null);\n\t\t\tstyle.setProperty (\"-moz-user-select\", \"none\", null);\n\t\t\tstyle.setProperty (\"-ms-user-select\", \"none\", null);\n\t\t\tstyle.setProperty (\"-o-user-select\", \"none\", null);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (parent.width == 0 && parent.height == 0) {\n\t\t\t\n\t\t\tif (element != null) {\n\t\t\t\t\n\t\t\t\tparent.width = element.clientWidth;\n\t\t\t\tparent.height = element.clientHeight;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tparent.width = Browser.window.innerWidth;\n\t\t\t\tparent.height = Browser.window.innerHeight;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcacheElementWidth = parent.width;\n\t\t\tcacheElementHeight = parent.height;\n\t\t\t\n\t\t\tresizeElement = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (canvas != null) {\n\t\t\t\n\t\t\tcanvas.width = Math.round (parent.width * scale);\n\t\t\tcanvas.height = Math.round (parent.height * scale);\n\t\t\t\n\t\t\tcanvas.style.width = parent.width + \"px\";\n\t\t\tcanvas.style.height = parent.height + \"px\";\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tdiv.style.width = parent.width + \"px\";\n\t\t\tdiv.style.height = parent.height + \"px\";\n\t\t\t\n\t\t}\n\t\t\n\t\tupdateSize ();\n\t\t\n\t\tif (element != null) {\n\t\t\t\n\t\t\tif (canvas != null) {\n\t\t\t\t\n\t\t\t\tif (element != cast canvas) {\n\t\t\t\t\t\n\t\t\t\t\telement.appendChild (canvas);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\telement.appendChild (div);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar events = [ \"mousedown\", \"mouseenter\", \"mouseleave\", \"mousemove\", \"mouseup\", \"wheel\" ];\n\t\t\t\n\t\t\tfor (event in events) {\n\t\t\t\t\n\t\t\t\telement.addEventListener (event, handleMouseEvent, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// Disable image drag on Firefox\n\t\t\tBrowser.document.addEventListener (\"dragstart\", function (e) {\n\t\t\t\tif (e.target.nodeName.toLowerCase () == \"img\") {\n\t\t\t\t\te.preventDefault ();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}, false);\n\t\t\t\n\t\t\telement.addEventListener (\"contextmenu\", handleContextMenuEvent, true);\n\t\t\t\n\t\t\telement.addEventListener (\"touchstart\", handleTouchEvent, true);\n\t\t\telement.addEventListener (\"touchmove\", handleTouchEvent, true);\n\t\t\telement.addEventListener (\"touchend\", handleTouchEvent, true);\n\t\t\telement.addEventListener (\"touchcancel\", handleTouchEvent, true);\n\t\t\t\n\t\t\telement.addEventListener (\"gamepadconnected\", handleGamepadEvent, true);\n\t\t\telement.addEventListener (\"gamepaddisconnected\", handleGamepadEvent, true);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function focus ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function getDisplay ():Display {\n\t\t\n\t\treturn System.getDisplay (0);\n\t\t\n\t}\n\t\n\t\n\tpublic function getDisplayMode ():DisplayMode {\n\t\t\n\t\treturn System.getDisplay (0).currentMode;\n\t\t\n\t}\n\t\n\t\n\tpublic function setDisplayMode (value:DisplayMode):DisplayMode {\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic function getEnableTextEvents ():Bool {\n\t\t\n\t\treturn enableTextEvents;\n\t\t\n\t}\n\t\n\t\n\tprivate function handleContextMenuEvent (event:MouseEvent):Void {\n\t\t\n\t\tif (parent.onMouseUp.canceled) {\n\t\t\t\n\t\t\tevent.preventDefault ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleCutOrCopyEvent (event:ClipboardEvent):Void {\n\t\t\n\t\tevent.clipboardData.setData (\"text/plain\", Clipboard.text);\n\t\tevent.preventDefault ();\n\t\t\n\t}\n\t\n\t\n\tprivate function handleFocusEvent (event:FocusEvent):Void {\n\t\t\n\t\tif (enableTextEvents) {\n\t\t\t\n\t\t\tTimer.delay (function () { textInput.focus (); }, 20);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleFullscreenEvent (event:Dynamic):Void {\n\t\t\n\t\tvar fullscreenElement = untyped (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement);\n\t\t\n\t\tif (fullscreenElement != null) {\n\t\t\t\n\t\t\tisFullscreen = true;\n\t\t\tparent.__fullscreen = true;\n\t\t\t\n\t\t\tif (requestedFullscreen) {\n\t\t\t\t\n\t\t\t\trequestedFullscreen = false;\n\t\t\t\tparent.onFullscreen.dispatch ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tisFullscreen = false;\n\t\t\tparent.__fullscreen = false;\n\t\t\t\n\t\t\tvar changeEvents = [ \"fullscreenchange\", \"mozfullscreenchange\", \"webkitfullscreenchange\", \"MSFullscreenChange\" ];\n\t\t\tvar errorEvents = [ \"fullscreenerror\", \"mozfullscreenerror\", \"webkitfullscreenerror\", \"MSFullscreenError\" ];\n\t\t\t\n\t\t\tfor (i in 0...changeEvents.length) {\n\t\t\t\t\n\t\t\t\tBrowser.document.removeEventListener (changeEvents[i], handleFullscreenEvent, false);\n\t\t\t\tBrowser.document.removeEventListener (errorEvents[i], handleFullscreenEvent, false);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleGamepadEvent (event:Dynamic):Void {\n\t\t\n\t\tswitch (event.type) {\n\t\t\t\n\t\t\tcase \"gamepadconnected\":\n\t\t\t\t\n\t\t\t\tJoystick.__connect (event.gamepad.index);\n\t\t\t\t\n\t\t\t\tif (event.gamepad.mapping == \"standard\") {\n\t\t\t\t\t\n\t\t\t\t\tGamepad.__connect (event.gamepad.index);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase \"gamepaddisconnected\":\n\t\t\t\t\n\t\t\t\tJoystick.__disconnect (event.gamepad.index);\n\t\t\t\tGamepad.__disconnect (event.gamepad.index);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleInputEvent (event:InputEvent):Void {\n\t\t\n\t\t// In order to ensure that the browser will fire clipboard events, we always need to have something selected.\n\t\t// Therefore, `value` cannot be \"\".\n\t\t\n\t\tif (textInput.value != dummyCharacter) {\n\t\t\t\n\t\t\tif (textInput.value.charAt (0) == dummyCharacter) {\n\t\t\t\t\n\t\t\t\tparent.onTextInput.dispatch (textInput.value.substr (1));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tparent.onTextInput.dispatch (textInput.value);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\ttextInput.value = dummyCharacter;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleMouseEvent (event:MouseEvent):Void {\n\t\t\n\t\tvar x = 0.0;\n\t\tvar y = 0.0;\n\t\t\n\t\tif (event.type != \"wheel\") {\n\t\t\t\n\t\t\tif (element != null) {\n\t\t\t\t\n\t\t\t\tif (canvas != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar rect = canvas.getBoundingClientRect ();\n\t\t\t\t\tx = (event.clientX - rect.left) * (parent.width / rect.width);\n\t\t\t\t\ty = (event.clientY - rect.top) * (parent.height / rect.height);\n\t\t\t\t\t\n\t\t\t\t} else if (div != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar rect = div.getBoundingClientRect ();\n\t\t\t\t\t//x = (event.clientX - rect.left) * (window.backend.div.style.width / rect.width);\n\t\t\t\t\tx = (event.clientX - rect.left);\n\t\t\t\t\t//y = (event.clientY - rect.top) * (window.backend.div.style.height / rect.height);\n\t\t\t\t\ty = (event.clientY - rect.top);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tvar rect = element.getBoundingClientRect ();\n\t\t\t\t\tx = (event.clientX - rect.left) * (parent.width / rect.width);\n\t\t\t\t\ty = (event.clientY - rect.top) * (parent.height / rect.height);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tx = event.clientX;\n\t\t\t\ty = event.clientY;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (event.type) {\n\t\t\t\t\n\t\t\t\tcase \"mousedown\":\n\t\t\t\t\t\n\t\t\t\t\tparent.onMouseDown.dispatch (x, y, event.button);\n\t\t\t\t\t\n\t\t\t\t\tif (parent.onMouseDown.canceled) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tevent.preventDefault ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase \"mouseenter\":\n\t\t\t\t\t\n\t\t\t\t\tif (event.target == element) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.onEnter.dispatch ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (parent.onEnter.canceled) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tevent.preventDefault ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase \"mouseleave\":\n\t\t\t\t\t\n\t\t\t\t\tif (event.target == element) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.onLeave.dispatch ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (parent.onLeave.canceled) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tevent.preventDefault ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase \"mouseup\":\n\t\t\t\t\t\n\t\t\t\t\tparent.onMouseUp.dispatch (x, y, event.button);\n\t\t\t\t\t\n\t\t\t\t\tif (parent.onMouseUp.canceled) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tevent.preventDefault ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase \"mousemove\":\n\t\t\t\t\t\n\t\t\t\t\tif (x != cacheMouseX || y != cacheMouseY) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.onMouseMove.dispatch (x, y);\n\t\t\t\t\t\tparent.onMouseMoveRelative.dispatch (x - cacheMouseX, y - cacheMouseY);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (parent.onMouseMove.canceled || parent.onMouseMoveRelative.canceled) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tevent.preventDefault ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcacheMouseX = x;\n\t\t\tcacheMouseY = y;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tparent.onMouseWheel.dispatch (untyped event.deltaX, -untyped event.deltaY);\n\t\t\t\n\t\t\tif (parent.onMouseWheel.canceled) {\n\t\t\t\t\n\t\t\t\tevent.preventDefault ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handlePasteEvent (event:ClipboardEvent):Void {\n\t\t\n\t\tif (untyped event.clipboardData.types.indexOf (\"text/plain\") > -1) {\n\t\t\t\n\t\t\tvar text = event.clipboardData.getData (\"text/plain\");\n\t\t\tClipboard.text = text;\n\t\t\t\n\t\t\tif (enableTextEvents) {\n\t\t\t\t\n\t\t\t\tparent.onTextInput.dispatch (text);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tevent.preventDefault ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function handleResizeEvent (event:js.html.Event):Void {\n\t\t\n\t\tprimaryTouch = null;\n\t\tupdateSize ();\n\t\t\n\t}\n\t\n\t\n\tprivate function handleTouchEvent (event:TouchEvent):Void {\n\t\t\n\t\tevent.preventDefault ();\n\t\t\n\t\tvar rect = null;\n\t\t\n\t\tif (element != null) {\n\t\t\t\n\t\t\tif (canvas != null) {\n\t\t\t\t\n\t\t\t\trect = canvas.getBoundingClientRect ();\n\t\t\t\t\n\t\t\t} else if (div != null) {\n\t\t\t\t\n\t\t\t\trect = div.getBoundingClientRect ();\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\trect = element.getBoundingClientRect ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar windowWidth:Float = setWidth;\n\t\tvar windowHeight:Float = setHeight;\n\t\t\n\t\tif (windowWidth == 0 || windowHeight == 0) {\n\t\t\t\n\t\t\tif (rect != null) {\n\t\t\t\t\n\t\t\t\twindowWidth = rect.width;\n\t\t\t\twindowHeight = rect.height;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\twindowWidth = 1;\n\t\t\t\twindowHeight = 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar touch, x, y, cacheX, cacheY;\n\t\t\n\t\tfor (data in event.changedTouches) {\n\t\t\t\n\t\t\tx = 0.0;\n\t\t\ty = 0.0;\n\t\t\t\n\t\t\tif (rect != null) {\n\t\t\t\t\n\t\t\t\tx = (data.clientX - rect.left) * (windowWidth / rect.width);\n\t\t\t\ty = (data.clientY - rect.top) * (windowHeight / rect.height);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tx = data.clientX;\n\t\t\t\ty = data.clientY;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (event.type == \"touchstart\") {\n\t\t\t\t\n\t\t\t\ttouch = unusedTouchesPool.pop ();\n\t\t\t\t\n\t\t\t\tif (touch == null) {\n\t\t\t\t\t\n\t\t\t\t\ttouch = new Touch (x / windowWidth, y / windowHeight, data.identifier, 0, 0, data.force, parent.id);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttouch.x = x / windowWidth;\n\t\t\t\t\ttouch.y = y / windowHeight;\n\t\t\t\t\ttouch.id = data.identifier;\n\t\t\t\t\ttouch.dx = 0;\n\t\t\t\t\ttouch.dy = 0;\n\t\t\t\t\ttouch.pressure = data.force;\n\t\t\t\t\ttouch.device = parent.id;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentTouches.set (data.identifier, touch);\n\t\t\t\t\n\t\t\t\tTouch.onStart.dispatch (touch);\n\t\t\t\t\n\t\t\t\tif (primaryTouch == null) {\n\t\t\t\t\t\n\t\t\t\t\tprimaryTouch = touch;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (touch == primaryTouch) {\n\t\t\t\t\t\n\t\t\t\t\tparent.onMouseDown.dispatch (x, y, 0);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttouch = currentTouches.get (data.identifier);\n\t\t\t\t\n\t\t\t\tif (touch != null) {\n\t\t\t\t\t\n\t\t\t\t\tcacheX = touch.x;\n\t\t\t\t\tcacheY = touch.y;\n\t\t\t\t\t\n\t\t\t\t\ttouch.x = x / windowWidth;\n\t\t\t\t\ttouch.y = y / windowHeight;\n\t\t\t\t\ttouch.dx = touch.x - cacheX;\n\t\t\t\t\ttouch.dy = touch.y - cacheY;\n\t\t\t\t\ttouch.pressure = data.force;\n\t\t\t\t\t\n\t\t\t\t\tswitch (event.type) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase \"touchmove\":\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tTouch.onMove.dispatch (touch);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (touch == primaryTouch) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tparent.onMouseMove.dispatch (x, y);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase \"touchend\":\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tTouch.onEnd.dispatch (touch);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcurrentTouches.remove (data.identifier);\n\t\t\t\t\t\t\tunusedTouchesPool.add (touch);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (touch == primaryTouch) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tparent.onMouseUp.dispatch (x, y, 0);\n\t\t\t\t\t\t\t\tprimaryTouch = null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase \"touchcancel\":\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tTouch.onCancel.dispatch (touch);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcurrentTouches.remove (data.identifier);\n\t\t\t\t\t\t\tunusedTouchesPool.add (touch);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (touch == primaryTouch) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t//parent.onMouseUp.dispatch (x, y, 0);\n\t\t\t\t\t\t\t\tprimaryTouch = null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function move (x:Int, y:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function resize (width:Int, height:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function setBorderless (value:Bool):Bool {\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic function setClipboard (value:String):Void {\n\t\t\n\t\tvar inputEnabled = enableTextEvents;\n\t\t\n\t\tsetEnableTextEvents (true); // create textInput if necessary\n\t\t\n\t\tvar cacheText = textInput.value;\n\t\ttextInput.value = value;\n\t\ttextInput.select ();\n\t\t\n\t\tif (Browser.document.queryCommandEnabled (\"copy\")) {\n\t\t\t\n\t\t\tBrowser.document.execCommand (\"copy\");\n\t\t\t\n\t\t}\n\t\t\n\t\ttextInput.value = cacheText;\n\t\t\n\t\tsetEnableTextEvents (inputEnabled);\n\t\t\n\t}\n\t\n\t\n\tpublic function setEnableTextEvents (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tif (textInput == null) {\n\t\t\t\t\n\t\t\t\ttextInput = cast Browser.document.createElement ('input');\n\t\t\t\ttextInput.type = 'text';\n\t\t\t\ttextInput.style.position = 'absolute';\n\t\t\t\ttextInput.style.opacity = \"0\";\n\t\t\t\ttextInput.style.color = \"transparent\";\n\t\t\t\ttextInput.value = dummyCharacter; // See: handleInputEvent()\n\t\t\t\t\n\t\t\t\tuntyped textInput.autocapitalize = \"off\";\n\t\t\t\tuntyped textInput.autocorrect = \"off\";\n\t\t\t\ttextInput.autocomplete = \"off\";\n\t\t\t\t\n\t\t\t\t// TODO: Position for mobile browsers better\n\t\t\t\t\n\t\t\t\ttextInput.style.left = \"0px\";\n\t\t\t\ttextInput.style.top = \"50%\";\n\t\t\t\t\n\t\t\t\tif (~/(iPad|iPhone|iPod).*OS 8_/gi.match (Browser.window.navigator.userAgent)) {\n\t\t\t\t\t\n\t\t\t\t\ttextInput.style.fontSize = \"0px\";\n\t\t\t\t\ttextInput.style.width = '0px';\n\t\t\t\t\ttextInput.style.height = '0px';\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttextInput.style.width = '1px';\n\t\t\t\t\ttextInput.style.height = '1px';\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tuntyped (textInput.style).pointerEvents = 'none';\n\t\t\t\ttextInput.style.zIndex = \"-10000000\";\n\t\t\t\t\n\t\t\t\tBrowser.document.body.appendChild (textInput);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!enableTextEvents) {\n\t\t\t\t\n\t\t\t\ttextInput.addEventListener ('input', handleInputEvent, true);\n\t\t\t\ttextInput.addEventListener ('blur', handleFocusEvent, true);\n\t\t\t\ttextInput.addEventListener ('cut', handleCutOrCopyEvent, true);\n\t\t\t\ttextInput.addEventListener ('copy', handleCutOrCopyEvent, true);\n\t\t\t\ttextInput.addEventListener ('paste', handlePasteEvent, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\ttextInput.focus ();\n\t\t\ttextInput.select ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (textInput != null) {\n\t\t\t\t\n\t\t\t\ttextInput.removeEventListener ('input', handleInputEvent, true);\n\t\t\t\ttextInput.removeEventListener ('blur', handleFocusEvent, true);\n\t\t\t\ttextInput.removeEventListener ('cut', handleCutOrCopyEvent, true);\n\t\t\t\ttextInput.removeEventListener ('copy', handleCutOrCopyEvent, true);\n\t\t\t\ttextInput.removeEventListener ('paste', handlePasteEvent, true);\n\t\t\t\t\n\t\t\t\ttextInput.blur ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn enableTextEvents = value;\n\t\t\n\t}\n\t\n\t\n\tpublic function setFullscreen (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tif (!requestedFullscreen && !isFullscreen) {\n\t\t\t\t\n\t\t\t\trequestedFullscreen = true;\n\t\t\t\t\n\t\t\t\tuntyped {\n\t\t\t\t\t\n\t\t\t\t\tif (element.requestFullscreen) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdocument.addEventListener (\"fullscreenchange\", handleFullscreenEvent, false);\n\t\t\t\t\t\tdocument.addEventListener (\"fullscreenerror\", handleFullscreenEvent, false);\n\t\t\t\t\t\telement.requestFullscreen ();\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (element.mozRequestFullScreen) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdocument.addEventListener (\"mozfullscreenchange\", handleFullscreenEvent, false);\n\t\t\t\t\t\tdocument.addEventListener (\"mozfullscreenerror\", handleFullscreenEvent, false);\n\t\t\t\t\t\telement.mozRequestFullScreen ();\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (element.webkitRequestFullscreen) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdocument.addEventListener (\"webkitfullscreenchange\", handleFullscreenEvent, false);\n\t\t\t\t\t\tdocument.addEventListener (\"webkitfullscreenerror\", handleFullscreenEvent, false);\n\t\t\t\t\t\telement.webkitRequestFullscreen ();\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (element.msRequestFullscreen) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdocument.addEventListener (\"MSFullscreenChange\", handleFullscreenEvent, false);\n\t\t\t\t\t\tdocument.addEventListener (\"MSFullscreenError\", handleFullscreenEvent, false);\n\t\t\t\t\t\telement.msRequestFullscreen ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (isFullscreen) {\n\t\t\t\n\t\t\trequestedFullscreen = false;\n\t\t\t\n\t\t\tuntyped {\n\t\t\t\t\n\t\t\t\tif (document.exitFullscreen) document.exitFullscreen ();\n\t\t\t\telse if (document.mozCancelFullScreen) document.mozCancelFullScreen ();\n\t\t\t\telse if (document.webkitExitFullscreen) document.webkitExitFullscreen ();\n\t\t\t\telse if (document.msExitFullscreen) document.msExitFullscreen ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic function setIcon (image:Image):Void {\n\t\t\n\t\t//var iconWidth = 16;\n\t\t//var iconHeight = 16;\n\t\t\n\t\t//image = image.clone ();\n\t\t\n\t\t//if (image.width != iconWidth || image.height != iconHeight) {\n\t\t\t//\n\t\t\t//image.resize (iconWidth, iconHeight);\n\t\t\t//\n\t\t//}\n\t\t\n\t\tImageCanvasUtil.convertToCanvas (image);\n\t\t\n\t\tvar link:LinkElement = cast Browser.document.querySelector (\"link[rel*='icon']\");\n\t\t\n\t\tif (link == null) {\n\t\t\t\n\t\t\tlink = cast Browser.document.createElement (\"link\");\n\t\t\t\n\t\t}\n\t\t\n\t\tlink.type = \"image/x-icon\";\n\t\tlink.rel = \"shortcut icon\";\n\t\tlink.href = image.buffer.src.toDataURL (\"image/x-icon\");\n\t\t\n\t\tBrowser.document.getElementsByTagName (\"head\")[0].appendChild (link);\n\t\t\n\t}\n\t\n\t\n\tpublic function setMaximized (value:Bool):Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function setMinimized (value:Bool):Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function setResizable (value:Bool):Bool {\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic function setTitle (value:String):String {\n\t\t\n\t\tif (value != null) {\n\t\t\t\n\t\t\tBrowser.document.title = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function updateSize ():Void {\n\t\t\n\t\tif (!parent.__resizable) return;\n\t\t\n\t\tvar elementWidth, elementHeight;\n\t\t\n\t\tif (element != null) {\n\t\t\t\n\t\t\telementWidth = element.clientWidth;\n\t\t\telementHeight = element.clientHeight;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\telementWidth = Browser.window.innerWidth;\n\t\t\telementHeight = Browser.window.innerHeight;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (elementWidth != cacheElementWidth || elementHeight != cacheElementHeight) {\n\t\t\t\n\t\t\tcacheElementWidth = elementWidth;\n\t\t\tcacheElementHeight = elementHeight;\n\t\t\t\n\t\t\tvar stretch = resizeElement || (setWidth == 0 && setHeight == 0);\n\t\t\t\n\t\t\tif (element != null && (div == null || (div != null && stretch))) {\n\t\t\t\t\n\t\t\t\tif (stretch) {\n\t\t\t\t\t\n\t\t\t\t\tif (parent.width != elementWidth || parent.height != elementHeight) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.width = elementWidth;\n\t\t\t\t\t\tparent.height = elementHeight;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (canvas != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (element != cast canvas) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcanvas.width = Math.round (elementWidth * scale);\n\t\t\t\t\t\t\t\tcanvas.height = Math.round (elementHeight * scale);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcanvas.style.width = elementWidth + \"px\";\n\t\t\t\t\t\t\t\tcanvas.style.height = elementHeight + \"px\";\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdiv.style.width = elementWidth + \"px\";\n\t\t\t\t\t\t\tdiv.style.height = elementHeight + \"px\";\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tparent.onResize.dispatch (elementWidth, elementHeight);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tvar scaleX = (setWidth != 0) ? (elementWidth / setWidth) : 1;\n\t\t\t\t\tvar scaleY = (setHeight != 0) ? (elementHeight / setHeight) : 1;\n\t\t\t\t\t\n\t\t\t\t\tvar targetWidth = elementWidth;\n\t\t\t\t\tvar targetHeight = elementHeight;\n\t\t\t\t\tvar marginLeft = 0;\n\t\t\t\t\tvar marginTop = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (scaleX < scaleY) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttargetHeight = Math.floor (setHeight * scaleX);\n\t\t\t\t\t\tmarginTop = Math.floor ((elementHeight - targetHeight) / 2);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttargetWidth = Math.floor (setWidth * scaleY);\n\t\t\t\t\t\tmarginLeft = Math.floor ((elementWidth - targetWidth) / 2);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (canvas != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (element != cast canvas) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcanvas.style.width = targetWidth + \"px\";\n\t\t\t\t\t\t\tcanvas.style.height = targetHeight + \"px\";\n\t\t\t\t\t\t\tcanvas.style.marginLeft = marginLeft + \"px\";\n\t\t\t\t\t\t\tcanvas.style.marginTop = marginTop + \"px\";\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdiv.style.width = targetWidth + \"px\";\n\t\t\t\t\t\tdiv.style.height = targetHeight + \"px\";\n\t\t\t\t\t\tdiv.style.marginLeft = marginLeft + \"px\";\n\t\t\t\t\t\tdiv.style.marginTop = marginTop + \"px\";\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package lime.app;\n\n\n#if macro\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nusing haxe.macro.Tools;\n#end\n\n#if (!macro && !display)\n@:genericBuild(lime._macros.EventMacro.build())\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Event<T> {\n\t\n\t\n\tpublic var canceled (default, null):Bool;\n\t\n\t@:noCompletion @:dox(hide) public var __listeners:Array<T>;\n\t@:noCompletion @:dox(hide) public var __repeat:Array<Bool>;\n\tprivate var __priorities:Array<Int>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t#if !macro\n\t\tcanceled = false;\n\t\t__listeners = new Array ();\n\t\t__priorities = new Array<Int> ();\n\t\t__repeat = new Array<Bool> ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function add (listener:T, once:Bool = false, priority:Int = 0):Void {\n\t\t\n\t\t#if !macro\n\t\tfor (i in 0...__priorities.length) {\n\t\t\t\n\t\t\tif (priority > __priorities[i]) {\n\t\t\t\t\n\t\t\t\t__listeners.insert (i, cast listener);\n\t\t\t\t__priorities.insert (i, priority);\n\t\t\t\t__repeat.insert (i, !once);\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__listeners.push (cast listener);\n\t\t__priorities.push (priority);\n\t\t__repeat.push (!once);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if macro\n\tprivate static function build () {\n\t\t\n\t\tvar typeArgs;\n\t\tvar typeResult;\n\t\t\n\t\tswitch (Context.follow (Context.getLocalType ())) {\n\t\t\t\n\t\t\tcase TInst (_, [ Context.follow (_) => TFun (args, result) ]):\n\t\t\t\t\n\t\t\t\ttypeArgs = args;\n\t\t\t\ttypeResult = result;\n\t\t\t\n\t\t\tcase TInst (localType, _):\n\t\t\t\t\n\t\t\t\tContext.fatalError (\"Invalid number of type parameters for \" + localType.toString (), Context.currentPos ());\n\t\t\t\treturn null;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tthrow false;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar typeParam = TFun (typeArgs, typeResult);\n\t\tvar typeString = \"\";\n\t\t\n\t\tif (typeArgs.length == 0) {\n\t\t\t\n\t\t\ttypeString = \"Void->\";\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor (arg in typeArgs) {\n\t\t\t\t\n\t\t\t\ttypeString += arg.t.toString () + \"->\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\ttypeString += typeResult.toString ();\n\t\ttypeString = StringTools.replace (typeString, \"->\", \"_\");\n\t\ttypeString = StringTools.replace (typeString, \".\", \"_\");\n\t\ttypeString = StringTools.replace (typeString, \"<\", \"_\");\n\t\ttypeString = StringTools.replace (typeString, \">\", \"_\");\n\t\t\n\t\tvar name = \"_Event_\" + typeString;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tContext.getType (\"lime.app.\" + name);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\tvar pos = Context.currentPos ();\n\t\t\tvar fields = Context.getBuildFields ();\n\t\t\t\n\t\t\tvar args:Array<FunctionArg> = [];\n\t\t\tvar argName, argNames = [];\n\t\t\t\n\t\t\tfor (i in 0...typeArgs.length) {\n\t\t\t\t\n\t\t\t\tif (i == 0) {\n\t\t\t\t\t\n\t\t\t\t\targName = \"a\";\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\targName = \"a\" + i;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\targNames.push (Context.parse (argName, pos));\n\t\t\t\targs.push ({ name: argName, type: typeArgs[i].t.toComplexType () });\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar dispatch = macro {\n\t\t\t\t\n\t\t\t\tcanceled = false;\n\t\t\t\t\n\t\t\t\tvar listeners = __listeners;\n\t\t\t\tvar repeat = __repeat;\n\t\t\t\tvar i = 0;\n\t\t\t\t\n\t\t\t\twhile (i < listeners.length) {\n\t\t\t\t\t\n\t\t\t\t\tlisteners[i] ($a{argNames});\n\t\t\t\t\t\n\t\t\t\t\tif (!repeat[i]) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.remove (cast listeners[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (canceled) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar i = 0;\n\t\t\tvar field;\n\t\t\t\n\t\t\twhile (i < fields.length) {\n\t\t\t\t\n\t\t\t\tfield = fields[i];\n\t\t\t\t\n\t\t\t\tif (field.name == \"__listeners\" || field.name == \"dispatch\") {\n\t\t\t\t\t\n\t\t\t\t\tfields.remove (field);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ti++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfields.push ( { name: \"__listeners\", access: [ APublic ], kind: FVar (TPath ({ pack: [], name: \"Array\", params: [ TPType (typeParam.toComplexType ()) ] })), pos: pos } );\n\t\t\tfields.push ( { name: \"dispatch\", access: [ APublic ], kind: FFun ( { args: args, expr: dispatch, params: [], ret: macro :Void } ), pos: pos } );\n\t\t\t\n\t\t\tContext.defineType ({\n\t\t\t\t\n\t\t\t\tpos: pos,\n\t\t\t\tpack: [ \"lime\", \"app\" ],\n\t\t\t\tname: name,\n\t\t\t\tkind: TDClass (),\n\t\t\t\tfields: fields,\n\t\t\t\tparams: [ { name: \"T\" } ],\n\t\t\t\tmeta: [ { name: \":dox\", params: [ macro hide ], pos: pos }, { name: \":noCompletion\", pos: pos } ]\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t}\n\t\t\n\t\treturn TPath ( { pack: [ \"lime\", \"app\" ], name: name, params: [ TPType (typeParam.toComplexType ()) ] } ).toType ();\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function cancel ():Void {\n\t\t\n\t\tcanceled = true;\n\t\t\n\t}\n\t\n\t\n\tpublic var dispatch:Dynamic;\n\t\n\t//macro public function dispatch (ethis:Expr, args:Array<Expr>):Void {\n\t\t//\n\t\t//return macro {\n\t\t\t//\n\t\t\t//var listeners = $ethis.listeners;\n\t\t\t//var repeat = $ethis.repeat;\n\t\t\t//var i = 0;\n\t\t\t//\n\t\t\t//while (i < listeners.length) {\n\t\t\t\t//\n\t\t\t\t//listeners[i] ($a{args});\n\t\t\t\t//\n\t\t\t\t//if (!repeat[i]) {\n\t\t\t\t\t//\n\t\t\t\t\t//$ethis.remove (listeners[i]);\n\t\t\t\t\t//\n\t\t\t\t//} else {\n\t\t\t\t\t//\n\t\t\t\t\t//i++;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t//}\n\t\t\t//\n\t\t//}\n\t\t//\n\t//}\n\t\n\t\n\tpublic function has (listener:T):Bool {\n\t\t\n\t\t#if !macro\n\t\tfor (l in __listeners) {\n\t\t\t\n\t\t\tif (Reflect.compareMethods (l, listener)) return true;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function remove (listener:T):Void {\n\t\t\n\t\t#if !macro\n\t\tvar i = __listeners.length;\n\t\t\n\t\twhile (--i >= 0) {\n\t\t\t\n\t\t\tif (Reflect.compareMethods (__listeners[i], listener)) {\n\t\t\t\t\n\t\t\t\t__listeners.splice (i, 1);\n\t\t\t\t__priorities.splice (i, 1);\n\t\t\t\t__repeat.splice (i, 1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.app;\n\n\nimport lime.system.System;\nimport lime.system.ThreadPool;\nimport lime.utils.Log;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:allow(lime.app.Promise)\n\n\n/*@:generic*/ class Future<T> {\n\t\n\t\n\tpublic var error (default, null):Dynamic;\n\tpublic var isComplete (default, null):Bool;\n\tpublic var isError (default, null):Bool;\n\tpublic var value (default, null):T;\n\t\n\tprivate var __completeListeners:Array<T->Void>;\n\tprivate var __errorListeners:Array<Dynamic->Void>;\n\tprivate var __progressListeners:Array<Int->Int->Void>;\n\t\n\t\n\tpublic function new (work:Void->T = null, async:Bool = false) {\n\t\t\n\t\tif (work != null) {\n\t\t\t\n\t\t\tif (async) {\n\t\t\t\t\n\t\t\t\tvar promise = new Promise<T> ();\n\t\t\t\tpromise.future = this;\n\t\t\t\t\n\t\t\t\tFutureWork.queue ({ promise: promise, work: work });\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t\tvalue = work ();\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\t\n\t\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\t\n\t\t\t\t\terror = e;\n\t\t\t\t\tisError = true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function ofEvents<T> (onComplete:Event<T->Void>, onError:Event<Dynamic->Void> = null, onProgress:Event<Int->Int->Void> = null):Future<T> {\n\t\t\n\t\tvar promise = new Promise<T> ();\n\t\t\n\t\tonComplete.add (function (data) promise.complete (data), true);\n\t\tif (onError != null) onError.add (function (error) promise.error (error), true);\n\t\tif (onProgress != null) onProgress.add (function (progress, total) promise.progress (progress, total), true);\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic function onComplete (listener:T->Void):Future<T> {\n\t\t\n\t\tif (listener != null) {\n\t\t\t\n\t\t\tif (isComplete) {\n\t\t\t\t\n\t\t\t\tlistener (value);\n\t\t\t\t\n\t\t\t} else if (!isError) {\n\t\t\t\t\n\t\t\t\tif (__completeListeners == null) {\n\t\t\t\t\t\n\t\t\t\t\t__completeListeners = new Array ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__completeListeners.push (listener);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function onError (listener:Dynamic->Void):Future<T> {\n\t\t\n\t\tif (listener != null) {\n\t\t\t\n\t\t\tif (isError) {\n\t\t\t\t\n\t\t\t\tlistener (error);\n\t\t\t\t\n\t\t\t} else if (!isComplete) {\n\t\t\t\t\n\t\t\t\tif (__errorListeners == null) {\n\t\t\t\t\t\n\t\t\t\t\t__errorListeners = new Array ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__errorListeners.push (listener);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function onProgress (listener:Int->Int->Void):Future<T> {\n\t\t\n\t\tif (listener != null) {\n\t\t\t\n\t\t\tif (__progressListeners == null) {\n\t\t\t\t\n\t\t\t\t__progressListeners = new Array ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__progressListeners.push (listener);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function ready (waitTime:Int = -1):Future<T> {\n\t\t\n\t\t#if js\n\t\t\n\t\tif (isComplete || isError) {\n\t\t\t\n\t\t\treturn this;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tLog.warn (\"Cannot block thread in JavaScript\");\n\t\t\treturn this;\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tif (isComplete || isError) {\n\t\t\t\n\t\t\treturn this;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar time = System.getTimer ();\n\t\t\tvar end = time + waitTime;\n\t\t\t\n\t\t\twhile (!isComplete && !isError && time <= end) {\n\t\t\t\t\n\t\t\t\t#if sys\n\t\t\t\tSys.sleep (0.01);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\ttime = System.getTimer ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function result (waitTime:Int = -1):Null<T> {\n\t\t\n\t\tready (waitTime);\n\t\t\n\t\tif (isComplete) {\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function then<U> (next:T->Future<U>):Future<U> {\n\t\t\n\t\tif (isComplete) {\n\t\t\t\n\t\t\treturn next (value);\n\t\t\t\n\t\t} else if (isError) {\n\t\t\t\n\t\t\tvar future = new Future<U> ();\n\t\t\tfuture.onError (error);\n\t\t\treturn future;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar promise = new Promise<U> ();\n\t\t\t\n\t\t\tonError (promise.error);\n\t\t\tonProgress (promise.progress);\n\t\t\t\n\t\t\tonComplete (function (val) {\n\t\t\t\t\n\t\t\t\tvar future = next (val);\n\t\t\t\tfuture.onError (promise.error);\n\t\t\t\tfuture.onComplete (promise.complete);\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t\treturn promise.future;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function withError (error:Dynamic):Future<Dynamic> {\n\t\t\n\t\tvar future = new Future<Dynamic> ();\n\t\tfuture.isError = true;\n\t\tfuture.error = error;\n\t\treturn future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function withValue<T> (value:T):Future<T> {\n\t\t\n\t\tvar future = new Future<T> ();\n\t\tfuture.isComplete = true;\n\t\tfuture.value = value;\n\t\treturn future;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:dox(hide) private class FutureWork {\n\t\n\t\n\tprivate static var threadPool:ThreadPool;\n\t\n\t\n\tpublic static function queue (state:Dynamic = null):Void {\n\t\t\n\t\tif (threadPool == null) {\n\t\t\t\n\t\t\tthreadPool = new ThreadPool ();\n\t\t\tthreadPool.doWork.add (threadPool_doWork);\n\t\t\tthreadPool.onComplete.add (threadPool_onComplete);\n\t\t\tthreadPool.onError.add (threadPool_onError);\n\t\t\t\n\t\t}\n\t\t\n\t\tthreadPool.queue (state);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate static function threadPool_doWork (state:Dynamic):Void {\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tvar result = state.work ();\n\t\t\tthreadPool.sendComplete ({ promise: state.promise, result: result } );\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\tthreadPool.sendError ({ promise: state.promise, error: e } );\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function threadPool_onComplete (state:Dynamic):Void {\n\t\t\n\t\tstate.promise.complete (state.result);\n\t\t\n\t}\n\t\n\t\n\tprivate static function threadPool_onError (state:Dynamic):Void {\n\t\t\n\t\tstate.promise.error (state.error);\n\t\t\n\t}\n\t\n\t\n}","package lime.app;\n\n\nimport haxe.io.Bytes;\nimport haxe.io.Path;\nimport haxe.macro.Compiler;\nimport haxe.Timer;\nimport lime.app.Event;\nimport lime.media.AudioBuffer;\nimport lime.system.System;\nimport lime.utils.AssetLibrary;\nimport lime.utils.Assets;\nimport lime.utils.AssetType;\nimport lime.utils.Log;\n\n#if (js && html5)\nimport js.html.Image;\nimport js.html.SpanElement;\nimport js.Browser;\nimport lime.net.HTTPRequest;\n#elseif flash\nimport flash.display.LoaderInfo;\nimport flash.display.Sprite;\nimport flash.events.ProgressEvent;\nimport flash.Lib;\n#end\n\n@:access(lime.utils.AssetLibrary)\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Preloader #if flash extends Sprite #end {\n\t\n\t\n\tpublic var complete (default, null):Bool;\n\tpublic var onComplete = new Event<Void->Void> ();\n\tpublic var onProgress = new Event<Int->Int->Void> ();\n\t\n\tprivate var bytesLoaded:Int;\n\tprivate var bytesLoadedCache = new Map<AssetLibrary, Int> ();\n\tprivate var bytesLoadedCache2 = new Map<String, Int> ();\n\tprivate var bytesTotal:Int;\n\tprivate var bytesTotalCache = new Map<String, Int> ();\n\tprivate var initLibraryNames:Bool;\n\tprivate var libraries:Array<AssetLibrary>;\n\tprivate var libraryNames:Array<String>;\n\tprivate var loadedLibraries:Int;\n\tprivate var loadedStage:Bool;\n\tprivate var preloadComplete:Bool;\n\tprivate var preloadStarted:Bool;\n\tprivate var simulateProgress:Bool;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t#if flash\n\t\tsuper ();\n\t\t#end\n\t\t\n\t\tbytesLoaded = 0;\n\t\tbytesTotal = 0;\n\t\tlibraries = new Array<AssetLibrary> ();\n\t\tlibraryNames = new Array<String> ();\n\t\t\n\t\tonProgress.add (update);\n\t\t\n\t\t#if simulate_preloader\n\t\tvar preloadTime = Std.parseInt (Compiler.getDefine (\"simulate_preloader\"));\n\t\t\n\t\tif (preloadTime == 1) {\n\t\t\t\n\t\t\tpreloadTime = 3000;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar startTime = System.getTimer ();\n\t\tvar currentTime = 0;\n\t\tvar timeStep = Std.int (1000 / 60);\n\t\tvar timer = new Timer (timeStep);\n\t\t\n\t\tsimulateProgress = true;\n\t\t\n\t\ttimer.run = function () {\n\t\t\t\n\t\t\tcurrentTime = System.getTimer () - startTime;\n\t\t\tif (currentTime > preloadTime) currentTime = preloadTime;\n\t\t\tonProgress.dispatch (currentTime, preloadTime);\n\t\t\t\n\t\t\tif (currentTime >= preloadTime) {\n\t\t\t\t\n\t\t\t\ttimer.stop ();\n\t\t\t\t\n\t\t\t\tsimulateProgress = false;\n\t\t\t\tstart ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t};\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function addLibrary (library:AssetLibrary):Void {\n\t\t\n\t\tlibraries.push (library);\n\t\t\n\t}\n\t\n\t\n\tpublic function addLibraryName (name:String):Void {\n\t\t\n\t\tif (libraryNames.indexOf (name) == -1) {\n\t\t\t\n\t\t\tlibraryNames.push (name);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function create (config:Config):Void {\n\t\t\n\t\t#if flash\n\t\tLib.current.addChild (this);\n\t\t\n\t\tLib.current.loaderInfo.addEventListener (flash.events.Event.COMPLETE, loaderInfo_onComplete);\n\t\tLib.current.loaderInfo.addEventListener (flash.events.Event.INIT, loaderInfo_onInit);\n\t\tLib.current.loaderInfo.addEventListener (ProgressEvent.PROGRESS, loaderInfo_onProgress);\n\t\tLib.current.addEventListener (flash.events.Event.ENTER_FRAME, current_onEnter);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function load ():Void {\n\t\t\n\t\tfor (library in libraries) {\n\t\t\t\n\t\t\tbytesTotal += library.bytesTotal;\n\t\t\t\n\t\t}\n\t\t\n\t\tloadedLibraries = -1;\n\t\tpreloadStarted = false;\n\t\t\n\t\tfor (library in libraries) {\n\t\t\t\n\t\t\tLog.verbose (\"Preloading asset library\");\n\t\t\t\n\t\t\tlibrary.load ().onProgress (function (loaded, total) {\n\t\t\t\t\n\t\t\t\tif (!bytesLoadedCache.exists (library)) {\n\t\t\t\t\t\n\t\t\t\t\tbytesLoaded += loaded;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tbytesLoaded += loaded - bytesLoadedCache.get (library);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbytesLoadedCache.set (library, loaded);\n\t\t\t\t\n\t\t\t\tif (!simulateProgress) {\n\t\t\t\t\t\n\t\t\t\t\tonProgress.dispatch (bytesLoaded, bytesTotal);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}).onComplete (function (_) {\n\t\t\t\t\n\t\t\t\tif (!bytesLoadedCache.exists (library)) {\n\t\t\t\t\t\n\t\t\t\t\tbytesLoaded += library.bytesTotal;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tbytesLoaded += library.bytesTotal - bytesLoadedCache.get (library);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tloadedAssetLibrary ();\n\t\t\t\t\n\t\t\t}).onError (function (e) {\n\t\t\t\t\n\t\t\t\tLog.error (e);\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t}\n\t\t\n\t\t// TODO: Handle bytes total better\n\t\t\n\t\tfor (name in libraryNames) {\n\t\t\t\n\t\t\tbytesTotal += 200;\n\t\t\t\n\t\t}\n\t\t\n\t\tloadedLibraries++;\n\t\tpreloadStarted = true;\n\t\tupdateProgress ();\n\t\t\n\t}\n\t\n\t\n\tprivate function loadedAssetLibrary (name:String = null):Void {\n\t\t\n\t\tloadedLibraries++;\n\t\t\n\t\tvar current = loadedLibraries;\n\t\tif (!preloadStarted) current++;\n\t\t\n\t\tvar totalLibraries = libraries.length + libraryNames.length;\n\t\t\n\t\tif (name != null) {\n\t\t\t\n\t\t\tLog.verbose (\"Loaded asset library: \" + name + \" [\" + current + \"/\" + totalLibraries + \"]\");\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tLog.verbose (\"Loaded asset library [\" + current + \"/\" + totalLibraries + \"]\");\n\t\t\t\n\t\t}\n\t\t\n\t\tupdateProgress ();\n\t\t\n\t}\n\t\n\t\n\tprivate function start ():Void {\n\t\t\n\t\tif (complete) return;\n\t\t\n\t\tcomplete = true;\n\t\t\n\t\t#if flash\n\t\tif (Lib.current.contains (this)) {\n\t\t\t\n\t\t\tLib.current.removeChild (this);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tonComplete.dispatch ();\n\t\t\n\t}\n\t\n\t\n\tprivate function update (loaded:Int, total:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function updateProgress ():Void {\n\t\t\n\t\tif (!simulateProgress) {\n\t\t\t\n\t\t\tonProgress.dispatch (bytesLoaded, bytesTotal);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (#if flash loadedStage && #end loadedLibraries == libraries.length && !initLibraryNames) {\n\t\t\t\n\t\t\tinitLibraryNames = true;\n\t\t\t\n\t\t\tfor (name in libraryNames) {\n\t\t\t\t\n\t\t\t\tLog.verbose (\"Preloading asset library: \" + name);\n\t\t\t\t\n\t\t\t\tAssets.loadLibrary (name).onProgress (function (loaded, total) {\n\t\t\t\t\t\n\t\t\t\t\tif (total > 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!bytesTotalCache.exists (name)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbytesTotalCache.set (name, total);\n\t\t\t\t\t\t\tbytesTotal += (total - 200);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (loaded > total) loaded = total;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!bytesLoadedCache2.exists (name)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbytesLoaded += loaded;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbytesLoaded += loaded - bytesLoadedCache2.get (name);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbytesLoadedCache2.set (name, loaded);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!simulateProgress) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tonProgress.dispatch (bytesLoaded, bytesTotal);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}).onComplete (function (library) {\n\t\t\t\t\t\n\t\t\t\t\tvar total = 200;\n\t\t\t\t\t\n\t\t\t\t\tif (bytesTotalCache.exists (name)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttotal = bytesTotalCache.get (name);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!bytesLoadedCache2.exists (name)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbytesLoaded += total;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbytesLoaded += total - bytesLoadedCache2.get (name);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tloadedAssetLibrary (name);\n\t\t\t\t\t\n\t\t\t\t}).onError (function (e) {\n\t\t\t\t\t\n\t\t\t\t\tLog.error (e);\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}\t\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!simulateProgress && #if flash loadedStage && #end loadedLibraries == (libraries.length + libraryNames.length)) {\n\t\t\t\n\t\t\tif (!preloadComplete) {\n\t\t\t\t\n\t\t\t\tpreloadComplete = true;\n\t\t\t\t\n\t\t\t\tLog.verbose (\"Preload complete\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tstart ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t#if flash\n\tprivate function current_onEnter (event:flash.events.Event):Void {\n\t\t\n\t\tif (!loadedStage && Lib.current.loaderInfo.bytesLoaded == Lib.current.loaderInfo.bytesTotal) {\n\t\t\t\n\t\t\tloadedStage = true;\n\t\t\t\n\t\t\tif (bytesTotalCache[\"_root\"] > 0) {\n\t\t\t\t\n\t\t\t\tvar loaded = Lib.current.loaderInfo.bytesLoaded;\n\t\t\t\tbytesLoaded += loaded - bytesLoadedCache2[\"_root\"];\n\t\t\t\tbytesLoadedCache2[\"_root\"] = loaded;\n\t\t\t\t\n\t\t\t\tupdateProgress ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (loadedStage) {\n\t\t\t\n\t\t\tLib.current.removeEventListener (flash.events.Event.ENTER_FRAME, current_onEnter);\n\t\t\tLib.current.loaderInfo.removeEventListener (flash.events.Event.COMPLETE, loaderInfo_onComplete);\n\t\t\tLib.current.loaderInfo.removeEventListener (flash.events.Event.INIT, loaderInfo_onInit);\n\t\t\tLib.current.loaderInfo.removeEventListener (ProgressEvent.PROGRESS, loaderInfo_onProgress);\n\t\t\t\n\t\t\tupdateProgress ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function loaderInfo_onComplete (event:flash.events.Event):Void {\n\t\t\n\t\t//loadedStage = true;\n\t\t\n\t\tif (bytesTotalCache[\"_root\"] > 0) {\n\t\t\t\n\t\t\tvar loaded = Lib.current.loaderInfo.bytesLoaded;\n\t\t\tbytesLoaded += loaded - bytesLoadedCache2[\"_root\"];\n\t\t\tbytesLoadedCache2[\"_root\"] = loaded;\n\t\t\t\n\t\t\tupdateProgress ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function loaderInfo_onInit (event:flash.events.Event):Void {\n\t\t\n\t\tbytesTotal += Lib.current.loaderInfo.bytesTotal;\n\t\tbytesTotalCache[\"_root\"] = Lib.current.loaderInfo.bytesTotal;\n\t\t\n\t\tif (bytesTotalCache[\"_root\"] > 0) {\n\t\t\t\n\t\t\tvar loaded = Lib.current.loaderInfo.bytesLoaded;\n\t\t\tbytesLoaded += loaded;\n\t\t\tbytesLoadedCache2[\"_root\"] = loaded;\n\t\t\t\n\t\t\tupdateProgress ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function loaderInfo_onProgress (event:flash.events.ProgressEvent):Void {\n\t\t\n\t\tif (bytesTotalCache[\"_root\"] > 0) {\n\t\t\t\n\t\t\tvar loaded = Lib.current.loaderInfo.bytesLoaded;\n\t\t\tbytesLoaded += loaded - bytesLoadedCache2[\"_root\"];\n\t\t\tbytesLoadedCache2[\"_root\"] = loaded;\n\t\t\t\n\t\t\tupdateProgress ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n}","package lime.app;\n\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:allow(lime.app.Future)\n#if !js @:generic #end\n\n\nclass Promise<T> {\n\t\n\t\n\tpublic var future (default, null):Future<T>;\n\tpublic var isComplete (get, null):Bool;\n\tpublic var isError (get, null):Bool;\n\t\n\t\n\t#if (js && html5 && es5get)\n\tprivate static function __init__ () {\n\t\t\n\t\tvar p = untyped Promise.prototype;\n\t\tuntyped Object.defineProperties (p, {\n\t\t\t\"isComplete\": { get: p.get_isComplete },\n\t\t\t\"isError\": { get: p.get_isError }\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tfuture = new Future<T> ();\n\t\t\n\t}\n\t\n\t\n\tpublic function complete (data:T):Promise<T> {\n\t\t\n\t\tif (!future.isError) {\n\t\t\t\n\t\t\tfuture.isComplete = true;\n\t\t\tfuture.value = data;\n\t\t\t\n\t\t\tif (future.__completeListeners != null) {\n\t\t\t\t\n\t\t\t\tfor (listener in future.__completeListeners) {\n\t\t\t\t\t\n\t\t\t\t\tlistener (data);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfuture.__completeListeners = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function completeWith (future:Future<T>):Promise<T> {\n\t\t\n\t\tfuture.onComplete (complete);\n\t\tfuture.onError (error);\n\t\tfuture.onProgress (progress);\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t\n\tpublic function error (msg:Dynamic):Promise<T> {\n\t\t\n\t\tif (!future.isComplete) {\n\t\t\t\n\t\t\tfuture.isError = true;\n\t\t\tfuture.error = msg;\n\t\t\t\n\t\t\tif (future.__errorListeners != null) {\n\t\t\t\t\n\t\t\t\tfor (listener in future.__errorListeners) {\n\t\t\t\t\t\n\t\t\t\t\tlistener (msg);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfuture.__errorListeners = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function progress (progress:Int, total:Int):Promise<T> {\n\t\t\n\t\tif (!future.isError && !future.isComplete) {\n\t\t\t\n\t\t\tif (future.__progressListeners != null) {\n\t\t\t\t\n\t\t\t\tfor (listener in future.__progressListeners) {\n\t\t\t\t\t\n\t\t\t\t\tlistener (progress, total);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_isComplete ():Bool {\n\t\t\n\t\treturn future.isComplete;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_isError ():Bool {\n\t\t\n\t\treturn future.isError;\n\t\t\n\t}\n\t\n\t\n}","package lime._macros; #if macro\n\n\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\n\nusing haxe.macro.Tools;\n\n\nclass EventMacro {\n\t\n\t\n\tpublic static function build () {\n\t\t\n\t\tvar typeArgs;\n\t\tvar typeResult;\n\t\t\n\t\tswitch (Context.follow (Context.getLocalType ())) {\n\t\t\t\n\t\t\tcase TInst (_, [ Context.follow (_) => TFun (args, result) ]):\n\t\t\t\t\n\t\t\t\ttypeArgs = args;\n\t\t\t\ttypeResult = result;\n\t\t\t\n\t\t\tcase TInst (localType, _):\n\t\t\t\t\n\t\t\t\tContext.fatalError (\"Invalid number of type parameters for \" + localType.toString (), Context.currentPos ());\n\t\t\t\treturn null;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tthrow false;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar typeParam = TFun (typeArgs, typeResult);\n\t\tvar typeString = \"\";\n\t\t\n\t\tif (typeArgs.length == 0) {\n\t\t\t\n\t\t\ttypeString = \"Void->\";\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor (arg in typeArgs) {\n\t\t\t\t\n\t\t\t\ttypeString += arg.t.toString () + \"->\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\ttypeString += typeResult.toString ();\n\t\ttypeString = StringTools.replace (typeString, \"->\", \"_\");\n\t\ttypeString = StringTools.replace (typeString, \".\", \"_\");\n\t\ttypeString = StringTools.replace (typeString, \"<\", \"_\");\n\t\ttypeString = StringTools.replace (typeString, \">\", \"_\");\n\t\t\n\t\tvar name = \"_Event_\" + typeString;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tContext.getType (\"lime.app.\" + name);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\tvar pos = Context.currentPos ();\n\t\t\tvar fields = Context.getBuildFields ();\n\t\t\t\n\t\t\tvar args:Array<FunctionArg> = [];\n\t\t\tvar argName, argNames = [];\n\t\t\t\n\t\t\tfor (i in 0...typeArgs.length) {\n\t\t\t\t\n\t\t\t\tif (i == 0) {\n\t\t\t\t\t\n\t\t\t\t\targName = \"a\";\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\targName = \"a\" + i;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\targNames.push (Context.parse (argName, pos));\n\t\t\t\targs.push ({ name: argName, type: typeArgs[i].t.toComplexType () });\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar dispatch = macro {\n\t\t\t\t\n\t\t\t\tcanceled = false;\n\t\t\t\t\n\t\t\t\tvar listeners = __listeners;\n\t\t\t\tvar repeat = __repeat;\n\t\t\t\tvar i = 0;\n\t\t\t\t\n\t\t\t\twhile (i < listeners.length) {\n\t\t\t\t\t\n\t\t\t\t\tlisteners[i] ($a{argNames});\n\t\t\t\t\t\n\t\t\t\t\tif (!repeat[i]) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.remove (cast listeners[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (canceled) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar i = 0;\n\t\t\tvar field;\n\t\t\t\n\t\t\twhile (i < fields.length) {\n\t\t\t\t\n\t\t\t\tfield = fields[i];\n\t\t\t\t\n\t\t\t\tif (field.name == \"__listeners\" || field.name == \"dispatch\") {\n\t\t\t\t\t\n\t\t\t\t\tfields.remove (field);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ti++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfields.push ( { name: \"__listeners\", access: [ APublic ], kind: FVar (TPath ({ pack: [], name: \"Array\", params: [ TPType (typeParam.toComplexType ()) ] })), pos: pos } );\n\t\t\tfields.push ( { name: \"dispatch\", access: [ APublic ], kind: FFun ( { args: args, expr: dispatch, params: [], ret: macro :Void } ), pos: pos } );\n\t\t\t\n\t\t\tContext.defineType ({\n\t\t\t\t\n\t\t\t\tpos: pos,\n\t\t\t\tpack: [ \"lime\", \"app\" ],\n\t\t\t\tname: name,\n\t\t\t\tkind: TDClass (),\n\t\t\t\tfields: fields,\n\t\t\t\tparams: [ { name: \"T\" } ],\n\t\t\t\tmeta: [ { name: \":dox\", params: [ macro hide ], pos: pos }, { name: \":noCompletion\", pos: pos } ]\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t}\n\t\t\n\t\treturn TPath ( { pack: [ \"lime\", \"app\" ], name: name, params: [ TPType (typeParam.toComplexType ()) ] } ).toType ();\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end","package lime.ui;\n\n\nimport lime.app.Application;\nimport lime.app.Config;\nimport lime.app.Event;\nimport lime.graphics.Image;\nimport lime.graphics.Renderer;\nimport lime.system.Display;\nimport lime.system.DisplayMode;\n\n#if openfl\nimport openfl.display.Stage;\n#elseif flash\nimport flash.display.Stage;\n#else\ntypedef Stage = Dynamic;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Window {\n\t\n\t\n\tpublic var application (default, null):Application;\n\tpublic var borderless (get, set):Bool;\n\tpublic var config:WindowConfig;\n\tpublic var display (get, null):Display;\n\tpublic var displayMode (get, set):DisplayMode;\n\tpublic var enableTextEvents (get, set):Bool;\n\tpublic var fullscreen (get, set):Bool;\n\tpublic var height (get, set):Int;\n\tpublic var id (default, null):Int;\n\tpublic var maximized (get, set):Bool;\n\tpublic var minimized (get, set):Bool;\n\tpublic var onActivate = new Event<Void->Void> ();\n\tpublic var onClose = new Event<Void->Void> ();\n\tpublic var onCreate = new Event<Void->Void> ();\n\tpublic var onDeactivate = new Event<Void->Void> ();\n\tpublic var onDropFile = new Event<String->Void> ();\n\tpublic var onEnter = new Event<Void->Void> ();\n\tpublic var onFocusIn = new Event<Void->Void> ();\n\tpublic var onFocusOut = new Event<Void->Void> ();\n\tpublic var onFullscreen = new Event<Void->Void> ();\n\tpublic var onKeyDown = new Event<KeyCode->KeyModifier->Void> ();\n\tpublic var onKeyUp = new Event<KeyCode->KeyModifier->Void> ();\n\tpublic var onLeave = new Event<Void->Void> ();\n\tpublic var onMinimize = new Event<Void->Void> ();\n\tpublic var onMouseDown = new Event<Float->Float->Int->Void> ();\n\tpublic var onMouseMove = new Event<Float->Float->Void> ();\n\tpublic var onMouseMoveRelative = new Event<Float->Float->Void> ();\n\tpublic var onMouseUp = new Event<Float->Float->Int->Void> ();\n\tpublic var onMouseWheel = new Event<Float->Float->Void> ();\n\tpublic var onMove = new Event<Float->Float->Void> ();\n\tpublic var onResize = new Event<Int->Int->Void> ();\n\tpublic var onRestore = new Event<Void->Void> ();\n\tpublic var onTextEdit = new Event<String->Int->Int->Void> ();\n\tpublic var onTextInput = new Event<String->Void> ();\n\tpublic var renderer:Renderer;\n\tpublic var resizable (get, set):Bool;\n\tpublic var scale (get, null):Float;\n\tpublic var stage:Stage;\n\tpublic var title (get, set):String;\n\tpublic var width (get, set):Int;\n\tpublic var x (get, set):Int;\n\tpublic var y (get, set):Int;\n\t\n\t@:noCompletion private var backend:WindowBackend;\n\t@:noCompletion private var __borderless:Bool;\n\t@:noCompletion private var __fullscreen:Bool;\n\t@:noCompletion private var __height:Int;\n\t@:noCompletion private var __maximized:Bool;\n\t@:noCompletion private var __minimized:Bool;\n\t@:noCompletion private var __resizable:Bool;\n\t@:noCompletion private var __scale:Float;\n\t@:noCompletion private var __title:String;\n\t@:noCompletion private var __width:Int;\n\t@:noCompletion private var __x:Int;\n\t@:noCompletion private var __y:Int;\n\t\n\t\n\t#if (js && html5 && es5get)\n\tprivate static function __init__ () {\n\t\t\n\t\tvar p = untyped Window.prototype;\n\t\tuntyped Object.defineProperties (p, {\n\t\t\t\"borderless\": { get: p.get_borderless, set: p.set_borderless },\n\t\t\t\"display\": { get: p.get_display },\n\t\t\t\"displayMode\": { get: p.get_displayMode, set: p.set_displayMode },\n\t\t\t\"enableTextEvents\": { get: p.get_enableTextEvents, set: p.set_enableTextEvents },\n\t\t\t\"fullscreen\": { get: p.get_fullscreen, set: p.set_fullscreen },\n\t\t\t\"height\": { get: p.get_height, set: p.set_height },\n\t\t\t\"maximized\": { get: p.get_maximized, set: p.set_maximized },\n\t\t\t\"resizable\": { get: p.get_resizable, set: p.set_resizable },\n\t\t\t\"scale\": { get: p.get_scale },\n\t\t\t\"title\": { get: p.get_title, set: p.set_title },\n\t\t\t\"width\": { get: p.get_width, set: p.set_width },\n\t\t\t\"x\": { get: p.get_x, set: p.set_y },\n\t\t\t\"y\": { get: p.get_x, set: p.set_y }\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (config:WindowConfig = null) {\n\t\t\n\t\tthis.config = config;\n\t\t\n\t\t__width = 0;\n\t\t__height = 0;\n\t\t__fullscreen = false;\n\t\t__scale = 1;\n\t\t__x = 0;\n\t\t__y = 0;\n\t\t__title = \"\";\n\t\tid = -1;\n\t\t\n\t\tif (config != null) {\n\t\t\t\n\t\t\tif (Reflect.hasField (config, \"width\")) __width = config.width;\n\t\t\tif (Reflect.hasField (config, \"height\")) __height = config.height;\n\t\t\tif (Reflect.hasField (config, \"x\")) __x = config.x;\n\t\t\tif (Reflect.hasField (config, \"y\")) __y = config.y;\n\t\t\t#if !web\n\t\t\tif (Reflect.hasField (config, \"fullscreen\")) __fullscreen = config.fullscreen;\n\t\t\t#end\n\t\t\tif (Reflect.hasField (config, \"borderless\")) __borderless = config.borderless;\n\t\t\tif (Reflect.hasField (config, \"resizable\")) __resizable = config.resizable;\n\t\t\tif (Reflect.hasField (config, \"title\")) __title = config.title;\n\t\t\t\n\t\t}\n\t\t\n\t\tbackend = new WindowBackend (this);\n\t\t\n\t}\n\t\n\t\n\tpublic function alert (message:String = null, title:String = null):Void {\n\t\t\n\t\tbackend.alert (message, title);\n\t\t\n\t}\n\t\n\t\n\tpublic function close ():Void {\n\t\t\n\t\tbackend.close ();\n\t\t\n\t}\n\t\n\t\n\tpublic function create (application:Application):Void {\n\t\t\n\t\tthis.application = application;\n\t\t\n\t\tif (config == null) config = {};\n\t\tbackend.create (application);\n\t\t\n\t\t#if windows\n\t\t\n\t\tvar mappings = [\n\t\t\t\n\t\t\t\"8f0e1200000000000000504944564944,Acme,platform:Windows,x:b2,a:b0,b:b1,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b5,rightshoulder:b6,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2\",\n\t\t\t\"341a3608000000000000504944564944,Afterglow PS3 Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Windows\",\n\t\t\t\"ffff0000000000000000504944564944,GameStop Gamepad,a:b0,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b2,y:b3,platform:Windows\",\n\t\t\t\"6d0416c2000000000000504944564944,Generic DirectInput Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Windows\",\n\t\t\t\"0d0f6e00000000000000504944564944,HORIPAD 4,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"6d0419c2000000000000504944564944,Logitech F710 Gamepad,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Windows\",\n\t\t\t\"88880803000000000000504944564944,PS3 Controller,a:b2,b:b1,back:b8,dpdown:h0.8,dpleft:h0.4,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b9,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:b7,rightx:a3,righty:a4,start:b11,x:b0,y:b3,platform:Windows\",\n\t\t\t\"4c056802000000000000504944564944,PS3 Controller,a:b14,b:b13,back:b0,dpdown:b6,dpleft:b7,dpright:b5,dpup:b4,guide:b16,leftshoulder:b10,leftstick:b1,lefttrigger:b8,leftx:a0,lefty:a1,rightshoulder:b11,rightstick:b2,righttrigger:b9,rightx:a2,righty:a3,start:b3,x:b15,y:b12,platform:Windows\",\n\t\t\t\"25090500000000000000504944564944,PS3 DualShock,a:b2,b:b1,back:b9,dpdown:h0.8,dpleft:h0.4,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b6,leftstick:b10,lefttrigger:b4,leftx:a0,lefty:a1,rightshoulder:b7,rightstick:b11,righttrigger:b5,rightx:a2,righty:a3,start:b8,x:b0,y:b3,platform:Windows\",\n\t\t\t\"4c05c405000000000000504944564944,Sony DualShock 4,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Windows\",\n\t\t\t\"4c05cc09000000000000504944564944,Sony DualShock 4,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Windows\",\n\t\t\t\"4c05a00b000000000000504944564944,Sony DualShock 4 Wireless Adaptor,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Windows\",\n\t\t\t\"6d0418c2000000000000504944564944,Logitech RumblePad 2 USB,platform:Windows,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"36280100000000000000504944564944,OUYA Controller,platform:Windows,a:b0,b:b3,y:b2,x:b1,start:b14,guide:b15,leftstick:b6,rightstick:b7,leftshoulder:b4,rightshoulder:b5,dpup:b8,dpleft:b10,dpdown:b9,dpright:b11,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:b12,righttrigger:b13\",\n\t\t\t\"4f0400b3000000000000504944564944,Thrustmaster Firestorm Dual Power,a:b0,b:b2,y:b3,x:b1,start:b10,guide:b8,back:b9,leftstick:b11,rightstick:b12,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b5,righttrigger:b7,platform:Windows\",\n\t\t\t\"00f00300000000000000504944564944,RetroUSB.com RetroPad,a:b1,b:b5,x:b0,y:b4,back:b2,start:b3,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Windows\",\n\t\t\t\"00f0f100000000000000504944564944,RetroUSB.com Super RetroPort,a:b1,b:b5,x:b0,y:b4,back:b2,start:b3,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Windows\",\n\t\t\t\"28040140000000000000504944564944,GamePad Pro USB,platform:Windows,a:b1,b:b2,x:b0,y:b3,back:b8,start:b9,leftshoulder:b4,rightshoulder:b5,leftx:a0,lefty:a1,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"ff113133000000000000504944564944,SVEN X-PAD,platform:Windows,a:b2,b:b3,y:b1,x:b0,start:b5,back:b4,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b8,righttrigger:b9\",\n\t\t\t\"8f0e0300000000000000504944564944,Piranha xtreme,platform:Windows,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b6,lefttrigger:b4,rightshoulder:b7,righttrigger:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2\",\n\t\t\t\"8f0e0d31000000000000504944564944,Multilaser JS071 USB,platform:Windows,a:b1,b:b2,y:b3,x:b0,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"10080300000000000000504944564944,PS2 USB,platform:Windows,a:b2,b:b1,y:b0,x:b3,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a4,righty:a2,lefttrigger:b4,righttrigger:b5\",\n\t\t\t\"79000600000000000000504944564944,G-Shark GS-GP702,a:b2,b:b1,x:b3,y:b0,back:b8,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"4b12014d000000000000504944564944,NYKO AIRFLO,a:b0,b:b1,x:b2,y:b3,back:b8,guide:b10,start:b9,leftstick:a0,rightstick:a2,leftshoulder:a3,rightshoulder:b5,dpup:h0.1,dpdown:h0.0,dpleft:h0.8,dpright:h0.2,leftx:h0.6,lefty:h0.12,rightx:h0.9,righty:h0.4,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"d6206dca000000000000504944564944,PowerA Pro Ex,a:b1,b:b2,x:b0,y:b3,back:b8,guide:b12,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.0,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"a3060cff000000000000504944564944,Saitek P2500,a:b2,b:b3,y:b1,x:b0,start:b4,guide:b10,back:b5,leftstick:b8,rightstick:b9,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,platform:Windows\",\n\t\t\t\"4f0415b3000000000000504944564944,Thrustmaster Dual Analog 3.2,platform:Windows,x:b1,a:b0,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b5,rightshoulder:b6,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"6f0e1e01000000000000504944564944,Rock Candy Gamepad for PS3,platform:Windows,a:b1,b:b2,x:b0,y:b3,back:b8,start:b9,guide:b12,leftshoulder:b4,rightshoulder:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2\",\n\t\t\t\"83056020000000000000504944564944,iBuffalo USB 2-axis 8-button Gamepad,a:b1,b:b0,y:b2,x:b3,start:b7,back:b6,leftshoulder:b4,rightshoulder:b5,leftx:a0,lefty:a1,platform:Windows\",\n\t\t\t\"10080100000000000000504944564944,PS1 USB,platform:Windows,a:b2,b:b1,x:b3,y:b0,back:b8,start:b9,leftshoulder:b6,rightshoulder:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2,lefttrigger:b4,righttrigger:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2\",\n\t\t\t\"49190204000000000000504944564944,Ipega PG-9023,a:b0,b:b1,x:b3,y:b4,back:b10,start:b11,leftstick:b13,rightstick:b14,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:b8,righttrigger:b9,platform:Windows\",\n\t\t\t\"4f0423b3000000000000504944564944,Dual Trigger 3-in-1,a:b1,b:b2,x:b0,y:b3,back:b8,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"0d0f4900000000000000504944564944,Hatsune Miku Sho Controller,a:b1,b:b2,x:b0,y:b3,back:b8,guide:b12,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"79004318000000000000504944564944,Mayflash GameCube Controller Adapter,platform:Windows,a:b1,b:b2,x:b0,y:b3,back:b0,start:b9,guide:b0,leftshoulder:b4,rightshoulder:b7,leftstick:b0,rightstick:b0,leftx:a0,lefty:a1,rightx:a5,righty:a2,lefttrigger:a3,righttrigger:a4,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2\",\n\t\t\t\"79000018000000000000504944564944,Mayflash WiiU Pro Game Controller Adapter (DInput),a:b1,b:b2,x:b0,y:b3,back:b8,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"2509e803000000000000504944564944,Mayflash Wii Classic Controller,a:b1,b:b0,x:b3,y:b2,back:b8,guide:b10,start:b9,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:b11,dpdown:b13,dpleft:b12,dpright:b14,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows\",\n\t\t\t\"300f1001000000000000504944564944,Saitek P480 Rumble Pad,a:b2,b:b3,x:b0,y:b1,back:b8,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a2,lefttrigger:b5,righttrigger:b7,platform:Windows\",\n\t\t\t\"10280900000000000000504944564944,8Bitdo SFC30 GamePad,a:b1,b:b0,y:b3,x:b4,start:b11,back:b10,leftshoulder:b6,leftx:a0,lefty:a1,rightshoulder:b7,platform:Windows\",\n\t\t\t\"63252305000000000000504944564944,USB Vibration Joystick (BM),platform:Windows,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"20380900000000000000504944564944,8Bitdo NES30 PRO Wireless,platform:Windows,a:b0,b:b1,x:b3,y:b4,leftshoulder:b6,rightshoulder:b7,lefttrigger:b8,righttrigger:b9,back:b10,start:b11,leftstick:b13,rightstick:b14,leftx:a0,lefty:a1,rightx:a3,righty:a4,dpup:h0.1,dpright:h0.2,dpdown:h0.4,dpleft:h0.8\",\n\t\t\t\"02200090000000000000504944564944,8Bitdo NES30 PRO USB,platform:Windows,a:b0,b:b1,x:b3,y:b4,leftshoulder:b6,rightshoulder:b7,lefttrigger:b8,righttrigger:b9,back:b10,start:b11,leftstick:b13,rightstick:b14,leftx:a0,lefty:a1,rightx:a3,righty:a4,dpup:h0.1,dpright:h0.2,dpdown:h0.4,dpleft:h0.8\",\n\t\t\t\"ff113133000000000000504944564944,Gembird JPD-DualForce,platform:Windows,a:b2,b:b3,x:b0,y:b1,start:b9,back:b8,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b6,righttrigger:b7,leftstick:b10,rightstick:b11\",\n\t\t\t\"341a0108000000000000504944564944,EXEQ RF USB Gamepad 8206,a:b0,b:b1,x:b2,y:b3,leftshoulder:b4,rightshoulder:b5,leftstick:b8,rightstick:b7,back:b8,start:b9,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftx:a0,lefty:a1,rightx:a2,righty:a3,platform:Windows\",\n\t\t\t\"c0111352000000000000504944564944,Battalife Joystick,platform:Windows,x:b4,a:b6,b:b7,y:b5,back:b2,start:b3,leftshoulder:b0,rightshoulder:b1,leftx:a0,lefty:a1\",\n\t\t\t\"100801e5000000000000504944564944,NEXT Classic USB Game Controller,a:b0,b:b1,back:b8,start:b9,rightx:a2,righty:a3,leftx:a0,lefty:a1,platform:Windows\",\n\t\t\t\"79000600000000000000504944564944,NGS Phantom,a:b2,b:b3,y:b1,x:b0,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b6,righttrigger:b7,platform:Windows\"\n\t\t\t\n\t\t];\n\t\t\n\t\tGamepad.addMappings (mappings);\n\t\t\n\t\t#elseif mac\n\t\t\n\t\tvar mappings = [\n\t\t\t\n\t\t\t\"0500000047532047616d657061640000,GameStop Gamepad,a:b0,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b2,y:b3,platform:Mac OS X\",\n\t\t\t\"6d0400000000000016c2000000000000,Logitech F310 Gamepad (DInput),a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Mac OS X\",\n\t\t\t\"6d0400000000000018c2000000000000,Logitech F510 Gamepad (DInput),a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Mac OS X\",\n\t\t\t\"6d040000000000001fc2000000000000,Logitech F710 Gamepad (XInput),a:b0,b:b1,back:b9,dpdown:b12,dpleft:b13,dpright:b14,dpup:b11,guide:b10,leftshoulder:b4,leftstick:b6,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b7,righttrigger:a5,rightx:a3,righty:a4,start:b8,x:b2,y:b3,platform:Mac OS X\",\n\t\t\t\"6d0400000000000019c2000000000000,Logitech Wireless Gamepad (DInput),a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Mac OS X\",\n\t\t\t\"4c050000000000006802000000000000,PS3 Controller,a:b14,b:b13,back:b0,dpdown:b6,dpleft:b7,dpright:b5,dpup:b4,guide:b16,leftshoulder:b10,leftstick:b1,lefttrigger:b8,leftx:a0,lefty:a1,rightshoulder:b11,rightstick:b2,righttrigger:b9,rightx:a2,righty:a3,start:b3,x:b15,y:b12,platform:Mac OS X\",\n\t\t\t\"4c05000000000000c405000000000000,Sony DualShock 4,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Mac OS X\",\n\t\t\t\"4c05000000000000cc09000000000000,Sony DualShock 4 V2,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Mac OS X\",\n\t\t\t\"5e040000000000008e02000000000000,X360 Controller,a:b0,b:b1,back:b9,dpdown:b12,dpleft:b13,dpright:b14,dpup:b11,guide:b10,leftshoulder:b4,leftstick:b6,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b7,righttrigger:a5,rightx:a3,righty:a4,start:b8,x:b2,y:b3,platform:Mac OS X\",\n\t\t\t\"891600000000000000fd000000000000,Razer Onza Tournament,a:b0,b:b1,y:b3,x:b2,start:b8,guide:b10,back:b9,leftstick:b6,rightstick:b7,leftshoulder:b4,rightshoulder:b5,dpup:b11,dpleft:b13,dpdown:b12,dpright:b14,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:a2,righttrigger:a5,platform:Mac OS X\",\n\t\t\t\"4f0400000000000000b3000000000000,Thrustmaster Firestorm Dual Power,a:b0,b:b2,y:b3,x:b1,start:b10,guide:b8,back:b9,leftstick:b11,rightstick:,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b5,righttrigger:b7,platform:Mac OS X\",\n\t\t\t\"8f0e0000000000000300000000000000,Piranha xtreme,platform:Mac OS X,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b6,lefttrigger:b4,rightshoulder:b7,righttrigger:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2\",\n\t\t\t\"0d0f0000000000004d00000000000000,HORI Gem Pad 3,platform:Mac OS X,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"79000000000000000600000000000000,G-Shark GP-702,a:b2,b:b1,x:b3,y:b0,back:b8,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:b6,righttrigger:b7,platform:Mac OS X\",\n\t\t\t\"4f0400000000000015b3000000000000,Thrustmaster Dual Analog 3.2,platform:Mac OS X,x:b1,a:b0,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b5,rightshoulder:b6,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"AD1B00000000000001F9000000000000,Gamestop BB-070 X360 Controller,a:b0,b:b1,back:b9,dpdown:b12,dpleft:b13,dpright:b14,dpup:b11,guide:b10,leftshoulder:b4,leftstick:b6,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b7,righttrigger:a5,rightx:a3,righty:a4,start:b8,x:b2,y:b3,platform:Mac OS X\",\n\t\t\t\"050000005769696d6f74652028303000,Wii Remote,a:b4,b:b5,y:b9,x:b10,start:b6,guide:b8,back:b7,dpup:b2,dpleft:b0,dpdown:b3,dpright:b1,leftx:a0,lefty:a1,lefttrigger:b12,righttrigger:,leftshoulder:b11,platform:Mac OS X\",\n\t\t\t\"83050000000000006020000000000000,iBuffalo USB 2-axis 8-button Gamepad,a:b1,b:b0,x:b3,y:b2,back:b6,start:b7,leftshoulder:b4,rightshoulder:b5,leftx:a0,lefty:a1,platform:Mac OS X\",\n\t\t\t\"bd1200000000000015d0000000000000,Tomee SNES USB Controller,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,leftshoulder:b4,rightshoulder:b5,leftx:a0,lefty:a1,platform:Mac OS X\",\n\t\t\t\"79000000000000001100000000000000,Retrolink Classic Controller,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,leftshoulder:b4,rightshoulder:b5,leftx:a3,lefty:a4,platform:Mac OS X\",\n\t\t\t\"5e04000000000000dd02000000000000,Xbox One Wired Controller,platform:Mac OS X,x:b2,a:b0,b:b1,y:b3,back:b9,guide:b10,start:b8,dpleft:b13,dpdown:b12,dpright:b14,dpup:b11,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b6,rightstick:b7,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"5e04000000000000ea02000000000000,Xbox Wireless Controller,platform:Mac OS X,x:b2,a:b0,b:b1,y:b3,back:b9,guide:b10,start:b8,dpleft:b13,dpdown:b12,dpright:b14,dpup:b11,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b6,rightstick:b7,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"5e04000000000000e002000000000000,Xbox Wireless Controller,platform:Mac OS X,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b10,start:b7,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b8,rightstick:b9,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"050000005769696d6f74652028313800,Wii U Pro Controller,a:b16,b:b15,x:b18,y:b17,back:b7,guide:b8,start:b6,leftstick:b23,rightstick:b24,leftshoulder:b19,rightshoulder:b20,dpup:b11,dpdown:b12,dpleft:b13,dpright:b14,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b21,righttrigger:b22,platform:Mac OS X\",\n\t\t\t\"79000000000000000018000000000000,Mayflash WiiU Pro Game Controller Adapter (DInput),a:b4,b:b8,x:b0,y:b12,back:b32,start:b36,leftstick:b40,rightstick:b44,leftshoulder:b16,rightshoulder:b20,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a4,rightx:a8,righty:a12,lefttrigger:b24,righttrigger:b28,platform:Mac OS X\",\n\t\t\t\"2509000000000000e803000000000000,Mayflash Wii Classic Controller,a:b1,b:b0,x:b3,y:b2,back:b8,guide:b10,start:b9,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:b11,dpdown:b13,dpleft:b12,dpright:b14,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Mac OS X\",\n\t\t\t\"351200000000000021ab000000000000,SFC30 Joystick,a:b1,b:b0,x:b4,y:b3,back:b10,start:b11,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Mac OS X\",\n\t\t\t\"b4040000000000000a01000000000000,Sega Saturn USB Gamepad,a:b0,b:b1,x:b3,y:b4,back:b5,guide:b2,start:b8,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Mac OS X\",\n\t\t\t\"81170000000000007e05000000000000,Sega Saturn,x:b0,a:b2,b:b4,y:b6,start:b13,dpleft:b15,dpdown:b16,dpright:b14,dpup:b17,leftshoulder:b8,lefttrigger:a5,lefttrigger:b10,rightshoulder:b9,righttrigger:a4,righttrigger:b11,leftx:a0,lefty:a2,platform:Mac OS X\",\n\t\t\t\"10280000000000000900000000000000,8Bitdo SFC30 GamePad,a:b1,b:b0,x:b4,y:b3,back:b10,start:b11,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Mac OS X\",\n\t\t\t\"d814000000000000cecf000000000000,MC Cthulhu,platform:Mac OS X,leftx:,lefty:,rightx:,righty:,lefttrigger:b6,a:b1,b:b2,y:b3,x:b0,start:b9,back:b8,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,righttrigger:b7\",\n\t\t\t\"0d0f0000000000006600000000000000,HORIPAD FPS PLUS 4,platform:Mac OS X,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:b6,righttrigger:a4\"\n\t\t\t\n\t\t];\n\t\t\n\t\tGamepad.addMappings (mappings);\n\t\t\n\t\t#elseif linux\n\t\t\n\t\tvar mappings = [\n\t\t\t\n\t\t\t\"0500000047532047616d657061640000,GameStop Gamepad,a:b0,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b2,y:b3,platform:Linux\",\n\t\t\t\"03000000ba2200002010000001010000,Jess Technology USB Game Controller,a:b2,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,righttrigger:b7,rightx:a3,righty:a2,start:b9,x:b3,y:b0,platform:Linux\",\n\t\t\t\"030000006d04000019c2000010010000,Logitech Cordless RumblePad 2,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Linux\",\n\t\t\t\"030000006d0400001dc2000014400000,Logitech F310 Gamepad (XInput),a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000006d04000016c2000011010000,Logitech F310 Gamepad (DInput),x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3,platform:Linux\",\n\t\t\t\"030000006d0400001ec2000020200000,Logitech F510 Gamepad (XInput),a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000006d04000019c2000011010000,Logitech F710 Gamepad (DInput),a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Linux\",\n\t\t\t\"030000006d0400001fc2000005030000,Logitech F710 Gamepad (XInput),a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000004c0500006802000011010000,PS3 Controller,a:b14,b:b13,back:b0,dpdown:b6,dpleft:b7,dpright:b5,dpup:b4,guide:b16,leftshoulder:b10,leftstick:b1,lefttrigger:b8,leftx:a0,lefty:a1,rightshoulder:b11,rightstick:b2,righttrigger:b9,rightx:a2,righty:a3,start:b3,x:b15,y:b12,platform:Linux\",\n\t\t\t\"030000004c050000c405000011010000,Sony DualShock 4,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Linux\",\n\t\t\t\"050000004c050000c405000000010000,Sony DualShock 4 BT,a:b1,b:b2,back:b13,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b10,lefttrigger:a3,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:a4,rightx:a2,righty:a5,start:b9,x:b0,y:b3,platform:Linux\",\n\t\t\t\"030000004c050000cc09000011010000,Sony DualShock 4 V2,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Linux\",\n\t\t\t\"050000004c050000cc09000000010000,Sony DualShock 4 V2 BT,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Linux\",\n\t\t\t\"030000004c050000a00b000011010000,Sony DualShock 4 Wireless Adaptor,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Linux\",\n\t\t\t\"030000006f0e00003001000001010000,EA Sports PS3 Controller,platform:Linux,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"03000000de280000ff11000001000000,Valve Streaming Gamepad,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000005e0400008e02000014010000,X360 Controller,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000005e0400008e02000010010000,X360 Controller,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"030000005e0400001907000000010000,X360 Wireless Controller,a:b0,b:b1,back:b6,dpdown:b14,dpleft:b11,dpright:b12,dpup:b13,guide:b8,leftshoulder:b4,leftstick:b9,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,platform:Linux\",\n\t\t\t\"03000000100800000100000010010000,Twin USB PS2 Adapter,a:b2,b:b1,y:b0,x:b3,start:b9,guide:,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a2,lefttrigger:b4,righttrigger:b5,platform:Linux\",\n\t\t\t\"03000000a306000023f6000011010000,Saitek Cyborg V.1 Game Pad,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b6,righttrigger:b7,platform:Linux\",\n\t\t\t\"030000004f04000020b3000010010000,Thrustmaster 2 in 1 DT,a:b0,b:b2,y:b3,x:b1,start:b9,guide:,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b5,righttrigger:b7,platform:Linux\",\n\t\t\t\"030000004f04000023b3000000010000,Thrustmaster Dual Trigger 3-in-1,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a5\",\n\t\t\t\"030000008f0e00000300000010010000,GreenAsia Inc.    USB Joystick     ,platform:Linux,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b6,lefttrigger:b4,rightshoulder:b7,righttrigger:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2\",\n\t\t\t\"030000008f0e00001200000010010000,GreenAsia Inc.      USB  Joystick  ,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b5,rightshoulder:b6,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2\",\n\t\t\t\"030000005e0400009102000007010000,X360 Wireless Controller,a:b0,b:b1,y:b3,x:b2,start:b7,guide:b8,back:b6,leftstick:b9,rightstick:b10,leftshoulder:b4,rightshoulder:b5,dpup:b13,dpleft:b11,dpdown:b14,dpright:b12,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:a2,righttrigger:a5,platform:Linux\",\n\t\t\t\"030000006d04000016c2000010010000,Logitech Logitech Dual Action,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"03000000260900008888000000010000,GameCube {WiseGroup USB box},a:b0,b:b2,y:b3,x:b1,start:b7,leftshoulder:,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,rightstick:,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:a4,righttrigger:a5,platform:Linux\",\n\t\t\t\"030000006d04000011c2000010010000,Logitech WingMan Cordless RumblePad,a:b0,b:b1,y:b4,x:b3,start:b8,guide:b5,back:b2,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:b9,righttrigger:b10,platform:Linux\",\n\t\t\t\"030000006d04000018c2000010010000,Logitech Logitech RumblePad 2 USB,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"05000000d6200000ad0d000001000000,Moga Pro,platform:Linux,a:b0,b:b1,y:b3,x:b2,start:b6,leftstick:b7,rightstick:b8,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:a5,righttrigger:a4\",\n\t\t\t\"030000004f04000009d0000000010000,Thrustmaster Run N Drive Wireless PS3,platform:Linux,a:b1,b:b2,x:b0,y:b3,start:b9,guide:b12,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"030000004f04000008d0000000010000,Thrustmaster Run N Drive  Wireless,platform:Linux,a:b1,b:b2,x:b0,y:b3,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"0300000000f000000300000000010000,RetroUSB.com RetroPad,a:b1,b:b5,x:b0,y:b4,back:b2,start:b3,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Linux\",\n\t\t\t\"0300000000f00000f100000000010000,RetroUSB.com Super RetroPort,a:b1,b:b5,x:b0,y:b4,back:b2,start:b3,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Linux\",\n\t\t\t\"030000006f0e00001f01000000010000,Generic X-Box pad,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"03000000280400000140000000010000,Gravis GamePad Pro USB ,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftx:a0,lefty:a1\",\n\t\t\t\"030000005e0400008902000021010000,Microsoft X-Box pad v2 (US),platform:Linux,x:b3,a:b0,b:b1,y:b4,back:b6,start:b7,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b5,lefttrigger:a2,rightshoulder:b2,righttrigger:a5,leftstick:b8,rightstick:b9,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"030000005e0400008502000000010000,Microsoft X-Box pad (Japan),platform:Linux,x:b3,a:b0,b:b1,y:b4,back:b6,start:b7,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b5,lefttrigger:a2,rightshoulder:b2,righttrigger:a5,leftstick:b8,rightstick:b9,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"030000006f0e00001e01000011010000,Rock Candy Gamepad for PS3,platform:Linux,a:b1,b:b2,x:b0,y:b3,back:b8,start:b9,guide:b12,leftshoulder:b4,rightshoulder:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2\",\n\t\t\t\"03000000250900000500000000010000,Sony PS2 pad with SmartJoy adapter,platform:Linux,a:b2,b:b1,y:b0,x:b3,start:b8,back:b9,leftstick:b10,rightstick:b11,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b4,righttrigger:b5\",\n\t\t\t\"030000008916000000fd000024010000,Razer Onza Tournament,a:b0,b:b1,y:b3,x:b2,start:b7,guide:b8,back:b6,leftstick:b9,rightstick:b10,leftshoulder:b4,rightshoulder:b5,dpup:b13,dpleft:b11,dpdown:b14,dpright:b12,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:a2,righttrigger:a5,platform:Linux\",\n\t\t\t\"030000004f04000000b3000010010000,Thrustmaster Firestorm Dual Power,a:b0,b:b2,y:b3,x:b1,start:b10,guide:b8,back:b9,leftstick:b11,rightstick:b12,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b5,righttrigger:b7,platform:Linux\",\n\t\t\t\"03000000ad1b000001f5000033050000,Hori Pad EX Turbo 2,a:b0,b:b1,y:b3,x:b2,start:b7,guide:b8,back:b6,leftstick:b9,rightstick:b10,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:a2,righttrigger:a5,platform:Linux\",\n\t\t\t\"060000004c0500006802000000010000,PS3 Controller (Bluetooth),a:b14,b:b13,y:b12,x:b15,start:b3,guide:b16,back:b0,leftstick:b1,rightstick:b2,leftshoulder:b10,rightshoulder:b11,dpup:b4,dpleft:b7,dpdown:b6,dpright:b5,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b8,righttrigger:b9,platform:Linux\",\n\t\t\t\"050000004c0500006802000000010000,PS3 Controller (Bluetooth),a:b14,b:b13,y:b12,x:b15,start:b3,guide:b16,back:b0,leftstick:b1,rightstick:b2,leftshoulder:b10,rightshoulder:b11,dpup:b4,dpleft:b7,dpdown:b6,dpright:b5,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b8,righttrigger:b9,platform:Linux\",\n\t\t\t\"03000000790000000600000010010000,DragonRise Inc.   Generic   USB  Joystick  ,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a3,rightx:a1,righty:a4\",\n\t\t\t\"03000000666600000488000000010000,Super Joy Box 5 Pro,platform:Linux,a:b2,b:b1,x:b3,y:b0,back:b9,start:b8,leftshoulder:b6,rightshoulder:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b4,righttrigger:b5,dpup:b12,dpleft:b15,dpdown:b14,dpright:b13\",\n\t\t\t\"05000000362800000100000002010000,OUYA Game Controller,a:b0,b:b3,dpdown:b9,dpleft:b10,dpright:b11,dpup:b8,guide:b14,leftshoulder:b4,leftstick:b6,lefttrigger:a2,leftx:a0,lefty:a1,platform:Linux,rightshoulder:b5,rightstick:b7,righttrigger:a5,rightx:a3,righty:a4,x:b1,y:b2\",\n\t\t\t\"05000000362800000100000003010000,OUYA Game Controller,a:b0,b:b3,dpdown:b9,dpleft:b10,dpright:b11,dpup:b8,guide:b14,leftshoulder:b4,leftstick:b6,lefttrigger:a2,leftx:a0,lefty:a1,platform:Linux,rightshoulder:b5,rightstick:b7,righttrigger:a5,rightx:a3,righty:a4,x:b1,y:b2\",\n\t\t\t\"030000008916000001fd000024010000,Razer Onza Classic Edition,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:b11,dpdown:b14,dpright:b12,dpup:b13,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"030000005e040000d102000001010000,Microsoft X-Box One pad,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"030000005e040000dd02000003020000,Microsoft X-Box One pad v2,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4,platform:Linux\",\n\t\t\t\"03000000790000001100000010010000,RetroLink Saturn Classic Controller,platform:Linux,x:b3,a:b0,b:b1,y:b4,back:b5,guide:b2,start:b8,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1\",\n\t\t\t\"050000007e0500003003000001000000,Nintendo Wii U Pro Controller,platform:Linux,a:b0,b:b1,x:b3,y:b2,back:b8,start:b9,guide:b10,leftshoulder:b4,rightshoulder:b5,leftstick:b11,rightstick:b12,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,dpup:b13,dpleft:b15,dpdown:b14,dpright:b16\",\n\t\t\t\"030000005e0400008e02000004010000,Microsoft X-Box 360 pad,platform:Linux,a:b0,b:b1,x:b2,y:b3,back:b6,start:b7,guide:b8,leftshoulder:b4,rightshoulder:b5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:a2,righttrigger:a5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2\",\n\t\t\t\"030000000d0f00002200000011010000,HORI CO. LTD. REAL ARCADE Pro.V3,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,guide:b12,start:b9,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1\",\n\t\t\t\"030000000d0f00001000000011010000,HORI CO. LTD. FIGHTING STICK 3,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,guide:b12,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7\",\n\t\t\t\"03000000f0250000c183000010010000,Goodbetterbest Ltd USB Controller,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,guide:b12,start:b9,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"0000000058626f782047616d65706100,Xbox Gamepad (userspace driver),platform:Linux,a:b0,b:b1,x:b2,y:b3,start:b7,back:b6,guide:b8,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftshoulder:b4,rightshoulder:b5,lefttrigger:a5,righttrigger:a4,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"03000000ff1100003133000010010000,PC Game Controller,a:b2,b:b1,y:b0,x:b3,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Linux\",\n\t\t\t\"030000005e0400008e02000020200000,SpeedLink XEOX Pro Analog Gamepad pad,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"030000006f0e00001304000000010000,Generic X-Box pad,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:a0,rightstick:a3,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"03000000a306000018f5000010010000,Saitek PLC Saitek P3200 Rumble Pad,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:a2,rightshoulder:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"03000000830500006020000010010000,iBuffalo USB 2-axis 8-button Gamepad,a:b1,b:b0,x:b3,y:b2,back:b6,start:b7,leftshoulder:b4,rightshoulder:b5,leftx:a0,lefty:a1,platform:Linux\",\n\t\t\t\"03000000bd12000015d0000010010000,Tomee SNES USB Controller,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,leftshoulder:b4,rightshoulder:b5,leftx:a0,lefty:a1,platform:Linux\",\n\t\t\t\"03000000790000001100000010010000,Retrolink Classic Controller,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,leftshoulder:b4,rightshoulder:b5,leftx:a0,lefty:a1,platform:Linux\",\n\t\t\t\"03000000c9110000f055000011010000,HJC Game GAMEPAD,leftx:a0,lefty:a1,dpdown:h0.4,rightstick:b11,rightshoulder:b5,rightx:a2,start:b9,righty:a3,dpleft:h0.8,lefttrigger:b6,x:b2,dpup:h0.1,back:b8,leftstick:b10,leftshoulder:b4,y:b3,a:b0,dpright:h0.2,righttrigger:b7,b:b1,platform:Linux\",\n\t\t\t\"03000000a30600000c04000011010000,Saitek P2900 Wireless Pad,a:b1,b:b2,y:b3,x:b0,start:b12,guide:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a2,lefttrigger:b4,righttrigger:b5,platform:Linux\",\n\t\t\t\"03000000341a000005f7000010010000,GameCube {HuiJia USB box},a:b1,b:b2,y:b3,x:b0,start:b9,guide:,back:,leftstick:,rightstick:,leftshoulder:,dpleft:b15,dpdown:b14,dpright:b13,leftx:a0,lefty:a1,rightx:a5,righty:a2,lefttrigger:a3,righttrigger:a4,rightshoulder:b7,dpup:b12,platform:Linux\",\n\t\t\t\"030000006e0500000320000010010000,JC-U3613M - DirectInput Mode,platform:Linux,x:b0,a:b2,b:b3,y:b1,back:b10,guide:b12,start:b11,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b8,rightstick:b9,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"030000006f0e00004601000001010000,Rock Candy Wired Controller for Xbox One,platform:Linux,a:b0,b:b1,x:b2,y:b3,leftshoulder:b4,rightshoulder:b5,back:b6,start:b7,guide:b8,leftstick:b9,rightstick:b10,lefttrigger:a2,righttrigger:a5,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"03000000380700001647000010040000,Mad Catz Wired Xbox 360 Controller,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"030000006f0e00003901000020060000,Afterglow Wired Controller for Xbox One,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4,platform:Linux\",\n\t\t\t\"030000004f04000015b3000010010000,Thrustmaster Dual Analog 4,platform:Linux,a:b0,b:b2,x:b1,y:b3,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b5,righttrigger:b7\",\n\t\t\t\"05000000102800000900000000010000,8Bitdo SFC30 GamePad,platform:Linux,x:b4,a:b1,b:b0,y:b3,back:b10,start:b11,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1\",\n\t\t\t\"03000000d81400000862000011010000,HitBox (PS3/PC) Analog Mode,platform:Linux,a:b1,b:b2,y:b3,x:b0,start:b12,guide:b9,back:b8,leftshoulder:b4,rightshoulder:b5,lefttrigger:b6,righttrigger:b7,leftx:a0,lefty:a1\",\n\t\t\t\"030000000d0f00000d00000000010000,hori,platform:Linux,a:b0,b:b6,y:b2,x:b1,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,start:b9,guide:b10,back:b8,leftshoulder:b3,rightshoulder:b7,leftx:b4,lefty:b5\",\n\t\t\t\"03000000ad1b000016f0000090040000,Mad Catz Xbox 360 Controller,platform:Linux,a:b0,b:b1,y:b3,x:b2,start:b7,guide:b8,back:b6,leftstick:b9,rightstick:b10,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:a2,righttrigger:a5\",\n\t\t\t\"03000000d814000007cd000011010000,Toodles 2008 Chimp PC/PS3,platform:Linux,a:b0,b:b1,y:b2,x:b3,start:b9,back:b8,leftshoulder:b4,rightshoulder:b5,leftx:a0,lefty:a1,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"03000000fd0500000030000000010000,InterAct GoPad I-73000 (Fighting Game Layout),platform:Linux,a:b3,b:b4,y:b1,x:b0,start:b7,back:b6,leftx:a0,lefty:a1,rightshoulder:b2,righttrigger:b5\",\n\t\t\t\"05000000010000000100000003000000,Nintendo Wiimote,platform:Linux,a:b0,b:b1,y:b3,x:b2,start:b9,guide:b10,back:b8,leftstick:b11,rightstick:b12,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7\",\n\t\t\t\"030000005e0400008e02000062230000,Microsoft X-Box 360 pad,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"03000000a30600000901000000010000,Saitek P880,a:b2,b:b3,y:b1,x:b0,leftstick:b8,rightstick:b9,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a2,lefttrigger:b6,righttrigger:b7,platform:Linux\",\n\t\t\t\"030000006f0e00000103000000020000,Logic3 Controller,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.0,dpdown:h0.4,dpright:h0.0,dpright:h0.2,dpup:h0.0,dpup:h0.1,leftshoulder:h0.0,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"05000000380700006652000025010000,Mad Catz C.T.R.L.R ,platform:Linux,x:b0,a:b1,b:b2,y:b3,back:b8,guide:b12,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3\",\n\t\t\t\"030000005e0400008e02000073050000,Speedlink TORID Wireless Gamepad,platform:Linux,x:b2,a:b0,b:b1,y:b3,back:b6,guide:b8,start:b7,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:a2,rightshoulder:b5,righttrigger:a5,leftstick:b9,rightstick:b10,leftx:a0,lefty:a1,rightx:a3,righty:a4\",\n\t\t\t\"03000000ad1b00002ef0000090040000,Mad Catz Fightpad SFxT,platform:Linux,a:b0,b:b1,y:b3,x:b2,start:b7,guide:b8,back:b6,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,lefttrigger:a2,righttrigger:a5\",\n\t\t\t\"05000000a00500003232000001000000,8Bitdo Zero GamePad,platform:Linux,a:b0,b:b1,x:b3,y:b4,back:b10,start:b11,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1\",\n\t\t\t\"030000001008000001e5000010010000,NEXT Classic USB Game Controller,a:b0,b:b1,back:b8,start:b9,rightx:a2,righty:a3,leftx:a0,lefty:a1,platform:Linux\",\n\t\t\t\"03000000100800000300000010010000,USB Gamepad,platform:Linux,a:b2,b:b1,x:b3,y:b0,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a2,lefttrigger:b4,righttrigger:b5\",\n\t\t\t\"05000000ac0500003232000001000000,VR-BOX,platform:Linux,a:b0,b:b1,x:b2,y:b3,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a2,lefttrigger:b4,righttrigger:b5\",\n\t\t\t\"03000000780000000600000010010000,Microntek USB Joystick,platform:Linux,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,leftshoulder:b6,lefttrigger:b4,rightshoulder:b7,righttrigger:b5,leftx:a0,lefty:a1\"\n\t\t\t\n\t\t];\n\t\t\n\t\tGamepad.addMappings (mappings);\n\t\t\n\t\t#elseif (ios || tvos)\n\t\t\n\t\tvar mappings = [\n\t\t\t\n\t\t\t\"4d466947616d65706164010000000000,MFi Extended Gamepad,a:b0,b:b1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,righttrigger:a5,rightx:a3,righty:a4,start:b6,x:b2,y:b3,\",\n\t\t\t\"4d466947616d65706164020000000000,MFi Gamepad,a:b0,b:b1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,rightshoulder:b5,start:b6,x:b2,y:b3,\",\n\t\t\t\"4d466947616d65706164030000000000,MFi Apple TV Remote,a:b0,b:b1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,rightshoulder:b5,start:b6,x:b2,y:b3,\",\n\t\t\t\n\t\t];\n\t\t\n\t\tGamepad.addMappings (mappings);\n\t\t\n\t\t#end\n\t\t\n\t\tif (renderer != null) {\n\t\t\t\n\t\t\trenderer.create ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function focus ():Void {\n\t\t\n\t\tbackend.focus ();\n\t\t\n\t}\n\t\n\t\n\tpublic function move (x:Int, y:Int):Void {\n\t\t\n\t\tbackend.move (x, y);\n\t\t\n\t\t__x = x;\n\t\t__y = y;\n\t\t\n\t}\n\t\n\t\n\tpublic function resize (width:Int, height:Int):Void {\n\t\t\n\t\tbackend.resize (width, height);\n\t\t\n\t\t__width = width;\n\t\t__height = height;\n\t\t\n\t}\n\t\n\t\n\tpublic function setIcon (image:Image):Void {\n\t\t\n\t\tif (image == null) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tbackend.setIcon (image);\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn \"[object Window]\";\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_display ():Display {\n\t\t\n\t\treturn backend.getDisplay ();\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_displayMode ():DisplayMode {\n\t\t\n\t\treturn backend.getDisplayMode ();\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_displayMode (value:DisplayMode):DisplayMode {\n\t\t\n\t\treturn backend.setDisplayMode (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_borderless ():Bool {\n\t\t\n\t\treturn __borderless;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_borderless (value:Bool):Bool {\n\t\t\n\t\treturn __borderless = backend.setBorderless (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_enableTextEvents ():Bool {\n\t\t\n\t\treturn backend.getEnableTextEvents ();\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_enableTextEvents (value:Bool):Bool {\n\t\t\n\t\treturn backend.setEnableTextEvents (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_fullscreen ():Bool {\n\t\t\n\t\treturn __fullscreen;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_fullscreen (value:Bool):Bool {\n\t\t\n\t\treturn __fullscreen = backend.setFullscreen (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_height ():Int {\n\t\t\n\t\treturn __height;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_height (value:Int):Int {\n\t\t\n\t\tresize (__width, value);\n\t\treturn __height;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_maximized ():Bool {\n\t\t\n\t\treturn __maximized;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_maximized (value:Bool):Bool {\n\t\t\n\t\t__minimized = false;\n\t\treturn __maximized = backend.setMaximized (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_minimized ():Bool {\n\t\t\n\t\treturn __minimized;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_minimized (value:Bool):Bool {\n\t\t\n\t\t__maximized = false;\n\t\treturn __minimized = backend.setMinimized (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_resizable ():Bool {\n\t\t\n\t\treturn __resizable;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_resizable (value:Bool):Bool {\n\t\t\n\t\t__resizable = backend.setResizable (value);\n\t\treturn __resizable;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_scale ():Float {\n\t\t\n\t\treturn __scale;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_title ():String {\n\t\t\n\t\treturn __title;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_title (value:String):String {\n\t\t\n\t\treturn __title = backend.setTitle (value);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_width ():Int {\n\t\t\n\t\treturn __width;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_width (value:Int):Int {\n\t\t\n\t\tresize (value, __height);\n\t\treturn __width;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_x ():Int {\n\t\t\n\t\treturn __x;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_x (value:Int):Int {\n\t\t\n\t\tmove (value, __y);\n\t\treturn __x;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_y ():Int {\n\t\t\n\t\treturn __y;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_y (value:Int):Int {\n\t\t\n\t\tmove (__x, value);\n\t\treturn __y;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if air\n@:noCompletion private typedef WindowBackend = lime._backend.air.AIRWindow;\n#elseif flash\n@:noCompletion private typedef WindowBackend = lime._backend.flash.FlashWindow;\n#elseif (js && html5)\n@:noCompletion private typedef WindowBackend = lime._backend.html5.HTML5Window;\n#else\n@:noCompletion private typedef WindowBackend = lime._backend.native.NativeWindow;\n#end\n","package lime.ui;\n\n\nimport lime._backend.native.NativeCFFI;\nimport lime.app.Event;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nclass Joystick {\n\t\n\t\n\tpublic static var devices = new Map<Int, Joystick> ();\n\tpublic static var onConnect = new Event<Joystick->Void> ();\n\t\n\tpublic var connected (default, null):Bool;\n\tpublic var guid (get, never):String;\n\tpublic var id (default, null):Int;\n\tpublic var name (get, never):String;\n\tpublic var numAxes (get, never):Int;\n\tpublic var numButtons (get, never):Int;\n\tpublic var numHats (get, never):Int;\n\tpublic var numTrackballs (get, never):Int;\n\tpublic var onAxisMove = new Event<Int->Float->Void> ();\n\tpublic var onButtonDown = new Event<Int->Void> ();\n\tpublic var onButtonUp = new Event<Int->Void> ();\n\tpublic var onDisconnect = new Event<Void->Void> ();\n\tpublic var onHatMove = new Event<Int->JoystickHatPosition->Void> ();\n\tpublic var onTrackballMove = new Event<Int->Float->Float->Void> ();\n\t\n\t\n\tpublic function new (id:Int) {\n\t\t\n\t\tthis.id = id;\n\t\tconnected = true;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __connect (id:Int):Void {\n\t\t\n\t\tif (!devices.exists (id)) {\n\t\t\t\n\t\t\tvar joystick = new Joystick (id);\n\t\t\tdevices.set (id, joystick);\n\t\t\tonConnect.dispatch (joystick);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __disconnect (id:Int):Void {\n\t\t\n\t\tvar joystick = devices.get (id);\n\t\tif (joystick != null) joystick.connected = false;\n\t\tdevices.remove (id);\n\t\tif (joystick != null) joystick.onDisconnect.dispatch ();\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\t@:noCompletion private static function __getDeviceData ():Array<Dynamic> {\n\t\t\n\t\treturn (untyped navigator.getGamepads) ? untyped navigator.getGamepads () : (untyped navigator.webkitGetGamepads) ? untyped navigator.webkitGetGamepads () : null;\n\t\t\n\t}\n\t#end\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_guid ():String {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_joystick_get_device_guid (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = __getDeviceData ();\n\t\treturn devices[this.id].id;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_name ():String {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_joystick_get_device_name (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = __getDeviceData ();\n\t\treturn devices[this.id].id;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_numAxes ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_joystick_get_num_axes (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = __getDeviceData ();\n\t\treturn devices[this.id].axes.length;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_numButtons ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_joystick_get_num_buttons (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = __getDeviceData ();\n\t\treturn devices[this.id].buttons.length;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_numHats ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_joystick_get_num_hats (this.id);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_numTrackballs ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_joystick_get_num_trackballs (this.id);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.ui;\n\n\nimport lime._backend.native.NativeCFFI;\nimport lime.app.Event;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n@:access(lime.ui.Joystick)\n\n\nclass Gamepad {\n\t\n\t\n\tpublic static var devices = new Map<Int, Gamepad> ();\n\tpublic static var onConnect = new Event<Gamepad->Void> ();\n\t\n\tpublic var connected (default, null):Bool;\n\tpublic var guid (get, never):String;\n\tpublic var id (default, null):Int;\n\tpublic var name (get, never):String;\n\tpublic var onAxisMove = new Event<GamepadAxis->Float->Void> ();\n\tpublic var onButtonDown = new Event<GamepadButton->Void> ();\n\tpublic var onButtonUp = new Event<GamepadButton->Void> ();\n\tpublic var onDisconnect = new Event<Void->Void> ();\n\t\n\t\n\tpublic function new (id:Int) {\n\t\t\n\t\tthis.id = id;\n\t\tconnected = true;\n\t\t\n\t}\n\t\n\t\n\tpublic static function addMappings (mappings:Array<String>):Void {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tNativeCFFI.lime_gamepad_add_mappings (mappings);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __connect (id:Int):Void {\n\t\t\n\t\tif (!devices.exists (id)) {\n\t\t\t\n\t\t\tvar gamepad = new Gamepad (id);\n\t\t\tdevices.set (id, gamepad);\n\t\t\tonConnect.dispatch (gamepad);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __disconnect (id:Int):Void {\n\t\t\n\t\tvar gamepad = devices.get (id);\n\t\tif (gamepad != null) gamepad.connected = false;\n\t\tdevices.remove (id);\n\t\tif (gamepad != null) gamepad.onDisconnect.dispatch ();\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_guid ():String {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_gamepad_get_device_guid (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = Joystick.__getDeviceData ();\n\t\treturn devices[this.id].id;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_name ():String {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_gamepad_get_device_name (this.id);\n\t\t#elseif (js && html5)\n\t\tvar devices = Joystick.__getDeviceData ();\n\t\treturn devices[this.id].id;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.system;\n\n\nimport haxe.Constraints.Function;\nimport lime.app.Application;\nimport lime.app.Event;\n\n#if cpp\nimport cpp.vm.Deque;\nimport cpp.vm.Thread;\n#elseif neko\nimport neko.vm.Deque;\nimport neko.vm.Thread;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass ThreadPool {\n\t\n\t\n\tpublic var currentThreads (default, null):Int;\n\tpublic var doWork = new Event<Function->Void> ();\n\tpublic var maxThreads:Int;\n\tpublic var minThreads:Int;\n\tpublic var onComplete = new Event<Function->Void> ();\n\tpublic var onError = new Event<Function->Void> ();\n\tpublic var onProgress = new Event<Function->Void> ();\n\tpublic var onRun = new Event<Function->Void> ();\n\t\n\t#if (cpp || neko)\n\tprivate var __synchronous:Bool;\n\tprivate var __workCompleted:Int;\n\tprivate var __workIncoming = new Deque<ThreadPoolMessage> ();\n\tprivate var __workQueued:Int;\n\tprivate var __workResult = new Deque<ThreadPoolMessage> ();\n\t#end\n\t\n\t\n\tpublic function new (minThreads:Int = 0, maxThreads:Int = 1) {\n\t\t\n\t\tthis.minThreads = minThreads;\n\t\tthis.maxThreads = maxThreads;\n\t\t\n\t\tcurrentThreads = 0;\n\t\t\n\t\t#if (cpp || neko)\n\t\t__workQueued = 0;\n\t\t__workCompleted = 0;\n\t\t#end\n\t\t\n\t\t#if (emscripten || force_synchronous)\n\t\t__synchronous = true;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t//public function cancel (id:String):Void {\n\t\t//\n\t\t//\n\t\t//\n\t//}\n\t\n\t\n\t//public function isCanceled (id:String):Bool {\n\t\t//\n\t\t//\n\t\t//\n\t//}\n\t\n\t\n\tpublic function queue (state:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\t\n\t\tif (Application.current != null && !__synchronous) {\n\t\t\t\n\t\t\t__workIncoming.add (new ThreadPoolMessage (WORK, state));\n\t\t\t__workQueued++;\n\t\t\t\n\t\t\tif (currentThreads < maxThreads && currentThreads < (__workQueued - __workCompleted)) {\n\t\t\t\t\n\t\t\t\tcurrentThreads++;\n\t\t\t\tThread.create (__doWork);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!Application.current.onUpdate.has (__update)) {\n\t\t\t\t\n\t\t\t\tApplication.current.onUpdate.add (__update);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__synchronous = true;\n\t\t\trunWork (state);\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\trunWork (state);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function sendComplete (state:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\tif (!__synchronous) {\n\t\t\t\n\t\t\t__workResult.add (new ThreadPoolMessage (COMPLETE, state));\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tonComplete.dispatch (state);\n\t\t\n\t}\n\t\n\t\n\tpublic function sendError (state:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\tif (!__synchronous) {\n\t\t\t\n\t\t\t__workResult.add (new ThreadPoolMessage (ERROR, state));\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tonError.dispatch (state);\n\t\t\n\t}\n\t\n\t\n\tpublic function sendProgress (state:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\tif (!__synchronous) {\n\t\t\t\n\t\t\t__workResult.add (new ThreadPoolMessage (PROGRESS, state));\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tonProgress.dispatch (state);\n\t\t\n\t}\n\t\n\t\n\tprivate function runWork (state:Dynamic = null):Void {\n\t\t\n\t\t#if (cpp || neko)\n\t\tif (!__synchronous) {\n\t\t\t\n\t\t\t__workResult.add (new ThreadPoolMessage (WORK, state));\n\t\t\tdoWork.dispatch (state);\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tonRun.dispatch (state);\n\t\tdoWork.dispatch (state);\n\t\t\n\t}\n\t\n\t\n\t#if (cpp || neko)\n\t\n\tprivate function __doWork ():Void {\n\t\t\n\t\twhile (true) {\n\t\t\t\n\t\t\tvar message = __workIncoming.pop (true);\n\t\t\t\n\t\t\tif (message.type == WORK) {\n\t\t\t\t\n\t\t\t\trunWork (message.state);\n\t\t\t\t\n\t\t\t} else if (message.type == EXIT) {\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __update (deltaTime:Int):Void {\n\t\t\n\t\tif (__workQueued > __workCompleted) {\n\t\t\t\n\t\t\tvar message = __workResult.pop (false);\n\t\t\t\n\t\t\twhile (message != null) {\n\t\t\t\t\n\t\t\t\tswitch (message.type) {\n\t\t\t\t\t\n\t\t\t\t\tcase WORK:\n\t\t\t\t\t\t\n\t\t\t\t\t\tonRun.dispatch (message.state);\n\t\t\t\t\t\n\t\t\t\t\tcase PROGRESS:\n\t\t\t\t\t\t\n\t\t\t\t\t\tonProgress.dispatch (message.state);\n\t\t\t\t\t\n\t\t\t\t\tcase COMPLETE, ERROR:\n\t\t\t\t\t\t\n\t\t\t\t\t\t__workCompleted++;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (currentThreads > (__workQueued - __workCompleted) || currentThreads > maxThreads) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcurrentThreads--;\n\t\t\t\t\t\t\t__workIncoming.add (new ThreadPoolMessage (EXIT, null));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (message.type == COMPLETE) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tonComplete.dispatch (message.state);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tonError.dispatch (message.state);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmessage = __workResult.pop (false);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t// TODO: Add sleep if keeping minThreads running with no work?\n\t\t\t\n\t\t\tif (currentThreads == 0 && minThreads <= 0) {\n\t\t\t\t\n\t\t\t\tApplication.current.onUpdate.remove (__update);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#end\n\t\n\t\n}\n\n\nprivate enum ThreadPoolMessageType {\n\t\n\tCOMPLETE;\n\tERROR;\n\tEXIT;\n\tPROGRESS;\n\tWORK;\n\t\n}\n\n\nprivate class ThreadPoolMessage {\n\t\n\t\n\tpublic var state:Dynamic;\n\tpublic var type:ThreadPoolMessageType;\n\t\n\t\n\tpublic function new (type:ThreadPoolMessageType, state:Dynamic) {\n\t\t\n\t\tthis.type = type;\n\t\tthis.state = state;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics;\n\n\nimport lime.app.Event;\nimport lime.math.Rectangle;\nimport lime.ui.Window;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Renderer {\n\t\n\t\n\tpublic var context:RenderContext;\n\tpublic var onContextLost = new Event<Void->Void> ();\n\tpublic var onContextRestored = new Event<RenderContext->Void> ();\n\tpublic var onRender = new Event<Void->Void> ();\n\tpublic var type:RendererType;\n\tpublic var window:Window;\n\t\n\t@:noCompletion private var backend:RendererBackend;\n\t\n\t\n\tpublic function new (window:Window) {\n\t\t\n\t\tthis.window = window;\n\t\t\n\t\tbackend = new RendererBackend (this);\n\t\t\n\t\tthis.window.renderer = this;\n\t\t\n\t}\n\t\n\t\n\tpublic function create ():Void {\n\t\t\n\t\tbackend.create ();\n\t\t\n\t}\n\t\n\t\n\tpublic function flip ():Void {\n\t\t\n\t\tbackend.flip ();\n\t\t\n\t}\n\t\n\t\n\tpublic function readPixels (rect:Rectangle = null):Image {\n\t\t\n\t\treturn backend.readPixels (rect);\n\t\t\n\t}\n\t\n\t\n\tprivate function render ():Void {\n\t\t\n\t\tbackend.render ();\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if flash\n@:noCompletion private typedef RendererBackend = lime._backend.flash.FlashRenderer;\n#elseif (js && html5)\n@:noCompletion private typedef RendererBackend = lime._backend.html5.HTML5Renderer;\n#else\n@:noCompletion private typedef RendererBackend = lime._backend.native.NativeRenderer;\n#end","package lime.ui;\n\n\nimport lime.app.Event;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Touch {\n\t\n\t\n\tpublic static var onCancel = new Event<Touch->Void> ();\n\tpublic static var onEnd = new Event<Touch->Void> ();\n\tpublic static var onMove = new Event<Touch->Void> ();\n\tpublic static var onStart = new Event<Touch->Void> ();\n\t\n\tpublic var device:Int;\n\tpublic var dx:Float;\n\tpublic var dy:Float;\n\tpublic var id:Int;\n\tpublic var pressure:Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\tpublic function new (x:Float, y:Float, id:Int, dx:Float, dy:Float, pressure:Float, device:Int) {\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.id = id;\n\t\tthis.dx = dx;\n\t\tthis.dy = dy;\n\t\tthis.pressure = pressure;\n\t\tthis.device = device;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics; #if lime_console\n\n\nimport cpp.Float32;\nimport cpp.UInt8;\nimport cpp.UInt16;\nimport cpp.UInt32;\nimport cpp.Pointer;\nimport lime.ConsoleIncludePaths;\nimport lime.graphics.console.IndexBuffer;\nimport lime.graphics.console.Shader;\nimport lime.graphics.console.Primitive;\nimport lime.graphics.console.RenderState;\nimport lime.graphics.console.Texture;\nimport lime.graphics.console.TextureAddressMode;\nimport lime.graphics.console.TextureFilter;\nimport lime.graphics.console.TextureFormat;\nimport lime.graphics.console.VertexBuffer;\nimport lime.graphics.console.VertexDecl;\nimport lime.math.Matrix4;\nimport lime.utils.Float32Array;\n\n\n@:include(\"ConsoleRenderContext.h\")\n@:native(\"cpp::Struct<lime::ConsoleRenderContext>\")\nextern class ConsoleRenderContext {\n\n\t@:native(\"ConsoleRenderContext()\")\n\tpublic static var singleton:ConsoleRenderContext;\n\n\tpublic var width (get, never):Int;\n\tpublic var height (get, never):Int;\n\n\tpublic function createIndexBuffer (count:Int):IndexBuffer;\n\tpublic function createVertexBuffer (decl:VertexDecl, count:Int):VertexBuffer;\n\tpublic function createTexture (format:TextureFormat, width:Int, height:Int, data:Pointer<UInt8>):Texture;\n\n\tpublic function transientIndexBuffer (count:Int):IndexBuffer;\n\tpublic function transientVertexBuffer (decl:VertexDecl, count:Int):VertexBuffer;\n\n\tpublic function destroyIndexBuffer (ib:IndexBuffer):Void;\n\tpublic function destroyVertexBuffer (vb:VertexBuffer):Void;\n\tpublic function destroyTexture (tex:Texture):Void;\n\n\tpublic function lookupShader (name:String):Shader;\n\n\t@:overload(function(r:UInt8, g:UInt8, b:UInt8, a:UInt8):Void{})\n\t@:overload(function(r:UInt8, g:UInt8, b:UInt8, a:UInt8, depth:Float32):Void{})\n\tpublic function clear (\n\t\tr:UInt8, g:UInt8, b:UInt8, a:UInt8,\n\t\tdepth:Float32 /* = 1.0 */,\n\t\tstencil:UInt8 /* = 0 */\n\t):Void;\n\n\tpublic function bindShader (shader:Shader):Void;\n\n\t@:overload(function(x:UInt16, y:UInt16, width:UInt16, height:UInt16):Void{})\n\t@:overload(function(x:UInt16, y:UInt16, width:UInt16, height:UInt16, nearPlane:Float32):Void{})\n\tpublic function setViewport (\n\t\tx:UInt16, y:UInt16, width:UInt16, height:UInt16,\n\t\tnearPlane:Float32 /* = 0.0 */,\n\t\tfarPlane:Float32 /* = 1.0 */\n\t):Void;\n\n\tpublic function setRasterizerState (state:RasterizerState):Void;\n\tpublic function setDepthStencilState (state:DepthStencilState):Void;\n\tpublic function setBlendState (state:BlendState):Void;\n\n\tpublic function setPixelShaderConstantF (startRegister:Int, vec4:Pointer<Float32>, vec4count:Int):Void;\n\tpublic function setVertexShaderConstantF (startRegister:Int, vec4:Pointer<Float32>, vec4count:Int):Void;\n\n\tpublic function setVertexSource (vb:VertexBuffer):Void;\n\tpublic function setIndexSource (ib:IndexBuffer):Void;\n\n\tpublic function setTexture (sampler:Int, texture:Texture):Void;\n\tpublic function setTextureFilter (sampler:Int, min:TextureFilter, mag:TextureFilter):Void;\n\tpublic function setTextureAddressMode (sampler:Int, u:TextureAddressMode, v:TextureAddressMode):Void;\n\n\tpublic function draw (primitive:Primitive, startVertex:UInt32, primitiveCount:UInt32):Void;\n\tpublic function drawIndexed (primitive:Primitive, vertexCount:UInt32, startIndex:UInt32, primitiveCount:UInt32):Void;\n\n\tpublic function debugReadFrameBuffer (dest:Pointer<UInt8>, width:Int, height:Int):Void;\n\n\tprivate function get_width ():Int;\n\tprivate function get_height ():Int;\n\n}\n\n\n#else\n\n\nimport lime.graphics.console.Shader;\nimport lime.graphics.console.Primitive;\nimport lime.graphics.console.IndexBuffer;\nimport lime.graphics.console.VertexBuffer;\n\n\nclass ConsoleRenderContext {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic var width (get, never):Int;\n\tpublic var height (get, never):Int;\n\n\tpublic function createIndexBuffer (indices, count:Int):IndexBuffer { return new IndexBuffer (); }\n\tpublic function createVertexBuffer (decl, count:Int):VertexBuffer { return new VertexBuffer (); }\n\tpublic function lookupShader (name:String):Shader { return new Shader (); }\n\n\tpublic function clear (r:Int, g:Int, b:Int, a:Int, depth:Float = 1.0, stencil:Int = 0):Void {}\n\n\tpublic function bindShader (shader:Shader):Void {}\n\n\tpublic function setViewport (x, y, width, height, nearPlane = 0.0, farPlane = 1.0):Void {}\n\n\tpublic function setVertexShaderConstantF (startRegister, vec4, vec4count):Void {}\n\n\tpublic function setVertexSource (vb:VertexBuffer):Void {}\n\tpublic function setIndexSource (ib:IndexBuffer):Void {}\n\n\tpublic function draw (primitive, startVertex, primitiveCount):Void {}\n\tpublic function drawIndexed (primitive, vertexCount, startIndex, primitiveCount):Void {}\n\n\tprivate function get_width ():Int { return 0; }\n\tprivate function get_height ():Int { return 0; }\n\t\n\t\n}\n\n\n#end\n","package lime.graphics;\n#if (flash && !doc_gen)\ntypedef FlashRenderContext = flash.display.Sprite;\n#else\n\n\nclass FlashRenderContext {\n\t\n\t\n\tpublic var accessibilityImplementation:Dynamic /*flash.accessibility.AccessibilityImplementation*/;\n\tpublic var accessibilityProperties:Dynamic /*flash.accessibility.AccessibilityProperties*/;\n\tpublic var alpha:Float;\n\tpublic var blendMode:Dynamic /*BlendMode*/;\n\tpublic var blendShader (null, default):Dynamic /*Shader*/;\n\tpublic var buttonMode:Bool;\n\tpublic var cacheAsBitmap:Bool;\n\tpublic var contextMenu:Dynamic /*flash.ui.ContextMenu*/;\n\tpublic var doubleClickEnabled:Bool;\n\tpublic var dropTarget (default, null):Dynamic /*DisplayObject*/;\n\tpublic var filters:Array<Dynamic /*flash.filters.BitmapFilter*/>;\n\tpublic var focusRect:Dynamic;\n\tpublic var graphics (default, null):Dynamic /*Graphics*/;\n\tpublic var height:Float;\n\tpublic var hitArea:Dynamic /*Sprite*/;\n\tpublic var loaderInfo (default, null):Dynamic /*LoaderInfo*/;\n\tpublic var mask:Dynamic /*DisplayObject*/;\n\tpublic var mouseChildren:Bool;\n\tpublic var mouseEnabled:Bool;\n\tpublic var mouseX (default, null):Float;\n\tpublic var mouseY (default, null):Float;\n\tpublic var name:String;\n\tpublic var needsSoftKeyboard:Bool;\n\tpublic var numChildren (default, null):Int;\n\tpublic var opaqueBackground:Null<UInt>;\n\tpublic var parent (default, null):Dynamic /*DisplayObjectContainer*/;\n\tpublic var root (default, null):Dynamic /*DisplayObject*/;\n\tpublic var rotation:Float;\n\tpublic var rotationX:Float;\n\tpublic var rotationY:Float;\n\tpublic var rotationZ:Float;\n\tpublic var scale9Grid:Dynamic /*flash.geom.Rectangle*/;\n\tpublic var scaleX:Float;\n\tpublic var scaleY:Float;\n\tpublic var scaleZ:Float;\n\tpublic var scrollRect:Dynamic /*flash.geom.Rectangle*/;\n\tpublic var softKeyboardInputAreaOfInterest:Dynamic /*flash.geom.Rectangle*/;\n\tpublic var soundTransform:Dynamic /*flash.media.SoundTransform*/;\n\tpublic var stage (default, null):Dynamic /*Stage*/;\n\tpublic var tabChildren:Bool;\n\tpublic var tabEnabled:Bool;\n\tpublic var tabIndex:Int;\n\tpublic var textSnapshot (default, null):Dynamic /*flash.text.TextSnapshot*/;\n\tpublic var transform:Dynamic /*flash.geom.Transform*/;\n\tpublic var useHandCursor:Bool;\n\tpublic var visible:Bool;\n\tpublic var width:Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\tpublic var z:Float;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function addChild (child:Dynamic /*DisplayObject*/):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function addChildAt (child:Dynamic /*DisplayObject*/, index:Int):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function addEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {};\n\tpublic function areInaccessibleObjectsUnderPoint (point:Dynamic /*flash.geom.Point*/):Bool { return false; };\n\tpublic function contains (child:Dynamic /*DisplayObject*/):Bool { return false; };\n\tpublic function dispatchEvent (event:Dynamic /*Event*/):Bool { return false; };\n\tpublic function getBounds (targetCoordinateSpace:Dynamic /*DisplayObject*/):Dynamic /*flash.geom.Rectangle*/ { return null; };\n\tpublic function getChildAt (index:Int):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function getChildByName (name:String):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function getChildIndex (child:Dynamic /*DisplayObject*/):Int { return 0; };\n\tpublic function getObjectsUnderPoint (point:Dynamic /*flash.geom.Point*/):Array<Dynamic /*DisplayObject*/> { return null; };\n\tpublic function getRect (targetCoordinateSpace:Dynamic /*DisplayObject*/):Dynamic /*flash.geom.Rectangle*/ { return null; };\n\tpublic function globalToLocal (point:Dynamic /*flash.geom.Point*/):Dynamic /*flash.geom.Point*/ { return null; };\n\tpublic function globalToLocal3D (point:Dynamic /*flash.geom.Point*/):Dynamic /*flash.geom.Vector3D*/ { return null; };\n\tpublic function hasEventListener (type:String):Bool { return false; };\n\tpublic function hitTestObject (obj:Dynamic /*DisplayObject*/):Bool { return false; };\n\tpublic function hitTestPoint (x:Float, y:Float, shapeFlag:Bool = false):Bool { return false; };\n\tpublic function local3DToGlobal (point3d:Dynamic /*flash.geom.Vector3D*/):Dynamic /*flash.geom.Point*/ { return null; };\n\tpublic function localToGlobal (point:Dynamic /*flash.geom.Point*/):Dynamic /*flash.geom.Point*/ { return null; };\n\tpublic function removeChild (child:Dynamic /*DisplayObject*/):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function removeChildAt (index:Int):Dynamic /*DisplayObject*/ { return null; };\n\tpublic function removeChildren (beginIndex:Int = 0, endIndex:Int = 2147483647):Void {};\n\tpublic function removeEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false):Void {};\n\tpublic function requestSoftKeyboard ():Bool { return false; };\n\tpublic function setChildIndex (child:Dynamic /*DisplayObject*/, index:Int):Void {};\n\tpublic function startDrag (lockCenter:Bool = false, ?bounds:Dynamic /*flash.geom.Rectangle*/):Void {};\n\tpublic function startTouchDrag (touchPointID:Int, lockCenter:Bool = false, ?bounds:Dynamic /*flash.geom.Rectangle*/):Void {};\n\tpublic function stopAllMovieClips ():Void {};\n\tpublic function stopDrag ():Void {};\n\tpublic function stopTouchDrag (touchPointID:Int):Void {};\n\tpublic function swapChildren (child1:Dynamic /*DisplayObject*/, child2:Dynamic /*DisplayObject*/):Void {};\n\tpublic function swapChildrenAt (index1:Int, index2:Int):Void {};\n\tpublic function toString ():String { return null; };\n\tpublic function willTrigger (type:String):Bool { return false; };\n\t\n\t\n}\n\n\n#end","package lime.graphics;\n\n\nimport haxe.crypto.BaseCode;\nimport haxe.io.Bytes;\nimport haxe.io.BytesData;\nimport haxe.io.BytesInput;\nimport haxe.io.BytesOutput;\nimport lime._backend.native.NativeCFFI;\nimport lime.app.Application;\nimport lime.app.Future;\nimport lime.app.Promise;\nimport lime.graphics.format.BMP;\nimport lime.graphics.format.JPEG;\nimport lime.graphics.format.PNG;\nimport lime.graphics.utils.ImageCanvasUtil;\nimport lime.graphics.utils.ImageDataUtil;\nimport lime.math.color.ARGB;\nimport lime.math.color.BGRA;\nimport lime.math.color.RGBA;\nimport lime.math.ColorMatrix;\nimport lime.math.Rectangle;\nimport lime.math.Vector2;\nimport lime.net.HTTPRequest;\nimport lime.system.CFFI;\nimport lime.system.Endian;\nimport lime.system.System;\nimport lime.utils.ArrayBuffer;\nimport lime.utils.BytePointer;\nimport lime.utils.Log;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\n#if !display\nimport lime._backend.html5.HTML5HTTPRequest;\n#end\nimport js.html.CanvasElement;\nimport js.html.ImageElement;\nimport js.html.Image in JSImage;\nimport js.Browser;\n#elseif flash\nimport flash.display.Bitmap;\nimport flash.display.BitmapData;\nimport flash.display.Loader;\nimport flash.events.Event;\nimport flash.events.IOErrorEvent;\nimport flash.events.ProgressEvent;\nimport flash.geom.Matrix;\nimport flash.net.URLRequest;\nimport flash.system.LoaderContext;\nimport flash.utils.ByteArray;\n#end\n\n#if format\nimport format.png.Data;\nimport format.png.Reader;\nimport format.png.Tools;\nimport format.png.Writer;\nimport format.tools.Deflate;\n#if sys\nimport sys.io.File;\n#end\n#end\n\n#if lime_console\nimport lime.graphics.console.TextureData;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:autoBuild(lime._macros.AssetsMacro.embedImage())\n@:allow(lime.graphics.util.ImageCanvasUtil)\n@:allow(lime.graphics.util.ImageDataUtil)\n@:access(lime._backend.native.NativeCFFI)\n@:access(lime.app.Application)\n@:access(lime.math.ColorMatrix)\n@:access(lime.math.Rectangle)\n@:access(lime.math.Vector2)\n\n#if (js && html5 && !display)\n@:access(lime._backend.html5.HTML5HTTPRequest)\n#end\n\n\nclass Image {\n\t\n\t\n\tprivate static var __base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\tprivate static var __base64Encoder:BaseCode;\n\t\n\tpublic var buffer:ImageBuffer;\n\tpublic var data (get, set):UInt8Array;\n\tpublic var dirty:Bool;\n\tpublic var format (get, set):PixelFormat;\n\tpublic var height:Int;\n\tpublic var offsetX:Int;\n\tpublic var offsetY:Int;\n\tpublic var powerOfTwo (get, set):Bool;\n\tpublic var premultiplied (get, set):Bool;\n\tpublic var rect (get, null):Rectangle;\n\tpublic var src (get, set):Dynamic;\n\tpublic var transparent (get, set):Bool;\n\tpublic var type:ImageType;\n\tpublic var version:Int;\n\tpublic var width:Int;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\t#if (js && html5 && es5get)\n\tprivate static function __init__ () {\n\t\t\n\t\tvar p = untyped Image.prototype;\n\t\tuntyped Object.defineProperties (p, {\n\t\t\t\"data\": { get: p.get_data, set: p.set_data },\n\t\t\t\"format\": { get: p.get_format, set: p.set_format },\n\t\t\t\"powerOfTwo\": { get: p.get_powerOfTwo, set: p.set_powerOfTwo },\n\t\t\t\"premultiplied\": { get: p.get_premultiplied, set: p.set_premultiplied },\n\t\t\t\"rect\": { get: p.get_rect },\n\t\t\t\"src\": { get: p.get_src, set: p.set_src },\n\t\t\t\"transparent\": { get: p.get_transparent, set: p.set_transparent }\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (buffer:ImageBuffer = null, offsetX:Int = 0, offsetY:Int = 0, width:Int = -1, height:Int = -1, color:Null<Int> = null, type:ImageType = null) {\n\t\t\n\t\tthis.offsetX = offsetX;\n\t\tthis.offsetY = offsetY;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t\tversion = 0;\n\t\t\n\t\tif (type == null) {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\ttype = CANVAS;\n\t\t\t#elseif flash\n\t\t\ttype = FLASH;\n\t\t\t#else\n\t\t\ttype = DATA;\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.type = type;\n\t\t\n\t\tif (buffer == null) {\n\t\t\t\n\t\t\tif (width > 0 && height > 0) {\n\t\t\t\t\n\t\t\t\tswitch (this.type) {\n\t\t\t\t\t\n\t\t\t\t\tcase CANVAS:\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.buffer = new ImageBuffer (null, width, height);\n\t\t\t\t\t\tImageCanvasUtil.createCanvas (this, width, height);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (color != null && color != 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfillRect (new Rectangle (0, 0, width, height), color);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase DATA:\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.buffer = new ImageBuffer (new UInt8Array (width * height * 4), width, height);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (color != null && color != 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfillRect (new Rectangle (0, 0, width, height), color);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase FLASH:\n\t\t\t\t\t\t\n\t\t\t\t\t\t#if flash\n\t\t\t\t\t\tthis.buffer = new ImageBuffer (null, width, height);\n\t\t\t\t\t\tthis.buffer.src = new BitmapData (width, height, true, ((color & 0xFF) << 24) | (color >> 8));\n\t\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__fromImageBuffer (buffer);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Image {\n\t\t\n\t\tif (buffer != null) {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\tif (type == CANVAS) {\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToCanvas (this);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t\n\t\t\t}\n\t\t\t#end\n\t\t\t\n\t\t\tvar image = new Image (buffer.clone (), offsetX, offsetY, width, height, null, type);\n\t\t\timage.version = version;\n\t\t\treturn image;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn new Image (null, offsetX, offsetY, width, height, null, type);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function colorTransform (rect:Rectangle, colorMatrix:ColorMatrix):Void {\n\t\t\n\t\trect = __clipRect (rect);\n\t\tif (buffer == null || rect == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.colorTransform (this, rect, colorMatrix);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.colorTransform (this, rect, colorMatrix);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\tbuffer.__srcBitmapData.colorTransform (rect.__toFlashRectangle (), colorMatrix.__toFlashColorTransform ());\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyChannel (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {\n\t\t\n\t\tsourceRect = __clipRect (sourceRect);\n\t\tif (buffer == null || sourceRect == null) return;\n\t\tif (destChannel == ALPHA && !transparent) return;\n\t\tif (sourceRect.width <= 0 || sourceRect.height <= 0) return;\n\t\tif (sourceRect.x + sourceRect.width > sourceImage.width) sourceRect.width = sourceImage.width - sourceRect.x;\n\t\tif (sourceRect.y + sourceRect.height > sourceImage.height) sourceRect.height = sourceImage.height - sourceRect.y;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.copyChannel (this, sourceImage, sourceRect, destPoint, sourceChannel, destChannel);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\tImageCanvasUtil.convertToData (sourceImage);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.copyChannel (this, sourceImage, sourceRect, destPoint, sourceChannel, destChannel);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar srcChannel = switch (sourceChannel) { \n\t\t\t\t\tcase RED: 1;\n\t\t\t\t\tcase GREEN: 2;\n\t\t\t\t\tcase BLUE: 4;\n\t\t\t\t\tcase ALPHA: 8;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dstChannel = switch (destChannel) { \n\t\t\t\t\tcase RED: 1;\n\t\t\t\t\tcase GREEN: 2;\n\t\t\t\t\tcase BLUE: 4;\n\t\t\t\t\tcase ALPHA: 8;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsourceRect.offset (sourceImage.offsetX, sourceImage.offsetY);\n\t\t\t\tdestPoint.offset (offsetX, offsetY);\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.copyChannel (sourceImage.buffer.src, sourceRect.__toFlashRectangle (), destPoint.__toFlashPoint (), srcChannel, dstChannel);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyPixels (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {\n\t\t\n\t\tif (buffer == null || sourceImage == null) return;\n\t\tif (sourceRect.width <= 0 || sourceRect.height <= 0) return;\n\t\tif (width <= 0 || height <= 0) return;\n\t\t\n\t\tif (sourceRect.x + sourceRect.width > sourceImage.width) sourceRect.width = sourceImage.width - sourceRect.x;\n\t\tif (sourceRect.y + sourceRect.height > sourceImage.height) sourceRect.height = sourceImage.height - sourceRect.y;\n\t\t\n\t\tif (sourceRect.x < 0) {\n\t\t\t\n\t\t\tsourceRect.width += sourceRect.x;\n\t\t\tsourceRect.x = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (sourceRect.y < 0) {\n\t\t\t\n\t\t\tsourceRect.height += sourceRect.y;\n\t\t\tsourceRect.y = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (destPoint.x + sourceRect.width > width) sourceRect.width = width - destPoint.x;\n\t\tif (destPoint.y + sourceRect.height > height) sourceRect.height = height - destPoint.y;\n\t\t\n\t\tif (destPoint.x < 0) {\n\t\t\t\n\t\t\tsourceRect.width += destPoint.x;\n\t\t\tsourceRect.x -= destPoint.x;\n\t\t\tdestPoint.x = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (destPoint.y < 0) {\n\t\t\t\n\t\t\tsourceRect.height += destPoint.y;\n\t\t\tsourceRect.y -= destPoint.y;\n\t\t\tdestPoint.y = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (sourceImage == this && destPoint.x < sourceRect.right && destPoint.y < sourceRect.bottom) {\n\t\t\t\n\t\t\t// TODO: Optimize further?\n\t\t\tsourceImage = clone ();\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\t// The data path appears to be much faster, even with no alpha image\n\t\t\t\t\n\t\t\t\t//if (alphaImage != null || sourceImage.type != CANVAS) {\n\t\t\t\t\t\n\t\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t\tImageCanvasUtil.convertToData (sourceImage);\n\t\t\t\t\tif (alphaImage != null) ImageCanvasUtil.convertToData (alphaImage);\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.copyPixels (this, sourceImage, sourceRect, destPoint, alphaImage, alphaPoint, mergeAlpha);\n\t\t\t\t\t\n\t\t\t\t//} else {\n\t\t\t\t\t//\n\t\t\t\t\t//ImageCanvasUtil.convertToCanvas (this);\n\t\t\t\t\t//ImageCanvasUtil.convertToCanvas (sourceImage);\n\t\t\t\t\t//ImageCanvasUtil.copyPixels (this, sourceImage, sourceRect, destPoint, alphaImage, alphaPoint, mergeAlpha);\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\tImageCanvasUtil.convertToData (sourceImage);\n\t\t\t\tif (alphaImage != null) ImageCanvasUtil.convertToData (alphaImage);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.copyPixels (this, sourceImage, sourceRect, destPoint, alphaImage, alphaPoint, mergeAlpha);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tsourceRect.offset (sourceImage.offsetX, sourceImage.offsetY);\n\t\t\t\tdestPoint.offset (offsetX, offsetY);\n\t\t\t\t\n\t\t\t\tif (alphaImage != null && alphaPoint != null) {\n\t\t\t\t\t\n\t\t\t\t\talphaPoint.offset (alphaImage.offsetX, alphaImage.offsetY);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.copyPixels (sourceImage.buffer.__srcBitmapData, sourceRect.__toFlashRectangle (), destPoint.__toFlashPoint (), alphaImage != null ? alphaImage.buffer.src : null, alphaPoint != null ? alphaPoint.__toFlashPoint () : null, mergeAlpha);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function encode (format:String = \"png\", quality:Int = 90):Bytes {\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase \"png\":\n\t\t\t\t\n\t\t\t\treturn PNG.encode (this);\n\t\t\t\n\t\t\tcase \"jpg\", \"jpeg\":\n\t\t\t\t\n\t\t\t\treturn JPEG.encode (this, quality);\n\t\t\t\n\t\t\tcase \"bmp\":\n\t\t\t\t\n\t\t\t\treturn BMP.encode (this);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function fillRect (rect:Rectangle, color:Int, format:PixelFormat = null):Void {\n\t\t\n\t\trect = __clipRect (rect);\n\t\tif (buffer == null || rect == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.fillRect (this, rect, color, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tif (buffer.data.length == 0) return;\n\t\t\t\t\n\t\t\t\tImageDataUtil.fillRect (this, rect, color, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\t\n\t\t\t\tvar argb:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: color;\n\t\t\t\t\tcase BGRA32: (color:BGRA);\n\t\t\t\t\tdefault: (color:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.fillRect (rect.__toFlashRectangle (), argb);\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function floodFill (x:Int, y:Int, color:Int, format:PixelFormat = null):Void {\n\t\t\n\t\tif (buffer == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.floodFill (this, x, y, color, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.floodFill (this, x, y, color, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar argb:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: color;\n\t\t\t\t\tcase BGRA32: (color:BGRA);\n\t\t\t\t\tdefault: (color:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.floodFill (x + offsetX, y + offsetY, argb);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBase64 (base64:String, type:String):Image {\n\t\t\n\t\tif (base64 == null) return null;\n\t\tvar image = new Image ();\n\t\timage.__fromBase64 (base64, type);\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\t#if flash\n\tpublic static function fromBitmapData (bitmapData:BitmapData):Image {\n\t#else\n\tpublic static function fromBitmapData (bitmapData:Dynamic):Image {\n\t#end\n\t\t\n\t\tif (bitmapData == null) return null;\n\t\t#if flash\n\t\tvar buffer = new ImageBuffer (null, bitmapData.width, bitmapData.height);\n\t\tbuffer.__srcBitmapData = bitmapData;\n\t\treturn new Image (buffer);\n\t\t#else\n\t\treturn bitmapData.image;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:Bytes):Image {\n\t\t\n\t\tif (bytes == null) return null;\n\t\tvar image = new Image ();\n\t\timage.__fromBytes (bytes);\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static function fromCanvas (canvas:CanvasElement):Image {\n\t#else\n\tpublic static function fromCanvas (canvas:Dynamic):Image {\n\t#end\n\t\t\n\t\tif (canvas == null) return null;\n\t\tvar buffer = new ImageBuffer (null, canvas.width, canvas.height);\n\t\tbuffer.src = canvas;\n\t\tvar image = new Image (buffer);\n\t\timage.type = CANVAS;\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String):Image {\n\t\t\n\t\tif (path == null) return null;\n\t\tvar image = new Image ();\n\t\timage.__fromFile (path);\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static function fromImageElement (image:ImageElement):Image {\n\t#else\n\tpublic static function fromImageElement (image:Dynamic):Image {\n\t#end\n\t\t\n\t\tif (image == null) return null;\n\t\tvar buffer = new ImageBuffer (null, image.width, image.height);\n\t\tbuffer.src = image;\n\t\tvar _image = new Image (buffer);\n\t\t_image.type = CANVAS;\n\t\treturn _image;\n\t\t\n\t}\n\t\n\t\n\tpublic function getColorBoundsRect (mask:Int, color:Int, findColor:Bool = true, format:PixelFormat = null):Rectangle {\n\t\t\n\t\tif (buffer == null) return null;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getColorBoundsRect (this, mask, color, findColor, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getColorBoundsRect (this, mask, color, findColor, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar rect = buffer.__srcBitmapData.getColorBoundsRect (mask, color, findColor);\n\t\t\t\treturn new Rectangle (rect.x, rect.y, rect.width, rect.height);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getPixel (x:Int, y:Int, format:PixelFormat = null):Int {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return 0;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\treturn ImageCanvasUtil.getPixel (this, x, y, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getPixel (this, x, y, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar color:ARGB = buffer.__srcBitmapData.getPixel (x + offsetX, y + offsetY);\n\t\t\t\t\n\t\t\t\tswitch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: return color;\n\t\t\t\t\tcase BGRA32: var bgra:BGRA = color; return bgra;\n\t\t\t\t\tdefault: var rgba:RGBA = color; return rgba;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn 0;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getPixel32 (x:Int, y:Int, format:PixelFormat = null):Int {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return 0;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\treturn ImageCanvasUtil.getPixel32 (this, x, y, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getPixel32 (this, x, y, format);\n\t\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar color:ARGB = buffer.__srcBitmapData.getPixel32 (x + offsetX, y + offsetY);\n\t\t\t\t\n\t\t\t\tswitch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: return color;\n\t\t\t\t\tcase BGRA32: var bgra:BGRA = color; return bgra;\n\t\t\t\t\tdefault: var rgba:RGBA = color; return rgba;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn 0;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getPixels (rect:Rectangle, format:PixelFormat = null):Bytes {\n\t\t\n\t\tif (buffer == null) return null;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\treturn ImageCanvasUtil.getPixels (this, rect, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.getPixels (this, rect, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\t#if flash\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\tvar byteArray:ByteArray = buffer.__srcBitmapData.getPixels (rect.__toFlashRectangle ());\n\t\t\t\t\n\t\t\t\tswitch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: // do nothing\n\t\t\t\t\tcase BGRA32:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar color:BGRA;\n\t\t\t\t\t\tvar length = Std.int (byteArray.length / 4);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcolor = (byteArray.readUnsignedInt ():ARGB);\n\t\t\t\t\t\t\tbyteArray.position -= 4;\n\t\t\t\t\t\t\tbyteArray.writeUnsignedInt (color);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbyteArray.position = 0;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar color:RGBA;\n\t\t\t\t\t\tvar length = Std.int (byteArray.length / 4);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcolor = (byteArray.readUnsignedInt ():ARGB);\n\t\t\t\t\t\t\tbyteArray.position -= 4;\n\t\t\t\t\t\t\tbyteArray.writeUnsignedInt (color);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbyteArray.position = 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn Bytes.ofData (byteArray);\n\t\t\t\t#else\n\t\t\t\treturn null;\n\t\t\t\t#end\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromBase64 (base64:String, type:String):Future<Image> {\n\t\t\n\t\tif (base64 == null || type == null) return Future.withValue (null);\n\t\t\n\t\t#if (js && html5 && !display)\n\t\t\n\t\treturn HTML5HTTPRequest.loadImage (\"data:\" + type + \";base64,\" + base64);\n\t\t\n\t\t#else\n\t\t\n\t\treturn cast Future.withError (\"\");\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromBytes (bytes:Bytes):Future<Image> {\n\t\t\n\t\tif (bytes == null) return Future.withValue (null);\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tvar type = \"\";\n\t\t\n\t\tif (__isPNG (bytes)) {\n\t\t\t\n\t\t\ttype = \"image/png\";\n\t\t\t\n\t\t} else if (__isJPG (bytes)) {\n\t\t\t\n\t\t\ttype = \"image/jpeg\";\n\t\t\t\n\t\t} else if (__isGIF (bytes)) {\n\t\t\t\n\t\t\ttype = \"image/gif\";\n\t\t\t\n\t\t} else if (__isWebP (bytes)) {\n\t\t\t\n\t\t\ttype = \"image/webp\";\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t//throw \"Image tried to read PNG/JPG Bytes, but found an invalid header.\";\n\t\t\treturn Future.withValue (null);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn loadFromBase64 (__base64Encode (bytes), type);\n\t\t\n\t\t#elseif flash\n\t\t\n\t\tvar promise = new Promise<Image> ();\n\t\t\n\t\tvar loader = new Loader ();\n\t\t\n\t\tloader.contentLoaderInfo.addEventListener (Event.COMPLETE, function (event) {\n\t\t\t\n\t\t\tpromise.complete (Image.fromBitmapData (cast (loader.content, Bitmap).bitmapData));\n\t\t\t\n\t\t});\n\t\t\n\t\tloader.contentLoaderInfo.addEventListener (ProgressEvent.PROGRESS, function (event) {\n\t\t\t\n\t\t\tpromise.progress (event.bytesLoaded, event.bytesTotal);\n\t\t\t\n\t\t});\n\t\t\n\t\tloader.contentLoaderInfo.addEventListener (IOErrorEvent.IO_ERROR, function (event) {\n\t\t\t\n\t\t\tpromise.error (event.error);\n\t\t\t\n\t\t});\n\t\t\n\t\tloader.loadBytes (bytes.getData ());\n\t\t\n\t\treturn promise.future;\n\t\t\n\t\t#else\n\t\t\n\t\treturn new Future<Image> (function () return fromBytes (bytes), true);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromFile (path:String):Future<Image> {\n\t\t\n\t\tif (path == null) return Future.withValue (null);\n\t\t\n\t\t#if (js && html5 && !display)\n\t\t\n\t\treturn HTML5HTTPRequest.loadImage (path);\n\t\t\n\t\t#elseif flash\n\t\t\n\t\tvar promise = new Promise<Image> ();\n\t\t\n\t\tvar loader = new Loader ();\n\t\t\n\t\tloader.contentLoaderInfo.addEventListener (Event.COMPLETE, function (event) {\n\t\t\t\n\t\t\tpromise.complete (Image.fromBitmapData (cast (loader.content, Bitmap).bitmapData));\n\t\t\t\n\t\t});\n\t\t\n\t\tloader.contentLoaderInfo.addEventListener (ProgressEvent.PROGRESS, function (event) {\n\t\t\t\n\t\t\tpromise.progress (event.bytesLoaded, event.bytesTotal);\n\t\t\t\n\t\t});\n\t\t\n\t\tloader.contentLoaderInfo.addEventListener (IOErrorEvent.IO_ERROR, function (event) {\n\t\t\t\n\t\t\tpromise.error (event.error);\n\t\t\t\n\t\t});\n\t\t\n\t\tloader.load (new URLRequest (path), new LoaderContext (true));\n\t\t\n\t\treturn promise.future;\n\t\t\n\t\t#else\n\t\t\n\t\tvar request = new HTTPRequest<Image> ();\n\t\treturn request.load (path).then (function (image) {\n\t\t\t\n\t\t\tif (image != null) {\n\t\t\t\t\n\t\t\t\treturn Future.withValue (image);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn cast Future.withError (\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function merge (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {\n\t\t\n\t\tif (buffer == null || sourceImage == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToCanvas (this);\n\t\t\t\tImageCanvasUtil.merge (this, sourceImage, sourceRect, destPoint, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\tImageCanvasUtil.convertToData (sourceImage);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.merge (this, sourceImage, sourceRect, destPoint, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tsourceRect.offset (offsetX, offsetY);\n\t\t\t\tbuffer.__srcBitmapData.merge (sourceImage.buffer.__srcBitmapData, sourceRect.__toFlashRectangle (), destPoint.__toFlashPoint (), redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function resize (newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.resize (this, newWidth, newHeight);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\tImageDataUtil.resize (this, newWidth, newHeight);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\t#if flash\n\t\t\t\tvar matrix = new Matrix ();\n\t\t\t\tmatrix.scale (newWidth / buffer.__srcBitmapData.width, newHeight / buffer.__srcBitmapData.height);\n\t\t\t\tvar data = new BitmapData (newWidth, newHeight, true, 0x00FFFFFF);\n\t\t\t\tdata.draw (buffer.__srcBitmapData, matrix, null, null, null, true);\n\t\t\t\tbuffer.__srcBitmapData = data;\n\t\t\t\t#end\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\tbuffer.width = newWidth;\n\t\tbuffer.height = newHeight;\n\t\t\n\t\toffsetX = 0;\n\t\toffsetY = 0;\n\t\twidth = newWidth;\n\t\theight = newHeight;\n\t\t\n\t}\n\t\n\t\n\tpublic function scroll (x:Int, y:Int):Void {\n\t\t\n\t\tif (buffer == null) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.scroll (this, x, y);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\tcopyPixels (this, rect, new Vector2 (x, y));\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.scroll (x + offsetX, y + offsetX);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixel (x:Int, y:Int, color:Int, format:PixelFormat = null):Void {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.setPixel (this, x, y, color, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.setPixel (this, x, y, color, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar argb:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: color;\n\t\t\t\t\tcase BGRA32: (color:BGRA);\n\t\t\t\t\tdefault: (color:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.setPixel (x + offsetX, y + offsetX, argb);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixel32 (x:Int, y:Int, color:Int, format:PixelFormat = null):Void {\n\t\t\n\t\tif (buffer == null || x < 0 || y < 0 || x >= width || y >= height) return;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.setPixel32 (this, x, y, color, format);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.setPixel32 (this, x, y, color, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar argb:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: color;\n\t\t\t\t\tcase BGRA32: (color:BGRA);\n\t\t\t\t\tdefault: (color:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.setPixel32 (x + offsetX, y + offsetY, argb);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixels (rect:Rectangle, bytePointer:BytePointer, format:PixelFormat = null, endian:Endian = null):Void {\n\t\t\n\t\trect = __clipRect (rect);\n\t\tif (buffer == null || rect == null) return;\n\t\t//if (endian == null) endian = System.endianness; // TODO: System endian order\n\t\tif (endian == null) endian = BIG_ENDIAN;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS:\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.setPixels (this, rect, bytePointer, format, endian);\n\t\t\t\n\t\t\tcase DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tImageDataUtil.setPixels (this, rect, bytePointer, format, endian);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\t#if flash\n\t\t\t\trect.offset (offsetX, offsetY);\n\t\t\t\tvar byteArray = new ByteArray ();\n\t\t\t\t\n\t\t\t\tswitch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: // do nothing\n\t\t\t\t\tcase BGRA32:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar srcData:ByteArray = bytePointer.bytes.getData ();\n\t\t\t\t\t\tbyteArray = new ByteArray ();\n\t\t\t\t\t\tbyteArray.position = bytePointer.offset;\n\t\t\t\t\t\t#if flash\n\t\t\t\t\t\tbyteArray.length = srcData.length;\n\t\t\t\t\t\t#end\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar color:BGRA;\n\t\t\t\t\t\tvar length = Std.int (byteArray.length / 4);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcolor = srcData.readUnsignedInt ();\n\t\t\t\t\t\t\tbyteArray.writeUnsignedInt (cast (color, ARGB));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tsrcData.position = 0;\n\t\t\t\t\t\tbyteArray.position = 0;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar srcData = bytePointer.bytes.getData ();\n\t\t\t\t\t\tbyteArray = new ByteArray ();\n\t\t\t\t\t\tbyteArray.position = bytePointer.offset;\n\t\t\t\t\t\t#if flash\n\t\t\t\t\t\tbyteArray.length = srcData.length;\n\t\t\t\t\t\t#end\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar color:RGBA;\n\t\t\t\t\t\tvar length = Std.int (byteArray.length / 4);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcolor = srcData.readUnsignedInt ();\n\t\t\t\t\t\t\tbyteArray.writeUnsignedInt (cast (color, ARGB));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tsrcData.position = 0;\n\t\t\t\t\t\tbyteArray.position = 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbuffer.__srcBitmapData.setPixels (rect.__toFlashRectangle (), byteArray);\n\t\t\t\t#end\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function threshold (sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, operation:String, threshold:Int, color:Int = 0x00000000, mask:Int = 0xFFFFFFFF, copySource:Bool = false, format:PixelFormat = null):Int {\n\t\t\n\t\tif (buffer == null || sourceImage == null || sourceRect == null) return 0;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase CANVAS, DATA:\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\tImageCanvasUtil.convertToData (sourceImage);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\treturn ImageDataUtil.threshold (this, sourceImage, sourceRect, destPoint, operation, threshold, color, mask, copySource, format);\n\t\t\t\n\t\t\tcase FLASH:\n\t\t\t\t\n\t\t\t\tvar _color:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: color;\n\t\t\t\t\tcase BGRA32: (color:BGRA);\n\t\t\t\t\tdefault: (color:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar _mask:ARGB = switch (format) {\n\t\t\t\t\t\n\t\t\t\t\tcase ARGB32: mask;\n\t\t\t\t\tcase BGRA32: (mask:BGRA);\n\t\t\t\t\tdefault: (mask:RGBA);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsourceRect.offset (sourceImage.offsetX, sourceImage.offsetY);\n\t\t\t\tdestPoint.offset (offsetX, offsetY);\n\t\t\t\t\n\t\t\t\treturn buffer.__srcBitmapData.threshold (sourceImage.buffer.src, sourceRect.__toFlashRectangle (), destPoint.__toFlashPoint (), operation, threshold, _color, _mask, copySource);\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __base64Encode (bytes:Bytes):String {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tvar extension = switch (bytes.length % 3) {\n\t\t\t\t\n\t\t\t\tcase 1: \"==\";\n\t\t\t\tcase 2: \"=\";\n\t\t\t\tdefault: \"\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (__base64Encoder == null) {\n\t\t\t\t\n\t\t\t\t__base64Encoder = new BaseCode (Bytes.ofString (__base64Chars));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn __base64Encoder.encodeBytes (bytes).toString () + extension;\n\t\t\t\n\t\t#else\n\t\t\n\t\t\treturn \"\";\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __clipRect (r:Rectangle):Rectangle {\n\t\t\n\t\tif (r == null) return null;\n\t\t\n\t\tif (r.x < 0) {\n\t\t\t\n\t\t\tr.width -= -r.x;\n\t\t\tr.x = 0;\n\t\t\t\n\t\t\tif (r.x + r.width <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (r.y < 0) {\n\t\t\t\n\t\t\tr.height -= -r.y;\n\t\t\tr.y = 0;\n\t\t\t\n\t\t\tif (r.y + r.height <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (r.x + r.width >= width) {\n\t\t\t\n\t\t\tr.width -= r.x + r.width - width;\n\t\t\t\n\t\t\tif (r.width <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (r.y + r.height >= height) {\n\t\t\t\n\t\t\tr.height -= r.y + r.height - height;\n\t\t\t\n\t\t\tif (r.height <= 0) return null;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn r;\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromBase64 (base64:String, type:String, onload:Image->Void = null):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tvar image = new JSImage ();\n\t\t\n\t\tvar image_onLoaded = function (event) {\n\t\t\t\n\t\t\tbuffer = new ImageBuffer (null, image.width, image.height);\n\t\t\tbuffer.__srcImage = cast image;\n\t\t\t\n\t\t\toffsetX = 0;\n\t\t\toffsetY = 0;\n\t\t\twidth = buffer.width;\n\t\t\theight = buffer.height;\n\t\t\t\n\t\t\tif (onload != null) {\n\t\t\t\t\n\t\t\t\tonload (this);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.addEventListener (\"load\", image_onLoaded, false);\n\t\timage.src = \"data:\" + type + \";base64,\" + base64;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromBytes (bytes:Bytes, onload:Image->Void = null):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tvar type = \"\";\n\t\t\t\n\t\t\tif (__isPNG (bytes)) {\n\t\t\t\t\n\t\t\t\ttype = \"image/png\";\n\t\t\t\t\n\t\t\t} else if (__isJPG (bytes)) {\n\t\t\t\t\n\t\t\t\ttype = \"image/jpeg\";\n\t\t\t\t\n\t\t\t} else if (__isGIF (bytes)) {\n\t\t\t\t\n\t\t\t\ttype = \"image/gif\";\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t//throw \"Image tried to read PNG/JPG Bytes, but found an invalid header.\";\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__fromBase64 (__base64Encode (bytes), type, onload);\n\t\t\t\n\t\t#elseif lime_console\n\t\t\t\n\t\t\tLog.warn (\"Image.fromBytes not implemented for console target\");\n\t\t\t\n\t\t#elseif (lime_cffi && !macro)\n\t\t\t\n\t\t\tvar imageBuffer:ImageBuffer = null;\n\t\t\t\n\t\t\t#if !cs\n\t\t\timageBuffer = NativeCFFI.lime_image_load (bytes, new ImageBuffer (new UInt8Array (Bytes.alloc (0))));\n\t\t\t#else\n\t\t\tvar data = NativeCFFI.lime_image_load (bytes, null);\n\t\t\tif (data != null) {\n\t\t\t\timageBuffer = new ImageBuffer (new UInt8Array (@:privateAccess new Bytes (data.data.buffer.length, data.data.buffer.b)), data.width, data.height, data.bitsPerPixel);\n\t\t\t}\n\t\t\t#end\n\t\t\t\n\t\t\tif (imageBuffer != null) {\n\t\t\t\t\n\t\t\t\t__fromImageBuffer (imageBuffer);\n\t\t\t\t\n\t\t\t\tif (onload != null) {\n\t\t\t\t\t\n\t\t\t\t\tonload (this);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\tLog.warn (\"Image.fromBytes not supported on this target\");\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromFile (path:String, onload:Image->Void = null, onerror:Void->Void = null):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tvar image = new JSImage ();\n\t\t\t\n\t\t\t#if !display\n\t\t\tif (!HTML5HTTPRequest.__isSameOrigin (path)) {\n\t\t\t\t\n\t\t\t\timage.crossOrigin = \"Anonymous\";\n\t\t\t\t\n\t\t\t}\n\t\t\t#end\n\t\t\t\n\t\t\timage.onload = function (_) {\n\t\t\t\t\n\t\t\t\tbuffer = new ImageBuffer (null, image.width, image.height);\n\t\t\t\tbuffer.__srcImage = cast image;\n\t\t\t\t\n\t\t\t\twidth = image.width;\n\t\t\t\theight = image.height;\n\t\t\t\t\n\t\t\t\tif (onload != null) {\n\t\t\t\t\t\n\t\t\t\t\tonload (this);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\timage.onerror = function (_) {\n\t\t\t\t\n\t\t\t\tif (onerror != null) {\n\t\t\t\t\t\n\t\t\t\t\tonerror ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\timage.src = path;\n\t\t\t\n\t\t\t// Another IE9 bug: loading 20+ images fails unless this line is added.\n\t\t\t// (issue #1019768)\n\t\t\tif (image.complete) { }\n\t\t\t\n\t\t#elseif (lime_cffi || java)\n\t\t\t\n\t\t\tvar buffer:ImageBuffer = null;\n\t\t\t\n\t\t\t#if lime_console\n\t\t\t\n\t\t\tvar td = TextureData.fromFile (path);\n\t\t\t\n\t\t\tif (td.valid) {\n\t\t\t\t\n\t\t\t\tvar w = td.width;\n\t\t\t\tvar h = td.height;\n\t\t\t\tvar data = new Array<cpp.UInt8> ();\n\t\t\t\t\n\t\t\t\t#if 1\n\t\t\t\t\n\t\t\t\tvar size = w * h * 4;\n\t\t\t\tcpp.NativeArray.setSize (data, size);\n\t\t\t\t\n\t\t\t\ttd.decode (cpp.Pointer.arrayElem (data, 0), size);\n\t\t\t\t/*\n\t\t\t\t{\n\t\t\t\t\tvar dest:cpp.Pointer<cpp.UInt32> = cast cpp.Pointer.arrayElem (data, 0);\t\n\t\t\t\t\tvar src:cpp.Pointer<cpp.UInt32> = cast td.pointer;\t\n\t\t\t\t\tvar n = w * h;\n\t\t\t\t\tfor (i in 0...n) {\n\t\t\t\t\t\tdest[i] = src[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t\ttd.release ();\n\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\n\t\t\t\t// TODO(james4k): caveats here with every image\n\t\t\t\t// pointing to the same piece of memory, and things may\n\t\t\t\t// change with compressed textures. but, may be worth\n\t\t\t\t// considering if game is hitting memory constraints.\n\t\t\t\t// can we do this safely somehow? copy on write?\n\t\t\t\t// probably too many people writing directly to the\n\t\t\t\t// buffer...\n\t\t\t\tcpp.NativeArray.setUnmanagedData (data, td.pointer, w*h*4);\n\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tvar array = new UInt8Array (Bytes.ofData (cast data));\n\t\t\t\tbuffer = new ImageBuffer (array, w, h);\n\t\t\t\tbuffer.format = BGRA32;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\t#if (!sys || disable_cffi || java || macro)\n\t\t\tif (false) {}\n\t\t\t#else\n\t\t\tif (CFFI.enabled) {\n\t\t\t\t\n\t\t\t\t#if !cs\n\t\t\t\tbuffer = NativeCFFI.lime_image_load (path, new ImageBuffer (new UInt8Array (Bytes.alloc (0))));\n\t\t\t\t#else\n\t\t\t\tvar data = NativeCFFI.lime_image_load (path, null);\n\t\t\t\tif (data != null) {\n\t\t\t\t\tbuffer = new ImageBuffer (new UInt8Array (@:privateAccess new Bytes (data.data.buffer.length, data.data.buffer.b)), data.width, data.height, data.bitsPerPixel);\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t#end\n\t\t\t\n\t\t\t#if format\n\t\t\t\n\t\t\telse {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t\tvar bytes = File.getBytes (path);\n\t\t\t\t\tvar input = new BytesInput (bytes, 0, bytes.length);\n\t\t\t\t\tvar png = new Reader (input).read ();\n\t\t\t\t\tvar data = Tools.extract32 (png);\n\t\t\t\t\tvar header = Tools.getHeader (png);\n\t\t\t\t\t\n\t\t\t\t\tvar data = new UInt8Array (Bytes.ofData (data.getData ()));\n\t\t\t\t\tvar length = header.width * header.height;\n\t\t\t\t\tvar b, g, r, a;\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar b = data[i * 4];\n\t\t\t\t\t\tvar g = data[i * 4 + 1];\n\t\t\t\t\t\tvar r = data[i * 4 + 2];\n\t\t\t\t\t\tvar a = data[i * 4 + 3];\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata[i * 4] = r;\n\t\t\t\t\t\tdata[i * 4 + 1] = g;\n\t\t\t\t\t\tdata[i * 4 + 2] = b;\n\t\t\t\t\t\tdata[i * 4 + 3] = a;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbuffer = new ImageBuffer (data, header.width, header.height);\n\t\t\t\t\t\n\t\t\t\t} catch (e:Dynamic) {}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\tif (buffer != null) {\n\t\t\t\t\n\t\t\t\t__fromImageBuffer (buffer);\n\t\t\t\t\n\t\t\t\tif (onload != null) {\n\t\t\t\t\t\n\t\t\t\t\tonload (this);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t#else\n\t\t\t\n\t\t\tLog.warn (\"Image.fromFile not supported on this target\");\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromImageBuffer (buffer:ImageBuffer):Void {\n\t\t\n\t\tthis.buffer = buffer;\n\t\t\n\t\tif (buffer != null) {\n\t\t\t\n\t\t\tif (width == -1) {\n\t\t\t\t\n\t\t\t\tthis.width = buffer.width;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (height == -1) {\n\t\t\t\t\n\t\t\t\tthis.height = buffer.height;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __isGIF (bytes:Bytes):Bool {\n\t\t\n\t\tif (bytes == null || bytes.length < 6) return false;\n\t\t\n\t\tvar header = bytes.getString (0, 6);\n\t\treturn (header == \"GIF87a\" || header == \"GIF89a\");\n\t\t\n\t}\n\t\n\t\n\tprivate static function __isJPG (bytes:Bytes):Bool {\n\t\t\n\t\tif (bytes == null || bytes.length < 4) return false;\n\t\t\n\t\treturn bytes.get (0) == 0xFF && bytes.get (1) == 0xD8 && bytes.get (bytes.length - 2) == 0xFF && bytes.get (bytes.length -1) == 0xD9;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __isPNG (bytes:Bytes):Bool {\n\t\t\n\t\tif (bytes == null || bytes.length < 8) return false;\n\t\t\n\t\treturn (bytes.get (0) == 0x89 && bytes.get (1) == \"P\".code && bytes.get (2) == \"N\".code && bytes.get (3) == \"G\".code && bytes.get (4) == \"\\r\".code && bytes.get (5) == \"\\n\".code && bytes.get (6) == 0x1A && bytes.get (7) == \"\\n\".code);\n\t\t\n\t}\n\t\n\t\n\tprivate static function __isWebP (bytes:Bytes):Bool {\n\t\t\n\t\tif (bytes == null || bytes.length < 16) return false;\n\t\t\n\t\treturn (bytes.getString (0, 4) == \"RIFF\" && bytes.getString (8, 4) == \"WEBP\");\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_data ():UInt8Array {\n\t\t\n\t\tif (buffer.data == null && buffer.width > 0 && buffer.height > 0) {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\t\t\n\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t\n\t\t\t#elseif flash\n\t\t\t\t\n\t\t\t\tvar pixels = buffer.__srcBitmapData.getPixels (buffer.__srcBitmapData.rect);\n\t\t\t\tbuffer.data = new UInt8Array (Bytes.ofData (pixels));\n\t\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn buffer.data;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_data (value:UInt8Array):UInt8Array {\n\t\t\n\t\treturn buffer.data = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_format ():PixelFormat {\n\t\t\n\t\treturn buffer.format;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_format (value:PixelFormat):PixelFormat {\n\t\t\n\t\tif (buffer.format != value) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase DATA:\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.setFormat (this, value);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn buffer.format = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_powerOfTwo ():Bool {\n\t\t\n\t\treturn ((buffer.width != 0) && ((buffer.width & (~buffer.width + 1)) == buffer.width)) && ((buffer.height != 0) && ((buffer.height & (~buffer.height + 1)) == buffer.height));\n\t\t\n\t}\n\t\n\t\n\tprivate function set_powerOfTwo (value:Bool):Bool {\n\t\t\n\t\tif (value != powerOfTwo) {\n\t\t\t\n\t\t\tvar newWidth = 1;\n\t\t\tvar newHeight = 1;\n\t\t\t\n\t\t\twhile (newWidth < buffer.width) {\n\t\t\t\t\n\t\t\t\tnewWidth <<= 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\twhile (newHeight < buffer.height) {\n\t\t\t\t\n\t\t\t\tnewHeight <<= 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase CANVAS:\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\n\t\t\t\tcase DATA:\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.resizeBuffer (this, newWidth, newHeight);\n\t\t\t\t\n\t\t\t\tcase FLASH:\n\t\t\t\t\t\n\t\t\t\t\t#if flash\n\t\t\t\t\tvar bitmapData = new BitmapData (newWidth, newHeight, true, 0x000000);\n\t\t\t\t\tbitmapData.draw (buffer.src, null, null, null, true);\n\t\t\t\t\t\n\t\t\t\t\tbuffer.src = bitmapData;\n\t\t\t\t\tbuffer.width = newWidth;\n\t\t\t\t\tbuffer.height = newHeight;\n\t\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_premultiplied ():Bool {\n\t\t\n\t\treturn buffer.premultiplied;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_premultiplied (value:Bool):Bool {\n\t\t\n\t\tif (value && !buffer.premultiplied) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase CANVAS, DATA:\n\t\t\t\t\t\n\t\t\t\t\t#if (js && html5)\n\t\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.multiplyAlpha (this);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (!value && buffer.premultiplied) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase DATA:\n\t\t\t\t\t\n\t\t\t\t\t#if (js && html5)\n\t\t\t\t\tImageCanvasUtil.convertToData (this);\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tImageDataUtil.unmultiplyAlpha (this);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_rect ():Rectangle {\n\t\t\n\t\treturn new Rectangle (0, 0, width, height);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_src ():Dynamic {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcCanvas == null) {\n\t\t\t\n\t\t\tImageCanvasUtil.convertToCanvas (this);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn buffer.src;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_src (value:Dynamic):Dynamic {\n\t\t\n\t\treturn buffer.src = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_transparent ():Bool {\n\t\t\n\t\tif (buffer == null) return false;\n\t\treturn buffer.transparent;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_transparent (value:Bool):Bool {\n\t\t\n\t\t// TODO, modify data to set transparency\n\t\tif (buffer == null) return false;\n\t\treturn buffer.transparent = value;\n\t\t\n\t}\n\t\n\t\n}","package lime.utils;\r\n\r\n#if (js && !display)\r\n\r\n    @:forward\r\n    abstract UInt8Array(js.html.Uint8Array)\r\n        from js.html.Uint8Array\r\n        to js.html.Uint8Array {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 1;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            #if openfl ?vector:openfl.Vector<Int>, #end\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n            if(elements != null) {\r\n                this = new js.html.Uint8Array( elements );\r\n            } else if(array != null) {\r\n                this = new js.html.Uint8Array( untyped array );\r\n            #if openfl } else if(vector != null) { this = new js.html.Uint8Array( untyped untyped (vector).__array ); #end\r\n            } else if(view != null) {\r\n                this = new js.html.Uint8Array( untyped view );\r\n            } else if(buffer != null) {\r\n                if(len == null) {\r\n                    this = new js.html.Uint8Array( buffer, byteoffset );\r\n                } else {\r\n                    this = new js.html.Uint8Array( buffer, byteoffset, len );\r\n                }\r\n            } else {\r\n                this = null;\r\n            }\r\n        }\r\n\r\n        @:arrayAccess @:extern inline function __set(idx:Int, val:UInt) : UInt return this[idx] = val;\r\n        @:arrayAccess @:extern inline function __get(idx:Int) : UInt return this[idx];\r\n\r\n\r\n            //non spec haxe conversions\r\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int, ?len:Int ) : UInt8Array {\r\n            if(byteOffset == null) return new js.html.Uint8Array(cast bytes.getData());\r\n            if(len == null) return new js.html.Uint8Array(cast bytes.getData(), byteOffset);\r\n            return new js.html.Uint8Array(cast bytes.getData(), byteOffset, len);\r\n        }\r\n\r\n        inline public function toBytes() : haxe.io.Bytes {\r\n            return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\r\n        }\r\n\r\n        inline function toString() return this != null ? 'UInt8Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\r\n\r\n    }\r\n\r\n#else\r\n\r\n    import lime.utils.ArrayBufferView;\r\n\r\n    @:forward\r\n    abstract UInt8Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 1;\r\n\r\n        public var length (get, never):Int;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?buffer:ArrayBuffer,\r\n            ?array:Array<T>,\r\n            #if openfl ?vector:openfl.Vector<Int>, #end\r\n            ?view:ArrayBufferView,\r\n            ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n\r\n            if(elements != null) {\r\n                this = new ArrayBufferView( elements, Uint8 );\r\n            } else if(array != null) {\r\n                this = new ArrayBufferView(0, Uint8).initArray(array);\r\n            #if openfl } else if(vector != null) { this = new ArrayBufferView(0, Uint8).initArray(untyped (vector).__array); #end\r\n            } else if(view != null) {\r\n                this = new ArrayBufferView(0, Uint8).initTypedArray(view);\r\n            } else if(buffer != null) {\r\n                this = new ArrayBufferView(0, Uint8).initBuffer(buffer, byteoffset, len);\r\n            } else {\r\n                throw \"Invalid constructor arguments for UInt8Array\";\r\n            }\r\n        }\r\n\r\n    //Public API\r\n\r\n        public inline function subarray( begin:Int, end:Null<Int> = null) : UInt8Array return this.subarray(begin, end);\r\n\r\n\r\n            //non spec haxe conversions\r\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt8Array {\r\n            return new UInt8Array(bytes, byteOffset, len);\r\n        }\r\n\r\n        inline public function toBytes() : haxe.io.Bytes {\r\n            return this.buffer;\r\n        }\r\n\r\n    //Internal\r\n\r\n        inline function toString() return this != null ? 'UInt8Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\r\n\r\n        inline function get_length() return this.length;\r\n\r\n\r\n        @:noCompletion\r\n        @:arrayAccess @:extern\r\n        public inline function __get(idx:Int) {\r\n            return ArrayBufferIO.getUint8(this.buffer, this.byteOffset+idx);\r\n        }\r\n\r\n        @:noCompletion\r\n        @:arrayAccess @:extern\r\n        public inline function __set(idx:Int, val:UInt) {\r\n            ArrayBufferIO.setUint8(this.buffer, this.byteOffset+idx, val);\r\n            return val;\r\n        }\r\n\r\n    }\r\n\r\n#end //!js","package lime.math.color;\n\n\nimport lime.graphics.PixelFormat;\nimport lime.utils.UInt32Array;\nimport lime.utils.UInt8Array;\n\n\nabstract ARGB(#if flash Int #else UInt #end) from Int to Int from UInt to UInt {\n\t\n\t\n\tprivate static var a16:Int;\n\tprivate static var unmult:Float;\n\t\n\tpublic var a (get, set):Int;\n\tpublic var b (get, set):Int;\n\tpublic var g (get, set):Int;\n\tpublic var r (get, set):Int;\n\t\n\t\n\tpublic inline function new (argb:Int = 0) {\n\t\t\n\t\tthis = argb;\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function create (a:Int, r:Int, g:Int, b:Int):ARGB {\n\t\t\n\t\tvar argb = new ARGB ();\n\t\targb.set (a, r, g, b);\n\t\treturn argb;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function multiplyAlpha () {\n\t\t\n\t\tif (a == 0) {\n\t\t\t\n\t\t\tthis = 0;\n\t\t\t\n\t\t} else if (a != 0xFF) {\n\t\t\t\n\t\t\ta16 = RGBA.__alpha16[a];\n\t\t\tset (a, (r * a16) >> 16, (g * a16) >> 16, (b * a16) >> 16);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 1], data[offset], data[offset + 3], data[offset + 2]);\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 1], data[offset + 2], data[offset + 3], data[offset]);\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 2], data[offset + 3], data[offset], data[offset + 1]);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tunmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function set (a:Int, r:Int, g:Int, b:Int):Void {\n\t\t\n\t\tthis = ((a & 0xFF) << 24) | ((r & 0xFF) << 16) | ((g & 0xFF) << 8) | (b & 0xFF);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unmultiplyAlpha () {\n\t\t\n\t\tif (a != 0 && a != 0xFF) {\n\t\t\t\n\t\t\tunmult = 255.0 / a;\n\t\t\tset (a, RGBA.__clamp[Math.floor (r * unmult)], RGBA.__clamp[Math.floor (g * unmult)], RGBA.__clamp[Math.floor (b * unmult)]);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function writeUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = b;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = r;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = r;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = b;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tdata[offset] = a;\n\t\t\t\tdata[offset + 1] = r;\n\t\t\t\tdata[offset + 2] = g;\n\t\t\t\tdata[offset + 3] = b;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromBGRA (bgra:BGRA):ARGB {\n\t\t\n\t\treturn ARGB.create (bgra.a, bgra.r, bgra.g, bgra.b);\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromRGBA (rgba:RGBA):ARGB {\n\t\t\n\t\treturn ARGB.create (rgba.a, rgba.r, rgba.g, rgba.b);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate inline function get_a ():Int {\n\t\t\n\t\treturn (this >> 24) & 0xFF;\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_a (value:Int):Int {\n\t\t\n\t\tset (value, r, g, b);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_b ():Int {\n\t\t\n\t\treturn this & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_b (value:Int):Int {\n\t\t\n\t\tset (a, r, g, value);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_g ():Int {\n\t\t\n\t\treturn (this >> 8) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_g (value:Int):Int {\n\t\t\n\t\tset (a, r, value, b);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_r ():Int {\n\t\t\n\t\treturn (this >> 16) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_r (value:Int):Int {\n\t\t\n\t\tset (a, value, g, b);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.math.color;\n\n\nimport lime.graphics.PixelFormat;\nimport lime.utils.UInt32Array;\nimport lime.utils.UInt8Array;\n\n@:allow(lime.math.color)\n\n\nabstract RGBA(#if flash Int #else UInt #end) from Int to Int from UInt to UInt {\n\t\n\t\n\tprivate static var __alpha16:UInt32Array;\n\tprivate static var __clamp:UInt8Array;\n\tprivate static var a16:Int;\n\tprivate static var unmult:Float;\n\t\n\tpublic var a (get, set):Int;\n\tpublic var b (get, set):Int;\n\tpublic var g (get, set):Int;\n\tpublic var r (get, set):Int;\n\t\n\t\n\tprivate static function __init__ ():Void {\n\t\t\n\t\t__alpha16 = new UInt32Array (256);\n\t\t\n\t\tfor (i in 0...256) {\n\t\t\t\n\t\t\t__alpha16[i] = Math.ceil ((i) * ((1 << 16) / 0xFF));\n\t\t\t\n\t\t}\n\t\t\n\t\t__clamp = new UInt8Array (0xFF + 0xFF);\n\t\t\n\t\tfor (i in 0...0xFF) {\n\t\t\t\n\t\t\t__clamp[i] = i;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (i in 0xFF...(0xFF + 0xFF + 1)) {\n\t\t\t\n\t\t\t__clamp[i] = 0xFF;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function new (rgba:Int = 0) {\n\t\t\n\t\tthis = rgba;\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function create (r:Int, g:Int, b:Int, a:Int):RGBA {\n\t\t\n\t\tvar rgba = new RGBA ();\n\t\trgba.set (r, g, b, a);\n\t\treturn rgba;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function multiplyAlpha () {\n\t\t\n\t\tif (a == 0) {\n\t\t\t\n\t\t\tif (this != 0) {\n\t\t\t\t\n\t\t\t\tthis = 0;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (a != 0xFF) {\n\t\t\t\n\t\t\ta16 = __alpha16[a];\n\t\t\tset ((r * a16) >> 16, (g * a16) >> 16, (b * a16) >> 16, a);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 2], data[offset + 1], data[offset], data[offset + 3]);\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tset (data[offset], data[offset + 1], data[offset + 2], data[offset + 3]);\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 1], data[offset + 2], data[offset + 3], data[offset]);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tunmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function set (r:Int, g:Int, b:Int, a:Int):Void {\n\t\t\n\t\tthis = ((r & 0xFF) << 24) | ((g & 0xFF) << 16) | ((b & 0xFF) << 8) | (a & 0xFF);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unmultiplyAlpha () {\n\t\t\n\t\tif (a != 0 && a != 0xFF) {\n\t\t\t\n\t\t\tunmult = 255.0 / a;\n\t\t\tset (__clamp[Math.round (r * unmult)], __clamp[Math.round (g * unmult)], __clamp[Math.round (b * unmult)], a);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function writeUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = b;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = r;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = r;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = b;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tdata[offset] = a;\n\t\t\t\tdata[offset + 1] = r;\n\t\t\t\tdata[offset + 2] = g;\n\t\t\t\tdata[offset + 3] = b;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromARGB (argb:ARGB):RGBA {\n\t\t\n\t\treturn RGBA.create (argb.r, argb.g, argb.b, argb.a);\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromBGRA (bgra:BGRA):RGBA {\n\t\t\n\t\treturn RGBA.create (bgra.r, bgra.g, bgra.b, bgra.a);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate inline function get_a ():Int {\n\t\t\n\t\treturn this & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_a (value:Int):Int {\n\t\t\n\t\tset (r, g, b, value);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_b ():Int {\n\t\t\n\t\treturn (this >> 8) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_b (value:Int):Int {\n\t\t\n\t\tset (r, g, value, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_g ():Int {\n\t\t\n\t\treturn (this >> 16) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_g (value:Int):Int {\n\t\t\n\t\tset (r, value, b, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_r ():Int {\n\t\t\n\t\treturn (this >> 24) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_r (value:Int):Int {\n\t\t\n\t\tset (value, g, b, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.math.color;\n\n\nimport lime.graphics.PixelFormat;\nimport lime.utils.UInt32Array;\nimport lime.utils.UInt8Array;\n\n\nabstract BGRA(#if flash Int #else UInt #end) from Int to Int from UInt to UInt {\n\t\n\t\n\tprivate static var a16:Int;\n\tprivate static var unmult:Float;\n\t\n\tpublic var a (get, set):Int;\n\tpublic var b (get, set):Int;\n\tpublic var g (get, set):Int;\n\tpublic var r (get, set):Int;\n\t\n\t\n\tpublic inline function new (bgra:Int = 0) {\n\t\t\n\t\tthis = bgra;\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function create (b:Int, g:Int, r:Int, a:Int):BGRA {\n\t\t\n\t\tvar bgra = new BGRA ();\n\t\tbgra.set (b, g, r, a);\n\t\treturn bgra;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function multiplyAlpha () {\n\t\t\n\t\tif (a == 0) {\n\t\t\t\n\t\t\tthis = 0;\n\t\t\t\n\t\t} else if (a != 0xFF) {\n\t\t\t\n\t\t\ta16 = RGBA.__alpha16[a];\n\t\t\tset ((b * a16) >> 16, (g * a16) >> 16, (r * a16) >> 16, a);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tset (data[offset], data[offset + 1], data[offset + 2], data[offset + 3]);\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 2], data[offset + 1], data[offset], data[offset + 3]);\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tset (data[offset + 3], data[offset + 2], data[offset + 1], data[offset]);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tunmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function set (b:Int, g:Int, r:Int, a:Int):Void {\n\t\t\n\t\tthis = ((b & 0xFF) << 24) | ((g & 0xFF) << 16) | ((r & 0xFF) << 8) | (a & 0xFF);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unmultiplyAlpha () {\n\t\t\n\t\tif (a != 0 && a != 0xFF) {\n\t\t\t\n\t\t\tunmult = 255.0 / a;\n\t\t\tset (RGBA.__clamp[Math.floor (b * unmult)], RGBA.__clamp[Math.floor (g * unmult)], RGBA.__clamp[Math.floor (r * unmult)], a);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function writeUInt8 (data:UInt8Array, offset:Int, format:PixelFormat = RGBA32, premultiplied:Bool = false):Void {\n\t\t\n\t\tif (premultiplied) {\n\t\t\t\n\t\t\tmultiplyAlpha ();\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = b;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = r;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase RGBA32:\n\t\t\t\t\n\t\t\t\tdata[offset] = r;\n\t\t\t\tdata[offset + 1] = g;\n\t\t\t\tdata[offset + 2] = b;\n\t\t\t\tdata[offset + 3] = a;\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\tdata[offset] = a;\n\t\t\t\tdata[offset + 1] = r;\n\t\t\t\tdata[offset + 2] = g;\n\t\t\t\tdata[offset + 3] = b;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromARGB (argb:ARGB):BGRA {\n\t\t\n\t\treturn BGRA.create (argb.b, argb.g, argb.r, argb.a);\n\t\t\n\t}\n\t\n\t\n\t@:from private static inline function __fromRGBA (rgba:RGBA):BGRA {\n\t\t\n\t\treturn BGRA.create (rgba.b, rgba.g, rgba.r, rgba.a);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate inline function get_a ():Int {\n\t\t\n\t\treturn this & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_a (value:Int):Int {\n\t\t\n\t\tset (b, g, r, value);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_b ():Int {\n\t\t\n\t\treturn (this >> 24) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_b (value:Int):Int {\n\t\t\n\t\tset (value, g, r, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_g ():Int {\n\t\t\n\t\treturn (this >> 16) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_g (value:Int):Int {\n\t\t\n\t\tset (b, value, r, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_r ():Int {\n\t\t\n\t\treturn (this >> 8) & 0xFF;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_r (value:Int):Int {\n\t\t\n\t\tset (b, g, value, a);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics;\n\n\nimport haxe.io.Bytes;\nimport lime.graphics.cairo.CairoSurface;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\nimport js.html.Image in HTMLImage;\nimport js.html.ImageData;\nimport js.html.Uint8ClampedArray;\nimport js.Browser;\nimport lime.graphics.utils.ImageCanvasUtil;\n#elseif flash\nimport flash.display.BitmapData;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:allow(lime.graphics.Image)\n\n\nclass ImageBuffer {\n\t\n\t\n\tpublic var bitsPerPixel:Int;\n\tpublic var data:UInt8Array;\n\tpublic var format:PixelFormat;\n\tpublic var height:Int;\n\tpublic var premultiplied:Bool;\n\tpublic var src (get, set):Dynamic;\n\tpublic var stride (get, never):Int;\n\tpublic var transparent:Bool;\n\tpublic var width:Int;\n\t\n\t@:noCompletion private var __srcBitmapData:#if flash BitmapData #else Dynamic #end;\n\t@:noCompletion private var __srcCanvas:#if (js && html5) CanvasElement #else Dynamic #end;\n\t@:noCompletion private var __srcContext:#if (js && html5) CanvasRenderingContext2D #else Dynamic #end;\n\t@:noCompletion private var __srcCustom:Dynamic;\n\t@:noCompletion private var __srcImage:#if (js && html5) HTMLImage #else Dynamic #end;\n\t@:noCompletion private var __srcImageData:#if (js && html5) ImageData #else Dynamic #end;\n\t\n\t\n\t#if (js && html5 && es5get)\n\tprivate static function __init__ () {\n\t\t\n\t\tvar p = untyped ImageBuffer.prototype;\n\t\tuntyped Object.defineProperties (p, {\n\t\t\t\"src\": { get: p.get_src, set: p.set_src },\n\t\t\t\"stride\": { get: p.get_stride }\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (data:UInt8Array = null, width:Int = 0, height:Int = 0, bitsPerPixel:Int = 32, format:PixelFormat = null) {\n\t\t\n\t\tthis.data = data;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.bitsPerPixel = bitsPerPixel;\n\t\tthis.format = (format == null ? RGBA32 : format);\n\t\tpremultiplied = false;\n\t\ttransparent = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():ImageBuffer {\n\t\t\n\t\tvar buffer = new ImageBuffer (data, width, height, bitsPerPixel);\n\t\t\n\t\t#if flash\n\t\tif (__srcBitmapData != null) buffer.__srcBitmapData = __srcBitmapData.clone ();\n\t\t#elseif (js && html5)\n\t\tif (data != null) {\n\t\t\t\n\t\t\tbuffer.data = new UInt8Array (data.byteLength);\n\t\t\tvar copy = new UInt8Array (data);\n\t\t\tbuffer.data.set (copy);\n\t\t\t\n\t\t} else if (__srcImageData != null) {\n\t\t\t\n\t\t\tbuffer.__srcCanvas = cast Browser.document.createElement (\"canvas\");\n\t\t\tbuffer.__srcContext = cast buffer.__srcCanvas.getContext (\"2d\");\n\t\t\tbuffer.__srcCanvas.width = __srcImageData.width;\n\t\t\tbuffer.__srcCanvas.height = __srcImageData.height;\n\t\t\tbuffer.__srcImageData = buffer.__srcContext.createImageData (__srcImageData.width, __srcImageData.height);\n\t\t\tvar copy = new Uint8ClampedArray (__srcImageData.data);\n\t\t\tbuffer.__srcImageData.data.set (copy);\n\t\t\t\n\t\t} else if (__srcCanvas != null) {\n\t\t\t\n\t\t\tbuffer.__srcCanvas = cast Browser.document.createElement (\"canvas\");\n\t\t\tbuffer.__srcContext = cast buffer.__srcCanvas.getContext (\"2d\");\n\t\t\tbuffer.__srcCanvas.width = __srcCanvas.width;\n\t\t\tbuffer.__srcCanvas.height = __srcCanvas.height;\n\t\t\tbuffer.__srcContext.drawImage (__srcCanvas, 0, 0);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tbuffer.__srcImage = __srcImage;\n\t\t\t\n\t\t}\n\t\t#elseif nodejs\n\t\tif (data != null) {\n\t\t\t\n\t\t\tbuffer.data = new UInt8Array (data.byteLength);\n\t\t\tvar copy = new UInt8Array (data);\n\t\t\tbuffer.data.set (copy);\n\t\t\t\n\t\t}\n\t\tbuffer.__srcCustom = __srcCustom;\n\t\t#else\n\t\tif (data != null) {\n\t\t\t\n\t\t\tvar bytes = Bytes.alloc (data.byteLength);\n\t\t\tbytes.blit (0, buffer.data.buffer, 0, data.byteLength);\n\t\t\tbuffer.data = new UInt8Array (bytes);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tbuffer.bitsPerPixel = bitsPerPixel;\n\t\tbuffer.format = format;\n\t\tbuffer.premultiplied = premultiplied;\n\t\tbuffer.transparent = transparent;\n\t\treturn buffer;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_src ():Dynamic {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tif (__srcImage != null) return __srcImage;\n\t\t\treturn __srcCanvas;\n\t\t\t\n\t\t#elseif flash\n\t\t\t\n\t\t\treturn __srcBitmapData;\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\treturn __srcCustom;\n\t\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function set_src (value:Dynamic):Dynamic {\n\t\t\n\t\t#if (js && html5)\n\t\t\t\n\t\t\tif (Std.is (value, HTMLImage)) {\n\t\t\t\t\n\t\t\t\t__srcImage = cast value;\n\t\t\t\t\n\t\t\t} else if (Std.is (value, CanvasElement)) {\n\t\t\t\t\n\t\t\t\t__srcCanvas = cast value;\n\t\t\t\t__srcContext = cast __srcCanvas.getContext (\"2d\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t#elseif flash\n\t\t\t\n\t\t\t__srcBitmapData = cast value;\n\t\t\t\n\t\t#else\n\t\t\t\n\t\t\t__srcCustom = value;\n\t\t\t\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_stride ():Int {\n\t\t\n\t\treturn width * 4;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.cairo;\n\n\nimport lime._backend.native.NativeCFFI;\nimport lime.math.Matrix3;\nimport lime.math.Vector2;\nimport lime.system.CFFI;\nimport lime.system.CFFIPointer;\nimport lime.text.Glyph;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nclass Cairo {\n\t\n\t\n\tpublic static var version (get, null):Int;\n\tpublic static var versionString (get, null):String;\n\t\n\tpublic var antialias (get, set):CairoAntialias;\n\tpublic var currentPoint (get, never):Vector2;\n\tpublic var dash (get, set):Array<Float>;\n\tpublic var dashCount (get, never):Int;\n\tpublic var fillRule (get, set):CairoFillRule;\n\tpublic var fontFace (get, set):CairoFontFace;\n\tpublic var fontOptions (get, set):CairoFontOptions;\n\tpublic var groupTarget (get, never):CairoSurface;\n\tpublic var hasCurrentPoint (get, never):Bool;\n\tpublic var lineCap (get, set):CairoLineCap;\n\tpublic var lineJoin (get, set):CairoLineJoin;\n\tpublic var lineWidth (get, set):Float;\n\tpublic var matrix (get, set):Matrix3;\n\tpublic var miterLimit (get, set):Float;\n\tpublic var operator (get, set):CairoOperator;\n\tpublic var source (get, set):CairoPattern;\n\tpublic var target (get, null):CairoSurface;\n\tpublic var tolerance (get, set):Float;\n\tpublic var userData:Dynamic;\n\t\n\t@:noCompletion private var handle:CFFIPointer;\n\t\n\t\n\tpublic function new (surface:CairoSurface = null):Void {\n\t\t\n\t\tif (surface != null) {\n\t\t\t\n\t\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\t\thandle = NativeCFFI.lime_cairo_create (surface);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function arc (xc:Float, yc:Float, radius:Float, angle1:Float, angle2:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_arc (handle, xc, yc, radius, angle1, angle2);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function arcNegative (xc:Float, yc:Float, radius:Float, angle1:Float, angle2:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_arc_negative (handle, xc, yc, radius, angle1, angle2);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function clip ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_clip (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function clipExtents (x1:Float, y1:Float, x2:Float, y2:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_clip_extents (handle, x1, y1, x2, y2);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function clipPreserve ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_clip_preserve (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function closePath ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_close_path (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function copyPage ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_copy_page (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function curveTo (x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_curve_to (handle, x1, y1, x2, y2, x3, y3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function fill ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_fill (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function fillExtents (x1:Float, y1:Float, x2:Float, y2:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_fill_extents (handle, x1, y1, x2, y2);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function fillPreserve ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_fill_preserve (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function identityMatrix ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_identity_matrix (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function inClip (x:Float, y:Float):Bool {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_in_clip (handle, x, y);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function inFill (x:Float, y:Float):Bool {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_in_fill (handle, x, y);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function inStroke (x:Float, y:Float):Bool {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_in_stroke (handle, x, y);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function lineTo (x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_line_to (handle, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function moveTo (x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_move_to (handle, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function mask (pattern:CairoPattern):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_mask (handle, pattern);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function maskSurface (surface:CairoSurface, x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_mask_surface (handle, surface, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function newPath ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_new_path (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function paint ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_paint (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function paintWithAlpha (alpha:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_paint_with_alpha (handle, alpha);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function popGroup ():CairoPattern {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_pop_group (handle);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function popGroupToSource ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_pop_group_to_source (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pushGroup ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_push_group (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pushGroupWithContent (content:CairoContent):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_push_group_with_content (handle, content);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function recreate (surface:CairoSurface):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\thandle = NativeCFFI.lime_cairo_create (surface);\n\t\t#end\n\t}\n\t\n\t\n\tpublic function rectangle (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_rectangle (handle, x, y, width, height);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function relCurveTo (dx1:Float, dy1:Float, dx2:Float, dy2:Float, dx3:Float, dy3:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_rel_curve_to (handle, dx1, dy1, dx2, dy2, dx3, dy3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function relLineTo (dx:Float, dy:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_rel_line_to (handle, dx, dy);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function relMoveTo (dx:Float, dy:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_rel_move_to (handle, dx, dy);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function resetClip ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_reset_clip (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function restore ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_restore (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function save ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_save (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setFontSize (size:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_font_size (handle, size);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setSourceRGB (r:Float, g:Float, b:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_source_rgb (handle, r, g, b);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setSourceRGBA (r:Float, g:Float, b:Float, a:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_source_rgba (handle, r, g, b, a);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setSourceSurface (surface:CairoSurface, x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_source_surface (handle, surface, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function showGlyphs (glyphs:Array<CairoGlyph>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_show_glyphs (handle, glyphs);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function showPage ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_show_page (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function showText (utf8:String):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_show_text (handle, utf8);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function status ():CairoStatus {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_status (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function stroke ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_stroke (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function strokeExtents (x1:Float, y1:Float, x2:Float, y2:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_stroke_extents (handle, x1, y1, x2, y2);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function strokePreserve ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_stroke_preserve (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function textPath (utf8:String):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_text_path (handle, utf8);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function transform (matrix:Matrix3):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_transform (handle, matrix);\n\t\t#end\n\t\t\n\t}\n\t\n\tpublic function rotate (amount:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_rotate (handle, amount);\n\t\t#end\n\t\t\n\t}\n\t\n\tpublic function scale (x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_scale (handle, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function translate (x:Float, y:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_translate (handle, x, y);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_antialias ():CairoAntialias {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_antialias (handle);\n\t\t#end\n\t\t\n\t\treturn cast 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_antialias (value:CairoAntialias):CairoAntialias {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_antialias (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_currentPoint ():Vector2 {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tvar vec:Dynamic = NativeCFFI.lime_cairo_get_current_point (handle);\n\t\treturn new Vector2 (vec.x, vec.y);\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_dash ():Array<Float> {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tvar result:Dynamic = NativeCFFI.lime_cairo_get_dash (handle);\n\t\treturn result;\n\t\t#end\n\t\t\n\t\treturn [];\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_dash (value:Array<Float>):Array<Float> {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_dash (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_dashCount ():Int {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_dash_count (handle);\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_fillRule ():CairoFillRule {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_fill_rule (handle);\n\t\t#end\n\t\t\n\t\treturn cast 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_fillRule (value:CairoFillRule):CairoFillRule {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_fill_rule (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_fontFace ():CairoFontFace {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_font_face (handle);\n\t\t#end\n\t\t\n\t\treturn cast 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_fontFace (value:CairoFontFace):CairoFontFace {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_font_face (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_fontOptions ():CairoFontOptions {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_font_options (handle);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_fontOptions (value:CairoFontOptions):CairoFontOptions {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_font_options (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_groupTarget ():CairoSurface {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_group_target (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_hasCurrentPoint ():Bool {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_has_current_point (handle);\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_lineCap ():CairoLineCap {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_line_cap (handle);\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_lineCap (value:CairoLineCap):CairoLineCap {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_line_cap (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_lineJoin ():CairoLineJoin {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_line_join (handle);\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_lineJoin (value:CairoLineJoin):CairoLineJoin {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_line_join (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_lineWidth ():Float {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_line_width (handle);\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_lineWidth (value:Float):Float {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_line_width (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_matrix ():Matrix3 {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tvar m:Dynamic = NativeCFFI.lime_cairo_get_matrix (handle);\n\t\treturn new Matrix3 (m.a, m.b, m.c, m.d, m.tx, m.ty);\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_matrix (value:Matrix3):Matrix3 {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_matrix (handle, value.a, value.b, value.c, value.d, value.tx, value.ty);\n\t\t//NativeCFFI.lime_cairo_set_matrix (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_miterLimit ():Float {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_miter_limit (handle);\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_miterLimit (value:Float):Float {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_miter_limit (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_operator ():CairoOperator {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_operator (handle);\n\t\t#end\n\t\t\n\t\treturn cast 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_operator (value:CairoOperator):CairoOperator {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_operator (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_source ():CairoPattern {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_source (handle);\n\t\t#end\n\t\t\n\t\treturn cast 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_source (value:CairoPattern):CairoPattern {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_source (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_target ():CairoSurface {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_target (handle);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_tolerance ():Float {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_get_tolerance (handle);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_tolerance (value:Float):Float {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_set_tolerance (handle, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_version ():Int {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_version ();\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_versionString ():String {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_version_string ();\n\t\t#else\n\t\treturn \"\";\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.cairo;\n\n\nimport lime._backend.native.NativeCFFI;\nimport lime.system.CFFIPointer;\nimport lime.text.Font;\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nabstract CairoFTFontFace(CairoFontFace) from CairoFontFace to CairoFontFace from CFFIPointer to CFFIPointer {\n\t\n\t\n\tpublic static inline var FT_LOAD_FORCE_AUTOHINT = (1 << 5);\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\tthis = cast 0;\n\t\t\n\t}\n\t\n\t\n\tpublic static function create (face:Font, loadFlags:Int):CairoFTFontFace {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_ft_font_face_create (face.src, loadFlags);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.cairo;\n\n\nimport lime._backend.native.NativeCFFI;\nimport lime.system.CFFIPointer;\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nabstract CairoFontFace(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\tthis = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function status ():CairoStatus {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_font_face_status (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.cairo;\r\n\r\n\r\nimport lime._backend.native.NativeCFFI;\r\nimport lime.system.CFFIPointer;\r\nimport lime.text.Font;\r\n\r\n@:access(lime._backend.native.NativeCFFI)\r\n\r\n\r\nabstract CairoFontOptions(CFFIPointer) from CFFIPointer to CFFIPointer {\r\n\t\r\n\t\r\n\tpublic var antialias (get, set):CairoAntialias;\r\n\tpublic var hintMetrics (get, set):CairoHintMetrics;\r\n\tpublic var hintStyle (get, set):CairoHintStyle;\r\n\tpublic var subpixelOrder (get, set):CairoSubpixelOrder;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t#if (lime_cffi && lime_cairo && !macro)\r\n\t\tthis = NativeCFFI.lime_cairo_font_options_create ();\r\n\t\t#else\r\n\t\tthis = null;\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private function get_antialias ():CairoAntialias {\r\n\t\t\r\n\t\t#if (lime_cffi && lime_cairo && !macro)\r\n\t\treturn NativeCFFI.lime_cairo_font_options_get_antialias (this);\r\n\t\t#end\r\n\t\t\r\n\t\treturn cast 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function set_antialias (value:CairoAntialias):CairoAntialias {\r\n\t\t\r\n\t\t#if (lime_cffi && lime_cairo && !macro)\r\n\t\tNativeCFFI.lime_cairo_font_options_set_antialias (this, value);\r\n\t\t#end\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function get_hintMetrics ():CairoHintMetrics {\r\n\t\t\r\n\t\t#if (lime_cffi && lime_cairo && !macro)\r\n\t\treturn NativeCFFI.lime_cairo_font_options_get_hint_metrics (this);\r\n\t\t#end\r\n\t\t\r\n\t\treturn cast 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function set_hintMetrics (value:CairoHintMetrics):CairoHintMetrics {\r\n\t\t\r\n\t\t#if (lime_cffi && lime_cairo && !macro)\r\n\t\tNativeCFFI.lime_cairo_font_options_set_hint_metrics (this, value);\r\n\t\t#end\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t@:noCompletion private function get_hintStyle ():CairoHintStyle {\r\n\t\t\r\n\t\t#if (lime_cffi && lime_cairo && !macro)\r\n\t\treturn NativeCFFI.lime_cairo_font_options_get_hint_style (this);\r\n\t\t#end\r\n\t\t\r\n\t\treturn cast 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function set_hintStyle (value:CairoHintStyle):CairoHintStyle {\r\n\t\t\r\n\t\t#if (lime_cffi && lime_cairo && !macro)\r\n\t\tNativeCFFI.lime_cairo_font_options_set_hint_style (this, value);\r\n\t\t#end\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function get_subpixelOrder ():CairoSubpixelOrder {\r\n\t\t\r\n\t\t#if (lime_cffi && lime_cairo && !macro)\r\n\t\treturn NativeCFFI.lime_cairo_font_options_get_subpixel_order (this);\r\n\t\t#end\r\n\t\t\r\n\t\treturn cast 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:noCompletion private function set_subpixelOrder (value:CairoSubpixelOrder):CairoSubpixelOrder {\r\n\t\t\r\n\t\t#if (lime_cffi && lime_cairo && !macro)\r\n\t\tNativeCFFI.lime_cairo_font_options_set_subpixel_order (this, value);\r\n\t\t#end\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","package lime.graphics.cairo;\n\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass CairoGlyph {\n\t\n\t\n\tpublic var index:Int;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\tpublic function new (index:Int, x:Float = 0, y:Float = 0) {\n\t\t\n\t\tthis.index = index;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.cairo;\n\n\nimport lime._backend.native.NativeCFFI;\nimport lime.system.CFFIPointer;\nimport lime.utils.DataPointer;\n\n@:access(lime._backend.native.NativeCFFI)\n\n\n@:forward abstract CairoImageSurface(CairoSurface) from CairoSurface to CairoSurface from CFFIPointer to CFFIPointer {\n\t\n\t\n\tpublic var data (get, never):DataPointer;\n\tpublic var format (get, never):CairoFormat;\n\tpublic var height (get, never):Int;\n\tpublic var stride (get, never):Int;\n\tpublic var width (get, never):Int;\n\t\n\t\n\tpublic function new (format:CairoFormat, width:Int, height:Int):CairoSurface {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tthis = NativeCFFI.lime_cairo_image_surface_create (format, width, height);\n\t\t#else\n\t\tthis = cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function create (data:DataPointer, format:CairoFormat, width:Int, height:Int, stride:Int):CairoSurface {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_image_surface_create_for_data (data, format, width, height, stride);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromImage (image:Image):CairoSurface {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn create (#if nodejs image.data #else image.data.buffer #end, CairoFormat.ARGB32, image.width, image.height, image.buffer.stride);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_data ():DataPointer {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_image_surface_get_data (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_format ():CairoFormat {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_image_surface_get_format (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_height ():Int {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_image_surface_get_height (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_stride ():Int {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_image_surface_get_stride (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_width ():Int {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_image_surface_get_width (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.cairo;\n\n\nimport lime._backend.native.NativeCFFI;\nimport lime.math.Matrix3;\nimport lime.system.CFFIPointer;\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nabstract CairoPattern(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tpublic var colorStopCount (get, never):Int;\n\tpublic var extend (get, set):CairoExtend;\n\tpublic var filter (get, set):CairoFilter;\n\tpublic var matrix (get, set):Matrix3;\n\t\n\t\n\tpublic function new (handle) {\n\t\t\n\t\tthis = handle;\n\t\t\n\t}\n\t\n\t\n\tpublic function addColorStopRGB (offset:Float, r:Float, g:Float, b:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_pattern_add_color_stop_rgb (this, offset, r, g, b);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function addColorStopRGBA (offset:Float, r:Float, g:Float, b:Float, a:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_pattern_add_color_stop_rgba (this, offset, r, g, b, a);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createForSurface (surface:CairoSurface):CairoPattern {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_pattern_create_for_surface (surface);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createLinear (x0:Float, y0:Float, x1:Float, y1:Float):CairoPattern {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_pattern_create_linear (x0, y0, x1, y1);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createRadial (cx0:Float, cy0:Float, radius0:Float, cx1:Float, cy1:Float, radius1:Float):CairoPattern {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_pattern_create_radial (cx0, cy0, radius0, cx1, cy1, radius1);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createRGB (r:Float, g:Float, b:Float):CairoPattern {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_pattern_create_rgb (r, g, b);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createRGBA (r:Float, g:Float, b:Float, a:Float):CairoPattern {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_pattern_create_rgba (r, g, b, a);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_colorStopCount ():Int {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_pattern_get_color_stop_count (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_extend ():CairoExtend {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_pattern_get_extend (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_extend (value:CairoExtend):CairoExtend {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_pattern_set_extend (this, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_filter ():CairoFilter {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\treturn NativeCFFI.lime_cairo_pattern_get_filter (this);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_filter (value:CairoFilter):CairoFilter {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_pattern_set_filter (this, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_matrix ():Matrix3 {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tvar m:Dynamic = NativeCFFI.lime_cairo_pattern_get_matrix (this);\n\t\treturn new Matrix3 (m.a, m.b, m.c, m.d, m.tx, m.ty);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_matrix (value:Matrix3):Matrix3 {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_pattern_set_matrix (this, value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.cairo;\n\n\nimport lime._backend.native.NativeCFFI;\nimport lime.system.CFFIPointer;\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nabstract CairoSurface(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tpublic function flush ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_cairo && !macro)\n\t\tNativeCFFI.lime_cairo_surface_flush (this);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.console; #if lime_console\n\n\nimport cpp.Pointer;\nimport cpp.UInt16;\nimport lime.ConsoleIncludePaths;\n\n\n@:include(\"ConsoleIndexBuffer.h\")\n@:native(\"cpp::Struct<lime::ConsoleIndexBuffer>\")\nextern class IndexBuffer {\n\n\tpublic function lock ():Pointer<UInt16>;\n\tpublic function unlock ():Void;\n\n}\n\n\n#else\n\n\nclass IndexBuffer {\n\t\n\tpublic function new () {}\n\n}\n\n\n#end\n","package lime.graphics.console; #if lime_console\n\n\nimport lime.ConsoleIncludePaths;\n\n\n@:include(\"ConsoleShader.h\")\n@:native(\"cpp::Struct<lime::ConsoleShader>\")\nextern class Shader {\n\n\t\n}\n\n\n#else\n\n\nclass Shader {\n\t\n\tpublic function new () {}\n\n}\n\n\n#end\n","package lime.graphics.console; #if lime_console\n\n\nimport lime.graphics.console.VertexOutput;\nimport lime.ConsoleIncludePaths;\n\n\n@:include(\"ConsoleVertexBuffer.h\")\n@:native(\"cpp::Struct<lime::ConsoleVertexBuffer>\")\nextern class VertexBuffer {\n\n\tpublic function lock ():VertexOutput;\n\tpublic function unlock ():Void;\n\t\n}\n\n\n#else\n\n\nimport lime.graphics.console.VertexOutput;\n\n\nclass VertexBuffer {\n\n\tpublic function new () {}\n\t\n\tpublic function lock ():VertexOutput { return new VertexOutput (); }\n\tpublic function unlock ():Void {}\n\n}\n\n\n#end\n","package lime.graphics.console; #if lime_console\n\n\nimport cpp.Float32;\nimport cpp.UInt8;\nimport lime.ConsoleIncludePaths;\n\n\n@:include(\"ConsoleVertexOutput.h\")\n@:native(\"cpp::Struct<lime::ConsoleVertexOutput>\")\nextern class VertexOutput {\n\n\tpublic function vec2 (x:Float32, y:Float32):Void;\n\tpublic function vec3 (x:Float32, y:Float32, z:Float32):Void;\n\tpublic function color (r:UInt8, g:UInt8, b:UInt8, a:UInt8):Void;\n\n}\n\n\n#else\n\n\nclass VertexOutput {\n\n\tpublic function new () {}\n\n\tpublic function vec2 (x, y):Void {}\n\tpublic function vec3 (x, y, z):Void {}\n\tpublic function color (r, g, b, a):Void {}\n\n}\n\n\n#end\n\n","package lime.graphics.format;\n\n\nimport haxe.io.Bytes;\nimport lime.graphics.Image;\nimport lime.math.Rectangle;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass BMP {\n\t\n\t\n\tpublic static function encode (image:Image, type:BMPType = null):Bytes {\n\t\t\n\t\tif (image.premultiplied || image.format != RGBA32) {\n\t\t\t\n\t\t\t// TODO: Handle encode from different formats\n\t\t\t\n\t\t\timage = image.clone ();\n\t\t\timage.premultiplied = false;\n\t\t\timage.format = RGBA32;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (type == null) {\n\t\t\t\n\t\t\ttype = RGB;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar fileHeaderLength = 14;\n\t\tvar infoHeaderLength = 40;\n\t\tvar pixelValuesLength = (image.width * image.height * 4);\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase BITFIELD:\n\t\t\t\t\n\t\t\t\tinfoHeaderLength = 108;\n\t\t\t\n\t\t\tcase ICO:\n\t\t\t\t\n\t\t\t\tfileHeaderLength = 0;\n\t\t\t\tpixelValuesLength += image.width * image.height;\n\t\t\t\n\t\t\tcase RGB:\n\t\t\t\t\n\t\t\t\tpixelValuesLength = (image.width * 3) + ((image.width * 3) % 4) + (image.height * 3) + (image.height * 3);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\tvar data = Bytes.alloc (fileHeaderLength + infoHeaderLength + pixelValuesLength);\n\t\tvar position = 0;\n\t\t\n\t\tif (fileHeaderLength > 0) {\n\t\t\t\n\t\t\tdata.set (position++, 0x42);\n\t\t\tdata.set (position++, 0x4D);\n\t\t\tdata.setInt32 (position, data.length); position += 4;\n\t\t\tdata.setUInt16 (position, 0); position += 2;\n\t\t\tdata.setUInt16 (position, 0); position += 2;\n\t\t\tdata.setInt32 (position, fileHeaderLength + infoHeaderLength); position += 4;\n\t\t\t\n\t\t}\n\t\t\n\t\tdata.setInt32 (position, infoHeaderLength); position += 4;\n\t\tdata.setInt32 (position, image.width); position += 4;\n\t\tdata.setInt32 (position, type == ICO ? image.height * 2 : image.height); position += 4;\n\t\tdata.setUInt16 (position, 1); position += 2;\n\t\tdata.setUInt16 (position, type == RGB ? 24 : 32); position += 2;\n\t\tdata.setInt32 (position, type == BITFIELD ? 3 : 0); position += 4;\n\t\tdata.setInt32 (position, pixelValuesLength); position += 4;\n\t\tdata.setInt32 (position, 0x2e30); position += 4;\n\t\tdata.setInt32 (position, 0x2e30); position += 4;\n\t\tdata.setInt32 (position, 0); position += 4;\n\t\tdata.setInt32 (position, 0); position += 4;\n\t\t\n\t\tif (type == BITFIELD) {\n\t\t\t\n\t\t\tdata.setInt32 (position, 0x00FF0000); position += 4;\n\t\t\tdata.setInt32 (position, 0x0000FF00); position += 4;\n\t\t\tdata.setInt32 (position, 0x000000FF); position += 4;\n\t\t\tdata.setInt32 (position, 0xFF000000); position += 4;\n\t\t\t\n\t\t\tdata.set (position++, 0x20);\n\t\t\tdata.set (position++, 0x6E);\n\t\t\tdata.set (position++, 0x69);\n\t\t\tdata.set (position++, 0x57);\n\t\t\t\n\t\t\tfor (i in 0...48) {\n\t\t\t\t\n\t\t\t\tdata.set (position++, 0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar pixels = image.getPixels (new Rectangle (0, 0, image.width, image.height), ARGB32);\n\t\tvar readPosition = 0;\n\t\tvar a, r, g, b;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase BITFIELD:\n\t\t\t\t\n\t\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\t\n\t\t\t\t\treadPosition = (image.height - 1 - y) * 4 * image.width;\n\t\t\t\t\t\n\t\t\t\t\tfor (x in 0...image.width) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ta = pixels.get (readPosition++);\n\t\t\t\t\t\tr = pixels.get (readPosition++);\n\t\t\t\t\t\tg = pixels.get (readPosition++);\n\t\t\t\t\t\tb = pixels.get (readPosition++);\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.set (position++, b);\n\t\t\t\t\t\tdata.set (position++, g);\n\t\t\t\t\t\tdata.set (position++, r);\n\t\t\t\t\t\tdata.set (position++, a);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase ICO:\n\t\t\t\t\n\t\t\t\tvar andMask = Bytes.alloc (image.width * image.height);\n\t\t\t\tvar maskPosition = 0;\n\t\t\t\t\n\t\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\t\n\t\t\t\t\treadPosition = (image.height - 1 - y) * 4 * image.width;\n\t\t\t\t\t\n\t\t\t\t\tfor (x in 0...image.width) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ta = pixels.get (readPosition++);\n\t\t\t\t\t\tr = pixels.get (readPosition++);\n\t\t\t\t\t\tg = pixels.get (readPosition++);\n\t\t\t\t\t\tb = pixels.get (readPosition++);\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.set (position++, b);\n\t\t\t\t\t\tdata.set (position++, g);\n\t\t\t\t\t\tdata.set (position++, r);\n\t\t\t\t\t\tdata.set (position++, a);\n\t\t\t\t\t\t\n\t\t\t\t\t\t//if (a < 128) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//andMask.writeByte (1);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t//} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tandMask.set (maskPosition++, 0);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t//}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdata.blit (position, andMask, 0, image.width * image.height);\n\t\t\t\n\t\t\tcase RGB:\n\t\t\t\t\n\t\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\t\n\t\t\t\t\treadPosition = (image.height - 1 - y) * 4 * image.width;\n\t\t\t\t\t\n\t\t\t\t\tfor (x in 0...image.width) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ta = pixels.get (readPosition++);\n\t\t\t\t\t\tr = pixels.get (readPosition++);\n\t\t\t\t\t\tg = pixels.get (readPosition++);\n\t\t\t\t\t\tb = pixels.get (readPosition++);\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.set (position++, b);\n\t\t\t\t\t\tdata.set (position++, g);\n\t\t\t\t\t\tdata.set (position++, r);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...((image.width * 3) % 4)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.set (position++, 0);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t\treturn data;\n\t\t\n\t}\n\t\n\t\n}\n\n\nenum BMPType {\n\t\n\tRGB;\n\tBITFIELD;\n\tICO;\n\t\n}","package lime.graphics.format;\n\n\nimport haxe.io.Bytes;\nimport lime._backend.native.NativeCFFI;\nimport lime.graphics.utils.ImageCanvasUtil;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.system.CFFI;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n@:access(lime.graphics.ImageBuffer)\n\n\nclass JPEG {\n\t\n\t\n\tpublic static function decodeBytes (bytes:Bytes, decodeData:Bool = true):Image {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t#if !cs\n\t\treturn NativeCFFI.lime_jpeg_decode_bytes (bytes, decodeData, new ImageBuffer (new UInt8Array (Bytes.alloc (0))));\n\t\t#else\n\t\tvar bufferData:Dynamic = NativeCFFI.lime_jpeg_decode_bytes (bytes, decodeData, null);\n\t\t\n\t\tif (bufferData != null) {\n\t\t\t\n\t\t\tvar buffer = new ImageBuffer (bufferData.data, bufferData.width, bufferData.height, bufferData.bpp, bufferData.format);\n\t\t\tbuffer.transparent = bufferData.transparent;\n\t\t\treturn new Image (buffer);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function decodeFile (path:String, decodeData:Bool = true):Image {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t#if !cs\n\t\treturn NativeCFFI.lime_jpeg_decode_file (path, decodeData, new ImageBuffer (new UInt8Array (Bytes.alloc (0))));\n\t\t#else\n\t\tvar bufferData:Dynamic = NativeCFFI.lime_jpeg_decode_file (path, decodeData, null);\n\t\t\n\t\tif (bufferData != null) {\n\t\t\t\n\t\t\tvar buffer = new ImageBuffer (bufferData.data, bufferData.width, bufferData.height, bufferData.bpp, bufferData.format);\n\t\t\tbuffer.transparent = bufferData.transparent;\n\t\t\treturn new Image (buffer);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function encode (image:Image, quality:Int):Bytes {\n\t\t\n\t\tif (image.premultiplied || image.format != RGBA32) {\n\t\t\t\n\t\t\t// TODO: Handle encode from different formats\n\t\t\t\n\t\t\timage = image.clone ();\n\t\t\timage.premultiplied = false;\n\t\t\timage.format = RGBA32;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if java\n\t\t\n\t\t#elseif (sys && (!disable_cffi || !format) && !macro)\n\t\t\t\n\t\t\t#if !cs\n\t\t\treturn NativeCFFI.lime_image_encode (image.buffer, 1, quality, Bytes.alloc (0));\n\t\t\t#else\n\t\t\tvar data:Dynamic = NativeCFFI.lime_image_encode (image.buffer, 1, quality, null);\n\t\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t\t#end\n\t\t\t\n\t\t#elseif (js && html5)\n\t\t\n\t\tImageCanvasUtil.sync (image, false);\n\t\t\n\t\tif (image.buffer.__srcCanvas != null) {\n\t\t\t\n\t\t\tvar data = image.buffer.__srcCanvas.toDataURL (\"image/jpeg\", quality / 100);\n\t\t\tvar buffer = Browser.window.atob (data.split (\";base64,\")[1]);\n\t\t\tvar bytes = Bytes.alloc (buffer.length);\n\t\t\t\n\t\t\tfor (i in 0...buffer.length) {\n\t\t\t\t\n\t\t\t\tbytes.set (i, buffer.charCodeAt (i));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn bytes;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.format;\n\n\nimport haxe.io.Bytes;\nimport lime._backend.native.NativeCFFI;\nimport lime.graphics.utils.ImageCanvasUtil;\nimport lime.graphics.Image;\nimport lime.system.CFFI;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n#if format\nimport format.png.Data;\nimport format.png.Writer;\nimport format.tools.Deflate;\nimport haxe.io.Bytes;\nimport haxe.io.BytesOutput;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n@:access(lime.graphics.ImageBuffer)\n\n\nclass PNG {\n\t\n\t\n\tpublic static function decodeBytes (bytes:Bytes, decodeData:Bool = true):Image {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t#if !cs\n\t\treturn NativeCFFI.lime_png_decode_bytes (bytes, decodeData, new ImageBuffer (new UInt8Array (Bytes.alloc (0))));\n\t\t#else\n\t\tvar bufferData:Dynamic = NativeCFFI.lime_png_decode_bytes (bytes, decodeData, null);\n\t\t\n\t\tif (bufferData != null) {\n\t\t\t\n\t\t\tvar buffer = new ImageBuffer (bufferData.data, bufferData.width, bufferData.height, bufferData.bpp, bufferData.format);\n\t\t\tbuffer.transparent = bufferData.transparent;\n\t\t\treturn new Image (buffer);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function decodeFile (path:String, decodeData:Bool = true):Image {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t#if !cs\n\t\treturn NativeCFFI.lime_png_decode_file (path, decodeData, new ImageBuffer (new UInt8Array (Bytes.alloc (0))));\n\t\t#else\n\t\tvar bufferData:Dynamic = NativeCFFI.lime_png_decode_file (path, decodeData, null);\n\t\t\n\t\tif (bufferData != null) {\n\t\t\t\n\t\t\tvar buffer = new ImageBuffer (bufferData.data, bufferData.width, bufferData.height, bufferData.bpp, bufferData.format);\n\t\t\tbuffer.transparent = bufferData.transparent;\n\t\t\treturn new Image (buffer);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function encode (image:Image):Bytes {\n\t\t\n\t\tif (image.premultiplied || image.format != RGBA32) {\n\t\t\t\n\t\t\t// TODO: Handle encode from different formats\n\t\t\t\n\t\t\timage = image.clone ();\n\t\t\timage.premultiplied = false;\n\t\t\timage.format = RGBA32;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if java\n\t\t\n\t\t#elseif (sys && (!disable_cffi || !format) && !macro)\n\t\t\n\t\tif (CFFI.enabled) {\n\t\t\t\n\t\t\t#if !cs\n\t\t\treturn NativeCFFI.lime_image_encode (image.buffer, 0, 0, Bytes.alloc (0));\n\t\t\t#else\n\t\t\tvar data:Dynamic = NativeCFFI.lime_image_encode (image.buffer, 0, 0, null);\n\t\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t#if (!html5 && format)\n\t\t\n\t\telse {\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tvar bytes = Bytes.alloc (image.width * image.height * 4 + image.height);\n\t\t\t\tvar sourceBytes = image.buffer.data.toBytes ();\n\t\t\t\t\n\t\t\t\tvar sourceIndex:Int, index:Int;\n\t\t\t\t\n\t\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\t\n\t\t\t\t\tsourceIndex = y * image.width * 4;\n\t\t\t\t\tindex = y * image.width * 4 + y;\n\t\t\t\t\t\n\t\t\t\t\tbytes.set (index, 0);\n\t\t\t\t\tbytes.blit (index + 1, sourceBytes, sourceIndex, image.width * 4);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar data = new List ();\n\t\t\t\tdata.add (CHeader ({ width: image.width, height: image.height, colbits: 8, color: ColTrue (true), interlaced: false }));\n\t\t\t\tdata.add (CData (Deflate.run (bytes)));\n\t\t\t\tdata.add (CEnd);\n\t\t\t\t\n\t\t\t\tvar output = new BytesOutput ();\n\t\t\t\tvar png = new Writer (output);\n\t\t\t\tpng.write (data);\n\t\t\t\t\n\t\t\t\treturn output.getBytes ();\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) { }\n\t\t\t\n\t\t}\n\t\t\n\t\t#elseif (js && html5)\n\t\t\n\t\tImageCanvasUtil.sync (image, false);\n\t\t\n\t\tif (image.buffer.__srcCanvas != null) {\n\t\t\t\n\t\t\tvar data = image.buffer.__srcCanvas.toDataURL (\"image/png\");\n\t\t\tvar buffer = Browser.window.atob (data.split (\";base64,\")[1]);\n\t\t\tvar bytes = Bytes.alloc (buffer.length);\n\t\t\t\n\t\t\tfor (i in 0...buffer.length) {\n\t\t\t\t\n\t\t\t\tbytes.set (i, buffer.charCodeAt (i));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn bytes;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.opengl;\n\n\nimport haxe.io.Bytes;\nimport haxe.Int64;\nimport lime.utils.ArrayBufferView;\nimport lime.utils.ArrayBuffer;\nimport lime.utils.BytePointer;\nimport lime.utils.DataPointer;\nimport lime.utils.Float32Array;\nimport lime.utils.Int32Array;\n\n#if (lime_cffi && lime_opengl && !macro)\nimport lime._backend.native.NativeCFFI;\n#end\n\n@:allow(lime.ui.Window)\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass GL {\n\t\n\t\n\tpublic static inline var DEPTH_BUFFER_BIT = 0x00000100;\n\tpublic static inline var STENCIL_BUFFER_BIT = 0x00000400;\n\tpublic static inline var COLOR_BUFFER_BIT = 0x00004000;\n\t\n\tpublic static inline var POINTS = 0x0000;\n\tpublic static inline var LINES = 0x0001;\n\tpublic static inline var LINE_LOOP = 0x0002;\n\tpublic static inline var LINE_STRIP = 0x0003;\n\tpublic static inline var TRIANGLES = 0x0004;\n\tpublic static inline var TRIANGLE_STRIP = 0x0005;\n\tpublic static inline var TRIANGLE_FAN = 0x0006;\n\t\n\tpublic static inline var ZERO = 0;\n\tpublic static inline var ONE = 1;\n\tpublic static inline var SRC_COLOR = 0x0300;\n\tpublic static inline var ONE_MINUS_SRC_COLOR = 0x0301;\n\tpublic static inline var SRC_ALPHA = 0x0302;\n\tpublic static inline var ONE_MINUS_SRC_ALPHA = 0x0303;\n\tpublic static inline var DST_ALPHA = 0x0304;\n\tpublic static inline var ONE_MINUS_DST_ALPHA = 0x0305;\n\t\n\tpublic static inline var DST_COLOR = 0x0306;\n\tpublic static inline var ONE_MINUS_DST_COLOR = 0x0307;\n\tpublic static inline var SRC_ALPHA_SATURATE = 0x0308;\n\t\n\tpublic static inline var FUNC_ADD = 0x8006;\n\tpublic static inline var BLEND_EQUATION = 0x8009;\n\tpublic static inline var BLEND_EQUATION_RGB = 0x8009;\n\tpublic static inline var BLEND_EQUATION_ALPHA = 0x883D;\n\t\n\tpublic static inline var FUNC_SUBTRACT = 0x800A;\n\tpublic static inline var FUNC_REVERSE_SUBTRACT = 0x800B;\n\t\n\tpublic static inline var BLEND_DST_RGB = 0x80C8;\n\tpublic static inline var BLEND_SRC_RGB = 0x80C9;\n\tpublic static inline var BLEND_DST_ALPHA = 0x80CA;\n\tpublic static inline var BLEND_SRC_ALPHA = 0x80CB;\n\tpublic static inline var CONSTANT_COLOR = 0x8001;\n\tpublic static inline var ONE_MINUS_CONSTANT_COLOR = 0x8002;\n\tpublic static inline var CONSTANT_ALPHA = 0x8003;\n\tpublic static inline var ONE_MINUS_CONSTANT_ALPHA = 0x8004;\n\tpublic static inline var BLEND_COLOR = 0x8005;\n\t\n\tpublic static inline var ARRAY_BUFFER = 0x8892;\n\tpublic static inline var ELEMENT_ARRAY_BUFFER = 0x8893;\n\tpublic static inline var ARRAY_BUFFER_BINDING = 0x8894;\n\tpublic static inline var ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;\n\t\n\tpublic static inline var STREAM_DRAW = 0x88E0;\n\tpublic static inline var STATIC_DRAW = 0x88E4;\n\tpublic static inline var DYNAMIC_DRAW = 0x88E8;\n\t\n\tpublic static inline var BUFFER_SIZE = 0x8764;\n\tpublic static inline var BUFFER_USAGE = 0x8765;\n\t\n\tpublic static inline var CURRENT_VERTEX_ATTRIB = 0x8626;\n\t\n\tpublic static inline var FRONT = 0x0404;\n\tpublic static inline var BACK = 0x0405;\n\tpublic static inline var FRONT_AND_BACK = 0x0408;\n\t\n\tpublic static inline var CULL_FACE = 0x0B44;\n\tpublic static inline var BLEND = 0x0BE2;\n\tpublic static inline var DITHER = 0x0BD0;\n\tpublic static inline var STENCIL_TEST = 0x0B90;\n\tpublic static inline var DEPTH_TEST = 0x0B71;\n\tpublic static inline var SCISSOR_TEST = 0x0C11;\n\tpublic static inline var POLYGON_OFFSET_FILL = 0x8037;\n\tpublic static inline var SAMPLE_ALPHA_TO_COVERAGE = 0x809E;\n\tpublic static inline var SAMPLE_COVERAGE = 0x80A0;\n\t\n\tpublic static inline var NO_ERROR = 0;\n\tpublic static inline var INVALID_ENUM = 0x0500;\n\tpublic static inline var INVALID_VALUE = 0x0501;\n\tpublic static inline var INVALID_OPERATION = 0x0502;\n\tpublic static inline var OUT_OF_MEMORY = 0x0505;\n\t\n\tpublic static inline var CW  = 0x0900;\n\tpublic static inline var CCW = 0x0901;\n\t\n\tpublic static inline var LINE_WIDTH = 0x0B21;\n\tpublic static inline var ALIASED_POINT_SIZE_RANGE = 0x846D;\n\tpublic static inline var ALIASED_LINE_WIDTH_RANGE = 0x846E;\n\tpublic static inline var CULL_FACE_MODE = 0x0B45;\n\tpublic static inline var FRONT_FACE = 0x0B46;\n\tpublic static inline var DEPTH_RANGE = 0x0B70;\n\tpublic static inline var DEPTH_WRITEMASK = 0x0B72;\n\tpublic static inline var DEPTH_CLEAR_VALUE = 0x0B73;\n\tpublic static inline var DEPTH_FUNC = 0x0B74;\n\tpublic static inline var STENCIL_CLEAR_VALUE = 0x0B91;\n\tpublic static inline var STENCIL_FUNC = 0x0B92;\n\tpublic static inline var STENCIL_FAIL = 0x0B94;\n\tpublic static inline var STENCIL_PASS_DEPTH_FAIL = 0x0B95;\n\tpublic static inline var STENCIL_PASS_DEPTH_PASS = 0x0B96;\n\tpublic static inline var STENCIL_REF = 0x0B97;\n\tpublic static inline var STENCIL_VALUE_MASK = 0x0B93;\n\tpublic static inline var STENCIL_WRITEMASK = 0x0B98;\n\tpublic static inline var STENCIL_BACK_FUNC = 0x8800;\n\tpublic static inline var STENCIL_BACK_FAIL = 0x8801;\n\tpublic static inline var STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;\n\tpublic static inline var STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;\n\tpublic static inline var STENCIL_BACK_REF = 0x8CA3;\n\tpublic static inline var STENCIL_BACK_VALUE_MASK = 0x8CA4;\n\tpublic static inline var STENCIL_BACK_WRITEMASK = 0x8CA5;\n\tpublic static inline var VIEWPORT = 0x0BA2;\n\tpublic static inline var SCISSOR_BOX = 0x0C10;\n\t\n\tpublic static inline var COLOR_CLEAR_VALUE = 0x0C22;\n\tpublic static inline var COLOR_WRITEMASK = 0x0C23;\n\tpublic static inline var UNPACK_ALIGNMENT = 0x0CF5;\n\tpublic static inline var PACK_ALIGNMENT = 0x0D05;\n\tpublic static inline var MAX_TEXTURE_SIZE = 0x0D33;\n\tpublic static inline var MAX_VIEWPORT_DIMS = 0x0D3A;\n\tpublic static inline var SUBPIXEL_BITS = 0x0D50;\n\tpublic static inline var RED_BITS = 0x0D52;\n\tpublic static inline var GREEN_BITS = 0x0D53;\n\tpublic static inline var BLUE_BITS = 0x0D54;\n\tpublic static inline var ALPHA_BITS = 0x0D55;\n\tpublic static inline var DEPTH_BITS = 0x0D56;\n\tpublic static inline var STENCIL_BITS = 0x0D57;\n\tpublic static inline var POLYGON_OFFSET_UNITS = 0x2A00;\n\t\n\tpublic static inline var POLYGON_OFFSET_FACTOR = 0x8038;\n\tpublic static inline var TEXTURE_BINDING_2D = 0x8069;\n\tpublic static inline var SAMPLE_BUFFERS = 0x80A8;\n\tpublic static inline var SAMPLES = 0x80A9;\n\tpublic static inline var SAMPLE_COVERAGE_VALUE = 0x80AA;\n\tpublic static inline var SAMPLE_COVERAGE_INVERT = 0x80AB;\n\t\n\tpublic static inline var NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2;\n\tpublic static inline var COMPRESSED_TEXTURE_FORMATS = 0x86A3;\n\t\n\tpublic static inline var DONT_CARE = 0x1100;\n\tpublic static inline var FASTEST = 0x1101;\n\tpublic static inline var NICEST = 0x1102;\n\t\n\tpublic static inline var GENERATE_MIPMAP_HINT = 0x8192;\n\t\n\tpublic static inline var BYTE = 0x1400;\n\tpublic static inline var UNSIGNED_BYTE = 0x1401;\n\tpublic static inline var SHORT = 0x1402;\n\tpublic static inline var UNSIGNED_SHORT = 0x1403;\n\tpublic static inline var INT = 0x1404;\n\tpublic static inline var UNSIGNED_INT = 0x1405;\n\tpublic static inline var FLOAT = 0x1406;\n\t\n\tpublic static inline var DEPTH_COMPONENT = 0x1902;\n\tpublic static inline var ALPHA = 0x1906;\n\tpublic static inline var RGB = 0x1907;\n\tpublic static inline var RGBA = 0x1908;\n\tpublic static inline var LUMINANCE = 0x1909;\n\tpublic static inline var LUMINANCE_ALPHA = 0x190A;\n\t\n\tpublic static inline var UNSIGNED_SHORT_4_4_4_4 = 0x8033;\n\tpublic static inline var UNSIGNED_SHORT_5_5_5_1 = 0x8034;\n\tpublic static inline var UNSIGNED_SHORT_5_6_5 = 0x8363;\n\t\n\tpublic static inline var FRAGMENT_SHADER = 0x8B30;\n\tpublic static inline var VERTEX_SHADER = 0x8B31;\n\tpublic static inline var MAX_VERTEX_ATTRIBS = 0x8869;\n\tpublic static inline var MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;\n\tpublic static inline var MAX_VARYING_VECTORS = 0x8DFC;\n\tpublic static inline var MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\n\tpublic static inline var MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;\n\tpublic static inline var MAX_TEXTURE_IMAGE_UNITS = 0x8872;\n\tpublic static inline var MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;\n\tpublic static inline var SHADER_TYPE = 0x8B4F;\n\tpublic static inline var DELETE_STATUS = 0x8B80;\n\tpublic static inline var LINK_STATUS = 0x8B82;\n\tpublic static inline var VALIDATE_STATUS = 0x8B83;\n\tpublic static inline var ATTACHED_SHADERS = 0x8B85;\n\tpublic static inline var ACTIVE_UNIFORMS = 0x8B86;\n\tpublic static inline var ACTIVE_ATTRIBUTES = 0x8B89;\n\tpublic static inline var SHADING_LANGUAGE_VERSION = 0x8B8C;\n\tpublic static inline var CURRENT_PROGRAM = 0x8B8D;\n\t\n\tpublic static inline var NEVER = 0x0200;\n\tpublic static inline var LESS = 0x0201;\n\tpublic static inline var EQUAL = 0x0202;\n\tpublic static inline var LEQUAL = 0x0203;\n\tpublic static inline var GREATER = 0x0204;\n\tpublic static inline var NOTEQUAL = 0x0205;\n\tpublic static inline var GEQUAL = 0x0206;\n\tpublic static inline var ALWAYS = 0x0207;\n\t\n\tpublic static inline var KEEP = 0x1E00;\n\tpublic static inline var REPLACE = 0x1E01;\n\tpublic static inline var INCR = 0x1E02;\n\tpublic static inline var DECR = 0x1E03;\n\tpublic static inline var INVERT = 0x150A;\n\tpublic static inline var INCR_WRAP = 0x8507;\n\tpublic static inline var DECR_WRAP = 0x8508;\n\t\n\tpublic static inline var VENDOR = 0x1F00;\n\tpublic static inline var RENDERER = 0x1F01;\n\tpublic static inline var VERSION = 0x1F02;\n\tpublic static inline var EXTENSIONS = 0x1F03;\n\t\n\tpublic static inline var NEAREST = 0x2600;\n\tpublic static inline var LINEAR = 0x2601;\n\t\n\tpublic static inline var NEAREST_MIPMAP_NEAREST = 0x2700;\n\tpublic static inline var LINEAR_MIPMAP_NEAREST = 0x2701;\n\tpublic static inline var NEAREST_MIPMAP_LINEAR = 0x2702;\n\tpublic static inline var LINEAR_MIPMAP_LINEAR = 0x2703;\n\t\n\tpublic static inline var TEXTURE_MAG_FILTER = 0x2800;\n\tpublic static inline var TEXTURE_MIN_FILTER = 0x2801;\n\tpublic static inline var TEXTURE_WRAP_S = 0x2802;\n\tpublic static inline var TEXTURE_WRAP_T = 0x2803;\n\t\n\tpublic static inline var TEXTURE_2D = 0x0DE1;\n\tpublic static inline var TEXTURE = 0x1702;\n\t\n\tpublic static inline var TEXTURE_CUBE_MAP = 0x8513;\n\tpublic static inline var TEXTURE_BINDING_CUBE_MAP = 0x8514;\n\tpublic static inline var TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\n\tpublic static inline var TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\n\tpublic static inline var TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\n\tpublic static inline var TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\n\tpublic static inline var TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\n\tpublic static inline var TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;\n\tpublic static inline var MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;\n\t\n\tpublic static inline var TEXTURE0 = 0x84C0;\n\tpublic static inline var TEXTURE1 = 0x84C1;\n\tpublic static inline var TEXTURE2 = 0x84C2;\n\tpublic static inline var TEXTURE3 = 0x84C3;\n\tpublic static inline var TEXTURE4 = 0x84C4;\n\tpublic static inline var TEXTURE5 = 0x84C5;\n\tpublic static inline var TEXTURE6 = 0x84C6;\n\tpublic static inline var TEXTURE7 = 0x84C7;\n\tpublic static inline var TEXTURE8 = 0x84C8;\n\tpublic static inline var TEXTURE9 = 0x84C9;\n\tpublic static inline var TEXTURE10 = 0x84CA;\n\tpublic static inline var TEXTURE11 = 0x84CB;\n\tpublic static inline var TEXTURE12 = 0x84CC;\n\tpublic static inline var TEXTURE13 = 0x84CD;\n\tpublic static inline var TEXTURE14 = 0x84CE;\n\tpublic static inline var TEXTURE15 = 0x84CF;\n\tpublic static inline var TEXTURE16 = 0x84D0;\n\tpublic static inline var TEXTURE17 = 0x84D1;\n\tpublic static inline var TEXTURE18 = 0x84D2;\n\tpublic static inline var TEXTURE19 = 0x84D3;\n\tpublic static inline var TEXTURE20 = 0x84D4;\n\tpublic static inline var TEXTURE21 = 0x84D5;\n\tpublic static inline var TEXTURE22 = 0x84D6;\n\tpublic static inline var TEXTURE23 = 0x84D7;\n\tpublic static inline var TEXTURE24 = 0x84D8;\n\tpublic static inline var TEXTURE25 = 0x84D9;\n\tpublic static inline var TEXTURE26 = 0x84DA;\n\tpublic static inline var TEXTURE27 = 0x84DB;\n\tpublic static inline var TEXTURE28 = 0x84DC;\n\tpublic static inline var TEXTURE29 = 0x84DD;\n\tpublic static inline var TEXTURE30 = 0x84DE;\n\tpublic static inline var TEXTURE31 = 0x84DF;\n\tpublic static inline var ACTIVE_TEXTURE = 0x84E0;\n\t\n\tpublic static inline var REPEAT = 0x2901;\n\tpublic static inline var CLAMP_TO_EDGE = 0x812F;\n\tpublic static inline var MIRRORED_REPEAT = 0x8370;\n\t\n\tpublic static inline var FLOAT_VEC2 = 0x8B50;\n\tpublic static inline var FLOAT_VEC3 = 0x8B51;\n\tpublic static inline var FLOAT_VEC4 = 0x8B52;\n\tpublic static inline var INT_VEC2 = 0x8B53;\n\tpublic static inline var INT_VEC3 = 0x8B54;\n\tpublic static inline var INT_VEC4 = 0x8B55;\n\tpublic static inline var BOOL = 0x8B56;\n\tpublic static inline var BOOL_VEC2 = 0x8B57;\n\tpublic static inline var BOOL_VEC3 = 0x8B58;\n\tpublic static inline var BOOL_VEC4 = 0x8B59;\n\tpublic static inline var FLOAT_MAT2 = 0x8B5A;\n\tpublic static inline var FLOAT_MAT3 = 0x8B5B;\n\tpublic static inline var FLOAT_MAT4 = 0x8B5C;\n\tpublic static inline var SAMPLER_2D = 0x8B5E;\n\tpublic static inline var SAMPLER_CUBE = 0x8B60;\n\t\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\n\t\n\tpublic static inline var IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A;\n\tpublic static inline var IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B;\n\t\n\tpublic static inline var VERTEX_PROGRAM_POINT_SIZE = 0x8642;\n\tpublic static inline var POINT_SPRITE = 0x8861;\n\t\n\tpublic static inline var COMPILE_STATUS = 0x8B81;\n\t\n\tpublic static inline var LOW_FLOAT = 0x8DF0;\n\tpublic static inline var MEDIUM_FLOAT = 0x8DF1;\n\tpublic static inline var HIGH_FLOAT = 0x8DF2;\n\tpublic static inline var LOW_INT = 0x8DF3;\n\tpublic static inline var MEDIUM_INT = 0x8DF4;\n\tpublic static inline var HIGH_INT = 0x8DF5;\n\t\n\tpublic static inline var FRAMEBUFFER = 0x8D40;\n\tpublic static inline var RENDERBUFFER = 0x8D41;\n\t\n\tpublic static inline var RGBA4 = 0x8056;\n\tpublic static inline var RGB5_A1 = 0x8057;\n\tpublic static inline var RGB565 = 0x8D62;\n\tpublic static inline var DEPTH_COMPONENT16 = 0x81A5;\n\tpublic static inline var STENCIL_INDEX = 0x1901;\n\tpublic static inline var STENCIL_INDEX8 = 0x8D48;\n\tpublic static inline var DEPTH_STENCIL = 0x84F9;\n\t\n\tpublic static inline var RENDERBUFFER_WIDTH = 0x8D42;\n\tpublic static inline var RENDERBUFFER_HEIGHT = 0x8D43;\n\tpublic static inline var RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;\n\tpublic static inline var RENDERBUFFER_RED_SIZE = 0x8D50;\n\tpublic static inline var RENDERBUFFER_GREEN_SIZE = 0x8D51;\n\tpublic static inline var RENDERBUFFER_BLUE_SIZE = 0x8D52;\n\tpublic static inline var RENDERBUFFER_ALPHA_SIZE = 0x8D53;\n\tpublic static inline var RENDERBUFFER_DEPTH_SIZE = 0x8D54;\n\tpublic static inline var RENDERBUFFER_STENCIL_SIZE = 0x8D55;\n\t\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\n\t\n\tpublic static inline var COLOR_ATTACHMENT0 = 0x8CE0;\n\tpublic static inline var DEPTH_ATTACHMENT = 0x8D00;\n\tpublic static inline var STENCIL_ATTACHMENT = 0x8D20;\n\tpublic static inline var DEPTH_STENCIL_ATTACHMENT = 0x821A;\n\t\n\tpublic static inline var NONE = 0;\n\t\n\tpublic static inline var FRAMEBUFFER_COMPLETE = 0x8CD5;\n\tpublic static inline var FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;\n\tpublic static inline var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\n\tpublic static inline var FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;\n\tpublic static inline var FRAMEBUFFER_UNSUPPORTED = 0x8CDD;\n\t\n\tpublic static inline var FRAMEBUFFER_BINDING = 0x8CA6;\n\tpublic static inline var RENDERBUFFER_BINDING = 0x8CA7;\n\tpublic static inline var MAX_RENDERBUFFER_SIZE = 0x84E8;\n\t\n\tpublic static inline var INVALID_FRAMEBUFFER_OPERATION = 0x0506;\n\t\n\tpublic static inline var UNPACK_FLIP_Y_WEBGL = 0x9240;\n\tpublic static inline var UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\n\tpublic static inline var CONTEXT_LOST_WEBGL = 0x9242;\n\tpublic static inline var UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\n\tpublic static inline var BROWSER_DEFAULT_WEBGL = 0x9244;\n\t\n\tpublic static inline var READ_BUFFER = 0x0C02;\n\tpublic static inline var UNPACK_ROW_LENGTH = 0x0CF2;\n\tpublic static inline var UNPACK_SKIP_ROWS = 0x0CF3;\n\tpublic static inline var UNPACK_SKIP_PIXELS = 0x0CF4;\n\tpublic static inline var PACK_ROW_LENGTH = 0x0D02;\n\tpublic static inline var PACK_SKIP_ROWS = 0x0D03;\n\tpublic static inline var PACK_SKIP_PIXELS = 0x0D04;\n\tpublic static inline var TEXTURE_BINDING_3D = 0x806A;\n\tpublic static inline var UNPACK_SKIP_IMAGES = 0x806D;\n\tpublic static inline var UNPACK_IMAGE_HEIGHT = 0x806E;\n\tpublic static inline var MAX_3D_TEXTURE_SIZE = 0x8073;\n\tpublic static inline var MAX_ELEMENTS_VERTICES = 0x80E8;\n\tpublic static inline var MAX_ELEMENTS_INDICES = 0x80E9;\n\tpublic static inline var MAX_TEXTURE_LOD_BIAS = 0x84FD;\n\tpublic static inline var MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;\n\tpublic static inline var MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;\n\tpublic static inline var MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;\n\tpublic static inline var MIN_PROGRAM_TEXEL_OFFSET = 0x8904;\n\tpublic static inline var MAX_PROGRAM_TEXEL_OFFSET = 0x8905;\n\tpublic static inline var MAX_VARYING_COMPONENTS = 0x8B4B;\n\tpublic static inline var FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;\n\tpublic static inline var RASTERIZER_DISCARD = 0x8C89;\n\tpublic static inline var VERTEX_ARRAY_BINDING = 0x85B5;\n\tpublic static inline var MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;\n\tpublic static inline var MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;\n\tpublic static inline var MAX_SERVER_WAIT_TIMEOUT = 0x9111;\n\tpublic static inline var MAX_ELEMENT_INDEX = 0x8D6B;\n\t\n\tpublic static inline var RED = 0x1903;\n\tpublic static inline var RGB8 = 0x8051;\n\tpublic static inline var RGBA8 = 0x8058;\n\tpublic static inline var RGB10_A2 = 0x8059;\n\tpublic static inline var TEXTURE_3D = 0x806F;\n\tpublic static inline var TEXTURE_WRAP_R = 0x8072;\n\tpublic static inline var TEXTURE_MIN_LOD = 0x813A;\n\tpublic static inline var TEXTURE_MAX_LOD = 0x813B;\n\tpublic static inline var TEXTURE_BASE_LEVEL = 0x813C;\n\tpublic static inline var TEXTURE_MAX_LEVEL = 0x813D;\n\tpublic static inline var TEXTURE_COMPARE_MODE = 0x884C;\n\tpublic static inline var TEXTURE_COMPARE_FUNC = 0x884D;\n\tpublic static inline var SRGB = 0x8C40;\n\tpublic static inline var SRGB8 = 0x8C41;\n\tpublic static inline var SRGB8_ALPHA8 = 0x8C43;\n\tpublic static inline var COMPARE_REF_TO_TEXTURE = 0x884E;\n\tpublic static inline var RGBA32F = 0x8814;\n\tpublic static inline var RGB32F = 0x8815;\n\tpublic static inline var RGBA16F = 0x881A;\n\tpublic static inline var RGB16F = 0x881B;\n\tpublic static inline var TEXTURE_2D_ARRAY = 0x8C1A;\n\tpublic static inline var TEXTURE_BINDING_2D_ARRAY = 0x8C1D;\n\tpublic static inline var R11F_G11F_B10F = 0x8C3A;\n\tpublic static inline var RGB9_E5 = 0x8C3D;\n\tpublic static inline var RGBA32UI = 0x8D70;\n\tpublic static inline var RGB32UI = 0x8D71;\n\tpublic static inline var RGBA16UI = 0x8D76;\n\tpublic static inline var RGB16UI = 0x8D77;\n\tpublic static inline var RGBA8UI = 0x8D7C;\n\tpublic static inline var RGB8UI = 0x8D7D;\n\tpublic static inline var RGBA32I = 0x8D82;\n\tpublic static inline var RGB32I = 0x8D83;\n\tpublic static inline var RGBA16I = 0x8D88;\n\tpublic static inline var RGB16I = 0x8D89;\n\tpublic static inline var RGBA8I = 0x8D8E;\n\tpublic static inline var RGB8I = 0x8D8F;\n\tpublic static inline var RED_INTEGER = 0x8D94;\n\tpublic static inline var RGB_INTEGER = 0x8D98;\n\tpublic static inline var RGBA_INTEGER = 0x8D99;\n\tpublic static inline var R8 = 0x8229;\n\tpublic static inline var RG8 = 0x822B;\n\tpublic static inline var R16F = 0x822D;\n\tpublic static inline var R32F = 0x822E;\n\tpublic static inline var RG16F = 0x822F;\n\tpublic static inline var RG32F = 0x8230;\n\tpublic static inline var R8I = 0x8231;\n\tpublic static inline var R8UI = 0x8232;\n\tpublic static inline var R16I = 0x8233;\n\tpublic static inline var R16UI = 0x8234;\n\tpublic static inline var R32I = 0x8235;\n\tpublic static inline var R32UI = 0x8236;\n\tpublic static inline var RG8I = 0x8237;\n\tpublic static inline var RG8UI = 0x8238;\n\tpublic static inline var RG16I = 0x8239;\n\tpublic static inline var RG16UI = 0x823A;\n\tpublic static inline var RG32I = 0x823B;\n\tpublic static inline var RG32UI = 0x823C;\n\tpublic static inline var R8_SNORM = 0x8F94;\n\tpublic static inline var RG8_SNORM = 0x8F95;\n\tpublic static inline var RGB8_SNORM = 0x8F96;\n\tpublic static inline var RGBA8_SNORM = 0x8F97;\n\tpublic static inline var RGB10_A2UI = 0x906F;\n\tpublic static inline var TEXTURE_IMMUTABLE_FORMAT = 0x912F;\n\tpublic static inline var TEXTURE_IMMUTABLE_LEVELS = 0x82DF;\n\t\n\tpublic static inline var UNSIGNED_INT_2_10_10_10_REV = 0x8368;\n\tpublic static inline var UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\n\tpublic static inline var UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\n\tpublic static inline var FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\n\tpublic static inline var UNSIGNED_INT_24_8 = 0x84FA;\n\tpublic static inline var HALF_FLOAT = 0x140B;\n\tpublic static inline var RG = 0x8227;\n\tpublic static inline var RG_INTEGER = 0x8228;\n\tpublic static inline var INT_2_10_10_10_REV = 0x8D9F;\n\t\n\tpublic static inline var CURRENT_QUERY = 0x8865;\n\tpublic static inline var QUERY_RESULT = 0x8866;\n\tpublic static inline var QUERY_RESULT_AVAILABLE = 0x8867;\n\tpublic static inline var ANY_SAMPLES_PASSED = 0x8C2F;\n\tpublic static inline var ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A;\n\t\n\tpublic static inline var MAX_DRAW_BUFFERS = 0x8824;\n\tpublic static inline var DRAW_BUFFER0 = 0x8825;\n\tpublic static inline var DRAW_BUFFER1 = 0x8826;\n\tpublic static inline var DRAW_BUFFER2 = 0x8827;\n\tpublic static inline var DRAW_BUFFER3 = 0x8828;\n\tpublic static inline var DRAW_BUFFER4 = 0x8829;\n\tpublic static inline var DRAW_BUFFER5 = 0x882A;\n\tpublic static inline var DRAW_BUFFER6 = 0x882B;\n\tpublic static inline var DRAW_BUFFER7 = 0x882C;\n\tpublic static inline var DRAW_BUFFER8 = 0x882D;\n\tpublic static inline var DRAW_BUFFER9 = 0x882E;\n\tpublic static inline var DRAW_BUFFER10 = 0x882F;\n\tpublic static inline var DRAW_BUFFER11 = 0x8830;\n\tpublic static inline var DRAW_BUFFER12 = 0x8831;\n\tpublic static inline var DRAW_BUFFER13 = 0x8832;\n\tpublic static inline var DRAW_BUFFER14 = 0x8833;\n\tpublic static inline var DRAW_BUFFER15 = 0x8834;\n\tpublic static inline var MAX_COLOR_ATTACHMENTS = 0x8CDF;\n\tpublic static inline var COLOR_ATTACHMENT1 = 0x8CE1;\n\tpublic static inline var COLOR_ATTACHMENT2 = 0x8CE2;\n\tpublic static inline var COLOR_ATTACHMENT3 = 0x8CE3;\n\tpublic static inline var COLOR_ATTACHMENT4 = 0x8CE4;\n\tpublic static inline var COLOR_ATTACHMENT5 = 0x8CE5;\n\tpublic static inline var COLOR_ATTACHMENT6 = 0x8CE6;\n\tpublic static inline var COLOR_ATTACHMENT7 = 0x8CE7;\n\tpublic static inline var COLOR_ATTACHMENT8 = 0x8CE8;\n\tpublic static inline var COLOR_ATTACHMENT9 = 0x8CE9;\n\tpublic static inline var COLOR_ATTACHMENT10 = 0x8CEA;\n\tpublic static inline var COLOR_ATTACHMENT11 = 0x8CEB;\n\tpublic static inline var COLOR_ATTACHMENT12 = 0x8CEC;\n\tpublic static inline var COLOR_ATTACHMENT13 = 0x8CED;\n\tpublic static inline var COLOR_ATTACHMENT14 = 0x8CEE;\n\tpublic static inline var COLOR_ATTACHMENT15 = 0x8CEF;\n\t\n\tpublic static inline var SAMPLER_3D = 0x8B5F;\n\tpublic static inline var SAMPLER_2D_SHADOW = 0x8B62;\n\tpublic static inline var SAMPLER_2D_ARRAY = 0x8DC1;\n\tpublic static inline var SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\n\tpublic static inline var SAMPLER_CUBE_SHADOW = 0x8DC5;\n\tpublic static inline var INT_SAMPLER_2D = 0x8DCA;\n\tpublic static inline var INT_SAMPLER_3D = 0x8DCB;\n\tpublic static inline var INT_SAMPLER_CUBE = 0x8DCC;\n\tpublic static inline var INT_SAMPLER_2D_ARRAY = 0x8DCF;\n\tpublic static inline var UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\n\tpublic static inline var UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\n\tpublic static inline var UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\n\tpublic static inline var UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\tpublic static inline var MAX_SAMPLES = 0x8D57;\n\tpublic static inline var SAMPLER_BINDING = 0x8919;\n\t\n\tpublic static inline var PIXEL_PACK_BUFFER = 0x88EB;\n\tpublic static inline var PIXEL_UNPACK_BUFFER = 0x88EC;\n\tpublic static inline var PIXEL_PACK_BUFFER_BINDING = 0x88ED;\n\tpublic static inline var PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;\n\tpublic static inline var COPY_READ_BUFFER = 0x8F36;\n\tpublic static inline var COPY_WRITE_BUFFER = 0x8F37;\n\tpublic static inline var COPY_READ_BUFFER_BINDING = 0x8F36;\n\tpublic static inline var COPY_WRITE_BUFFER_BINDING = 0x8F37;\n\t\n\tpublic static inline var FLOAT_MAT2x3 = 0x8B65;\n\tpublic static inline var FLOAT_MAT2x4 = 0x8B66;\n\tpublic static inline var FLOAT_MAT3x2 = 0x8B67;\n\tpublic static inline var FLOAT_MAT3x4 = 0x8B68;\n\tpublic static inline var FLOAT_MAT4x2 = 0x8B69;\n\tpublic static inline var FLOAT_MAT4x3 = 0x8B6A;\n\tpublic static inline var UNSIGNED_INT_VEC2 = 0x8DC6;\n\tpublic static inline var UNSIGNED_INT_VEC3 = 0x8DC7;\n\tpublic static inline var UNSIGNED_INT_VEC4 = 0x8DC8;\n\tpublic static inline var UNSIGNED_NORMALIZED = 0x8C17;\n\tpublic static inline var SIGNED_NORMALIZED = 0x8F9C;\n\t\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;\n\tpublic static inline var VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;\n\t\n\tpublic static inline var TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;\n\tpublic static inline var MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;\n\tpublic static inline var TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;\n\tpublic static inline var TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;\n\tpublic static inline var TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;\n\tpublic static inline var TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;\n\tpublic static inline var MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;\n\tpublic static inline var MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;\n\tpublic static inline var INTERLEAVED_ATTRIBS = 0x8C8C;\n\tpublic static inline var SEPARATE_ATTRIBS = 0x8C8D;\n\tpublic static inline var TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;\n\tpublic static inline var TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;\n\tpublic static inline var TRANSFORM_FEEDBACK = 0x8E22;\n\tpublic static inline var TRANSFORM_FEEDBACK_PAUSED = 0x8E23;\n\tpublic static inline var TRANSFORM_FEEDBACK_ACTIVE = 0x8E24;\n\tpublic static inline var TRANSFORM_FEEDBACK_BINDING = 0x8E25;\n\t\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;\n\tpublic static inline var FRAMEBUFFER_DEFAULT = 0x8218;\n\tpublic static inline var DEPTH24_STENCIL8 = 0x88F0;\n\tpublic static inline var DRAW_FRAMEBUFFER_BINDING = 0x8CA6;\n\tpublic static inline var READ_FRAMEBUFFER = 0x8CA8;\n\tpublic static inline var DRAW_FRAMEBUFFER = 0x8CA9;\n\tpublic static inline var READ_FRAMEBUFFER_BINDING = 0x8CAA;\n\tpublic static inline var RENDERBUFFER_SAMPLES = 0x8CAB;\n\tpublic static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4;\n\tpublic static inline var FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;\n\t\n\tpublic static inline var UNIFORM_BUFFER = 0x8A11;\n\tpublic static inline var UNIFORM_BUFFER_BINDING = 0x8A28;\n\tpublic static inline var UNIFORM_BUFFER_START = 0x8A29;\n\tpublic static inline var UNIFORM_BUFFER_SIZE = 0x8A2A;\n\tpublic static inline var MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;\n\tpublic static inline var MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;\n\tpublic static inline var MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;\n\tpublic static inline var MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;\n\tpublic static inline var MAX_UNIFORM_BLOCK_SIZE = 0x8A30;\n\tpublic static inline var MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;\n\tpublic static inline var MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;\n\tpublic static inline var UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;\n\tpublic static inline var ACTIVE_UNIFORM_BLOCKS = 0x8A36;\n\tpublic static inline var UNIFORM_TYPE = 0x8A37;\n\tpublic static inline var UNIFORM_SIZE = 0x8A38;\n\tpublic static inline var UNIFORM_BLOCK_INDEX = 0x8A3A;\n\tpublic static inline var UNIFORM_OFFSET = 0x8A3B;\n\tpublic static inline var UNIFORM_ARRAY_STRIDE = 0x8A3C;\n\tpublic static inline var UNIFORM_MATRIX_STRIDE = 0x8A3D;\n\tpublic static inline var UNIFORM_IS_ROW_MAJOR = 0x8A3E;\n\tpublic static inline var UNIFORM_BLOCK_BINDING = 0x8A3F;\n\tpublic static inline var UNIFORM_BLOCK_DATA_SIZE = 0x8A40;\n\tpublic static inline var UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;\n\tpublic static inline var UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;\n\tpublic static inline var UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;\n\tpublic static inline var UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;\n\t\n\tpublic static inline var OBJECT_TYPE = 0x9112;\n\tpublic static inline var SYNC_CONDITION = 0x9113;\n\tpublic static inline var SYNC_STATUS = 0x9114;\n\tpublic static inline var SYNC_FLAGS = 0x9115;\n\tpublic static inline var SYNC_FENCE = 0x9116;\n\tpublic static inline var SYNC_GPU_COMMANDS_COMPLETE = 0x9117;\n\tpublic static inline var UNSIGNALED = 0x9118;\n\tpublic static inline var SIGNALED = 0x9119;\n\tpublic static inline var ALREADY_SIGNALED = 0x911A;\n\tpublic static inline var TIMEOUT_EXPIRED = 0x911B;\n\tpublic static inline var CONDITION_SATISFIED = 0x911C;\n\tpublic static inline var WAIT_FAILED = 0x911D;\n\tpublic static inline var SYNC_FLUSH_COMMANDS_BIT = 0x00000001;\n\t\n\tpublic static inline var COLOR = 0x1800;\n\tpublic static inline var DEPTH = 0x1801;\n\tpublic static inline var STENCIL = 0x1802;\n\tpublic static inline var MIN = 0x8007;\n\tpublic static inline var MAX = 0x8008;\n\tpublic static inline var DEPTH_COMPONENT24 = 0x81A6;\n\tpublic static inline var STREAM_READ = 0x88E1;\n\tpublic static inline var STREAM_COPY = 0x88E2;\n\tpublic static inline var STATIC_READ = 0x88E5;\n\tpublic static inline var STATIC_COPY = 0x88E6;\n\tpublic static inline var DYNAMIC_READ = 0x88E9;\n\tpublic static inline var DYNAMIC_COPY = 0x88EA;\n\tpublic static inline var DEPTH_COMPONENT32F = 0x8CAC;\n\tpublic static inline var DEPTH32F_STENCIL8 = 0x8CAD;\n\tpublic static inline var INVALID_INDEX = 0xFFFFFFFF;\n\tpublic static inline var TIMEOUT_IGNORED = -1;\n\tpublic static inline var MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 0x9247;\n\t\n\tpublic static var context (default, null):GLRenderContext;\n\tpublic static var type (get, null):GLContextType;\n\tpublic static var version (get, null):Float;\n\t\n\tprivate static var __currentProgram:GLProgram;\n\t\n\t\n\t#if (js && html5 && es5get)\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (GL, {\n\t\t\t\"type\": { get: function () { return GL.get_type (); } },\n\t\t\t\"version\": { get: function () { return GL.get_version (); } }\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function activeTexture (texture:Int):Void {\n\t\t\n\t\tcontext.activeTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function attachShader (program:GLProgram, shader:GLShader):Void {\n\t\t\n\t\tcontext.attachShader (program, shader);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function beginQuery (target:Int, query:GLQuery):Void {\n\t\t\n\t\tcontext.beginQuery (target, query);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function beginTransformFeedback (primitiveNode:Int):Void {\n\t\t\n\t\tcontext.beginTransformFeedback (primitiveNode);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindAttribLocation (program:GLProgram, index:Int, name:String):Void {\n\t\t\n\t\tcontext.bindAttribLocation (program, index, name);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindBuffer (target:Int, buffer:GLBuffer):Void {\n\t\t\n\t\tcontext.bindBuffer (target, buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindBufferBase (target:Int, index:Int, buffer:GLBuffer):Void {\n\t\t\n\t\tcontext.bindBufferBase (target, index, buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindBufferRange (target:Int, index:Int, buffer:GLBuffer, offset:DataPointer, size:Int):Void {\n\t\t\n\t\tcontext.bindBufferRange (target, index, buffer, offset, size);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindFramebuffer (target:Int, framebuffer:GLFramebuffer):Void {\n\t\t\n\t\tcontext.bindFramebuffer (target, framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindRenderbuffer (target:Int, renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\tcontext.bindRenderbuffer (target, renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindSampler (unit:Int, sampler:GLSampler):Void {\n\t\t\n\t\tcontext.bindSampler (unit, sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindTexture (target:Int, texture:GLTexture):Void {\n\t\t\n\t\tcontext.bindTexture (target, texture);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindTransformFeedback (target:Int, transformFeedback:GLTransformFeedback):Void {\n\t\t\n\t\tcontext.bindTransformFeedback (target, transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bindVertexArray (vertexArray:GLVertexArrayObject):Void {\n\t\t\n\t\tcontext.bindVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function blitFramebuffer (srcX0:Int, srcY0:Int, srcX1:Int, srcY1:Int, dstX0:Int, dstY0:Int, dstX1:Int, dstY1:Int, mask:Int, filter:Int):Void {\n\t\t\n\t\tcontext.blitFramebuffer (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function blendColor (red:Float, green:Float, blue:Float, alpha:Float):Void {\n\t\t\n\t\tcontext.blendColor (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function blendEquation (mode:Int):Void {\n\t\t\n\t\tcontext.blendEquation (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function blendEquationSeparate (modeRGB:Int, modeAlpha:Int):Void {\n\t\t\n\t\tcontext.blendEquationSeparate (modeRGB, modeAlpha);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function blendFunc (sfactor:Int, dfactor:Int):Void {\n\t\t\n\t\tcontext.blendFunc (sfactor, dfactor);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function blendFuncSeparate (srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void {\n\t\t\n\t\tcontext.blendFuncSeparate (srcRGB, dstRGB, srcAlpha, dstAlpha);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function bufferData (target:Int, size:Int, srcData:DataPointer, usage:Int):Void {\n\t\t\n\t\tcontext.bufferData (target, size, srcData, usage);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function bufferDataWEBGL (target:Int, srcData:Dynamic, usage:Int, ?srcOffset:Int, ?length:Int):Void {\n\t\t\n\t\tcontext.bufferDataWEBGL (target, srcData, usage, srcOffset, length);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function bufferSubData (target:Int, dstByteOffset:Int, size:Int, srcData:DataPointer):Void {\n\t\t\n\t\tcontext.bufferSubData (target, dstByteOffset, size, srcData);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function bufferSubDataWEBGL (target:Int, dstByteOffset:Int, srcData:Dynamic, ?srcOffset:Int, ?length:Int):Void {\n\t\t\n\t\tcontext.bufferSubDataWEBGL (target, dstByteOffset, srcData, srcOffset, length);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function checkFramebufferStatus (target:Int):Int {\n\t\t\n\t\treturn context.checkFramebufferStatus (target);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function clear (mask:Int):Void {\n\t\t\n\t\tcontext.clear (mask);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function clearBufferfi (buffer:Int, drawbuffer:Int, depth:Float, stencil:Int):Void {\n\t\t\n\t\tcontext.clearBufferfi (buffer, drawbuffer, depth, stencil);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function clearBufferfv (buffer:Int, drawbuffer:Int, value:DataPointer):Void {\n\t\t\n\t\tcontext.clearBufferfv (buffer, drawbuffer, value);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function clearBufferfvWEBGL (buffer:Int, drawbuffer:Int, values:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tcontext.clearBufferfvWEBGL (buffer, drawbuffer, values, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function clearBufferiv (buffer:Int, drawbuffer:Int, value:DataPointer):Void {\n\t\t\n\t\tcontext.clearBufferiv (buffer, drawbuffer, value);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function clearBufferivWEBGL (buffer:Int, drawbuffer:Int, values:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tcontext.clearBufferivWEBGL (buffer, drawbuffer, values, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function clearBufferuiv (buffer:Int, drawbuffer:Int, value:DataPointer):Void {\n\t\t\n\t\tcontext.clearBufferuiv (buffer, drawbuffer, value);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function clearBufferuivWEBGL (buffer:Int, drawbuffer:Int, values:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tcontext.clearBufferuivWEBGL (buffer, drawbuffer, values, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function clearColor (red:Float, green:Float, blue:Float, alpha:Float):Void {\n\t\t\n\t\tcontext.clearColor (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\t@:dox(hide) @:noCompletion public static inline function clearDepth (depth:Float):Void {\n\t\t\n\t\t#if !display\n\t\tcontext.clearDepth (depth);\n\t\t#end\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function clearDepthf (depth:Float):Void {\n\t\t\n\t\tcontext.clearDepthf (depth);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function clearStencil (s:Int):Void {\n\t\t\n\t\tcontext.clearStencil (s);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function clientWaitSync (sync:GLSync, flags:Int, timeout:#if (!js || !html5 || display) Int64 #else Dynamic #end):Int {\n\t\t\n\t\treturn context.clientWaitSync (sync, flags, timeout);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function colorMask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {\n\t\t\n\t\tcontext.colorMask (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function compileShader (shader:GLShader):Void {\n\t\t\n\t\tcontext.compileShader (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\tcontext.compressedTexImage2D (target, level, internalformat, width, height, border, imageSize, data);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function compressedTexImage2DWEBGL (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, srcData:Dynamic, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tcontext.compressedTexImage2DWEBGL (target, level, internalformat, width, height, border, srcData, srcOffset, srcLengthOverride);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function compressedTexImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\tcontext.compressedTexImage3D (target, level, internalformat, width, height, depth, border, imageSize, data);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function compressedTexImage3DWEBGL (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, srcData:Dynamic, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tcontext.compressedTexImage3DWEBGL (target, level, internalformat, width, height, depth, border, srcData, srcOffset, srcLengthOverride);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\tcontext.compressedTexSubImage2D (target, level, xoffset, yoffset, width, height, format, imageSize, data);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function compressedTexSubImage2DWEBGL (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, srcData:Dynamic, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tcontext.compressedTexSubImage2DWEBGL (target, level, xoffset, yoffset, width, height, format, srcData, srcOffset, srcLengthOverride);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function compressedTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\tcontext.compressedTexSubImage3D (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function compressedTexSubImage3DWEBGL (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, srcData:Dynamic, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tcontext.compressedTexSubImage3DWEBGL (target, level, xoffset, yoffset, zoffset, width, height, depth, format, srcData, srcOffset, srcLengthOverride);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function copyBufferSubData (readTarget:Int, writeTarget:Int, readOffset:DataPointer, writeOffset:DataPointer, size:Int):Void {\n\t\t\n\t\tcontext.copyBufferSubData (readTarget, writeTarget, readOffset, writeOffset, size);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function copyTexImage2D (target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void {\n\t\t\n\t\tcontext.copyTexImage2D (target, level, internalformat, x, y, width, height, border);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function copyTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tcontext.copyTexSubImage2D (target, level, xoffset, yoffset, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function copyTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tcontext.copyTexSubImage3D (target, level, xoffset, yoffset, zoffset, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createBuffer ():GLBuffer {\n\t\t\n\t\treturn context.createBuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createFramebuffer ():GLFramebuffer {\n\t\t\n\t\treturn context.createFramebuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createProgram ():GLProgram {\n\t\t\n\t\treturn context.createProgram ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createQuery ():GLQuery {\n\t\t\n\t\treturn context.createQuery ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createRenderbuffer ():GLRenderbuffer {\n\t\t\n\t\treturn context.createRenderbuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createSampler ():GLSampler {\n\t\t\n\t\treturn context.createSampler ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createShader (type:Int):GLShader {\n\t\t\n\t\treturn context.createShader (type);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createTexture ():GLTexture {\n\t\t\n\t\treturn context.createTexture ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createTransformFeedback ():GLTransformFeedback {\n\t\t\n\t\treturn context.createTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function createVertexArray ():GLVertexArrayObject {\n\t\t\n\t\treturn context.createVertexArray ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function cullFace (mode:Int):Void {\n\t\t\n\t\tcontext.cullFace (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteBuffer (buffer:GLBuffer):Void {\n\t\t\n\t\tcontext.deleteBuffer (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteFramebuffer (framebuffer:GLFramebuffer):Void {\n\t\t\n\t\tcontext.deleteFramebuffer (framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteProgram (program:GLProgram):Void {\n\t\t\n\t\tcontext.deleteProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteQuery (query:GLQuery):Void {\n\t\t\n\t\tcontext.deleteQuery (query);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteRenderbuffer (renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\tcontext.deleteRenderbuffer (renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteSampler (sampler:GLSampler):Void {\n\t\t\n\t\tcontext.deleteSampler (sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteShader (shader:GLShader):Void {\n\t\t\n\t\tcontext.deleteShader (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteSync (sync:GLSync):Void {\n\t\t\n\t\tcontext.deleteSync (sync);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteTexture (texture:GLTexture):Void {\n\t\t\n\t\tcontext.deleteTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteTransformFeedback (transformFeedback:GLTransformFeedback):Void {\n\t\t\n\t\tcontext.deleteTransformFeedback (transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function deleteVertexArray (vertexArray:GLVertexArrayObject):Void {\n\t\t\n\t\tcontext.deleteVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function depthFunc (func:Int):Void {\n\t\t\n\t\tcontext.depthFunc (func);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function depthMask (flag:Bool):Void {\n\t\t\n\t\tcontext.depthMask (flag);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\t@:dox(hide) @:noCompletion public static inline function depthRange (zNear:Float, zFar:Float):Void {\n\t\t\n\t\t#if !display\n\t\tcontext.depthRange (zNear, zFar);\n\t\t#end\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function depthRangef (zNear:Float, zFar:Float):Void {\n\t\t\n\t\tcontext.depthRangef (zNear, zFar);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function detachShader (program:GLProgram, shader:GLShader):Void {\n\t\t\n\t\tcontext.detachShader (program, shader);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function disable (cap:Int):Void {\n\t\t\n\t\tcontext.disable (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function disableVertexAttribArray (index:Int):Void {\n\t\t\n\t\tcontext.disableVertexAttribArray (index);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function drawArrays (mode:Int, first:Int, count:Int):Void {\n\t\t\n\t\tcontext.drawArrays (mode, first, count);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function drawArraysInstanced (mode:Int, first:Int, count:Int, instanceCount:Int):Void {\n\t\t\n\t\tcontext.drawArraysInstanced (mode, first, count, instanceCount);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function drawBuffers (buffers:Array<Int>):Void {\n\t\t\n\t\tcontext.drawBuffers (buffers);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function drawElements (mode:Int, count:Int, type:Int, offset:Int):Void {\n\t\t\n\t\tcontext.drawElements (mode, count, type, offset);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function drawElementsInstanced (mode:Int, count:Int, type:Int, offset:DataPointer, instanceCount:Int):Void {\n\t\t\n\t\tcontext.drawElementsInstanced (mode, count, type, offset, instanceCount);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function drawRangeElements (mode:Int, start:Int, end:Int, count:Int, type:Int, offset:DataPointer):Void {\n\t\t\n\t\tcontext.drawRangeElements (mode, start, end, count, type, offset);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function enable (cap:Int):Void {\n\t\t\n\t\tcontext.enable (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function enableVertexAttribArray (index:Int):Void {\n\t\t\n\t\tcontext.enableVertexAttribArray (index);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function endQuery (target:Int):Void {\n\t\t\n\t\tcontext.endQuery (target);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function endTransformFeedback ():Void {\n\t\t\n\t\tcontext.endTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function fenceSync (condition:Int, flags:Int):GLSync {\n\t\t\n\t\treturn context.fenceSync (condition, flags);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function finish ():Void {\n\t\t\n\t\tcontext.finish ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function flush ():Void {\n\t\t\n\t\tcontext.flush ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function framebufferRenderbuffer (target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\tcontext.framebufferRenderbuffer (target, attachment, renderbuffertarget, renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function framebufferTexture2D (target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void {\n\t\t\n\t\tcontext.framebufferTexture2D (target, attachment, textarget, texture, level);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function framebufferTextureLayer (target:Int, attachment:Int, texture:GLTexture, level:Int, layer:Int):Void {\n\t\t\n\t\tcontext.framebufferTextureLayer (target, attachment, texture, level, layer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function frontFace (mode:Int):Void {\n\t\t\n\t\tcontext.frontFace (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function generateMipmap (target:Int):Void {\n\t\t\n\t\tcontext.generateMipmap (target);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getActiveAttrib (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn context.getActiveAttrib (program, index);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getActiveUniform (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn context.getActiveUniform (program, index);\n\t\t\n\t}\n\t\n\t\n\t\n\tpublic static inline function getActiveUniformBlocki (program:GLProgram, uniformBlockIndex:Int, pname:Int):Int {\n\t\t\n\t\treturn context.getActiveUniformBlocki (program, uniformBlockIndex, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getActiveUniformBlockiv (program:GLProgram, uniformBlockIndex:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getActiveUniformBlockiv (program, uniformBlockIndex, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getActiveUniformBlockName (program:GLProgram, uniformBlockIndex:Int):String {\n\t\t\n\t\treturn context.getActiveUniformBlockName (program, uniformBlockIndex);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getActiveUniformBlockParameter (program:GLProgram, uniformBlockIndex:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getActiveUniformBlockParameter (program, uniformBlockIndex, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getActiveUniforms (program:GLProgram, uniformIndices:Array<Int>, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getActiveUniforms (program, uniformIndices, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getActiveUniformsiv (program:GLProgram, uniformIndices:Array<Int>, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getActiveUniformsiv (program, uniformIndices, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getAttachedShaders (program:GLProgram):Array<GLShader> {\n\t\t\n\t\treturn context.getAttachedShaders (program);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getAttribLocation (program:GLProgram, name:String):Int {\n\t\t\n\t\treturn context.getAttribLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getBoolean (pname:Int):Bool { \n\t\t\n\t\treturn context.getBoolean (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getBooleanv (pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getBooleanv (pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getBufferParameter (target:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getBufferParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getBufferParameteri (target:Int, pname:Int):Int {\n\t\t\n\t\treturn context.getBufferParameteri (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getBufferParameteri64v (target:Int, pname:Int, params:DataPointer):Void{\n\t\t\n\t\treturn context.getBufferParameteri64v (target, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getBufferParameteriv (target:Int, pname:Int, data:DataPointer):Void {\n\t\t\n\t\treturn context.getBufferParameteriv (target, pname, data);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getBufferPointerv (target:Int, pname:Int):DataPointer {\n\t\t\n\t\treturn context.getBufferPointerv (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getBufferSubData (target:Int, offset:DataPointer, size:Int, data:DataPointer):Void {\n\t\t\n\t\tcontext.getBufferSubData (target, offset, size, data);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function getBufferSubDataWEBGL (target:Int, srcByteOffset:DataPointer, dstData:Dynamic, ?srcOffset:Dynamic, ?length:Int):Void {\n\t\t\n\t\tcontext.getBufferSubDataWEBGL (target, srcByteOffset, dstData, srcOffset, length);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function getContextAttributes ():GLContextAttributes {\n\t\t\n\t\treturn context.getContextAttributes ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getError ():Int {\n\t\t\n\t\treturn context.getError ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getExtension (name:String):Dynamic {\n\t\t\n\t\treturn context.getExtension (name);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getFloat (pname:Int):Float {\n\t\t\n\t\treturn context.getFloat (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getFloatv (pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getFloatv (pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getFragDataLocation (program:GLProgram, name:String):Int {\n\t\t\n\t\treturn context.getFragDataLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getFramebufferAttachmentParameter (target:Int, attachment:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getFramebufferAttachmentParameter (target, attachment, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getFramebufferAttachmentParameteri (target:Int, attachment:Int, pname:Int):Int {\n\t\t\n\t\treturn context.getFramebufferAttachmentParameteri (target, attachment, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getFramebufferAttachmentParameteriv (target:Int, attachment:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getFramebufferAttachmentParameteriv (target, attachment, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getIndexedParameter (target:Int, index:Int):Dynamic {\n\t\t\n\t\treturn context.getIndexedParameter (target, index);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getInteger (pname:Int):Int {\n\t\t\n\t\treturn context.getInteger (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getInteger64 (pname:Int):Int64 {\n\t\t\n\t\treturn context.getInteger64 (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getInteger64i (pname:Int):Int64 {\n\t\t\n\t\treturn context.getInteger64i (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getInteger64i_v (pname:Int, index:Int, params:DataPointer):Void {\n\t\t\n\t\treturn context.getInteger64i_v (pname, index, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getInteger64v (pname:Int, params:DataPointer):Void {\n\t\t\n\t\treturn context.getInteger64v (pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getIntegeri_v (pname:Int, index:Int, params:DataPointer):Void {\n\t\t\n\t\treturn context.getIntegeri_v (pname, index, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getIntegerv (pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getIntegerv (pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getInternalformati (target:Int, internalformat:Int, pname:Int):Int {\n\t\t\n\t\treturn context.getInternalformati (target, internalformat, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getInternalformativ (target:Int, internalformat:Int, pname:Int, bufSize:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getInternalformativ (target, internalformat, pname, bufSize, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getInternalformatParameter (target:Int, internalformat:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getInternalformatParameter (target, internalformat, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getParameter (pname:Int):Dynamic {\n\t\t\n\t\treturn context.getParameter (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getProgrami (program:GLProgram, pname:Int):Int {\n\t\t\n\t\treturn context.getProgrami (program, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getProgramiv (program:GLProgram, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getProgramiv (program, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getProgramBinary (program:GLProgram, binaryFormat:Int):Bytes {\n\t\t\n\t\treturn context.getProgramBinary (program, binaryFormat);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getProgramInfoLog (program:GLProgram):String {\n\t\t\n\t\treturn context.getProgramInfoLog (program);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getProgramParameter (program:GLProgram, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getProgramParameter (program, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getQuery (target:Int, pname:Int):GLQuery {\n\t\t\n\t\treturn context.getQuery (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getQueryi (target:Int, pname:Int):Int {\n\t\t\n\t\treturn context.getQueryi (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getQueryiv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getQueryiv (target, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getQueryObjectui (query:GLQuery, pname:Int):Int {\n\t\t\n\t\treturn context.getQueryObjectui (query, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getQueryObjectuiv (query:GLQuery, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getQueryObjectuiv (query, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getQueryParameter (query:GLQuery, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getQueryParameter (query, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getRenderbufferParameter (target:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getRenderbufferParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getRenderbufferParameteri (target:Int, pname:Int):Int {\n\t\t\n\t\treturn context.getRenderbufferParameteri (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getRenderbufferParameteriv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getRenderbufferParameteriv (target, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getSamplerParameter (sampler:GLSampler, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getSamplerParameter (sampler, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getSamplerParameterf (sampler:GLSampler, pname:Int):Float {\n\t\t\n\t\treturn context.getSamplerParameterf (sampler, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getSamplerParameterfv (sampler:GLSampler, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getSamplerParameterfv (sampler, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getSamplerParameteri (sampler:GLSampler, pname:Int):Int {\n\t\t\n\t\treturn context.getSamplerParameteri (sampler, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getSamplerParameteriv (sampler:GLSampler, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getSamplerParameteriv (sampler, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getShaderi (shader:GLShader, pname:Int):Int {\n\t\t\n\t\treturn context.getShaderi (shader, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getShaderiv (shader:GLShader, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getShaderiv (shader, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getShaderInfoLog (shader:GLShader):String {\n\t\t\n\t\treturn context.getShaderInfoLog (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getShaderParameter (shader:GLShader, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getShaderParameter (shader, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getShaderPrecisionFormat (shadertype:Int, precisiontype:Int):GLShaderPrecisionFormat {\n\t\t\n\t\treturn context.getShaderPrecisionFormat (shadertype, precisiontype);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getShaderSource (shader:GLShader):String {\n\t\t\n\t\treturn context.getShaderSource (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getString (name:Int):String {\n\t\t\n\t\treturn context.getString (name);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getStringi (name:Int, index:Int):String {\n\t\t\n\t\treturn context.getStringi (name, index);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getSupportedExtensions ():Array<String> {\n\t\t\n\t\treturn context.getSupportedExtensions ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getSyncParameter (sync:GLSync, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getSyncParameter (sync, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getSyncParameteri (sync:GLSync, pname:Int):Int {\n\t\t\n\t\treturn context.getSyncParameteri (sync, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getSyncParameteriv (sync:GLSync, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getSyncParameteriv (sync, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getTexParameter (target:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getTexParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getTexParameterf (target:Int, pname:Int):Float {\n\t\t\n\t\treturn context.getTexParameterf (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getTexParameterfv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getTexParameterfv (target, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getTexParameteri (target:Int, pname:Int):Int {\n\t\t\n\t\treturn context.getTexParameteri (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getTexParameteriv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getTexParameteriv (target, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getTransformFeedbackVarying (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn context.getTransformFeedbackVarying (program, index);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniform (program:GLProgram, location:GLUniformLocation):Dynamic {\n\t\t\n\t\treturn context.getUniform (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniformf (program:GLProgram, location:GLUniformLocation):Float {\n\t\t\n\t\treturn context.getUniformf (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniformfv (program:GLProgram, location:GLUniformLocation, params:DataPointer):Void {\n\t\t\n\t\tcontext.getUniformfv (program, location, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniformi (program:GLProgram, location:GLUniformLocation):Int {\n\t\t\n\t\treturn context.getUniformi (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniformiv (program:GLProgram, location:GLUniformLocation, params:DataPointer):Void {\n\t\t\n\t\tcontext.getUniformiv (program, location, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniformui (program:GLProgram, location:GLUniformLocation):Int {\n\t\t\n\t\treturn context.getUniformui (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniformuiv (program:GLProgram, location:GLUniformLocation, params:DataPointer):Void {\n\t\t\n\t\tcontext.getUniformuiv (program, location, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniformBlockIndex (program:GLProgram, uniformBlockName:String):Int {\n\t\t\n\t\treturn context.getUniformBlockIndex (program, uniformBlockName);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniformIndices (program:GLProgram, uniformNames:Array<String>):Array<Int> {\n\t\t\n\t\treturn context.getUniformIndices (program, uniformNames);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getUniformLocation (program:GLProgram, name:String):GLUniformLocation {\n\t\t\n\t\treturn context.getUniformLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getVertexAttrib (index:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn context.getVertexAttrib (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getVertexAttribf (index:Int, pname:Int):Float {\n\t\t\n\t\treturn context.getVertexAttribf (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getVertexAttribfv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getVertexAttribfv (index, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getVertexAttribi (index:Int, pname:Int):Int {\n\t\t\n\t\treturn context.getVertexAttribi (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getVertexAttribIi (index:Int, pname:Int):Int {\n\t\t\n\t\treturn context.getVertexAttribIi (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getVertexAttribIiv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getVertexAttribIiv (index, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getVertexAttribIui (index:Int, pname:Int):Int {\n\t\t\n\t\treturn context.getVertexAttribIui (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getVertexAttribIuiv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getVertexAttribIuiv (index, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function getVertexAttribiv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tcontext.getVertexAttribiv (index, pname, params);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\t@:dox(hide) @:noCompletion public static inline function getVertexAttribOffset (index:Int, pname:Int):DataPointer {\n\t\t\n\t\t#if !display\n\t\treturn context.getVertexAttribOffset (index, pname);\n\t\t#else\n\t\treturn cast 0;\n\t\t#end\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function getVertexAttribPointerv (index:Int, pname:Int):DataPointer {\n\t\t\n\t\treturn context.getVertexAttribPointerv (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function hint (target:Int, mode:Int):Void {\n\t\t\n\t\tcontext.hint (target, mode);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function invalidateFramebuffer (target:Int, attachments:Array<Int>):Void {\n\t\t\n\t\tcontext.invalidateFramebuffer (target, attachments);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function invalidateSubFramebuffer (target:Int, attachments:Array<Int>, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tcontext.invalidateSubFramebuffer (target, attachments, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isBuffer (buffer:GLBuffer):Bool {\n\t\t\n\t\treturn context.isBuffer (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isContextLost ():Bool {\n\t\t\n\t\treturn context.isContextLost ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isEnabled (cap:Int):Bool {\n\t\t\n\t\treturn context.isEnabled (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isFramebuffer (framebuffer:GLFramebuffer):Bool {\n\t\t\n\t\treturn context.isFramebuffer (framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isProgram (program:GLProgram):Bool {\n\t\t\n\t\treturn context.isProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isQuery (query:GLQuery):Bool {\n\t\t\n\t\treturn context.isQuery (query);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isRenderbuffer (renderbuffer:GLRenderbuffer):Bool {\n\t\t\n\t\treturn context.isRenderbuffer (renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isSampler (sampler:GLSampler):Bool {\n\t\t\n\t\treturn context.isSampler (sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isShader (shader:GLShader):Bool {\n\t\t\n\t\treturn context.isShader (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isSync (sync:GLSync):Bool {\n\t\t\n\t\treturn context.isSync (sync);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isTexture (texture:GLTexture):Bool {\n\t\t\n\t\treturn context.isTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isTransformFeedback (transformFeedback:GLTransformFeedback):Bool {\n\t\t\n\t\treturn context.isTransformFeedback (transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function isVertexArray (vertexArray:GLVertexArrayObject):Bool {\n\t\t\n\t\treturn context.isVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function lineWidth (width:Float):Void {\n\t\t\n\t\tcontext.lineWidth (width);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function linkProgram (program:GLProgram):Void {\n\t\t\n\t\tcontext.linkProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function mapBufferRange (target:Int, offset:DataPointer, length:Int, access:Int):DataPointer {\n\t\t\n\t\treturn context.mapBufferRange (target, offset, length, access);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function pauseTransformFeedback ():Void {\n\t\t\n\t\tcontext.pauseTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function pixelStorei (pname:Int, param:Int):Void {\n\t\t\n\t\tcontext.pixelStorei (pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function polygonOffset (factor:Float, units:Float):Void {\n\t\t\n\t\tcontext.polygonOffset (factor, units);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function programBinary (program:GLProgram, binaryFormat:Int, binary:DataPointer, length:Int):Void {\n\t\t\n\t\tcontext.programBinary (program, binaryFormat, binary, length);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function programParameteri (program:GLProgram, pname:Int, value:Int):Void {\n\t\t\n\t\tcontext.programParameteri (program, pname, value);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function readBuffer (src:Int):Void {\n\t\t\n\t\tcontext.readBuffer (src);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:BytePointer):Void {\n\t\t\n\t\tcontext.readPixels (x, y, width, height, format, type, pixels);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function readPixelsWEBGL (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:Dynamic, ?dstOffset:Int):Void {\n\t\t\n\t\tcontext.readPixelsWEBGL (x, y, width, height, format, type, pixels, dstOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function releaseShaderCompiler ():Void {\n\t\t\n\t\tcontext.releaseShaderCompiler ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function renderbufferStorage (target:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\tcontext.renderbufferStorage (target, internalformat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function renderbufferStorageMultisample (target:Int, samples:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\tcontext.renderbufferStorageMultisample (target, samples, internalformat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function resumeTransformFeedback ():Void {\n\t\t\n\t\tcontext.resumeTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function sampleCoverage (value:Float, invert:Bool):Void {\n\t\t\n\t\tcontext.sampleCoverage (value, invert);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function samplerParameterf (sampler:GLSampler, pname:Int, param:Float):Void {\n\t\t\n\t\tcontext.samplerParameterf (sampler, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function samplerParameteri (sampler:GLSampler, pname:Int, param:Int):Void {\n\t\t\n\t\tcontext.samplerParameteri (sampler, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function scissor (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tcontext.scissor (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function shaderBinary (shaders:Array<GLShader>, binaryformat:Int, binary:DataPointer, length:Int):Void {\n\t\t\n\t\tcontext.shaderBinary (shaders, binaryformat, binary, length);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function shaderSource (shader:GLShader, source:String):Void {\n\t\t\n\t\tcontext.shaderSource (shader, source);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilFunc (func:Int, ref:Int, mask:Int):Void {\n\t\t\n\t\tcontext.stencilFunc (func, ref, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilFuncSeparate (face:Int, func:Int, ref:Int, mask:Int):Void {\n\t\t\n\t\tcontext.stencilFuncSeparate (face, func, ref, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilMask (mask:Int):Void {\n\t\t\n\t\tcontext.stencilMask (mask);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilMaskSeparate (face:Int, mask:Int):Void {\n\t\t\n\t\tcontext.stencilMaskSeparate (face, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilOp (fail:Int, zfail:Int, zpass:Int):Void {\n\t\t\n\t\tcontext.stencilOp (fail, zfail, zpass);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function stencilOpSeparate (face:Int, fail:Int, zfail:Int, zpass:Int):Void {\n\t\t\n\t\tcontext.stencilOpSeparate (face, fail, zfail, zpass);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\tcontext.texImage2D (target, level, internalformat, width, height, border, format, type, data);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function texImage2DWEBGL (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Dynamic, ?format:Int, ?type:Int, ?srcData:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tcontext.texImage2DWEBGL (target, level, internalformat, width, height, border, format, type, srcData, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\tcontext.texImage3D (target, level, internalformat, width, height, depth, border, format, type, data);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function texImage3DWEBGL (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, srcData:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tcontext.texImage3DWEBGL (target, level, internalformat, width, height, depth, border, format, type, srcData, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function texStorage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\tcontext.texStorage2D (target, level, internalformat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function texStorage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int):Void {\n\t\t\n\t\tcontext.texStorage3D (target, level, internalformat, width, height, depth);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function texParameterf (target:Int, pname:Int, param:Float):Void {\n\t\t\n\t\tcontext.texParameterf (target, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function texParameteri (target:Int, pname:Int, param:Int):Void {\n\t\t\n\t\tcontext.texParameteri (target, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\n\t\t\n\t\tcontext.texSubImage2D (target, level, xoffset, yoffset, width, height, format, type, pixels);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function texSubImage2DWEBGL (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Dynamic, ?type:Int, ?srcData:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tcontext.texSubImage2DWEBGL (target, level, xoffset, yoffset, width, height, format, type, srcData, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\tcontext.texSubImage3D (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function texSubImage3DWEBGL (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, source:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tcontext.texSubImage3DWEBGL (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, source, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function transformFeedbackVaryings (program:GLProgram, varyings:Array<String>, bufferMode:Int):Void {\n\t\t\n\t\tcontext.transformFeedbackVaryings (program, varyings, bufferMode);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform1f (location:GLUniformLocation, v0:Float):Void {\n\t\t\n\t\tcontext.uniform1f (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform1fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform1fv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform1fvWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform1fvWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniform1i (location:GLUniformLocation, v0:Int):Void {\n\t\t\n\t\tcontext.uniform1i (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform1iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform1iv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform1ivWEBGL (location:GLUniformLocation, ?data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform1ivWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniform1ui (location:GLUniformLocation, v0:Int):Void {\n\t\t\n\t\tcontext.uniform1ui (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform1uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform1uiv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform1uivWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform1uivWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniform2f (location:GLUniformLocation, v0:Float, v1:Float):Void {\n\t\t\n\t\tcontext.uniform2f (location, v0, v1);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform2fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform2fv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform2fvWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform2fvWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniform2i (location:GLUniformLocation, x:Int, y:Int):Void {\n\t\t\n\t\tcontext.uniform2i (location, x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform2iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform2iv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform2ivWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform2ivWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniform2ui (location:GLUniformLocation, x:Int, y:Int):Void {\n\t\t\n\t\tcontext.uniform2ui (location, x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform2uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform2uiv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform2uivWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform2uivWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniform3f (location:GLUniformLocation, v0:Float, v1:Float, v2:Float):Void {\n\t\t\n\t\tcontext.uniform3f (location, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform3fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform3fv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform3fvWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform3fvWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniform3i (location:GLUniformLocation, v0:Int, v1:Int, v2:Int):Void {\n\t\t\n\t\tcontext.uniform3i (location, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform3iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform3iv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform3ivWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform3ivWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniform3ui (location:GLUniformLocation, v0:Int, v1:Int, v2:Int):Void {\n\t\t\n\t\tcontext.uniform3ui (location, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform3uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform3uiv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform3uivWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform3uivWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniform4f (location:GLUniformLocation, v0:Float, v1:Float, v2:Float, v3:Float):Void {\n\t\t\n\t\tcontext.uniform4f (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform4fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform4fv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform4fvWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform4fvWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniform4i (location:GLUniformLocation, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\tcontext.uniform4i (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform4iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform4iv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform4ivWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform4ivWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniform4ui (location:GLUniformLocation, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\tcontext.uniform4ui (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniform4uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniform4uiv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniform4uivWEBGL (location:GLUniformLocation, data:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniform4uivWEBGL (location, data, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniformBlockBinding (program:GLProgram, uniformBlockIndex:Int, uniformBlockBinding:Int):Void {\n\t\t\n\t\tcontext.uniformBlockBinding (program, uniformBlockIndex, uniformBlockBinding);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function uniformMatrix2fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniformMatrix2fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniformMatrix2fvWEBGL (location:GLUniformLocation, transpose:Bool, v:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniformMatrix2fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniformMatrix2x3fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniformMatrix2x3fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniformMatrix2x3fvWEBGL (location:GLUniformLocation, transpose:Bool, v:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniformMatrix2x3fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniformMatrix2x4fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniformMatrix2x4fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniformMatrix2x4fvWEBGL (location:GLUniformLocation, transpose:Bool, v:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniformMatrix2x4fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniformMatrix3fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniformMatrix3fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniformMatrix3fvWEBGL (location:GLUniformLocation, transpose:Bool, v:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniformMatrix3fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniformMatrix3x2fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniformMatrix3x2fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniformMatrix3x2fvWEBGL (location:GLUniformLocation, transpose:Bool, v:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniformMatrix3x2fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniformMatrix3x4fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniformMatrix3x4fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniformMatrix3x4fvWEBGL (location:GLUniformLocation, transpose:Bool, v:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniformMatrix3x4fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniformMatrix4fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniformMatrix4fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniformMatrix4fvWEBGL (location:GLUniformLocation, transpose:Bool, v:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniformMatrix4fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniformMatrix4x2fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniformMatrix4x2fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniformMatrix4x2fvWEBGL (location:GLUniformLocation, transpose:Bool, v:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniformMatrix4x2fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function uniformMatrix4x3fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tcontext.uniformMatrix4x3fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function uniformMatrix4x3fvWEBGL (location:GLUniformLocation, transpose:Dynamic, v:Dynamic, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tcontext.uniformMatrix4x3fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function unmapBuffer (target:Int):Bool {\n\t\t\n\t\treturn context.unmapBuffer (target);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function useProgram (program:GLProgram):Void {\n\t\t\n\t\t__currentProgram = program;\n\t\t\n\t\tcontext.useProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function validateProgram (program:GLProgram):Void {\n\t\t\n\t\tcontext.validateProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib1f (index:Int, v0:Float):Void {\n\t\t\n\t\tcontext.vertexAttrib1f (index, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib1fv (index:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.vertexAttrib1fv (index, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function vertexAttrib1fvWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\tcontext.vertexAttrib1fv (index, v);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function vertexAttrib2f (index:Int, v0:Float, v1:Float):Void {\n\t\t\n\t\tcontext.vertexAttrib2f (index, v0, v1);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib2fv (index:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.vertexAttrib2fv (index, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function vertexAttrib2fvWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\tcontext.vertexAttrib2fv (index, v);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function vertexAttrib3f (index:Int, v0:Float, v1:Float, v2:Float):Void {\n\t\t\n\t\tcontext.vertexAttrib3f (index, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib3fv (index:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.vertexAttrib3fv (index, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function vertexAttrib3fvWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\tcontext.vertexAttrib3fv (index, v);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function vertexAttrib4f (index:Int, v0:Float, v1:Float, v2:Float, v3:Float):Void {\n\t\t\n\t\tcontext.vertexAttrib4f (index, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttrib4fv (index:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.vertexAttrib4fv (index, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function vertexAttrib4fvWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\tcontext.vertexAttrib4fv (index, v);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function vertexAttribDivisor (index:Int, divisor:Int):Void {\n\t\t\n\t\tcontext.vertexAttribDivisor (index, divisor);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttribI4i (index:Int, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\tcontext.vertexAttribI4i (index, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttribI4iv (index:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.vertexAttribI4iv (index, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function vertexAttribI4ivWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\tcontext.vertexAttribI4iv (index, v);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function vertexAttribI4ui (index:Int, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\tcontext.vertexAttribI4ui (index, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttribI4uiv (index:Int, v:DataPointer):Void {\n\t\t\n\t\tcontext.vertexAttribI4uiv (index, v);\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static inline function vertexAttribI4uivWEBGL (index:Int, v:Dynamic):Void {\n\t\t\n\t\tcontext.vertexAttribI4uiv (index, v);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static inline function vertexAttribIPointer (index:Int, size:Int, type:Int, stride:Int, offset:DataPointer):Void {\n\t\t\n\t\tcontext.vertexAttribIPointer (index, size, type, stride, offset);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function vertexAttribPointer (index:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:DataPointer):Void {\n\t\t\n\t\tcontext.vertexAttribPointer (index, size, type, normalized, stride, offset);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function viewport (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tcontext.viewport (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function waitSync (sync:GLSync, flags:Int, timeout:#if (!js || !html5 || display) Int64 #else Dynamic #end):Void {\n\t\t\n\t\tcontext.waitSync (sync, flags, timeout);\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_type ():GLContextType { return context.type; }\n\tprivate static function get_version ():Float { return context.version; }\n\t\n\t\n\tprivate static inline function __getObjectID (object:#if (!js || !html5 || display) GLObject #else Dynamic #end):Int {\n\t\t\n\t\treturn (object == null) ? 0 : @:privateAccess object.id;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if (!js || !html5 || display)\n@:access(lime._backend.native.NativeCFFI)\n@:dox(hide) @:noCompletion class GLObject {\n\t\n\t\n\tprivate var id:Int;\n\tprivate var refs:Array<GLObject>;\n\t\n\t\n\tprivate function new (id:Int) {\n\t\t\n\t\tthis.id = id;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromInt (type:GLObjectType, id:Int):GLObject {\n\t\t\n\t\tif (id == 0) return null;\n\t\t\n\t\t#if (lime_cffi && lime_opengl && !macro)\n\t\tvar object = NativeCFFI.lime_gl_object_from_id (id, type);\n\t\t\n\t\tif (object != null) {\n\t\t\t\n\t\t\treturn object;\n\t\t\t\n\t\t}\n\t\t\n\t\tobject = new GLObject (id);\n\t\tNativeCFFI.lime_gl_object_register (id, type, object);\n\t\treturn object;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:dox(hide) @:noCompletion @:enum abstract GLObjectType(Int) to Int {\n\t\n\tvar UNKNOWN = 0;\n\tvar PROGRAM = 1;\n\tvar SHADER = 2;\n\tvar BUFFER = 3;\n\tvar TEXTURE = 4;\n\tvar FRAMEBUFFER = 5;\n\tvar RENDERBUFFER = 6;\n\tvar VERTEX_ARRAY_OBJECT = 7;\n\tvar QUERY = 8;\n\tvar SAMPLER = 9;\n\tvar SYNC = 10;\n\tvar TRANSFORM_FEEDBACK = 11;\n\t\n}\n#end","package lime.graphics.opengl;\n\n\n@:forward(ACTIVE_ATTRIBUTES, ACTIVE_TEXTURE, ACTIVE_UNIFORMS, ALIASED_LINE_WIDTH_RANGE, \nALIASED_POINT_SIZE_RANGE, ALPHA, ALPHA_BITS, ALWAYS, ARRAY_BUFFER, ARRAY_BUFFER_BINDING, \nATTACHED_SHADERS, BACK, BLEND, BLEND_COLOR, BLEND_DST_ALPHA, BLEND_DST_RGB, BLEND_EQUATION, \nBLEND_EQUATION_ALPHA, BLEND_EQUATION_RGB, BLEND_SRC_ALPHA, BLEND_SRC_RGB, BLUE_BITS, BOOL, \nBOOL_VEC2, BOOL_VEC3, BOOL_VEC4, BROWSER_DEFAULT_WEBGL, BUFFER_SIZE, BUFFER_USAGE, BYTE, \nCCW, CLAMP_TO_EDGE, COLOR_ATTACHMENT0, COLOR_BUFFER_BIT, COLOR_CLEAR_VALUE, COLOR_WRITEMASK, \nCOMPILE_STATUS, COMPRESSED_TEXTURE_FORMATS, CONSTANT_ALPHA, CONSTANT_COLOR, CULL_FACE, \nCULL_FACE_MODE, CURRENT_PROGRAM, CURRENT_VERTEX_ATTRIB, CW, DECR, DECR_WRAP, DELETE_STATUS, \nDEPTH_ATTACHMENT, DEPTH_BITS, DEPTH_BUFFER_BIT, DEPTH_CLEAR_VALUE, DEPTH_COMPONENT, \nDEPTH_COMPONENT16, DEPTH_FUNC, DEPTH_RANGE, DEPTH_STENCIL, DEPTH_STENCIL_ATTACHMENT, \nDEPTH_TEST, DEPTH_WRITEMASK, DITHER, DONT_CARE, DST_ALPHA, DST_COLOR, DYNAMIC_DRAW, \nELEMENT_ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER_BINDING, EQUAL, FASTEST, FLOAT, FLOAT_MAT2, \nFLOAT_MAT3, FLOAT_MAT4, FLOAT_VEC2, FLOAT_VEC3, FLOAT_VEC4, FRAGMENT_SHADER, FRAMEBUFFER, \nFRAMEBUFFER_ATTACHMENT_OBJECT_NAME, FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, \nFRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE, FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, \nFRAMEBUFFER_BINDING, FRAMEBUFFER_COMPLETE, FRAMEBUFFER_INCOMPLETE_ATTACHMENT, \nFRAMEBUFFER_INCOMPLETE_DIMENSIONS, FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT, \nFRAMEBUFFER_UNSUPPORTED, FRONT, FRONT_AND_BACK, FRONT_FACE, FUNC_ADD, FUNC_REVERSE_SUBTRACT, \nFUNC_SUBTRACT, GENERATE_MIPMAP_HINT, GEQUAL, GREATER, GREEN_BITS, HIGH_FLOAT, HIGH_INT, INCR, \nINCR_WRAP, INT, INT_VEC2, INT_VEC3, INT_VEC4, INVALID_ENUM, INVALID_FRAMEBUFFER_OPERATION, \nINVALID_OPERATION, INVALID_VALUE, INVERT, KEEP, LEQUAL, LESS, LINEAR, LINEAR_MIPMAP_LINEAR, \nLINEAR_MIPMAP_NEAREST, LINES, LINE_LOOP, LINE_STRIP, LINE_WIDTH, LINK_STATUS, LOW_FLOAT, \nLOW_INT, LUMINANCE, LUMINANCE_ALPHA, MAX_COMBINED_TEXTURE_IMAGE_UNITS, \nMAX_CUBE_MAP_TEXTURE_SIZE, MAX_FRAGMENT_UNIFORM_VECTORS, MAX_RENDERBUFFER_SIZE, \nMAX_TEXTURE_IMAGE_UNITS, MAX_TEXTURE_SIZE, MAX_VARYING_VECTORS, MAX_VERTEX_ATTRIBS, \nMAX_VERTEX_TEXTURE_IMAGE_UNITS, MAX_VERTEX_UNIFORM_VECTORS, MAX_VIEWPORT_DIMS, MEDIUM_FLOAT, \nMEDIUM_INT, MIRRORED_REPEAT, NEAREST, NEAREST_MIPMAP_LINEAR, NEAREST_MIPMAP_NEAREST, NEVER, \nNICEST, NONE, NOTEQUAL, NO_ERROR, ONE, ONE_MINUS_CONSTANT_ALPHA, ONE_MINUS_CONSTANT_COLOR, \nONE_MINUS_DST_ALPHA, ONE_MINUS_DST_COLOR, ONE_MINUS_SRC_ALPHA, ONE_MINUS_SRC_COLOR, \nOUT_OF_MEMORY, PACK_ALIGNMENT, POINTS, POLYGON_OFFSET_FACTOR, POLYGON_OFFSET_FILL, \nPOLYGON_OFFSET_UNITS, RED_BITS, RENDERBUFFER, RENDERBUFFER_ALPHA_SIZE, RENDERBUFFER_BINDING, \nRENDERBUFFER_BLUE_SIZE, RENDERBUFFER_DEPTH_SIZE, RENDERBUFFER_GREEN_SIZE, \nRENDERBUFFER_HEIGHT, RENDERBUFFER_INTERNAL_FORMAT, RENDERBUFFER_RED_SIZE, \nRENDERBUFFER_STENCIL_SIZE, RENDERBUFFER_WIDTH, RENDERER, REPEAT, REPLACE, RGB, RGB565, \nRGB5_A1, RGBA, RGBA4, SAMPLER_2D, SAMPLER_CUBE, SAMPLES, SAMPLE_ALPHA_TO_COVERAGE, \nSAMPLE_BUFFERS, SAMPLE_COVERAGE, SAMPLE_COVERAGE_INVERT, SAMPLE_COVERAGE_VALUE, SCISSOR_BOX, \nSCISSOR_TEST, SHADER_TYPE, SHADING_LANGUAGE_VERSION, SHORT, SRC_ALPHA, SRC_ALPHA_SATURATE, \nSRC_COLOR, STATIC_DRAW, STENCIL_ATTACHMENT, STENCIL_BACK_FAIL, STENCIL_BACK_FUNC, \nSTENCIL_BACK_PASS_DEPTH_FAIL, STENCIL_BACK_PASS_DEPTH_PASS, STENCIL_BACK_REF, \nSTENCIL_BACK_VALUE_MASK, STENCIL_BACK_WRITEMASK, STENCIL_BITS, STENCIL_BUFFER_BIT, \nSTENCIL_CLEAR_VALUE, STENCIL_FAIL, STENCIL_FUNC, STENCIL_INDEX, STENCIL_INDEX8, \nSTENCIL_PASS_DEPTH_FAIL, STENCIL_PASS_DEPTH_PASS, STENCIL_REF, STENCIL_TEST, \nSTENCIL_VALUE_MASK, STENCIL_WRITEMASK, STREAM_DRAW, SUBPIXEL_BITS, TEXTURE, \nTEXTURE0, TEXTURE1, TEXTURE10, TEXTURE11, TEXTURE12, TEXTURE13, TEXTURE14, TEXTURE15, \nTEXTURE16, TEXTURE17, TEXTURE18, TEXTURE19, TEXTURE2, TEXTURE20, TEXTURE21, TEXTURE22, \nTEXTURE23, TEXTURE24, TEXTURE25, TEXTURE26, TEXTURE27, TEXTURE28, TEXTURE29, TEXTURE3, \nTEXTURE30, TEXTURE31, TEXTURE4, TEXTURE5, TEXTURE6, TEXTURE7, TEXTURE8, TEXTURE9, TEXTURE_2D, \nTEXTURE_BINDING_2D, TEXTURE_BINDING_CUBE_MAP, TEXTURE_CUBE_MAP, TEXTURE_CUBE_MAP_NEGATIVE_X, \nTEXTURE_CUBE_MAP_NEGATIVE_Y, TEXTURE_CUBE_MAP_NEGATIVE_Z, TEXTURE_CUBE_MAP_POSITIVE_X, \nTEXTURE_CUBE_MAP_POSITIVE_Y, TEXTURE_CUBE_MAP_POSITIVE_Z, TEXTURE_MAG_FILTER, \nTEXTURE_MIN_FILTER, TEXTURE_WRAP_S, TEXTURE_WRAP_T, TRIANGLES, TRIANGLE_FAN, TRIANGLE_STRIP, \nUNPACK_ALIGNMENT, UNSIGNED_BYTE, UNSIGNED_INT, UNSIGNED_SHORT, UNSIGNED_SHORT_4_4_4_4, \nUNSIGNED_SHORT_5_5_5_1, UNSIGNED_SHORT_5_6_5, VALIDATE_STATUS, VENDOR, VERSION, \nVERTEX_ATTRIB_ARRAY_BUFFER_BINDING, VERTEX_ATTRIB_ARRAY_ENABLED, \nVERTEX_ATTRIB_ARRAY_NORMALIZED, VERTEX_ATTRIB_ARRAY_POINTER, VERTEX_ATTRIB_ARRAY_SIZE, \nVERTEX_ATTRIB_ARRAY_STRIDE, VERTEX_ATTRIB_ARRAY_TYPE, VERTEX_SHADER, VIEWPORT, ZERO,\nactiveTexture, attachShader, bindAttribLocation, bindBuffer, bindFramebuffer, \nbindTexture, blendColor, blendEquation, blendEquationSeparate, blendFunc, blendFuncSeparate, \nbufferData, bufferSubData, checkFramebufferStatus, clear, clearColor, clearDepthf, \nclearStencil, colorMask, compileShader, compressedTexImage2D, compressedTexSubImage2D, \ncopyTexImage2D, copyTexSubImage2D, createBuffer, createFramebuffer, createProgram, \ncreateRenderbuffer, createShader, createTexture, cullFace, deleteBuffer, deleteFramebuffer, \ndeleteProgram, deleteRenderbuffer, deleteShader, deleteTexture, depthFunc, depthMask, \ndepthRangef, detachShader, disable, disableVertexAttribArray, drawArrays, drawElements, \nenable, enableVertexAttribArray, finish, flush, framebufferRenderbuffer, \nframebufferTexture2D, frontFace, genBuffers, generateMipmap, genFramebuffers, \ngenRenderbuffers, genTextures, getActiveAttrib, getActiveUniform, getAttachedShaders, \ngetAttribLocation, getBoolean, getBooleanv, getBufferParameteri, getBufferParameteriv, \ngetError, getFloat, getFloatv, getFramebufferAttachmentParameteri, \ngetFramebufferAttachmentParameteriv, getInteger, getIntegerv, getProgramInfoLog, getProgrami, \ngetProgramiv, getRenderbufferParameteri, getRenderbufferParameteriv, getShaderi, \ngetShaderInfoLog, getShaderiv, getShaderPrecisionFormat, getShaderSource, getString, \ngetTexParameterf, getTexParameterfv, getTexParameteri, getTexParameteriv, getUniform, \ngetUniformLocation, getVertexAttribf, getVertexAttribfv, getVertexAttribi, getVertexAttribiv, \ngetVertexAttribPointerv, hint, isBuffer, isEnabled, isFramebuffer, isProgram, isRenderbuffer, \nisShader, isTexture, lineWidth, linkProgram, pixelStorei, polygonOffset, readPixels, \nreleaseShaderCompiler, renderbufferStorage, sampleCoverage, scissor, shaderBinary, \nshaderSource, stencilFunc, stencilFuncSeparate, stencilMask, stencilMaskSeparate, stencilOp, \nstencilOpSeparate, texImage2D, texParameterf, texParameteri, texSubImage2D, uniform1f, \nuniform1fv, uniform1i, uniform1iv, uniform2f, uniform2fv, uniform2i, uniform2iv, uniform3f, \nuniform3fv, uniform3i, uniform3iv, uniform4f, uniform4fv, uniform4i, uniform4iv, \nuniformMatrix2fv, uniformMatrix3fv, uniformMatrix4fv, useProgram, validateProgram, \nvertexAttrib1f, vertexAttrib1fv, vertexAttrib2f, vertexAttrib2fv, vertexAttrib3f, \nvertexAttrib3fv, vertexAttrib4f, vertexAttrib4fv, vertexAttribPointer, viewport,\nEXTENSIONS, type, version)\n\n\nabstract GLES2Context(GLES3Context) from GLES3Context from GLRenderContext to WebGLContext {\n\t\n\t\n\t@:from private static function fromGL (gl:#if lime_opengl Class<GL> #else Dynamic #end):GLES2Context {\n\t\t\n\t\t#if lime_opengl\n\t\treturn cast GL.context;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.opengl;\n\n\nimport haxe.Int64;\nimport haxe.io.Bytes;\nimport lime.utils.DataPointer;\nimport lime.utils.Float32Array;\nimport lime.utils.Int32Array;\n\n\nabstract GLES3Context(GLRenderContext) from GLRenderContext to GLRenderContext to GLES2Context to WebGL2Context to WebGLContext {\n\t\n\t\n\tprivate static var __extensions:String;\n\t\n\tpublic var EXTENSIONS (get, never):Int;\n\t\n\tpublic var DEPTH_BUFFER_BIT (get, never):Int;\n\tpublic var STENCIL_BUFFER_BIT (get, never):Int;\n\tpublic var COLOR_BUFFER_BIT (get, never):Int;\n\t\n\tpublic var POINTS (get, never):Int;\n\tpublic var LINES (get, never):Int;\n\tpublic var LINE_LOOP (get, never):Int;\n\tpublic var LINE_STRIP (get, never):Int;\n\tpublic var TRIANGLES (get, never):Int;\n\tpublic var TRIANGLE_STRIP (get, never):Int;\n\tpublic var TRIANGLE_FAN (get, never):Int;\n\t\n\tpublic var ZERO (get, never):Int;\n\tpublic var ONE (get, never):Int;\n\tpublic var SRC_COLOR (get, never):Int;\n\tpublic var ONE_MINUS_SRC_COLOR (get, never):Int;\n\tpublic var SRC_ALPHA (get, never):Int;\n\tpublic var ONE_MINUS_SRC_ALPHA (get, never):Int;\n\tpublic var DST_ALPHA (get, never):Int;\n\tpublic var ONE_MINUS_DST_ALPHA (get, never):Int;\n\t\n\tpublic var DST_COLOR (get, never):Int;\n\tpublic var ONE_MINUS_DST_COLOR (get, never):Int;\n\tpublic var SRC_ALPHA_SATURATE (get, never):Int;\n\t\n\tpublic var FUNC_ADD (get, never):Int;\n\tpublic var BLEND_EQUATION (get, never):Int;\n\tpublic var BLEND_EQUATION_RGB (get, never):Int;\n\tpublic var BLEND_EQUATION_ALPHA (get, never):Int;\n\t\n\tpublic var FUNC_SUBTRACT (get, never):Int;\n\tpublic var FUNC_REVERSE_SUBTRACT (get, never):Int;\n\t\n\tpublic var BLEND_DST_RGB (get, never):Int;\n\tpublic var BLEND_SRC_RGB (get, never):Int;\n\tpublic var BLEND_DST_ALPHA (get, never):Int;\n\tpublic var BLEND_SRC_ALPHA (get, never):Int;\n\tpublic var CONSTANT_COLOR (get, never):Int;\n\tpublic var ONE_MINUS_CONSTANT_COLOR (get, never):Int;\n\tpublic var CONSTANT_ALPHA (get, never):Int;\n\tpublic var ONE_MINUS_CONSTANT_ALPHA (get, never):Int;\n\tpublic var BLEND_COLOR (get, never):Int;\n\t\n\tpublic var ARRAY_BUFFER (get, never):Int;\n\tpublic var ELEMENT_ARRAY_BUFFER (get, never):Int;\n\tpublic var ARRAY_BUFFER_BINDING (get, never):Int;\n\tpublic var ELEMENT_ARRAY_BUFFER_BINDING (get, never):Int;\n\t\n\tpublic var STREAM_DRAW (get, never):Int;\n\tpublic var STATIC_DRAW (get, never):Int;\n\tpublic var DYNAMIC_DRAW (get, never):Int;\n\t\n\tpublic var BUFFER_SIZE (get, never):Int;\n\tpublic var BUFFER_USAGE (get, never):Int;\n\t\n\tpublic var CURRENT_VERTEX_ATTRIB (get, never):Int;\n\t\n\tpublic var FRONT (get, never):Int;\n\tpublic var BACK (get, never):Int;\n\tpublic var FRONT_AND_BACK (get, never):Int;\n\t\n\tpublic var CULL_FACE (get, never):Int;\n\tpublic var BLEND (get, never):Int;\n\tpublic var DITHER (get, never):Int;\n\tpublic var STENCIL_TEST (get, never):Int;\n\tpublic var DEPTH_TEST (get, never):Int;\n\tpublic var SCISSOR_TEST (get, never):Int;\n\tpublic var POLYGON_OFFSET_FILL (get, never):Int;\n\tpublic var SAMPLE_ALPHA_TO_COVERAGE (get, never):Int;\n\tpublic var SAMPLE_COVERAGE (get, never):Int;\n\t\n\tpublic var NO_ERROR (get, never):Int;\n\tpublic var INVALID_ENUM (get, never):Int;\n\tpublic var INVALID_VALUE (get, never):Int;\n\tpublic var INVALID_OPERATION (get, never):Int;\n\tpublic var OUT_OF_MEMORY (get, never):Int;\n\t\n\tpublic var CW  (get, never):Int;\n\tpublic var CCW (get, never):Int;\n\t\n\tpublic var LINE_WIDTH (get, never):Int;\n\tpublic var ALIASED_POINT_SIZE_RANGE (get, never):Int;\n\tpublic var ALIASED_LINE_WIDTH_RANGE (get, never):Int;\n\tpublic var CULL_FACE_MODE (get, never):Int;\n\tpublic var FRONT_FACE (get, never):Int;\n\tpublic var DEPTH_RANGE (get, never):Int;\n\tpublic var DEPTH_WRITEMASK (get, never):Int;\n\tpublic var DEPTH_CLEAR_VALUE (get, never):Int;\n\tpublic var DEPTH_FUNC (get, never):Int;\n\tpublic var STENCIL_CLEAR_VALUE (get, never):Int;\n\tpublic var STENCIL_FUNC (get, never):Int;\n\tpublic var STENCIL_FAIL (get, never):Int;\n\tpublic var STENCIL_PASS_DEPTH_FAIL (get, never):Int;\n\tpublic var STENCIL_PASS_DEPTH_PASS (get, never):Int;\n\tpublic var STENCIL_REF (get, never):Int;\n\tpublic var STENCIL_VALUE_MASK (get, never):Int;\n\tpublic var STENCIL_WRITEMASK (get, never):Int;\n\tpublic var STENCIL_BACK_FUNC (get, never):Int;\n\tpublic var STENCIL_BACK_FAIL (get, never):Int;\n\tpublic var STENCIL_BACK_PASS_DEPTH_FAIL (get, never):Int;\n\tpublic var STENCIL_BACK_PASS_DEPTH_PASS (get, never):Int;\n\tpublic var STENCIL_BACK_REF (get, never):Int;\n\tpublic var STENCIL_BACK_VALUE_MASK (get, never):Int;\n\tpublic var STENCIL_BACK_WRITEMASK (get, never):Int;\n\tpublic var VIEWPORT (get, never):Int;\n\tpublic var SCISSOR_BOX (get, never):Int;\n\t\n\tpublic var COLOR_CLEAR_VALUE (get, never):Int;\n\tpublic var COLOR_WRITEMASK (get, never):Int;\n\tpublic var UNPACK_ALIGNMENT (get, never):Int;\n\tpublic var PACK_ALIGNMENT (get, never):Int;\n\tpublic var MAX_TEXTURE_SIZE (get, never):Int;\n\tpublic var MAX_VIEWPORT_DIMS (get, never):Int;\n\tpublic var SUBPIXEL_BITS (get, never):Int;\n\tpublic var RED_BITS (get, never):Int;\n\tpublic var GREEN_BITS (get, never):Int;\n\tpublic var BLUE_BITS (get, never):Int;\n\tpublic var ALPHA_BITS (get, never):Int;\n\tpublic var DEPTH_BITS (get, never):Int;\n\tpublic var STENCIL_BITS (get, never):Int;\n\tpublic var POLYGON_OFFSET_UNITS (get, never):Int;\n\t\n\tpublic var POLYGON_OFFSET_FACTOR (get, never):Int;\n\tpublic var TEXTURE_BINDING_2D (get, never):Int;\n\tpublic var SAMPLE_BUFFERS (get, never):Int;\n\tpublic var SAMPLES (get, never):Int;\n\tpublic var SAMPLE_COVERAGE_VALUE (get, never):Int;\n\tpublic var SAMPLE_COVERAGE_INVERT (get, never):Int;\n\t\n\tpublic var COMPRESSED_TEXTURE_FORMATS (get, never):Int;\n\t\n\tpublic var DONT_CARE (get, never):Int;\n\tpublic var FASTEST (get, never):Int;\n\tpublic var NICEST (get, never):Int;\n\t\n\tpublic var GENERATE_MIPMAP_HINT (get, never):Int;\n\t\n\tpublic var BYTE (get, never):Int;\n\tpublic var UNSIGNED_BYTE (get, never):Int;\n\tpublic var SHORT (get, never):Int;\n\tpublic var UNSIGNED_SHORT (get, never):Int;\n\tpublic var INT (get, never):Int;\n\tpublic var UNSIGNED_INT (get, never):Int;\n\tpublic var FLOAT (get, never):Int;\n\t\n\tpublic var DEPTH_COMPONENT (get, never):Int;\n\tpublic var ALPHA (get, never):Int;\n\tpublic var RGB (get, never):Int;\n\tpublic var RGBA (get, never):Int;\n\tpublic var LUMINANCE (get, never):Int;\n\tpublic var LUMINANCE_ALPHA (get, never):Int;\n\t\n\tpublic var UNSIGNED_SHORT_4_4_4_4 (get, never):Int;\n\tpublic var UNSIGNED_SHORT_5_5_5_1 (get, never):Int;\n\tpublic var UNSIGNED_SHORT_5_6_5 (get, never):Int;\n\t\n\tpublic var FRAGMENT_SHADER (get, never):Int;\n\tpublic var VERTEX_SHADER (get, never):Int;\n\tpublic var MAX_VERTEX_ATTRIBS (get, never):Int;\n\tpublic var MAX_VERTEX_UNIFORM_VECTORS (get, never):Int;\n\tpublic var MAX_VARYING_VECTORS (get, never):Int;\n\tpublic var MAX_COMBINED_TEXTURE_IMAGE_UNITS (get, never):Int;\n\tpublic var MAX_VERTEX_TEXTURE_IMAGE_UNITS (get, never):Int;\n\tpublic var MAX_TEXTURE_IMAGE_UNITS (get, never):Int;\n\tpublic var MAX_FRAGMENT_UNIFORM_VECTORS (get, never):Int;\n\tpublic var SHADER_TYPE (get, never):Int;\n\tpublic var DELETE_STATUS (get, never):Int;\n\tpublic var LINK_STATUS (get, never):Int;\n\tpublic var VALIDATE_STATUS (get, never):Int;\n\tpublic var ATTACHED_SHADERS (get, never):Int;\n\tpublic var ACTIVE_UNIFORMS (get, never):Int;\n\tpublic var ACTIVE_ATTRIBUTES (get, never):Int;\n\tpublic var SHADING_LANGUAGE_VERSION (get, never):Int;\n\tpublic var CURRENT_PROGRAM (get, never):Int;\n\t\n\tpublic var NEVER (get, never):Int;\n\tpublic var LESS (get, never):Int;\n\tpublic var EQUAL (get, never):Int;\n\tpublic var LEQUAL (get, never):Int;\n\tpublic var GREATER (get, never):Int;\n\tpublic var NOTEQUAL (get, never):Int;\n\tpublic var GEQUAL (get, never):Int;\n\tpublic var ALWAYS (get, never):Int;\n\t\n\tpublic var KEEP (get, never):Int;\n\tpublic var REPLACE (get, never):Int;\n\tpublic var INCR (get, never):Int;\n\tpublic var DECR (get, never):Int;\n\tpublic var INVERT (get, never):Int;\n\tpublic var INCR_WRAP (get, never):Int;\n\tpublic var DECR_WRAP (get, never):Int;\n\t\n\tpublic var VENDOR (get, never):Int;\n\tpublic var RENDERER (get, never):Int;\n\tpublic var VERSION (get, never):Int;\n\t\n\tpublic var NEAREST (get, never):Int;\n\tpublic var LINEAR (get, never):Int;\n\t\n\tpublic var NEAREST_MIPMAP_NEAREST (get, never):Int;\n\tpublic var LINEAR_MIPMAP_NEAREST (get, never):Int;\n\tpublic var NEAREST_MIPMAP_LINEAR (get, never):Int;\n\tpublic var LINEAR_MIPMAP_LINEAR (get, never):Int;\n\t\n\tpublic var TEXTURE_MAG_FILTER (get, never):Int;\n\tpublic var TEXTURE_MIN_FILTER (get, never):Int;\n\tpublic var TEXTURE_WRAP_S (get, never):Int;\n\tpublic var TEXTURE_WRAP_T (get, never):Int;\n\t\n\tpublic var TEXTURE_2D (get, never):Int;\n\tpublic var TEXTURE (get, never):Int;\n\t\n\tpublic var TEXTURE_CUBE_MAP (get, never):Int;\n\tpublic var TEXTURE_BINDING_CUBE_MAP (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_POSITIVE_X (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_NEGATIVE_X (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_POSITIVE_Y (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_NEGATIVE_Y (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_POSITIVE_Z (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_NEGATIVE_Z (get, never):Int;\n\tpublic var MAX_CUBE_MAP_TEXTURE_SIZE (get, never):Int;\n\t\n\tpublic var TEXTURE0 (get, never):Int;\n\tpublic var TEXTURE1 (get, never):Int;\n\tpublic var TEXTURE2 (get, never):Int;\n\tpublic var TEXTURE3 (get, never):Int;\n\tpublic var TEXTURE4 (get, never):Int;\n\tpublic var TEXTURE5 (get, never):Int;\n\tpublic var TEXTURE6 (get, never):Int;\n\tpublic var TEXTURE7 (get, never):Int;\n\tpublic var TEXTURE8 (get, never):Int;\n\tpublic var TEXTURE9 (get, never):Int;\n\tpublic var TEXTURE10 (get, never):Int;\n\tpublic var TEXTURE11 (get, never):Int;\n\tpublic var TEXTURE12 (get, never):Int;\n\tpublic var TEXTURE13 (get, never):Int;\n\tpublic var TEXTURE14 (get, never):Int;\n\tpublic var TEXTURE15 (get, never):Int;\n\tpublic var TEXTURE16 (get, never):Int;\n\tpublic var TEXTURE17 (get, never):Int;\n\tpublic var TEXTURE18 (get, never):Int;\n\tpublic var TEXTURE19 (get, never):Int;\n\tpublic var TEXTURE20 (get, never):Int;\n\tpublic var TEXTURE21 (get, never):Int;\n\tpublic var TEXTURE22 (get, never):Int;\n\tpublic var TEXTURE23 (get, never):Int;\n\tpublic var TEXTURE24 (get, never):Int;\n\tpublic var TEXTURE25 (get, never):Int;\n\tpublic var TEXTURE26 (get, never):Int;\n\tpublic var TEXTURE27 (get, never):Int;\n\tpublic var TEXTURE28 (get, never):Int;\n\tpublic var TEXTURE29 (get, never):Int;\n\tpublic var TEXTURE30 (get, never):Int;\n\tpublic var TEXTURE31 (get, never):Int;\n\tpublic var ACTIVE_TEXTURE (get, never):Int;\n\t\n\tpublic var REPEAT (get, never):Int;\n\tpublic var CLAMP_TO_EDGE (get, never):Int;\n\tpublic var MIRRORED_REPEAT (get, never):Int;\n\t\n\tpublic var FLOAT_VEC2 (get, never):Int;\n\tpublic var FLOAT_VEC3 (get, never):Int;\n\tpublic var FLOAT_VEC4 (get, never):Int;\n\tpublic var INT_VEC2 (get, never):Int;\n\tpublic var INT_VEC3 (get, never):Int;\n\tpublic var INT_VEC4 (get, never):Int;\n\tpublic var BOOL (get, never):Int;\n\tpublic var BOOL_VEC2 (get, never):Int;\n\tpublic var BOOL_VEC3 (get, never):Int;\n\tpublic var BOOL_VEC4 (get, never):Int;\n\tpublic var FLOAT_MAT2 (get, never):Int;\n\tpublic var FLOAT_MAT3 (get, never):Int;\n\tpublic var FLOAT_MAT4 (get, never):Int;\n\tpublic var SAMPLER_2D (get, never):Int;\n\tpublic var SAMPLER_CUBE (get, never):Int;\n\t\n\tpublic var VERTEX_ATTRIB_ARRAY_ENABLED (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_SIZE (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_STRIDE (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_TYPE (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_NORMALIZED (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_POINTER (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING (get, never):Int;\n\t\n\tpublic var VERTEX_PROGRAM_POINT_SIZE (get, never):Int;\n\tpublic var POINT_SPRITE (get, never):Int;\n\t\n\tpublic var COMPILE_STATUS (get, never):Int;\n\t\n\tpublic var LOW_FLOAT (get, never):Int;\n\tpublic var MEDIUM_FLOAT (get, never):Int;\n\tpublic var HIGH_FLOAT (get, never):Int;\n\tpublic var LOW_INT (get, never):Int;\n\tpublic var MEDIUM_INT (get, never):Int;\n\tpublic var HIGH_INT (get, never):Int;\n\t\n\tpublic var FRAMEBUFFER (get, never):Int;\n\tpublic var RENDERBUFFER (get, never):Int;\n\t\n\tpublic var RGBA4 (get, never):Int;\n\tpublic var RGB5_A1 (get, never):Int;\n\tpublic var RGB565 (get, never):Int;\n\tpublic var DEPTH_COMPONENT16 (get, never):Int;\n\tpublic var STENCIL_INDEX (get, never):Int;\n\tpublic var STENCIL_INDEX8 (get, never):Int;\n\tpublic var DEPTH_STENCIL (get, never):Int;\n\t\n\tpublic var RENDERBUFFER_WIDTH (get, never):Int;\n\tpublic var RENDERBUFFER_HEIGHT (get, never):Int;\n\tpublic var RENDERBUFFER_INTERNAL_FORMAT (get, never):Int;\n\tpublic var RENDERBUFFER_RED_SIZE (get, never):Int;\n\tpublic var RENDERBUFFER_GREEN_SIZE (get, never):Int;\n\tpublic var RENDERBUFFER_BLUE_SIZE (get, never):Int;\n\tpublic var RENDERBUFFER_ALPHA_SIZE (get, never):Int;\n\tpublic var RENDERBUFFER_DEPTH_SIZE (get, never):Int;\n\tpublic var RENDERBUFFER_STENCIL_SIZE (get, never):Int;\n\t\n\tpublic var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE (get, never):Int;\n\t\n\tpublic var COLOR_ATTACHMENT0 (get, never):Int;\n\tpublic var DEPTH_ATTACHMENT (get, never):Int;\n\tpublic var STENCIL_ATTACHMENT (get, never):Int;\n\tpublic var DEPTH_STENCIL_ATTACHMENT (get, never):Int;\n\t\n\tpublic var NONE (get, never):Int;\n\t\n\tpublic var FRAMEBUFFER_COMPLETE (get, never):Int;\n\tpublic var FRAMEBUFFER_INCOMPLETE_ATTACHMENT (get, never):Int;\n\tpublic var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT (get, never):Int;\n\tpublic var FRAMEBUFFER_INCOMPLETE_DIMENSIONS (get, never):Int;\n\tpublic var FRAMEBUFFER_UNSUPPORTED (get, never):Int;\n\t\n\tpublic var FRAMEBUFFER_BINDING (get, never):Int;\n\tpublic var RENDERBUFFER_BINDING (get, never):Int;\n\tpublic var MAX_RENDERBUFFER_SIZE (get, never):Int;\n\t\n\tpublic var INVALID_FRAMEBUFFER_OPERATION (get, never):Int;\n\t\n\tpublic var UNPACK_FLIP_Y_WEBGL (get, never):Int;\n\tpublic var UNPACK_PREMULTIPLY_ALPHA_WEBGL (get, never):Int;\n\tpublic var CONTEXT_LOST_WEBGL (get, never):Int;\n\tpublic var UNPACK_COLORSPACE_CONVERSION_WEBGL (get, never):Int;\n\tpublic var BROWSER_DEFAULT_WEBGL (get, never):Int;\n\t\n\tpublic var READ_BUFFER (get, never):Int;\n\tpublic var UNPACK_ROW_LENGTH (get, never):Int;\n\tpublic var UNPACK_SKIP_ROWS (get, never):Int;\n\tpublic var UNPACK_SKIP_PIXELS (get, never):Int;\n\tpublic var PACK_ROW_LENGTH (get, never):Int;\n\tpublic var PACK_SKIP_ROWS (get, never):Int;\n\tpublic var PACK_SKIP_PIXELS (get, never):Int;\n\tpublic var TEXTURE_BINDING_3D (get, never):Int;\n\tpublic var UNPACK_SKIP_IMAGES (get, never):Int;\n\tpublic var UNPACK_IMAGE_HEIGHT (get, never):Int;\n\tpublic var MAX_3D_TEXTURE_SIZE (get, never):Int;\n\tpublic var MAX_ELEMENTS_VERTICES (get, never):Int;\n\tpublic var MAX_ELEMENTS_INDICES (get, never):Int;\n\tpublic var MAX_TEXTURE_LOD_BIAS (get, never):Int;\n\tpublic var MAX_FRAGMENT_UNIFORM_COMPONENTS (get, never):Int;\n\tpublic var MAX_VERTEX_UNIFORM_COMPONENTS (get, never):Int;\n\tpublic var MAX_ARRAY_TEXTURE_LAYERS (get, never):Int;\n\tpublic var MIN_PROGRAM_TEXEL_OFFSET (get, never):Int;\n\tpublic var MAX_PROGRAM_TEXEL_OFFSET (get, never):Int;\n\tpublic var MAX_VARYING_COMPONENTS (get, never):Int;\n\tpublic var FRAGMENT_SHADER_DERIVATIVE_HINT (get, never):Int;\n\tpublic var RASTERIZER_DISCARD (get, never):Int;\n\tpublic var VERTEX_ARRAY_BINDING (get, never):Int;\n\tpublic var MAX_VERTEX_OUTPUT_COMPONENTS (get, never):Int;\n\tpublic var MAX_FRAGMENT_INPUT_COMPONENTS (get, never):Int;\n\tpublic var MAX_SERVER_WAIT_TIMEOUT (get, never):Int;\n\tpublic var MAX_ELEMENT_INDEX (get, never):Int;\n\t\n\tpublic var RED (get, never):Int;\n\tpublic var RGB8 (get, never):Int;\n\tpublic var RGBA8 (get, never):Int;\n\tpublic var RGB10_A2 (get, never):Int;\n\tpublic var TEXTURE_3D (get, never):Int;\n\tpublic var TEXTURE_WRAP_R (get, never):Int;\n\tpublic var TEXTURE_MIN_LOD (get, never):Int;\n\tpublic var TEXTURE_MAX_LOD (get, never):Int;\n\tpublic var TEXTURE_BASE_LEVEL (get, never):Int;\n\tpublic var TEXTURE_MAX_LEVEL (get, never):Int;\n\tpublic var TEXTURE_COMPARE_MODE (get, never):Int;\n\tpublic var TEXTURE_COMPARE_FUNC (get, never):Int;\n\tpublic var SRGB (get, never):Int;\n\tpublic var SRGB8 (get, never):Int;\n\tpublic var SRGB8_ALPHA8 (get, never):Int;\n\tpublic var COMPARE_REF_TO_TEXTURE (get, never):Int;\n\tpublic var RGBA32F (get, never):Int;\n\tpublic var RGB32F (get, never):Int;\n\tpublic var RGBA16F (get, never):Int;\n\tpublic var RGB16F (get, never):Int;\n\tpublic var TEXTURE_2D_ARRAY (get, never):Int;\n\tpublic var TEXTURE_BINDING_2D_ARRAY (get, never):Int;\n\tpublic var R11F_G11F_B10F (get, never):Int;\n\tpublic var RGB9_E5 (get, never):Int;\n\tpublic var RGBA32UI (get, never):Int;\n\tpublic var RGB32UI (get, never):Int;\n\tpublic var RGBA16UI (get, never):Int;\n\tpublic var RGB16UI (get, never):Int;\n\tpublic var RGBA8UI (get, never):Int;\n\tpublic var RGB8UI (get, never):Int;\n\tpublic var RGBA32I (get, never):Int;\n\tpublic var RGB32I (get, never):Int;\n\tpublic var RGBA16I (get, never):Int;\n\tpublic var RGB16I (get, never):Int;\n\tpublic var RGBA8I (get, never):Int;\n\tpublic var RGB8I (get, never):Int;\n\tpublic var RED_INTEGER (get, never):Int;\n\tpublic var RGB_INTEGER (get, never):Int;\n\tpublic var RGBA_INTEGER (get, never):Int;\n\tpublic var R8 (get, never):Int;\n\tpublic var RG8 (get, never):Int;\n\tpublic var R16F (get, never):Int;\n\tpublic var R32F (get, never):Int;\n\tpublic var RG16F (get, never):Int;\n\tpublic var RG32F (get, never):Int;\n\tpublic var R8I (get, never):Int;\n\tpublic var R8UI (get, never):Int;\n\tpublic var R16I (get, never):Int;\n\tpublic var R16UI (get, never):Int;\n\tpublic var R32I (get, never):Int;\n\tpublic var R32UI (get, never):Int;\n\tpublic var RG8I (get, never):Int;\n\tpublic var RG8UI (get, never):Int;\n\tpublic var RG16I (get, never):Int;\n\tpublic var RG16UI (get, never):Int;\n\tpublic var RG32I (get, never):Int;\n\tpublic var RG32UI (get, never):Int;\n\tpublic var R8_SNORM (get, never):Int;\n\tpublic var RG8_SNORM (get, never):Int;\n\tpublic var RGB8_SNORM (get, never):Int;\n\tpublic var RGBA8_SNORM (get, never):Int;\n\tpublic var RGB10_A2UI (get, never):Int;\n\tpublic var TEXTURE_IMMUTABLE_FORMAT (get, never):Int;\n\tpublic var TEXTURE_IMMUTABLE_LEVELS (get, never):Int;\n\t\n\tpublic var UNSIGNED_INT_2_10_10_10_REV (get, never):Int;\n\tpublic var UNSIGNED_INT_10F_11F_11F_REV (get, never):Int;\n\tpublic var UNSIGNED_INT_5_9_9_9_REV (get, never):Int;\n\tpublic var FLOAT_32_UNSIGNED_INT_24_8_REV (get, never):Int;\n\tpublic var UNSIGNED_INT_24_8 (get, never):Int;\n\tpublic var HALF_FLOAT (get, never):Int;\n\tpublic var RG (get, never):Int;\n\tpublic var RG_INTEGER (get, never):Int;\n\tpublic var INT_2_10_10_10_REV (get, never):Int;\n\t\n\tpublic var CURRENT_QUERY (get, never):Int;\n\tpublic var QUERY_RESULT (get, never):Int;\n\tpublic var QUERY_RESULT_AVAILABLE (get, never):Int;\n\tpublic var ANY_SAMPLES_PASSED (get, never):Int;\n\tpublic var ANY_SAMPLES_PASSED_CONSERVATIVE (get, never):Int;\n\t\n\tpublic var MAX_DRAW_BUFFERS (get, never):Int;\n\tpublic var DRAW_BUFFER0 (get, never):Int;\n\tpublic var DRAW_BUFFER1 (get, never):Int;\n\tpublic var DRAW_BUFFER2 (get, never):Int;\n\tpublic var DRAW_BUFFER3 (get, never):Int;\n\tpublic var DRAW_BUFFER4 (get, never):Int;\n\tpublic var DRAW_BUFFER5 (get, never):Int;\n\tpublic var DRAW_BUFFER6 (get, never):Int;\n\tpublic var DRAW_BUFFER7 (get, never):Int;\n\tpublic var DRAW_BUFFER8 (get, never):Int;\n\tpublic var DRAW_BUFFER9 (get, never):Int;\n\tpublic var DRAW_BUFFER10 (get, never):Int;\n\tpublic var DRAW_BUFFER11 (get, never):Int;\n\tpublic var DRAW_BUFFER12 (get, never):Int;\n\tpublic var DRAW_BUFFER13 (get, never):Int;\n\tpublic var DRAW_BUFFER14 (get, never):Int;\n\tpublic var DRAW_BUFFER15 (get, never):Int;\n\tpublic var MAX_COLOR_ATTACHMENTS (get, never):Int;\n\tpublic var COLOR_ATTACHMENT1 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT2 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT3 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT4 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT5 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT6 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT7 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT8 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT9 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT10 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT11 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT12 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT13 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT14 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT15 (get, never):Int;\n\t\n\tpublic var SAMPLER_3D (get, never):Int;\n\tpublic var SAMPLER_2D_SHADOW (get, never):Int;\n\tpublic var SAMPLER_2D_ARRAY (get, never):Int;\n\tpublic var SAMPLER_2D_ARRAY_SHADOW (get, never):Int;\n\tpublic var SAMPLER_CUBE_SHADOW (get, never):Int;\n\tpublic var INT_SAMPLER_2D (get, never):Int;\n\tpublic var INT_SAMPLER_3D (get, never):Int;\n\tpublic var INT_SAMPLER_CUBE (get, never):Int;\n\tpublic var INT_SAMPLER_2D_ARRAY (get, never):Int;\n\tpublic var UNSIGNED_INT_SAMPLER_2D (get, never):Int;\n\tpublic var UNSIGNED_INT_SAMPLER_3D (get, never):Int;\n\tpublic var UNSIGNED_INT_SAMPLER_CUBE (get, never):Int;\n\tpublic var UNSIGNED_INT_SAMPLER_2D_ARRAY (get, never):Int;\n\tpublic var MAX_SAMPLES (get, never):Int;\n\tpublic var SAMPLER_BINDING (get, never):Int;\n\t\n\tpublic var PIXEL_PACK_BUFFER (get, never):Int;\n\tpublic var PIXEL_UNPACK_BUFFER (get, never):Int;\n\tpublic var PIXEL_PACK_BUFFER_BINDING (get, never):Int;\n\tpublic var PIXEL_UNPACK_BUFFER_BINDING (get, never):Int;\n\tpublic var COPY_READ_BUFFER (get, never):Int;\n\tpublic var COPY_WRITE_BUFFER (get, never):Int;\n\tpublic var COPY_READ_BUFFER_BINDING (get, never):Int;\n\tpublic var COPY_WRITE_BUFFER_BINDING (get, never):Int;\n\t\n\tpublic var FLOAT_MAT2x3 (get, never):Int;\n\tpublic var FLOAT_MAT2x4 (get, never):Int;\n\tpublic var FLOAT_MAT3x2 (get, never):Int;\n\tpublic var FLOAT_MAT3x4 (get, never):Int;\n\tpublic var FLOAT_MAT4x2 (get, never):Int;\n\tpublic var FLOAT_MAT4x3 (get, never):Int;\n\tpublic var UNSIGNED_INT_VEC2 (get, never):Int;\n\tpublic var UNSIGNED_INT_VEC3 (get, never):Int;\n\tpublic var UNSIGNED_INT_VEC4 (get, never):Int;\n\tpublic var UNSIGNED_NORMALIZED (get, never):Int;\n\tpublic var SIGNED_NORMALIZED (get, never):Int;\n\t\n\tpublic var VERTEX_ATTRIB_ARRAY_INTEGER (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_DIVISOR (get, never):Int;\n\t\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_MODE (get, never):Int;\n\tpublic var MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_VARYINGS (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_START (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_SIZE (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN (get, never):Int;\n\tpublic var MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS (get, never):Int;\n\tpublic var MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS (get, never):Int;\n\tpublic var INTERLEAVED_ATTRIBS (get, never):Int;\n\tpublic var SEPARATE_ATTRIBS (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_BINDING (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_PAUSED (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_ACTIVE (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_BINDING (get, never):Int;\n\t\n\tpublic var FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_RED_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_GREEN_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_BLUE_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_DEFAULT (get, never):Int;\n\tpublic var DEPTH24_STENCIL8 (get, never):Int;\n\tpublic var DRAW_FRAMEBUFFER_BINDING (get, never):Int;\n\tpublic var READ_FRAMEBUFFER (get, never):Int;\n\tpublic var DRAW_FRAMEBUFFER (get, never):Int;\n\tpublic var READ_FRAMEBUFFER_BINDING (get, never):Int;\n\tpublic var RENDERBUFFER_SAMPLES (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER (get, never):Int;\n\tpublic var FRAMEBUFFER_INCOMPLETE_MULTISAMPLE (get, never):Int;\n\t\n\tpublic var UNIFORM_BUFFER (get, never):Int;\n\tpublic var UNIFORM_BUFFER_BINDING (get, never):Int;\n\tpublic var UNIFORM_BUFFER_START (get, never):Int;\n\tpublic var UNIFORM_BUFFER_SIZE (get, never):Int;\n\tpublic var MAX_VERTEX_UNIFORM_BLOCKS (get, never):Int;\n\tpublic var MAX_FRAGMENT_UNIFORM_BLOCKS (get, never):Int;\n\tpublic var MAX_COMBINED_UNIFORM_BLOCKS (get, never):Int;\n\tpublic var MAX_UNIFORM_BUFFER_BINDINGS (get, never):Int;\n\tpublic var MAX_UNIFORM_BLOCK_SIZE (get, never):Int;\n\tpublic var MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS (get, never):Int;\n\tpublic var MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS (get, never):Int;\n\tpublic var UNIFORM_BUFFER_OFFSET_ALIGNMENT (get, never):Int;\n\tpublic var ACTIVE_UNIFORM_BLOCKS (get, never):Int;\n\tpublic var UNIFORM_TYPE (get, never):Int;\n\tpublic var UNIFORM_SIZE (get, never):Int;\n\tpublic var UNIFORM_BLOCK_INDEX (get, never):Int;\n\tpublic var UNIFORM_OFFSET (get, never):Int;\n\tpublic var UNIFORM_ARRAY_STRIDE (get, never):Int;\n\tpublic var UNIFORM_MATRIX_STRIDE (get, never):Int;\n\tpublic var UNIFORM_IS_ROW_MAJOR (get, never):Int;\n\tpublic var UNIFORM_BLOCK_BINDING (get, never):Int;\n\tpublic var UNIFORM_BLOCK_DATA_SIZE (get, never):Int;\n\tpublic var UNIFORM_BLOCK_ACTIVE_UNIFORMS (get, never):Int;\n\tpublic var UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES (get, never):Int;\n\tpublic var UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER (get, never):Int;\n\tpublic var UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER (get, never):Int;\n\t\n\tpublic var OBJECT_TYPE (get, never):Int;\n\tpublic var SYNC_CONDITION (get, never):Int;\n\tpublic var SYNC_STATUS (get, never):Int;\n\tpublic var SYNC_FLAGS (get, never):Int;\n\tpublic var SYNC_FENCE (get, never):Int;\n\tpublic var SYNC_GPU_COMMANDS_COMPLETE (get, never):Int;\n\tpublic var UNSIGNALED (get, never):Int;\n\tpublic var SIGNALED (get, never):Int;\n\tpublic var ALREADY_SIGNALED (get, never):Int;\n\tpublic var TIMEOUT_EXPIRED (get, never):Int;\n\tpublic var CONDITION_SATISFIED (get, never):Int;\n\tpublic var WAIT_FAILED (get, never):Int;\n\tpublic var SYNC_FLUSH_COMMANDS_BIT (get, never):Int;\n\t\n\tpublic var COLOR (get, never):Int;\n\tpublic var DEPTH (get, never):Int;\n\tpublic var STENCIL (get, never):Int;\n\tpublic var MIN (get, never):Int;\n\tpublic var MAX (get, never):Int;\n\tpublic var DEPTH_COMPONENT24 (get, never):Int;\n\tpublic var STREAM_READ (get, never):Int;\n\tpublic var STREAM_COPY (get, never):Int;\n\tpublic var STATIC_READ (get, never):Int;\n\tpublic var STATIC_COPY (get, never):Int;\n\tpublic var DYNAMIC_READ (get, never):Int;\n\tpublic var DYNAMIC_COPY (get, never):Int;\n\tpublic var DEPTH_COMPONENT32F (get, never):Int;\n\tpublic var DEPTH32F_STENCIL8 (get, never):Int;\n\tpublic var INVALID_INDEX (get, never):Int;\n\tpublic var TIMEOUT_IGNORED (get, never):Int;\n\tpublic var MAX_CLIENT_WAIT_TIMEOUT_WEBGL (get, never):Int;\n\t\n\tpublic var type (get, never):GLContextType;\n\tpublic var version (get, never):Float;\n\t\n\tprivate inline function get_EXTENSIONS ():Int { return 0x1F03; }\n\tprivate inline function get_DEPTH_BUFFER_BIT ():Int { return this.DEPTH_BUFFER_BIT; }\n\tprivate inline function get_STENCIL_BUFFER_BIT ():Int { return this.STENCIL_BUFFER_BIT; }\n\tprivate inline function get_COLOR_BUFFER_BIT ():Int { return this.COLOR_BUFFER_BIT; }\n\tprivate inline function get_POINTS ():Int { return this.POINTS; }\n\tprivate inline function get_LINES ():Int { return this.LINES; }\n\tprivate inline function get_LINE_LOOP ():Int { return this.LINE_LOOP; }\n\tprivate inline function get_LINE_STRIP ():Int { return this.LINE_STRIP; }\n\tprivate inline function get_TRIANGLES ():Int { return this.TRIANGLES; }\n\tprivate inline function get_TRIANGLE_STRIP ():Int { return this.TRIANGLE_STRIP; }\n\tprivate inline function get_TRIANGLE_FAN ():Int { return this.TRIANGLE_FAN; }\n\tprivate inline function get_ZERO ():Int { return this.ZERO; }\n\tprivate inline function get_ONE ():Int { return this.ONE; }\n\tprivate inline function get_SRC_COLOR ():Int { return this.SRC_COLOR; }\n\tprivate inline function get_ONE_MINUS_SRC_COLOR ():Int { return this.ONE_MINUS_SRC_COLOR; }\n\tprivate inline function get_SRC_ALPHA ():Int { return this.SRC_ALPHA; }\n\tprivate inline function get_ONE_MINUS_SRC_ALPHA ():Int { return this.ONE_MINUS_SRC_ALPHA; }\n\tprivate inline function get_DST_ALPHA ():Int { return this.DST_ALPHA; }\n\tprivate inline function get_ONE_MINUS_DST_ALPHA ():Int { return this.ONE_MINUS_DST_ALPHA; }\n\tprivate inline function get_DST_COLOR ():Int { return this.DST_COLOR; }\n\tprivate inline function get_ONE_MINUS_DST_COLOR ():Int { return this.ONE_MINUS_DST_COLOR; }\n\tprivate inline function get_SRC_ALPHA_SATURATE ():Int { return this.SRC_ALPHA_SATURATE; }\n\tprivate inline function get_FUNC_ADD ():Int { return this.FUNC_ADD; }\n\tprivate inline function get_BLEND_EQUATION ():Int { return this.BLEND_EQUATION; }\n\tprivate inline function get_BLEND_EQUATION_RGB ():Int { return this.BLEND_EQUATION_RGB; }\n\tprivate inline function get_BLEND_EQUATION_ALPHA ():Int { return this.BLEND_EQUATION_ALPHA; }\n\tprivate inline function get_FUNC_SUBTRACT ():Int { return this.FUNC_SUBTRACT; }\n\tprivate inline function get_FUNC_REVERSE_SUBTRACT ():Int { return this.FUNC_REVERSE_SUBTRACT; }\n\tprivate inline function get_BLEND_DST_RGB ():Int { return this.BLEND_DST_RGB; }\n\tprivate inline function get_BLEND_SRC_RGB ():Int { return this.BLEND_SRC_RGB; }\n\tprivate inline function get_BLEND_DST_ALPHA ():Int { return this.BLEND_DST_ALPHA; }\n\tprivate inline function get_BLEND_SRC_ALPHA ():Int { return this.BLEND_SRC_ALPHA; }\n\tprivate inline function get_CONSTANT_COLOR ():Int { return this.CONSTANT_COLOR; }\n\tprivate inline function get_ONE_MINUS_CONSTANT_COLOR ():Int { return this.ONE_MINUS_CONSTANT_COLOR; }\n\tprivate inline function get_CONSTANT_ALPHA ():Int { return this.CONSTANT_ALPHA; }\n\tprivate inline function get_ONE_MINUS_CONSTANT_ALPHA ():Int { return this.ONE_MINUS_CONSTANT_ALPHA; }\n\tprivate inline function get_BLEND_COLOR ():Int { return this.BLEND_COLOR; }\n\tprivate inline function get_ARRAY_BUFFER ():Int { return this.ARRAY_BUFFER; }\n\tprivate inline function get_ELEMENT_ARRAY_BUFFER ():Int { return this.ELEMENT_ARRAY_BUFFER; }\n\tprivate inline function get_ARRAY_BUFFER_BINDING ():Int { return this.ARRAY_BUFFER_BINDING; }\n\tprivate inline function get_ELEMENT_ARRAY_BUFFER_BINDING ():Int { return this.ELEMENT_ARRAY_BUFFER_BINDING; }\n\tprivate inline function get_STREAM_DRAW ():Int { return this.STREAM_DRAW; }\n\tprivate inline function get_STATIC_DRAW ():Int { return this.STATIC_DRAW; }\n\tprivate inline function get_DYNAMIC_DRAW ():Int { return this.DYNAMIC_DRAW; }\n\tprivate inline function get_BUFFER_SIZE ():Int { return this.BUFFER_SIZE; }\n\tprivate inline function get_BUFFER_USAGE ():Int { return this.BUFFER_USAGE; }\n\tprivate inline function get_CURRENT_VERTEX_ATTRIB ():Int { return this.CURRENT_VERTEX_ATTRIB; }\n\tprivate inline function get_FRONT ():Int { return this.FRONT; }\n\tprivate inline function get_BACK ():Int { return this.BACK; }\n\tprivate inline function get_FRONT_AND_BACK ():Int { return this.FRONT_AND_BACK; }\n\tprivate inline function get_CULL_FACE ():Int { return this.CULL_FACE; }\n\tprivate inline function get_BLEND ():Int { return this.BLEND; }\n\tprivate inline function get_DITHER ():Int { return this.DITHER; }\n\tprivate inline function get_STENCIL_TEST ():Int { return this.STENCIL_TEST; }\n\tprivate inline function get_DEPTH_TEST ():Int { return this.DEPTH_TEST; }\n\tprivate inline function get_SCISSOR_TEST ():Int { return this.SCISSOR_TEST; }\n\tprivate inline function get_POLYGON_OFFSET_FILL ():Int { return this.POLYGON_OFFSET_FILL; }\n\tprivate inline function get_SAMPLE_ALPHA_TO_COVERAGE ():Int { return this.SAMPLE_ALPHA_TO_COVERAGE; }\n\tprivate inline function get_SAMPLE_COVERAGE ():Int { return this.SAMPLE_COVERAGE; }\n\tprivate inline function get_NO_ERROR ():Int { return this.NO_ERROR; }\n\tprivate inline function get_INVALID_ENUM ():Int { return this.INVALID_ENUM; }\n\tprivate inline function get_INVALID_VALUE ():Int { return this.INVALID_VALUE; }\n\tprivate inline function get_INVALID_OPERATION ():Int { return this.INVALID_OPERATION; }\n\tprivate inline function get_OUT_OF_MEMORY ():Int { return this.OUT_OF_MEMORY; }\n\tprivate inline function get_CW ():Int { return this.CW; }\n\tprivate inline function get_CCW ():Int { return this.CCW; }\n\tprivate inline function get_LINE_WIDTH ():Int { return this.LINE_WIDTH; }\n\tprivate inline function get_ALIASED_POINT_SIZE_RANGE ():Int { return this.ALIASED_POINT_SIZE_RANGE; }\n\tprivate inline function get_ALIASED_LINE_WIDTH_RANGE ():Int { return this.ALIASED_LINE_WIDTH_RANGE; }\n\tprivate inline function get_CULL_FACE_MODE ():Int { return this.CULL_FACE_MODE; }\n\tprivate inline function get_FRONT_FACE ():Int { return this.FRONT_FACE; }\n\tprivate inline function get_DEPTH_RANGE ():Int { return this.DEPTH_RANGE; }\n\tprivate inline function get_DEPTH_WRITEMASK ():Int { return this.DEPTH_WRITEMASK; }\n\tprivate inline function get_DEPTH_CLEAR_VALUE ():Int { return this.DEPTH_CLEAR_VALUE; }\n\tprivate inline function get_DEPTH_FUNC ():Int { return this.DEPTH_FUNC; }\n\tprivate inline function get_STENCIL_CLEAR_VALUE ():Int { return this.STENCIL_CLEAR_VALUE; }\n\tprivate inline function get_STENCIL_FUNC ():Int { return this.STENCIL_FUNC; }\n\tprivate inline function get_STENCIL_FAIL ():Int { return this.STENCIL_FAIL; }\n\tprivate inline function get_STENCIL_PASS_DEPTH_FAIL ():Int { return this.STENCIL_PASS_DEPTH_FAIL; }\n\tprivate inline function get_STENCIL_PASS_DEPTH_PASS ():Int { return this.STENCIL_PASS_DEPTH_PASS; }\n\tprivate inline function get_STENCIL_REF ():Int { return this.STENCIL_REF; }\n\tprivate inline function get_STENCIL_VALUE_MASK ():Int { return this.STENCIL_VALUE_MASK; }\n\tprivate inline function get_STENCIL_WRITEMASK ():Int { return this.STENCIL_WRITEMASK; }\n\tprivate inline function get_STENCIL_BACK_FUNC ():Int { return this.STENCIL_BACK_FUNC; }\n\tprivate inline function get_STENCIL_BACK_FAIL ():Int { return this.STENCIL_BACK_FAIL; }\n\tprivate inline function get_STENCIL_BACK_PASS_DEPTH_FAIL ():Int { return this.STENCIL_BACK_PASS_DEPTH_FAIL; }\n\tprivate inline function get_STENCIL_BACK_PASS_DEPTH_PASS ():Int { return this.STENCIL_BACK_PASS_DEPTH_PASS; }\n\tprivate inline function get_STENCIL_BACK_REF ():Int { return this.STENCIL_BACK_REF; }\n\tprivate inline function get_STENCIL_BACK_VALUE_MASK ():Int { return this.STENCIL_BACK_VALUE_MASK; }\n\tprivate inline function get_STENCIL_BACK_WRITEMASK ():Int { return this.STENCIL_BACK_WRITEMASK; }\n\tprivate inline function get_VIEWPORT ():Int { return this.VIEWPORT; }\n\tprivate inline function get_SCISSOR_BOX ():Int { return this.SCISSOR_BOX; }\n\tprivate inline function get_COLOR_CLEAR_VALUE ():Int { return this.COLOR_CLEAR_VALUE; }\n\tprivate inline function get_COLOR_WRITEMASK ():Int { return this.COLOR_WRITEMASK; }\n\tprivate inline function get_UNPACK_ALIGNMENT ():Int { return this.UNPACK_ALIGNMENT; }\n\tprivate inline function get_PACK_ALIGNMENT ():Int { return this.PACK_ALIGNMENT; }\n\tprivate inline function get_MAX_TEXTURE_SIZE ():Int { return this.MAX_TEXTURE_SIZE; }\n\tprivate inline function get_MAX_VIEWPORT_DIMS ():Int { return this.MAX_VIEWPORT_DIMS; }\n\tprivate inline function get_SUBPIXEL_BITS ():Int { return this.SUBPIXEL_BITS; }\n\tprivate inline function get_RED_BITS ():Int { return this.RED_BITS; }\n\tprivate inline function get_GREEN_BITS ():Int { return this.GREEN_BITS; }\n\tprivate inline function get_BLUE_BITS ():Int { return this.BLUE_BITS; }\n\tprivate inline function get_ALPHA_BITS ():Int { return this.ALPHA_BITS; }\n\tprivate inline function get_DEPTH_BITS ():Int { return this.DEPTH_BITS; }\n\tprivate inline function get_STENCIL_BITS ():Int { return this.STENCIL_BITS; }\n\tprivate inline function get_POLYGON_OFFSET_UNITS ():Int { return this.POLYGON_OFFSET_UNITS; }\n\tprivate inline function get_POLYGON_OFFSET_FACTOR ():Int { return this.POLYGON_OFFSET_FACTOR; }\n\tprivate inline function get_TEXTURE_BINDING_2D ():Int { return this.TEXTURE_BINDING_2D; }\n\tprivate inline function get_SAMPLE_BUFFERS ():Int { return this.SAMPLE_BUFFERS; }\n\tprivate inline function get_SAMPLES ():Int { return this.SAMPLES; }\n\tprivate inline function get_SAMPLE_COVERAGE_VALUE ():Int { return this.SAMPLE_COVERAGE_VALUE; }\n\tprivate inline function get_SAMPLE_COVERAGE_INVERT ():Int { return this.SAMPLE_COVERAGE_INVERT; }\n\tprivate inline function get_COMPRESSED_TEXTURE_FORMATS ():Int { return this.COMPRESSED_TEXTURE_FORMATS; }\n\tprivate inline function get_DONT_CARE ():Int { return this.DONT_CARE; }\n\tprivate inline function get_FASTEST ():Int { return this.FASTEST; }\n\tprivate inline function get_NICEST ():Int { return this.NICEST; }\n\tprivate inline function get_GENERATE_MIPMAP_HINT ():Int { return this.GENERATE_MIPMAP_HINT; }\n\tprivate inline function get_BYTE ():Int { return this.BYTE; }\n\tprivate inline function get_UNSIGNED_BYTE ():Int { return this.UNSIGNED_BYTE; }\n\tprivate inline function get_SHORT ():Int { return this.SHORT; }\n\tprivate inline function get_UNSIGNED_SHORT ():Int { return this.UNSIGNED_SHORT; }\n\tprivate inline function get_INT ():Int { return this.INT; }\n\tprivate inline function get_UNSIGNED_INT ():Int { return this.UNSIGNED_INT; }\n\tprivate inline function get_FLOAT ():Int { return this.FLOAT; }\n\tprivate inline function get_DEPTH_COMPONENT ():Int { return this.DEPTH_COMPONENT; }\n\tprivate inline function get_ALPHA ():Int { return this.ALPHA; }\n\tprivate inline function get_RGB ():Int { return this.RGB; }\n\tprivate inline function get_RGBA ():Int { return this.RGBA; }\n\tprivate inline function get_LUMINANCE ():Int { return this.LUMINANCE; }\n\tprivate inline function get_LUMINANCE_ALPHA ():Int { return this.LUMINANCE_ALPHA; }\n\tprivate inline function get_UNSIGNED_SHORT_4_4_4_4 ():Int { return this.UNSIGNED_SHORT_4_4_4_4; }\n\tprivate inline function get_UNSIGNED_SHORT_5_5_5_1 ():Int { return this.UNSIGNED_SHORT_5_5_5_1; }\n\tprivate inline function get_UNSIGNED_SHORT_5_6_5 ():Int { return this.UNSIGNED_SHORT_5_6_5; }\n\tprivate inline function get_FRAGMENT_SHADER ():Int { return this.FRAGMENT_SHADER; }\n\tprivate inline function get_VERTEX_SHADER ():Int { return this.VERTEX_SHADER; }\n\tprivate inline function get_MAX_VERTEX_ATTRIBS ():Int { return this.MAX_VERTEX_ATTRIBS; }\n\tprivate inline function get_MAX_VERTEX_UNIFORM_VECTORS ():Int { return this.MAX_VERTEX_UNIFORM_VECTORS; }\n\tprivate inline function get_MAX_VARYING_VECTORS ():Int { return this.MAX_VARYING_VECTORS; }\n\tprivate inline function get_MAX_COMBINED_TEXTURE_IMAGE_UNITS ():Int { return this.MAX_COMBINED_TEXTURE_IMAGE_UNITS; }\n\tprivate inline function get_MAX_VERTEX_TEXTURE_IMAGE_UNITS ():Int { return this.MAX_VERTEX_TEXTURE_IMAGE_UNITS; }\n\tprivate inline function get_MAX_TEXTURE_IMAGE_UNITS ():Int { return this.MAX_TEXTURE_IMAGE_UNITS; }\n\tprivate inline function get_MAX_FRAGMENT_UNIFORM_VECTORS ():Int { return this.MAX_FRAGMENT_UNIFORM_VECTORS; }\n\tprivate inline function get_SHADER_TYPE ():Int { return this.SHADER_TYPE; }\n\tprivate inline function get_DELETE_STATUS ():Int { return this.DELETE_STATUS; }\n\tprivate inline function get_LINK_STATUS ():Int { return this.LINK_STATUS; }\n\tprivate inline function get_VALIDATE_STATUS ():Int { return this.VALIDATE_STATUS; }\n\tprivate inline function get_ATTACHED_SHADERS ():Int { return this.ATTACHED_SHADERS; }\n\tprivate inline function get_ACTIVE_UNIFORMS ():Int { return this.ACTIVE_UNIFORMS; }\n\tprivate inline function get_ACTIVE_ATTRIBUTES ():Int { return this.ACTIVE_ATTRIBUTES; }\n\tprivate inline function get_SHADING_LANGUAGE_VERSION ():Int { return this.SHADING_LANGUAGE_VERSION; }\n\tprivate inline function get_CURRENT_PROGRAM ():Int { return this.CURRENT_PROGRAM; }\n\tprivate inline function get_NEVER ():Int { return this.NEVER; }\n\tprivate inline function get_LESS ():Int { return this.LESS; }\n\tprivate inline function get_EQUAL ():Int { return this.EQUAL; }\n\tprivate inline function get_LEQUAL ():Int { return this.LEQUAL; }\n\tprivate inline function get_GREATER ():Int { return this.GREATER; }\n\tprivate inline function get_NOTEQUAL ():Int { return this.NOTEQUAL; }\n\tprivate inline function get_GEQUAL ():Int { return this.GEQUAL; }\n\tprivate inline function get_ALWAYS ():Int { return this.ALWAYS; }\n\tprivate inline function get_KEEP ():Int { return this.KEEP; }\n\tprivate inline function get_REPLACE ():Int { return this.REPLACE; }\n\tprivate inline function get_INCR ():Int { return this.INCR; }\n\tprivate inline function get_DECR ():Int { return this.DECR; }\n\tprivate inline function get_INVERT ():Int { return this.INVERT; }\n\tprivate inline function get_INCR_WRAP ():Int { return this.INCR_WRAP; }\n\tprivate inline function get_DECR_WRAP ():Int { return this.DECR_WRAP; }\n\tprivate inline function get_VENDOR ():Int { return this.VENDOR; }\n\tprivate inline function get_RENDERER ():Int { return this.RENDERER; }\n\tprivate inline function get_VERSION ():Int { return this.VERSION; }\n\tprivate inline function get_NEAREST ():Int { return this.NEAREST; }\n\tprivate inline function get_LINEAR ():Int { return this.LINEAR; }\n\tprivate inline function get_NEAREST_MIPMAP_NEAREST ():Int { return this.NEAREST_MIPMAP_NEAREST; }\n\tprivate inline function get_LINEAR_MIPMAP_NEAREST ():Int { return this.LINEAR_MIPMAP_NEAREST; }\n\tprivate inline function get_NEAREST_MIPMAP_LINEAR ():Int { return this.NEAREST_MIPMAP_LINEAR; }\n\tprivate inline function get_LINEAR_MIPMAP_LINEAR ():Int { return this.LINEAR_MIPMAP_LINEAR; }\n\tprivate inline function get_TEXTURE_MAG_FILTER ():Int { return this.TEXTURE_MAG_FILTER; }\n\tprivate inline function get_TEXTURE_MIN_FILTER ():Int { return this.TEXTURE_MIN_FILTER; }\n\tprivate inline function get_TEXTURE_WRAP_S ():Int { return this.TEXTURE_WRAP_S; }\n\tprivate inline function get_TEXTURE_WRAP_T ():Int { return this.TEXTURE_WRAP_T; }\n\tprivate inline function get_TEXTURE_2D ():Int { return this.TEXTURE_2D; }\n\tprivate inline function get_TEXTURE ():Int { return this.TEXTURE; }\n\tprivate inline function get_TEXTURE_CUBE_MAP ():Int { return this.TEXTURE_CUBE_MAP; }\n\tprivate inline function get_TEXTURE_BINDING_CUBE_MAP ():Int { return this.TEXTURE_BINDING_CUBE_MAP; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_POSITIVE_X ():Int { return this.TEXTURE_CUBE_MAP_POSITIVE_X; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_NEGATIVE_X ():Int { return this.TEXTURE_CUBE_MAP_NEGATIVE_X; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_POSITIVE_Y ():Int { return this.TEXTURE_CUBE_MAP_POSITIVE_Y; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_NEGATIVE_Y ():Int { return this.TEXTURE_CUBE_MAP_NEGATIVE_Y; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_POSITIVE_Z ():Int { return this.TEXTURE_CUBE_MAP_POSITIVE_Z; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_NEGATIVE_Z ():Int { return this.TEXTURE_CUBE_MAP_NEGATIVE_Z; }\n\tprivate inline function get_MAX_CUBE_MAP_TEXTURE_SIZE ():Int { return this.MAX_CUBE_MAP_TEXTURE_SIZE; }\n\tprivate inline function get_TEXTURE0 ():Int { return this.TEXTURE0; }\n\tprivate inline function get_TEXTURE1 ():Int { return this.TEXTURE1; }\n\tprivate inline function get_TEXTURE2 ():Int { return this.TEXTURE2; }\n\tprivate inline function get_TEXTURE3 ():Int { return this.TEXTURE3; }\n\tprivate inline function get_TEXTURE4 ():Int { return this.TEXTURE4; }\n\tprivate inline function get_TEXTURE5 ():Int { return this.TEXTURE5; }\n\tprivate inline function get_TEXTURE6 ():Int { return this.TEXTURE6; }\n\tprivate inline function get_TEXTURE7 ():Int { return this.TEXTURE7; }\n\tprivate inline function get_TEXTURE8 ():Int { return this.TEXTURE8; }\n\tprivate inline function get_TEXTURE9 ():Int { return this.TEXTURE9; }\n\tprivate inline function get_TEXTURE10 ():Int { return this.TEXTURE10; }\n\tprivate inline function get_TEXTURE11 ():Int { return this.TEXTURE11; }\n\tprivate inline function get_TEXTURE12 ():Int { return this.TEXTURE12; }\n\tprivate inline function get_TEXTURE13 ():Int { return this.TEXTURE13; }\n\tprivate inline function get_TEXTURE14 ():Int { return this.TEXTURE14; }\n\tprivate inline function get_TEXTURE15 ():Int { return this.TEXTURE15; }\n\tprivate inline function get_TEXTURE16 ():Int { return this.TEXTURE16; }\n\tprivate inline function get_TEXTURE17 ():Int { return this.TEXTURE17; }\n\tprivate inline function get_TEXTURE18 ():Int { return this.TEXTURE18; }\n\tprivate inline function get_TEXTURE19 ():Int { return this.TEXTURE19; }\n\tprivate inline function get_TEXTURE20 ():Int { return this.TEXTURE20; }\n\tprivate inline function get_TEXTURE21 ():Int { return this.TEXTURE21; }\n\tprivate inline function get_TEXTURE22 ():Int { return this.TEXTURE22; }\n\tprivate inline function get_TEXTURE23 ():Int { return this.TEXTURE23; }\n\tprivate inline function get_TEXTURE24 ():Int { return this.TEXTURE24; }\n\tprivate inline function get_TEXTURE25 ():Int { return this.TEXTURE25; }\n\tprivate inline function get_TEXTURE26 ():Int { return this.TEXTURE26; }\n\tprivate inline function get_TEXTURE27 ():Int { return this.TEXTURE27; }\n\tprivate inline function get_TEXTURE28 ():Int { return this.TEXTURE28; }\n\tprivate inline function get_TEXTURE29 ():Int { return this.TEXTURE29; }\n\tprivate inline function get_TEXTURE30 ():Int { return this.TEXTURE30; }\n\tprivate inline function get_TEXTURE31 ():Int { return this.TEXTURE31; }\n\tprivate inline function get_ACTIVE_TEXTURE ():Int { return this.ACTIVE_TEXTURE; }\n\tprivate inline function get_REPEAT ():Int { return this.REPEAT; }\n\tprivate inline function get_CLAMP_TO_EDGE ():Int { return this.CLAMP_TO_EDGE; }\n\tprivate inline function get_MIRRORED_REPEAT ():Int { return this.MIRRORED_REPEAT; }\n\tprivate inline function get_FLOAT_VEC2 ():Int { return this.FLOAT_VEC2; }\n\tprivate inline function get_FLOAT_VEC3 ():Int { return this.FLOAT_VEC3; }\n\tprivate inline function get_FLOAT_VEC4 ():Int { return this.FLOAT_VEC4; }\n\tprivate inline function get_INT_VEC2 ():Int { return this.INT_VEC2; }\n\tprivate inline function get_INT_VEC3 ():Int { return this.INT_VEC3; }\n\tprivate inline function get_INT_VEC4 ():Int { return this.INT_VEC4; }\n\tprivate inline function get_BOOL ():Int { return this.BOOL; }\n\tprivate inline function get_BOOL_VEC2 ():Int { return this.BOOL_VEC2; }\n\tprivate inline function get_BOOL_VEC3 ():Int { return this.BOOL_VEC3; }\n\tprivate inline function get_BOOL_VEC4 ():Int { return this.BOOL_VEC4; }\n\tprivate inline function get_FLOAT_MAT2 ():Int { return this.FLOAT_MAT2; }\n\tprivate inline function get_FLOAT_MAT3 ():Int { return this.FLOAT_MAT3; }\n\tprivate inline function get_FLOAT_MAT4 ():Int { return this.FLOAT_MAT4; }\n\tprivate inline function get_SAMPLER_2D ():Int { return this.SAMPLER_2D; }\n\tprivate inline function get_SAMPLER_CUBE ():Int { return this.SAMPLER_CUBE; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_ENABLED ():Int { return this.VERTEX_ATTRIB_ARRAY_ENABLED; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_SIZE ():Int { return this.VERTEX_ATTRIB_ARRAY_SIZE; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_STRIDE ():Int { return this.VERTEX_ATTRIB_ARRAY_STRIDE; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_TYPE ():Int { return this.VERTEX_ATTRIB_ARRAY_TYPE; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_NORMALIZED ():Int { return this.VERTEX_ATTRIB_ARRAY_NORMALIZED; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_POINTER ():Int { return this.VERTEX_ATTRIB_ARRAY_POINTER; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING ():Int { return this.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING; }\n\tprivate inline function get_VERTEX_PROGRAM_POINT_SIZE ():Int { #if (js && html5) return 0; #else return this.VERTEX_PROGRAM_POINT_SIZE; #end } // TODO\n\tprivate inline function get_POINT_SPRITE ():Int { #if (js && html5) return 0; #else return this.POINT_SPRITE; #end } // TODO\n\tprivate inline function get_COMPILE_STATUS ():Int { return this.COMPILE_STATUS; }\n\tprivate inline function get_LOW_FLOAT ():Int { return this.LOW_FLOAT; }\n\tprivate inline function get_MEDIUM_FLOAT ():Int { return this.MEDIUM_FLOAT; }\n\tprivate inline function get_HIGH_FLOAT ():Int { return this.HIGH_FLOAT; }\n\tprivate inline function get_LOW_INT ():Int { return this.LOW_INT; }\n\tprivate inline function get_MEDIUM_INT ():Int { return this.MEDIUM_INT; }\n\tprivate inline function get_HIGH_INT ():Int { return this.HIGH_INT; }\n\tprivate inline function get_FRAMEBUFFER ():Int { return this.FRAMEBUFFER; }\n\tprivate inline function get_RENDERBUFFER ():Int { return this.RENDERBUFFER; }\n\tprivate inline function get_RGBA4 ():Int { return this.RGBA4; }\n\tprivate inline function get_RGB5_A1 ():Int { return this.RGB5_A1; }\n\tprivate inline function get_RGB565 ():Int { return this.RGB565; }\n\tprivate inline function get_DEPTH_COMPONENT16 ():Int { return this.DEPTH_COMPONENT16; }\n\tprivate inline function get_STENCIL_INDEX ():Int { return this.STENCIL_INDEX; }\n\tprivate inline function get_STENCIL_INDEX8 ():Int { return this.STENCIL_INDEX8; }\n\tprivate inline function get_DEPTH_STENCIL ():Int { return this.DEPTH_STENCIL; }\n\tprivate inline function get_RENDERBUFFER_WIDTH ():Int { return this.RENDERBUFFER_WIDTH; }\n\tprivate inline function get_RENDERBUFFER_HEIGHT ():Int { return this.RENDERBUFFER_HEIGHT; }\n\tprivate inline function get_RENDERBUFFER_INTERNAL_FORMAT ():Int { return this.RENDERBUFFER_INTERNAL_FORMAT; }\n\tprivate inline function get_RENDERBUFFER_RED_SIZE ():Int { return this.RENDERBUFFER_RED_SIZE; }\n\tprivate inline function get_RENDERBUFFER_GREEN_SIZE ():Int { return this.RENDERBUFFER_GREEN_SIZE; }\n\tprivate inline function get_RENDERBUFFER_BLUE_SIZE ():Int { return this.RENDERBUFFER_BLUE_SIZE; }\n\tprivate inline function get_RENDERBUFFER_ALPHA_SIZE ():Int { return this.RENDERBUFFER_ALPHA_SIZE; }\n\tprivate inline function get_RENDERBUFFER_DEPTH_SIZE ():Int { return this.RENDERBUFFER_DEPTH_SIZE; }\n\tprivate inline function get_RENDERBUFFER_STENCIL_SIZE ():Int { return this.RENDERBUFFER_STENCIL_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE ():Int { return this.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME ():Int { return this.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL ():Int { return this.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE ():Int { return this.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE; }\n\tprivate inline function get_COLOR_ATTACHMENT0 ():Int { return this.COLOR_ATTACHMENT0; }\n\tprivate inline function get_DEPTH_ATTACHMENT ():Int { return this.DEPTH_ATTACHMENT; }\n\tprivate inline function get_STENCIL_ATTACHMENT ():Int { return this.STENCIL_ATTACHMENT; }\n\tprivate inline function get_DEPTH_STENCIL_ATTACHMENT ():Int { return this.DEPTH_STENCIL_ATTACHMENT; }\n\tprivate inline function get_NONE ():Int { return this.NONE; }\n\tprivate inline function get_FRAMEBUFFER_COMPLETE ():Int { return this.FRAMEBUFFER_COMPLETE; }\n\tprivate inline function get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT ():Int { return this.FRAMEBUFFER_INCOMPLETE_ATTACHMENT; }\n\tprivate inline function get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT ():Int { return this.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT; }\n\tprivate inline function get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS ():Int { return this.FRAMEBUFFER_INCOMPLETE_DIMENSIONS; }\n\tprivate inline function get_FRAMEBUFFER_UNSUPPORTED ():Int { return this.FRAMEBUFFER_UNSUPPORTED; }\n\tprivate inline function get_FRAMEBUFFER_BINDING ():Int { return this.FRAMEBUFFER_BINDING; }\n\tprivate inline function get_RENDERBUFFER_BINDING ():Int { return this.RENDERBUFFER_BINDING; }\n\tprivate inline function get_MAX_RENDERBUFFER_SIZE ():Int { return this.MAX_RENDERBUFFER_SIZE; }\n\tprivate inline function get_INVALID_FRAMEBUFFER_OPERATION ():Int { return this.INVALID_FRAMEBUFFER_OPERATION; }\n\tprivate inline function get_UNPACK_FLIP_Y_WEBGL ():Int { return this.UNPACK_FLIP_Y_WEBGL; }\n\tprivate inline function get_UNPACK_PREMULTIPLY_ALPHA_WEBGL ():Int { return this.UNPACK_PREMULTIPLY_ALPHA_WEBGL; }\n\tprivate inline function get_CONTEXT_LOST_WEBGL ():Int { return this.CONTEXT_LOST_WEBGL; }\n\tprivate inline function get_UNPACK_COLORSPACE_CONVERSION_WEBGL ():Int { return this.UNPACK_COLORSPACE_CONVERSION_WEBGL; }\n\tprivate inline function get_BROWSER_DEFAULT_WEBGL ():Int { return this.BROWSER_DEFAULT_WEBGL; }\n\tprivate inline function get_type ():GLContextType { return this.type; }\n\tprivate inline function get_version ():Float { return this.version; }\n\t\n\tprivate inline function get_READ_BUFFER ():Int { return this.READ_BUFFER; }\n\tprivate inline function get_UNPACK_ROW_LENGTH ():Int { return this.UNPACK_ROW_LENGTH; }\n\tprivate inline function get_UNPACK_SKIP_ROWS ():Int { return this.UNPACK_SKIP_ROWS; }\n\tprivate inline function get_UNPACK_SKIP_PIXELS ():Int { return this.UNPACK_SKIP_PIXELS; }\n\tprivate inline function get_PACK_ROW_LENGTH ():Int { return this.PACK_ROW_LENGTH; }\n\tprivate inline function get_PACK_SKIP_ROWS ():Int { return this.PACK_SKIP_ROWS; }\n\tprivate inline function get_PACK_SKIP_PIXELS ():Int { return this.PACK_SKIP_PIXELS; }\n\tprivate inline function get_TEXTURE_BINDING_3D ():Int { return this.TEXTURE_BINDING_3D; }\n\tprivate inline function get_UNPACK_SKIP_IMAGES ():Int { return this.UNPACK_SKIP_IMAGES; }\n\tprivate inline function get_UNPACK_IMAGE_HEIGHT ():Int { return this.UNPACK_IMAGE_HEIGHT; }\n\tprivate inline function get_MAX_3D_TEXTURE_SIZE ():Int { return this.MAX_3D_TEXTURE_SIZE; }\n\tprivate inline function get_MAX_ELEMENTS_VERTICES ():Int { return this.MAX_ELEMENTS_VERTICES; }\n\tprivate inline function get_MAX_ELEMENTS_INDICES ():Int { return this.MAX_ELEMENTS_INDICES; }\n\tprivate inline function get_MAX_TEXTURE_LOD_BIAS ():Int { return this.MAX_TEXTURE_LOD_BIAS; }\n\tprivate inline function get_MAX_FRAGMENT_UNIFORM_COMPONENTS ():Int { return this.MAX_FRAGMENT_UNIFORM_COMPONENTS; }\n\tprivate inline function get_MAX_VERTEX_UNIFORM_COMPONENTS ():Int { return this.MAX_VERTEX_UNIFORM_COMPONENTS; }\n\tprivate inline function get_MAX_ARRAY_TEXTURE_LAYERS ():Int { return this.MAX_ARRAY_TEXTURE_LAYERS; }\n\tprivate inline function get_MIN_PROGRAM_TEXEL_OFFSET ():Int { return this.MIN_PROGRAM_TEXEL_OFFSET; }\n\tprivate inline function get_MAX_PROGRAM_TEXEL_OFFSET ():Int { return this.MAX_PROGRAM_TEXEL_OFFSET; }\n\tprivate inline function get_MAX_VARYING_COMPONENTS ():Int { return this.MAX_VARYING_COMPONENTS; }\n\tprivate inline function get_FRAGMENT_SHADER_DERIVATIVE_HINT ():Int { return this.FRAGMENT_SHADER_DERIVATIVE_HINT; }\n\tprivate inline function get_RASTERIZER_DISCARD ():Int { return this.RASTERIZER_DISCARD; }\n\tprivate inline function get_VERTEX_ARRAY_BINDING ():Int { return this.VERTEX_ARRAY_BINDING; }\n\tprivate inline function get_MAX_VERTEX_OUTPUT_COMPONENTS ():Int { return this.MAX_VERTEX_OUTPUT_COMPONENTS; }\n\tprivate inline function get_MAX_FRAGMENT_INPUT_COMPONENTS ():Int { return this.MAX_FRAGMENT_INPUT_COMPONENTS; }\n\tprivate inline function get_MAX_SERVER_WAIT_TIMEOUT ():Int { return this.MAX_SERVER_WAIT_TIMEOUT; }\n\tprivate inline function get_MAX_ELEMENT_INDEX ():Int { return this.MAX_ELEMENT_INDEX; }\n\t\n\tprivate inline function get_RED ():Int { return this.RED; }\n\tprivate inline function get_RGB8 ():Int { return this.RGB8; }\n\tprivate inline function get_RGBA8 ():Int { return this.RGBA8; }\n\tprivate inline function get_RGB10_A2 ():Int { return this.RGB10_A2; }\n\tprivate inline function get_TEXTURE_3D ():Int { return this.TEXTURE_3D; }\n\tprivate inline function get_TEXTURE_WRAP_R ():Int { return this.TEXTURE_WRAP_R; }\n\tprivate inline function get_TEXTURE_MIN_LOD ():Int { return this.TEXTURE_MIN_LOD; }\n\tprivate inline function get_TEXTURE_MAX_LOD ():Int { return this.TEXTURE_MAX_LOD; }\n\tprivate inline function get_TEXTURE_BASE_LEVEL ():Int { return this.TEXTURE_BASE_LEVEL; }\n\tprivate inline function get_TEXTURE_MAX_LEVEL ():Int { return this.TEXTURE_MAX_LEVEL; }\n\tprivate inline function get_TEXTURE_COMPARE_MODE ():Int { return this.TEXTURE_COMPARE_MODE; }\n\tprivate inline function get_TEXTURE_COMPARE_FUNC ():Int { return this.TEXTURE_COMPARE_FUNC; }\n\tprivate inline function get_SRGB ():Int { return this.SRGB; }\n\tprivate inline function get_SRGB8 ():Int { return this.SRGB8; }\n\tprivate inline function get_SRGB8_ALPHA8 ():Int { return this.SRGB8_ALPHA8; }\n\tprivate inline function get_COMPARE_REF_TO_TEXTURE ():Int { return this.COMPARE_REF_TO_TEXTURE; }\n\tprivate inline function get_RGBA32F ():Int { return this.RGBA32F; }\n\tprivate inline function get_RGB32F ():Int { return this.RGB32F; }\n\tprivate inline function get_RGBA16F ():Int { return this.RGBA16F; }\n\tprivate inline function get_RGB16F ():Int { return this.RGB16F; }\n\tprivate inline function get_TEXTURE_2D_ARRAY ():Int { return this.TEXTURE_2D_ARRAY; }\n\tprivate inline function get_TEXTURE_BINDING_2D_ARRAY ():Int { return this.TEXTURE_BINDING_2D_ARRAY; }\n\tprivate inline function get_R11F_G11F_B10F ():Int { return this.R11F_G11F_B10F; }\n\tprivate inline function get_RGB9_E5 ():Int { return this.RGB9_E5; }\n\tprivate inline function get_RGBA32UI ():Int { return this.RGBA32UI; }\n\tprivate inline function get_RGB32UI ():Int { return this.RGB32UI; }\n\tprivate inline function get_RGBA16UI ():Int { return this.RGBA16UI; }\n\tprivate inline function get_RGB16UI ():Int { return this.RGB16UI; }\n\tprivate inline function get_RGBA8UI ():Int { return this.RGBA8UI; }\n\tprivate inline function get_RGB8UI ():Int { return this.RGB8UI; }\n\tprivate inline function get_RGBA32I ():Int { return this.RGBA32I; }\n\tprivate inline function get_RGB32I ():Int { return this.RGB32I; }\n\tprivate inline function get_RGBA16I ():Int { return this.RGBA16I; }\n\tprivate inline function get_RGB16I ():Int { return this.RGB16I; }\n\tprivate inline function get_RGBA8I ():Int { return this.RGBA8I; }\n\tprivate inline function get_RGB8I ():Int { return this.RGB8I; }\n\tprivate inline function get_RED_INTEGER ():Int { return this.RED_INTEGER; }\n\tprivate inline function get_RGB_INTEGER ():Int { return this.RGB_INTEGER; }\n\tprivate inline function get_RGBA_INTEGER ():Int { return this.RGBA_INTEGER; }\n\tprivate inline function get_R8 ():Int { return this.R8; }\n\tprivate inline function get_RG8 ():Int { return this.RG8; }\n\tprivate inline function get_R16F ():Int { return this.R16F; }\n\tprivate inline function get_R32F ():Int { return this.R32F; }\n\tprivate inline function get_RG16F ():Int { return this.RG16F; }\n\tprivate inline function get_RG32F ():Int { return this.RG32F; }\n\tprivate inline function get_R8I ():Int { return this.R8I; }\n\tprivate inline function get_R8UI ():Int { return this.R8UI; }\n\tprivate inline function get_R16I ():Int { return this.R16I; }\n\tprivate inline function get_R16UI ():Int { return this.R16UI; }\n\tprivate inline function get_R32I ():Int { return this.R32I; }\n\tprivate inline function get_R32UI ():Int { return this.R32UI; }\n\tprivate inline function get_RG8I ():Int { return this.RG8I; }\n\tprivate inline function get_RG8UI ():Int { return this.RG8UI; }\n\tprivate inline function get_RG16I ():Int { return this.RG16I; }\n\tprivate inline function get_RG16UI ():Int { return this.RG16UI; }\n\tprivate inline function get_RG32I ():Int { return this.RG32I; }\n\tprivate inline function get_RG32UI ():Int { return this.RG32UI; }\n\tprivate inline function get_R8_SNORM ():Int { return this.R8_SNORM; }\n\tprivate inline function get_RG8_SNORM ():Int { return this.RG8_SNORM; }\n\tprivate inline function get_RGB8_SNORM ():Int { return this.RGB8_SNORM; }\n\tprivate inline function get_RGBA8_SNORM ():Int { return this.RGBA8_SNORM; }\n\tprivate inline function get_RGB10_A2UI ():Int { return this.RGB10_A2UI; }\n\tprivate inline function get_TEXTURE_IMMUTABLE_FORMAT ():Int { return this.TEXTURE_IMMUTABLE_FORMAT; }\n\tprivate inline function get_TEXTURE_IMMUTABLE_LEVELS ():Int { return this.TEXTURE_IMMUTABLE_LEVELS; }\n\t\n\tprivate inline function get_UNSIGNED_INT_2_10_10_10_REV ():Int { return this.UNSIGNED_INT_2_10_10_10_REV; }\n\tprivate inline function get_UNSIGNED_INT_10F_11F_11F_REV ():Int { return this.UNSIGNED_INT_10F_11F_11F_REV; }\n\tprivate inline function get_UNSIGNED_INT_5_9_9_9_REV ():Int { return this.UNSIGNED_INT_5_9_9_9_REV; }\n\tprivate inline function get_FLOAT_32_UNSIGNED_INT_24_8_REV ():Int { return this.FLOAT_32_UNSIGNED_INT_24_8_REV; }\n\tprivate inline function get_UNSIGNED_INT_24_8 ():Int { return this.UNSIGNED_INT_24_8; }\n\tprivate inline function get_HALF_FLOAT ():Int { return this.HALF_FLOAT; }\n\tprivate inline function get_RG ():Int { return this.RG; }\n\tprivate inline function get_RG_INTEGER ():Int { return this.RG_INTEGER; }\n\tprivate inline function get_INT_2_10_10_10_REV ():Int { return this.INT_2_10_10_10_REV; }\n\t\n\tprivate inline function get_CURRENT_QUERY ():Int { return this.CURRENT_QUERY; }\n\tprivate inline function get_QUERY_RESULT ():Int { return this.QUERY_RESULT; }\n\tprivate inline function get_QUERY_RESULT_AVAILABLE ():Int { return this.QUERY_RESULT_AVAILABLE; }\n\tprivate inline function get_ANY_SAMPLES_PASSED ():Int { return this.ANY_SAMPLES_PASSED; }\n\tprivate inline function get_ANY_SAMPLES_PASSED_CONSERVATIVE ():Int { return this.ANY_SAMPLES_PASSED_CONSERVATIVE; }\n\t\n\tprivate inline function get_MAX_DRAW_BUFFERS ():Int { return this.MAX_DRAW_BUFFERS; }\n\tprivate inline function get_DRAW_BUFFER0 ():Int { return this.DRAW_BUFFER0; }\n\tprivate inline function get_DRAW_BUFFER1 ():Int { return this.DRAW_BUFFER1; }\n\tprivate inline function get_DRAW_BUFFER2 ():Int { return this.DRAW_BUFFER2; }\n\tprivate inline function get_DRAW_BUFFER3 ():Int { return this.DRAW_BUFFER3; }\n\tprivate inline function get_DRAW_BUFFER4 ():Int { return this.DRAW_BUFFER4; }\n\tprivate inline function get_DRAW_BUFFER5 ():Int { return this.DRAW_BUFFER5; }\n\tprivate inline function get_DRAW_BUFFER6 ():Int { return this.DRAW_BUFFER6; }\n\tprivate inline function get_DRAW_BUFFER7 ():Int { return this.DRAW_BUFFER7; }\n\tprivate inline function get_DRAW_BUFFER8 ():Int { return this.DRAW_BUFFER8; }\n\tprivate inline function get_DRAW_BUFFER9 ():Int { return this.DRAW_BUFFER9; }\n\tprivate inline function get_DRAW_BUFFER10 ():Int { return this.DRAW_BUFFER10; }\n\tprivate inline function get_DRAW_BUFFER11 ():Int { return this.DRAW_BUFFER11; }\n\tprivate inline function get_DRAW_BUFFER12 ():Int { return this.DRAW_BUFFER12; }\n\tprivate inline function get_DRAW_BUFFER13 ():Int { return this.DRAW_BUFFER13; }\n\tprivate inline function get_DRAW_BUFFER14 ():Int { return this.DRAW_BUFFER14; }\n\tprivate inline function get_DRAW_BUFFER15 ():Int { return this.DRAW_BUFFER15; }\n\tprivate inline function get_MAX_COLOR_ATTACHMENTS ():Int { return this.MAX_COLOR_ATTACHMENTS; }\n\tprivate inline function get_COLOR_ATTACHMENT1 ():Int { return this.COLOR_ATTACHMENT1; }\n\tprivate inline function get_COLOR_ATTACHMENT2 ():Int { return this.COLOR_ATTACHMENT2; }\n\tprivate inline function get_COLOR_ATTACHMENT3 ():Int { return this.COLOR_ATTACHMENT3; }\n\tprivate inline function get_COLOR_ATTACHMENT4 ():Int { return this.COLOR_ATTACHMENT4; }\n\tprivate inline function get_COLOR_ATTACHMENT5 ():Int { return this.COLOR_ATTACHMENT5; }\n\tprivate inline function get_COLOR_ATTACHMENT6 ():Int { return this.COLOR_ATTACHMENT6; }\n\tprivate inline function get_COLOR_ATTACHMENT7 ():Int { return this.COLOR_ATTACHMENT7; }\n\tprivate inline function get_COLOR_ATTACHMENT8 ():Int { return this.COLOR_ATTACHMENT8; }\n\tprivate inline function get_COLOR_ATTACHMENT9 ():Int { return this.COLOR_ATTACHMENT9; }\n\tprivate inline function get_COLOR_ATTACHMENT10 ():Int { return this.COLOR_ATTACHMENT10; }\n\tprivate inline function get_COLOR_ATTACHMENT11 ():Int { return this.COLOR_ATTACHMENT11; }\n\tprivate inline function get_COLOR_ATTACHMENT12 ():Int { return this.COLOR_ATTACHMENT12; }\n\tprivate inline function get_COLOR_ATTACHMENT13 ():Int { return this.COLOR_ATTACHMENT13; }\n\tprivate inline function get_COLOR_ATTACHMENT14 ():Int { return this.COLOR_ATTACHMENT14; }\n\tprivate inline function get_COLOR_ATTACHMENT15 ():Int { return this.COLOR_ATTACHMENT15; }\n\t\n\tprivate inline function get_SAMPLER_3D ():Int { return this.SAMPLER_3D; }\n\tprivate inline function get_SAMPLER_2D_SHADOW ():Int { return this.SAMPLER_2D_SHADOW; }\n\tprivate inline function get_SAMPLER_2D_ARRAY ():Int { return this.SAMPLER_2D_ARRAY; }\n\tprivate inline function get_SAMPLER_2D_ARRAY_SHADOW ():Int { return this.SAMPLER_2D_ARRAY_SHADOW; }\n\tprivate inline function get_SAMPLER_CUBE_SHADOW ():Int { return this.SAMPLER_CUBE_SHADOW; }\n\tprivate inline function get_INT_SAMPLER_2D ():Int { return this.INT_SAMPLER_2D; }\n\tprivate inline function get_INT_SAMPLER_3D ():Int { return this.INT_SAMPLER_3D; }\n\tprivate inline function get_INT_SAMPLER_CUBE ():Int { return this.INT_SAMPLER_CUBE; }\n\tprivate inline function get_INT_SAMPLER_2D_ARRAY ():Int { return this.INT_SAMPLER_2D_ARRAY; }\n\tprivate inline function get_UNSIGNED_INT_SAMPLER_2D ():Int { return this.UNSIGNED_INT_SAMPLER_2D; }\n\tprivate inline function get_UNSIGNED_INT_SAMPLER_3D ():Int { return this.UNSIGNED_INT_SAMPLER_3D; }\n\tprivate inline function get_UNSIGNED_INT_SAMPLER_CUBE ():Int { return this.UNSIGNED_INT_SAMPLER_CUBE; }\n\tprivate inline function get_UNSIGNED_INT_SAMPLER_2D_ARRAY ():Int { return this.UNSIGNED_INT_SAMPLER_2D_ARRAY; }\n\tprivate inline function get_MAX_SAMPLES ():Int { return this.MAX_SAMPLES; }\n\tprivate inline function get_SAMPLER_BINDING ():Int { return this.SAMPLER_BINDING; }\n\t\n\tprivate inline function get_PIXEL_PACK_BUFFER ():Int { return this.PIXEL_PACK_BUFFER; }\n\tprivate inline function get_PIXEL_UNPACK_BUFFER ():Int { return this.PIXEL_UNPACK_BUFFER; }\n\tprivate inline function get_PIXEL_PACK_BUFFER_BINDING ():Int { return this.PIXEL_PACK_BUFFER_BINDING; }\n\tprivate inline function get_PIXEL_UNPACK_BUFFER_BINDING ():Int { return this.PIXEL_UNPACK_BUFFER_BINDING; }\n\tprivate inline function get_COPY_READ_BUFFER ():Int { return this.COPY_READ_BUFFER; }\n\tprivate inline function get_COPY_WRITE_BUFFER ():Int { return this.COPY_WRITE_BUFFER; }\n\tprivate inline function get_COPY_READ_BUFFER_BINDING ():Int { return this.COPY_READ_BUFFER_BINDING; }\n\tprivate inline function get_COPY_WRITE_BUFFER_BINDING ():Int { return this.COPY_WRITE_BUFFER_BINDING; }\n\t\n\tprivate inline function get_FLOAT_MAT2x3 ():Int { return this.FLOAT_MAT2x3; }\n\tprivate inline function get_FLOAT_MAT2x4 ():Int { return this.FLOAT_MAT2x4; }\n\tprivate inline function get_FLOAT_MAT3x2 ():Int { return this.FLOAT_MAT3x2; }\n\tprivate inline function get_FLOAT_MAT3x4 ():Int { return this.FLOAT_MAT3x4; }\n\tprivate inline function get_FLOAT_MAT4x2 ():Int { return this.FLOAT_MAT4x2; }\n\tprivate inline function get_FLOAT_MAT4x3 ():Int { return this.FLOAT_MAT4x3; }\n\tprivate inline function get_UNSIGNED_INT_VEC2 ():Int { return this.UNSIGNED_INT_VEC2; }\n\tprivate inline function get_UNSIGNED_INT_VEC3 ():Int { return this.UNSIGNED_INT_VEC3; }\n\tprivate inline function get_UNSIGNED_INT_VEC4 ():Int { return this.UNSIGNED_INT_VEC4; }\n\tprivate inline function get_UNSIGNED_NORMALIZED ():Int { return this.UNSIGNED_NORMALIZED; }\n\tprivate inline function get_SIGNED_NORMALIZED ():Int { return this.SIGNED_NORMALIZED; }\n\t\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_INTEGER ():Int { return this.VERTEX_ATTRIB_ARRAY_INTEGER; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_DIVISOR ():Int { return this.VERTEX_ATTRIB_ARRAY_DIVISOR; }\n\t\n\tprivate inline function get_TRANSFORM_FEEDBACK_BUFFER_MODE ():Int { return this.TRANSFORM_FEEDBACK_BUFFER_MODE; }\n\tprivate inline function get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS ():Int { return this.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_VARYINGS ():Int { return this.TRANSFORM_FEEDBACK_VARYINGS; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_BUFFER_START ():Int { return this.TRANSFORM_FEEDBACK_BUFFER_START; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_BUFFER_SIZE ():Int { return this.TRANSFORM_FEEDBACK_BUFFER_SIZE; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN ():Int { return this.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN; }\n\tprivate inline function get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS ():Int { return this.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS; }\n\tprivate inline function get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS ():Int { return this.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS; }\n\tprivate inline function get_INTERLEAVED_ATTRIBS ():Int { return this.INTERLEAVED_ATTRIBS; }\n\tprivate inline function get_SEPARATE_ATTRIBS ():Int { return this.SEPARATE_ATTRIBS; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_BUFFER ():Int { return this.TRANSFORM_FEEDBACK_BUFFER; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_BUFFER_BINDING ():Int { return this.TRANSFORM_FEEDBACK_BUFFER_BINDING; }\n\tprivate inline function get_TRANSFORM_FEEDBACK ():Int { return this.TRANSFORM_FEEDBACK; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_PAUSED ():Int { return this.TRANSFORM_FEEDBACK_PAUSED; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_ACTIVE ():Int { return this.TRANSFORM_FEEDBACK_ACTIVE; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_BINDING ():Int { return this.TRANSFORM_FEEDBACK_BINDING; }\n\t\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING ():Int { return this.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE ():Int { return this.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_RED_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_RED_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_DEFAULT ():Int { return this.FRAMEBUFFER_DEFAULT; }\n\tprivate inline function get_DEPTH24_STENCIL8 ():Int { return this.DEPTH24_STENCIL8; }\n\tprivate inline function get_DRAW_FRAMEBUFFER_BINDING ():Int { return this.DRAW_FRAMEBUFFER_BINDING; }\n\tprivate inline function get_READ_FRAMEBUFFER ():Int { return this.READ_FRAMEBUFFER; }\n\tprivate inline function get_DRAW_FRAMEBUFFER ():Int { return this.DRAW_FRAMEBUFFER; }\n\tprivate inline function get_READ_FRAMEBUFFER_BINDING ():Int { return this.READ_FRAMEBUFFER_BINDING; }\n\tprivate inline function get_RENDERBUFFER_SAMPLES ():Int { return this.RENDERBUFFER_SAMPLES; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER ():Int { return this.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER; }\n\tprivate inline function get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE ():Int { return this.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE; }\n\t\n\tprivate inline function get_UNIFORM_BUFFER ():Int { return this.UNIFORM_BUFFER; }\n\tprivate inline function get_UNIFORM_BUFFER_BINDING ():Int { return this.UNIFORM_BUFFER_BINDING; }\n\tprivate inline function get_UNIFORM_BUFFER_START ():Int { return this.UNIFORM_BUFFER_START; }\n\tprivate inline function get_UNIFORM_BUFFER_SIZE ():Int { return this.UNIFORM_BUFFER_SIZE; }\n\tprivate inline function get_MAX_VERTEX_UNIFORM_BLOCKS ():Int { return this.MAX_VERTEX_UNIFORM_BLOCKS; }\n\tprivate inline function get_MAX_FRAGMENT_UNIFORM_BLOCKS ():Int { return this.MAX_FRAGMENT_UNIFORM_BLOCKS; }\n\tprivate inline function get_MAX_COMBINED_UNIFORM_BLOCKS ():Int { return this.MAX_COMBINED_UNIFORM_BLOCKS; }\n\tprivate inline function get_MAX_UNIFORM_BUFFER_BINDINGS ():Int { return this.MAX_UNIFORM_BUFFER_BINDINGS; }\n\tprivate inline function get_MAX_UNIFORM_BLOCK_SIZE ():Int { return this.MAX_UNIFORM_BLOCK_SIZE; }\n\tprivate inline function get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS ():Int { return this.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS; }\n\tprivate inline function get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS ():Int { return this.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS; }\n\tprivate inline function get_UNIFORM_BUFFER_OFFSET_ALIGNMENT ():Int { return this.UNIFORM_BUFFER_OFFSET_ALIGNMENT; }\n\tprivate inline function get_ACTIVE_UNIFORM_BLOCKS ():Int { return this.ACTIVE_UNIFORM_BLOCKS; }\n\tprivate inline function get_UNIFORM_TYPE ():Int { return this.UNIFORM_TYPE; }\n\tprivate inline function get_UNIFORM_SIZE ():Int { return this.UNIFORM_SIZE; }\n\tprivate inline function get_UNIFORM_BLOCK_INDEX ():Int { return this.UNIFORM_BLOCK_INDEX; }\n\tprivate inline function get_UNIFORM_OFFSET ():Int { return this.UNIFORM_OFFSET; }\n\tprivate inline function get_UNIFORM_ARRAY_STRIDE ():Int { return this.UNIFORM_ARRAY_STRIDE; }\n\tprivate inline function get_UNIFORM_MATRIX_STRIDE ():Int { return this.UNIFORM_MATRIX_STRIDE; }\n\tprivate inline function get_UNIFORM_IS_ROW_MAJOR ():Int { return this.UNIFORM_IS_ROW_MAJOR; }\n\tprivate inline function get_UNIFORM_BLOCK_BINDING ():Int { return this.UNIFORM_BLOCK_BINDING; }\n\tprivate inline function get_UNIFORM_BLOCK_DATA_SIZE ():Int { return this.UNIFORM_BLOCK_DATA_SIZE; }\n\tprivate inline function get_UNIFORM_BLOCK_ACTIVE_UNIFORMS ():Int { return this.UNIFORM_BLOCK_ACTIVE_UNIFORMS; }\n\tprivate inline function get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES ():Int { return this.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES; }\n\tprivate inline function get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER ():Int { return this.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER; }\n\tprivate inline function get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER ():Int { return this.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER; }\n\t\n\tprivate inline function get_OBJECT_TYPE ():Int { return this.OBJECT_TYPE; }\n\tprivate inline function get_SYNC_CONDITION ():Int { return this.SYNC_CONDITION; }\n\tprivate inline function get_SYNC_STATUS ():Int { return this.SYNC_STATUS; }\n\tprivate inline function get_SYNC_FLAGS ():Int { return this.SYNC_FLAGS; }\n\tprivate inline function get_SYNC_FENCE ():Int { return this.SYNC_FENCE; }\n\tprivate inline function get_SYNC_GPU_COMMANDS_COMPLETE ():Int { return this.SYNC_GPU_COMMANDS_COMPLETE; }\n\tprivate inline function get_UNSIGNALED ():Int { return this.UNSIGNALED; }\n\tprivate inline function get_SIGNALED ():Int { return this.SIGNALED; }\n\tprivate inline function get_ALREADY_SIGNALED ():Int { return this.ALREADY_SIGNALED; }\n\tprivate inline function get_TIMEOUT_EXPIRED ():Int { return this.TIMEOUT_EXPIRED; }\n\tprivate inline function get_CONDITION_SATISFIED ():Int { return this.CONDITION_SATISFIED; }\n\tprivate inline function get_WAIT_FAILED ():Int { return this.WAIT_FAILED; }\n\tprivate inline function get_SYNC_FLUSH_COMMANDS_BIT ():Int { return this.SYNC_FLUSH_COMMANDS_BIT; }\n\t\n\tprivate inline function get_COLOR ():Int { return this.COLOR; }\n\tprivate inline function get_DEPTH ():Int { return this.DEPTH; }\n\tprivate inline function get_STENCIL ():Int { return this.STENCIL; }\n\tprivate inline function get_MIN ():Int { return this.MIN; }\n\tprivate inline function get_MAX ():Int { return this.MAX; }\n\tprivate inline function get_DEPTH_COMPONENT24 ():Int { return this.DEPTH_COMPONENT24; }\n\tprivate inline function get_STREAM_READ ():Int { return this.STREAM_READ; }\n\tprivate inline function get_STREAM_COPY ():Int { return this.STREAM_COPY; }\n\tprivate inline function get_STATIC_READ ():Int { return this.STATIC_READ; }\n\tprivate inline function get_STATIC_COPY ():Int { return this.STATIC_COPY; }\n\tprivate inline function get_DYNAMIC_READ ():Int { return this.DYNAMIC_READ; }\n\tprivate inline function get_DYNAMIC_COPY ():Int { return this.DYNAMIC_COPY; }\n\tprivate inline function get_DEPTH_COMPONENT32F ():Int { return this.DEPTH_COMPONENT32F; }\n\tprivate inline function get_DEPTH32F_STENCIL8 ():Int { return this.DEPTH32F_STENCIL8; }\n\tprivate inline function get_INVALID_INDEX ():Int { return this.INVALID_INDEX; }\n\tprivate inline function get_TIMEOUT_IGNORED ():Int { return this.TIMEOUT_IGNORED; }\n\tprivate inline function get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL ():Int { return this.MAX_CLIENT_WAIT_TIMEOUT_WEBGL; }\n\t\n\t\n\tpublic inline function activeTexture (texture:Int):Void {\n\t\t\n\t\tthis.activeTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function attachShader (program:GLProgram, shader:GLShader):Void {\n\t\t\n\t\tthis.attachShader (program, shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function beginQuery (target:Int, query:GLQuery):Void {\n\t\t\n\t\tthis.beginQuery (target, query);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function beginTransformFeedback (primitiveNode:Int):Void {\n\t\t\n\t\tthis.beginTransformFeedback (primitiveNode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindAttribLocation (program:GLProgram, index:Int, name:String):Void {\n\t\t\n\t\tthis.bindAttribLocation (program, index, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindBuffer (target:Int, buffer:GLBuffer):Void {\n\t\t\n\t\tthis.bindBuffer (target, buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindBufferBase (target:Int, index:Int, buffer:GLBuffer):Void {\n\t\t\n\t\tthis.bindBufferBase (target, index, buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindBufferRange (target:Int, index:Int, buffer:GLBuffer, offset:DataPointer, size:Int):Void {\n\t\t\n\t\tthis.bindBufferRange (target, index, buffer, offset, size);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindFramebuffer (target:Int, framebuffer:GLFramebuffer):Void {\n\t\t\n\t\tthis.bindFramebuffer (target, framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindRenderbuffer (target:Int, renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\tthis.bindRenderbuffer (target, renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindSampler (unit:Int, sampler:GLSampler):Void {\n\t\t\n\t\tthis.bindSampler (unit, sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindTexture (target:Int, texture:GLTexture):Void {\n\t\t\n\t\tthis.bindTexture (target, texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindTransformFeedback (target:Int, transformFeedback:GLTransformFeedback):Void {\n\t\t\n\t\tthis.bindTransformFeedback (target, transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindVertexArray (vertexArray:GLVertexArrayObject):Void {\n\t\t\n\t\tthis.bindVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendColor (red:Float, green:Float, blue:Float, alpha:Float):Void {\n\t\t\n\t\tthis.blendColor (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendEquation (mode:Int):Void {\n\t\t\n\t\tthis.blendEquation (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendEquationSeparate (modeRGB:Int, modeAlpha:Int):Void {\n\t\t\n\t\tthis.blendEquationSeparate (modeRGB, modeAlpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendFunc (sfactor:Int, dfactor:Int):Void {\n\t\t\n\t\tthis.blendFunc (sfactor, dfactor);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendFuncSeparate (srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void {\n\t\t\n\t\tthis.blendFuncSeparate (srcRGB, dstRGB, srcAlpha, dstAlpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blitFramebuffer (srcX0:Int, srcY0:Int, srcX1:Int, srcY1:Int, dstX0:Int, dstY0:Int, dstX1:Int, dstY1:Int, mask:Int, filter:Int):Void {\n\t\t\n\t\tthis.blitFramebuffer (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bufferData (target:Int, size:Int, data:DataPointer, usage:Int):Void {\n\t\t\n\t\tthis.bufferData (target, size, data, usage);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bufferSubData (target:Int, offset:Int, size:Int, data:DataPointer):Void {\n\t\t\n\t\tthis.bufferSubData (target, offset, size, data);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function checkFramebufferStatus (target:Int):Int {\n\t\t\n\t\treturn this.checkFramebufferStatus (target);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clear (mask:Int):Void {\n\t\t\n\t\tthis.clear (mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferfi (buffer:Int, drawbuffer:Int, depth:Float, stencil:Int):Void {\n\t\t\n\t\tthis.clearBufferfi (buffer, drawbuffer, depth, stencil);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferfv (buffer:Int, drawbuffer:Int, value:DataPointer):Void {\n\t\t\n\t\tthis.clearBufferfv (buffer, drawbuffer, value);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferiv (buffer:Int, drawbuffer:Int, value:DataPointer):Void {\n\t\t\n\t\tthis.clearBufferiv (buffer, drawbuffer, value);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferuiv (buffer:Int, drawbuffer:Int, value:DataPointer):Void {\n\t\t\n\t\tthis.clearBufferuiv (buffer, drawbuffer, value);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearColor (red:Float, green:Float, blue:Float, alpha:Float):Void {\n\t\t\n\t\tthis.clearColor (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearDepthf (depth:Float):Void {\n\t\t\n\t\tthis.clearDepthf (depth);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearStencil (s:Int):Void {\n\t\t\n\t\tthis.clearStencil (s);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clientWaitSync (sync:GLSync, flags:Int, timeout:Int64):Int {\n\t\t\n\t\treturn this.clientWaitSync (sync, flags, timeout);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function colorMask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {\n\t\t\n\t\tthis.colorMask (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compileShader (shader:GLShader):Void {\n\t\t\n\t\tthis.compileShader (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\tthis.compressedTexImage2D (target, level, internalformat, width, height, border, imageSize, data);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compressedTexImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\tthis.compressedTexImage3D (target, level, internalformat, width, height, depth, border, imageSize, data);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\tthis.compressedTexSubImage2D (target, level, xoffset, yoffset, width, height, format, imageSize, data);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compressedTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, imageSize:Int, data:DataPointer):Void {\n\t\t\n\t\tthis.compressedTexSubImage3D (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copyBufferSubData (readTarget:Int, writeTarget:Int, readOffset:DataPointer, writeOffset:DataPointer, size:Int):Void {\n\t\t\n\t\tthis.copyBufferSubData (readTarget, writeTarget, readOffset, writeOffset, size);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copyTexImage2D (target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void {\n\t\t\n\t\tthis.copyTexImage2D (target, level, internalformat, x, y, width, height, border);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copyTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.copyTexSubImage2D (target, level, xoffset, yoffset, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copyTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.copyTexSubImage3D (target, level, xoffset, yoffset, zoffset, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createBuffer ():GLBuffer {\n\t\t\n\t\treturn this.createBuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createFramebuffer ():GLFramebuffer {\n\t\t\n\t\treturn this.createFramebuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createProgram ():GLProgram {\n\t\t\n\t\treturn this.createProgram ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createQuery ():GLQuery {\n\t\t\n\t\treturn this.createQuery ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createRenderbuffer ():GLRenderbuffer {\n\t\t\n\t\treturn this.createRenderbuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createSampler ():GLSampler {\n\t\t\n\t\treturn this.createSampler ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createShader (type:Int):GLShader {\n\t\t\n\t\treturn this.createShader (type);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createTexture ():GLTexture {\n\t\t\n\t\treturn this.createTexture ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createTransformFeedback ():GLTransformFeedback {\n\t\t\n\t\treturn this.createTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createVertexArray ():GLVertexArrayObject {\n\t\t\n\t\treturn this.createVertexArray ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function cullFace (mode:Int):Void {\n\t\t\n\t\tthis.cullFace (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteBuffer (buffer:GLBuffer):Void {\n\t\t\n\t\tthis.deleteBuffer (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteFramebuffer (framebuffer:GLFramebuffer):Void {\n\t\t\n\t\tthis.deleteFramebuffer (framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteProgram (program:GLProgram):Void {\n\t\t\n\t\tthis.deleteProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteQuery (query:GLQuery):Void {\n\t\t\n\t\tthis.deleteQuery (query);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteRenderbuffer (renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\tthis.deleteRenderbuffer (renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteSampler (sampler:GLSampler):Void {\n\t\t\n\t\tthis.deleteSampler (sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteShader (shader:GLShader):Void {\n\t\t\n\t\tthis.deleteShader (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteSync (sync:GLSync):Void {\n\t\t\n\t\tthis.deleteSync (sync);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteTexture (texture:GLTexture):Void {\n\t\t\n\t\tthis.deleteTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteTransformFeedback (transformFeedback:GLTransformFeedback):Void {\n\t\t\n\t\tthis.deleteTransformFeedback (transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteVertexArray (vertexArray:GLVertexArrayObject):Void {\n\t\t\n\t\tthis.deleteVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function depthFunc (func:Int):Void {\n\t\t\n\t\tthis.depthFunc (func);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function depthMask (flag:Bool):Void {\n\t\t\n\t\tthis.depthMask (flag);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function depthRangef (zNear:Float, zFar:Float):Void {\n\t\t\n\t\tthis.depthRangef (zNear, zFar);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function detachShader (program:GLProgram, shader:GLShader):Void {\n\t\t\n\t\tthis.detachShader (program, shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function disable (cap:Int):Void {\n\t\t\n\t\tthis.disable (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function disableVertexAttribArray (index:Int):Void {\n\t\t\n\t\tthis.disableVertexAttribArray (index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawArrays (mode:Int, first:Int, count:Int):Void {\n\t\t\n\t\tthis.drawArrays (mode, first, count);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawArraysInstanced (mode:Int, first:Int, count:Int, instanceCount:Int):Void {\n\t\t\n\t\tthis.drawArraysInstanced (mode, first, count, instanceCount);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawBuffers (buffers:Array<Int>):Void {\n\t\t\n\t\tthis.drawBuffers (buffers);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawElements (mode:Int, count:Int, type:Int, offset:DataPointer):Void {\n\t\t\n\t\tthis.drawElements (mode, count, type, offset);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawElementsInstanced (mode:Int, count:Int, type:Int, offset:DataPointer, instanceCount:Int):Void {\n\t\t\n\t\tthis.drawElementsInstanced (mode, count, type, offset, instanceCount);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawRangeElements (mode:Int, start:Int, end:Int, count:Int, type:Int, offset:DataPointer):Void {\n\t\t\n\t\tthis.drawRangeElements (mode, start, end, count, type, offset);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function enable (cap:Int):Void {\n\t\t\n\t\tthis.enable (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function enableVertexAttribArray (index:Int):Void {\n\t\t\n\t\tthis.enableVertexAttribArray (index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function endQuery (target:Int):Void {\n\t\t\n\t\tthis.endQuery (target);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function endTransformFeedback ():Void {\n\t\t\n\t\tthis.endTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function fenceSync (condition:Int, flags:Int):GLSync {\n\t\t\n\t\treturn this.fenceSync (condition, flags);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function finish ():Void {\n\t\t\n\t\tthis.finish ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function flush ():Void {\n\t\t\n\t\tthis.flush ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function framebufferRenderbuffer (target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\tthis.framebufferRenderbuffer (target, attachment, renderbuffertarget, renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function framebufferTexture2D (target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void {\n\t\t\n\t\tthis.framebufferTexture2D (target, attachment, textarget, texture, level);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function framebufferTextureLayer (target:Int, attachment:Int, texture:GLTexture, level:Int, layer:Int):Void {\n\t\t\n\t\tthis.framebufferTextureLayer (target, attachment, texture, level, layer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function frontFace (mode:Int):Void {\n\t\t\n\t\tthis.frontFace (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic function genBuffers (n:Int, buffers:Array<GLBuffer> = null):Array<GLBuffer> {\n\t\t\n\t\tif (buffers == null) buffers = [];\n\t\t\n\t\tfor (i in 0...n) {\n\t\t\t\n\t\t\tbuffers[i] = createBuffer ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn buffers;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function generateMipmap (target:Int):Void {\n\t\t\n\t\tthis.generateMipmap (target);\n\t\t\n\t}\n\t\n\tpublic function genFramebuffers (n:Int, framebuffers:Array<GLFramebuffer> = null):Array<GLFramebuffer> {\n\t\t\n\t\tif (framebuffers == null) framebuffers = [];\n\t\t\n\t\tfor (i in 0...n) {\n\t\t\t\n\t\t\tframebuffers[i] = createFramebuffer ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn framebuffers;\n\t\t\n\t}\n\t\n\t\n\tpublic function genQueries (n:Int, queries:Array<GLQuery> = null):Array<GLQuery> {\n\t\t\n\t\tif (queries == null) queries = [];\n\t\t\n\t\tfor (i in 0...n) {\n\t\t\t\n\t\t\tqueries[i] = createQuery ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn queries;\n\t\t\n\t}\n\t\n\t\n\tpublic function genRenderbuffers (n:Int, renderbuffers:Array<GLRenderbuffer> = null):Array<GLRenderbuffer> {\n\t\t\n\t\tif (renderbuffers == null) renderbuffers = [];\n\t\t\n\t\tfor (i in 0...n) {\n\t\t\t\n\t\t\trenderbuffers[i] = createRenderbuffer ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn renderbuffers;\n\t\t\n\t}\n\t\n\t\n\tpublic function genSamplers (n:Int, samplers:Array<GLSampler> = null):Array<GLSampler> {\n\t\t\n\t\tif (samplers == null) samplers = [];\n\t\t\n\t\tfor (i in 0...n) {\n\t\t\t\n\t\t\tsamplers[i] = createSampler ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn samplers;\n\t\t\n\t}\n\t\n\t\n\tpublic function genTextures (n:Int, textures:Array<GLTexture> = null):Array<GLTexture> {\n\t\t\n\t\tif (textures == null) textures = [];\n\t\t\n\t\tfor (i in 0...n) {\n\t\t\t\n\t\t\ttextures[i] = createTexture ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn textures;\n\t\t\n\t}\n\t\n\t\n\tpublic function genTransformFeedbacks (n:Int, transformFeedbacks:Array<GLTransformFeedback> = null):Array<GLTransformFeedback> {\n\t\t\n\t\tif (transformFeedbacks == null) transformFeedbacks = [];\n\t\t\n\t\tfor (i in 0...n) {\n\t\t\t\n\t\t\ttransformFeedbacks[i] = createTransformFeedback ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn transformFeedbacks;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveAttrib (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn this.getActiveAttrib (program, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniform (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn this.getActiveUniform (program, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniformBlocki (program:GLProgram, uniformBlockIndex:Int, pname:Int):Int {\n\t\t\n\t\treturn this.getActiveUniformBlocki (program, uniformBlockIndex, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniformBlockiv (program:GLProgram, uniformBlockIndex:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getActiveUniformBlockiv (program, uniformBlockIndex, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniformBlockName (program:GLProgram, uniformBlockIndex:Int):String {\n\t\t\n\t\treturn this.getActiveUniformBlockName (program, uniformBlockIndex);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniformsiv (program:GLProgram, uniformIndices:Array<Int>, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getActiveUniformsiv (program, uniformIndices, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getAttachedShaders (program:GLProgram):Array<GLShader> {\n\t\t\n\t\treturn this.getAttachedShaders (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getAttribLocation (program:GLProgram, name:String):Int {\n\t\t\n\t\treturn this.getAttribLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBoolean (pname:Int):Bool {\n\t\t\n\t\treturn this.getBoolean (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBooleanv (pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getBooleanv (pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBufferParameteri (target:Int, pname:Int):Int {\n\t\t\n\t\treturn this.getBufferParameteri (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBufferParameteri64v (target:Int, pname:Int, params:DataPointer):Void{\n\t\t\n\t\tthis.getBufferParameteri64v (target, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBufferParameteriv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getBufferParameteriv (target, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBufferPointerv (target:Int, pname:Int):DataPointer {\n\t\t\n\t\treturn this.getBufferPointerv (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getError ():Int {\n\t\t\n\t\treturn this.getError ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getFloat (pname:Int):Float {\n\t\t\n\t\treturn this.getFloat (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getFloatv (pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getFloatv (pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getExtension (name:String):Dynamic {\n\t\t\n\t\treturn this.getExtension (name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getFragDataLocation (program:GLProgram, name:String):Int {\n\t\t\n\t\treturn this.getFragDataLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getFramebufferAttachmentParameteri (target:Int, attachment:Int, pname:Int):Int {\n\t\t\n\t\treturn this.getFramebufferAttachmentParameteri (target, attachment, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getFramebufferAttachmentParameteriv (target:Int, attachment:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getFramebufferAttachmentParameteriv (target, attachment, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInteger (pname:Int):Int {\n\t\t\n\t\treturn this.getInteger (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInteger64 (pname:Int):Int64 {\n\t\t\n\t\treturn this.getInteger64 (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInteger64i (pname:Int):Int64 {\n\t\t\n\t\treturn this.getInteger64 (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInteger64i_v (pname:Int, index:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getInteger64i_v (pname, index, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInteger64v (pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getInteger64v (pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getIntegeri_v (pname:Int, index:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getIntegeri_v (pname, index, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getIntegerv (pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getIntegerv (pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInternalformati (target:Int, internalformat:Int, pname:Int):Int {\n\t\t\n\t\treturn this.getInternalformatParameter (target, internalformat, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInternalformativ (target:Int, internalformat:Int, pname:Int, bufSize, params:DataPointer):Void {\n\t\t\n\t\treturn this.getInternalformativ (target, internalformat, pname, bufSize, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getProgramBinary (program:GLProgram, binaryFormat:Int):Bytes {\n\t\t\n\t\treturn this.getProgramBinary (program, binaryFormat);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getProgrami (program:GLProgram, pname:Int):Int {\n\t\t\n\t\treturn this.getProgrami (program, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getProgramInfoLog (program:GLProgram):String {\n\t\t\n\t\treturn this.getProgramInfoLog (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getProgramiv (program:GLProgram, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getProgramiv (program, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getQueryi (target:Int, pname:Int):Int {\n\t\t\n\t\treturn this.getQueryi (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getQueryiv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getQueryiv (target, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getQueryObjectui (query:GLQuery, pname:Int):Int {\n\t\t\n\t\treturn this.getQueryObjectui (query, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getQueryObjectuiv (query:GLQuery, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getQueryObjectuiv (query, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getRenderbufferParameteri (target:Int, pname:Int):Int {\n\t\t\n\t\treturn this.getRenderbufferParameteri (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getRenderbufferParameteriv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getRenderbufferParameteriv (target, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSamplerParameteri (sampler:GLSampler, pname:Int):Int {\n\t\t\n\t\treturn this.getSamplerParameteri (sampler, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSamplerParameteriv (sampler:GLSampler, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getSamplerParameteriv (sampler, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSamplerParameterf (sampler:GLSampler, pname:Int):Float {\n\t\t\n\t\treturn this.getSamplerParameterf (sampler, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSamplerParameterfv (sampler:GLSampler, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getSamplerParameterfv (sampler, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderInfoLog (shader:GLShader):String {\n\t\t\n\t\treturn this.getShaderInfoLog (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderi (shader:GLShader, pname:Int):Int {\n\t\t\n\t\treturn this.getShaderi (shader, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderiv (shader:GLShader, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getShaderiv (shader, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderPrecisionFormat (shadertype:Int, precisiontype:Int):GLShaderPrecisionFormat {\n\t\t\n\t\treturn this.getShaderPrecisionFormat (shadertype, precisiontype);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderSource (shader:GLShader):String {\n\t\t\n\t\treturn this.getShaderSource (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getString (name:Int):String {\n\t\t\n\t\treturn this.getString (name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getStringi (name:Int, index:Int):String {\n\t\t\n\t\treturn this.getStringi (name, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSyncParameteri (sync:GLSync, pname:Int):Int {\n\t\t\n\t\treturn this.getSyncParameteri (sync, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSyncParameteriv (sync:GLSync, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getSyncParameteriv (sync, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getTexParameterf (target:Int, pname:Int):Float {\n\t\t\n\t\treturn this.getTexParameterf (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getTexParameterfv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getTexParameterfv (target, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getTexParameteri (target:Int, pname:Int):Int {\n\t\t\n\t\treturn this.getTexParameteri (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getTexParameteriv (target:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getTexParameteriv (target, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getTransformFeedbackVarying (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn this.getTransformFeedbackVarying (program, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformf (program:GLProgram, location:GLUniformLocation):Float {\n\t\t\n\t\treturn this.getUniformf (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformfv (program:GLProgram, location:GLUniformLocation, params:DataPointer):Void {\n\t\t\n\t\tthis.getUniformfv (program, location, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformi (program:GLProgram, location:GLUniformLocation):Int {\n\t\t\n\t\treturn this.getUniformi (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformiv (program:GLProgram, location:GLUniformLocation, params:DataPointer):Void {\n\t\t\n\t\tthis.getUniformiv (program, location, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformui (program:GLProgram, location:GLUniformLocation):Int {\n\t\t\n\t\treturn this.getUniformui (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformuiv (program:GLProgram, location:GLUniformLocation, params:DataPointer):Void {\n\t\t\n\t\treturn this.getUniformuiv (program, location, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformBlockIndex (program:GLProgram, uniformBlockName:String):Int {\n\t\t\n\t\treturn this.getUniformBlockIndex (program, uniformBlockName);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformIndices (program:GLProgram, uniformNames:Array<String>):Array<Int> {\n\t\t\n\t\treturn this.getUniformIndices (program, uniformNames);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformLocation (program:GLProgram, name:String):GLUniformLocation {\n\t\t\n\t\treturn this.getUniformLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribf (index:Int, pname:Int):Float {\n\t\t\n\t\treturn this.getVertexAttribf (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribfv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getVertexAttribfv (index, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribi (index:Int, pname:Int):Int {\n\t\t\n\t\treturn this.getVertexAttrib (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribIi (index:Int, pname:Int):Int {\n\t\t\n\t\treturn this.getVertexAttribIi (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribIiv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\treturn this.getVertexAttribIiv (index, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribIui (index:Int, pname:Int):Int {\n\t\t\n\t\treturn this.getVertexAttribIui (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribIuiv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\treturn this.getVertexAttribIuiv (index, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribiv (index:Int, pname:Int, params:DataPointer):Void {\n\t\t\n\t\tthis.getVertexAttribiv (index, pname, params);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribPointerv (index:Int, pname:Int):DataPointer {\n\t\t\n\t\treturn this.getVertexAttribPointerv (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function hint (target:Int, mode:Int):Void {\n\t\t\n\t\tthis.hint (target, mode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function invalidateFramebuffer (target:Int, attachments:Array<Int>):Void {\n\t\t\n\t\tthis.invalidateFramebuffer (target, attachments);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function invalidateSubFramebuffer (target:Int, attachments:Array<Int>, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.invalidateSubFramebuffer (target, attachments, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isBuffer (buffer:GLBuffer):Bool {\n\t\t\n\t\treturn this.isBuffer (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isEnabled (cap:Int):Bool {\n\t\t\n\t\treturn this.isEnabled (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isFramebuffer (framebuffer:GLFramebuffer):Bool {\n\t\t\n\t\treturn this.isFramebuffer (framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isProgram (program:GLProgram):Bool {\n\t\t\n\t\treturn this.isProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isQuery (query:GLQuery):Bool {\n\t\t\n\t\treturn this.isQuery (query);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isRenderbuffer (renderbuffer:GLRenderbuffer):Bool {\n\t\t\n\t\treturn this.isRenderbuffer (renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isSampler (sampler:GLSampler):Bool {\n\t\t\n\t\treturn this.isSampler (sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isShader (shader:GLShader):Bool {\n\t\t\n\t\treturn this.isShader (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isTexture (texture:GLTexture):Bool {\n\t\t\n\t\treturn this.isTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isTransformFeedback (transformFeedback:GLTransformFeedback):Bool {\n\t\t\n\t\treturn this.isTransformFeedback (transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isVertexArray (vertexArray:GLVertexArrayObject):Bool {\n\t\t\n\t\treturn this.isVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function lineWidth (width:Float):Void {\n\t\t\n\t\tthis.lineWidth (width);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function linkProgram (program:GLProgram):Void {\n\t\t\n\t\tthis.linkProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function mapBufferRange (target:Int, offset:DataPointer, length:Int, access:Int):DataPointer {\n\t\t\n\t\treturn this.mapBufferRange (target, offset, length, access);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pauseTransformFeedback ():Void {\n\t\t\n\t\tthis.pauseTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pixelStorei (pname:Int, param:Int):Void {\n\t\t\n\t\tthis.pixelStorei (pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function polygonOffset (factor:Float, units:Float):Void {\n\t\t\n\t\tthis.polygonOffset (factor, units);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function programBinary (program:GLProgram, binaryFormat:Int, binary:DataPointer, length:Int):Void {\n\t\t\n\t\tthis.programBinary (program, binaryFormat, binary, length);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function programParameteri (program:GLProgram, pname:Int, value:Int):Void {\n\t\t\n\t\tthis.programParameteri (program, pname, value);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readBuffer (src:Int):Void {\n\t\t\n\t\tthis.readBuffer (src);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\tthis.readPixels (x, y, width, height, format, type, data);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function releaseShaderCompiler ():Void {\n\t\t\n\t\tthis.releaseShaderCompiler ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function renderbufferStorage (target:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.renderbufferStorage (target, internalformat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function renderbufferStorageMultisample (target:Int, samples:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.renderbufferStorageMultisample (target, samples, internalformat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function resumeTransformFeedback ():Void {\n\t\t\n\t\tthis.resumeTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function sampleCoverage (value:Float, invert:Bool):Void {\n\t\t\n\t\tthis.sampleCoverage (value, invert);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function samplerParameterf (sampler:GLSampler, pname:Int, param:Float):Void {\n\t\t\n\t\tthis.samplerParameterf (sampler, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function samplerParameteri (sampler:GLSampler, pname:Int, param:Int):Void {\n\t\t\n\t\tthis.samplerParameteri (sampler, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function scissor (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.scissor (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function shaderBinary (shaders:Array<GLShader>, binaryformat:Int, binary:DataPointer, length:Int):Void {\n\t\t\n\t\tthis.shaderBinary (shaders, binaryformat, binary, length);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function shaderSource (shader:GLShader, source:String):Void {\n\t\t\n\t\tthis.shaderSource (shader, source);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilFunc (func:Int, ref:Int, mask:Int):Void {\n\t\t\n\t\tthis.stencilFunc (func, ref, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilFuncSeparate (face:Int, func:Int, ref:Int, mask:Int):Void {\n\t\t\n\t\tthis.stencilFuncSeparate (face, func, ref, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilMask (mask:Int):Void {\n\t\t\n\t\tthis.stencilMask (mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilMaskSeparate (face:Int, mask:Int):Void {\n\t\t\n\t\tthis.stencilMaskSeparate (face, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilOp (fail:Int, zfail:Int, zpass:Int):Void {\n\t\t\n\t\tthis.stencilOp (fail, zfail, zpass);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilOpSeparate (face:Int, fail:Int, zfail:Int, zpass:Int):Void {\n\t\t\n\t\tthis.stencilOpSeparate (face, fail, zfail, zpass);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\tthis.texImage2D (target, level, internalformat, width, height, border, format, type, data);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\tthis.texImage3D (target, level, internalformat, width, height, depth, border, format, type, data);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texStorage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.texStorage2D (target, level, internalformat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texStorage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int):Void {\n\t\t\n\t\tthis.texStorage3D (target, level, internalformat, width, height, depth);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texParameterf (target:Int, pname:Int, param:Float):Void {\n\t\t\n\t\tthis.texParameterf (target, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texParameteri (target:Int, pname:Int, param:Int):Void {\n\t\t\n\t\tthis.texParameteri (target, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\tthis.texSubImage2D (target, level, xoffset, yoffset, width, height, format, type, data);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, data:DataPointer):Void {\n\t\t\n\t\tthis.texSubImage3D (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function transformFeedbackVaryings (program:GLProgram, varyings:Array<String>, bufferMode:Int):Void {\n\t\t\n\t\tthis.transformFeedbackVaryings (program, varyings, bufferMode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1f (location:GLUniformLocation, v0:Float):Void {\n\t\t\n\t\tthis.uniform1f (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform1fv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1i (location:GLUniformLocation, v0:Int):Void {\n\t\t\n\t\tthis.uniform1i (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform1iv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1ui (location:GLUniformLocation, v0:Int):Void {\n\t\t\n\t\tthis.uniform1ui (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform1uiv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2f (location:GLUniformLocation, v0:Float, v1:Float):Void {\n\t\t\n\t\tthis.uniform2f (location, v0, v1);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform2fv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2i (location:GLUniformLocation, v0:Int, v1:Int):Void {\n\t\t\n\t\tthis.uniform2i (location, v0, v1);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform2iv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2ui (location:GLUniformLocation, v0:Int, v1:Int):Void {\n\t\t\n\t\tthis.uniform2ui (location, v0, v1);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform2uiv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3f (location:GLUniformLocation, v0:Float, v1:Float, v2:Float):Void {\n\t\t\n\t\tthis.uniform3f (location, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform3fv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3i (location:GLUniformLocation, v0:Int, v1:Int, v2:Int):Void {\n\t\t\n\t\tthis.uniform3i (location, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform3iv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3ui (location:GLUniformLocation, v0:Int, v1:Int, v2:Int):Void {\n\t\t\n\t\tthis.uniform3ui (location, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform3uiv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4f (location:GLUniformLocation, v0:Float, v1:Float, v2:Float, v3:Float):Void {\n\t\t\n\t\tthis.uniform4f (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4fv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform4fv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4i (location:GLUniformLocation, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\tthis.uniform4i (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4iv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform4iv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4ui (location:GLUniformLocation, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\tthis.uniform4ui (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4uiv (location:GLUniformLocation, count:Int, v:DataPointer):Void {\n\t\t\n\t\tthis.uniform4uiv (location, count, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformBlockBinding (program:GLProgram, uniformBlockIndex:Int, uniformBlockBinding:Int):Void {\n\t\t\n\t\tthis.uniformBlockBinding (program, uniformBlockIndex, uniformBlockBinding);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix2fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tthis.uniformMatrix2fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix2x3fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tthis.uniformMatrix2x3fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix2x4fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tthis.uniformMatrix2x4fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix3fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tthis.uniformMatrix3fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix3x2fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tthis.uniformMatrix3x2fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix3x4fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tthis.uniformMatrix3x4fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix4fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tthis.uniformMatrix4fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix4x2fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tthis.uniformMatrix4x2fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformMatrix4x3fv (location:GLUniformLocation, count:Int, transpose:Bool, v:DataPointer):Void {\n\t\t\n\t\tthis.uniformMatrix4x3fv (location, count, transpose, v);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function unmapBuffer (target:Int):Bool {\n\t\t\n\t\treturn this.unmapBuffer (target);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function useProgram (program:GLProgram):Void {\n\t\t\n\t\tthis.useProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function validateProgram (program:GLProgram):Void {\n\t\t\n\t\tthis.validateProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib1f (indx:Int, x:Float):Void {\n\t\t\n\t\tthis.vertexAttrib1f (indx, x);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib1fv (indx:Int, values:DataPointer):Void {\n\t\t\n\t\tthis.vertexAttrib1fv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib2f (indx:Int, x:Float, y:Float):Void {\n\t\t\n\t\tthis.vertexAttrib2f (indx, x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib2fv (indx:Int, values:DataPointer):Void {\n\t\t\n\t\tthis.vertexAttrib2fv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib3f (indx:Int, x:Float, y:Float, z:Float):Void {\n\t\t\n\t\tthis.vertexAttrib3f (indx, x, y, z);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib3fv (indx:Int, values:DataPointer):Void {\n\t\t\n\t\tthis.vertexAttrib3fv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib4f (indx:Int, x:Float, y:Float, z:Float, w:Float):Void {\n\t\t\n\t\tthis.vertexAttrib4f (indx, x, y, z, w);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib4fv (indx:Int, values:DataPointer):Void {\n\t\t\n\t\tthis.vertexAttrib4fv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribDivisor (index:Int, divisor:Int):Void {\n\t\t\n\t\tthis.vertexAttribDivisor (index, divisor);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4i (indx:Int, x:Int, y:Int, z:Int, w:Int):Void {\n\t\t\n\t\tthis.vertexAttribI4i (indx, x, y, z, w);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4iv (indx:Int, values:DataPointer):Void {\n\t\t\n\t\tthis.vertexAttribI4iv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4ui (indx:Int, x:Int, y:Int, z:Int, w:Int):Void {\n\t\t\n\t\tthis.vertexAttribI4ui (indx, x, y, z, w);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4uiv (indx:Int, values:DataPointer):Void {\n\t\t\n\t\tthis.vertexAttribI4uiv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribIPointer (indx:Int, size:Int, type:Int, stride:Int, pointer:DataPointer):Void {\n\t\t\n\t\tthis.vertexAttribIPointer (indx, size, type, stride, pointer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribPointer (indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, pointer:DataPointer):Void {\n\t\t\n\t\tthis.vertexAttribPointer (indx, size, type, normalized, stride, pointer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function viewport (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.viewport (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function waitSync (sync:GLSync, flags:Int, timeout:Int64):Void {\n\t\t\n\t\tthis.waitSync (sync, flags, timeout);\n\t\t\n\t}\n\t\n\t\n\t@:from private static function fromGL (gl:#if lime_opengl Class<GL> #else Dynamic #end):GLES3Context {\n\t\t\n\t\t#if lime_opengl\n\t\treturn cast GL.context;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.utils;\n\n\nimport haxe.io.BytesData;\nimport haxe.io.Bytes;\nimport lime.utils.Bytes in LimeBytes;\n\n@:access(haxe.io.Bytes)\n@:access(lime.utils.BytePointerData)\n@:forward()\n\n\nabstract BytePointer(BytePointerData) from BytePointerData to BytePointerData {\n\t\n\t\n\tpublic inline function new (bytes:Bytes = null, offset:Int = 0):Void {\n\t\t\n\t\tthis = new BytePointerData (bytes, offset);\n\t\t\n\t}\n\t\n\t\n\tpublic function set (?bytes:Bytes, ?bufferView:ArrayBufferView, ?buffer:ArrayBuffer, ?offset:Int):Void {\n\t\t\n\t\tif (buffer != null) {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\tbytes = Bytes.ofData (cast buffer);\n\t\t\t#else\n\t\t\tbytes = buffer;\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\tif (bytes != null || bufferView == null) {\n\t\t\t\n\t\t\tthis.bytes = bytes;\n\t\t\tthis.offset = offset != null ? offset : 0;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\tthis.bytes = Bytes.ofData (cast bufferView.buffer);\n\t\t\t#else\n\t\t\tthis.bytes = bufferView.buffer;\n\t\t\t#end\n\t\t\t\n\t\t\tthis.offset = offset != null ? bufferView.byteOffset + offset : bufferView.byteOffset;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess @:noCompletion private inline function __arrayGet (index:Int):Int {\n\t\t\n\t\treturn (this.bytes != null) ? this.bytes.get (index + this.offset) : 0;\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess @:noCompletion private inline function __arraySet (index:Int, value:Int):Int {\n\t\t\n\t\tif (this.bytes == null) this.bytes.set (index + this.offset, value);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromArrayBufferView (arrayBufferView:ArrayBufferView):BytePointer {\n\t\t\n\t\tif (arrayBufferView == null) return null;\n\t\t\n\t\t#if (js && !display)\n\t\treturn new BytePointerData (Bytes.ofData (arrayBufferView.buffer), arrayBufferView.byteOffset);\n\t\t#else\n\t\treturn new BytePointerData ((arrayBufferView.buffer:Bytes), arrayBufferView.byteOffset);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromArrayBuffer (buffer:ArrayBuffer):BytePointer {\n\t\t\n\t\tif (buffer == null) return null;\n\t\t\n\t\t#if (js && !display)\n\t\treturn new BytePointerData (Bytes.ofData (buffer), 0);\n\t\t#else\n\t\treturn new BytePointerData ((buffer:Bytes), 0);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromBytes (bytes:Bytes):BytePointer {\n\t\t\n\t\treturn new BytePointerData (bytes, 0);\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromBytesData (bytesData:BytesData):BytePointer {\n\t\t\n\t\tif (bytesData == null) return new BytePointerData (null, 0);\n\t\telse return new BytePointerData (Bytes.ofData (bytesData), 0);\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String):BytePointer {\n\t\t\n\t\treturn new BytePointerData (LimeBytes.fromFile (path), 0);\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromLimeBytes (bytes:LimeBytes):BytePointer {\n\t\t\n\t\treturn new BytePointerData (bytes, 0);\n\t\t\n\t}\n\t\n\t\n\t@:to @:noCompletion public static function toUInt8Array (bytePointer:BytePointer):UInt8Array {\n\t\t\n\t\t#if (js && !display)\n\t\treturn new UInt8Array (bytePointer.bytes.getData (), Std.int (bytePointer.offset / 8));\n\t\t#else\n\t\treturn new UInt8Array (bytePointer.bytes, Std.int (bytePointer.offset / 8));\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:to @:noCompletion public static function toUInt8ClampedArray (bytePointer:BytePointer):UInt8ClampedArray {\n\t\t\n\t\tif (bytePointer == null || bytePointer.bytes == null) return null;\n\t\t\n\t\t#if (js && !display)\n\t\treturn new UInt8ClampedArray (bytePointer.bytes.getData (), Std.int (bytePointer.offset / 8));\n\t\t#else\n\t\treturn new UInt8ClampedArray (bytePointer.bytes, Std.int (bytePointer.offset / 8));\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:to @:noCompletion public static function toInt8Array (bytePointer:BytePointer):Int8Array {\n\t\t\n\t\tif (bytePointer == null || bytePointer.bytes == null) return null;\n\t\t\n\t\t#if (js && !display)\n\t\treturn new Int8Array (bytePointer.bytes.getData (), Std.int (bytePointer.offset / 8));\n\t\t#else\n\t\treturn new Int8Array (bytePointer.bytes, Std.int (bytePointer.offset / 8));\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:to @:noCompletion public static function toUInt16Array (bytePointer:BytePointer):UInt16Array {\n\t\t\n\t\tif (bytePointer == null || bytePointer.bytes == null) return null;\n\t\t\n\t\t#if (js && !display)\n\t\treturn new UInt16Array (bytePointer.bytes.getData (), Std.int (bytePointer.offset / 16));\n\t\t#else\n\t\treturn new UInt16Array (bytePointer.bytes, Std.int (bytePointer.offset / 16));\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:to @:noCompletion public static function toInt16Array (bytePointer:BytePointer):Int16Array {\n\t\t\n\t\tif (bytePointer == null || bytePointer.bytes == null) return null;\n\t\t\n\t\t#if (js && !display)\n\t\treturn new Int16Array (bytePointer.bytes.getData (), Std.int (bytePointer.offset / 16));\n\t\t#else\n\t\treturn new Int16Array (bytePointer.bytes, Std.int (bytePointer.offset / 16));\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:to @:noCompletion public static function toUInt32Array (bytePointer:BytePointer):UInt32Array {\n\t\t\n\t\tif (bytePointer == null || bytePointer.bytes == null) return null;\n\t\t\n\t\t#if (js && !display)\n\t\treturn new UInt32Array (bytePointer.bytes.getData (), Std.int (bytePointer.offset / 32));\n\t\t#else\n\t\treturn new UInt32Array (bytePointer.bytes, Std.int (bytePointer.offset / 32));\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:to @:noCompletion public static function toInt32Array (bytePointer:BytePointer):Int32Array {\n\t\t\n\t\tif (bytePointer == null || bytePointer.bytes == null) return null;\n\t\t\n\t\t#if (js && !display)\n\t\treturn new Int32Array (bytePointer.bytes.getData (), Std.int (bytePointer.offset / 32));\n\t\t#else\n\t\treturn new Int32Array (bytePointer.bytes, Std.int (bytePointer.offset / 32));\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:to @:noCompletion public static function toFloat32Array (bytePointer:BytePointer):Float32Array {\n\t\t\n\t\tif (bytePointer == null || bytePointer.bytes == null) return null;\n\t\t\n\t\t#if (js && !display)\n\t\treturn new Float32Array (bytePointer.bytes.getData (), Std.int (bytePointer.offset / 32));\n\t\t#else\n\t\treturn new Float32Array (bytePointer.bytes, Std.int (bytePointer.offset / 32));\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:to @:noCompletion public static function toFloat64Array (bytePointer:BytePointer):Float64Array {\n\t\t\n\t\tif (bytePointer == null || bytePointer.bytes == null) return null;\n\t\t\n\t\t#if (js && !display)\n\t\treturn new Float64Array (bytePointer.bytes.getData (), Std.int (bytePointer.offset / 64));\n\t\t#else\n\t\treturn new Float64Array (bytePointer.bytes, Std.int (bytePointer.offset / 64));\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:noCompletion @:dox(hide) class BytePointerData {\n\t\n\t\n\tpublic var bytes:Bytes;\n\tpublic var offset:Int;\n\t\n\t\n\tpublic function new (bytes:Bytes, offset:Int) {\n\t\t\n\t\tthis.bytes = bytes;\n\t\tthis.offset = offset;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.opengl;\n\n\nimport haxe.Int64;\nimport lime.utils.ArrayBuffer;\nimport lime.utils.ArrayBufferView;\nimport lime.utils.BytePointer;\nimport lime.utils.DataPointer;\nimport lime.utils.Float32Array;\nimport lime.utils.Int32Array;\nimport lime.utils.UInt32Array;\n\n\nabstract WebGL2Context(GLRenderContext) from GLRenderContext to GLRenderContext {\n\t\n\t\n\tprivate static var __tempPointer = new BytePointer ();\n\t\n\tpublic var DEPTH_BUFFER_BIT (get, never):Int;\n\tpublic var STENCIL_BUFFER_BIT (get, never):Int;\n\tpublic var COLOR_BUFFER_BIT (get, never):Int;\n\t\n\tpublic var POINTS (get, never):Int;\n\tpublic var LINES (get, never):Int;\n\tpublic var LINE_LOOP (get, never):Int;\n\tpublic var LINE_STRIP (get, never):Int;\n\tpublic var TRIANGLES (get, never):Int;\n\tpublic var TRIANGLE_STRIP (get, never):Int;\n\tpublic var TRIANGLE_FAN (get, never):Int;\n\t\n\tpublic var ZERO (get, never):Int;\n\tpublic var ONE (get, never):Int;\n\tpublic var SRC_COLOR (get, never):Int;\n\tpublic var ONE_MINUS_SRC_COLOR (get, never):Int;\n\tpublic var SRC_ALPHA (get, never):Int;\n\tpublic var ONE_MINUS_SRC_ALPHA (get, never):Int;\n\tpublic var DST_ALPHA (get, never):Int;\n\tpublic var ONE_MINUS_DST_ALPHA (get, never):Int;\n\t\n\tpublic var DST_COLOR (get, never):Int;\n\tpublic var ONE_MINUS_DST_COLOR (get, never):Int;\n\tpublic var SRC_ALPHA_SATURATE (get, never):Int;\n\t\n\tpublic var FUNC_ADD (get, never):Int;\n\tpublic var BLEND_EQUATION (get, never):Int;\n\tpublic var BLEND_EQUATION_RGB (get, never):Int;\n\tpublic var BLEND_EQUATION_ALPHA (get, never):Int;\n\t\n\tpublic var FUNC_SUBTRACT (get, never):Int;\n\tpublic var FUNC_REVERSE_SUBTRACT (get, never):Int;\n\t\n\tpublic var BLEND_DST_RGB (get, never):Int;\n\tpublic var BLEND_SRC_RGB (get, never):Int;\n\tpublic var BLEND_DST_ALPHA (get, never):Int;\n\tpublic var BLEND_SRC_ALPHA (get, never):Int;\n\tpublic var CONSTANT_COLOR (get, never):Int;\n\tpublic var ONE_MINUS_CONSTANT_COLOR (get, never):Int;\n\tpublic var CONSTANT_ALPHA (get, never):Int;\n\tpublic var ONE_MINUS_CONSTANT_ALPHA (get, never):Int;\n\tpublic var BLEND_COLOR (get, never):Int;\n\t\n\tpublic var ARRAY_BUFFER (get, never):Int;\n\tpublic var ELEMENT_ARRAY_BUFFER (get, never):Int;\n\tpublic var ARRAY_BUFFER_BINDING (get, never):Int;\n\tpublic var ELEMENT_ARRAY_BUFFER_BINDING (get, never):Int;\n\t\n\tpublic var STREAM_DRAW (get, never):Int;\n\tpublic var STATIC_DRAW (get, never):Int;\n\tpublic var DYNAMIC_DRAW (get, never):Int;\n\t\n\tpublic var BUFFER_SIZE (get, never):Int;\n\tpublic var BUFFER_USAGE (get, never):Int;\n\t\n\tpublic var CURRENT_VERTEX_ATTRIB (get, never):Int;\n\t\n\tpublic var FRONT (get, never):Int;\n\tpublic var BACK (get, never):Int;\n\tpublic var FRONT_AND_BACK (get, never):Int;\n\t\n\tpublic var CULL_FACE (get, never):Int;\n\tpublic var BLEND (get, never):Int;\n\tpublic var DITHER (get, never):Int;\n\tpublic var STENCIL_TEST (get, never):Int;\n\tpublic var DEPTH_TEST (get, never):Int;\n\tpublic var SCISSOR_TEST (get, never):Int;\n\tpublic var POLYGON_OFFSET_FILL (get, never):Int;\n\tpublic var SAMPLE_ALPHA_TO_COVERAGE (get, never):Int;\n\tpublic var SAMPLE_COVERAGE (get, never):Int;\n\t\n\tpublic var NO_ERROR (get, never):Int;\n\tpublic var INVALID_ENUM (get, never):Int;\n\tpublic var INVALID_VALUE (get, never):Int;\n\tpublic var INVALID_OPERATION (get, never):Int;\n\tpublic var OUT_OF_MEMORY (get, never):Int;\n\t\n\tpublic var CW  (get, never):Int;\n\tpublic var CCW (get, never):Int;\n\t\n\tpublic var LINE_WIDTH (get, never):Int;\n\tpublic var ALIASED_POINT_SIZE_RANGE (get, never):Int;\n\tpublic var ALIASED_LINE_WIDTH_RANGE (get, never):Int;\n\tpublic var CULL_FACE_MODE (get, never):Int;\n\tpublic var FRONT_FACE (get, never):Int;\n\tpublic var DEPTH_RANGE (get, never):Int;\n\tpublic var DEPTH_WRITEMASK (get, never):Int;\n\tpublic var DEPTH_CLEAR_VALUE (get, never):Int;\n\tpublic var DEPTH_FUNC (get, never):Int;\n\tpublic var STENCIL_CLEAR_VALUE (get, never):Int;\n\tpublic var STENCIL_FUNC (get, never):Int;\n\tpublic var STENCIL_FAIL (get, never):Int;\n\tpublic var STENCIL_PASS_DEPTH_FAIL (get, never):Int;\n\tpublic var STENCIL_PASS_DEPTH_PASS (get, never):Int;\n\tpublic var STENCIL_REF (get, never):Int;\n\tpublic var STENCIL_VALUE_MASK (get, never):Int;\n\tpublic var STENCIL_WRITEMASK (get, never):Int;\n\tpublic var STENCIL_BACK_FUNC (get, never):Int;\n\tpublic var STENCIL_BACK_FAIL (get, never):Int;\n\tpublic var STENCIL_BACK_PASS_DEPTH_FAIL (get, never):Int;\n\tpublic var STENCIL_BACK_PASS_DEPTH_PASS (get, never):Int;\n\tpublic var STENCIL_BACK_REF (get, never):Int;\n\tpublic var STENCIL_BACK_VALUE_MASK (get, never):Int;\n\tpublic var STENCIL_BACK_WRITEMASK (get, never):Int;\n\tpublic var VIEWPORT (get, never):Int;\n\tpublic var SCISSOR_BOX (get, never):Int;\n\t\n\tpublic var COLOR_CLEAR_VALUE (get, never):Int;\n\tpublic var COLOR_WRITEMASK (get, never):Int;\n\tpublic var UNPACK_ALIGNMENT (get, never):Int;\n\tpublic var PACK_ALIGNMENT (get, never):Int;\n\tpublic var MAX_TEXTURE_SIZE (get, never):Int;\n\tpublic var MAX_VIEWPORT_DIMS (get, never):Int;\n\tpublic var SUBPIXEL_BITS (get, never):Int;\n\tpublic var RED_BITS (get, never):Int;\n\tpublic var GREEN_BITS (get, never):Int;\n\tpublic var BLUE_BITS (get, never):Int;\n\tpublic var ALPHA_BITS (get, never):Int;\n\tpublic var DEPTH_BITS (get, never):Int;\n\tpublic var STENCIL_BITS (get, never):Int;\n\tpublic var POLYGON_OFFSET_UNITS (get, never):Int;\n\t\n\tpublic var POLYGON_OFFSET_FACTOR (get, never):Int;\n\tpublic var TEXTURE_BINDING_2D (get, never):Int;\n\tpublic var SAMPLE_BUFFERS (get, never):Int;\n\tpublic var SAMPLES (get, never):Int;\n\tpublic var SAMPLE_COVERAGE_VALUE (get, never):Int;\n\tpublic var SAMPLE_COVERAGE_INVERT (get, never):Int;\n\t\n\tpublic var COMPRESSED_TEXTURE_FORMATS (get, never):Int;\n\t\n\tpublic var DONT_CARE (get, never):Int;\n\tpublic var FASTEST (get, never):Int;\n\tpublic var NICEST (get, never):Int;\n\t\n\tpublic var GENERATE_MIPMAP_HINT (get, never):Int;\n\t\n\tpublic var BYTE (get, never):Int;\n\tpublic var UNSIGNED_BYTE (get, never):Int;\n\tpublic var SHORT (get, never):Int;\n\tpublic var UNSIGNED_SHORT (get, never):Int;\n\tpublic var INT (get, never):Int;\n\tpublic var UNSIGNED_INT (get, never):Int;\n\tpublic var FLOAT (get, never):Int;\n\t\n\tpublic var DEPTH_COMPONENT (get, never):Int;\n\tpublic var ALPHA (get, never):Int;\n\tpublic var RGB (get, never):Int;\n\tpublic var RGBA (get, never):Int;\n\tpublic var LUMINANCE (get, never):Int;\n\tpublic var LUMINANCE_ALPHA (get, never):Int;\n\t\n\tpublic var UNSIGNED_SHORT_4_4_4_4 (get, never):Int;\n\tpublic var UNSIGNED_SHORT_5_5_5_1 (get, never):Int;\n\tpublic var UNSIGNED_SHORT_5_6_5 (get, never):Int;\n\t\n\tpublic var FRAGMENT_SHADER (get, never):Int;\n\tpublic var VERTEX_SHADER (get, never):Int;\n\tpublic var MAX_VERTEX_ATTRIBS (get, never):Int;\n\tpublic var MAX_VERTEX_UNIFORM_VECTORS (get, never):Int;\n\tpublic var MAX_VARYING_VECTORS (get, never):Int;\n\tpublic var MAX_COMBINED_TEXTURE_IMAGE_UNITS (get, never):Int;\n\tpublic var MAX_VERTEX_TEXTURE_IMAGE_UNITS (get, never):Int;\n\tpublic var MAX_TEXTURE_IMAGE_UNITS (get, never):Int;\n\tpublic var MAX_FRAGMENT_UNIFORM_VECTORS (get, never):Int;\n\tpublic var SHADER_TYPE (get, never):Int;\n\tpublic var DELETE_STATUS (get, never):Int;\n\tpublic var LINK_STATUS (get, never):Int;\n\tpublic var VALIDATE_STATUS (get, never):Int;\n\tpublic var ATTACHED_SHADERS (get, never):Int;\n\tpublic var ACTIVE_UNIFORMS (get, never):Int;\n\tpublic var ACTIVE_ATTRIBUTES (get, never):Int;\n\tpublic var SHADING_LANGUAGE_VERSION (get, never):Int;\n\tpublic var CURRENT_PROGRAM (get, never):Int;\n\t\n\tpublic var NEVER (get, never):Int;\n\tpublic var LESS (get, never):Int;\n\tpublic var EQUAL (get, never):Int;\n\tpublic var LEQUAL (get, never):Int;\n\tpublic var GREATER (get, never):Int;\n\tpublic var NOTEQUAL (get, never):Int;\n\tpublic var GEQUAL (get, never):Int;\n\tpublic var ALWAYS (get, never):Int;\n\t\n\tpublic var KEEP (get, never):Int;\n\tpublic var REPLACE (get, never):Int;\n\tpublic var INCR (get, never):Int;\n\tpublic var DECR (get, never):Int;\n\tpublic var INVERT (get, never):Int;\n\tpublic var INCR_WRAP (get, never):Int;\n\tpublic var DECR_WRAP (get, never):Int;\n\t\n\tpublic var VENDOR (get, never):Int;\n\tpublic var RENDERER (get, never):Int;\n\tpublic var VERSION (get, never):Int;\n\t\n\tpublic var NEAREST (get, never):Int;\n\tpublic var LINEAR (get, never):Int;\n\t\n\tpublic var NEAREST_MIPMAP_NEAREST (get, never):Int;\n\tpublic var LINEAR_MIPMAP_NEAREST (get, never):Int;\n\tpublic var NEAREST_MIPMAP_LINEAR (get, never):Int;\n\tpublic var LINEAR_MIPMAP_LINEAR (get, never):Int;\n\t\n\tpublic var TEXTURE_MAG_FILTER (get, never):Int;\n\tpublic var TEXTURE_MIN_FILTER (get, never):Int;\n\tpublic var TEXTURE_WRAP_S (get, never):Int;\n\tpublic var TEXTURE_WRAP_T (get, never):Int;\n\t\n\tpublic var TEXTURE_2D (get, never):Int;\n\tpublic var TEXTURE (get, never):Int;\n\t\n\tpublic var TEXTURE_CUBE_MAP (get, never):Int;\n\tpublic var TEXTURE_BINDING_CUBE_MAP (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_POSITIVE_X (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_NEGATIVE_X (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_POSITIVE_Y (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_NEGATIVE_Y (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_POSITIVE_Z (get, never):Int;\n\tpublic var TEXTURE_CUBE_MAP_NEGATIVE_Z (get, never):Int;\n\tpublic var MAX_CUBE_MAP_TEXTURE_SIZE (get, never):Int;\n\t\n\tpublic var TEXTURE0 (get, never):Int;\n\tpublic var TEXTURE1 (get, never):Int;\n\tpublic var TEXTURE2 (get, never):Int;\n\tpublic var TEXTURE3 (get, never):Int;\n\tpublic var TEXTURE4 (get, never):Int;\n\tpublic var TEXTURE5 (get, never):Int;\n\tpublic var TEXTURE6 (get, never):Int;\n\tpublic var TEXTURE7 (get, never):Int;\n\tpublic var TEXTURE8 (get, never):Int;\n\tpublic var TEXTURE9 (get, never):Int;\n\tpublic var TEXTURE10 (get, never):Int;\n\tpublic var TEXTURE11 (get, never):Int;\n\tpublic var TEXTURE12 (get, never):Int;\n\tpublic var TEXTURE13 (get, never):Int;\n\tpublic var TEXTURE14 (get, never):Int;\n\tpublic var TEXTURE15 (get, never):Int;\n\tpublic var TEXTURE16 (get, never):Int;\n\tpublic var TEXTURE17 (get, never):Int;\n\tpublic var TEXTURE18 (get, never):Int;\n\tpublic var TEXTURE19 (get, never):Int;\n\tpublic var TEXTURE20 (get, never):Int;\n\tpublic var TEXTURE21 (get, never):Int;\n\tpublic var TEXTURE22 (get, never):Int;\n\tpublic var TEXTURE23 (get, never):Int;\n\tpublic var TEXTURE24 (get, never):Int;\n\tpublic var TEXTURE25 (get, never):Int;\n\tpublic var TEXTURE26 (get, never):Int;\n\tpublic var TEXTURE27 (get, never):Int;\n\tpublic var TEXTURE28 (get, never):Int;\n\tpublic var TEXTURE29 (get, never):Int;\n\tpublic var TEXTURE30 (get, never):Int;\n\tpublic var TEXTURE31 (get, never):Int;\n\tpublic var ACTIVE_TEXTURE (get, never):Int;\n\t\n\tpublic var REPEAT (get, never):Int;\n\tpublic var CLAMP_TO_EDGE (get, never):Int;\n\tpublic var MIRRORED_REPEAT (get, never):Int;\n\t\n\tpublic var FLOAT_VEC2 (get, never):Int;\n\tpublic var FLOAT_VEC3 (get, never):Int;\n\tpublic var FLOAT_VEC4 (get, never):Int;\n\tpublic var INT_VEC2 (get, never):Int;\n\tpublic var INT_VEC3 (get, never):Int;\n\tpublic var INT_VEC4 (get, never):Int;\n\tpublic var BOOL (get, never):Int;\n\tpublic var BOOL_VEC2 (get, never):Int;\n\tpublic var BOOL_VEC3 (get, never):Int;\n\tpublic var BOOL_VEC4 (get, never):Int;\n\tpublic var FLOAT_MAT2 (get, never):Int;\n\tpublic var FLOAT_MAT3 (get, never):Int;\n\tpublic var FLOAT_MAT4 (get, never):Int;\n\tpublic var SAMPLER_2D (get, never):Int;\n\tpublic var SAMPLER_CUBE (get, never):Int;\n\t\n\tpublic var VERTEX_ATTRIB_ARRAY_ENABLED (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_SIZE (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_STRIDE (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_TYPE (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_NORMALIZED (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_POINTER (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING (get, never):Int;\n\t\n\tpublic var COMPILE_STATUS (get, never):Int;\n\t\n\tpublic var LOW_FLOAT (get, never):Int;\n\tpublic var MEDIUM_FLOAT (get, never):Int;\n\tpublic var HIGH_FLOAT (get, never):Int;\n\tpublic var LOW_INT (get, never):Int;\n\tpublic var MEDIUM_INT (get, never):Int;\n\tpublic var HIGH_INT (get, never):Int;\n\t\n\tpublic var FRAMEBUFFER (get, never):Int;\n\tpublic var RENDERBUFFER (get, never):Int;\n\t\n\tpublic var RGBA4 (get, never):Int;\n\tpublic var RGB5_A1 (get, never):Int;\n\tpublic var RGB565 (get, never):Int;\n\tpublic var DEPTH_COMPONENT16 (get, never):Int;\n\tpublic var STENCIL_INDEX (get, never):Int;\n\tpublic var STENCIL_INDEX8 (get, never):Int;\n\tpublic var DEPTH_STENCIL (get, never):Int;\n\t\n\tpublic var RENDERBUFFER_WIDTH (get, never):Int;\n\tpublic var RENDERBUFFER_HEIGHT (get, never):Int;\n\tpublic var RENDERBUFFER_INTERNAL_FORMAT (get, never):Int;\n\tpublic var RENDERBUFFER_RED_SIZE (get, never):Int;\n\tpublic var RENDERBUFFER_GREEN_SIZE (get, never):Int;\n\tpublic var RENDERBUFFER_BLUE_SIZE (get, never):Int;\n\tpublic var RENDERBUFFER_ALPHA_SIZE (get, never):Int;\n\tpublic var RENDERBUFFER_DEPTH_SIZE (get, never):Int;\n\tpublic var RENDERBUFFER_STENCIL_SIZE (get, never):Int;\n\t\n\tpublic var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE (get, never):Int;\n\t\n\tpublic var COLOR_ATTACHMENT0 (get, never):Int;\n\tpublic var DEPTH_ATTACHMENT (get, never):Int;\n\tpublic var STENCIL_ATTACHMENT (get, never):Int;\n\tpublic var DEPTH_STENCIL_ATTACHMENT (get, never):Int;\n\t\n\tpublic var NONE (get, never):Int;\n\t\n\tpublic var FRAMEBUFFER_COMPLETE (get, never):Int;\n\tpublic var FRAMEBUFFER_INCOMPLETE_ATTACHMENT (get, never):Int;\n\tpublic var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT (get, never):Int;\n\tpublic var FRAMEBUFFER_INCOMPLETE_DIMENSIONS (get, never):Int;\n\tpublic var FRAMEBUFFER_UNSUPPORTED (get, never):Int;\n\t\n\tpublic var FRAMEBUFFER_BINDING (get, never):Int;\n\tpublic var RENDERBUFFER_BINDING (get, never):Int;\n\tpublic var MAX_RENDERBUFFER_SIZE (get, never):Int;\n\t\n\tpublic var INVALID_FRAMEBUFFER_OPERATION (get, never):Int;\n\t\n\tpublic var UNPACK_FLIP_Y_WEBGL (get, never):Int;\n\tpublic var UNPACK_PREMULTIPLY_ALPHA_WEBGL (get, never):Int;\n\tpublic var CONTEXT_LOST_WEBGL (get, never):Int;\n\tpublic var UNPACK_COLORSPACE_CONVERSION_WEBGL (get, never):Int;\n\tpublic var BROWSER_DEFAULT_WEBGL (get, never):Int;\n\t\n\tpublic var READ_BUFFER (get, never):Int;\n\tpublic var UNPACK_ROW_LENGTH (get, never):Int;\n\tpublic var UNPACK_SKIP_ROWS (get, never):Int;\n\tpublic var UNPACK_SKIP_PIXELS (get, never):Int;\n\tpublic var PACK_ROW_LENGTH (get, never):Int;\n\tpublic var PACK_SKIP_ROWS (get, never):Int;\n\tpublic var PACK_SKIP_PIXELS (get, never):Int;\n\tpublic var TEXTURE_BINDING_3D (get, never):Int;\n\tpublic var UNPACK_SKIP_IMAGES (get, never):Int;\n\tpublic var UNPACK_IMAGE_HEIGHT (get, never):Int;\n\tpublic var MAX_3D_TEXTURE_SIZE (get, never):Int;\n\tpublic var MAX_ELEMENTS_VERTICES (get, never):Int;\n\tpublic var MAX_ELEMENTS_INDICES (get, never):Int;\n\tpublic var MAX_TEXTURE_LOD_BIAS (get, never):Int;\n\tpublic var MAX_FRAGMENT_UNIFORM_COMPONENTS (get, never):Int;\n\tpublic var MAX_VERTEX_UNIFORM_COMPONENTS (get, never):Int;\n\tpublic var MAX_ARRAY_TEXTURE_LAYERS (get, never):Int;\n\tpublic var MIN_PROGRAM_TEXEL_OFFSET (get, never):Int;\n\tpublic var MAX_PROGRAM_TEXEL_OFFSET (get, never):Int;\n\tpublic var MAX_VARYING_COMPONENTS (get, never):Int;\n\tpublic var FRAGMENT_SHADER_DERIVATIVE_HINT (get, never):Int;\n\tpublic var RASTERIZER_DISCARD (get, never):Int;\n\tpublic var VERTEX_ARRAY_BINDING (get, never):Int;\n\tpublic var MAX_VERTEX_OUTPUT_COMPONENTS (get, never):Int;\n\tpublic var MAX_FRAGMENT_INPUT_COMPONENTS (get, never):Int;\n\tpublic var MAX_SERVER_WAIT_TIMEOUT (get, never):Int;\n\tpublic var MAX_ELEMENT_INDEX (get, never):Int;\n\t\n\tpublic var RED (get, never):Int;\n\tpublic var RGB8 (get, never):Int;\n\tpublic var RGBA8 (get, never):Int;\n\tpublic var RGB10_A2 (get, never):Int;\n\tpublic var TEXTURE_3D (get, never):Int;\n\tpublic var TEXTURE_WRAP_R (get, never):Int;\n\tpublic var TEXTURE_MIN_LOD (get, never):Int;\n\tpublic var TEXTURE_MAX_LOD (get, never):Int;\n\tpublic var TEXTURE_BASE_LEVEL (get, never):Int;\n\tpublic var TEXTURE_MAX_LEVEL (get, never):Int;\n\tpublic var TEXTURE_COMPARE_MODE (get, never):Int;\n\tpublic var TEXTURE_COMPARE_FUNC (get, never):Int;\n\tpublic var SRGB (get, never):Int;\n\tpublic var SRGB8 (get, never):Int;\n\tpublic var SRGB8_ALPHA8 (get, never):Int;\n\tpublic var COMPARE_REF_TO_TEXTURE (get, never):Int;\n\tpublic var RGBA32F (get, never):Int;\n\tpublic var RGB32F (get, never):Int;\n\tpublic var RGBA16F (get, never):Int;\n\tpublic var RGB16F (get, never):Int;\n\tpublic var TEXTURE_2D_ARRAY (get, never):Int;\n\tpublic var TEXTURE_BINDING_2D_ARRAY (get, never):Int;\n\tpublic var R11F_G11F_B10F (get, never):Int;\n\tpublic var RGB9_E5 (get, never):Int;\n\tpublic var RGBA32UI (get, never):Int;\n\tpublic var RGB32UI (get, never):Int;\n\tpublic var RGBA16UI (get, never):Int;\n\tpublic var RGB16UI (get, never):Int;\n\tpublic var RGBA8UI (get, never):Int;\n\tpublic var RGB8UI (get, never):Int;\n\tpublic var RGBA32I (get, never):Int;\n\tpublic var RGB32I (get, never):Int;\n\tpublic var RGBA16I (get, never):Int;\n\tpublic var RGB16I (get, never):Int;\n\tpublic var RGBA8I (get, never):Int;\n\tpublic var RGB8I (get, never):Int;\n\tpublic var RED_INTEGER (get, never):Int;\n\tpublic var RGB_INTEGER (get, never):Int;\n\tpublic var RGBA_INTEGER (get, never):Int;\n\tpublic var R8 (get, never):Int;\n\tpublic var RG8 (get, never):Int;\n\tpublic var R16F (get, never):Int;\n\tpublic var R32F (get, never):Int;\n\tpublic var RG16F (get, never):Int;\n\tpublic var RG32F (get, never):Int;\n\tpublic var R8I (get, never):Int;\n\tpublic var R8UI (get, never):Int;\n\tpublic var R16I (get, never):Int;\n\tpublic var R16UI (get, never):Int;\n\tpublic var R32I (get, never):Int;\n\tpublic var R32UI (get, never):Int;\n\tpublic var RG8I (get, never):Int;\n\tpublic var RG8UI (get, never):Int;\n\tpublic var RG16I (get, never):Int;\n\tpublic var RG16UI (get, never):Int;\n\tpublic var RG32I (get, never):Int;\n\tpublic var RG32UI (get, never):Int;\n\tpublic var R8_SNORM (get, never):Int;\n\tpublic var RG8_SNORM (get, never):Int;\n\tpublic var RGB8_SNORM (get, never):Int;\n\tpublic var RGBA8_SNORM (get, never):Int;\n\tpublic var RGB10_A2UI (get, never):Int;\n\tpublic var TEXTURE_IMMUTABLE_FORMAT (get, never):Int;\n\tpublic var TEXTURE_IMMUTABLE_LEVELS (get, never):Int;\n\t\n\tpublic var UNSIGNED_INT_2_10_10_10_REV (get, never):Int;\n\tpublic var UNSIGNED_INT_10F_11F_11F_REV (get, never):Int;\n\tpublic var UNSIGNED_INT_5_9_9_9_REV (get, never):Int;\n\tpublic var FLOAT_32_UNSIGNED_INT_24_8_REV (get, never):Int;\n\tpublic var UNSIGNED_INT_24_8 (get, never):Int;\n\tpublic var HALF_FLOAT (get, never):Int;\n\tpublic var RG (get, never):Int;\n\tpublic var RG_INTEGER (get, never):Int;\n\tpublic var INT_2_10_10_10_REV (get, never):Int;\n\t\n\tpublic var CURRENT_QUERY (get, never):Int;\n\tpublic var QUERY_RESULT (get, never):Int;\n\tpublic var QUERY_RESULT_AVAILABLE (get, never):Int;\n\tpublic var ANY_SAMPLES_PASSED (get, never):Int;\n\tpublic var ANY_SAMPLES_PASSED_CONSERVATIVE (get, never):Int;\n\t\n\tpublic var MAX_DRAW_BUFFERS (get, never):Int;\n\tpublic var DRAW_BUFFER0 (get, never):Int;\n\tpublic var DRAW_BUFFER1 (get, never):Int;\n\tpublic var DRAW_BUFFER2 (get, never):Int;\n\tpublic var DRAW_BUFFER3 (get, never):Int;\n\tpublic var DRAW_BUFFER4 (get, never):Int;\n\tpublic var DRAW_BUFFER5 (get, never):Int;\n\tpublic var DRAW_BUFFER6 (get, never):Int;\n\tpublic var DRAW_BUFFER7 (get, never):Int;\n\tpublic var DRAW_BUFFER8 (get, never):Int;\n\tpublic var DRAW_BUFFER9 (get, never):Int;\n\tpublic var DRAW_BUFFER10 (get, never):Int;\n\tpublic var DRAW_BUFFER11 (get, never):Int;\n\tpublic var DRAW_BUFFER12 (get, never):Int;\n\tpublic var DRAW_BUFFER13 (get, never):Int;\n\tpublic var DRAW_BUFFER14 (get, never):Int;\n\tpublic var DRAW_BUFFER15 (get, never):Int;\n\tpublic var MAX_COLOR_ATTACHMENTS (get, never):Int;\n\tpublic var COLOR_ATTACHMENT1 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT2 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT3 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT4 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT5 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT6 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT7 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT8 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT9 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT10 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT11 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT12 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT13 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT14 (get, never):Int;\n\tpublic var COLOR_ATTACHMENT15 (get, never):Int;\n\t\n\tpublic var SAMPLER_3D (get, never):Int;\n\tpublic var SAMPLER_2D_SHADOW (get, never):Int;\n\tpublic var SAMPLER_2D_ARRAY (get, never):Int;\n\tpublic var SAMPLER_2D_ARRAY_SHADOW (get, never):Int;\n\tpublic var SAMPLER_CUBE_SHADOW (get, never):Int;\n\tpublic var INT_SAMPLER_2D (get, never):Int;\n\tpublic var INT_SAMPLER_3D (get, never):Int;\n\tpublic var INT_SAMPLER_CUBE (get, never):Int;\n\tpublic var INT_SAMPLER_2D_ARRAY (get, never):Int;\n\tpublic var UNSIGNED_INT_SAMPLER_2D (get, never):Int;\n\tpublic var UNSIGNED_INT_SAMPLER_3D (get, never):Int;\n\tpublic var UNSIGNED_INT_SAMPLER_CUBE (get, never):Int;\n\tpublic var UNSIGNED_INT_SAMPLER_2D_ARRAY (get, never):Int;\n\tpublic var MAX_SAMPLES (get, never):Int;\n\tpublic var SAMPLER_BINDING (get, never):Int;\n\t\n\tpublic var PIXEL_PACK_BUFFER (get, never):Int;\n\tpublic var PIXEL_UNPACK_BUFFER (get, never):Int;\n\tpublic var PIXEL_PACK_BUFFER_BINDING (get, never):Int;\n\tpublic var PIXEL_UNPACK_BUFFER_BINDING (get, never):Int;\n\tpublic var COPY_READ_BUFFER (get, never):Int;\n\tpublic var COPY_WRITE_BUFFER (get, never):Int;\n\tpublic var COPY_READ_BUFFER_BINDING (get, never):Int;\n\tpublic var COPY_WRITE_BUFFER_BINDING (get, never):Int;\n\t\n\tpublic var FLOAT_MAT2x3 (get, never):Int;\n\tpublic var FLOAT_MAT2x4 (get, never):Int;\n\tpublic var FLOAT_MAT3x2 (get, never):Int;\n\tpublic var FLOAT_MAT3x4 (get, never):Int;\n\tpublic var FLOAT_MAT4x2 (get, never):Int;\n\tpublic var FLOAT_MAT4x3 (get, never):Int;\n\tpublic var UNSIGNED_INT_VEC2 (get, never):Int;\n\tpublic var UNSIGNED_INT_VEC3 (get, never):Int;\n\tpublic var UNSIGNED_INT_VEC4 (get, never):Int;\n\tpublic var UNSIGNED_NORMALIZED (get, never):Int;\n\tpublic var SIGNED_NORMALIZED (get, never):Int;\n\t\n\tpublic var VERTEX_ATTRIB_ARRAY_INTEGER (get, never):Int;\n\tpublic var VERTEX_ATTRIB_ARRAY_DIVISOR (get, never):Int;\n\t\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_MODE (get, never):Int;\n\tpublic var MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_VARYINGS (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_START (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_SIZE (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN (get, never):Int;\n\tpublic var MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS (get, never):Int;\n\tpublic var MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS (get, never):Int;\n\tpublic var INTERLEAVED_ATTRIBS (get, never):Int;\n\tpublic var SEPARATE_ATTRIBS (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_BUFFER_BINDING (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_PAUSED (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_ACTIVE (get, never):Int;\n\tpublic var TRANSFORM_FEEDBACK_BINDING (get, never):Int;\n\t\n\tpublic var FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_RED_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_GREEN_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_BLUE_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE (get, never):Int;\n\tpublic var FRAMEBUFFER_DEFAULT (get, never):Int;\n\tpublic var DEPTH24_STENCIL8 (get, never):Int;\n\tpublic var DRAW_FRAMEBUFFER_BINDING (get, never):Int;\n\tpublic var READ_FRAMEBUFFER (get, never):Int;\n\tpublic var DRAW_FRAMEBUFFER (get, never):Int;\n\tpublic var READ_FRAMEBUFFER_BINDING (get, never):Int;\n\tpublic var RENDERBUFFER_SAMPLES (get, never):Int;\n\tpublic var FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER (get, never):Int;\n\tpublic var FRAMEBUFFER_INCOMPLETE_MULTISAMPLE (get, never):Int;\n\t\n\tpublic var UNIFORM_BUFFER (get, never):Int;\n\tpublic var UNIFORM_BUFFER_BINDING (get, never):Int;\n\tpublic var UNIFORM_BUFFER_START (get, never):Int;\n\tpublic var UNIFORM_BUFFER_SIZE (get, never):Int;\n\tpublic var MAX_VERTEX_UNIFORM_BLOCKS (get, never):Int;\n\tpublic var MAX_FRAGMENT_UNIFORM_BLOCKS (get, never):Int;\n\tpublic var MAX_COMBINED_UNIFORM_BLOCKS (get, never):Int;\n\tpublic var MAX_UNIFORM_BUFFER_BINDINGS (get, never):Int;\n\tpublic var MAX_UNIFORM_BLOCK_SIZE (get, never):Int;\n\tpublic var MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS (get, never):Int;\n\tpublic var MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS (get, never):Int;\n\tpublic var UNIFORM_BUFFER_OFFSET_ALIGNMENT (get, never):Int;\n\tpublic var ACTIVE_UNIFORM_BLOCKS (get, never):Int;\n\tpublic var UNIFORM_TYPE (get, never):Int;\n\tpublic var UNIFORM_SIZE (get, never):Int;\n\tpublic var UNIFORM_BLOCK_INDEX (get, never):Int;\n\tpublic var UNIFORM_OFFSET (get, never):Int;\n\tpublic var UNIFORM_ARRAY_STRIDE (get, never):Int;\n\tpublic var UNIFORM_MATRIX_STRIDE (get, never):Int;\n\tpublic var UNIFORM_IS_ROW_MAJOR (get, never):Int;\n\tpublic var UNIFORM_BLOCK_BINDING (get, never):Int;\n\tpublic var UNIFORM_BLOCK_DATA_SIZE (get, never):Int;\n\tpublic var UNIFORM_BLOCK_ACTIVE_UNIFORMS (get, never):Int;\n\tpublic var UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES (get, never):Int;\n\tpublic var UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER (get, never):Int;\n\tpublic var UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER (get, never):Int;\n\t\n\tpublic var OBJECT_TYPE (get, never):Int;\n\tpublic var SYNC_CONDITION (get, never):Int;\n\tpublic var SYNC_STATUS (get, never):Int;\n\tpublic var SYNC_FLAGS (get, never):Int;\n\tpublic var SYNC_FENCE (get, never):Int;\n\tpublic var SYNC_GPU_COMMANDS_COMPLETE (get, never):Int;\n\tpublic var UNSIGNALED (get, never):Int;\n\tpublic var SIGNALED (get, never):Int;\n\tpublic var ALREADY_SIGNALED (get, never):Int;\n\tpublic var TIMEOUT_EXPIRED (get, never):Int;\n\tpublic var CONDITION_SATISFIED (get, never):Int;\n\tpublic var WAIT_FAILED (get, never):Int;\n\tpublic var SYNC_FLUSH_COMMANDS_BIT (get, never):Int;\n\t\n\tpublic var COLOR (get, never):Int;\n\tpublic var DEPTH (get, never):Int;\n\tpublic var STENCIL (get, never):Int;\n\tpublic var MIN (get, never):Int;\n\tpublic var MAX (get, never):Int;\n\tpublic var DEPTH_COMPONENT24 (get, never):Int;\n\tpublic var STREAM_READ (get, never):Int;\n\tpublic var STREAM_COPY (get, never):Int;\n\tpublic var STATIC_READ (get, never):Int;\n\tpublic var STATIC_COPY (get, never):Int;\n\tpublic var DYNAMIC_READ (get, never):Int;\n\tpublic var DYNAMIC_COPY (get, never):Int;\n\tpublic var DEPTH_COMPONENT32F (get, never):Int;\n\tpublic var DEPTH32F_STENCIL8 (get, never):Int;\n\tpublic var INVALID_INDEX (get, never):Int;\n\tpublic var TIMEOUT_IGNORED (get, never):Int;\n\tpublic var MAX_CLIENT_WAIT_TIMEOUT_WEBGL (get, never):Int;\n\t\n\tpublic var type (get, never):GLContextType;\n\tpublic var version (get, never):Float;\n\t\n\tprivate inline function get_DEPTH_BUFFER_BIT ():Int { return this.DEPTH_BUFFER_BIT; }\n\tprivate inline function get_STENCIL_BUFFER_BIT ():Int { return this.STENCIL_BUFFER_BIT; }\n\tprivate inline function get_COLOR_BUFFER_BIT ():Int { return this.COLOR_BUFFER_BIT; }\n\tprivate inline function get_POINTS ():Int { return this.POINTS; }\n\tprivate inline function get_LINES ():Int { return this.LINES; }\n\tprivate inline function get_LINE_LOOP ():Int { return this.LINE_LOOP; }\n\tprivate inline function get_LINE_STRIP ():Int { return this.LINE_STRIP; }\n\tprivate inline function get_TRIANGLES ():Int { return this.TRIANGLES; }\n\tprivate inline function get_TRIANGLE_STRIP ():Int { return this.TRIANGLE_STRIP; }\n\tprivate inline function get_TRIANGLE_FAN ():Int { return this.TRIANGLE_FAN; }\n\tprivate inline function get_ZERO ():Int { return this.ZERO; }\n\tprivate inline function get_ONE ():Int { return this.ONE; }\n\tprivate inline function get_SRC_COLOR ():Int { return this.SRC_COLOR; }\n\tprivate inline function get_ONE_MINUS_SRC_COLOR ():Int { return this.ONE_MINUS_SRC_COLOR; }\n\tprivate inline function get_SRC_ALPHA ():Int { return this.SRC_ALPHA; }\n\tprivate inline function get_ONE_MINUS_SRC_ALPHA ():Int { return this.ONE_MINUS_SRC_ALPHA; }\n\tprivate inline function get_DST_ALPHA ():Int { return this.DST_ALPHA; }\n\tprivate inline function get_ONE_MINUS_DST_ALPHA ():Int { return this.ONE_MINUS_DST_ALPHA; }\n\tprivate inline function get_DST_COLOR ():Int { return this.DST_COLOR; }\n\tprivate inline function get_ONE_MINUS_DST_COLOR ():Int { return this.ONE_MINUS_DST_COLOR; }\n\tprivate inline function get_SRC_ALPHA_SATURATE ():Int { return this.SRC_ALPHA_SATURATE; }\n\tprivate inline function get_FUNC_ADD ():Int { return this.FUNC_ADD; }\n\tprivate inline function get_BLEND_EQUATION ():Int { return this.BLEND_EQUATION; }\n\tprivate inline function get_BLEND_EQUATION_RGB ():Int { return this.BLEND_EQUATION_RGB; }\n\tprivate inline function get_BLEND_EQUATION_ALPHA ():Int { return this.BLEND_EQUATION_ALPHA; }\n\tprivate inline function get_FUNC_SUBTRACT ():Int { return this.FUNC_SUBTRACT; }\n\tprivate inline function get_FUNC_REVERSE_SUBTRACT ():Int { return this.FUNC_REVERSE_SUBTRACT; }\n\tprivate inline function get_BLEND_DST_RGB ():Int { return this.BLEND_DST_RGB; }\n\tprivate inline function get_BLEND_SRC_RGB ():Int { return this.BLEND_SRC_RGB; }\n\tprivate inline function get_BLEND_DST_ALPHA ():Int { return this.BLEND_DST_ALPHA; }\n\tprivate inline function get_BLEND_SRC_ALPHA ():Int { return this.BLEND_SRC_ALPHA; }\n\tprivate inline function get_CONSTANT_COLOR ():Int { return this.CONSTANT_COLOR; }\n\tprivate inline function get_ONE_MINUS_CONSTANT_COLOR ():Int { return this.ONE_MINUS_CONSTANT_COLOR; }\n\tprivate inline function get_CONSTANT_ALPHA ():Int { return this.CONSTANT_ALPHA; }\n\tprivate inline function get_ONE_MINUS_CONSTANT_ALPHA ():Int { return this.ONE_MINUS_CONSTANT_ALPHA; }\n\tprivate inline function get_BLEND_COLOR ():Int { return this.BLEND_COLOR; }\n\tprivate inline function get_ARRAY_BUFFER ():Int { return this.ARRAY_BUFFER; }\n\tprivate inline function get_ELEMENT_ARRAY_BUFFER ():Int { return this.ELEMENT_ARRAY_BUFFER; }\n\tprivate inline function get_ARRAY_BUFFER_BINDING ():Int { return this.ARRAY_BUFFER_BINDING; }\n\tprivate inline function get_ELEMENT_ARRAY_BUFFER_BINDING ():Int { return this.ELEMENT_ARRAY_BUFFER_BINDING; }\n\tprivate inline function get_STREAM_DRAW ():Int { return this.STREAM_DRAW; }\n\tprivate inline function get_STATIC_DRAW ():Int { return this.STATIC_DRAW; }\n\tprivate inline function get_DYNAMIC_DRAW ():Int { return this.DYNAMIC_DRAW; }\n\tprivate inline function get_BUFFER_SIZE ():Int { return this.BUFFER_SIZE; }\n\tprivate inline function get_BUFFER_USAGE ():Int { return this.BUFFER_USAGE; }\n\tprivate inline function get_CURRENT_VERTEX_ATTRIB ():Int { return this.CURRENT_VERTEX_ATTRIB; }\n\tprivate inline function get_FRONT ():Int { return this.FRONT; }\n\tprivate inline function get_BACK ():Int { return this.BACK; }\n\tprivate inline function get_FRONT_AND_BACK ():Int { return this.FRONT_AND_BACK; }\n\tprivate inline function get_CULL_FACE ():Int { return this.CULL_FACE; }\n\tprivate inline function get_BLEND ():Int { return this.BLEND; }\n\tprivate inline function get_DITHER ():Int { return this.DITHER; }\n\tprivate inline function get_STENCIL_TEST ():Int { return this.STENCIL_TEST; }\n\tprivate inline function get_DEPTH_TEST ():Int { return this.DEPTH_TEST; }\n\tprivate inline function get_SCISSOR_TEST ():Int { return this.SCISSOR_TEST; }\n\tprivate inline function get_POLYGON_OFFSET_FILL ():Int { return this.POLYGON_OFFSET_FILL; }\n\tprivate inline function get_SAMPLE_ALPHA_TO_COVERAGE ():Int { return this.SAMPLE_ALPHA_TO_COVERAGE; }\n\tprivate inline function get_SAMPLE_COVERAGE ():Int { return this.SAMPLE_COVERAGE; }\n\tprivate inline function get_NO_ERROR ():Int { return this.NO_ERROR; }\n\tprivate inline function get_INVALID_ENUM ():Int { return this.INVALID_ENUM; }\n\tprivate inline function get_INVALID_VALUE ():Int { return this.INVALID_VALUE; }\n\tprivate inline function get_INVALID_OPERATION ():Int { return this.INVALID_OPERATION; }\n\tprivate inline function get_OUT_OF_MEMORY ():Int { return this.OUT_OF_MEMORY; }\n\tprivate inline function get_CW ():Int { return this.CW; }\n\tprivate inline function get_CCW ():Int { return this.CCW; }\n\tprivate inline function get_LINE_WIDTH ():Int { return this.LINE_WIDTH; }\n\tprivate inline function get_ALIASED_POINT_SIZE_RANGE ():Int { return this.ALIASED_POINT_SIZE_RANGE; }\n\tprivate inline function get_ALIASED_LINE_WIDTH_RANGE ():Int { return this.ALIASED_LINE_WIDTH_RANGE; }\n\tprivate inline function get_CULL_FACE_MODE ():Int { return this.CULL_FACE_MODE; }\n\tprivate inline function get_FRONT_FACE ():Int { return this.FRONT_FACE; }\n\tprivate inline function get_DEPTH_RANGE ():Int { return this.DEPTH_RANGE; }\n\tprivate inline function get_DEPTH_WRITEMASK ():Int { return this.DEPTH_WRITEMASK; }\n\tprivate inline function get_DEPTH_CLEAR_VALUE ():Int { return this.DEPTH_CLEAR_VALUE; }\n\tprivate inline function get_DEPTH_FUNC ():Int { return this.DEPTH_FUNC; }\n\tprivate inline function get_STENCIL_CLEAR_VALUE ():Int { return this.STENCIL_CLEAR_VALUE; }\n\tprivate inline function get_STENCIL_FUNC ():Int { return this.STENCIL_FUNC; }\n\tprivate inline function get_STENCIL_FAIL ():Int { return this.STENCIL_FAIL; }\n\tprivate inline function get_STENCIL_PASS_DEPTH_FAIL ():Int { return this.STENCIL_PASS_DEPTH_FAIL; }\n\tprivate inline function get_STENCIL_PASS_DEPTH_PASS ():Int { return this.STENCIL_PASS_DEPTH_PASS; }\n\tprivate inline function get_STENCIL_REF ():Int { return this.STENCIL_REF; }\n\tprivate inline function get_STENCIL_VALUE_MASK ():Int { return this.STENCIL_VALUE_MASK; }\n\tprivate inline function get_STENCIL_WRITEMASK ():Int { return this.STENCIL_WRITEMASK; }\n\tprivate inline function get_STENCIL_BACK_FUNC ():Int { return this.STENCIL_BACK_FUNC; }\n\tprivate inline function get_STENCIL_BACK_FAIL ():Int { return this.STENCIL_BACK_FAIL; }\n\tprivate inline function get_STENCIL_BACK_PASS_DEPTH_FAIL ():Int { return this.STENCIL_BACK_PASS_DEPTH_FAIL; }\n\tprivate inline function get_STENCIL_BACK_PASS_DEPTH_PASS ():Int { return this.STENCIL_BACK_PASS_DEPTH_PASS; }\n\tprivate inline function get_STENCIL_BACK_REF ():Int { return this.STENCIL_BACK_REF; }\n\tprivate inline function get_STENCIL_BACK_VALUE_MASK ():Int { return this.STENCIL_BACK_VALUE_MASK; }\n\tprivate inline function get_STENCIL_BACK_WRITEMASK ():Int { return this.STENCIL_BACK_WRITEMASK; }\n\tprivate inline function get_VIEWPORT ():Int { return this.VIEWPORT; }\n\tprivate inline function get_SCISSOR_BOX ():Int { return this.SCISSOR_BOX; }\n\tprivate inline function get_COLOR_CLEAR_VALUE ():Int { return this.COLOR_CLEAR_VALUE; }\n\tprivate inline function get_COLOR_WRITEMASK ():Int { return this.COLOR_WRITEMASK; }\n\tprivate inline function get_UNPACK_ALIGNMENT ():Int { return this.UNPACK_ALIGNMENT; }\n\tprivate inline function get_PACK_ALIGNMENT ():Int { return this.PACK_ALIGNMENT; }\n\tprivate inline function get_MAX_TEXTURE_SIZE ():Int { return this.MAX_TEXTURE_SIZE; }\n\tprivate inline function get_MAX_VIEWPORT_DIMS ():Int { return this.MAX_VIEWPORT_DIMS; }\n\tprivate inline function get_SUBPIXEL_BITS ():Int { return this.SUBPIXEL_BITS; }\n\tprivate inline function get_RED_BITS ():Int { return this.RED_BITS; }\n\tprivate inline function get_GREEN_BITS ():Int { return this.GREEN_BITS; }\n\tprivate inline function get_BLUE_BITS ():Int { return this.BLUE_BITS; }\n\tprivate inline function get_ALPHA_BITS ():Int { return this.ALPHA_BITS; }\n\tprivate inline function get_DEPTH_BITS ():Int { return this.DEPTH_BITS; }\n\tprivate inline function get_STENCIL_BITS ():Int { return this.STENCIL_BITS; }\n\tprivate inline function get_POLYGON_OFFSET_UNITS ():Int { return this.POLYGON_OFFSET_UNITS; }\n\tprivate inline function get_POLYGON_OFFSET_FACTOR ():Int { return this.POLYGON_OFFSET_FACTOR; }\n\tprivate inline function get_TEXTURE_BINDING_2D ():Int { return this.TEXTURE_BINDING_2D; }\n\tprivate inline function get_SAMPLE_BUFFERS ():Int { return this.SAMPLE_BUFFERS; }\n\tprivate inline function get_SAMPLES ():Int { return this.SAMPLES; }\n\tprivate inline function get_SAMPLE_COVERAGE_VALUE ():Int { return this.SAMPLE_COVERAGE_VALUE; }\n\tprivate inline function get_SAMPLE_COVERAGE_INVERT ():Int { return this.SAMPLE_COVERAGE_INVERT; }\n\tprivate inline function get_COMPRESSED_TEXTURE_FORMATS ():Int { return this.COMPRESSED_TEXTURE_FORMATS; }\n\tprivate inline function get_DONT_CARE ():Int { return this.DONT_CARE; }\n\tprivate inline function get_FASTEST ():Int { return this.FASTEST; }\n\tprivate inline function get_NICEST ():Int { return this.NICEST; }\n\tprivate inline function get_GENERATE_MIPMAP_HINT ():Int { return this.GENERATE_MIPMAP_HINT; }\n\tprivate inline function get_BYTE ():Int { return this.BYTE; }\n\tprivate inline function get_UNSIGNED_BYTE ():Int { return this.UNSIGNED_BYTE; }\n\tprivate inline function get_SHORT ():Int { return this.SHORT; }\n\tprivate inline function get_UNSIGNED_SHORT ():Int { return this.UNSIGNED_SHORT; }\n\tprivate inline function get_INT ():Int { return this.INT; }\n\tprivate inline function get_UNSIGNED_INT ():Int { return this.UNSIGNED_INT; }\n\tprivate inline function get_FLOAT ():Int { return this.FLOAT; }\n\tprivate inline function get_DEPTH_COMPONENT ():Int { return this.DEPTH_COMPONENT; }\n\tprivate inline function get_ALPHA ():Int { return this.ALPHA; }\n\tprivate inline function get_RGB ():Int { return this.RGB; }\n\tprivate inline function get_RGBA ():Int { return this.RGBA; }\n\tprivate inline function get_LUMINANCE ():Int { return this.LUMINANCE; }\n\tprivate inline function get_LUMINANCE_ALPHA ():Int { return this.LUMINANCE_ALPHA; }\n\tprivate inline function get_UNSIGNED_SHORT_4_4_4_4 ():Int { return this.UNSIGNED_SHORT_4_4_4_4; }\n\tprivate inline function get_UNSIGNED_SHORT_5_5_5_1 ():Int { return this.UNSIGNED_SHORT_5_5_5_1; }\n\tprivate inline function get_UNSIGNED_SHORT_5_6_5 ():Int { return this.UNSIGNED_SHORT_5_6_5; }\n\tprivate inline function get_FRAGMENT_SHADER ():Int { return this.FRAGMENT_SHADER; }\n\tprivate inline function get_VERTEX_SHADER ():Int { return this.VERTEX_SHADER; }\n\tprivate inline function get_MAX_VERTEX_ATTRIBS ():Int { return this.MAX_VERTEX_ATTRIBS; }\n\tprivate inline function get_MAX_VERTEX_UNIFORM_VECTORS ():Int { return this.MAX_VERTEX_UNIFORM_VECTORS; }\n\tprivate inline function get_MAX_VARYING_VECTORS ():Int { return this.MAX_VARYING_VECTORS; }\n\tprivate inline function get_MAX_COMBINED_TEXTURE_IMAGE_UNITS ():Int { return this.MAX_COMBINED_TEXTURE_IMAGE_UNITS; }\n\tprivate inline function get_MAX_VERTEX_TEXTURE_IMAGE_UNITS ():Int { return this.MAX_VERTEX_TEXTURE_IMAGE_UNITS; }\n\tprivate inline function get_MAX_TEXTURE_IMAGE_UNITS ():Int { return this.MAX_TEXTURE_IMAGE_UNITS; }\n\tprivate inline function get_MAX_FRAGMENT_UNIFORM_VECTORS ():Int { return this.MAX_FRAGMENT_UNIFORM_VECTORS; }\n\tprivate inline function get_SHADER_TYPE ():Int { return this.SHADER_TYPE; }\n\tprivate inline function get_DELETE_STATUS ():Int { return this.DELETE_STATUS; }\n\tprivate inline function get_LINK_STATUS ():Int { return this.LINK_STATUS; }\n\tprivate inline function get_VALIDATE_STATUS ():Int { return this.VALIDATE_STATUS; }\n\tprivate inline function get_ATTACHED_SHADERS ():Int { return this.ATTACHED_SHADERS; }\n\tprivate inline function get_ACTIVE_UNIFORMS ():Int { return this.ACTIVE_UNIFORMS; }\n\tprivate inline function get_ACTIVE_ATTRIBUTES ():Int { return this.ACTIVE_ATTRIBUTES; }\n\tprivate inline function get_SHADING_LANGUAGE_VERSION ():Int { return this.SHADING_LANGUAGE_VERSION; }\n\tprivate inline function get_CURRENT_PROGRAM ():Int { return this.CURRENT_PROGRAM; }\n\tprivate inline function get_NEVER ():Int { return this.NEVER; }\n\tprivate inline function get_LESS ():Int { return this.LESS; }\n\tprivate inline function get_EQUAL ():Int { return this.EQUAL; }\n\tprivate inline function get_LEQUAL ():Int { return this.LEQUAL; }\n\tprivate inline function get_GREATER ():Int { return this.GREATER; }\n\tprivate inline function get_NOTEQUAL ():Int { return this.NOTEQUAL; }\n\tprivate inline function get_GEQUAL ():Int { return this.GEQUAL; }\n\tprivate inline function get_ALWAYS ():Int { return this.ALWAYS; }\n\tprivate inline function get_KEEP ():Int { return this.KEEP; }\n\tprivate inline function get_REPLACE ():Int { return this.REPLACE; }\n\tprivate inline function get_INCR ():Int { return this.INCR; }\n\tprivate inline function get_DECR ():Int { return this.DECR; }\n\tprivate inline function get_INVERT ():Int { return this.INVERT; }\n\tprivate inline function get_INCR_WRAP ():Int { return this.INCR_WRAP; }\n\tprivate inline function get_DECR_WRAP ():Int { return this.DECR_WRAP; }\n\tprivate inline function get_VENDOR ():Int { return this.VENDOR; }\n\tprivate inline function get_RENDERER ():Int { return this.RENDERER; }\n\tprivate inline function get_VERSION ():Int { return this.VERSION; }\n\tprivate inline function get_NEAREST ():Int { return this.NEAREST; }\n\tprivate inline function get_LINEAR ():Int { return this.LINEAR; }\n\tprivate inline function get_NEAREST_MIPMAP_NEAREST ():Int { return this.NEAREST_MIPMAP_NEAREST; }\n\tprivate inline function get_LINEAR_MIPMAP_NEAREST ():Int { return this.LINEAR_MIPMAP_NEAREST; }\n\tprivate inline function get_NEAREST_MIPMAP_LINEAR ():Int { return this.NEAREST_MIPMAP_LINEAR; }\n\tprivate inline function get_LINEAR_MIPMAP_LINEAR ():Int { return this.LINEAR_MIPMAP_LINEAR; }\n\tprivate inline function get_TEXTURE_MAG_FILTER ():Int { return this.TEXTURE_MAG_FILTER; }\n\tprivate inline function get_TEXTURE_MIN_FILTER ():Int { return this.TEXTURE_MIN_FILTER; }\n\tprivate inline function get_TEXTURE_WRAP_S ():Int { return this.TEXTURE_WRAP_S; }\n\tprivate inline function get_TEXTURE_WRAP_T ():Int { return this.TEXTURE_WRAP_T; }\n\tprivate inline function get_TEXTURE_2D ():Int { return this.TEXTURE_2D; }\n\tprivate inline function get_TEXTURE ():Int { return this.TEXTURE; }\n\tprivate inline function get_TEXTURE_CUBE_MAP ():Int { return this.TEXTURE_CUBE_MAP; }\n\tprivate inline function get_TEXTURE_BINDING_CUBE_MAP ():Int { return this.TEXTURE_BINDING_CUBE_MAP; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_POSITIVE_X ():Int { return this.TEXTURE_CUBE_MAP_POSITIVE_X; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_NEGATIVE_X ():Int { return this.TEXTURE_CUBE_MAP_NEGATIVE_X; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_POSITIVE_Y ():Int { return this.TEXTURE_CUBE_MAP_POSITIVE_Y; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_NEGATIVE_Y ():Int { return this.TEXTURE_CUBE_MAP_NEGATIVE_Y; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_POSITIVE_Z ():Int { return this.TEXTURE_CUBE_MAP_POSITIVE_Z; }\n\tprivate inline function get_TEXTURE_CUBE_MAP_NEGATIVE_Z ():Int { return this.TEXTURE_CUBE_MAP_NEGATIVE_Z; }\n\tprivate inline function get_MAX_CUBE_MAP_TEXTURE_SIZE ():Int { return this.MAX_CUBE_MAP_TEXTURE_SIZE; }\n\tprivate inline function get_TEXTURE0 ():Int { return this.TEXTURE0; }\n\tprivate inline function get_TEXTURE1 ():Int { return this.TEXTURE1; }\n\tprivate inline function get_TEXTURE2 ():Int { return this.TEXTURE2; }\n\tprivate inline function get_TEXTURE3 ():Int { return this.TEXTURE3; }\n\tprivate inline function get_TEXTURE4 ():Int { return this.TEXTURE4; }\n\tprivate inline function get_TEXTURE5 ():Int { return this.TEXTURE5; }\n\tprivate inline function get_TEXTURE6 ():Int { return this.TEXTURE6; }\n\tprivate inline function get_TEXTURE7 ():Int { return this.TEXTURE7; }\n\tprivate inline function get_TEXTURE8 ():Int { return this.TEXTURE8; }\n\tprivate inline function get_TEXTURE9 ():Int { return this.TEXTURE9; }\n\tprivate inline function get_TEXTURE10 ():Int { return this.TEXTURE10; }\n\tprivate inline function get_TEXTURE11 ():Int { return this.TEXTURE11; }\n\tprivate inline function get_TEXTURE12 ():Int { return this.TEXTURE12; }\n\tprivate inline function get_TEXTURE13 ():Int { return this.TEXTURE13; }\n\tprivate inline function get_TEXTURE14 ():Int { return this.TEXTURE14; }\n\tprivate inline function get_TEXTURE15 ():Int { return this.TEXTURE15; }\n\tprivate inline function get_TEXTURE16 ():Int { return this.TEXTURE16; }\n\tprivate inline function get_TEXTURE17 ():Int { return this.TEXTURE17; }\n\tprivate inline function get_TEXTURE18 ():Int { return this.TEXTURE18; }\n\tprivate inline function get_TEXTURE19 ():Int { return this.TEXTURE19; }\n\tprivate inline function get_TEXTURE20 ():Int { return this.TEXTURE20; }\n\tprivate inline function get_TEXTURE21 ():Int { return this.TEXTURE21; }\n\tprivate inline function get_TEXTURE22 ():Int { return this.TEXTURE22; }\n\tprivate inline function get_TEXTURE23 ():Int { return this.TEXTURE23; }\n\tprivate inline function get_TEXTURE24 ():Int { return this.TEXTURE24; }\n\tprivate inline function get_TEXTURE25 ():Int { return this.TEXTURE25; }\n\tprivate inline function get_TEXTURE26 ():Int { return this.TEXTURE26; }\n\tprivate inline function get_TEXTURE27 ():Int { return this.TEXTURE27; }\n\tprivate inline function get_TEXTURE28 ():Int { return this.TEXTURE28; }\n\tprivate inline function get_TEXTURE29 ():Int { return this.TEXTURE29; }\n\tprivate inline function get_TEXTURE30 ():Int { return this.TEXTURE30; }\n\tprivate inline function get_TEXTURE31 ():Int { return this.TEXTURE31; }\n\tprivate inline function get_ACTIVE_TEXTURE ():Int { return this.ACTIVE_TEXTURE; }\n\tprivate inline function get_REPEAT ():Int { return this.REPEAT; }\n\tprivate inline function get_CLAMP_TO_EDGE ():Int { return this.CLAMP_TO_EDGE; }\n\tprivate inline function get_MIRRORED_REPEAT ():Int { return this.MIRRORED_REPEAT; }\n\tprivate inline function get_FLOAT_VEC2 ():Int { return this.FLOAT_VEC2; }\n\tprivate inline function get_FLOAT_VEC3 ():Int { return this.FLOAT_VEC3; }\n\tprivate inline function get_FLOAT_VEC4 ():Int { return this.FLOAT_VEC4; }\n\tprivate inline function get_INT_VEC2 ():Int { return this.INT_VEC2; }\n\tprivate inline function get_INT_VEC3 ():Int { return this.INT_VEC3; }\n\tprivate inline function get_INT_VEC4 ():Int { return this.INT_VEC4; }\n\tprivate inline function get_BOOL ():Int { return this.BOOL; }\n\tprivate inline function get_BOOL_VEC2 ():Int { return this.BOOL_VEC2; }\n\tprivate inline function get_BOOL_VEC3 ():Int { return this.BOOL_VEC3; }\n\tprivate inline function get_BOOL_VEC4 ():Int { return this.BOOL_VEC4; }\n\tprivate inline function get_FLOAT_MAT2 ():Int { return this.FLOAT_MAT2; }\n\tprivate inline function get_FLOAT_MAT3 ():Int { return this.FLOAT_MAT3; }\n\tprivate inline function get_FLOAT_MAT4 ():Int { return this.FLOAT_MAT4; }\n\tprivate inline function get_SAMPLER_2D ():Int { return this.SAMPLER_2D; }\n\tprivate inline function get_SAMPLER_CUBE ():Int { return this.SAMPLER_CUBE; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_ENABLED ():Int { return this.VERTEX_ATTRIB_ARRAY_ENABLED; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_SIZE ():Int { return this.VERTEX_ATTRIB_ARRAY_SIZE; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_STRIDE ():Int { return this.VERTEX_ATTRIB_ARRAY_STRIDE; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_TYPE ():Int { return this.VERTEX_ATTRIB_ARRAY_TYPE; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_NORMALIZED ():Int { return this.VERTEX_ATTRIB_ARRAY_NORMALIZED; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_POINTER ():Int { return this.VERTEX_ATTRIB_ARRAY_POINTER; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING ():Int { return this.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING; }\n\tprivate inline function get_COMPILE_STATUS ():Int { return this.COMPILE_STATUS; }\n\tprivate inline function get_LOW_FLOAT ():Int { return this.LOW_FLOAT; }\n\tprivate inline function get_MEDIUM_FLOAT ():Int { return this.MEDIUM_FLOAT; }\n\tprivate inline function get_HIGH_FLOAT ():Int { return this.HIGH_FLOAT; }\n\tprivate inline function get_LOW_INT ():Int { return this.LOW_INT; }\n\tprivate inline function get_MEDIUM_INT ():Int { return this.MEDIUM_INT; }\n\tprivate inline function get_HIGH_INT ():Int { return this.HIGH_INT; }\n\tprivate inline function get_FRAMEBUFFER ():Int { return this.FRAMEBUFFER; }\n\tprivate inline function get_RENDERBUFFER ():Int { return this.RENDERBUFFER; }\n\tprivate inline function get_RGBA4 ():Int { return this.RGBA4; }\n\tprivate inline function get_RGB5_A1 ():Int { return this.RGB5_A1; }\n\tprivate inline function get_RGB565 ():Int { return this.RGB565; }\n\tprivate inline function get_DEPTH_COMPONENT16 ():Int { return this.DEPTH_COMPONENT16; }\n\tprivate inline function get_STENCIL_INDEX ():Int { return this.STENCIL_INDEX; }\n\tprivate inline function get_STENCIL_INDEX8 ():Int { return this.STENCIL_INDEX8; }\n\tprivate inline function get_DEPTH_STENCIL ():Int { return this.DEPTH_STENCIL; }\n\tprivate inline function get_RENDERBUFFER_WIDTH ():Int { return this.RENDERBUFFER_WIDTH; }\n\tprivate inline function get_RENDERBUFFER_HEIGHT ():Int { return this.RENDERBUFFER_HEIGHT; }\n\tprivate inline function get_RENDERBUFFER_INTERNAL_FORMAT ():Int { return this.RENDERBUFFER_INTERNAL_FORMAT; }\n\tprivate inline function get_RENDERBUFFER_RED_SIZE ():Int { return this.RENDERBUFFER_RED_SIZE; }\n\tprivate inline function get_RENDERBUFFER_GREEN_SIZE ():Int { return this.RENDERBUFFER_GREEN_SIZE; }\n\tprivate inline function get_RENDERBUFFER_BLUE_SIZE ():Int { return this.RENDERBUFFER_BLUE_SIZE; }\n\tprivate inline function get_RENDERBUFFER_ALPHA_SIZE ():Int { return this.RENDERBUFFER_ALPHA_SIZE; }\n\tprivate inline function get_RENDERBUFFER_DEPTH_SIZE ():Int { return this.RENDERBUFFER_DEPTH_SIZE; }\n\tprivate inline function get_RENDERBUFFER_STENCIL_SIZE ():Int { return this.RENDERBUFFER_STENCIL_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE ():Int { return this.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME ():Int { return this.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL ():Int { return this.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE ():Int { return this.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE; }\n\tprivate inline function get_COLOR_ATTACHMENT0 ():Int { return this.COLOR_ATTACHMENT0; }\n\tprivate inline function get_DEPTH_ATTACHMENT ():Int { return this.DEPTH_ATTACHMENT; }\n\tprivate inline function get_STENCIL_ATTACHMENT ():Int { return this.STENCIL_ATTACHMENT; }\n\tprivate inline function get_DEPTH_STENCIL_ATTACHMENT ():Int { return this.DEPTH_STENCIL_ATTACHMENT; }\n\tprivate inline function get_NONE ():Int { return this.NONE; }\n\tprivate inline function get_FRAMEBUFFER_COMPLETE ():Int { return this.FRAMEBUFFER_COMPLETE; }\n\tprivate inline function get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT ():Int { return this.FRAMEBUFFER_INCOMPLETE_ATTACHMENT; }\n\tprivate inline function get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT ():Int { return this.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT; }\n\tprivate inline function get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS ():Int { return this.FRAMEBUFFER_INCOMPLETE_DIMENSIONS; }\n\tprivate inline function get_FRAMEBUFFER_UNSUPPORTED ():Int { return this.FRAMEBUFFER_UNSUPPORTED; }\n\tprivate inline function get_FRAMEBUFFER_BINDING ():Int { return this.FRAMEBUFFER_BINDING; }\n\tprivate inline function get_RENDERBUFFER_BINDING ():Int { return this.RENDERBUFFER_BINDING; }\n\tprivate inline function get_MAX_RENDERBUFFER_SIZE ():Int { return this.MAX_RENDERBUFFER_SIZE; }\n\tprivate inline function get_INVALID_FRAMEBUFFER_OPERATION ():Int { return this.INVALID_FRAMEBUFFER_OPERATION; }\n\tprivate inline function get_UNPACK_FLIP_Y_WEBGL ():Int { return this.UNPACK_FLIP_Y_WEBGL; }\n\tprivate inline function get_UNPACK_PREMULTIPLY_ALPHA_WEBGL ():Int { return this.UNPACK_PREMULTIPLY_ALPHA_WEBGL; }\n\tprivate inline function get_CONTEXT_LOST_WEBGL ():Int { return this.CONTEXT_LOST_WEBGL; }\n\tprivate inline function get_UNPACK_COLORSPACE_CONVERSION_WEBGL ():Int { return this.UNPACK_COLORSPACE_CONVERSION_WEBGL; }\n\tprivate inline function get_BROWSER_DEFAULT_WEBGL ():Int { return this.BROWSER_DEFAULT_WEBGL; }\n\tprivate inline function get_type ():GLContextType { return this.type; }\n\tprivate inline function get_version ():Float { return this.version; }\n\t\n\tprivate inline function get_READ_BUFFER ():Int { return this.READ_BUFFER; }\n\tprivate inline function get_UNPACK_ROW_LENGTH ():Int { return this.UNPACK_ROW_LENGTH; }\n\tprivate inline function get_UNPACK_SKIP_ROWS ():Int { return this.UNPACK_SKIP_ROWS; }\n\tprivate inline function get_UNPACK_SKIP_PIXELS ():Int { return this.UNPACK_SKIP_PIXELS; }\n\tprivate inline function get_PACK_ROW_LENGTH ():Int { return this.PACK_ROW_LENGTH; }\n\tprivate inline function get_PACK_SKIP_ROWS ():Int { return this.PACK_SKIP_ROWS; }\n\tprivate inline function get_PACK_SKIP_PIXELS ():Int { return this.PACK_SKIP_PIXELS; }\n\tprivate inline function get_TEXTURE_BINDING_3D ():Int { return this.TEXTURE_BINDING_3D; }\n\tprivate inline function get_UNPACK_SKIP_IMAGES ():Int { return this.UNPACK_SKIP_IMAGES; }\n\tprivate inline function get_UNPACK_IMAGE_HEIGHT ():Int { return this.UNPACK_IMAGE_HEIGHT; }\n\tprivate inline function get_MAX_3D_TEXTURE_SIZE ():Int { return this.MAX_3D_TEXTURE_SIZE; }\n\tprivate inline function get_MAX_ELEMENTS_VERTICES ():Int { return this.MAX_ELEMENTS_VERTICES; }\n\tprivate inline function get_MAX_ELEMENTS_INDICES ():Int { return this.MAX_ELEMENTS_INDICES; }\n\tprivate inline function get_MAX_TEXTURE_LOD_BIAS ():Int { return this.MAX_TEXTURE_LOD_BIAS; }\n\tprivate inline function get_MAX_FRAGMENT_UNIFORM_COMPONENTS ():Int { return this.MAX_FRAGMENT_UNIFORM_COMPONENTS; }\n\tprivate inline function get_MAX_VERTEX_UNIFORM_COMPONENTS ():Int { return this.MAX_VERTEX_UNIFORM_COMPONENTS; }\n\tprivate inline function get_MAX_ARRAY_TEXTURE_LAYERS ():Int { return this.MAX_ARRAY_TEXTURE_LAYERS; }\n\tprivate inline function get_MIN_PROGRAM_TEXEL_OFFSET ():Int { return this.MIN_PROGRAM_TEXEL_OFFSET; }\n\tprivate inline function get_MAX_PROGRAM_TEXEL_OFFSET ():Int { return this.MAX_PROGRAM_TEXEL_OFFSET; }\n\tprivate inline function get_MAX_VARYING_COMPONENTS ():Int { return this.MAX_VARYING_COMPONENTS; }\n\tprivate inline function get_FRAGMENT_SHADER_DERIVATIVE_HINT ():Int { return this.FRAGMENT_SHADER_DERIVATIVE_HINT; }\n\tprivate inline function get_RASTERIZER_DISCARD ():Int { return this.RASTERIZER_DISCARD; }\n\tprivate inline function get_VERTEX_ARRAY_BINDING ():Int { return this.VERTEX_ARRAY_BINDING; }\n\tprivate inline function get_MAX_VERTEX_OUTPUT_COMPONENTS ():Int { return this.MAX_VERTEX_OUTPUT_COMPONENTS; }\n\tprivate inline function get_MAX_FRAGMENT_INPUT_COMPONENTS ():Int { return this.MAX_FRAGMENT_INPUT_COMPONENTS; }\n\tprivate inline function get_MAX_SERVER_WAIT_TIMEOUT ():Int { return this.MAX_SERVER_WAIT_TIMEOUT; }\n\tprivate inline function get_MAX_ELEMENT_INDEX ():Int { return this.MAX_ELEMENT_INDEX; }\n\t\n\tprivate inline function get_RED ():Int { return this.RED; }\n\tprivate inline function get_RGB8 ():Int { return this.RGB8; }\n\tprivate inline function get_RGBA8 ():Int { return this.RGBA8; }\n\tprivate inline function get_RGB10_A2 ():Int { return this.RGB10_A2; }\n\tprivate inline function get_TEXTURE_3D ():Int { return this.TEXTURE_3D; }\n\tprivate inline function get_TEXTURE_WRAP_R ():Int { return this.TEXTURE_WRAP_R; }\n\tprivate inline function get_TEXTURE_MIN_LOD ():Int { return this.TEXTURE_MIN_LOD; }\n\tprivate inline function get_TEXTURE_MAX_LOD ():Int { return this.TEXTURE_MAX_LOD; }\n\tprivate inline function get_TEXTURE_BASE_LEVEL ():Int { return this.TEXTURE_BASE_LEVEL; }\n\tprivate inline function get_TEXTURE_MAX_LEVEL ():Int { return this.TEXTURE_MAX_LEVEL; }\n\tprivate inline function get_TEXTURE_COMPARE_MODE ():Int { return this.TEXTURE_COMPARE_MODE; }\n\tprivate inline function get_TEXTURE_COMPARE_FUNC ():Int { return this.TEXTURE_COMPARE_FUNC; }\n\tprivate inline function get_SRGB ():Int { return this.SRGB; }\n\tprivate inline function get_SRGB8 ():Int { return this.SRGB8; }\n\tprivate inline function get_SRGB8_ALPHA8 ():Int { return this.SRGB8_ALPHA8; }\n\tprivate inline function get_COMPARE_REF_TO_TEXTURE ():Int { return this.COMPARE_REF_TO_TEXTURE; }\n\tprivate inline function get_RGBA32F ():Int { return this.RGBA32F; }\n\tprivate inline function get_RGB32F ():Int { return this.RGB32F; }\n\tprivate inline function get_RGBA16F ():Int { return this.RGBA16F; }\n\tprivate inline function get_RGB16F ():Int { return this.RGB16F; }\n\tprivate inline function get_TEXTURE_2D_ARRAY ():Int { return this.TEXTURE_2D_ARRAY; }\n\tprivate inline function get_TEXTURE_BINDING_2D_ARRAY ():Int { return this.TEXTURE_BINDING_2D_ARRAY; }\n\tprivate inline function get_R11F_G11F_B10F ():Int { return this.R11F_G11F_B10F; }\n\tprivate inline function get_RGB9_E5 ():Int { return this.RGB9_E5; }\n\tprivate inline function get_RGBA32UI ():Int { return this.RGBA32UI; }\n\tprivate inline function get_RGB32UI ():Int { return this.RGB32UI; }\n\tprivate inline function get_RGBA16UI ():Int { return this.RGBA16UI; }\n\tprivate inline function get_RGB16UI ():Int { return this.RGB16UI; }\n\tprivate inline function get_RGBA8UI ():Int { return this.RGBA8UI; }\n\tprivate inline function get_RGB8UI ():Int { return this.RGB8UI; }\n\tprivate inline function get_RGBA32I ():Int { return this.RGBA32I; }\n\tprivate inline function get_RGB32I ():Int { return this.RGB32I; }\n\tprivate inline function get_RGBA16I ():Int { return this.RGBA16I; }\n\tprivate inline function get_RGB16I ():Int { return this.RGB16I; }\n\tprivate inline function get_RGBA8I ():Int { return this.RGBA8I; }\n\tprivate inline function get_RGB8I ():Int { return this.RGB8I; }\n\tprivate inline function get_RED_INTEGER ():Int { return this.RED_INTEGER; }\n\tprivate inline function get_RGB_INTEGER ():Int { return this.RGB_INTEGER; }\n\tprivate inline function get_RGBA_INTEGER ():Int { return this.RGBA_INTEGER; }\n\tprivate inline function get_R8 ():Int { return this.R8; }\n\tprivate inline function get_RG8 ():Int { return this.RG8; }\n\tprivate inline function get_R16F ():Int { return this.R16F; }\n\tprivate inline function get_R32F ():Int { return this.R32F; }\n\tprivate inline function get_RG16F ():Int { return this.RG16F; }\n\tprivate inline function get_RG32F ():Int { return this.RG32F; }\n\tprivate inline function get_R8I ():Int { return this.R8I; }\n\tprivate inline function get_R8UI ():Int { return this.R8UI; }\n\tprivate inline function get_R16I ():Int { return this.R16I; }\n\tprivate inline function get_R16UI ():Int { return this.R16UI; }\n\tprivate inline function get_R32I ():Int { return this.R32I; }\n\tprivate inline function get_R32UI ():Int { return this.R32UI; }\n\tprivate inline function get_RG8I ():Int { return this.RG8I; }\n\tprivate inline function get_RG8UI ():Int { return this.RG8UI; }\n\tprivate inline function get_RG16I ():Int { return this.RG16I; }\n\tprivate inline function get_RG16UI ():Int { return this.RG16UI; }\n\tprivate inline function get_RG32I ():Int { return this.RG32I; }\n\tprivate inline function get_RG32UI ():Int { return this.RG32UI; }\n\tprivate inline function get_R8_SNORM ():Int { return this.R8_SNORM; }\n\tprivate inline function get_RG8_SNORM ():Int { return this.RG8_SNORM; }\n\tprivate inline function get_RGB8_SNORM ():Int { return this.RGB8_SNORM; }\n\tprivate inline function get_RGBA8_SNORM ():Int { return this.RGBA8_SNORM; }\n\tprivate inline function get_RGB10_A2UI ():Int { return this.RGB10_A2UI; }\n\tprivate inline function get_TEXTURE_IMMUTABLE_FORMAT ():Int { return this.TEXTURE_IMMUTABLE_FORMAT; }\n\tprivate inline function get_TEXTURE_IMMUTABLE_LEVELS ():Int { return this.TEXTURE_IMMUTABLE_LEVELS; }\n\t\n\tprivate inline function get_UNSIGNED_INT_2_10_10_10_REV ():Int { return this.UNSIGNED_INT_2_10_10_10_REV; }\n\tprivate inline function get_UNSIGNED_INT_10F_11F_11F_REV ():Int { return this.UNSIGNED_INT_10F_11F_11F_REV; }\n\tprivate inline function get_UNSIGNED_INT_5_9_9_9_REV ():Int { return this.UNSIGNED_INT_5_9_9_9_REV; }\n\tprivate inline function get_FLOAT_32_UNSIGNED_INT_24_8_REV ():Int { return this.FLOAT_32_UNSIGNED_INT_24_8_REV; }\n\tprivate inline function get_UNSIGNED_INT_24_8 ():Int { return this.UNSIGNED_INT_24_8; }\n\tprivate inline function get_HALF_FLOAT ():Int { return this.HALF_FLOAT; }\n\tprivate inline function get_RG ():Int { return this.RG; }\n\tprivate inline function get_RG_INTEGER ():Int { return this.RG_INTEGER; }\n\tprivate inline function get_INT_2_10_10_10_REV ():Int { return this.INT_2_10_10_10_REV; }\n\t\n\tprivate inline function get_CURRENT_QUERY ():Int { return this.CURRENT_QUERY; }\n\tprivate inline function get_QUERY_RESULT ():Int { return this.QUERY_RESULT; }\n\tprivate inline function get_QUERY_RESULT_AVAILABLE ():Int { return this.QUERY_RESULT_AVAILABLE; }\n\tprivate inline function get_ANY_SAMPLES_PASSED ():Int { return this.ANY_SAMPLES_PASSED; }\n\tprivate inline function get_ANY_SAMPLES_PASSED_CONSERVATIVE ():Int { return this.ANY_SAMPLES_PASSED_CONSERVATIVE; }\n\t\n\tprivate inline function get_MAX_DRAW_BUFFERS ():Int { return this.MAX_DRAW_BUFFERS; }\n\tprivate inline function get_DRAW_BUFFER0 ():Int { return this.DRAW_BUFFER0; }\n\tprivate inline function get_DRAW_BUFFER1 ():Int { return this.DRAW_BUFFER1; }\n\tprivate inline function get_DRAW_BUFFER2 ():Int { return this.DRAW_BUFFER2; }\n\tprivate inline function get_DRAW_BUFFER3 ():Int { return this.DRAW_BUFFER3; }\n\tprivate inline function get_DRAW_BUFFER4 ():Int { return this.DRAW_BUFFER4; }\n\tprivate inline function get_DRAW_BUFFER5 ():Int { return this.DRAW_BUFFER5; }\n\tprivate inline function get_DRAW_BUFFER6 ():Int { return this.DRAW_BUFFER6; }\n\tprivate inline function get_DRAW_BUFFER7 ():Int { return this.DRAW_BUFFER7; }\n\tprivate inline function get_DRAW_BUFFER8 ():Int { return this.DRAW_BUFFER8; }\n\tprivate inline function get_DRAW_BUFFER9 ():Int { return this.DRAW_BUFFER9; }\n\tprivate inline function get_DRAW_BUFFER10 ():Int { return this.DRAW_BUFFER10; }\n\tprivate inline function get_DRAW_BUFFER11 ():Int { return this.DRAW_BUFFER11; }\n\tprivate inline function get_DRAW_BUFFER12 ():Int { return this.DRAW_BUFFER12; }\n\tprivate inline function get_DRAW_BUFFER13 ():Int { return this.DRAW_BUFFER13; }\n\tprivate inline function get_DRAW_BUFFER14 ():Int { return this.DRAW_BUFFER14; }\n\tprivate inline function get_DRAW_BUFFER15 ():Int { return this.DRAW_BUFFER15; }\n\tprivate inline function get_MAX_COLOR_ATTACHMENTS ():Int { return this.MAX_COLOR_ATTACHMENTS; }\n\tprivate inline function get_COLOR_ATTACHMENT1 ():Int { return this.COLOR_ATTACHMENT1; }\n\tprivate inline function get_COLOR_ATTACHMENT2 ():Int { return this.COLOR_ATTACHMENT2; }\n\tprivate inline function get_COLOR_ATTACHMENT3 ():Int { return this.COLOR_ATTACHMENT3; }\n\tprivate inline function get_COLOR_ATTACHMENT4 ():Int { return this.COLOR_ATTACHMENT4; }\n\tprivate inline function get_COLOR_ATTACHMENT5 ():Int { return this.COLOR_ATTACHMENT5; }\n\tprivate inline function get_COLOR_ATTACHMENT6 ():Int { return this.COLOR_ATTACHMENT6; }\n\tprivate inline function get_COLOR_ATTACHMENT7 ():Int { return this.COLOR_ATTACHMENT7; }\n\tprivate inline function get_COLOR_ATTACHMENT8 ():Int { return this.COLOR_ATTACHMENT8; }\n\tprivate inline function get_COLOR_ATTACHMENT9 ():Int { return this.COLOR_ATTACHMENT9; }\n\tprivate inline function get_COLOR_ATTACHMENT10 ():Int { return this.COLOR_ATTACHMENT10; }\n\tprivate inline function get_COLOR_ATTACHMENT11 ():Int { return this.COLOR_ATTACHMENT11; }\n\tprivate inline function get_COLOR_ATTACHMENT12 ():Int { return this.COLOR_ATTACHMENT12; }\n\tprivate inline function get_COLOR_ATTACHMENT13 ():Int { return this.COLOR_ATTACHMENT13; }\n\tprivate inline function get_COLOR_ATTACHMENT14 ():Int { return this.COLOR_ATTACHMENT14; }\n\tprivate inline function get_COLOR_ATTACHMENT15 ():Int { return this.COLOR_ATTACHMENT15; }\n\t\n\tprivate inline function get_SAMPLER_3D ():Int { return this.SAMPLER_3D; }\n\tprivate inline function get_SAMPLER_2D_SHADOW ():Int { return this.SAMPLER_2D_SHADOW; }\n\tprivate inline function get_SAMPLER_2D_ARRAY ():Int { return this.SAMPLER_2D_ARRAY; }\n\tprivate inline function get_SAMPLER_2D_ARRAY_SHADOW ():Int { return this.SAMPLER_2D_ARRAY_SHADOW; }\n\tprivate inline function get_SAMPLER_CUBE_SHADOW ():Int { return this.SAMPLER_CUBE_SHADOW; }\n\tprivate inline function get_INT_SAMPLER_2D ():Int { return this.INT_SAMPLER_2D; }\n\tprivate inline function get_INT_SAMPLER_3D ():Int { return this.INT_SAMPLER_3D; }\n\tprivate inline function get_INT_SAMPLER_CUBE ():Int { return this.INT_SAMPLER_CUBE; }\n\tprivate inline function get_INT_SAMPLER_2D_ARRAY ():Int { return this.INT_SAMPLER_2D_ARRAY; }\n\tprivate inline function get_UNSIGNED_INT_SAMPLER_2D ():Int { return this.UNSIGNED_INT_SAMPLER_2D; }\n\tprivate inline function get_UNSIGNED_INT_SAMPLER_3D ():Int { return this.UNSIGNED_INT_SAMPLER_3D; }\n\tprivate inline function get_UNSIGNED_INT_SAMPLER_CUBE ():Int { return this.UNSIGNED_INT_SAMPLER_CUBE; }\n\tprivate inline function get_UNSIGNED_INT_SAMPLER_2D_ARRAY ():Int { return this.UNSIGNED_INT_SAMPLER_2D_ARRAY; }\n\tprivate inline function get_MAX_SAMPLES ():Int { return this.MAX_SAMPLES; }\n\tprivate inline function get_SAMPLER_BINDING ():Int { return this.SAMPLER_BINDING; }\n\t\n\tprivate inline function get_PIXEL_PACK_BUFFER ():Int { return this.PIXEL_PACK_BUFFER; }\n\tprivate inline function get_PIXEL_UNPACK_BUFFER ():Int { return this.PIXEL_UNPACK_BUFFER; }\n\tprivate inline function get_PIXEL_PACK_BUFFER_BINDING ():Int { return this.PIXEL_PACK_BUFFER_BINDING; }\n\tprivate inline function get_PIXEL_UNPACK_BUFFER_BINDING ():Int { return this.PIXEL_UNPACK_BUFFER_BINDING; }\n\tprivate inline function get_COPY_READ_BUFFER ():Int { return this.COPY_READ_BUFFER; }\n\tprivate inline function get_COPY_WRITE_BUFFER ():Int { return this.COPY_WRITE_BUFFER; }\n\tprivate inline function get_COPY_READ_BUFFER_BINDING ():Int { return this.COPY_READ_BUFFER_BINDING; }\n\tprivate inline function get_COPY_WRITE_BUFFER_BINDING ():Int { return this.COPY_WRITE_BUFFER_BINDING; }\n\t\n\tprivate inline function get_FLOAT_MAT2x3 ():Int { return this.FLOAT_MAT2x3; }\n\tprivate inline function get_FLOAT_MAT2x4 ():Int { return this.FLOAT_MAT2x4; }\n\tprivate inline function get_FLOAT_MAT3x2 ():Int { return this.FLOAT_MAT3x2; }\n\tprivate inline function get_FLOAT_MAT3x4 ():Int { return this.FLOAT_MAT3x4; }\n\tprivate inline function get_FLOAT_MAT4x2 ():Int { return this.FLOAT_MAT4x2; }\n\tprivate inline function get_FLOAT_MAT4x3 ():Int { return this.FLOAT_MAT4x3; }\n\tprivate inline function get_UNSIGNED_INT_VEC2 ():Int { return this.UNSIGNED_INT_VEC2; }\n\tprivate inline function get_UNSIGNED_INT_VEC3 ():Int { return this.UNSIGNED_INT_VEC3; }\n\tprivate inline function get_UNSIGNED_INT_VEC4 ():Int { return this.UNSIGNED_INT_VEC4; }\n\tprivate inline function get_UNSIGNED_NORMALIZED ():Int { return this.UNSIGNED_NORMALIZED; }\n\tprivate inline function get_SIGNED_NORMALIZED ():Int { return this.SIGNED_NORMALIZED; }\n\t\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_INTEGER ():Int { return this.VERTEX_ATTRIB_ARRAY_INTEGER; }\n\tprivate inline function get_VERTEX_ATTRIB_ARRAY_DIVISOR ():Int { return this.VERTEX_ATTRIB_ARRAY_DIVISOR; }\n\t\n\tprivate inline function get_TRANSFORM_FEEDBACK_BUFFER_MODE ():Int { return this.TRANSFORM_FEEDBACK_BUFFER_MODE; }\n\tprivate inline function get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS ():Int { return this.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_VARYINGS ():Int { return this.TRANSFORM_FEEDBACK_VARYINGS; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_BUFFER_START ():Int { return this.TRANSFORM_FEEDBACK_BUFFER_START; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_BUFFER_SIZE ():Int { return this.TRANSFORM_FEEDBACK_BUFFER_SIZE; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN ():Int { return this.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN; }\n\tprivate inline function get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS ():Int { return this.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS; }\n\tprivate inline function get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS ():Int { return this.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS; }\n\tprivate inline function get_INTERLEAVED_ATTRIBS ():Int { return this.INTERLEAVED_ATTRIBS; }\n\tprivate inline function get_SEPARATE_ATTRIBS ():Int { return this.SEPARATE_ATTRIBS; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_BUFFER ():Int { return this.TRANSFORM_FEEDBACK_BUFFER; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_BUFFER_BINDING ():Int { return this.TRANSFORM_FEEDBACK_BUFFER_BINDING; }\n\tprivate inline function get_TRANSFORM_FEEDBACK ():Int { return this.TRANSFORM_FEEDBACK; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_PAUSED ():Int { return this.TRANSFORM_FEEDBACK_PAUSED; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_ACTIVE ():Int { return this.TRANSFORM_FEEDBACK_ACTIVE; }\n\tprivate inline function get_TRANSFORM_FEEDBACK_BINDING ():Int { return this.TRANSFORM_FEEDBACK_BINDING; }\n\t\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING ():Int { return this.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE ():Int { return this.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_RED_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_RED_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE ():Int { return this.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE; }\n\tprivate inline function get_FRAMEBUFFER_DEFAULT ():Int { return this.FRAMEBUFFER_DEFAULT; }\n\tprivate inline function get_DEPTH24_STENCIL8 ():Int { return this.DEPTH24_STENCIL8; }\n\tprivate inline function get_DRAW_FRAMEBUFFER_BINDING ():Int { return this.DRAW_FRAMEBUFFER_BINDING; }\n\tprivate inline function get_READ_FRAMEBUFFER ():Int { return this.READ_FRAMEBUFFER; }\n\tprivate inline function get_DRAW_FRAMEBUFFER ():Int { return this.DRAW_FRAMEBUFFER; }\n\tprivate inline function get_READ_FRAMEBUFFER_BINDING ():Int { return this.READ_FRAMEBUFFER_BINDING; }\n\tprivate inline function get_RENDERBUFFER_SAMPLES ():Int { return this.RENDERBUFFER_SAMPLES; }\n\tprivate inline function get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER ():Int { return this.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER; }\n\tprivate inline function get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE ():Int { return this.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE; }\n\t\n\tprivate inline function get_UNIFORM_BUFFER ():Int { return this.UNIFORM_BUFFER; }\n\tprivate inline function get_UNIFORM_BUFFER_BINDING ():Int { return this.UNIFORM_BUFFER_BINDING; }\n\tprivate inline function get_UNIFORM_BUFFER_START ():Int { return this.UNIFORM_BUFFER_START; }\n\tprivate inline function get_UNIFORM_BUFFER_SIZE ():Int { return this.UNIFORM_BUFFER_SIZE; }\n\tprivate inline function get_MAX_VERTEX_UNIFORM_BLOCKS ():Int { return this.MAX_VERTEX_UNIFORM_BLOCKS; }\n\tprivate inline function get_MAX_FRAGMENT_UNIFORM_BLOCKS ():Int { return this.MAX_FRAGMENT_UNIFORM_BLOCKS; }\n\tprivate inline function get_MAX_COMBINED_UNIFORM_BLOCKS ():Int { return this.MAX_COMBINED_UNIFORM_BLOCKS; }\n\tprivate inline function get_MAX_UNIFORM_BUFFER_BINDINGS ():Int { return this.MAX_UNIFORM_BUFFER_BINDINGS; }\n\tprivate inline function get_MAX_UNIFORM_BLOCK_SIZE ():Int { return this.MAX_UNIFORM_BLOCK_SIZE; }\n\tprivate inline function get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS ():Int { return this.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS; }\n\tprivate inline function get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS ():Int { return this.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS; }\n\tprivate inline function get_UNIFORM_BUFFER_OFFSET_ALIGNMENT ():Int { return this.UNIFORM_BUFFER_OFFSET_ALIGNMENT; }\n\tprivate inline function get_ACTIVE_UNIFORM_BLOCKS ():Int { return this.ACTIVE_UNIFORM_BLOCKS; }\n\tprivate inline function get_UNIFORM_TYPE ():Int { return this.UNIFORM_TYPE; }\n\tprivate inline function get_UNIFORM_SIZE ():Int { return this.UNIFORM_SIZE; }\n\tprivate inline function get_UNIFORM_BLOCK_INDEX ():Int { return this.UNIFORM_BLOCK_INDEX; }\n\tprivate inline function get_UNIFORM_OFFSET ():Int { return this.UNIFORM_OFFSET; }\n\tprivate inline function get_UNIFORM_ARRAY_STRIDE ():Int { return this.UNIFORM_ARRAY_STRIDE; }\n\tprivate inline function get_UNIFORM_MATRIX_STRIDE ():Int { return this.UNIFORM_MATRIX_STRIDE; }\n\tprivate inline function get_UNIFORM_IS_ROW_MAJOR ():Int { return this.UNIFORM_IS_ROW_MAJOR; }\n\tprivate inline function get_UNIFORM_BLOCK_BINDING ():Int { return this.UNIFORM_BLOCK_BINDING; }\n\tprivate inline function get_UNIFORM_BLOCK_DATA_SIZE ():Int { return this.UNIFORM_BLOCK_DATA_SIZE; }\n\tprivate inline function get_UNIFORM_BLOCK_ACTIVE_UNIFORMS ():Int { return this.UNIFORM_BLOCK_ACTIVE_UNIFORMS; }\n\tprivate inline function get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES ():Int { return this.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES; }\n\tprivate inline function get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER ():Int { return this.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER; }\n\tprivate inline function get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER ():Int { return this.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER; }\n\t\n\tprivate inline function get_OBJECT_TYPE ():Int { return this.OBJECT_TYPE; }\n\tprivate inline function get_SYNC_CONDITION ():Int { return this.SYNC_CONDITION; }\n\tprivate inline function get_SYNC_STATUS ():Int { return this.SYNC_STATUS; }\n\tprivate inline function get_SYNC_FLAGS ():Int { return this.SYNC_FLAGS; }\n\tprivate inline function get_SYNC_FENCE ():Int { return this.SYNC_FENCE; }\n\tprivate inline function get_SYNC_GPU_COMMANDS_COMPLETE ():Int { return this.SYNC_GPU_COMMANDS_COMPLETE; }\n\tprivate inline function get_UNSIGNALED ():Int { return this.UNSIGNALED; }\n\tprivate inline function get_SIGNALED ():Int { return this.SIGNALED; }\n\tprivate inline function get_ALREADY_SIGNALED ():Int { return this.ALREADY_SIGNALED; }\n\tprivate inline function get_TIMEOUT_EXPIRED ():Int { return this.TIMEOUT_EXPIRED; }\n\tprivate inline function get_CONDITION_SATISFIED ():Int { return this.CONDITION_SATISFIED; }\n\tprivate inline function get_WAIT_FAILED ():Int { return this.WAIT_FAILED; }\n\tprivate inline function get_SYNC_FLUSH_COMMANDS_BIT ():Int { return this.SYNC_FLUSH_COMMANDS_BIT; }\n\t\n\tprivate inline function get_COLOR ():Int { return this.COLOR; }\n\tprivate inline function get_DEPTH ():Int { return this.DEPTH; }\n\tprivate inline function get_STENCIL ():Int { return this.STENCIL; }\n\tprivate inline function get_MIN ():Int { return this.MIN; }\n\tprivate inline function get_MAX ():Int { return this.MAX; }\n\tprivate inline function get_DEPTH_COMPONENT24 ():Int { return this.DEPTH_COMPONENT24; }\n\tprivate inline function get_STREAM_READ ():Int { return this.STREAM_READ; }\n\tprivate inline function get_STREAM_COPY ():Int { return this.STREAM_COPY; }\n\tprivate inline function get_STATIC_READ ():Int { return this.STATIC_READ; }\n\tprivate inline function get_STATIC_COPY ():Int { return this.STATIC_COPY; }\n\tprivate inline function get_DYNAMIC_READ ():Int { return this.DYNAMIC_READ; }\n\tprivate inline function get_DYNAMIC_COPY ():Int { return this.DYNAMIC_COPY; }\n\tprivate inline function get_DEPTH_COMPONENT32F ():Int { return this.DEPTH_COMPONENT32F; }\n\tprivate inline function get_DEPTH32F_STENCIL8 ():Int { return this.DEPTH32F_STENCIL8; }\n\tprivate inline function get_INVALID_INDEX ():Int { return this.INVALID_INDEX; }\n\tprivate inline function get_TIMEOUT_IGNORED ():Int { return this.TIMEOUT_IGNORED; }\n\tprivate inline function get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL ():Int { return this.MAX_CLIENT_WAIT_TIMEOUT_WEBGL; }\n\t\n\t\n\tpublic inline function activeTexture (texture:Int):Void {\n\t\t\n\t\tthis.activeTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function attachShader (program:GLProgram, shader:GLShader):Void {\n\t\t\n\t\tthis.attachShader (program, shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function beginQuery (target:Int, query:GLQuery):Void {\n\t\t\n\t\tthis.beginQuery (target, query);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function beginTransformFeedback (primitiveNode:Int):Void {\n\t\t\n\t\tthis.beginTransformFeedback (primitiveNode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindAttribLocation (program:GLProgram, index:Int, name:String):Void {\n\t\t\n\t\tthis.bindAttribLocation (program, index, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindBuffer (target:Int, buffer:GLBuffer):Void {\n\t\t\n\t\tthis.bindBuffer (target, buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindBufferBase (target:Int, index:Int, buffer:GLBuffer):Void {\n\t\t\n\t\tthis.bindBufferBase (target, index, buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindBufferRange (target:Int, index:Int, buffer:GLBuffer, offset:DataPointer, size:Int):Void {\n\t\t\n\t\tthis.bindBufferRange (target, index, buffer, offset, size);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindFramebuffer (target:Int, framebuffer:GLFramebuffer):Void {\n\t\t\n\t\tthis.bindFramebuffer (target, framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindRenderbuffer (target:Int, renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\tthis.bindRenderbuffer (target, renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindSampler (unit:Int, sampler:GLSampler):Void {\n\t\t\n\t\tthis.bindSampler (unit, sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindTexture (target:Int, texture:GLTexture):Void {\n\t\t\n\t\tthis.bindTexture (target, texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindTransformFeedback (target:Int, transformFeedback:GLTransformFeedback):Void {\n\t\t\n\t\tthis.bindTransformFeedback (target, transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bindVertexArray (vertexArray:GLVertexArrayObject):Void {\n\t\t\n\t\tthis.bindVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendColor (red:Float, green:Float, blue:Float, alpha:Float):Void {\n\t\t\n\t\tthis.blendColor (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendEquation (mode:Int):Void {\n\t\t\n\t\tthis.blendEquation (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendEquationSeparate (modeRGB:Int, modeAlpha:Int):Void {\n\t\t\n\t\tthis.blendEquationSeparate (modeRGB, modeAlpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendFunc (sfactor:Int, dfactor:Int):Void {\n\t\t\n\t\tthis.blendFunc (sfactor, dfactor);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blendFuncSeparate (srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void {\n\t\t\n\t\tthis.blendFuncSeparate (srcRGB, dstRGB, srcAlpha, dstAlpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function blitFramebuffer (srcX0:Int, srcY0:Int, srcX1:Int, srcY1:Int, dstX0:Int, dstY0:Int, dstX1:Int, dstY1:Int, mask:Int, filter:Int):Void {\n\t\t\n\t\tthis.blitFramebuffer (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);\n\t\t\n\t}\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function bufferData (target:Int, srcData:ArrayBufferView, usage:Int, srcOffset:Int = 0, length:Int = 0):Void {\n\t\t\n\t\tvar size = (srcData != null) ? srcData.byteLength : 0;\n\t\t__tempPointer.set (srcData, srcOffset);\n\t\tthis.bufferData (target, size, __tempPointer, usage);\n\t\t\n\t}\n\t#else\n\tpublic inline function bufferData (target:Int, srcData:Dynamic, usage:Int, ?srcOffset:Int, ?length:Int):Void {\n\t\t\n\t\tthis.bufferDataWEBGL (target, srcData, usage, srcOffset, length);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function bufferSubData (target:Int, offset:Int, srcData:ArrayBufferView, srcOffset:Int = 0, ?length:Int):Void {\n\t\t\n\t\tvar size = (length != null) ? length : (srcData != null) ? srcData.byteLength : 0;\n\t\t__tempPointer.set (srcData, srcOffset);\n\t\tthis.bufferSubData (target, offset, size, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function bufferSubData (target:Int, offset:Int, srcData:Dynamic, ?srcOffset:Int, ?length:Int):Void {\n\t\t\n\t\tthis.bufferSubDataWEBGL (target, offset, srcData, srcOffset, length);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic inline function checkFramebufferStatus (target:Int):Int {\n\t\t\n\t\treturn this.checkFramebufferStatus (target);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clear (mask:Int):Void {\n\t\t\n\t\tthis.clear (mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearBufferfi (buffer:Int, drawbuffer:Int, depth:Float, stencil:Int):Void {\n\t\t\n\t\tthis.clearBufferfi (buffer, drawbuffer, depth, stencil);\n\t\t\n\t}\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function clearBufferfv (buffer:Int, drawbuffer:Int, values:ArrayBufferView, srcOffset:Int = 0):Void {\n\t\t\n\t\t__tempPointer.set (values, srcOffset);\n\t\tthis.clearBufferfv (buffer, drawbuffer, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function clearBufferfv (buffer:Int, drawbuffer:Int, values:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tthis.clearBufferfvWEBGL (buffer, drawbuffer, values, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function clearBufferiv (buffer:Int, drawbuffer:Int, values:ArrayBufferView, ?srcOffset:Int):Void {\n\t\t\n\t\t__tempPointer.set (values, srcOffset);\n\t\tthis.clearBufferiv (buffer, drawbuffer, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function clearBufferiv (buffer:Int, drawbuffer:Int, values:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tthis.clearBufferivWEBGL (buffer, drawbuffer, values, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function clearBufferuiv (buffer:Int, drawbuffer:Int, values:ArrayBufferView, ?srcOffset:Int):Void {\n\t\t\n\t\t__tempPointer.set (values, srcOffset);\n\t\tthis.clearBufferuiv (buffer, drawbuffer, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function clearBufferuiv (buffer:Int, drawbuffer:Int, values:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tthis.clearBufferuivWEBGL (buffer, drawbuffer, values, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic inline function clearColor (red:Float, green:Float, blue:Float, alpha:Float):Void {\n\t\t\n\t\tthis.clearColor (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearDepth (depth:Float):Void {\n\t\t\n\t\tthis.clearDepthf (depth);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clearStencil (s:Int):Void {\n\t\t\n\t\tthis.clearStencil (s);\n\t\t\n\t}\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function clientWaitSync (sync:GLSync, flags:Int, timeout:Int64):Int {\n\t\t\n\t\treturn this.clientWaitSync (sync, flags, timeout);\n\t\t\n\t}\n\t#else\n\tpublic inline function clientWaitSync (sync:GLSync, flags:Int, timeout:Dynamic):Int {\n\t\t\n\t\treturn this.clientWaitSync (sync, flags, timeout);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic inline function colorMask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {\n\t\t\n\t\tthis.colorMask (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compileShader (shader:GLShader):Void {\n\t\t\n\t\tthis.compileShader (shader);\n\t\t\n\t}\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, srcData:ArrayBufferView, srcOffset:Int = 0, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tvar imageSize = (srcLengthOverride != null) ? srcLengthOverride : (srcData != null) ? srcData.byteLength : 0;\n\t\t__tempPointer.set (srcData, srcOffset);\n\t\tthis.compressedTexImage2D (target, level, internalformat, width, height, border, imageSize, __tempPointer);\n\t\t\n\t}\n\t#else\n\t//public function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, offset:Int):Void {\n\t//public function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, srcData:ArrayBufferView, srcOffset:Int = 0, srcLengthOverride:Int = 0):Void {\n\tpublic inline function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, srcData:Dynamic, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tthis.compressedTexImage2DWEBGL (target, level, internalformat, width, height, border, srcData, srcOffset, srcLengthOverride);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function compressedTexImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, srcData:ArrayBufferView, srcOffset:Int = 0, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tvar imageSize = (srcLengthOverride != null) ? srcLengthOverride : (srcData != null) ? srcData.byteLength : 0;\n\t\t__tempPointer.set (srcData, srcOffset);\n\t\tthis.compressedTexImage3D (target, level, internalformat, width, height, depth, border, imageSize, __tempPointer);\n\t\t\n\t}\n\t#else\n\t//public function compressedTexImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, offset:DataPointer):Void {\n\t//public function compressedTexImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, srcData:ArrayBufferView, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\tpublic inline function compressedTexImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, srcData:Dynamic, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tthis.compressedTexImage3DWEBGL (target, level, internalformat, width, height, depth, border, srcData, srcOffset, srcLengthOverride);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, srcData:ArrayBufferView, srcOffset:Int = 0, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tvar imageSize = (srcLengthOverride != null) ? srcLengthOverride : (srcData != null) ? srcData.byteLength : 0;\n\t\t__tempPointer.set (srcData, srcOffset);\n\t\tthis.compressedTexSubImage2D (target, level, xoffset, yoffset, width, height, format, imageSize, __tempPointer);\n\t\t\n\t}\n\t#else\n\t//public function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, offset:Int):Void {\n\t//public function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, srcData:ArrayBufferView, srcOffset:Int = 0, srcLengthOverride:Int = 0):Void {\n\tpublic inline function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, srcData:Dynamic, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tthis.compressedTexSubImage2DWEBGL (target, level, xoffset, yoffset, width, height, format, srcData, srcOffset, srcLengthOverride);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function compressedTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, srcData:ArrayBufferView, srcOffset:Int = 0, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tvar imageSize = (srcLengthOverride != null) ? srcLengthOverride : (srcData != null) ? srcData.byteLength : 0;\n\t\t__tempPointer.set (srcData, srcOffset);\n\t\tthis.compressedTexSubImage3D (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, __tempPointer);\n\t\t\n\t}\n\t#else\n\t//public function compressedTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, offset:DataPointer):Void {\n\t//public function compressedTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, srcData:ArrayBufferView, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\tpublic inline function compressedTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, srcData:Dynamic, ?srcOffset:Int, ?srcLengthOverride:Int):Void {\n\t\t\n\t\tthis.compressedTexSubImage3DWEBGL (target, level, xoffset, yoffset, zoffset, width, height, depth, format, srcData, srcOffset, srcLengthOverride);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic inline function copyBufferSubData (readTarget:Int, writeTarget:Int, readOffset:DataPointer, writeOffset:DataPointer, size:Int):Void {\n\t\t\n\t\tthis.copyBufferSubData (readTarget, writeTarget, readOffset, writeOffset, size);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copyTexImage2D (target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void {\n\t\t\n\t\tthis.copyTexImage2D (target, level, internalformat, x, y, width, height, border);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copyTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.copyTexSubImage2D (target, level, xoffset, yoffset, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function copyTexSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.copyTexSubImage3D (target, level, xoffset, yoffset, zoffset, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createBuffer ():GLBuffer {\n\t\t\n\t\treturn this.createBuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createFramebuffer ():GLFramebuffer {\n\t\t\n\t\treturn this.createFramebuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createProgram ():GLProgram {\n\t\t\n\t\treturn this.createProgram ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createQuery ():GLQuery {\n\t\t\n\t\treturn this.createQuery ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createRenderbuffer ():GLRenderbuffer {\n\t\t\n\t\treturn this.createRenderbuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createSampler ():GLSampler {\n\t\t\n\t\treturn this.createSampler ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createShader (type:Int):GLShader {\n\t\t\n\t\treturn this.createShader (type);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createTexture ():GLTexture {\n\t\t\n\t\treturn this.createTexture ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createTransformFeedback ():GLTransformFeedback {\n\t\t\n\t\treturn this.createTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function createVertexArray ():GLVertexArrayObject {\n\t\t\n\t\treturn this.createVertexArray ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function cullFace (mode:Int):Void {\n\t\t\n\t\tthis.cullFace (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteBuffer (buffer:GLBuffer):Void {\n\t\t\n\t\tthis.deleteBuffer (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteFramebuffer (framebuffer:GLFramebuffer):Void {\n\t\t\n\t\tthis.deleteFramebuffer (framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteProgram (program:GLProgram):Void {\n\t\t\n\t\tthis.deleteProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteQuery (query:GLQuery):Void {\n\t\t\n\t\tthis.deleteQuery (query);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteRenderbuffer (renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\tthis.deleteRenderbuffer (renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteSampler (sampler:GLSampler):Void {\n\t\t\n\t\tthis.deleteSampler (sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteShader (shader:GLShader):Void {\n\t\t\n\t\tthis.deleteShader (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteSync (sync:GLSync):Void {\n\t\t\n\t\tthis.deleteSync (sync);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteTexture (texture:GLTexture):Void {\n\t\t\n\t\tthis.deleteTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteTransformFeedback (transformFeedback:GLTransformFeedback):Void {\n\t\t\n\t\tthis.deleteTransformFeedback (transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function deleteVertexArray (vertexArray:GLVertexArrayObject):Void {\n\t\t\n\t\tthis.deleteVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function depthFunc (func:Int):Void {\n\t\t\n\t\tthis.depthFunc (func);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function depthMask (flag:Bool):Void {\n\t\t\n\t\tthis.depthMask (flag);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function depthRange (zNear:Float, zFar:Float):Void {\n\t\t\n\t\tthis.depthRangef (zNear, zFar);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function detachShader (program:GLProgram, shader:GLShader):Void {\n\t\t\n\t\tthis.detachShader (program, shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function disable (cap:Int):Void {\n\t\t\n\t\tthis.disable (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function disableVertexAttribArray (index:Int):Void {\n\t\t\n\t\tthis.disableVertexAttribArray (index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawArrays (mode:Int, first:Int, count:Int):Void {\n\t\t\n\t\tthis.drawArrays (mode, first, count);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawArraysInstanced (mode:Int, first:Int, count:Int, instanceCount:Int):Void {\n\t\t\n\t\tthis.drawArraysInstanced (mode, first, count, instanceCount);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawBuffers (buffers:Array<Int>):Void {\n\t\t\n\t\tthis.drawBuffers (buffers);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawElements (mode:Int, count:Int, type:Int, offset:DataPointer):Void {\n\t\t\n\t\tthis.drawElements (mode, count, type, offset);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawElementsInstanced (mode:Int, count:Int, type:Int, offset:DataPointer, instanceCount:Int):Void {\n\t\t\n\t\tthis.drawElementsInstanced (mode, count, type, offset, instanceCount);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function drawRangeElements (mode:Int, start:Int, end:Int, count:Int, type:Int, offset:DataPointer):Void {\n\t\t\n\t\tthis.drawRangeElements (mode, start, end, count, type, offset);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function enable (cap:Int):Void {\n\t\t\n\t\tthis.enable (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function enableVertexAttribArray (index:Int):Void {\n\t\t\n\t\tthis.enableVertexAttribArray (index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function endQuery (target:Int):Void {\n\t\t\n\t\tthis.endQuery (target);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function endTransformFeedback ():Void {\n\t\t\n\t\tthis.endTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function fenceSync (condition:Int, flags:Int):GLSync {\n\t\t\n\t\treturn this.fenceSync (condition, flags);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function finish ():Void {\n\t\t\n\t\tthis.finish ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function flush ():Void {\n\t\t\n\t\tthis.flush ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function framebufferRenderbuffer (target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void {\n\t\t\n\t\tthis.framebufferRenderbuffer (target, attachment, renderbuffertarget, renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function framebufferTexture2D (target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void {\n\t\t\n\t\tthis.framebufferTexture2D (target, attachment, textarget, texture, level);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function framebufferTextureLayer (target:Int, attachment:Int, texture:GLTexture, level:Int, layer:Int):Void {\n\t\t\n\t\tthis.framebufferTextureLayer (target, attachment, texture, level, layer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function frontFace (mode:Int):Void {\n\t\t\n\t\tthis.frontFace (mode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function generateMipmap (target:Int):Void {\n\t\t\n\t\tthis.generateMipmap (target);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveAttrib (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn this.getActiveAttrib (program, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniform (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn this.getActiveUniform (program, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniformBlockName (program:GLProgram, uniformBlockIndex:Int):String {\n\t\t\n\t\treturn this.getActiveUniformBlockName (program, uniformBlockIndex);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniformBlockParameter (program:GLProgram, uniformBlockIndex:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getActiveUniformBlockParameter (program, uniformBlockIndex, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getActiveUniforms (program:GLProgram, uniformIndices:Array<Int>, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getActiveUniforms (program, uniformIndices, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getAttachedShaders (program:GLProgram):Array<GLShader> {\n\t\t\n\t\treturn this.getAttachedShaders (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getAttribLocation (program:GLProgram, name:String):Int {\n\t\t\n\t\treturn this.getAttribLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getBufferParameter (target:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getBufferParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function getBufferSubData (target:Int, srcByteOffset:DataPointer, dstData:ArrayBuffer, srcOffset:Int = 0, ?length:Int):Void {\n\t\t\n\t\tvar size = (length != null) ? length : (dstData != null) ? dstData.length : 0;\n\t\tthis.getBufferSubData (target, srcByteOffset + srcOffset, size, dstData);\n\t\t\n\t}\n\t#else\n\t//public function getBufferSubData (target:Int, srcByteOffset:DataPointer, dstData:js.html.ArrayBuffer, ?srcOffset:Int, ?length:Int):Void {\n\t//public function getBufferSubData (target:Int, srcByteOffset:DataPointer, dstData:Dynamic /*SharedArrayBuffer*/, ?srcOffset:Int, ?length:Int):Void {\n\tpublic inline function getBufferSubData (target:Int, srcByteOffset:DataPointer, dstData:Dynamic, ?srcOffset:Int, ?length:Int):Void {\n\t\t\n\t\tthis.getBufferSubDataWEBGL (target, srcByteOffset, dstData, srcOffset, length);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic inline function getContextAttributes ():GLContextAttributes {\n\t\t\n\t\treturn this.getContextAttributes ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getError ():Int {\n\t\t\n\t\treturn this.getError ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getExtension (name:String):Dynamic {\n\t\t\n\t\treturn this.getExtension (name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getFragDataLocation (program:GLProgram, name:String):Int {\n\t\t\n\t\treturn this.getFragDataLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getFramebufferAttachmentParameter (target:Int, attachment:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getFramebufferAttachmentParameter (target, attachment, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getIndexedParameter (target:Int, index:Int):Dynamic {\n\t\t\n\t\treturn this.getIndexedParameter (target, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getInternalformatParameter (target:Int, internalformat:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getInternalformatParameter (target, internalformat, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getParameter (pname:Int):Dynamic {\n\t\t\n\t\treturn this.getParameter (pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getProgramInfoLog (program:GLProgram):String {\n\t\t\n\t\treturn this.getProgramInfoLog (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getProgramParameter (program:GLProgram, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getProgramParameter (program, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getQuery (target:Int, pname:Int):GLQuery {\n\t\t\n\t\treturn this.getQuery (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getQueryParameter (query:GLQuery, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getQueryParameter (query, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getRenderbufferParameter (target:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getRenderbufferParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSamplerParameter (sampler:GLSampler, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getSamplerParameter (sampler, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderInfoLog (shader:GLShader):String {\n\t\t\n\t\treturn this.getShaderInfoLog (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderParameter (shader:GLShader, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getShaderParameter (shader, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderPrecisionFormat (shadertype:Int, precisiontype:Int):GLShaderPrecisionFormat {\n\t\t\n\t\treturn this.getShaderPrecisionFormat (shadertype, precisiontype);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getShaderSource (shader:GLShader):String {\n\t\t\n\t\treturn this.getShaderSource (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSupportedExtensions ():Array<String> {\n\t\t\n\t\treturn this.getSupportedExtensions ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getSyncParameter (sync:GLSync, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getSyncParameter (sync, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getTexParameter (target:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getTexParameter (target, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getTransformFeedbackVarying (program:GLProgram, index:Int):GLActiveInfo {\n\t\t\n\t\treturn this.getTransformFeedbackVarying (program, index);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniform (program:GLProgram, location:GLUniformLocation):Dynamic {\n\t\t\n\t\treturn this.getUniform (program, location);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getUniformBlockIndex (program:GLProgram, uniformBlockName:String):Int {\n\t\t\n\t\treturn this.getUniformBlockIndex (program, uniformBlockName);\n\t\t\n\t}\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function getUniformIndices (program:GLProgram, uniformNames:Array<String>):Array<Int> {\n\t\t\n\t\treturn this.getUniformIndices (program, uniformNames);\n\t\t\n\t}\n\t#else\n\t//public inline function getUniformIndices (program:GLProgram, uniformNames:String):Array<Int> {\n\t//public inline function getUniformIndices (program:GLProgram, uniformNames:Array<String>):Array<Int> {\n\tpublic inline function getUniformIndices (program:GLProgram, uniformNames:Dynamic):Array<Int> {\n\t\t\n\t\treturn this.getUniformIndices (program, uniformNames);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic inline function getUniformLocation (program:GLProgram, name:String):GLUniformLocation {\n\t\t\n\t\treturn this.getUniformLocation (program, name);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttrib (index:Int, pname:Int):Dynamic {\n\t\t\n\t\treturn this.getVertexAttrib (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getVertexAttribOffset (index:Int, pname:Int):DataPointer {\n\t\t\n\t\treturn this.getVertexAttribPointerv (index, pname);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function hint (target:Int, mode:Int):Void {\n\t\t\n\t\tthis.hint (target, mode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function invalidateFramebuffer (target:Int, attachments:Array<Int>):Void {\n\t\t\n\t\tthis.invalidateFramebuffer (target, attachments);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function invalidateSubFramebuffer (target:Int, attachments:Array<Int>, x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.invalidateSubFramebuffer (target, attachments, x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isBuffer (buffer:GLBuffer):Bool {\n\t\t\n\t\treturn this.isBuffer (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isContextLost ():Bool {\n\t\t\n\t\treturn this.isContextLost ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isEnabled (cap:Int):Bool {\n\t\t\n\t\treturn this.isEnabled (cap);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isFramebuffer (framebuffer:GLFramebuffer):Bool {\n\t\t\n\t\treturn this.isFramebuffer (framebuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isProgram (program:GLProgram):Bool {\n\t\t\n\t\treturn this.isProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isQuery (query:GLQuery):Bool {\n\t\t\n\t\treturn this.isQuery (query);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isRenderbuffer (renderbuffer:GLRenderbuffer):Bool {\n\t\t\n\t\treturn this.isRenderbuffer (renderbuffer);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isSampler (sampler:GLSampler):Bool {\n\t\t\n\t\treturn this.isSampler (sampler);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isShader (shader:GLShader):Bool {\n\t\t\n\t\treturn this.isShader (shader);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isTexture (texture:GLTexture):Bool {\n\t\t\n\t\treturn this.isTexture (texture);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isTransformFeedback (transformFeedback:GLTransformFeedback):Bool {\n\t\t\n\t\treturn this.isTransformFeedback (transformFeedback);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isVertexArray (vertexArray:GLVertexArrayObject):Bool {\n\t\t\n\t\treturn this.isVertexArray (vertexArray);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function lineWidth (width:Float):Void {\n\t\t\n\t\tthis.lineWidth (width);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function linkProgram (program:GLProgram):Void {\n\t\t\n\t\tthis.linkProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pauseTransformFeedback ():Void {\n\t\t\n\t\tthis.pauseTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function pixelStorei (pname:Int, param:Int):Void {\n\t\t\n\t\tthis.pixelStorei (pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function polygonOffset (factor:Float, units:Float):Void {\n\t\t\n\t\tthis.polygonOffset (factor, units);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readBuffer (src:Int):Void {\n\t\t\n\t\tthis.readBuffer (src);\n\t\t\n\t}\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView, dstOffset:Int = 0):Void {\n\t\t\n\t\t__tempPointer.set (pixels, dstOffset);\n\t\tthis.readPixels (x, y, width, height, format, type, __tempPointer);\n\t\t\n\t}\n\t#else\n\t//public function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\n\t//public function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, offset:DataPointer):Void {\n\t//public function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView, ?dstOffset:Int):Void {\n\tpublic inline function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:Dynamic, ?dstOffset:Int):Void {\n\t\t\n\t\tthis.readPixelsWEBGL (x, y, width, height, format, type, pixels, dstOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic inline function renderbufferStorage (target:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.renderbufferStorage (target, internalformat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function renderbufferStorageMultisample (target:Int, samples:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.renderbufferStorageMultisample (target, samples, internalformat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function resumeTransformFeedback ():Void {\n\t\t\n\t\tthis.resumeTransformFeedback ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function sampleCoverage (value:Float, invert:Bool):Void {\n\t\t\n\t\tthis.sampleCoverage (value, invert);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function samplerParameterf (sampler:GLSampler, pname:Int, param:Float):Void {\n\t\t\n\t\tthis.samplerParameterf (sampler, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function samplerParameteri (sampler:GLSampler, pname:Int, param:Int):Void {\n\t\t\n\t\tthis.samplerParameteri (sampler, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function scissor (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.scissor (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function shaderSource (shader:GLShader, source:String):Void {\n\t\t\n\t\tthis.shaderSource (shader, source);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilFunc (func:Int, ref:Int, mask:Int):Void {\n\t\t\n\t\tthis.stencilFunc (func, ref, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilFuncSeparate (face:Int, func:Int, ref:Int, mask:Int):Void {\n\t\t\n\t\tthis.stencilFuncSeparate (face, func, ref, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilMask (mask:Int):Void {\n\t\t\n\t\tthis.stencilMask (mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilMaskSeparate (face:Int, mask:Int):Void {\n\t\t\n\t\tthis.stencilMaskSeparate (face, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilOp (fail:Int, zfail:Int, zpass:Int):Void {\n\t\t\n\t\tthis.stencilOp (fail, zfail, zpass);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function stencilOpSeparate (face:Int, fail:Int, zfail:Int, zpass:Int):Void {\n\t\t\n\t\tthis.stencilOpSeparate (face, fail, zfail, zpass);\n\t\t\n\t}\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, srcData:ArrayBufferView, srcOffset:Int = 0):Void {\n\t\t\n\t\t__tempPointer.set (srcData, srcOffset);\n\t\tthis.texImage2D (target, level, internalformat, width, height, border, format, type, __tempPointer);\n\t\t\n\t}\n\t#else\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:CanvasElement):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:Dynamic /*ImageBitmap*/):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ImageData):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ImageElement):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, offset:DataPointer):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:VideoElement):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, srcData:ArrayBufferView, srcOffset:Int):Void {\n\tpublic inline function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, srcData:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tthis.texImage2DWEBGL (target, level, internalformat, width, height, border, format, type, srcData, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, srcData:ArrayBufferView, srcOffset:Int = 0):Void {\n\t\t\n\t\t__tempPointer.set (srcData, srcOffset);\n\t\tthis.texImage3D (target, level, internalformat, width, height, depth, border, format, type, __tempPointer);\n\t\t\n\t}\n\t#else\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.CanvasElement):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.ImageElement):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.VideoElement):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:Dynamic /*js.html.ImageBitmap*/):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, source:js.html.ImageData):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, offset:DataPointer):Void {\n\t//public inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, srcData:js.html.ArrayBufferView, ?srcOffset:Int):Void {\n\tpublic inline function texImage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int, border:Int, format:Int, type:Int, srcData:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tthis.texImage3DWEBGL (target, level, internalformat, width, height, depth, border, format, type, srcData, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic inline function texStorage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.texStorage2D (target, level, internalformat, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texStorage3D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, depth:Int):Void {\n\t\t\n\t\tthis.texStorage3D (target, level, internalformat, width, height, depth);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texParameterf (target:Int, pname:Int, param:Float):Void {\n\t\t\n\t\tthis.texParameterf (target, pname, param);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function texParameteri (target:Int, pname:Int, param:Int):Void {\n\t\t\n\t\tthis.texParameteri (target, pname, param);\n\t\t\n\t}\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, srcData:ArrayBufferView, srcOffset:Int = 0):Void {\n\t\t\n\t\t__tempPointer.set (srcData, srcOffset);\n\t\tthis.texSubImage2D (target, level, xoffset, yoffset, width, height, format, type, __tempPointer);\n\t\t\n\t}\n\t#else\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:CanvasElement):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:Dynamic /*ImageBitmap*/):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ImageData):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ImageElement):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, offset:Int):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:VideoElement):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, srcData:ArrayBufferView, srcOffset:Int):Void {\n\tpublic inline function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, srcData:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tthis.texSubImage2DWEBGL (target, level, xoffset, yoffset, width, height, format, type, srcData, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, srcData:ArrayBufferView, srcOffset:Int = 0):Void {\n\t\t\n\t\t__tempPointer.set (srcData, srcOffset);\n\t\tthis.texSubImage3D (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, __tempPointer);\n\t\t\n\t}\n\t#else\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:CanvasElement):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:Dynamic /*ImageBitmap*/):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ImageData):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ImageElement):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, offset:Int):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:VideoElement):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, srcData:ArrayBufferView, srcOffset:Int):Void {\n\tpublic inline function texSubImage3D (target:Int, level:Int, xoffset:Int, yoffset:Int, zoffset:Int, width:Int, height:Int, depth:Int, format:Int, type:Int, srcData:Dynamic, ?srcOffset:Int):Void {\n\t\t\n\t\tthis.texSubImage3DWEBGL (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, srcData, srcOffset);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic inline function transformFeedbackVaryings (program:GLProgram, varyings:Array<String>, bufferMode:Int):Void {\n\t\t\n\t\tthis.transformFeedbackVaryings (program, varyings, bufferMode);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1f (location:GLUniformLocation, v0:Float):Void {\n\t\t\n\t\tthis.uniform1f (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1fv (location:GLUniformLocation, v:Float32Array):Void {\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform1fv (location, v != null ? v.length : 0, v);\n\t\t#else\n\t\tthis.uniform1fvWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1i (location:GLUniformLocation, v0:Int):Void {\n\t\t\n\t\tthis.uniform1i (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1iv (location:GLUniformLocation, v:Int32Array):Void {\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform1iv (location, v != null ? v.length : 0, v);\n\t\t#else\n\t\tthis.uniform1ivWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1ui (location:GLUniformLocation, v0:Int):Void {\n\t\t\n\t\tthis.uniform1ui (location, v0);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform1uiv (location:GLUniformLocation, v:UInt32Array):Void {\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform1uiv (location, v != null ? v.length : 0, v);\n\t\t#else\n\t\tthis.uniform1uivWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2f (location:GLUniformLocation, v0:Float, v1:Float):Void {\n\t\t\n\t\tthis.uniform2f (location, v0, v1);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2fv (location:GLUniformLocation, v:Float32Array):Void {\n\t\t\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform2fv (location, v != null ? v.length >> 1 : 0, v);\n\t\t#else\n\t\tthis.uniform2fvWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2i (location:GLUniformLocation, v0:Int, v1:Int):Void {\n\t\t\n\t\tthis.uniform2i (location, v0, v1);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2iv (location:GLUniformLocation, v:Int32Array):Void {\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform2iv (location, v != null ? v.length >> 1 : 0, v);\n\t\t#else\n\t\tthis.uniform2fvWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2ui (location:GLUniformLocation, v0:Int, v1:Int):Void {\n\t\t\n\t\tthis.uniform2ui (location, v0, v1);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform2uiv (location:GLUniformLocation, v:UInt32Array):Void {\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform2uiv (location, v != null ? v.length >> 1 : 0, v);\n\t\t#else\n\t\tthis.uniform2uivWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3f (location:GLUniformLocation, v0:Float, v1:Float, v2:Float):Void {\n\t\t\n\t\tthis.uniform3f (location, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3fv (location:GLUniformLocation, v:Float32Array):Void {\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform3fv (location, v != null ? Std.int (v.length / 3) : 0, v);\n\t\t#else\n\t\tthis.uniform3fvWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3i (location:GLUniformLocation, v0:Int, v1:Int, v2:Int):Void {\n\t\t\n\t\tthis.uniform3i (location, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3iv (location:GLUniformLocation, v:Int32Array):Void {\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform3iv (location, v != null ? Std.int (v.length / 3) : 0, v);\n\t\t#else\n\t\tthis.uniform3ivWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3ui (location:GLUniformLocation, v0:Int, v1:Int, v2:Int):Void {\n\t\t\n\t\tthis.uniform3ui (location, v0, v1, v2);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform3uiv (location:GLUniformLocation, v:UInt32Array):Void {\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform3uiv (location, v != null ? Std.int (v.length / 3) : 0, v);\n\t\t#else\n\t\tthis.uniform3uivWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4f (location:GLUniformLocation, v0:Float, v1:Float, v2:Float, v3:Float):Void {\n\t\t\n\t\tthis.uniform4f (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4fv (location:GLUniformLocation, v:Float32Array):Void {\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform4fv (location, v != null ? v.length >> 2 : 0, v);\n\t\t#else\n\t\tthis.uniform4fvWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4i (location:GLUniformLocation, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\tthis.uniform4i (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4iv (location:GLUniformLocation, v:Int32Array):Void {\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform4iv (location, v != null ? v.length >> 2 : 0, v);\n\t\t#else\n\t\tthis.uniform4ivWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4ui (location:GLUniformLocation, v0:Int, v1:Int, v2:Int, v3:Int):Void {\n\t\t\n\t\tthis.uniform4ui (location, v0, v1, v2, v3);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniform4uiv (location:GLUniformLocation, v:UInt32Array):Void {\n\t\t\n\t\t#if (!js || !html5 || display)\n\t\tthis.uniform4uiv (location, v != null ? v.length >> 2 : 0, v);\n\t\t#else\n\t\tthis.uniform4uivWEBGL (location, v);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic inline function uniformBlockBinding (program:GLProgram, uniformBlockIndex:Int, uniformBlockBinding:Int):Void {\n\t\t\n\t\tthis.uniformBlockBinding (program, uniformBlockIndex, uniformBlockBinding);\n\t\t\n\t}\n\t\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function uniformMatrix2fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, srcOffset:Int = 0, ?srcLength:Int):Void {\n\t\t\n\t\tvar count = 0;\n\t\tif (srcLength != null) count = srcLength;\n\t\telse if (v != null) count = v.length >> 2;\n\t\t\n\t\t__tempPointer.set (v, srcOffset);\n\t\t\n\t\tthis.uniformMatrix2fv (location, count, transpose, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function uniformMatrix2fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tthis.uniformMatrix2fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function uniformMatrix2x3fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, srcOffset:Int = 0, ?srcLength:Int):Void {\n\t\t\n\t\tvar count = 0;\n\t\tif (srcLength != null) count = srcLength;\n\t\telse if (v != null) count = Std.int (v.length / 6);\n\t\t\n\t\t__tempPointer.set (v, srcOffset);\n\t\t\n\t\tthis.uniformMatrix2x3fv (location, count, transpose, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function uniformMatrix2x3fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tthis.uniformMatrix2x3fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function uniformMatrix2x4fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, srcOffset:Int = 0, ?srcLength:Int):Void {\n\t\t\n\t\tvar count = 0;\n\t\tif (srcLength != null) count = srcLength;\n\t\telse if (v != null) count = Std.int (v.length / 8);\n\t\t\n\t\t__tempPointer.set (v, srcOffset);\n\t\t\n\t\tthis.uniformMatrix2x4fv (location, count, transpose, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function uniformMatrix2x4fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tthis.uniformMatrix2x4fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function uniformMatrix3fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, srcOffset:Int = 0, ?srcLength:Int):Void {\n\t\t\n\t\tvar count = 0;\n\t\tif (srcLength != null) count = srcLength;\n\t\telse if (v != null) count = Std.int (v.length / 9);\n\t\t\n\t\t__tempPointer.set (v, srcOffset);\n\t\t\n\t\tthis.uniformMatrix3fv (location, count, transpose, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function uniformMatrix3fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tthis.uniformMatrix3fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function uniformMatrix3x2fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, srcOffset:Int = 0, ?srcLength:Int):Void {\n\t\t\n\t\tvar count = 0;\n\t\tif (srcLength != null) count = srcLength;\n\t\telse if (v != null) count = Std.int (v.length / 6);\n\t\t\n\t\t__tempPointer.set (v, srcOffset);\n\t\t\n\t\tthis.uniformMatrix3x2fv (location, count, transpose, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function uniformMatrix3x2fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tthis.uniformMatrix3x2fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function uniformMatrix3x4fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, srcOffset:Int = 0, ?srcLength:Int):Void {\n\t\t\n\t\tvar count = 0;\n\t\tif (srcLength != null) count = srcLength;\n\t\telse if (v != null) count = Std.int (v.length / 12);\n\t\t\n\t\t__tempPointer.set (v, srcOffset);\n\t\t\n\t\tthis.uniformMatrix3x4fv (location, count, transpose, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function uniformMatrix3x4fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tthis.uniformMatrix3x4fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function uniformMatrix4fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, srcOffset:Int = 0, ?srcLength:Int):Void {\n\t\t\n\t\tvar count = 0;\n\t\tif (srcLength != null) count = srcLength;\n\t\telse if (v != null) count = v.length >> 4;\n\t\t\n\t\t__tempPointer.set (v, srcOffset);\n\t\t\n\t\tthis.uniformMatrix4fv (location, count, transpose, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function uniformMatrix4fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tthis.uniformMatrix4fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function uniformMatrix4x2fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, srcOffset:Int = 0, ?srcLength:Int):Void {\n\t\t\n\t\tvar count = 0;\n\t\tif (srcLength != null) count = srcLength;\n\t\telse if (v != null) count = Std.int (v.length / 8);\n\t\t\n\t\t__tempPointer.set (v, srcOffset);\n\t\t\n\t\tthis.uniformMatrix4x2fv (location, count, transpose, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function uniformMatrix4x2fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tthis.uniformMatrix4x2fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic function uniformMatrix4x3fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, srcOffset:Int = 0, ?srcLength:Int):Void {\n\t\t\n\t\tvar count = 0;\n\t\tif (srcLength != null) count = srcLength;\n\t\telse if (v != null) count = Std.int (v.length / 12);\n\t\t\n\t\t__tempPointer.set (v, srcOffset);\n\t\t\n\t\tthis.uniformMatrix4x3fv (location, count, transpose, __tempPointer);\n\t\t\n\t}\n\t#else\n\tpublic inline function uniformMatrix4x3fv (location:GLUniformLocation, transpose:Bool, v:Float32Array, ?srcOffset:Int, ?srcLength:Int):Void {\n\t\t\n\t\tthis.uniformMatrix4x3fvWEBGL (location, transpose, v, srcOffset, srcLength);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic inline function useProgram (program:GLProgram):Void {\n\t\t\n\t\tthis.useProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function validateProgram (program:GLProgram):Void {\n\t\t\n\t\tthis.validateProgram (program);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib1f (indx:Int, x:Float):Void {\n\t\t\n\t\tthis.vertexAttrib1f (indx, x);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib1fv (indx:Int, values:Float32Array):Void {\n\t\t\n\t\tthis.vertexAttrib1fv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib2f (indx:Int, x:Float, y:Float):Void {\n\t\t\n\t\tthis.vertexAttrib2f (indx, x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib2fv (indx:Int, values:Float32Array):Void {\n\t\t\n\t\tthis.vertexAttrib2fv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib3f (indx:Int, x:Float, y:Float, z:Float):Void {\n\t\t\n\t\tthis.vertexAttrib3f (indx, x, y, z);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib3fv (indx:Int, values:Float32Array):Void {\n\t\t\n\t\tthis.vertexAttrib3fv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib4f (indx:Int, x:Float, y:Float, z:Float, w:Float):Void {\n\t\t\n\t\tthis.vertexAttrib4f (indx, x, y, z, w);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttrib4fv (indx:Int, values:Float32Array):Void {\n\t\t\n\t\tthis.vertexAttrib4fv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribDivisor (index:Int, divisor:Int):Void {\n\t\t\n\t\tthis.vertexAttribDivisor (index, divisor);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4i (indx:Int, x:Int, y:Int, z:Int, w:Int):Void {\n\t\t\n\t\tthis.vertexAttribI4i (indx, x, y, z, w);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4iv (indx:Int, values:Float32Array):Void {\n\t\t\n\t\tthis.vertexAttribI4iv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4ui (indx:Int, x:Int, y:Int, z:Int, w:Int):Void {\n\t\t\n\t\tthis.vertexAttribI4ui (indx, x, y, z, w);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribI4uiv (indx:Int, values:Float32Array):Void {\n\t\t\n\t\tthis.vertexAttribI4uiv (indx, values);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function vertexAttribPointer (indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:DataPointer):Void {\n\t\t\n\t\tthis.vertexAttribPointer (indx, size, type, normalized, stride, offset);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function viewport (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\tthis.viewport (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function waitSync (sync:GLSync, flags:Int, timeout:Int64):Void {\n\t\t\n\t\tthis.waitSync (sync, flags, timeout);\n\t\t\n\t}\n\t\n\t\n\t@:from private static function fromGL (gl:#if lime_opengl Class<GL> #else Dynamic #end):WebGL2Context {\n\t\t\n\t\t#if lime_opengl\n\t\treturn cast GL.context;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from private static function fromGLES3Context (gl:GLES3Context):WebGL2Context {\n\t\t\n\t\treturn (gl:GLRenderContext);\n\t\t\n\t}\n\t\n\t\n\t@:from private static function toWebGLContext (gl:WebGLContext):WebGL2Context {\n\t\t\n\t\treturn cast gl;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.opengl;\n\n\nimport lime.utils.ArrayBufferView;\nimport lime.utils.Float32Array;\n\n@:forward(DEPTH_BUFFER_BIT, STENCIL_BUFFER_BIT, COLOR_BUFFER_BIT, POINTS, LINES, LINE_LOOP, LINE_STRIP, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, ZERO, ONE, SRC_COLOR, ONE_MINUS_SRC_COLOR, SRC_ALPHA, ONE_MINUS_SRC_ALPHA, DST_ALPHA, ONE_MINUS_DST_ALPHA, DST_COLOR, ONE_MINUS_DST_COLOR, SRC_ALPHA_SATURATE, FUNC_ADD, BLEND_EQUATION, BLEND_EQUATION_RGB, BLEND_EQUATION_ALPHA, FUNC_SUBTRACT, FUNC_REVERSE_SUBTRACT, BLEND_DST_RGB, BLEND_SRC_RGB, BLEND_DST_ALPHA, BLEND_SRC_ALPHA, CONSTANT_COLOR, ONE_MINUS_CONSTANT_COLOR, CONSTANT_ALPHA, ONE_MINUS_CONSTANT_ALPHA, BLEND_COLOR, ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, ARRAY_BUFFER_BINDING, ELEMENT_ARRAY_BUFFER_BINDING, STREAM_DRAW, STATIC_DRAW, DYNAMIC_DRAW, BUFFER_SIZE, BUFFER_USAGE, CURRENT_VERTEX_ATTRIB, FRONT, BACK, FRONT_AND_BACK, CULL_FACE, BLEND, DITHER, STENCIL_TEST, DEPTH_TEST, SCISSOR_TEST, POLYGON_OFFSET_FILL, SAMPLE_ALPHA_TO_COVERAGE, SAMPLE_COVERAGE, NO_ERROR, INVALID_ENUM, INVALID_VALUE, INVALID_OPERATION, OUT_OF_MEMORY, CW , CCW, LINE_WIDTH, ALIASED_POINT_SIZE_RANGE, ALIASED_LINE_WIDTH_RANGE, CULL_FACE_MODE, FRONT_FACE, DEPTH_RANGE, DEPTH_WRITEMASK, DEPTH_CLEAR_VALUE, DEPTH_FUNC, STENCIL_CLEAR_VALUE, STENCIL_FUNC, STENCIL_FAIL, STENCIL_PASS_DEPTH_FAIL, STENCIL_PASS_DEPTH_PASS, STENCIL_REF, STENCIL_VALUE_MASK, STENCIL_WRITEMASK, STENCIL_BACK_FUNC, STENCIL_BACK_FAIL, STENCIL_BACK_PASS_DEPTH_FAIL, STENCIL_BACK_PASS_DEPTH_PASS, STENCIL_BACK_REF, STENCIL_BACK_VALUE_MASK, STENCIL_BACK_WRITEMASK, VIEWPORT, SCISSOR_BOX, COLOR_CLEAR_VALUE, COLOR_WRITEMASK, UNPACK_ALIGNMENT, PACK_ALIGNMENT, MAX_TEXTURE_SIZE, MAX_VIEWPORT_DIMS, SUBPIXEL_BITS, RED_BITS, GREEN_BITS, BLUE_BITS, ALPHA_BITS, DEPTH_BITS, STENCIL_BITS, POLYGON_OFFSET_UNITS, POLYGON_OFFSET_FACTOR, TEXTURE_BINDING_2D, SAMPLE_BUFFERS, SAMPLES, SAMPLE_COVERAGE_VALUE, SAMPLE_COVERAGE_INVERT, COMPRESSED_TEXTURE_FORMATS, DONT_CARE, FASTEST, NICEST, GENERATE_MIPMAP_HINT, BYTE, UNSIGNED_BYTE, SHORT, UNSIGNED_SHORT, INT, UNSIGNED_INT, FLOAT, DEPTH_COMPONENT, ALPHA, RGB, RGBA, LUMINANCE, LUMINANCE_ALPHA, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_SHORT_5_6_5, FRAGMENT_SHADER, VERTEX_SHADER, MAX_VERTEX_ATTRIBS, MAX_VERTEX_UNIFORM_VECTORS, MAX_VARYING_VECTORS, MAX_COMBINED_TEXTURE_IMAGE_UNITS, MAX_VERTEX_TEXTURE_IMAGE_UNITS, MAX_TEXTURE_IMAGE_UNITS, MAX_FRAGMENT_UNIFORM_VECTORS, SHADER_TYPE, DELETE_STATUS, LINK_STATUS, VALIDATE_STATUS, ATTACHED_SHADERS, ACTIVE_UNIFORMS, ACTIVE_ATTRIBUTES, SHADING_LANGUAGE_VERSION, CURRENT_PROGRAM, NEVER, LESS, EQUAL, LEQUAL, GREATER, NOTEQUAL, GEQUAL, ALWAYS, KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, DECR_WRAP, VENDOR, RENDERER, VERSION, NEAREST, LINEAR, NEAREST_MIPMAP_NEAREST, LINEAR_MIPMAP_NEAREST, NEAREST_MIPMAP_LINEAR, LINEAR_MIPMAP_LINEAR, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER, TEXTURE_WRAP_S, TEXTURE_WRAP_T, TEXTURE_2D, TEXTURE, TEXTURE_CUBE_MAP, TEXTURE_BINDING_CUBE_MAP, TEXTURE_CUBE_MAP_POSITIVE_X, TEXTURE_CUBE_MAP_NEGATIVE_X, TEXTURE_CUBE_MAP_POSITIVE_Y, TEXTURE_CUBE_MAP_NEGATIVE_Y, TEXTURE_CUBE_MAP_POSITIVE_Z, TEXTURE_CUBE_MAP_NEGATIVE_Z, MAX_CUBE_MAP_TEXTURE_SIZE, TEXTURE0, TEXTURE1, TEXTURE2, TEXTURE3, TEXTURE4, TEXTURE5, TEXTURE6, TEXTURE7, TEXTURE8, TEXTURE9, TEXTURE10, TEXTURE11, TEXTURE12, TEXTURE13, TEXTURE14, TEXTURE15, TEXTURE16, TEXTURE17, TEXTURE18, TEXTURE19, TEXTURE20, TEXTURE21, TEXTURE22, TEXTURE23, TEXTURE24, TEXTURE25, TEXTURE26, TEXTURE27, TEXTURE28, TEXTURE29, TEXTURE30, TEXTURE31, ACTIVE_TEXTURE, REPEAT, CLAMP_TO_EDGE, MIRRORED_REPEAT, FLOAT_VEC2, FLOAT_VEC3, FLOAT_VEC4, INT_VEC2, INT_VEC3, INT_VEC4, BOOL, BOOL_VEC2, BOOL_VEC3, BOOL_VEC4, FLOAT_MAT2, FLOAT_MAT3, FLOAT_MAT4, SAMPLER_2D, SAMPLER_CUBE, VERTEX_ATTRIB_ARRAY_ENABLED, VERTEX_ATTRIB_ARRAY_SIZE, VERTEX_ATTRIB_ARRAY_STRIDE, VERTEX_ATTRIB_ARRAY_TYPE, VERTEX_ATTRIB_ARRAY_NORMALIZED, VERTEX_ATTRIB_ARRAY_POINTER, VERTEX_ATTRIB_ARRAY_BUFFER_BINDING, COMPILE_STATUS, LOW_FLOAT, MEDIUM_FLOAT, HIGH_FLOAT, LOW_INT, MEDIUM_INT, HIGH_INT, FRAMEBUFFER, RENDERBUFFER, RGBA4, RGB5_A1, RGB565, DEPTH_COMPONENT16, STENCIL_INDEX, STENCIL_INDEX8, DEPTH_STENCIL, RENDERBUFFER_WIDTH, RENDERBUFFER_HEIGHT, RENDERBUFFER_INTERNAL_FORMAT, RENDERBUFFER_RED_SIZE, RENDERBUFFER_GREEN_SIZE, RENDERBUFFER_BLUE_SIZE, RENDERBUFFER_ALPHA_SIZE, RENDERBUFFER_DEPTH_SIZE, RENDERBUFFER_STENCIL_SIZE, FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE, FRAMEBUFFER_ATTACHMENT_OBJECT_NAME, FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL, FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE, COLOR_ATTACHMENT0, DEPTH_ATTACHMENT, STENCIL_ATTACHMENT, DEPTH_STENCIL_ATTACHMENT, NONE, FRAMEBUFFER_COMPLETE, FRAMEBUFFER_INCOMPLETE_ATTACHMENT, FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT, FRAMEBUFFER_INCOMPLETE_DIMENSIONS, FRAMEBUFFER_UNSUPPORTED, FRAMEBUFFER_BINDING, RENDERBUFFER_BINDING, MAX_RENDERBUFFER_SIZE, INVALID_FRAMEBUFFER_OPERATION, UNPACK_FLIP_Y_WEBGL, UNPACK_PREMULTIPLY_ALPHA_WEBGL, CONTEXT_LOST_WEBGL, UNPACK_COLORSPACE_CONVERSION_WEBGL, BROWSER_DEFAULT_WEBGL, type, version, activeTexture, attachShader, bindAttribLocation, bindBuffer, bindFramebuffer, bindRenderbuffer, bindTexture, blendColor, blendEquation, blendEquationSeparate, blendFunc, blendFuncSeparate, checkFramebufferStatus, clear, clearColor, clearDepth, clearStencil, colorMask, compileShader, copyTexImage2D, copyTexSubImage2D, createBuffer, createFramebuffer, createProgram, createRenderbuffer, createShader, createTexture, cullFace, cullFace, deleteBuffer, deleteFramebuffer, deleteProgram, deleteRenderbuffer, deleteShader, deleteTexture, depthFunc, depthMask, depthRange, detachShader, disable, disableVertexAttribArray, drawArrays, drawElements, enable, enableVertexAttribArray, finish, flush, framebufferRenderbuffer, framebufferTexture2D, frontFace, generateMipmap, getActiveAttrib, getActiveUniform, getAttachedShaders, getAttribLocation, getBufferParameter, getContextAttributes, getError, getExtension, getFramebufferAttachmentParameter, getParameter, getProgramInfoLog, getProgramParameter, getRenderbufferParameter, getShaderInfoLog, getShaderParameter, getShaderPrecisionFormat, getShaderSource, getSupportedExtensions, getTexParameter, getUniform, getUniformLocation, getVertexAttrib, getVertexAttribOffset, hint, isBuffer, isContextLost, isEnabled, isFramebuffer, isProgram, isRenderbuffer, isShader, isTexture, lineWidth, linkProgram, pixelStorei, polygonOffset, renderbufferStorage, sampleCoverage, scissor, shaderSource, stencilFunc, stencilFuncSeparate, stencilMask, stencilMaskSeparate, stencilOp, stencilOpSeparate, texParameterf, texParameteri, uniform1f, uniform1fv, uniform1i, uniform1iv, uniform2f, uniform2fv, uniform2i, uniform2iv, uniform3f, uniform3fv, uniform3i, uniform3iv, uniform4f, uniform4fv, uniform4i, uniform4iv, useProgram, validateProgram, vertexAttrib1f, vertexAttrib1fv, vertexAttrib2f, vertexAttrib2fv, vertexAttrib3f, vertexAttrib3fv, vertexAttrib4f, vertexAttrib4fv, vertexAttribPointer, viewport)\n\n\nabstract WebGLContext(WebGL2Context) from GLRenderContext from WebGL2Context {\n\t\n\t\n\t\n\tpublic function bufferData (target:Int, srcData:#if (!js || !html5 || display) ArrayBufferView #else Dynamic #end, usage:Int):Void {\n\t\t\n\t\tthis.bufferData (target, srcData, usage);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function bufferSubData (target:Int, offset:Int, srcData:#if (!js || !html5 || display) ArrayBufferView #else Dynamic #end):Void {\n\t\t\n\t\tthis.bufferSubData (target, offset, srcData);\n\t\t\n\t}\n\t\n\t\n\tpublic function compressedTexImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, srcData:#if (!js || !html5 || display) ArrayBufferView #else Dynamic #end):Void {\n\t\t\n\t\tthis.compressedTexImage2D (target, level, internalformat, width, height, border, srcData);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function compressedTexSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, srcData:#if (!js || !html5 || display) ArrayBufferView #else Dynamic #end):Void {\n\t\t\n\t\tthis.compressedTexSubImage2D (target, level, xoffset, yoffset, width, height, format, srcData);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readPixels (x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:#if (!js || !html5 || display) ArrayBufferView #else Dynamic #end):Void {\n\t\t\n\t\tthis.readPixels (x, y, width, height, format, type, pixels);\n\t\t\n\t}\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, srcData:ArrayBufferView):Void {\n\t\t\n\t\tthis.texImage2D (target, level, internalformat, width, height, border, format, type, srcData);\n\t\t\n\t}\n\t#else\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:Dynamic /*ImageBitmap*/):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:#if (js && html5) CanvasElement #else Dynamic #end):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:#if (js && html5) ImageData #else Dynamic #end):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:#if (js && html5) ImageElement #else Dynamic #end):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, format:Int, type:Int, pixels:#if (js && html5) VideoElement #else Dynamic #end):Void {\n\t//public function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, srcData:ArrayBufferView):Void {\n\tpublic function texImage2D (target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Dynamic, ?format:Int, ?type:Int, ?srcData:Dynamic):Void {\n\t\t\n\t\tthis.texImage2D (target, level, internalformat, width, height, border, format, type, srcData);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if (!js || !html5 || display)\n\tpublic inline function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, srcData:ArrayBufferView, srcOffset:Int = 0):Void {\n\t\t\n\t\tthis.texSubImage2D (target, level, xoffset, yoffset, width, height, format, type, srcData, srcOffset);\n\t\t\n\t}\n\t#else\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:#if (js && html5) CanvasElement #else Dynamic #end):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:Dynamic /*ImageBitmap*/):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:#if (js && html5) ImageData #else Dynamic #end):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:#if (js && html5) ImageElement #else Dynamic #end):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, format:Int, type:Int, pixels:#if (js && html5) VideoElement #else Dynamic #end):Void {\n\t//public function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, srcData:ArrayBufferView):Void {\n\tpublic function texSubImage2D (target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Dynamic, ?type:Int, ?srcData:Dynamic):Void {\n\t\t\n\t\tthis.texSubImage2D (target, level, xoffset, yoffset, width, height, format, type, srcData);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function uniformMatrix2fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\n\t\t\n\t\tthis.uniformMatrix2fv (location, transpose, v);\n\t\t\n\t}\n\t\n\t\n\tpublic function uniformMatrix3fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\n\t\t\n\t\tthis.uniformMatrix3fv (location, transpose, v);\n\t\t\n\t}\n\t\n\t\n\tpublic function uniformMatrix4fv (location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\n\t\t\n\t\tthis.uniformMatrix4fv (location, transpose, v);\n\t\t\n\t}\n\t\n\t\n\t@:from private static function fromGL (gl:#if lime_opengl Class<GL> #else Dynamic #end):WebGLContext {\n\t\t\n\t\t#if lime_opengl\n\t\treturn cast GL.context;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from private static function fromGLES2Context (gl:GLES2Context):WebGLContext {\n\t\t\n\t\treturn cast gl;\n\t\t\n\t}\n\t\n\t\n\t@:from private static function fromGLES3Context (gl:GLES3Context):WebGLContext {\n\t\t\n\t\treturn cast gl;\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.utils;\n\n\nimport haxe.format.JsonParser;\nimport haxe.io.Bytes;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.graphics.PixelFormat;\nimport lime.math.ColorMatrix;\nimport lime.math.Rectangle;\nimport lime.math.Vector2;\nimport lime.system.Endian;\nimport lime.utils.BytePointer;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n@:access(lime.graphics.ImageBuffer)\n\n\nclass ImageCanvasUtil {\n\t\n\t\n\tpublic static function colorTransform (image:Image, rect:Rectangle, colorMatrix:ColorMatrix):Void {\n\t\t\n\t\tconvertToData (image);\n\t\t\n\t\tImageDataUtil.colorTransform (image, rect, colorMatrix);\n\t\t\n\t}\n\t\n\t\n\tpublic static function convertToCanvas (image:Image, clear:Bool = false):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcImage != null) {\n\t\t\t\n\t\t\tif (buffer.__srcCanvas == null) {\n\t\t\t\t\n\t\t\t\tcreateCanvas (image, buffer.__srcImage.width, buffer.__srcImage.height);\n\t\t\t\tbuffer.__srcContext.drawImage (buffer.__srcImage, 0, 0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbuffer.__srcImage = null;\n\t\t\t\n\t\t} else if (buffer.__srcCanvas == null && buffer.data != null) {\n\t\t\t\n\t\t\timage.transparent = true;\n\t\t\tcreateCanvas (image, buffer.width, buffer.height);\n\t\t\tcreateImageData (image);\n\t\t\t\n\t\t\tbuffer.__srcContext.putImageData (buffer.__srcImageData, 0, 0);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (image.type == DATA && buffer.__srcImageData != null && image.dirty) {\n\t\t\t\t\n\t\t\t\tbuffer.__srcContext.putImageData (buffer.__srcImageData, 0, 0);\n\t\t\t\timage.dirty = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (clear) {\n\t\t\t\n\t\t\tbuffer.data = null;\n\t\t\tbuffer.__srcImageData = null;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (buffer.data == null && buffer.__srcImageData != null) {\n\t\t\t\t\n\t\t\t\tbuffer.data = cast buffer.__srcImageData.data;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\timage.type = CANVAS;\n\t\t\n\t}\n\t\n\t\n\tpublic static function convertToData (image:Image, clear:Bool = false):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcImage != null) {\n\t\t\t\n\t\t\tconvertToCanvas (image);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (buffer.__srcCanvas != null && buffer.data == null) {\n\t\t\t\n\t\t\tcreateImageData (image);\n\t\t\tif (image.type == CANVAS) image.dirty = false;\n\t\t\t\n\t\t} else if (image.type == CANVAS && buffer.__srcCanvas != null && image.dirty) {\n\t\t\t\n\t\t\tif (buffer.__srcImageData == null) {\n\t\t\t\t\n\t\t\t\tcreateImageData (image);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tbuffer.__srcImageData = buffer.__srcContext.getImageData (0, 0, buffer.width, buffer.height);\n\t\t\t\tbuffer.data = new UInt8Array (cast buffer.__srcImageData.data.buffer);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\timage.dirty = false;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (clear) {\n\t\t\t\n\t\t\timage.buffer.__srcCanvas = null;\n\t\t\timage.buffer.__srcContext = null;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\timage.type = DATA;\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyChannel (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {\n\t\t\n\t\tconvertToData (sourceImage);\n\t\tconvertToData (image);\n\t\t\n\t\tImageDataUtil.copyChannel (image, sourceImage, sourceRect, destPoint, sourceChannel, destChannel);\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyPixels (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {\n\t\t\n\t\tif (destPoint == null || destPoint.x >= image.width || destPoint.y >= image.height || sourceRect == null || sourceRect.width < 1 || sourceRect.height < 1) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (alphaImage != null && alphaImage.transparent) {\n\t\t\t\n\t\t\tif (alphaPoint == null) alphaPoint = new Vector2 ();\n\t\t\t\n\t\t\t// TODO: use faster method\n\t\t\t\n\t\t\tvar tempData = image.clone ();\n\t\t\ttempData.copyChannel (alphaImage, new Rectangle (alphaPoint.x, alphaPoint.y, sourceRect.width, sourceRect.height), new Vector2 (sourceRect.x, sourceRect.y), ImageChannel.ALPHA, ImageChannel.ALPHA);\n\t\t\tsourceImage = tempData;\n\t\t\t\n\t\t}\n\t\t\n\t\tconvertToCanvas (image, true);\n\t\t\n\t\tif (!mergeAlpha) {\n\t\t\t\n\t\t\tif (image.transparent && sourceImage.transparent) {\n\t\t\t\t\n\t\t\t\timage.buffer.__srcContext.clearRect (destPoint.x + image.offsetX, destPoint.y + image.offsetY, sourceRect.width + image.offsetX, sourceRect.height + image.offsetY);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tconvertToCanvas (sourceImage);\n\t\t\n\t\tif (sourceImage.buffer.src != null) {\n\t\t\t\n\t\t\timage.buffer.__srcContext.drawImage (sourceImage.buffer.src, Std.int (sourceRect.x + sourceImage.offsetX), Std.int (sourceRect.y + sourceImage.offsetY), Std.int (sourceRect.width), Std.int (sourceRect.height), Std.int (destPoint.x + image.offsetX), Std.int (destPoint.y + image.offsetY), Std.int (sourceRect.width), Std.int (sourceRect.height));\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function createCanvas (image:Image, width:Int, height:Int):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tvar buffer = image.buffer;\n\t\t\n\t\tif (buffer.__srcCanvas == null) {\n\t\t\t\n\t\t\tbuffer.__srcCanvas = cast Browser.document.createElement (\"canvas\");\n\t\t\tbuffer.__srcCanvas.width = width;\n\t\t\tbuffer.__srcCanvas.height = height;\n\t\t\t\n\t\t\tif (!image.transparent) {\n\t\t\t\t\n\t\t\t\tif (!image.transparent) buffer.__srcCanvas.setAttribute (\"moz-opaque\", \"true\");\n\t\t\t\tbuffer.__srcContext = untyped __js__ ('buffer.__srcCanvas.getContext (\"2d\", { alpha: false })');\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tbuffer.__srcContext = buffer.__srcCanvas.getContext (\"2d\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tuntyped (buffer.__srcContext).mozImageSmoothingEnabled = false;\n\t\t\t//untyped (buffer.__srcContext).webkitImageSmoothingEnabled = false;\n\t\t\tuntyped (buffer.__srcContext).msImageSmoothingEnabled = false;\n\t\t\tuntyped (buffer.__srcContext).imageSmoothingEnabled = false;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createImageData (image:Image):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tvar buffer = image.buffer;\n\t\t\n\t\tif (buffer.__srcImageData == null) {\n\t\t\t\n\t\t\tif (buffer.data == null) {\n\t\t\t\t\n\t\t\t\tbuffer.__srcImageData = buffer.__srcContext.getImageData (0, 0, buffer.width, buffer.height);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tbuffer.__srcImageData = buffer.__srcContext.createImageData (buffer.width, buffer.height);\n\t\t\t\tbuffer.__srcImageData.data.set (cast buffer.data);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbuffer.data = new UInt8Array (cast buffer.__srcImageData.data.buffer);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fillRect (image:Image, rect:Rectangle, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tconvertToCanvas (image);\n\t\t\n\t\tvar r, g, b, a;\n\t\t\n\t\tif (format == ARGB32) {\n\t\t\t\n\t\t\tr = (color >> 16) & 0xFF;\n\t\t\tg = (color >> 8) & 0xFF;\n\t\t\tb = color & 0xFF;\n\t\t\ta = (image.transparent) ? (color >> 24) & 0xFF : 0xFF;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tr = (color >> 24) & 0xFF;\n\t\t\tg = (color >> 16) & 0xFF;\n\t\t\tb = (color >> 8) & 0xFF;\n\t\t\ta = (image.transparent) ? color & 0xFF : 0xFF;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (rect.x == 0 && rect.y == 0 && rect.width == image.width && rect.height == image.height) {\n\t\t\t\n\t\t\tif (image.transparent && a == 0) {\n\t\t\t\t\n\t\t\t\timage.buffer.__srcCanvas.width = image.buffer.width;\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (a < 255) {\n\t\t\t\n\t\t\timage.buffer.__srcContext.clearRect (rect.x + image.offsetX, rect.y + image.offsetY, rect.width + image.offsetX, rect.height + image.offsetY);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (a > 0) {\n\t\t\t\n\t\t\timage.buffer.__srcContext.fillStyle = 'rgba(' + r + ', ' + g + ', ' + b + ', ' + (a / 255) + ')';\n\t\t\timage.buffer.__srcContext.fillRect (rect.x + image.offsetX, rect.y + image.offsetY, rect.width + image.offsetX, rect.height + image.offsetY);\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function floodFill (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tconvertToData (image);\n\t\t\n\t\tImageDataUtil.floodFill (image, x, y, color, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel (image:Image, x:Int, y:Int, format:PixelFormat):Int {\n\t\t\n\t\tconvertToData (image);\n\t\t\n\t\treturn ImageDataUtil.getPixel (image, x, y, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel32 (image:Image, x:Int, y:Int, format:PixelFormat):Int {\n\t\t\n\t\tconvertToData (image);\n\t\t\n\t\treturn ImageDataUtil.getPixel32 (image, x, y, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixels (image:Image, rect:Rectangle, format:PixelFormat):Bytes {\n\t\t\n\t\tconvertToData (image);\n\t\t\n\t\treturn ImageDataUtil.getPixels (image, rect, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function merge (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {\n\t\t\n\t\tconvertToData (sourceImage);\n\t\tconvertToData (image);\n\t\t\n\t\tImageDataUtil.merge (image, sourceImage, sourceRect, destPoint, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\n\t}\n\t\n\t\n\tpublic static function resize (image:Image, newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\t\n\t\tif (buffer.__srcCanvas == null) {\n\t\t\t\n\t\t\tcreateCanvas (image, newWidth, newHeight);\n\t\t\tbuffer.__srcContext.drawImage (buffer.src, 0, 0, newWidth, newHeight);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tconvertToCanvas (image, true);\n\t\t\tvar sourceCanvas = buffer.__srcCanvas;\n\t\t\tbuffer.__srcCanvas = null;\n\t\t\tcreateCanvas (image, newWidth, newHeight);\n\t\t\tbuffer.__srcContext.drawImage (sourceCanvas, 0, 0, newWidth, newHeight);\n\t\t\t\n\t\t}\n\t\t\n\t\tbuffer.__srcImageData = null;\n\t\tbuffer.data = null;\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function scroll (image:Image, x:Int, y:Int):Void {\n\t\t\n\t\tif ((x % image.width == 0) && (y % image.height == 0)) return;\n\t\t\n\t\tvar copy = image.clone ();\n\t\t\n\t\tconvertToCanvas (image, true);\n\t\t\n\t\timage.buffer.__srcContext.clearRect (x, y, image.width, image.height);\n\t\timage.buffer.__srcContext.drawImage (copy.src, x, y);\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tconvertToData (image);\n\t\t\n\t\tImageDataUtil.setPixel (image, x, y, color, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel32 (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tconvertToData (image);\n\t\t\n\t\tImageDataUtil.setPixel32 (image, x, y, color, format);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixels (image:Image, rect:Rectangle, bytePointer:BytePointer, format:PixelFormat, endian:Endian):Void {\n\t\t\n\t\tconvertToData (image);\n\t\t\n\t\tImageDataUtil.setPixels (image, rect, bytePointer, format, endian);\n\t\t\n\t}\n\t\n\t\n\tpublic static function sync (image:Image, clear:Bool):Void {\n\t\t\n\t\tif (image == null) return;\n\t\t\n\t\t#if (js && html5)\n\t\tif (image.type == CANVAS) {\n\t\t\t\n\t\t\tconvertToCanvas (image, clear);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tconvertToData (image, clear);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.graphics.utils;\n\n\nimport haxe.ds.Vector;\nimport haxe.Int32;\nimport haxe.io.Bytes;\nimport lime._backend.native.NativeCFFI;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.graphics.PixelFormat;\nimport lime.math.color.ARGB;\nimport lime.math.color.BGRA;\nimport lime.math.color.RGBA;\nimport lime.math.ColorMatrix;\nimport lime.math.Rectangle;\nimport lime.math.Vector2;\nimport lime.system.CFFI;\nimport lime.system.Endian;\nimport lime.utils.BytePointer;\nimport lime.utils.UInt8Array;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n@:access(lime.graphics.ImageBuffer)\n@:access(lime.math.color.RGBA)\n\n\nclass ImageDataUtil {\n\t\n\t\n\tpublic static function colorTransform (image:Image, rect:Rectangle, colorMatrix:ColorMatrix):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null) return;\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_color_transform (image, rect, colorMatrix); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar format = image.buffer.format;\n\t\t\tvar premultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar dataView = new ImageDataView (image, rect);\n\t\t\t\n\t\t\tvar alphaTable = colorMatrix.getAlphaTable ();\n\t\t\tvar redTable = colorMatrix.getRedTable ();\n\t\t\tvar greenTable = colorMatrix.getGreenTable ();\n\t\t\tvar blueTable = colorMatrix.getBlueTable ();\n\t\t\t\n\t\t\tvar row, offset, pixel:RGBA;\n\t\t\t\n\t\t\tfor (y in 0...dataView.height) {\n\t\t\t\t\n\t\t\t\trow = dataView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...dataView.width) {\n\t\t\t\t\t\n\t\t\t\t\toffset = row + (x * 4);\n\t\t\t\t\t\n\t\t\t\t\tpixel.readUInt8 (data, offset, format, premultiplied);\n\t\t\t\t\tpixel.set (redTable[pixel.r], greenTable[pixel.g], blueTable[pixel.b], alphaTable[pixel.a]);\n\t\t\t\t\tpixel.writeUInt8 (data, offset, format, premultiplied);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyChannel (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, sourceChannel:ImageChannel, destChannel:ImageChannel):Void {\n\t\t\n\t\tvar destIdx = switch (destChannel) {\n\t\t\t\n\t\t\tcase RED: 0;\n\t\t\tcase GREEN: 1;\n\t\t\tcase BLUE: 2;\n\t\t\tcase ALPHA: 3;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar srcIdx = switch (sourceChannel) {\n\t\t\t\n\t\t\tcase RED: 0;\n\t\t\tcase GREEN: 1;\n\t\t\tcase BLUE: 2;\n\t\t\tcase ALPHA: 3;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar srcData = sourceImage.buffer.data;\n\t\tvar destData = image.buffer.data;\n\t\t\n\t\tif (srcData == null || destData == null) return;\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_copy_channel (image, sourceImage, sourceRect, destPoint, srcIdx, destIdx); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar srcView = new ImageDataView (sourceImage, sourceRect);\n\t\t\tvar destView = new ImageDataView (image, new Rectangle (destPoint.x, destPoint.y, srcView.width, srcView.height));\n\t\t\t\n\t\t\tvar srcFormat = sourceImage.buffer.format;\n\t\t\tvar destFormat = image.buffer.format;\n\t\t\tvar srcPremultiplied = sourceImage.buffer.premultiplied;\n\t\t\tvar destPremultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar srcPosition, destPosition, srcPixel:RGBA, destPixel:RGBA, value = 0;\n\t\t\t\n\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\n\t\t\t\tsrcPosition = srcView.row (y);\n\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\n\t\t\t\t\tsrcPixel.readUInt8 (srcData, srcPosition, srcFormat, srcPremultiplied);\n\t\t\t\t\tdestPixel.readUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\n\t\t\t\t\tswitch (srcIdx) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 0: value = srcPixel.r;\n\t\t\t\t\t\tcase 1: value = srcPixel.g;\n\t\t\t\t\t\tcase 2: value = srcPixel.b;\n\t\t\t\t\t\tcase 3: value = srcPixel.a;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tswitch (destIdx) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 0: destPixel.r = value;\n\t\t\t\t\t\tcase 1: destPixel.g = value;\n\t\t\t\t\t\tcase 2: destPixel.b = value;\n\t\t\t\t\t\tcase 3: destPixel.a = value;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdestPixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\n\t\t\t\t\tsrcPosition += 4;\n\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function copyPixels (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, alphaImage:Image = null, alphaPoint:Vector2 = null, mergeAlpha:Bool = false):Void {\n\t\t\n\t\tif (image.width == sourceImage.width && image.height == sourceImage.height && sourceRect.width == sourceImage.width && sourceRect.height == sourceImage.height && sourceRect.x == 0 && sourceRect.y == 0 && destPoint.x == 0 && destPoint.y == 0 && alphaImage == null && alphaPoint == null && mergeAlpha == false && image.format == sourceImage.format) {\n\t\t\t\n\t\t\timage.buffer.data.set (sourceImage.buffer.data);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_copy_pixels (image, sourceImage, sourceRect, destPoint, alphaImage, alphaPoint, mergeAlpha); else\n\t\t\t#end\n\t\t\t{\n\t\t\t\t\n\t\t\t\tvar sourceData = sourceImage.buffer.data;\n\t\t\t\tvar destData = image.buffer.data;\n\t\t\t\t\n\t\t\t\tif (sourceData == null || destData == null) return;\n\t\t\t\t\n\t\t\t\tvar sourceView = new ImageDataView (sourceImage, sourceRect);\n\t\t\t\tvar destRect = new Rectangle (destPoint.x, destPoint.y, sourceView.width, sourceView.height);\n\t\t\t\tvar destView = new ImageDataView (image, destRect);\n\t\t\t\t\n\t\t\t\tvar sourceFormat = sourceImage.buffer.format;\n\t\t\t\tvar destFormat = image.buffer.format;\n\t\t\t\t\n\t\t\t\tvar sourcePosition, destPosition;\n\t\t\t\tvar sourceAlpha, destAlpha, oneMinusSourceAlpha, blendAlpha;\n\t\t\t\tvar sourcePixel:RGBA, destPixel:RGBA;\n\t\t\t\t\n\t\t\t\tvar sourcePremultiplied = sourceImage.buffer.premultiplied;\n\t\t\t\tvar destPremultiplied = image.buffer.premultiplied;\n\t\t\t\tvar sourceBytesPerPixel = Std.int (sourceImage.buffer.bitsPerPixel / 8);\n\t\t\t\tvar destBytesPerPixel = Std.int (image.buffer.bitsPerPixel / 8);\n\t\t\t\t\n\t\t\t\tvar useAlphaImage = (alphaImage != null && alphaImage.transparent);\n\t\t\t\tvar blend = (mergeAlpha || (useAlphaImage && !image.transparent));\n\t\t\t\t\n\t\t\t\tif (!useAlphaImage) {\n\t\t\t\t\t\n\t\t\t\t\tif (blend) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsourcePosition = sourceView.row (y);\n\t\t\t\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsourcePixel.readUInt8 (sourceData, sourcePosition, sourceFormat, sourcePremultiplied);\n\t\t\t\t\t\t\t\tdestPixel.readUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsourceAlpha = sourcePixel.a / 255.0;\n\t\t\t\t\t\t\t\tdestAlpha = destPixel.a / 255.0;\n\t\t\t\t\t\t\t\toneMinusSourceAlpha = 1 - sourceAlpha;\n\t\t\t\t\t\t\t\tblendAlpha = sourceAlpha + (destAlpha * oneMinusSourceAlpha);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (blendAlpha == 0) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tdestPixel = 0;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tdestPixel.r = RGBA.__clamp[Math.round ((sourcePixel.r * sourceAlpha + destPixel.r * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\t\tdestPixel.g = RGBA.__clamp[Math.round ((sourcePixel.g * sourceAlpha + destPixel.g * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\t\tdestPixel.b = RGBA.__clamp[Math.round ((sourcePixel.b * sourceAlpha + destPixel.b * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\t\tdestPixel.a = RGBA.__clamp[Math.round (blendAlpha * 255.0)];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tdestPixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsourcePosition += 4;\n\t\t\t\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (sourceFormat == destFormat && sourcePremultiplied == destPremultiplied && sourceBytesPerPixel == destBytesPerPixel) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsourcePosition = sourceView.row (y);\n\t\t\t\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#if js\n\t\t\t\t\t\t\t// TODO: Is this faster on HTML5 than the normal copy method?\n\t\t\t\t\t\t\tdestData.set (sourceData.subarray (sourcePosition, sourcePosition + destView.width * destBytesPerPixel), destPosition);\n\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\tdestData.buffer.blit (destPosition, sourceData.buffer, sourcePosition, destView.width * destBytesPerPixel);\n\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsourcePosition = sourceView.row (y);\n\t\t\t\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsourcePixel.readUInt8 (sourceData, sourcePosition, sourceFormat, sourcePremultiplied);\n\t\t\t\t\t\t\t\tsourcePixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsourcePosition += 4;\n\t\t\t\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (alphaPoint == null) alphaPoint = new Vector2 ();\n\t\t\t\t\t\n\t\t\t\t\tvar alphaData = alphaImage.buffer.data;\n\t\t\t\t\tvar alphaFormat = alphaImage.buffer.format;\n\t\t\t\t\tvar alphaPosition, alphaPixel:RGBA;\n\t\t\t\t\t\n\t\t\t\t\tvar alphaView = new ImageDataView (alphaImage, new Rectangle (alphaPoint.x, alphaPoint.y, alphaImage.width, alphaImage.height));\n\t\t\t\t\talphaView.offset (sourceView.x, sourceView.y);\n\t\t\t\t\t\n\t\t\t\t\tdestView.clip (Std.int (destPoint.x), Std.int (destPoint.y), alphaView.width, alphaView.height);\n\t\t\t\t\t\n\t\t\t\t\tif (blend) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsourcePosition = sourceView.row (y);\n\t\t\t\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\t\t\talphaPosition = alphaView.row (y);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsourcePixel.readUInt8 (sourceData, sourcePosition, sourceFormat, sourcePremultiplied);\n\t\t\t\t\t\t\t\tdestPixel.readUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\t\talphaPixel.readUInt8 (alphaData, alphaPosition, alphaFormat, false);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsourceAlpha = (alphaPixel.a / 255.0) * (sourcePixel.a / 255.0);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (sourceAlpha > 0) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tdestAlpha = destPixel.a / 255.0;\n\t\t\t\t\t\t\t\t\toneMinusSourceAlpha = 1 - sourceAlpha;\n\t\t\t\t\t\t\t\t\tblendAlpha = sourceAlpha + (destAlpha * oneMinusSourceAlpha);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tdestPixel.r = RGBA.__clamp[Math.round ((sourcePixel.r * sourceAlpha + destPixel.r * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\t\tdestPixel.g = RGBA.__clamp[Math.round ((sourcePixel.g * sourceAlpha + destPixel.g * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\t\tdestPixel.b = RGBA.__clamp[Math.round ((sourcePixel.b * sourceAlpha + destPixel.b * destAlpha * oneMinusSourceAlpha) / blendAlpha)];\n\t\t\t\t\t\t\t\t\tdestPixel.a = RGBA.__clamp[Math.round (blendAlpha * 255.0)];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tdestPixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsourcePosition += 4;\n\t\t\t\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\t\t\talphaPosition += 4;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsourcePosition = sourceView.row (y);\n\t\t\t\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\t\t\talphaPosition = alphaView.row (y);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsourcePixel.readUInt8 (sourceData, sourcePosition, sourceFormat, sourcePremultiplied);\n\t\t\t\t\t\t\t\talphaPixel.readUInt8 (alphaData, alphaPosition, alphaFormat, false);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsourcePixel.a = Math.round (sourcePixel.a * (alphaPixel.a / 0xFF));\n\t\t\t\t\t\t\t\tsourcePixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsourcePosition += 4;\n\t\t\t\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\t\t\talphaPosition += 4;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fillRect (image:Image, rect:Rectangle, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tvar fillColor:RGBA;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32: fillColor = (color:ARGB);\n\t\t\tcase BGRA32: fillColor = (color:BGRA);\n\t\t\tdefault: fillColor = color;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!image.transparent) {\n\t\t\t\n\t\t\tfillColor.a = 0xFF;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null) return;\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_fill_rect (image, rect, (fillColor >> 16) & 0xFFFF, (fillColor) & 0xFFFF); else // TODO: Better Int32 solution\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar format = image.buffer.format;\n\t\t\tvar premultiplied = image.buffer.premultiplied;\n\t\t\tif (premultiplied) fillColor.multiplyAlpha ();\n\t\t\t\n\t\t\tvar dataView = new ImageDataView (image, rect);\n\t\t\tvar row;\n\t\t\t\n\t\t\tfor (y in 0...dataView.height) {\n\t\t\t\t\n\t\t\t\trow = dataView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...dataView.width) {\n\t\t\t\t\t\n\t\t\t\t\tfillColor.writeUInt8 (data, row + (x * 4), format, false);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function floodFill (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null) return;\n\t\t\n\t\tif (format == ARGB32) color = ((color & 0xFFFFFF) << 8) | ((color >> 24) & 0xFF);\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_flood_fill (image, x, y, (color >> 16) & 0xFFFF, (color) & 0xFFFF); else // TODO: Better Int32 solution\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar format = image.buffer.format;\n\t\t\tvar premultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar fillColor:RGBA = color;\n\t\t\t\n\t\t\tvar hitColor:RGBA;\n\t\t\thitColor.readUInt8 (data, ((y + image.offsetY) * (image.buffer.width * 4)) + ((x + image.offsetX) * 4), format, premultiplied);\n\t\t\t\n\t\t\tif (!image.transparent) {\n\t\t\t\t\n\t\t\t\tfillColor.a = 0xFF;\n\t\t\t\thitColor.a = 0xFF;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (fillColor == hitColor) return;\n\t\t\t\n\t\t\tif (premultiplied) fillColor.multiplyAlpha();\n\t\t\t\n\t\t\tvar dx = [ 0, -1, 1, 0 ];\n\t\t\tvar dy = [ -1, 0, 0, 1 ];\n\t\t\t\n\t\t\tvar minX = -image.offsetX;\n\t\t\tvar minY = -image.offsetY;\n\t\t\tvar maxX = minX + image.width;\n\t\t\tvar maxY = minY + image.height;\n\t\t\t\n\t\t\tvar queue = new Array<Int> ();\n\t\t\tqueue.push (x);\n\t\t\tqueue.push (y);\n\t\t\t\n\t\t\tvar curPointX, curPointY, nextPointX, nextPointY, nextPointOffset, readColor:RGBA;\n\t\t\t\n\t\t\twhile (queue.length > 0) {\n\t\t\t\t\n\t\t\t\tcurPointY = queue.pop ();\n\t\t\t\tcurPointX = queue.pop ();\n\t\t\t\t\n\t\t\t\tfor (i in 0...4) {\n\t\t\t\t\t\n\t\t\t\t\tnextPointX = curPointX + dx[i];\n\t\t\t\t\tnextPointY = curPointY + dy[i];\n\t\t\t\t\t\n\t\t\t\t\tif (nextPointX < minX || nextPointY < minY || nextPointX >= maxX || nextPointY >= maxY) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnextPointOffset = (nextPointY * image.width + nextPointX) * 4;\n\t\t\t\t\treadColor.readUInt8 (data, nextPointOffset, format, premultiplied);\n\t\t\t\t\t\n\t\t\t\t\tif (readColor == hitColor) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfillColor.writeUInt8 (data, nextPointOffset, format, false);\n\t\t\t\t\t\t\n\t\t\t\t\t\tqueue.push (nextPointX);\n\t\t\t\t\t\tqueue.push (nextPointY);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function gaussianBlur (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, blurX:Float = 4, blurY:Float = 4, quality:Int = 1, strength:Float = 1):Image {\n\t\t\n\t\t// TODO: Support sourceRect better, do not modify sourceImage, create C++ implementation for native\n\t\t\n\t\t// TODO: Better handling of premultiplied alpha\n\t\tvar fromPreMult;\n\t\t\n\t\tif (image.buffer.premultiplied || sourceImage.buffer.premultiplied) {\n\t\t\t\n\t\t\tfromPreMult = function (col:Float, alpha:Float):Int {\n\t\t\t\tvar col = Std.int (col);\n\t\t\t\treturn col < 0 ? 0 : (col > 255 ? 255 : col);\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfromPreMult = function (col:Float, alpha:Float):Int {\n\t\t\t\tvar col = Std.int (col / alpha * 255) ;\n\t\t\t\treturn col < 0 ? 0 : (col > 255 ? 255 : col);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar boxesForGauss = function (sigma:Float, n:Int):Array<Float> {\n\t\t\tvar wIdeal = Math.sqrt((12*sigma*sigma/n)+1);  // Ideal averaging filter width\n\t\t\tvar wl = Math.floor(wIdeal);\n\t\t\tif (wl % 2 == 0) wl--;\n\t\t\tvar wu = wl+2;\n\t\t\t\n\t\t\tvar mIdeal = (12*sigma*sigma - n*wl*wl - 4*n*wl - 3*n)/(-4*wl - 4);\n\t\t\tvar m = Math.round(mIdeal);\n\t\t\tvar sizes:Array<Float> = [];\n\t\t\tfor (i in 0...n)\n\t\t\t\tsizes.push( i < m ? wl : wu);\n\t\t\t\n\t\t\treturn sizes;\n\t\t}\n\t\t\n\t\tvar boxBlurH = function (imgA:UInt8Array, imgB:UInt8Array, w:Int, h:Int, r:Int, off:Int):Void {\n\t\t\tvar iarr = 1 / (r+r+1);\n\t\t\tfor (i in 0...h) {\n\t\t\t\tvar ti = i*w, li = ti, ri = ti+r;\n\t\t\t\tvar fv = imgA[ti * 4 + off], lv = imgA[(ti+w-1) * 4 + off], val = (r+1)*fv;\n\t\t\t\t\n\t\t\t\tfor (j in 0...r)\n\t\t\t\t\tval += imgA[(ti+j) * 4 + off];\n\t\t\t\t\n\t\t\t\tfor (j in 0...r+1) {\n\t\t\t\t\tval += imgA[ri * 4 + off] - fv;\n\t\t\t\t\timgB[ti * 4 + off] = Math.round(val*iarr);\n\t\t\t\t\tri++;\n\t\t\t\t\tti++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (j in r+1...w-r) {\n\t\t\t\t\tval += imgA[ri * 4 + off] - imgA[li * 4 + off];\n\t\t\t\t\timgB[ti * 4 + off] = Math.round(val*iarr);\n\t\t\t\t\tri++;\n\t\t\t\t\tli++;\n\t\t\t\t\tti++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (j in w-r...w) {\n\t\t\t\t\tval += lv - imgA[li * 4 + off];\n\t\t\t\t\timgB[ti * 4 + off] = Math.round(val*iarr);\n\t\t\t\t\tli++;\n\t\t\t\t\tti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar boxBlurT = function (imgA:UInt8Array, imgB:UInt8Array, w:Int, h:Int, r:Int, off:Int):Void {\n\t\t\tvar iarr = 1 / (r+r+1);\n\t\t\tvar ws = w * 4;\n\t\t\tfor (i in 0...w) {\n\t\t\t\tvar ti = i * 4 + off, li = ti, ri = ti+(r*ws);\n\t\t\t\tvar fv = imgA[ti], lv = imgA[ti+(ws*(h-1))], val = (r+1)*fv;\n\t\t\t\tfor (j in 0...r)\n\t\t\t\t\tval += imgA[ti+j*ws];\n\t\t\t\t\n\t\t\t\tfor (j in 0...r+1) {\n\t\t\t\t\tval += imgA[ri] - fv;\n\t\t\t\t\timgB[ti] = Math.round(val*iarr);\n\t\t\t\t\tri+=ws; ti+=ws;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (j in r+1...h-r) {\n\t\t\t\t\tval += imgA[ri] - imgA[li];\n\t\t\t\t\timgB[ti] = Math.round(val*iarr);\n\t\t\t\t\tli+=ws;\n\t\t\t\t\tri+=ws;\n\t\t\t\t\tti+=ws;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (j in h-r...h) {\n\t\t\t\t\tval += lv - imgA[li];\n\t\t\t\t\timgB[ti] = Math.round(val*iarr);\n\t\t\t\t\tli+=ws;\n\t\t\t\t\tti+=ws;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar boxBlur = function (imgA:UInt8Array, imgB:UInt8Array, w:Int, h:Int, bx:Float, by:Float):Void {\n\t\t\tfor(i in 0...imgA.length)\n\t\t\t\timgB[i] = imgA[i];\n\t\t\t\n\t\t\tboxBlurH(imgB, imgA, w, h, Std.int(bx), 0);\n\t\t\tboxBlurH(imgB, imgA, w, h, Std.int(bx), 1);\n\t\t\tboxBlurH(imgB, imgA, w, h, Std.int(bx), 2);\n\t\t\tboxBlurH(imgB, imgA, w, h, Std.int(bx), 3);\n\t\t\t\n\t\t\tboxBlurT(imgA, imgB, w, h, Std.int(by), 0);\n\t\t\tboxBlurT(imgA, imgB, w, h, Std.int(by), 1);\n\t\t\tboxBlurT(imgA, imgB, w, h, Std.int(by), 2);\n\t\t\tboxBlurT(imgA, imgB, w, h, Std.int(by), 3);\n\t\t}\n\t\t\n\t\tvar imgB = image.data;\n\t\tvar imgA = sourceImage.data;\n\t\tvar w = Std.int (sourceRect.width);\n\t\tvar h = Std.int (sourceRect.height);\n\t\tvar bx = Std.int (blurX);\n\t\tvar by = Std.int (blurY);\n\t\tvar oX = Std.int (destPoint.x);\n\t\tvar oY = Std.int (destPoint.y);\n\t\t\n\t\tvar n = (quality * 2) - 1;\n\t\tvar rng = Math.pow(2, quality) * 0.125;\n\t\t\n\t\tvar bxs = boxesForGauss(bx * rng, n);\n\t\tvar bys = boxesForGauss(by * rng, n);\n\t\tvar offset:Int = Std.int( (w * oY + oX) * 4 );\n\t\t\n\t\tboxBlur (imgA, imgB, w, h, (bxs[0]-1)/2, (bys[0]-1)/2);\n\t\tvar bIndex:Int = 1;\n\t\tfor (i in 0...Std.int(n / 2)) {\n\t\t\tboxBlur (imgB, imgA, w, h, (bxs[bIndex]-1)/2, (bys[bIndex]-1)/2);\n\t\t\tboxBlur (imgA, imgB, w, h, (bxs[bIndex+1]-1)/2, (bys[bIndex+1]-1)/2);\n\t\t\t\n\t\t\tbIndex += 2;\n\t\t}\n\t\t\n\t\tvar i:Int = 0;\n\t\tvar a:Int;\n\t\tif (offset < 0) {\n\t\t\twhile (i < imgA.length) {\n\t\t\t\ta = Std.int(imgB[ i + 3 ] * strength );\n\t\t\t\ta = a < 0 ? 0 : (a > 255 ? 255 : a);\n\t\t\t\timgB[ i ] = fromPreMult( imgB[ i ], a );\n\t\t\t\timgB[ i + 1 ] = fromPreMult( imgB[ i + 1 ], a );\n\t\t\t\timgB[ i + 2 ] = fromPreMult( imgB[ i + 2 ], a );\n\t\t\t\timgB[ i + 3 ] = a;\n\t\t\t\ti += 4;\n\t\t\t}\n\t\t\tfor (i in imgA.length - offset...imgA.length)\n\t\t\t\timgB[ i ] = 0;\n\t\t} else {\n\t\t\ti = imgA.length - 4;\n\t\t\twhile (i >= 0) {\n\t\t\t\ta = Std.int(imgB[ i + 3 ] * strength );\n\t\t\t\ta = a < 0 ? 0 : (a > 255 ? 255 : a);\n\t\t\t\timgB[ i + offset] = fromPreMult( imgB[ i ], a );\n\t\t\t\timgB[ i + 1 + offset] = fromPreMult( imgB[ i + 1 ], a );\n\t\t\t\timgB[ i + 2 + offset] = fromPreMult( imgB[ i + 2 ], a );\n\t\t\t\timgB[ i + 3 + offset] = a;\n\t\t\t\ti -= 4;\n\t\t\t}\n\t\t\tfor (i in 0...offset)\n\t\t\t\timgB[ i ] = 0;\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\tsourceImage.dirty = true;\n\t\tsourceImage.version++;\n\t\t\n\t\tif (imgB == image.data) return image;\n\t\treturn sourceImage;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getColorBoundsRect (image:Image, mask:Int, color:Int, findColor:Bool, format:PixelFormat):Rectangle {\n\t\t\n\t\tvar left = image.width + 1;\n\t\tvar right = 0;\n\t\tvar top = image.height + 1;\n\t\tvar bottom = 0;\n\t\t\n\t\tvar _color:RGBA, _mask:RGBA;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\t_color = (color:ARGB);\n\t\t\t\t_mask = (mask:ARGB);\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\t_color = (color:BGRA);\n\t\t\t\t_mask = (mask:BGRA);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\t_color = color;\n\t\t\t\t_mask = mask;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!image.transparent) {\n\t\t\t\n\t\t\t_color.a = 0xFF;\n\t\t\t_mask.a = 0xFF;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar pixel, hit;\n\t\t\n\t\tfor (x in 0...image.width) {\n\t\t\t\n\t\t\thit = false;\n\t\t\t\n\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\n\t\t\t\tpixel = image.getPixel32 (x, y, RGBA32);\n\t\t\t\thit = findColor ? (pixel & _mask) == _color : (pixel & _mask) != _color;\n\t\t\t\t\n\t\t\t\tif (hit) {\n\t\t\t\t\t\n\t\t\t\t\tif (x < left) left = x;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hit) {\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar ix;\n\t\t\n\t\tfor (x in 0...image.width) {\n\t\t\t\n\t\t\tix = (image.width - 1) - x;\n\t\t\thit = false;\n\t\t\t\n\t\t\tfor (y in 0...image.height) {\n\t\t\t\t\n\t\t\t\tpixel = image.getPixel32 (ix, y, RGBA32);\n\t\t\t\thit = findColor ? (pixel & _mask) == _color : (pixel & _mask) != _color;\n\t\t\t\t\n\t\t\t\tif (hit) {\n\t\t\t\t\t\n\t\t\t\t\tif (ix > right) right = ix;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hit) {\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (y in 0...image.height) {\n\t\t\t\n\t\t\thit = false;\n\t\t\t\n\t\t\tfor (x in 0...image.width) {\n\t\t\t\t\n\t\t\t\tpixel = image.getPixel32 (x, y, RGBA32);\n\t\t\t\thit = findColor ? (pixel & _mask) == _color : (pixel & _mask) != _color;\n\t\t\t\t\n\t\t\t\tif (hit) {\n\t\t\t\t\t\n\t\t\t\t\tif (y < top) top = y;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hit) {\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar iy;\n\t\t\n\t\tfor (y in 0...image.height) {\n\t\t\t\n\t\t\tiy = (image.height - 1) - y;\n\t\t\thit = false;\n\t\t\t\n\t\t\tfor (x in 0...image.width) {\n\t\t\t\t\n\t\t\t\tpixel = image.getPixel32 (x, iy, RGBA32);\n\t\t\t\thit = findColor ? (pixel & _mask) == _color : (pixel & _mask) != _color;\n\t\t\t\t\n\t\t\t\tif (hit) {\n\t\t\t\t\t\n\t\t\t\t\tif (iy > bottom) bottom = iy;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hit) {\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar w = right - left;\n\t\tvar h = bottom - top;\n\t\t\n\t\tif (w > 0) w++;\n\t\tif (h > 0) h++;\n\t\t\n\t\tif (w < 0) w = 0;\n\t\tif (h < 0) h = 0;\n\t\t\n\t\tif (left == right) w = 1;\n\t\tif (top == bottom) h = 1;\n\t\t\n\t\tif (left > image.width) left = 0;\n\t\tif (top > image.height) top = 0;\n\t\t\n\t\treturn new Rectangle (left, top, w, h);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel (image:Image, x:Int, y:Int, format:PixelFormat):Int {\n\t\t\n\t\tvar pixel:RGBA;\n\t\t\n\t\tpixel.readUInt8 (image.buffer.data, (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4), image.buffer.format, image.buffer.premultiplied);\n\t\tpixel.a = 0;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32: return (pixel:ARGB);\n\t\t\tcase BGRA32: return (pixel:BGRA);\n\t\t\tdefault: return pixel;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixel32 (image:Image, x:Int, y:Int, format:PixelFormat):Int {\n\t\t\n\t\tvar pixel:RGBA;\n\t\t\n\t\tpixel.readUInt8 (image.buffer.data, (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4), image.buffer.format, image.buffer.premultiplied);\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32: return (pixel:ARGB);\n\t\t\tcase BGRA32: return (pixel:BGRA);\n\t\t\tdefault: return pixel;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPixels (image:Image, rect:Rectangle, format:PixelFormat):Bytes {\n\t\t\n\t\tif (image.buffer.data == null) return null;\n\t\t\n\t\tvar length = Std.int (rect.width * rect.height);\n\t\tvar bytes = Bytes.alloc (length * 4);\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_get_pixels (image, rect, format, bytes); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar data = image.buffer.data;\n\t\t\tvar sourceFormat = image.buffer.format;\n\t\t\tvar premultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar dataView = new ImageDataView (image, rect);\n\t\t\tvar position, argb:ARGB, bgra:BGRA, pixel:RGBA;\n\t\t\tvar destPosition = 0;\n\t\t\t\n\t\t\tfor (y in 0...dataView.height) {\n\t\t\t\t\n\t\t\t\tposition = dataView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...dataView.width) {\n\t\t\t\t\t\n\t\t\t\t\tpixel.readUInt8 (data, position, sourceFormat, premultiplied);\n\t\t\t\t\t\n\t\t\t\t\tswitch (format) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase ARGB32: argb = pixel; pixel = cast argb;\n\t\t\t\t\t\tcase BGRA32: bgra = pixel; pixel = cast bgra;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbytes.set (destPosition++, pixel.r);\n\t\t\t\t\tbytes.set (destPosition++, pixel.g);\n\t\t\t\t\tbytes.set (destPosition++, pixel.b);\n\t\t\t\t\tbytes.set (destPosition++, pixel.a);\n\t\t\t\t\t\n\t\t\t\t\tposition += 4;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn bytes;\n\t\t\n\t}\n\t\n\t\n\tpublic static function merge (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, redMultiplier:Int, greenMultiplier:Int, blueMultiplier:Int, alphaMultiplier:Int):Void {\n\t\t\n\t\tif (image.buffer.data == null || sourceImage.buffer.data == null) return;\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_merge (image, sourceImage, sourceRect, destPoint, redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar sourceView = new ImageDataView (sourceImage, sourceRect);\n\t\t\tvar destView = new ImageDataView (image, new Rectangle (destPoint.x, destPoint.y, sourceView.width, sourceView.height));\n\t\t\t\n\t\t\tvar sourceData = sourceImage.buffer.data;\n\t\t\tvar destData = image.buffer.data;\n\t\t\tvar sourceFormat = sourceImage.buffer.format;\n\t\t\tvar destFormat = image.buffer.format;\n\t\t\tvar sourcePremultiplied = sourceImage.buffer.premultiplied;\n\t\t\tvar destPremultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar sourcePosition, destPosition, sourcePixel:RGBA, destPixel:RGBA;\n\t\t\t\n\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\n\t\t\t\tsourcePosition = sourceView.row (y);\n\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\n\t\t\t\t\tsourcePixel.readUInt8 (sourceData, sourcePosition, sourceFormat, sourcePremultiplied);\n\t\t\t\t\tdestPixel.readUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\n\t\t\t\t\tdestPixel.r = Std.int (((sourcePixel.r * redMultiplier) + (destPixel.r * (256 - redMultiplier))) / 256);\n\t\t\t\t\tdestPixel.g = Std.int (((sourcePixel.g * greenMultiplier) + (destPixel.g * (256 - greenMultiplier))) / 256);\n\t\t\t\t\tdestPixel.b = Std.int (((sourcePixel.b * blueMultiplier) + (destPixel.b * (256 - blueMultiplier))) / 256);\n\t\t\t\t\tdestPixel.a = Std.int (((sourcePixel.a * alphaMultiplier) + (destPixel.a * (256 - alphaMultiplier))) / 256);\n\t\t\t\t\t\n\t\t\t\t\tdestPixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\n\t\t\t\t\tsourcePosition += 4;\n\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function multiplyAlpha (image:Image):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null || !image.buffer.transparent) return;\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_multiply_alpha (image); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar format = image.buffer.format;\n\t\t\tvar length = Std.int (data.length / 4);\n\t\t\tvar pixel:RGBA;\n\t\t\t\n\t\t\tfor (i in 0...length) {\n\t\t\t\t\n\t\t\t\tpixel.readUInt8 (data, i * 4, format, false);\n\t\t\t\tpixel.writeUInt8 (data, i * 4, format, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.buffer.premultiplied = true;\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function resize (image:Image, newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\tif (buffer.width == newWidth && buffer.height == newHeight) return;\n\t\tvar newBuffer = new ImageBuffer (new UInt8Array (newWidth * newHeight * 4), newWidth, newHeight);\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_resize (image, newBuffer, newWidth, newHeight); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar imageWidth = image.width;\n\t\t\tvar imageHeight = image.height;\n\t\t\t\n\t\t\tvar data = image.data;\n\t\t\tvar newData = newBuffer.data;\n\t\t\tvar sourceIndex:Int, sourceIndexX:Int, sourceIndexY:Int, sourceIndexXY:Int, index:Int;\n\t\t\tvar sourceX:Int, sourceY:Int;\n\t\t\tvar u:Float, v:Float, uRatio:Float, vRatio:Float, uOpposite:Float, vOpposite:Float;\n\t\t\t\n\t\t\tfor (y in 0...newHeight) {\n\t\t\t\t\n\t\t\t\tfor (x in 0...newWidth) {\n\t\t\t\t\t\n\t\t\t\t\t// TODO: Handle more color formats\n\t\t\t\t\t\n\t\t\t\t\tu = ((x + 0.5) / newWidth) * imageWidth - 0.5;\n\t\t\t\t\tv = ((y + 0.5) / newHeight) * imageHeight - 0.5;\n\t\t\t\t\t\n\t\t\t\t\tsourceX = Std.int (u);\n\t\t\t\t\tsourceY = Std.int (v);\n\t\t\t\t\t\n\t\t\t\t\tsourceIndex = (sourceY * imageWidth + sourceX) * 4;\n\t\t\t\t\tsourceIndexX = (sourceX < imageWidth - 1) ? sourceIndex + 4 : sourceIndex;\n\t\t\t\t\tsourceIndexY = (sourceY < imageHeight - 1) ? sourceIndex + (imageWidth * 4) : sourceIndex;\n\t\t\t\t\tsourceIndexXY = (sourceIndexX != sourceIndex) ? sourceIndexY + 4 : sourceIndexY;\n\t\t\t\t\t\n\t\t\t\t\tindex = (y * newWidth + x) * 4;\n\t\t\t\t\t\n\t\t\t\t\tuRatio = u - sourceX;\n\t\t\t\t\tvRatio = v - sourceY;\n\t\t\t\t\tuOpposite = 1 - uRatio;\n\t\t\t\t\tvOpposite = 1 - vRatio;\n\t\t\t\t\t\n\t\t\t\t\tnewData[index] = Std.int ((data[sourceIndex] * uOpposite + data[sourceIndexX] * uRatio) * vOpposite + (data[sourceIndexY] * uOpposite + data[sourceIndexXY] * uRatio) * vRatio);\n\t\t\t\t\tnewData[index + 1] = Std.int ((data[sourceIndex + 1] * uOpposite + data[sourceIndexX + 1] * uRatio) * vOpposite + (data[sourceIndexY + 1] * uOpposite + data[sourceIndexXY + 1] * uRatio) * vRatio);\n\t\t\t\t\tnewData[index + 2] = Std.int ((data[sourceIndex + 2] * uOpposite + data[sourceIndexX + 2] * uRatio) * vOpposite + (data[sourceIndexY + 2] * uOpposite + data[sourceIndexXY + 2] * uRatio) * vRatio);\n\t\t\t\t\t\n\t\t\t\t\t// Maybe it would be better to not weigh colors with an alpha of zero, but the below should help prevent black fringes caused by transparent pixels made visible\n\t\t\t\t\t\n\t\t\t\t\tif (data[sourceIndexX + 3] == 0 || data[sourceIndexY + 3] == 0 || data[sourceIndexXY + 3] == 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tnewData[index + 3] = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tnewData[index + 3] = data[sourceIndex + 3];\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tbuffer.data = newBuffer.data;\n\t\tbuffer.width = newWidth;\n\t\tbuffer.height = newHeight;\n\t\t\n\t\t#if (js && html5)\n\t\tbuffer.__srcImage = null;\n\t\tbuffer.__srcImageData = null;\n\t\tbuffer.__srcCanvas = null;\n\t\tbuffer.__srcContext = null;\n\t\t#end\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function resizeBuffer (image:Image, newWidth:Int, newHeight:Int):Void {\n\t\t\n\t\tvar buffer = image.buffer;\n\t\tvar data = image.data;\n\t\tvar newData = new UInt8Array (newWidth * newHeight * 4);\n\t\tvar sourceIndex:Int, index:Int;\n\t\t\n\t\tfor (y in 0...buffer.height) {\n\t\t\t\n\t\t\tfor (x in 0...buffer.width) {\n\t\t\t\t\n\t\t\t\tsourceIndex = (y * buffer.width + x) * 4;\n\t\t\t\tindex = (y * newWidth + x) * 4;\n\t\t\t\t\n\t\t\t\tnewData[index] = data[sourceIndex];\n\t\t\t\tnewData[index + 1] = data[sourceIndex + 1];\n\t\t\t\tnewData[index + 2] = data[sourceIndex + 2];\n\t\t\t\tnewData[index + 3] = data[sourceIndex + 3];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tbuffer.data = newData;\n\t\tbuffer.width = newWidth;\n\t\tbuffer.height = newHeight;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setFormat (image:Image, format:PixelFormat):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null) return;\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_set_format (image, format); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar index, a16;\n\t\t\tvar length = Std.int (data.length / 4);\n\t\t\tvar r1, g1, b1, a1, r2, g2, b2, a2;\n\t\t\tvar r, g, b, a;\n\t\t\t\n\t\t\tswitch (image.format) {\n\t\t\t\t\n\t\t\t\tcase RGBA32:\n\t\t\t\t\t\n\t\t\t\t\tr1 = 0;\n\t\t\t\t\tg1 = 1;\n\t\t\t\t\tb1 = 2;\n\t\t\t\t\ta1 = 3;\n\t\t\t\t\n\t\t\t\tcase ARGB32:\n\t\t\t\t\t\n\t\t\t\t\tr1 = 1;\n\t\t\t\t\tg1 = 2;\n\t\t\t\t\tb1 = 3;\n\t\t\t\t\ta1 = 0;\n\t\t\t\t\n\t\t\t\tcase BGRA32:\n\t\t\t\t\t\n\t\t\t\t\tr1 = 2;\n\t\t\t\t\tg1 = 1;\n\t\t\t\t\tb1 = 0;\n\t\t\t\t\ta1 = 3;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (format) {\n\t\t\t\t\n\t\t\t\tcase RGBA32:\n\t\t\t\t\t\n\t\t\t\t\tr2 = 0;\n\t\t\t\t\tg2 = 1;\n\t\t\t\t\tb2 = 2;\n\t\t\t\t\ta2 = 3;\n\t\t\t\t\n\t\t\t\tcase ARGB32:\n\t\t\t\t\t\n\t\t\t\t\tr2 = 1;\n\t\t\t\t\tg2 = 2;\n\t\t\t\t\tb2 = 3;\n\t\t\t\t\ta2 = 0;\n\t\t\t\t\n\t\t\t\tcase BGRA32:\n\t\t\t\t\t\n\t\t\t\t\tr2 = 2;\n\t\t\t\t\tg2 = 1;\n\t\t\t\t\tb2 = 0;\n\t\t\t\t\ta2 = 3;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor (i in 0...length) {\n\t\t\t\t\n\t\t\t\tindex = i * 4;\n\t\t\t\t\n\t\t\t\tr = data[index + r1];\n\t\t\t\tg = data[index + g1];\n\t\t\t\tb = data[index + b1];\n\t\t\t\ta = data[index + a1];\n\t\t\t\t\n\t\t\t\tdata[index + r2] = r;\n\t\t\t\tdata[index + g2] = g;\n\t\t\t\tdata[index + b2] = b;\n\t\t\t\tdata[index + a2] = a;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.buffer.format = format;\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tvar pixel:RGBA;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32: pixel = (color:ARGB);\n\t\t\tcase BGRA32: pixel = (color:BGRA);\n\t\t\tdefault: pixel = color;\n\t\t\t\n\t\t}\n\t\t\n\t\t// TODO: Write only RGB instead?\n\t\t\n\t\tvar source = new RGBA ();\n\t\tsource.readUInt8 (image.buffer.data, (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4), image.buffer.format, image.buffer.premultiplied);\n\t\t\n\t\tpixel.a = source.a;\n\t\tpixel.writeUInt8 (image.buffer.data, (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4), image.buffer.format, image.buffer.premultiplied);\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixel32 (image:Image, x:Int, y:Int, color:Int, format:PixelFormat):Void {\n\t\t\n\t\tvar pixel:RGBA;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32: pixel = (color:ARGB);\n\t\t\tcase BGRA32: pixel = (color:BGRA);\n\t\t\tdefault: pixel = color;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!image.transparent) pixel.a = 0xFF;\n\t\tpixel.writeUInt8 (image.buffer.data, (4 * (y + image.offsetY) * image.buffer.width + (x + image.offsetX) * 4), image.buffer.format, image.buffer.premultiplied);\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPixels (image:Image, rect:Rectangle, bytePointer:BytePointer, format:PixelFormat, endian:Endian):Void {\n\t\t\n\t\tif (image.buffer.data == null) return;\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_set_pixels (image, rect, bytePointer.bytes, bytePointer.offset, format, endian == BIG_ENDIAN ? 1 : 0); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar data = image.buffer.data;\n\t\t\tvar sourceFormat = image.buffer.format;\n\t\t\tvar premultiplied = image.buffer.premultiplied;\n\t\t\tvar dataView = new ImageDataView (image, rect);\n\t\t\tvar row, color, pixel:RGBA;\n\t\t\tvar transparent = image.transparent;\n\t\t\tvar bytes = bytePointer.bytes;\n\t\t\tvar dataPosition = bytePointer.offset;\n\t\t\tvar littleEndian = (endian != BIG_ENDIAN);\n\t\t\t\n\t\t\tfor (y in 0...dataView.height) {\n\t\t\t\t\n\t\t\t\trow = dataView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...dataView.width) {\n\t\t\t\t\t\n\t\t\t\t\tif (littleEndian) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcolor = bytes.getInt32 (dataPosition); // can this be trusted on big endian systems?\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcolor = bytes.get (dataPosition + 3) | (bytes.get (dataPosition + 2) << 8) | (bytes.get (dataPosition + 1) << 16) | (bytes.get (dataPosition) << 24);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdataPosition += 4;\n\t\t\t\t\t\n\t\t\t\t\tswitch (format) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase ARGB32: pixel = (color:ARGB);\n\t\t\t\t\t\tcase BGRA32: pixel = (color:BGRA);\n\t\t\t\t\t\tdefault: pixel = color;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!transparent) pixel.a = 0xFF;\n\t\t\t\t\tpixel.writeUInt8 (data, row + (x * 4), sourceFormat, premultiplied);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function threshold (image:Image, sourceImage:Image, sourceRect:Rectangle, destPoint:Vector2, operation:String, threshold:Int, color:Int, mask:Int, copySource:Bool, format:PixelFormat):Int {\n\t\t\n\t\tvar _color:RGBA, _mask:RGBA, _threshold:RGBA;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase ARGB32:\n\t\t\t\t\n\t\t\t\t_color = (color:ARGB);\n\t\t\t\t_mask = (mask:ARGB);\n\t\t\t\t_threshold = (threshold:ARGB);\n\t\t\t\n\t\t\tcase BGRA32:\n\t\t\t\t\n\t\t\t\t_color = (color:BGRA);\n\t\t\t\t_mask = (mask:BGRA);\n\t\t\t\t_threshold = (threshold:BGRA);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\t_color = color;\n\t\t\t\t_mask = mask;\n\t\t\t\t_threshold = threshold;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar _operation = switch (operation) {\n\t\t\t\n\t\t\tcase \"!=\": NOT_EQUALS;\n\t\t\tcase \"==\": EQUALS;\n\t\t\tcase \"<\" : LESS_THAN;\n\t\t\tcase \"<=\": LESS_THAN_OR_EQUAL_TO;\n\t\t\tcase \">\" : GREATER_THAN;\n\t\t\tcase \">=\": GREATER_THAN_OR_EQUAL_TO;\n\t\t\tdefault: -1;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (_operation == -1) return 0;\n\t\t\n\t\tvar srcData = sourceImage.buffer.data;\n\t\tvar destData = image.buffer.data;\n\t\t\n\t\tif (srcData == null || destData == null) return 0;\n\t\t\n\t\tvar hits = 0;\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) hits = NativeCFFI.lime_image_data_util_threshold (image, sourceImage, sourceRect, destPoint, _operation, (_threshold >> 16) & 0xFFFF, (_threshold) & 0xFFFF, (_color >> 16) & 0xFFFF, (_color) & 0xFFFF, (_mask >> 16) & 0xFFFF, (_mask) & 0xFFFF, copySource); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar srcView = new ImageDataView (sourceImage, sourceRect);\n\t\t\tvar destView = new ImageDataView (image, new Rectangle (destPoint.x, destPoint.y, srcView.width, srcView.height));\n\t\t\t\n\t\t\tvar srcFormat = sourceImage.buffer.format;\n\t\t\tvar destFormat = image.buffer.format;\n\t\t\tvar srcPremultiplied = sourceImage.buffer.premultiplied;\n\t\t\tvar destPremultiplied = image.buffer.premultiplied;\n\t\t\t\n\t\t\tvar srcPosition, destPosition, srcPixel:RGBA, destPixel:RGBA, pixelMask:UInt, test:Bool, value:Int;\n\t\t\t\n\t\t\tfor (y in 0...destView.height) {\n\t\t\t\t\n\t\t\t\tsrcPosition = srcView.row (y);\n\t\t\t\tdestPosition = destView.row (y);\n\t\t\t\t\n\t\t\t\tfor (x in 0...destView.width) {\n\t\t\t\t\t\n\t\t\t\t\tsrcPixel.readUInt8 (srcData, srcPosition, srcFormat, srcPremultiplied);\n\t\t\t\t\t\n\t\t\t\t\tpixelMask = srcPixel & _mask;\n\t\t\t\t\t\n\t\t\t\t\tvalue = __pixelCompare (pixelMask, _threshold);\n\t\t\t\t\t\n\t\t\t\t\ttest = switch (_operation) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase NOT_EQUALS: (value != 0);\n\t\t\t\t\t\tcase EQUALS: (value == 0);\n\t\t\t\t\t\tcase LESS_THAN: (value == -1);\n\t\t\t\t\t\tcase LESS_THAN_OR_EQUAL_TO: (value == 0 || value == -1);\n\t\t\t\t\t\tcase GREATER_THAN: (value == 1);\n\t\t\t\t\t\tcase GREATER_THAN_OR_EQUAL_TO: (value == 0 || value == 1);\n\t\t\t\t\t\tdefault: false;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (test) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t_color.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\thits++;\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (copySource) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsrcPixel.writeUInt8 (destData, destPosition, destFormat, destPremultiplied);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tsrcPosition += 4;\n\t\t\t\t\tdestPosition += 4;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (hits > 0) {\n\t\t\t\n\t\t\timage.dirty = true;\n\t\t\timage.version++;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn hits;\n\t\t\n\t}\n\t\n\t\n\tpublic static function unmultiplyAlpha (image:Image):Void {\n\t\t\n\t\tvar data = image.buffer.data;\n\t\tif (data == null) return;\n\t\t\n\t\t#if (lime_cffi && !disable_cffi && !macro)\n\t\tif (CFFI.enabled) NativeCFFI.lime_image_data_util_unmultiply_alpha (image); else\n\t\t#end\n\t\t{\n\t\t\t\n\t\t\tvar format = image.buffer.format;\n\t\t\tvar length = Std.int (data.length / 4);\n\t\t\tvar pixel:RGBA;\n\t\t\t\n\t\t\tfor (i in 0...length) {\n\t\t\t\t\n\t\t\t\tpixel.readUInt8 (data, i * 4, format, true);\n\t\t\t\tpixel.writeUInt8 (data, i * 4, format, false);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\timage.buffer.premultiplied = false;\n\t\timage.dirty = true;\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tprivate static inline function __pixelCompare (n1:UInt, n2:UInt):Int {\n\t\t\n\t\tvar tmp1:UInt;\n\t\tvar tmp2:UInt;\n\t\t\n\t\ttmp1 = (n1 >> 24) & 0xFF;\n\t\ttmp2 = (n2 >> 24) & 0xFF;\n\t\t\n\t\tif (tmp1 != tmp2) {\n\t\t\t\n\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttmp1 = (n1 >> 16) & 0xFF;\n\t\t\ttmp2 = (n2 >> 16) & 0xFF;\n\t\t\t\n\t\t\tif (tmp1 != tmp2) {\n\t\t\t\t\n\t\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttmp1 = (n1 >> 8) & 0xFF;\n\t\t\t\ttmp2 = (n2 >> 8) & 0xFF;\n\t\t\t\t\n\t\t\t\tif (tmp1 != tmp2) {\n\t\t\t\t\t\n\t\t\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\ttmp1 = n1 & 0xFF;\n\t\t\t\t\ttmp2 = n2 & 0xFF;\n\t\t\t\t\t\n\t\t\t\t\tif (tmp1 != tmp2) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn (tmp1 > tmp2 ? 1 : -1);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\nprivate class ImageDataView {\n\t\n\t\n\tpublic var x (default, null):Int;\n\tpublic var y (default, null):Int;\n\tpublic var height (default, null):Int;\n\tpublic var width (default, null):Int;\n\t\n\tprivate var byteOffset:Int;\n\tprivate var image:Image;\n\tprivate var rect:Rectangle;\n\tprivate var stride:Int;\n\t\n\t\n\tpublic function new (image:Image, rect:Rectangle = null) {\n\t\t\n\t\tthis.image = image;\n\t\t\n\t\tif (rect == null) {\n\t\t\t\n\t\t\tthis.rect = image.rect;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (rect.x < 0) rect.x = 0;\n\t\t\tif (rect.y < 0) rect.y = 0;\n\t\t\tif (rect.x + rect.width > image.width) rect.width = image.width - rect.x;\n\t\t\tif (rect.y + rect.height > image.height) rect.height = image.height - rect.y;\n\t\t\tif (rect.width < 0) rect.width = 0;\n\t\t\tif (rect.height < 0) rect.height = 0;\n\t\t\tthis.rect = rect;\n\t\t\t\n\t\t}\n\t\t\n\t\tstride = image.buffer.stride;\n\t\t\n\t\t__update ();\n\t\t\n\t}\n\t\n\t\n\tpublic function clip (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t\n\t\trect.__contract (x, y, width, height);\n\t\t__update ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function hasRow (y:Int):Bool {\n\t\t\n\t\treturn (y >= 0 && y < height);\n\t\t\n\t}\n\t\n\t\n\tpublic function offset (x:Int, y:Int):Void {\n\t\t\n\t\tif (x < 0) {\n\t\t\t\n\t\t\trect.x += x;\n\t\t\tif (rect.x < 0) rect.x = 0;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\trect.x += x;\n\t\t\trect.width -= x;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (y < 0) {\n\t\t\t\n\t\t\trect.y += y;\n\t\t\tif (rect.y < 0) rect.y = 0;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\trect.y += y;\n\t\t\trect.height -= y;\n\t\t\t\n\t\t}\n\t\t\n\t\t__update ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function row (y:Int):Int {\n\t\t\n\t\treturn byteOffset + stride * y;\n\t\t\n\t}\n\t\n\t\n\tprivate function __update ():Void {\n\t\t\n\t\tthis.x = Math.ceil (rect.x);\n\t\tthis.y = Math.ceil (rect.y);\n\t\tthis.width = Math.floor (rect.width);\n\t\tthis.height = Math.floor (rect.height);\n\t\tbyteOffset = (stride * (this.y + image.offsetY)) + ((this.x + image.offsetX) * 4);\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:noCompletion @:dox(hide) @:enum private abstract ThresholdOperation(Int) from Int to Int {\n\t\n\tvar NOT_EQUALS = 0;\n\tvar EQUALS = 1;\n\tvar LESS_THAN = 2;\n\tvar LESS_THAN_OR_EQUAL_TO = 3;\n\tvar GREATER_THAN = 4;\n\tvar GREATER_THAN_OR_EQUAL_TO = 5;\n\t\n}","package lime.math;\n\n\nimport lime.utils.Float32Array;\nimport lime.utils.UInt8Array;\n\n#if flash\nimport flash.geom.ColorTransform;\n#end\n\n\nabstract ColorMatrix(Float32Array) from Float32Array to Float32Array {\n\t\n\t\n\tprivate static var __alphaTable:UInt8Array;\n\tprivate static var __blueTable:UInt8Array;\n\tprivate static var __greenTable:UInt8Array;\n\tprivate static var __identity = [ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 ];\n\tprivate static var __redTable:UInt8Array;\n\t\n\tpublic var alphaMultiplier (get, set):Float;\n\tpublic var alphaOffset (get, set):Float;\n\tpublic var blueMultiplier (get, set):Float;\n\tpublic var blueOffset (get, set):Float;\n\tpublic var color (get, set):Int;\n\tpublic var greenMultiplier (get, set):Float;\n\tpublic var greenOffset (get, set):Float;\n\tpublic var redMultiplier (get, set):Float;\n\tpublic var redOffset (get, set):Float;\n\t\n\t\n\tpublic function new (data:Float32Array = null) {\n\t\t\n\t\tif (data != null && data.length == 20) {\n\t\t\t\n\t\t\tthis = data;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis = new Float32Array (__identity);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():ColorMatrix {\n\t\t\n\t\treturn new ColorMatrix (new Float32Array (this));\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (second:ColorMatrix):Void {\n\t\t\n\t\tredMultiplier += second.redMultiplier;\n\t\tgreenMultiplier += second.greenMultiplier;\n\t\tblueMultiplier += second.blueMultiplier;\n\t\talphaMultiplier += second.alphaMultiplier;\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (other:ColorMatrix):Void {\n\t\t\n\t\tthis.set (other);\n\t\t\n\t}\n\t\n\t\n\tpublic function identity () {\n\t\t\n\t\tthis[0] = 1;\n\t\tthis[1] = 0;\n\t\tthis[2] = 0;\n\t\tthis[3] = 0;\n\t\tthis[4] = 0;\n\t\tthis[5] = 0;\n\t\tthis[6] = 1;\n\t\tthis[7] = 0;\n\t\tthis[8] = 0;\n\t\tthis[9] = 0;\n\t\tthis[10] = 0;\n\t\tthis[11] = 0;\n\t\tthis[12] = 1;\n\t\tthis[13] = 0;\n\t\tthis[14] = 0;\n\t\tthis[15] = 0;\n\t\tthis[16] = 0;\n\t\tthis[17] = 0;\n\t\tthis[18] = 1;\n\t\tthis[19] = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getAlphaTable ():UInt8Array {\n\t\t\n\t\tif (__alphaTable == null) {\n\t\t\t\n\t\t\t__alphaTable = new UInt8Array (256);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar value:Int;\n\t\t__alphaTable[0] = 0;\n\t\t\n\t\tfor (i in 1...256) {\n\t\t\t\n\t\t\tvalue = Math.floor (i * alphaMultiplier + alphaOffset);\n\t\t\tif (value > 0xFF) value = 0xFF;\n\t\t\tif (value < 0) value = 0;\n\t\t\t__alphaTable[i] = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __alphaTable;\n\t\t\n\t}\n\t\n\t\n\tpublic function getBlueTable ():UInt8Array {\n\t\t\n\t\tif (__blueTable == null) {\n\t\t\t\n\t\t\t__blueTable = new UInt8Array (256);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar value:Int;\n\t\t\n\t\tfor (i in 0...256) {\n\t\t\t\n\t\t\tvalue = Math.floor (i * blueMultiplier + blueOffset);\n\t\t\tif (value > 0xFF) value = 0xFF;\n\t\t\tif (value < 0) value = 0;\n\t\t\t__blueTable[i] = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __blueTable;\n\t\t\n\t}\n\t\n\t\n\tpublic function getGreenTable ():UInt8Array {\n\t\t\n\t\tif (__greenTable == null) {\n\t\t\t\n\t\t\t__greenTable = new UInt8Array (256);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar value:Int;\n\t\t\n\t\tfor (i in 0...256) {\n\t\t\t\n\t\t\tvalue = Math.floor (i * greenMultiplier + greenOffset);\n\t\t\tif (value > 0xFF) value = 0xFF;\n\t\t\tif (value < 0) value = 0;\n\t\t\t__greenTable[i] = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __greenTable;\n\t\t\n\t}\n\t\n\t\n\tpublic function getRedTable ():UInt8Array {\n\t\t\n\t\tif (__redTable == null) {\n\t\t\t\n\t\t\t__redTable = new UInt8Array (256);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar value:Int;\n\t\t\n\t\tfor (i in 0...256) {\n\t\t\t\n\t\t\tvalue = Math.floor (i * redMultiplier + redOffset);\n\t\t\tif (value > 0xFF) value = 0xFF;\n\t\t\tif (value < 0) value = 0;\n\t\t\t__redTable[i] = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __redTable;\n\t\t\n\t}\n\t\n\t\n\tprivate function __toFlashColorTransform ():#if flash ColorTransform #else Dynamic #end {\n\t\t\n\t\t#if flash\n\t\treturn new ColorTransform (redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate inline function get_alphaMultiplier ():Float {\n\t\t\n\t\treturn this[18];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_alphaMultiplier (value:Float):Float {\n\t\t\n\t\treturn this[18] = value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_alphaOffset ():Float {\n\t\t\n\t\treturn this[19] * 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_alphaOffset (value:Float):Float {\n\t\t\n\t\treturn this[19] = value / 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_blueMultiplier ():Float {\n\t\t\n\t\treturn this[12];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_blueMultiplier (value:Float):Float {\n\t\t\n\t\treturn this[12] = value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_blueOffset ():Float {\n\t\t\n\t\treturn this[14] * 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_blueOffset (value:Float):Float {\n\t\t\n\t\treturn this[14] = value / 255;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_color ():Int {\n\t\t\n\t\treturn ((Std.int (redOffset) << 16) | (Std.int (greenOffset) << 8) | Std.int (blueOffset));\n\t\t\n\t}\n\t\n\t\n\tprivate function set_color (value:Int):Int {\n\t\t\n\t\tredOffset = (value >> 16) & 0xFF;\n\t\tgreenOffset = (value >> 8) & 0xFF;\n\t\tblueOffset = value & 0xFF;\n\t\t\n\t\tredMultiplier = 0;\n\t\tgreenMultiplier = 0;\n\t\tblueMultiplier = 0;\n\t\t\n\t\treturn color;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_greenMultiplier ():Float {\n\t\t\n\t\treturn this[6];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_greenMultiplier (value:Float):Float {\n\t\t\n\t\treturn this[6] = value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_greenOffset ():Float {\n\t\t\n\t\treturn this[9] * 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_greenOffset (value:Float):Float {\n\t\t\n\t\treturn this[9] = value / 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_redMultiplier ():Float {\n\t\t\n\t\treturn this[0];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_redMultiplier (value:Float):Float {\n\t\t\n\t\treturn this[0] = value;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_redOffset ():Float {\n\t\t\n\t\treturn this[4] * 255;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_redOffset (value:Float):Float {\n\t\t\n\t\treturn this[4] = value / 255;\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess public function get (index:Int):Float {\n\t\t\n\t\treturn this[index];\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess public function set (index:Int, value:Float):Float {\n\t\t\n\t\treturn this[index] = value;\n\t\t\n\t}\n\t\n\t\n}\n","package lime.utils;\n\n#if (js && !display)\n\n    @:forward\n    @:arrayAccess\n    abstract Float32Array(js.html.Float32Array)\n        from js.html.Float32Array\n        to js.html.Float32Array {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Float>, #end\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n            if(elements != null) {\n                this = new js.html.Float32Array( elements );\n            } else if(array != null) {\n                this = new js.html.Float32Array( untyped array );\n            #if openfl } else if(vector != null) { this = new js.html.Float32Array( untyped untyped (vector).__array ); #end\n            } else if(view != null) {\n                this = new js.html.Float32Array( untyped view );\n            } else if(buffer != null) {\n                if(len == null) {\n                    this = new js.html.Float32Array( buffer, byteoffset );\n                } else {\n                    this = new js.html.Float32Array( buffer, byteoffset, len );\n                }\n            } else {\n                this = null;\n            }\n        }\n\n        @:arrayAccess @:extern inline function __set(idx:Int, val:Float) : Float return this[idx] = val;\n        @:arrayAccess @:extern inline function __get(idx:Int) : Float return this[idx];\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Float32Array {\n            if(byteOffset == null) return new js.html.Float32Array(cast bytes.getData());\n            if(len == null) return new js.html.Float32Array(cast bytes.getData(), byteOffset);\n            return new js.html.Float32Array(cast bytes.getData(), byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\n        }\n\n        inline function toString() return this != null ? 'Float32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#else\n\n    import lime.utils.ArrayBuffer;\n    import lime.utils.ArrayBufferView;\n\n    @:forward\n    abstract Float32Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\npublic static var hello:Int;\n        public var length (get, never):Int;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?buffer:ArrayBuffer,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Float>, #end\n            ?view:ArrayBufferView,\n            ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n\n            if(elements != null) {\n                this = new ArrayBufferView( elements, Float32 );\n            } else if(array != null) {\n                this = new ArrayBufferView(0, Float32).initArray(array);\n            #if openfl } else if(vector != null) { this = new ArrayBufferView(0, Float32).initArray(untyped (vector).__array); #end\n            } else if(view != null) {\n                this = new ArrayBufferView(0, Float32).initTypedArray(view);\n            } else if(buffer != null) {\n                this = new ArrayBufferView(0, Float32).initBuffer(buffer, byteoffset, len);\n            } else {\n                throw \"Invalid constructor arguments for Float32Array\";\n            }\n        }\n\n    //Public API\n\n        public inline function subarray( begin:Int, end:Null<Int> = null) : Float32Array return this.subarray(begin, end);\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Float32Array {\n            return new Float32Array(bytes, byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return this.buffer;\n        }\n\n    //Internal\n\n        inline function toString() return this != null ? 'Float32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n        @:extern inline function get_length() return this.length;\n\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __get(idx:Int) : Float {\n            return ArrayBufferIO.getFloat32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT) );\n        }\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __set(idx:Int, val:Float) : Float {\n            ArrayBufferIO.setFloat32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\n            return val;\n        }\n\n    }\n\n#end //!js","package lime.math;\n\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Matrix3 {\n\t\n\t\n\tpublic var a:Float;\n\tpublic var b:Float;\n\tpublic var c:Float;\n\tpublic var d:Float;\n\tpublic var tx:Float;\n\tpublic var ty:Float;\n\t\n\tprivate static var __identity = new Matrix3 ();\n\t\n\t\n\tpublic function new (a:Float = 1, b:Float = 0, c:Float = 0, d:Float = 1, tx:Float = 0, ty:Float = 0) {\n\t\t\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function clone ():Matrix3 {\n\t\t\n\t\treturn new Matrix3 (a, b, c, d, tx, ty);\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (m:Matrix3):Void {\n\t\t\n\t\tvar a1 = a * m.a + b * m.c;\n\t\tb = a * m.b + b * m.d;\n\t\ta = a1;\n\n\t\tvar c1 = c * m.a + d * m.c;\n\t\td = c * m.b + d * m.d;\n\t\tc = c1;\n\t\t\n\t\tvar tx1 = tx * m.a + ty * m.c + m.tx;\n\t\tty = tx * m.b + ty * m.d + m.ty;\n\t\ttx = tx1;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnFrom (column:Int, vector4:Vector4):Void {\n\t\t\n\t\tif (column > 2) {\n\t\t\t\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (column == 0) {\n\t\t\t\n\t\t\ta = vector4.x;\n\t\t\tc = vector4.y;\n\t\t\t\n\t\t}else if (column == 1) {\n\t\t\t\n\t\t\tb = vector4.x;\n\t\t\td = vector4.y;\n\t\t\t\n\t\t}else {\n\t\t\t\n\t\t\ttx = vector4.x;\n\t\t\tty = vector4.y;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnTo (column:Int, vector4:Vector4):Void {\n\t\t\n\t\tif (column > 2) {\n\t\t\t\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (column == 0) {\n\t\t\t\n\t\t\tvector4.x = a;\n\t\t\tvector4.y = c;\n\t\t\tvector4.z = 0;\n\t\t\t\n\t\t} else if (column == 1) {\n\t\t\t\n\t\t\tvector4.x = b;\n\t\t\tvector4.y = d;\n\t\t\tvector4.z = 0;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvector4.x = tx;\n\t\t\tvector4.y = ty;\n\t\t\tvector4.z = 1;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceMatrix3:Matrix3):Void {\n\t\t\n\t\ta = sourceMatrix3.a;\n\t\tb = sourceMatrix3.b;\n\t\tc = sourceMatrix3.c;\n\t\td = sourceMatrix3.d;\n\t\ttx = sourceMatrix3.tx;\n\t\tty = sourceMatrix3.ty;\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowFrom (row:Int, vector4:Vector4):Void {\n\t\t\n\t\tif (row > 2) {\n\t\t\t\n\t\t\tthrow \"Row \" + row + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (row == 0) {\n\t\t\t\n\t\t\ta = vector4.x;\n\t\t\tc = vector4.y;\n\t\t\t\n\t\t} else if (row == 1) {\n\t\t\t\n\t\t\tb = vector4.x;\n\t\t\td = vector4.y;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttx = vector4.x;\n\t\t\tty = vector4.y;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowTo (row:Int, vector4:Vector4):Void {\n\t\t\n\t\tif (row > 2) {\n\t\t\t\n\t\t\tthrow \"Row \" + row + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (row == 0) {\n\t\t\t\n\t\t\tvector4.x = a;\n\t\t\tvector4.y = b;\n\t\t\tvector4.z = tx;\n\t\t\t\n\t\t} else if (row == 1) {\n\t\t\t\n\t\t\tvector4.x = c;\n\t\t\tvector4.y = d;\n\t\t\tvector4.z = ty;\n\t\t\t\n\t\t}else {\n\t\t\t\n\t\t\tvector4.setTo (0, 0, 1);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function createBox (scaleX:Float, scaleY:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {\n\t\t\n\t\ta = scaleX;\n\t\td = scaleY;\n\t\tb = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\t\n\t}\n\t\n\t\n\tpublic function createGradientBox (width:Float, height:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {\n\t\t\n\t\ta = width / 1638.4;\n\t\td = height / 1638.4;\n\t\t\n\t\t// rotation is clockwise\n\t\tif (rotation != 0) {\n\t\t\t\n\t\t\tvar cos = Math.cos (rotation);\n\t\t\tvar sin = Math.sin (rotation);\n\t\t\t\n\t\t\tb = sin * d;\n\t\t\tc = -sin * a;\n\t\t\ta *= cos;\n\t\t\td *= cos;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tb = 0;\n\t\t\tc = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.tx = tx + width / 2;\n\t\tthis.ty = ty + height / 2;\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (Matrix3):Bool {\n\t\t\n\t\treturn (Matrix3 != null && tx == Matrix3.tx && ty == Matrix3.ty && a == Matrix3.a && b == Matrix3.b && c == Matrix3.c && d == Matrix3.d);\n\t\t\n\t}\n\t\n\t\n\tpublic function deltaTransformVector2 (Vector2:Vector2):Vector2 {\n\t\t\n\t\treturn new Vector2 (Vector2.x * a + Vector2.y * c, Vector2.x * b + Vector2.y * d);\n\t\t\n\t}\n\t\n\t\n\tpublic function identity ():Void {\n\t\t\n\t\ta = 1;\n\t\tb = 0;\n\t\tc = 0;\n\t\td = 1;\n\t\ttx = 0;\n\t\tty = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function invert ():Matrix3 {\n\t\t\n\t\tvar norm = a * d - b * c;\n\t\t\n\t\tif (norm == 0) {\n\t\t\t\n\t\t\ta = b = c = d = 0;\n\t\t\ttx = -tx;\n\t\t\tty = -ty;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tnorm = 1.0 / norm;\n\t\t\tvar a1 = d * norm;\n\t\t\td = a * norm;\n\t\t\ta = a1;\n\t\t\tb *= -norm;\n\t\t\tc *= -norm;\n\t\t\t\n\t\t\tvar tx1 = - a * tx - c * ty;\n\t\t\tty = - b * tx - d * ty;\n\t\t\ttx = tx1;\n\t\t\t\n\t\t}\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function mult (m:Matrix3) {\n\t\t\n\t\tvar result = clone ();\n\t\tresult.concat (m);\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\tpublic function rotate (theta:Float):Void {\n\t\t\n\t\t/*\n\t\t   Rotate object \"after\" other transforms\n\t\t\t\n\t\t   [  a  b   0 ][  ma mb  0 ]\n\t\t   [  c  d   0 ][  mc md  0 ]\n\t\t   [  tx ty  1 ][  mtx mty 1 ]\n\t\t\t\n\t\t   ma = md = cos\n\t\t   mb = sin\n\t\t   mc = -sin\n\t\t   mtx = my = 0\n\t\t\t\n\t\t */\n\t\t\n\t\tvar cos = Math.cos (theta);\n\t\tvar sin = Math.sin (theta);\n\t\t\n\t\tvar a1 = a * cos - b * sin;\n\t\tb = a * sin + b * cos;\n\t\ta = a1;\n\t\t\n\t\tvar c1 = c * cos - d * sin;\n\t\td = c * sin + d * cos;\n\t\tc = c1;\n\t\t\n\t\tvar tx1 = tx * cos - ty * sin;\n\t\tty = tx * sin + ty * cos;\n\t\ttx = tx1;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tpublic function scale (sx:Float, sy:Float) {\n\t\t\n\t\t/*\n\t\t\t\n\t\t   Scale object \"after\" other transforms\n\t\t\t\n\t\t   [  a  b   0 ][  sx  0   0 ]\n\t\t   [  c  d   0 ][  0   sy  0 ]\n\t\t   [  tx ty  1 ][  0   0   1 ]\n\t\t */\n\t\t\n\t\ta *= sx;\n\t\tb *= sy;\n\t\tc *= sx;\n\t\td *= sy;\n\t\ttx *= sx;\n\t\tty *= sy;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tprivate inline function setRotation (theta:Float, scale:Float = 1) {\n\t\t\n\t\ta = Math.cos (theta) * scale;\n\t\tc = Math.sin (theta) * scale;\n\t\tb = -c;\n\t\td = a;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tpublic function setTo (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):Void {\n\t\t\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function to3DString (roundPixels:Bool = false):String {\n\t\t\n\t\t// identityMatrix3\n\t\t//  [a,b,tx,0],\n\t\t//  [c,d,ty,0],\n\t\t//  [0,0,1, 0],\n\t\t//  [0,0,0, 1]\n\t\t//\n\t\t// Matrix33d(a,       b, 0, 0, c, d,       0, 0, 0, 0, 1, 0, tx,     ty, 0, 1)\n\t\t\n\t\tif (roundPixels) {\n\t\t\t\n\t\t\treturn \"Matrix33d(\" + a + \", \" + b + \", \" + \"0, 0, \" + c + \", \" + d + \", \" + \"0, 0, 0, 0, 1, 0, \" + Std.int (tx) + \", \" + Std.int (ty) + \", 0, 1)\";\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn \"Matrix33d(\" + a + \", \" + b + \", \" + \"0, 0, \" + c + \", \" + d + \", \" + \"0, 0, 0, 0, 1, 0, \" + tx + \", \" + ty + \", 0, 1)\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toMozString () {\n\t\t\n\t\treturn \"Matrix3(\" + a + \", \" + b + \", \" + c + \", \" + d + \", \" + tx + \"px, \" + ty + \"px)\";\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn \"Matrix3(\" + a + \", \" + b + \", \" + c + \", \" + d + \", \" + tx + \", \" + ty + \")\";\n\t\t\n\t}\n\t\n\t\n\tpublic function transformVector2 (pos:Vector2) {\n\t\t\n\t\treturn new Vector2 (__transformX (pos), __transformY (pos));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function translate (dx:Float, dy:Float) {\n\t\t\n\t\ttx += dx;\n\t\tty += dy;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __cleanValues ():Void {\n\t\t\n\t\ta = Math.round (a * 1000) / 1000;\n\t\tb = Math.round (b * 1000) / 1000;\n\t\tc = Math.round (c * 1000) / 1000;\n\t\td = Math.round (d * 1000) / 1000;\n\t\ttx = Math.round (tx * 10) / 10;\n\t\tty = Math.round (ty * 10) / 10;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __transformX (pos:Vector2):Float {\n\t\t\n\t\treturn pos.x * a + pos.y * c + tx;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __transformY (pos:Vector2):Float {\n\t\t\n\t\treturn pos.x * b + pos.y * d + ty;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __translateTransformed (pos:Vector2):Void {\n\t\t\n\t\ttx = __transformX (pos);\n\t\tty = __transformY (pos);\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n}\n","package lime.math;\n\n\nimport lime.utils.Float32Array;\nimport lime.utils.Log;\n\n\nabstract Matrix4(Float32Array) from Float32Array to Float32Array {\n\t\n\t\n\tprivate static var __identity:Array<Float> = [ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ];\n\t\n\tpublic var determinant (get, never):Float;\n\tpublic var position (get, set):Vector4;\n\t\n\t\n\tpublic function new (data:Float32Array = null) {\n\t\t\n\t\tif (data != null && data.length == 16) {\n\t\t\t\n\t\t\tthis = data;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis = new Float32Array (__identity);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function append (lhs:Matrix4):Void {\n\t\t\n\t\tvar m111:Float = this[0], m121:Float = this[4], m131:Float = this[8], m141:Float = this[12],\n\t\t\tm112:Float = this[1], m122:Float = this[5], m132:Float = this[9], m142:Float = this[13],\n\t\t\tm113:Float = this[2], m123:Float = this[6], m133:Float = this[10], m143:Float = this[14],\n\t\t\tm114:Float = this[3], m124:Float = this[7], m134:Float = this[11], m144:Float = this[15],\n\t\t\tm211:Float = lhs[0], m221:Float = lhs[4], m231:Float = lhs[8], m241:Float = lhs[12],\n\t\t\tm212:Float = lhs[1], m222:Float = lhs[5], m232:Float = lhs[9], m242:Float = lhs[13],\n\t\t\tm213:Float = lhs[2], m223:Float = lhs[6], m233:Float = lhs[10], m243:Float = lhs[14],\n\t\t\tm214:Float = lhs[3], m224:Float = lhs[7], m234:Float = lhs[11], m244:Float = lhs[15];\n\t\t\n\t\tthis[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\n\t\tthis[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\n\t\tthis[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\n\t\tthis[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\n\t\t\n\t\tthis[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\n\t\tthis[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\n\t\tthis[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\n\t\tthis[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\n\t\t\n\t\tthis[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\n\t\tthis[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\n\t\tthis[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\n\t\tthis[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\n\t\t\n\t\tthis[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\n\t\tthis[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\n\t\tthis[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\n\t\tthis[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\n\t\t\n\t}\n\t\n\t\n\tpublic function appendRotation (degrees:Float, axis:Vector4, pivotPoint:Vector4 = null):Void {\n\t\t\n\t\tvar m = __getAxisRotation (axis.x, axis.y, axis.z, degrees);\n\t\t\n\t\tif (pivotPoint != null) {\n\t\t\t\n\t\t\tvar p = pivotPoint;\n\t\t\tm.appendTranslation (p.x, p.y, p.z);\n\t\t\t\n\t\t}\n\t\t\n\t\tappend (m);\n\t\t\n\t}\n\t\n\t\n\tpublic function appendScale (xScale:Float, yScale:Float, zScale:Float):Void {\n\t\t\n\t\tappend (new Matrix4 (new Float32Array ([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ])));\n\t\t\n\t}\n\t\n\t\n\tpublic function appendTranslation (x:Float, y:Float, z:Float):Void {\n\t\t\n\t\tthis[12] = this[12] + x;\n\t\tthis[13] = this[13] + y;\n\t\tthis[14] = this[14] + z;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Matrix4 {\n\t\t\n\t\treturn new Matrix4 (new Float32Array (this));\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnFrom (column:Int, vector:Vector4):Void {\n\t\t\n\t\tswitch (column) {\n\t\t\t\n\t\t\tcase 0:\n\t\t\t\t\n\t\t\t\tthis[0] = vector.x;\n\t\t\t\tthis[1] = vector.y;\n\t\t\t\tthis[2] = vector.z;\n\t\t\t\tthis[3] = vector.w;\n\t\t\t\n\t\t\tcase 1:\n\t\t\t\t\n\t\t\t\tthis[4] = vector.x;\n\t\t\t\tthis[5] = vector.y;\n\t\t\t\tthis[6] = vector.z;\n\t\t\t\tthis[7] = vector.w;\n\t\t\t\n\t\t\tcase 2:\n\t\t\t\t\n\t\t\t\tthis[8] = vector.x;\n\t\t\t\tthis[9] = vector.y;\n\t\t\t\tthis[10] = vector.z;\n\t\t\t\tthis[11] = vector.w;\n\t\t\t\n\t\t\tcase 3:\n\t\t\t\t\n\t\t\t\tthis[12] = vector.x;\n\t\t\t\tthis[13] = vector.y;\n\t\t\t\tthis[14] = vector.z;\n\t\t\t\tthis[15] = vector.w;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tLog.error (\"Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnTo (column:Int, vector:Vector4):Void {\n\t\t\n\t\tswitch (column) {\n\t\t\t\n\t\t\tcase 0:\n\t\t\t\t\n\t\t\t\tvector.x = this[0];\n\t\t\t\tvector.y = this[1];\n\t\t\t\tvector.z = this[2];\n\t\t\t\tvector.w = this[3];\n\t\t\t\n\t\t\tcase 1:\n\t\t\t\t\n\t\t\t\tvector.x = this[4];\n\t\t\t\tvector.y = this[5];\n\t\t\t\tvector.z = this[6];\n\t\t\t\tvector.w = this[7];\n\t\t\t\n\t\t\tcase 2:\n\t\t\t\t\n\t\t\t\tvector.x = this[8];\n\t\t\t\tvector.y = this[9];\n\t\t\t\tvector.z = this[10];\n\t\t\t\tvector.w = this[11];\n\t\t\t\n\t\t\tcase 3:\n\t\t\t\t\n\t\t\t\tvector.x = this[12];\n\t\t\t\tvector.y = this[13];\n\t\t\t\tvector.z = this[14];\n\t\t\t\tvector.w = this[15];\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tLog.error (\"Column \" + column + \" out of bounds [0, ..., 3]\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (other:Matrix4):Void {\n\t\t\n\t\tthis.set (other);\n\t\t\n\t}\n\t\n\t\n\t@:deprecated public function copythisFrom (array:Float32Array, index:Int = 0, transposeValues:Bool = false) {\n\t\t\n\t\tif (transposeValues)\n\t\t\ttranspose ();\n\t\t\n\t\tvar l:UInt = array.length - index;\n\t\tfor (c in 0...l)\n\t\t\tthis[c] = array[c + index];\n\t\t\n\t\tif (transposeValues)\n\t\t\ttranspose ();\n\t\t\n\t}\n\t\n\t\n\t@:deprecated public function copythisTo (array:Float32Array, index:Int = 0, transposeValues:Bool = false) {\n\t\t\n\t\tif (transposeValues)\n\t\t\ttranspose ();\n\t\t\n\t\tvar l:UInt = this.length;\n\t\tfor (c in 0...l)\n\t\t\tarray[c + index] = this[c];\n\t\t\n\t\tif (transposeValues)\n\t\t\ttranspose();\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowFrom (row:Int, vector:Vector4) {\n\t\t\n\t\tswitch (row) {\n\t\t\t\n\t\t\tcase 0:\n\t\t\t\t\n\t\t\t\tthis[0] = vector.x;\n\t\t\t\tthis[4] = vector.y;\n\t\t\t\tthis[8] = vector.z;\n\t\t\t\tthis[12] = vector.w;\n\t\t\t\n\t\t\tcase 1:\n\t\t\t\t\n\t\t\t\tthis[1] = vector.x;\n\t\t\t\tthis[5] = vector.y;\n\t\t\t\tthis[9] = vector.z;\n\t\t\t\tthis[13] = vector.w;\n\t\t\t\n\t\t\tcase 2:\n\t\t\t\t\n\t\t\t\tthis[2] = vector.x;\n\t\t\t\tthis[6] = vector.y;\n\t\t\t\tthis[10] = vector.z;\n\t\t\t\tthis[14] = vector.w;\n\t\t\t\n\t\t\tcase 3:\n\t\t\t\t\n\t\t\t\tthis[3] = vector.x;\n\t\t\t\tthis[7] = vector.y;\n\t\t\t\tthis[11] = vector.z;\n\t\t\t\tthis[15] = vector.w;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tLog.error (\"Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function create2D (x:Float, y:Float, scale:Float = 1, rotation:Float = 0) {\n\t\t\n\t\tvar theta = rotation * Math.PI / 180.0;\n\t\tvar c = Math.cos (theta);\n\t\tvar s = Math.sin (theta);\n\t\t\n\t\treturn new Matrix4 (new Float32Array ([\n\t\t\tc*scale,  -s*scale, 0,  0,\n\t\t\ts*scale,  c*scale, 0,  0,\n\t\t\t0,        0,        1,  0,\n\t\t\tx,        y,        0,  1\n\t\t]));\n\t\t\n\t}\n\t\n\t\n\tpublic static function createABCD (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float, matrix:Matrix4 = null) {\n\t\t\n\t\tif (matrix == null) matrix = new Matrix4 ();\n\t\t\n\t\tmatrix[0] = a;\n\t\tmatrix[1] = b;\n\t\tmatrix[2] = 0;\n\t\tmatrix[3] = 0;\n\t\t\n\t\tmatrix[4] = c;\n\t\tmatrix[5] = d;\n\t\tmatrix[6] = 0;\n\t\tmatrix[7] = 0;\n\t\t\n\t\tmatrix[8] = 0;\n\t\tmatrix[9] = 0;\n\t\tmatrix[10] = 1;\n\t\tmatrix[11] = 0;\n\t\t\n\t\tmatrix[12] = tx;\n\t\tmatrix[13] = ty;\n\t\tmatrix[14] = 0;\n\t\tmatrix[15] = 1;\n\t\t\n\t\treturn matrix;\n\t\t\n\t}\n\t\n\t\n\tpublic static function createOrtho (x0:Float, x1:Float,  y0:Float, y1:Float, zNear:Float, zFar:Float) {\n\t\t\n\t\tvar sx = 1.0 / (x1 - x0);\n\t\tvar sy = 1.0 / (y1 - y0);\n\t\tvar sz = 1.0 / (zFar - zNear);\n\t\t\n\t\treturn new Matrix4 (new Float32Array ([\n\t\t\t2.0 * sx,     0,          0,                 0,\n\t\t\t0,            2.0 * sy,   0,                 0,\n\t\t\t0,            0,          -2.0 * sz,         0,\n\t\t\t- (x0 + x1) * sx, - (y0 + y1) * sy, - (zNear + zFar) * sz,  1,\n\t\t]));\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowTo (row:Int, vector:Vector4):Void {\n\t\t\n\t\tswitch (row) {\n\t\t\t\n\t\t\tcase 0:\n\t\t\t\t\n\t\t\t\tvector.x = this[0];\n\t\t\t\tvector.y = this[4];\n\t\t\t\tvector.z = this[8];\n\t\t\t\tvector.w = this[12];\n\t\t\t\n\t\t\tcase 1:\n\t\t\t\t\n\t\t\t\tvector.x = this[1];\n\t\t\t\tvector.y = this[5];\n\t\t\t\tvector.z = this[9];\n\t\t\t\tvector.w = this[13];\n\t\t\t\n\t\t\tcase 2:\n\t\t\t\t\n\t\t\t\tvector.x = this[2];\n\t\t\t\tvector.y = this[6];\n\t\t\t\tvector.z = this[10];\n\t\t\t\tvector.w = this[14];\n\t\t\t\n\t\t\tcase 3:\n\t\t\t\t\n\t\t\t\tvector.x = this[3];\n\t\t\t\tvector.y = this[7];\n\t\t\t\tvector.z = this[11];\n\t\t\t\tvector.w = this[15];\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tLog.error (\"Row \" + row + \" out of bounds [0, ..., 3]\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyToMatrix4 (other:Matrix4):Void {\n\t\t\n\t\tcast (other, Float32Array).set (this);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector4 objects.\n\t */\n\t/*public function decompose(?orientationStyle:Orientation3D):Vector<Vector4> {\n\t\t\n\t\tif (orientationStyle==null)\n\t\t\torientationStyle = Orientation3D.EULER_ANGLES;\n\t\t\n\t\tvar vec = new Vector<Vector4>();\n\t\tvar m = clone();\n\t\tvar mr = m.copy();\n\t\t\n\t\tvar pos = new Vector4 (mr[12], mr[13], mr[14]);\n\t\tmr[12] = 0;\n\t\tmr[13] = 0;\n\t\tmr[14] = 0;\n\t\t\n\t\tvar scale = new Vector4 ();\n\t\t\n\t\tscale.x = Math.sqrt(mr[0] * mr[0] + mr[1] * mr[1] + mr[2] * mr[2]);\n\t\tscale.y = Math.sqrt(mr[4] * mr[4] + mr[5] * mr[5] + mr[6] * mr[6]);\n\t\tscale.z = Math.sqrt(mr[8] * mr[8] + mr[9] * mr[9] + mr[10] * mr[10]);\n\t\t\n\t\tif (mr[0] * (mr[5] * mr[10] - mr[6] * mr[9]) - mr[1] * (mr[4] * mr[10] - mr[6] * mr[8]) + mr[2] * (mr[4] * mr[9] - mr[5] * mr[8]) < 0) {\n\t\t\t\n\t\t\tscale.z = -scale.z;\n\t\t\t\n\t\t}\n\t\t\n\t\tmr[0] /= scale.x;\n\t\tmr[1] /= scale.x;\n\t\tmr[2] /= scale.x;\n\t\tmr[4] /= scale.y;\n\t\tmr[5] /= scale.y;\n\t\tmr[6] /= scale.y;\n\t\tmr[8] /= scale.z;\n\t\tmr[9] /= scale.z;\n\t\tmr[10] /= scale.z;\n\t\t\n\t\tvar rot = new Vector4 ();\n\t\tswitch (orientationStyle) {\n\t\t\t\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\t\t\t\trot.w = Math.acos((mr[0] + mr[5] + mr[10] - 1) / 2);\n\t\t\t\t\n\t\t\t\tvar len = Math.sqrt((mr[6] - mr[9]) * (mr[6] - mr[9]) + (mr[8] - mr[2]) * (mr[8] - mr[2]) + (mr[1] - mr[4]) * (mr[1] - mr[4]));\n\t\t\t\trot.x = (mr[6] - mr[9]) / len;\n\t\t\t\trot.y = (mr[8] - mr[2]) / len;\n\t\t\t\trot.z = (mr[1] - mr[4]) / len;\n\t\t\t\n\t\t\tcase Orientation3D.QUATERNION:\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\n\t\t\t\t\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\trot.w = Math.sqrt(1 + tr) / 2;\n\t\t\t\t\t\n\t\t\t\t\trot.x = (mr[6] - mr[9]) / (4 * rot.w);\n\t\t\t\t\trot.y = (mr[8] - mr[2]) / (4 * rot.w);\n\t\t\t\t\trot.z = (mr[1] - mr[4]) / (4 * rot.w);\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\n\t\t\t\t\trot.x = Math.sqrt(1 + mr[0] - mr[5] - mr[10]) / 2;\n\n\t\t\t\t\trot.w = (mr[6] - mr[9]) / (4 * rot.x);\n\t\t\t\t\trot.y = (mr[1] + mr[4]) / (4 * rot.x);\n\t\t\t\t\trot.z = (mr[8] + mr[2]) / (4 * rot.x);\n\t\t\t\t} else if (mr[5] > mr[10]) {\n\t\t\t\t\trot.y = Math.sqrt(1 + mr[5] - mr[0] - mr[10]) / 2;\n\t\t\t\t\t\n\t\t\t\t\trot.x = (mr[1] + mr[4]) / (4 * rot.y);\n\t\t\t\t\trot.w = (mr[8] - mr[2]) / (4 * rot.y);\n\t\t\t\t\trot.z = (mr[6] + mr[9]) / (4 * rot.y);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = Math.sqrt(1 + mr[10] - mr[0] - mr[5]) / 2;\n\t\t\t\t\t\n\t\t\t\t\trot.x = (mr[8] + mr[2]) / (4 * rot.z);\n\t\t\t\t\trot.y = (mr[6] + mr[9]) / (4 * rot.z);\n\t\t\t\t\trot.w = (mr[1] - mr[4]) / (4 * rot.z);\n\t\t\t\t}\n\t\t\t\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\t\t\t\trot.y = Math.asin(-mr[2]);\n\t\t\t\t\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\n\t\t\t\t\trot.x = Math.atan2(mr[6], mr[10]);\n\t\t\t\t\trot.z = Math.atan2(mr[1], mr[0]);\n\t\t\t\t} else {\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2(mr[4], mr[5]);\n\t\t\t\t}\n\t\t}\n\t\t\n\t\tvec.push(pos);\n\t\tvec.push(rot);\n\t\tvec.push(scale);\n\t\t\n\t\treturn vec;\n\t\t\n\t}*/\n\t\n\t\n\tpublic function deltaTransformVector (v:Vector4):Vector4 {\n\t\t\n\t\tvar x:Float = v.x, y:Float = v.y, z:Float = v.z;\n\t\t\n\t\treturn new Vector4 (\n\t\t\t(x * this[0] + y * this[4] + z * this[8] + this[3]),\n\t\t\t(x * this[1] + y * this[5] + z * this[9] + this[7]),\n\t\t\t(x * this[2] + y * this[6] + z * this[10] + this[11]),\n\t\t\t0);\n\t\t\n\t}\n\t\n\t\n\tpublic function identity () {\n\t\t\n\t\tthis[0] = 1;\n\t\tthis[1] = 0;\n\t\tthis[2] = 0;\n\t\tthis[3] = 0;\n\t\tthis[4] = 0;\n\t\tthis[5] = 1;\n\t\tthis[6] = 0;\n\t\tthis[7] = 0;\n\t\tthis[8] = 0;\n\t\tthis[9] = 0;\n\t\tthis[10] = 1;\n\t\tthis[11] = 0;\n\t\tthis[12] = 0;\n\t\tthis[13] = 0;\n\t\tthis[14] = 0;\n\t\tthis[15] = 1;\n\t\t\n\t}\n\t\n\t\n\tpublic static function interpolate (thisMat:Matrix4, toMat:Matrix4, percent:Float):Matrix4 {\n\t\t\n\t\tvar m = new Matrix4 ();\n\t\t\n\t\tfor (i in 0...16) {\n\t\t\t\n\t\t\tm[i] = thisMat[i] + (toMat[i] - thisMat[i]) * percent;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn m;\n\t\t\n\t}\n\t\n\t\n\tpublic function interpolateTo (toMat:Matrix4, percent:Float):Void {\n\t\t\n\t\tfor (i in 0...16) {\n\t\t\t\n\t\t\tthis[i] = this[i] + (toMat[i] - this[i]) * percent;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function invert ():Bool {\n\t\t\n\t\tvar d = determinant;\n\t\tvar invertable = Math.abs (d) > 0.00000000001;\n\t\t\n\t\tif (invertable) {\n\t\t\t\n\t\t\td = 1 / d;\n\t\t\t\n\t\t\tvar m11:Float = this[0]; var m21:Float = this[4]; var m31:Float = this[8]; var m41:Float = this[12];\n\t\t\tvar m12:Float = this[1]; var m22:Float = this[5]; var m32:Float = this[9]; var m42:Float = this[13];\n\t\t\tvar m13:Float = this[2]; var m23:Float = this[6]; var m33:Float = this[10]; var m43:Float = this[14];\n\t\t\tvar m14:Float = this[3]; var m24:Float = this[7]; var m34:Float = this[11]; var m44:Float = this[15];\n\t\t\t\n\t\t\tthis[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));\n\t\t\tthis[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));\n\t\t\tthis[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));\n\t\t\tthis[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));\n\t\t\tthis[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));\n\t\t\tthis[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));\n\t\t\tthis[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));\n\t\t\tthis[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));\n\t\t\tthis[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));\n\t\t\tthis[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));\n\t\t\tthis[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));\n\t\t\tthis[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));\n\t\t\tthis[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));\n\t\t\tthis[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));\n\t\t\tthis[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));\n\t\t\tthis[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn invertable;\n\t\t\n\t}\n\t\n\t\n\tpublic function pointAt (pos:Vector4, at:Vector4 = null, up:Vector4 = null):Void {\n\t\t\n\t\tif (at == null) {\n\t\t\t\n\t\t\tat = new Vector4 (0, 0, -1);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (up == null) {\n\t\t\t\n\t\t\tup = new Vector4 (0, -1, 0);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar dir = at.subtract (pos);\n\t\tvar vup = up.clone ();\n\t\tvar right:Vector4;\n\t\t\n\t\tdir.normalize ();\n\t\tvup.normalize ();\n\t\t\n\t\tvar dir2 = dir.clone ();\n\t\tdir2.scaleBy (vup.dotProduct (dir));\n\t\t\n\t\tvup = vup.subtract (dir2);\n\t\t\n\t\tif (vup.length > 0) {\n\t\t\t\n\t\t\tvup.normalize ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (dir.x != 0) {\n\t\t\t\t\n\t\t\t\tvup = new Vector4 (-dir.y, dir.x, 0);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvup = new Vector4 (1, 0, 0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tright = vup.crossProduct (dir);\n\t\tright.normalize ();\n\t\t\n\t\tthis[0] = right.x;\n\t\tthis[4] = right.y;\n\t\tthis[8] = right.z;\n\t\tthis[12] = 0.0;\n\t\tthis[1] = vup.x;\n\t\tthis[5] = vup.y;\n\t\tthis[9] = vup.z;\n\t\tthis[13] = 0.0;\n\t\tthis[2] = dir.x;\n\t\tthis[6] = dir.y;\n\t\tthis[10] = dir.z;\n\t\tthis[14] = 0.0;\n\t\tthis[3] = pos.x;\n\t\tthis[7] = pos.y;\n\t\tthis[11] = pos.z;\n\t\tthis[15] = 1.0;\n\t\t\n\t}\n\t\n\t\n\tpublic function prepend (rhs:Matrix4):Void {\n\t\t\n\t\tvar m111:Float = rhs[0], m121:Float = rhs[4], m131:Float = rhs[8], m141:Float = rhs[12],\n\t\t\tm112:Float = rhs[1], m122:Float = rhs[5], m132:Float = rhs[9], m142:Float = rhs[13],\n\t\t\tm113:Float = rhs[2], m123:Float = rhs[6], m133:Float = rhs[10], m143:Float = rhs[14],\n\t\t\tm114:Float = rhs[3], m124:Float = rhs[7], m134:Float = rhs[11], m144:Float = rhs[15],\n\t\t\tm211:Float = this[0], m221:Float = this[4], m231:Float = this[8], m241:Float = this[12],\n\t\t\tm212:Float = this[1], m222:Float = this[5], m232:Float = this[9], m242:Float = this[13],\n\t\t\tm213:Float = this[2], m223:Float = this[6], m233:Float = this[10], m243:Float = this[14],\n\t\t\tm214:Float = this[3], m224:Float = this[7], m234:Float = this[11], m244:Float = this[15];\n\t\t\n\t\tthis[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\n\t\tthis[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\n\t\tthis[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\n\t\tthis[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\n\t\t\n\t\tthis[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\n\t\tthis[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\n\t\tthis[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\n\t\tthis[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\n\t\t\n\t\tthis[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\n\t\tthis[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\n\t\tthis[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\n\t\tthis[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\n\t\t\n\t\tthis[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\n\t\tthis[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\n\t\tthis[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\n\t\tthis[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\n\t\t\n\t}\n\t\n\t\n\tpublic function prependRotation (degrees:Float, axis:Vector4, pivotPoint:Vector4 = null):Void {\n\t\t\n\t\tvar m = __getAxisRotation (axis.x, axis.y, axis.z, degrees);\n\t\t\n\t\tif (pivotPoint != null) {\n\t\t\t\n\t\t\tvar p = pivotPoint;\n\t\t\tm.appendTranslation (p.x, p.y, p.z);\n\t\t\t\n\t\t}\n\t\t\n\t\tprepend (m);\n\t\t\n\t}\n\t\n\t\n\tpublic function prependScale (xScale:Float, yScale:Float, zScale:Float):Void {\n\t\t\n\t\tprepend (new Matrix4 (new Float32Array ([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0])));\n\t\t\n\t}\n\t\n\t\n\tpublic function prependTranslation (x:Float, y:Float, z:Float):Void {\n\t\t\n\t\tvar m = new Matrix4 ();\n\t\tm.position = new Vector4 (x, y, z);\n\t\tprepend (m);\n\t\t\n\t}\n\t\n\t\n\t/*public function recompose (components:Vector<Vector4>, ?orientationStyle:Orientation3D ):Bool {\n\t\t\n\t\tif (components.length < 3 || components[2].x == 0 || components[2].y == 0 || components[2].z == 0)\n\t\t\treturn false;\n\t\t\n\t\tif (orientationStyle == null)\n\t\t\torientationStyle = Orientation3D.EULER_ANGLES;\n\t\t\n\t\tidentity();\n\t\t\n\t\tvar scale = [];\n\t\tscale[0] = scale[1] = scale[2] = components[2].x;\n\t\tscale[4] = scale[5] = scale[6] = components[2].y;\n\t\tscale[8] = scale[9] = scale[10] = components[2].z;\n\t\t\n\t\tswitch (orientationStyle) {\n\t\t\t\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\t\t\t\tvar cx = Math.cos(components[1].x);\n\t\t\t\tvar cy = Math.cos(components[1].y);\n\t\t\t\tvar cz = Math.cos(components[1].z);\n\t\t\t\tvar sx = Math.sin(components[1].x);\n\t\t\t\tvar sy = Math.sin(components[1].y);\n\t\t\t\tvar sz = Math.sin(components[1].z);\n\t\t\t\t\n\t\t\t\tthis[0]=cy*cz*scale[0];\n\t\t\t\tthis[1]=cy*sz*scale[1];\n\t\t\t\tthis[2]=- sy*scale[2];\n\t\t\t\tthis[3]=0;\n\t\t\t\tthis[4] = (sx*sy*cz-cx*sz)*scale[4];\n\t\t\t\tthis[5] = (sx*sy*sz+cx*cz)*scale[5];\n\t\t\t\tthis[6]=sx*cy*scale[6];\n\t\t\t\tthis[7]=0;\n\t\t\t\tthis[8] = (cx*sy*cz+sx*sz)*scale[8];\n\t\t\t\tthis[9] = (cx*sy*sz-sx*cz)*scale[9];\n\t\t\t\tthis[10]=cx*cy*scale[10];\n\t\t\t\tthis[11]=0;\n\t\t\t\tthis[12]=components[0].x;\n\t\t\t\tthis[13]=components[0].y;\n\t\t\t\tthis[14]=components[0].z;\n\t\t\t\tthis[15]=1;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tvar x = components[1].x;\n\t\t\t\tvar y = components[1].y;\n\t\t\t\tvar z = components[1].z;\n\t\t\t\tvar w = components[1].w;\n\t\t\t\tif (Type.enumEq(orientationStyle, Orientation3D.AXIS_ANGLE)) {\n\t\t\t\t\tx *= Math.sin(w/2);\n\t\t\t\t\ty *= Math.sin(w/2);\n\t\t\t\t\tz *= Math.sin(w/2);\n\t\t\t\t\tw = Math.cos(w/2);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis[0] = (1-2*y*y-2*z*z)*scale[0];\n\t\t\t\tthis[1] = (2*x*y+2*w*z)*scale[1];\n\t\t\t\tthis[2] = (2*x*z-2*w*y)*scale[2];\n\t\t\t\tthis[3] = 0;\n\t\t\t\tthis[4] = (2*x*y-2*w*z)*scale[4];\n\t\t\t\tthis[5] = (1-2*x*x-2*z*z)*scale[5];\n\t\t\t\tthis[6] = (2*y*z+2*w*x)*scale[6];\n\t\t\t\tthis[7] = 0;\n\t\t\t\tthis[8] = (2*x*z+2*w*y)*scale[8];\n\t\t\t\tthis[9] = (2*y*z-2*w*x)*scale[9];\n\t\t\t\tthis[10] = (1-2*x*x-2*y*y)*scale[10];\n\t\t\t\tthis[11] = 0;\n\t\t\t\tthis[12] = components[0].x;\n\t\t\t\tthis[13] = components[0].y;\n\t\t\t\tthis[14] = components[0].z;\n\t\t\t\tthis[15] = 1;\n\t\t}\n\t\t\n\t\tif (components[2].x == 0)\n\t\t\tthis[0] = 1e-15;\n\t\tif (components[2].y == 0)\n\t\t\tthis[5] = 1e-15;\n\t\tif (components[2].z == 0)\n\t\t\tthis[10] = 1e-15;\n\t\t\t\t\t\n\t\treturn !(components[2].x == 0 || components[2].y == 0 || components[2].y == 0);\n\t}*/\n\t\n\t\n\tpublic function transformVector (v:Vector4):Vector4 {\n\t\t\n\t\tvar x:Float = v.x, y:Float = v.y, z:Float = v.z;\n\t\t\n\t\treturn new Vector4 (\n\t\t\t(x * this[0] + y * this[4] + z * this[8] + this[12]),\n\t\t\t(x * this[1] + y * this[5] + z * this[9] + this[13]),\n\t\t\t(x * this[2] + y * this[6] + z * this[10] + this[14]),\n\t\t\t(x * this[3] + y * this[7] + z * this[11] + this[15]));\n\t\t\n\t}\n\t\n\t\n\tpublic function transformVectors (ain:Float32Array, aout:Float32Array):Void {\n\t\t\n\t\tvar i = 0;\n\t\tvar x:Float, y:Float, z:Float;\n\t\t\n\t\twhile (i + 3 <= ain.length) {\n\t\t\t\n\t\t\tx = ain[i];\n\t\t\ty = ain[i + 1];\n\t\t\tz = ain[i + 2];\n\t\t\t\n\t\t\taout[i] = x * this[0] + y * this[4] + z * this[8] + this[12];\n\t\t\taout[i + 1] = x * this[1] + y * this[5] + z * this[9] + this[13];\n\t\t\taout[i + 2] = x * this[2] + y * this[6] + z * this[10] + this[14];\n\t\t\t\n\t\t\ti += 3;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function transpose ():Void {\n\t\t\n\t\t__swap (1, 4);\n\t\t__swap (2, 8);\n\t\t__swap (3, 12);\n\t\t__swap (6, 9);\n\t\t__swap (7, 13);\n\t\t__swap (11, 14);\n\t\t\n\t}\n\t\n\t\n\tprivate function __getAxisRotation (x:Float, y:Float, z:Float, degrees:Float):Matrix4 {\n\t\t\n\t\tvar m = new Matrix4 ();\n\t\t\n\t\tvar a1 = new Vector4 (x, y, z);\n\t\tvar rad = -degrees * (Math.PI / 180);\n\t\tvar c = Math.cos (rad);\n\t\tvar s = Math.sin (rad);\n\t\tvar t = 1.0 - c;\n\t\t\n\t\tm[0] = c + a1.x * a1.x * t;\n\t\tm[5] = c + a1.y * a1.y * t;\n\t\tm[10] = c + a1.z * a1.z * t;\n\t\t\n\t\tvar tmp1 = a1.x * a1.y * t;\n\t\tvar tmp2 = a1.z * s;\n\t\tm[4] = tmp1 + tmp2;\n\t\tm[1] = tmp1 - tmp2;\n\t\ttmp1 = a1.x * a1.z * t;\n\t\ttmp2 = a1.y * s;\n\t\tm[8] = tmp1 - tmp2;\n\t\tm[2] = tmp1 + tmp2;\n\t\ttmp1 = a1.y * a1.z * t;\n\t\ttmp2 = a1.x*s;\n\t\tm[9] = tmp1 + tmp2;\n\t\tm[6] = tmp1 - tmp2;\n\t\t\n\t\treturn m;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __swap (a:Int, b:Int):Void {\n\t\t\n\t\tvar temp = this[a];\n\t\tthis[a] = this[b];\n\t\tthis[b] = temp;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_determinant ():Float {\n\t\t\n\t\treturn 1 * ((this[0] * this[5] - this[4] * this[1]) * (this[10] * this[15] - this[14] * this[11]) \n\t\t\t- (this[0] * this[9] - this[8] * this[1]) * (this[6] * this[15] - this[14] * this[7])\n\t\t\t+ (this[0] * this[13] - this[12] * this[1]) * (this[6] * this[11] - this[10] * this[7])\n\t\t\t+ (this[4] * this[9] - this[8] * this[5]) * (this[2] * this[15] - this[14] * this[3])\n\t\t\t- (this[4] * this[13] - this[12] * this[5]) * (this[2] * this[11] - this[10] * this[3])\n\t\t\t+ (this[8] * this[13] - this[12] * this[9]) * (this[2] * this[7] - this[6] * this[3]));\n\t\t\n\t}\n\t\n\t\n\tprivate function get_position ():Vector4 {\n\t\t\n\t\treturn new Vector4 (this[12], this[13], this[14]);\n\t\t\n\t}\n\t\n\t\n\tprivate function set_position (val:Vector4):Vector4 {\n\t\t\n\t\tthis[12] = val.x;\n\t\tthis[13] = val.y;\n\t\tthis[14] = val.z;\n\t\treturn val;\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess public function get (index:Int):Float {\n\t\t\n\t\treturn this[index];\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess public function set (index:Int, value:Float):Float {\n\t\t\n\t\tthis[index] = value;\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.math;\n\n\n#if flash\nimport flash.geom.Rectangle in FlashRectangle;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Rectangle {\n\t\n\t\n\tpublic var bottom (get, set):Float;\n\tpublic var bottomRight (get, set):Vector2;\n\tpublic var height:Float;\n\tpublic var left (get, set):Float;\n\tpublic var right (get, set):Float;\n\tpublic var size (get, set):Vector2;\n\tpublic var top (get, set):Float;\n\tpublic var topLeft (get, set):Vector2;\n\tpublic var width:Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\tpublic function new (x:Float = 0, y:Float = 0, width:Float = 0, height:Float = 0):Void {\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Rectangle {\n\t\t\n\t\treturn new Rectangle (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic function contains (x:Float, y:Float):Bool {\n\t\t\n\t\treturn x >= this.x && y >= this.y && x < right && y < bottom;\n\t\t\n\t}\n\t\n\t\n\tpublic function containsPoint (point:Vector2):Bool {\n\t\t\n\t\treturn contains (point.x, point.y);\n\t\t\n\t}\n\t\n\t\n\tpublic function containsRect (rect:Rectangle):Bool {\n\t\t\n\t\tif (rect.width <= 0 || rect.height <= 0) {\n\t\t\t\n\t\t\treturn rect.x > x && rect.y > y && rect.right < right && rect.bottom < bottom;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn rect.x >= x && rect.y >= y && rect.right <= right && rect.bottom <= bottom;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceRect:Rectangle):Void {\n\t\t\n\t\tx = sourceRect.x;\n\t\ty = sourceRect.y;\n\t\twidth = sourceRect.width;\n\t\theight = sourceRect.height;\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (toCompare:Rectangle):Bool {\n\t\t\n\t\treturn toCompare != null && x == toCompare.x && y == toCompare.y && width == toCompare.width && height == toCompare.height;\n\t\t\n\t}\n\t\n\t\n\tpublic function inflate (dx:Float, dy:Float):Void {\n\t\t\n\t\tx -= dx; width += dx * 2;\n\t\ty -= dy; height += dy * 2;\n\t\t\n\t}\n\t\n\t\n\tpublic function inflatePoint (point:Vector2):Void {\n\t\t\n\t\tinflate (point.x, point.y);\n\t\t\n\t}\n\t\n\t\n\tpublic function intersection (toIntersect:Rectangle):Rectangle {\n\t\t\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\n\t\t\n\t\tif (x1 <= x0) {\n\t\t\t\n\t\t\treturn new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\n\t\t\n\t\tif (y1 <= y0) {\n\t\t\t\n\t\t\treturn new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\n\t\t\n\t}\n\t\n\t\n\tpublic function intersects (toIntersect:Rectangle):Bool {\n\t\t\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\n\t\t\n\t\tif (x1 <= x0) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\n\t\t\n\t\treturn y1 > y0;\n\t\t\n\t}\n\t\n\t\n\tpublic function isEmpty ():Bool {\n\t\t\n\t\treturn (width <= 0 || height <= 0);\n\t\t\n\t}\n\t\n\t\n\tpublic function offset (dx:Float, dy:Float):Void {\n\t\t\n\t\tx += dx;\n\t\ty += dy;\n\t\t\n\t}\n\t\n\t\n\tpublic function offsetPoint (point:Vector2):Void {\n\t\t\n\t\tx += point.x;\n\t\ty += point.y;\n\t\t\n\t}\n\t\n\t\n\tpublic function setEmpty ():Void {\n\t\t\n\t\tx = y = width = height = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function setTo (xa:Float, ya:Float, widtha:Float, heighta:Float):Void {\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t\twidth = widtha;\n\t\theight = heighta;\n\t\t\n\t}\n\t\n\t\n\tpublic function transform (m:Matrix3):Rectangle {\n\t\t\n\t\tvar tx0 = m.a * x + m.c * y;\n\t\tvar tx1 = tx0;\n\t\tvar ty0 = m.b * x + m.d * y;\n\t\tvar ty1 = ty0;\n\t\t\n\t\tvar tx = m.a * (x + width) + m.c * y;\n\t\tvar ty = m.b * (x + width) + m.d * y;\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\ttx = m.a * (x + width) + m.c * (y + height);\n\t\tty = m.b * (x + width) + m.d * (y + height);\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\ttx = m.a * x + m.c * (y + height);\n\t\tty = m.b * x + m.d * (y + height);\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\treturn new Rectangle (tx0 + m.tx, ty0 + m.ty, tx1 - tx0, ty1 - ty0);\n\t\t\n\t}\n\t\n\t\n\tpublic function union (toUnion:Rectangle):Rectangle {\n\t\t\n\t\tif (width == 0 || height == 0) {\n\t\t\t\n\t\t\treturn toUnion.clone ();\n\t\t\t\n\t\t} else if (toUnion.width == 0 || toUnion.height == 0) {\n\t\t\t\n\t\t\treturn clone ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar x0 = x > toUnion.x ? toUnion.x : x;\n\t\tvar x1 = right < toUnion.right ? toUnion.right : right;\n\t\tvar y0 = y > toUnion.y ? toUnion.y : y;\n\t\tvar y1 = bottom < toUnion.bottom ? toUnion.bottom : bottom;\n\t\t\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\n\t\t\n\t}\n\t\n\t\n\tpublic function __contract (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (this.width == 0 && this.height == 0) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\t//var cacheRight = right;\n\t\t//var cacheBottom = bottom;\n\t\t\n\t\tif (this.x < x) this.x = x;\n\t\tif (this.y < y) this.y = y;\n\t\tif (this.right > x + width) this.width = x + width - this.x;\n\t\tif (this.bottom > y + height) this.height = y + height - this.y;\n\t\t\n\t}\n\t\n\t\n\tpublic function __expand (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (this.width == 0 && this.height == 0) {\n\t\t\t\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar cacheRight = right;\n\t\tvar cacheBottom = bottom;\n\t\t\n\t\tif (this.x > x) this.x = x;\n\t\tif (this.y > y) this.y = y;\n\t\tif (cacheRight < x + width) this.width = x + width - this.x;\n\t\tif (cacheBottom < y + height) this.height = y + height - this.y;\n\t\t\n\t}\n\t\n\t\n\tprivate function __toFlashRectangle ():#if flash FlashRectangle #else Dynamic #end {\n\t\t\n\t\t#if flash\n\t\treturn new FlashRectangle (x, y, width, height);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_bottom ():Float { return y + height; }\n\tprivate function set_bottom (b:Float):Float { height = b - y; return b; }\n\tprivate function get_bottomRight ():Vector2 { return new Vector2 (x + width, y + height); }\n\tprivate function set_bottomRight (p:Vector2):Vector2 { width = p.x - x; height = p.y - y; return p.clone (); }\n\tprivate function get_left ():Float { return x; }\n\tprivate function set_left (l:Float):Float { width -= l - x; x = l; return l; }\n\tprivate function get_right ():Float { return x + width; }\n\tprivate function set_right (r:Float):Float { width = r - x; return r; }\n\tprivate function get_size ():Vector2 { return new Vector2 (width, height); }\n\tprivate function set_size (p:Vector2):Vector2 { width = p.x; height = p.y; return p.clone (); }\n\tprivate function get_top ():Float { return y; }\n\tprivate function set_top (t:Float):Float { height -= t - y; y = t; return t; }\n\tprivate function get_topLeft ():Vector2 { return new Vector2 (x, y); }\n\tprivate function set_topLeft (p:Vector2):Vector2 { x = p.x; y = p.y; return p.clone (); }\n\t\n\t\n}","package lime.math;\n\n\n#if flash\nimport flash.geom.Point;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Vector2 {\n\t\n\t\n\tpublic var length (get, null):Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\tpublic function new (x:Float = 0, y:Float = 0) {\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\t\n\t}\n\t\n\t\n\tpublic function add (v:Vector2):Vector2 {\n\t\t\n\t\treturn new Vector2 (v.x + x, v.y + y);\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Vector2 {\n\t\t\n\t\treturn new Vector2 (x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic static function distance (pt1:Vector2, pt2:Vector2):Float {\n\t\t\n\t\tvar dx = pt1.x - pt2.x;\n\t\tvar dy = pt1.y - pt2.y;\n\t\treturn Math.sqrt (dx * dx + dy * dy);\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (toCompare:Vector2):Bool {\n\t\t\n\t\treturn toCompare != null && toCompare.x == x && toCompare.y == y;\n\t\t\n\t}\n\t\n\t\n\tpublic static function interpolate (pt1:Vector2, pt2:Vector2, f:Float):Vector2 {\n\t\t\n\t\treturn new Vector2 (pt2.x + f * (pt1.x - pt2.x), pt2.y + f * (pt1.y - pt2.y));\n\t\t\n\t}\n\t\n\t\n\tpublic function normalize (thickness:Float):Void {\n\t\t\n\t\tif (x == 0 && y == 0) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar norm = thickness / Math.sqrt (x * x + y * y);\n\t\t\tx *= norm;\n\t\t\ty *= norm;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function offset (dx:Float, dy:Float):Void {\n\t\t\n\t\tx += dx;\n\t\ty += dy;\n\t\t\n\t}\n\t\n\t\n\tpublic static function polar (len:Float, angle:Float):Vector2 {\n\t\t\n\t\treturn new Vector2 (len * Math.cos (angle), len * Math.sin (angle));\n\t\t\n\t}\n\t\n\t\n\tinline public function setTo (xa:Float, ya:Float):Void {\t\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t}\n\t\n\t\n\tpublic function subtract (v:Vector2):Vector2 {\n\t\t\n\t\treturn new Vector2 (x - v.x, y - v.y);\n\t\t\n\t}\n\t\n\t\n\tprivate function __toFlashPoint ():#if flash Point #else Dynamic #end {\n\t\t\n\t\t#if flash\n\t\treturn new Point (x, y);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_length ():Float {\n\t\t\n\t\treturn Math.sqrt (x * x + y * y);\n\t\t\n\t}\n\t\n\t\n}","package lime.math;\n\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Vector4 {\n\t\n\t\n\tpublic static var X_AXIS (get, null):Vector4;\n\tpublic static var Y_AXIS (get, null):Vector4;\n\tpublic static var Z_AXIS (get, null):Vector4;\n\t\n\tpublic var length (get, null):Float;\n\tpublic var lengthSquared (get, null):Float;\n\tpublic var w:Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\tpublic var z:Float;\n\t\n\t\n\tpublic function new (x:Float = 0., y:Float = 0., z:Float = 0., w:Float = 0.) {\n\t\t\n\t\tthis.w = w;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\t\n\t}\n\t\n\t\n\tinline public function add (a:Vector4):Vector4 {\n\t\t\n\t\treturn new Vector4 (this.x + a.x, this.y + a.y, this.z + a.z);\n\t\t\n\t}\n\t\n\t\n\tinline public static function angleBetween (a:Vector4, b:Vector4):Float {\n\t\t\n\t\tvar a0 = a.clone ();\n\t\ta0.normalize ();\n\t\tvar b0 = b.clone ();\n\t\tb0.normalize ();\n\t\t\n\t\treturn Math.acos (a0.dotProduct (b0));\n\t\t\n\t}\n\t\n\t\n\tinline public function clone ():Vector4 {\n\t\t\n\t\treturn new Vector4 (x, y, z, w);\n\t\t\n\t}\n\t\n\t\n\tinline public function copyFrom (sourceVector4:Vector4):Void {\n\t\t\n\t\tx = sourceVector4.x;\n\t\ty = sourceVector4.y;\n\t\tz = sourceVector4.z;\n\t\t\n\t}\n\t\n\t\n\tinline public function crossProduct (a:Vector4):Vector4 {\n\t\t\n\t\treturn new Vector4 (y * a.z - z * a.y, z * a.x - x * a.z, x * a.y - y * a.x, 1);\n\t\t\n\t}\n\t\n\t\n\tinline public function decrementBy (a:Vector4):Void {\n\t\t\n\t\tx -= a.x;\n\t\ty -= a.y;\n\t\tz -= a.z;\n\t\t\n\t}\n\t\n\t\n\tinline public static function distance (pt1:Vector4, pt2:Vector4):Float {\n\t\t\n\t\tvar x:Float = pt2.x - pt1.x;\n\t\tvar y:Float = pt2.y - pt1.y;\n\t\tvar z:Float = pt2.z - pt1.z;\n\t\t\n\t\treturn Math.sqrt (x * x + y * y + z * z);\n\t\t\n\t}\n\t\n\t\n\tinline public function dotProduct (a:Vector4):Float {\n\t\t\n\t\treturn x * a.x + y * a.y + z * a.z;\n\t\t\n\t}\n\t\n\t\n\tinline public function equals (toCompare:Vector4, ?allFour:Bool = false):Bool {\n\t\t\n\t\treturn x == toCompare.x && y == toCompare.y && z == toCompare.z && (!allFour || w == toCompare.w);\n\t\t\n\t}\n\t\n\t\n\tinline public function incrementBy (a:Vector4):Void {\n\t\t\n\t\tx += a.x;\n\t\ty += a.y;\n\t\tz += a.z;\n\t\t\n\t}\n\t\n\t\n\tinline public function nearEquals (toCompare:Vector4, tolerance:Float, ?allFour:Bool = false):Bool {\n\t\t\n\t\treturn Math.abs (x - toCompare.x) < tolerance && Math.abs (y - toCompare.y) < tolerance && Math.abs (z - toCompare.z) < tolerance && (!allFour || Math.abs (w - toCompare.w) < tolerance);\n\t\t\n\t}\n\t\n\t\n\tinline public function negate ():Void {\n\t\t\n\t\tx *= -1;\n\t\ty *= -1;\n\t\tz *= -1;\n\t\t\n\t}\n\t\n\t\n\tinline public function normalize ():Float {\n\t\t\n\t\tvar l = length;\n\t\t\n\t\tif (l != 0) {\n\t\t\t\n\t\t\tx /= l;\n\t\t\ty /= l;\n\t\t\tz /= l;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn l;\n\t\t\n\t}\n\t\n\t\n\tinline public function project ():Void {\n\t\t\n\t\tx /= w;\n\t\ty /= w;\n\t\tz /= w;\n\t\t\n\t}\n\t\n\t\n\tinline public function scaleBy (s:Float):Void {\n\t\t\n\t\tx *= s;\n\t\ty *= s;\n\t\tz *= s;\n\t\t\n\t}\n\t\n\t\n\tinline public function setTo (xa:Float, ya:Float, za:Float):Void {\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t\tz = za;\n\t\t\n\t}\n\t\n\t\n\tinline public function subtract (a:Vector4):Vector4 {\n\t\t\n\t\treturn new Vector4 (x - a.x, y - a.y, z - a.z);\n\t\t\n\t}\n\t\n\t\n\tinline public function toString ():String {\n\t\t\n\t\treturn \"Vector4(\" + x + \", \" + y + \", \" + z + \")\";\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tinline private function get_length ():Float {\n\t\t\n\t\treturn Math.sqrt (x * x + y * y + z * z);\n\t\t\n\t}\n\t\n\t\n\tinline private function get_lengthSquared ():Float {\n\t\t\n\t\treturn x * x + y * y + z * z;\n\t\t\n\t}\n\t\n\t\n\tinline private static function get_X_AXIS ():Vector4 {\n\t\t\n\t\treturn new Vector4 (1, 0, 0);\n\t\t\n\t}\n\t\n\t\n\tinline private static function get_Y_AXIS ():Vector4 {\n\t\t\n\t\treturn new Vector4 (0, 1, 0);\n\t\t\n\t}\n\t\n\t\n\tinline private static function get_Z_AXIS ():Vector4 {\n\t\t\n\t\treturn new Vector4 (0, 0, 1);\n\t\t\n\t}\n\t\n\t\n}","package lime.media;\n\n\nimport lime.media.openal.AL;\nimport lime.media.openal.ALBuffer;\nimport lime.media.openal.ALSource;\nimport lime.utils.ArrayBufferView;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass ALAudioContext {\n\t\n\t\n\tpublic var NONE:Int = 0;\n\tpublic var FALSE:Int = 0;\n\tpublic var TRUE:Int = 1;\n\tpublic var SOURCE_RELATIVE:Int = 0x202;\n\tpublic var CONE_INNER_ANGLE:Int = 0x1001;\n\tpublic var CONE_OUTER_ANGLE:Int = 0x1002;\n\tpublic var PITCH:Int = 0x1003;\n\tpublic var POSITION:Int = 0x1004;\n\tpublic var DIRECTION:Int = 0x1005;\n\tpublic var VELOCITY:Int = 0x1006;\n\tpublic var LOOPING:Int = 0x1007;\n\tpublic var BUFFER:Int = 0x1009;\n\tpublic var GAIN:Int = 0x100A;\n\tpublic var MIN_GAIN:Int = 0x100D;\n\tpublic var MAX_GAIN:Int = 0x100E;\n\tpublic var ORIENTATION:Int = 0x100F;\n\tpublic var SOURCE_STATE:Int = 0x1010;\n\tpublic var INITIAL:Int = 0x1011;\n\tpublic var PLAYING:Int = 0x1012;\n\tpublic var PAUSED:Int = 0x1013;\n\tpublic var STOPPED:Int = 0x1014;\n\tpublic var BUFFERS_QUEUED:Int = 0x1015;\n\tpublic var BUFFERS_PROCESSED:Int = 0x1016;\n\tpublic var REFERENCE_DISTANCE:Int = 0x1020;\n\tpublic var ROLLOFF_FACTOR:Int = 0x1021;\n\tpublic var CONE_OUTER_GAIN:Int = 0x1022;\n\tpublic var MAX_DISTANCE:Int = 0x1023;\n\tpublic var SEC_OFFSET:Int = 0x1024;\n\tpublic var SAMPLE_OFFSET:Int = 0x1025;\n\tpublic var BYTE_OFFSET:Int = 0x1026;\n\tpublic var SOURCE_TYPE:Int = 0x1027;\n\tpublic var STATIC:Int = 0x1028;\n\tpublic var STREAMING:Int = 0x1029;\n\tpublic var UNDETERMINED:Int = 0x1030;\n\tpublic var FORMAT_MONO8:Int = 0x1100;\n\tpublic var FORMAT_MONO16:Int = 0x1101;\n\tpublic var FORMAT_STEREO8:Int = 0x1102;\n\tpublic var FORMAT_STEREO16:Int = 0x1103;\n\tpublic var FREQUENCY:Int = 0x2001;\n\tpublic var BITS:Int = 0x2002;\n\tpublic var CHANNELS:Int = 0x2003;\n\tpublic var SIZE:Int = 0x2004;\n\tpublic var NO_ERROR:Int = 0;\n\tpublic var INVALID_NAME:Int = 0xA001;\n\tpublic var INVALID_ENUM:Int = 0xA002;\n\tpublic var INVALID_VALUE:Int = 0xA003;\n\tpublic var INVALID_OPERATION:Int = 0xA004;\n\tpublic var OUT_OF_MEMORY:Int = 0xA005;\n\tpublic var VENDOR:Int = 0xB001;\n\tpublic var VERSION:Int = 0xB002;\n\tpublic var RENDERER:Int = 0xB003;\n\tpublic var EXTENSIONS:Int = 0xB004;\n\tpublic var DOPPLER_FACTOR:Int = 0xC000;\n\tpublic var SPEED_OF_SOUND:Int = 0xC003;\n\tpublic var DOPPLER_VELOCITY:Int = 0xC001;\n\tpublic var DISTANCE_MODEL:Int = 0xD000;\n\tpublic var INVERSE_DISTANCE:Int = 0xD001;\n\tpublic var INVERSE_DISTANCE_CLAMPED:Int = 0xD002;\n\tpublic var LINEAR_DISTANCE:Int = 0xD003;\n\tpublic var LINEAR_DISTANCE_CLAMPED:Int = 0xD004;\n\tpublic var EXPONENT_DISTANCE:Int = 0xD005;\n\tpublic var EXPONENT_DISTANCE_CLAMPED:Int = 0xD006;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function bufferData (buffer:ALBuffer, format:Int, data:ArrayBufferView, size:Int, freq:Int):Void {\n\t\t\n\t\tAL.bufferData (buffer, format, data, size, freq);\n\t\t\n\t}\n\t\n\t\n\tpublic function buffer3f (buffer:ALBuffer, param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\tAL.buffer3f (buffer, param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function buffer3i (buffer:ALBuffer, param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\tAL.buffer3i (buffer, param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function bufferf (buffer:ALBuffer, param:Int, value:Float):Void {\n\t\t\n\t\tAL.bufferf (buffer, param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function bufferfv (buffer:ALBuffer, param:Int, values:Array<Float>):Void {\n\t\t\n\t\tAL.bufferfv (buffer, param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function bufferi (buffer:ALBuffer, param:Int, value:Int):Void {\n\t\t\n\t\tAL.bufferi (buffer, param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function bufferiv (buffer:ALBuffer, param:Int, values:Array<Int>):Void {\n\t\t\n\t\tAL.bufferiv (buffer, param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function createSource ():ALSource {\n\t\t\n\t\treturn AL.createSource ();\n\t\t\n\t}\n\t\n\t\n\tpublic function createBuffer ():ALBuffer {\n\t\t\n\t\treturn AL.createBuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic function deleteBuffer (buffer:ALBuffer):Void {\n\t\t\n\t\tAL.deleteBuffer (buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic function deleteBuffers (buffers:Array<ALBuffer>):Void {\n\t\t\n\t\tAL.deleteBuffers (buffers);\n\t\t\n\t}\n\t\n\t\n\tpublic function deleteSource (source:ALSource):Void {\n\t\t\n\t\tAL.deleteSource (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function deleteSources (sources:Array<ALSource>):Void {\n\t\t\n\t\tAL.deleteSources (sources);\n\t\t\n\t}\n\t\n\t\n\tpublic function disable (capability:Int):Void {\n\t\t\n\t\tAL.disable (capability);\n\t\t\n\t}\n\t\n\t\n\tpublic function distanceModel (distanceModel:Int):Void {\n\t\t\n\t\tAL.distanceModel (distanceModel);\n\t\t\n\t}\n\t\n\t\n\tpublic function dopplerFactor (value:Float):Void {\n\t\t\n\t\tAL.dopplerFactor (value);\n\t\t\n\t}\n\t\n\t\n\tpublic function dopplerVelocity (value:Float):Void {\n\t\t\n\t\tAL.dopplerVelocity (value);\n\t\t\n\t}\n\t\n\t\n\tpublic function enable (capability:Int):Void {\n\t\t\n\t\tAL.enable (capability);\n\t\t\n\t}\n\t\n\t\n\t@:deprecated public function genSource ():ALSource {\n\t\t\n\t\treturn createSource ();\n\t\t\n\t}\n\t\n\t\n\tpublic function genSources (n:Int):Array<ALSource> {\n\t\t\n\t\treturn AL.genSources (n);\n\t\t\n\t}\n\t\n\t\n\t@:deprecated public function genBuffer ():ALBuffer {\n\t\t\n\t\treturn createBuffer ();\n\t\t\n\t}\n\t\n\t\n\tpublic function genBuffers (n:Int):Array<ALBuffer> {\n\t\t\n\t\treturn AL.genBuffers (n);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBoolean (param:Int):Bool {\n\t\t\n\t\treturn AL.getBoolean (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBooleanv (param:Int, count:Int = 1 ):Array<Bool> {\n\t\t\n\t\treturn AL.getBooleanv (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBuffer3f (buffer:ALBuffer, param:Int):Array<Float> {\n\t\t\n\t\treturn AL.getBuffer3f (buffer, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBuffer3i (buffer:ALBuffer, param:Int):Array<Int> {\n\t\t\n\t\treturn AL.getBuffer3i (buffer, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBufferf (buffer:ALBuffer, param:Int):Float {\n\t\t\n\t\treturn AL.getBufferf (buffer, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBufferfv (buffer:ALBuffer, param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\treturn AL.getBufferfv (buffer, param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBufferi (buffer:ALBuffer, param:Int):Int {\n\t\t\n\t\treturn AL.getBufferi (buffer, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBufferiv (buffer:ALBuffer, param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\treturn AL.getBufferiv (buffer, param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getDouble (param:Int):Float {\n\t\t\n\t\treturn AL.getDouble (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getDoublev (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\treturn AL.getDoublev (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getEnumValue (ename:String):Int {\n\t\t\n\t\treturn AL.getEnumValue (ename);\n\t\t\n\t}\n\t\n\t\n\tpublic function getError ():Int {\n\t\t\n\t\treturn AL.getError ();\n\t\t\n\t}\n\t\n\t\n\tpublic function getErrorString ():String {\n\t\t\n\t\treturn AL.getErrorString ();\n\t\t\n\t}\n\t\n\t\n\tpublic function getFloat (param:Int):Float {\n\t\t\n\t\treturn AL.getFloat (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getFloatv (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\treturn AL.getFloatv (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getInteger (param:Int):Int {\n\t\t\n\t\treturn AL.getInteger (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getIntegerv (param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\treturn AL.getIntegerv (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListener3f (param:Int):Array<Float> {\n\t\t\n\t\treturn AL.getListener3f (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListener3i (param:Int):Array<Int> {\n\t\t\n\t\treturn AL.getListener3i (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListenerf (param:Int):Float {\n\t\t\n\t\treturn AL.getListenerf (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListenerfv (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\treturn AL.getListenerfv (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListeneri (param:Int):Int {\n\t\t\n\t\treturn AL.getListeneri (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getListeneriv (param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\treturn AL.getListeneriv (param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getProcAddress (fname:String):Dynamic {\n\t\t\n\t\treturn AL.getProcAddress (fname);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSource3f (source:ALSource, param:Int):Array<Float> {\n\t\t\n\t\treturn AL.getSource3f (source, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSourcef (source:ALSource, param:Int):Float {\n\t\t\n\t\treturn AL.getSourcef (source, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSource3i (source:ALSource, param:Int):Array<Int> {\n\t\t\n\t\treturn AL.getSource3i (source, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSourcefv (source:ALSource, param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\treturn AL.getSourcefv (source, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSourcei (source:ALSource, param:Int):Dynamic {\n\t\t\n\t\treturn AL.getSourcei (source, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSourceiv (source:ALSource, param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\treturn AL.getSourceiv (source, param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getString (param:Int):String {\n\t\t\n\t\treturn AL.getString (param);\n\t\t\n\t}\n\t\n\t\n\tpublic function isBuffer (buffer:ALBuffer):Bool {\n\t\t\n\t\treturn AL.isBuffer (buffer);\n\t\t\n\t}\t\n\t\n\t\n\tpublic function isEnabled (capability:Int):Bool {\n\t\t\n\t\treturn AL.isEnabled (capability);\n\t\t\n\t}\n\t\n\t\n\tpublic function isExtensionPresent (extname:String):Bool {\n\t\t\n\t\treturn AL.isExtensionPresent (extname);\n\t\t\n\t}\n\t\n\t\n\tpublic function isSource (source:ALSource):Bool {\n\t\t\n\t\treturn AL.isSource (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function listener3f (param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\tAL.listener3f (param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function listener3i (param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\tAL.listener3i (param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function listenerf (param:Int, value:Float):Void {\n\t\t\n\t\tAL.listenerf (param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function listenerfv (param:Int, values:Array<Float>):Void {\n\t\t\n\t\tAL.listenerfv (param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function listeneri (param:Int, value:Int):Void {\n\t\t\n\t\tAL.listeneri (param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function listeneriv (param:Int, values:Array<Int>):Void {\n\t\t\n\t\tAL.listeneriv (param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function source3f (source:ALSource, param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\tAL.source3f (source, param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function source3i (source:ALSource, param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\tAL.source3i (source, param, value1, value2, value3);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcef (source:ALSource, param:Int, value:Float):Void {\n\t\t\n\t\tAL.sourcef (source, param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcefv (source:ALSource, param:Int, values:Array<Float>):Void {\n\t\t\n\t\tAL.sourcefv (source, param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcei (source:ALSource, param:Int, value:Dynamic):Void {\n\t\t\n\t\tAL.sourcei (source, param, value);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceiv (source:ALSource, param:Int, values:Array<Int>):Void {\n\t\t\n\t\tAL.sourceiv (source, param, values);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcePlay (source:ALSource):Void {\n\t\t\n\t\tAL.sourcePlay (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcePlayv (sources:Array<ALSource>):Void {\n\t\t\n\t\tAL.sourcePlayv (sources);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceStop (source:ALSource):Void {\n\t\t\n\t\tAL.sourceStop (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceStopv (sources:Array<ALSource>):Void {\n\t\t\n\t\tAL.sourceStopv (sources);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceRewind (source:ALSource):Void {\n\t\t\n\t\tAL.sourceRewind (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceRewindv (sources:Array<ALSource>):Void {\n\t\t\n\t\tAL.sourceRewindv (sources);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcePause (source:ALSource):Void {\n\t\t\n\t\tAL.sourcePause (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourcePausev (sources:Array<ALSource>):Void {\n\t\t\n\t\tAL.sourcePausev (sources);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceQueueBuffer (source:ALSource, buffer:ALBuffer):Void {\n\t\t\n\t\tAL.sourceQueueBuffer (source, buffer);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceQueueBuffers (source:ALSource, nb:Int, buffers:Array<ALBuffer>):Void {\n\t\t\n\t\tAL.sourceQueueBuffers (source, nb, buffers);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceUnqueueBuffer (source:ALSource):Int {\n\t\t\n\t\treturn AL.sourceUnqueueBuffer (source);\n\t\t\n\t}\n\t\n\t\n\tpublic function sourceUnqueueBuffers (source:ALSource, nb:Int):Array<ALBuffer> {\n\t\t\n\t\treturn AL.sourceUnqueueBuffers (source, nb);\n\t\t\n\t}\n\t\n\t\n\tpublic function speedOfSound (value:Float):Void {\n\t\t\n\t\tAL.speedOfSound (value);\n\t\t\n\t}\n\t\n\t\n}","package lime.media;\n\n\nimport lime.media.openal.ALC;\nimport lime.media.openal.ALContext;\nimport lime.media.openal.ALDevice;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass ALCAudioContext {\n\t\n\t\n\tpublic var FALSE:Int = 0;\n\tpublic var TRUE:Int = 1;\n\tpublic var FREQUENCY:Int = 0x1007;\n\tpublic var REFRESH:Int = 0x1008;\n\tpublic var SYNC:Int = 0x1009;\n\tpublic var MONO_SOURCES:Int = 0x1010;\n\tpublic var STEREO_SOURCES:Int = 0x1011;\n\tpublic var NO_ERROR:Int = 0;\n\tpublic var INVALID_DEVICE:Int = 0xA001;\n\tpublic var INVALID_CONTEXT:Int = 0xA002;\n\tpublic var INVALID_ENUM:Int = 0xA003;\n\tpublic var INVALID_VALUE:Int = 0xA004;\n\tpublic var OUT_OF_MEMORY:Int = 0xA005;\n\tpublic var ATTRIBUTES_SIZE:Int = 0x1002;\n\tpublic var ALL_ATTRIBUTES:Int = 0x1003;\n\tpublic var DEFAULT_DEVICE_SPECIFIER:Int = 0x1004;\n\tpublic var DEVICE_SPECIFIER:Int = 0x1005;\n\tpublic var EXTENSIONS:Int = 0x1006;\n\tpublic var ENUMERATE_ALL_EXT:Int = 1;\n\tpublic var DEFAULT_ALL_DEVICES_SPECIFIER:Int = 0x1012;\n\tpublic var ALL_DEVICES_SPECIFIER:Int = 0x1013;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function closeDevice (device:ALDevice):Bool {\n\t\t\n\t\treturn ALC.closeDevice (device);\n\t\t\n\t}\n\t\n\t\n\tpublic function createContext (device:ALDevice, attrlist:Array<Int> = null):ALContext {\n\t\t\n\t\treturn ALC.createContext (device, attrlist);\n\t\t\n\t}\n\t\n\t\n\tpublic function destroyContext (context:ALContext):Void {\n\t\t\n\t\tALC.destroyContext (context);\n\t\t\n\t}\n\t\n\t\n\tpublic function getContextsDevice (context:ALContext):ALDevice {\n\t\t\n\t\treturn ALC.getContextsDevice (context);\n\t\t\n\t}\n\t\n\t\n\tpublic function getCurrentContext ():ALContext {\n\t\t\n\t\treturn ALC.getCurrentContext ();\n\t\t\n\t}\n\t\n\t\n\tpublic function getError (device:ALDevice):Int {\n\t\t\n\t\treturn ALC.getError (device);\n\t\t\n\t}\n\t\n\t\n\tpublic function getErrorString (device:ALDevice):String {\n\t\t\n\t\treturn ALC.getErrorString (device);\n\t\t\n\t}\n\t\n\t\n\tpublic function getIntegerv (device:ALDevice, param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\treturn ALC.getIntegerv (device, param, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function getString (device:ALDevice, param:Int):String {\n\t\t\n\t\treturn ALC.getString (device, param);\n\t\t\n\t}\n\t\n\t\n\tpublic function makeContextCurrent (context:ALContext):Bool {\n\t\t\n\t\treturn ALC.makeContextCurrent (context);\n\t\t\n\t}\n\t\n\t\n\tpublic function openDevice (deviceName:String = null):ALDevice {\n\t\t\n\t\treturn ALC.openDevice (deviceName);\n\t\t\n\t}\n\t\n\t\n\tpublic function pauseDevice (device:ALDevice):Void {\n\t\t\n\t\tALC.pauseDevice (device);\n\t\t\n\t}\n\t\n\t\n\tpublic function processContext (context:ALContext):Void {\n\t\t\n\t\tALC.processContext (context);\n\t\t\n\t}\n\t\n\t\n\tpublic function resumeDevice (device:ALDevice):Void {\n\t\t\n\t\tALC.resumeDevice (device);\n\t\t\n\t}\n\t\n\t\n\tpublic function suspendContext (context:ALContext):Void {\n\t\t\n\t\tALC.suspendContext (context);\n\t\t\n\t}\n\t\n\t\n}","package lime.media;\n\n\nimport haxe.crypto.Base64;\nimport haxe.io.Bytes;\nimport haxe.io.Path;\nimport lime._backend.native.NativeCFFI;\nimport lime.app.Future;\nimport lime.app.Promise;\nimport lime.media.codecs.vorbis.VorbisFile;\nimport lime.media.openal.AL;\nimport lime.media.openal.ALBuffer;\nimport lime.net.HTTPRequest;\nimport lime.utils.Log;\nimport lime.utils.UInt8Array;\n\n#if howlerjs\nimport lime.media.howlerjs.Howl;\n#end\n#if (js && html5)\nimport js.html.Audio;\n#elseif flash\nimport flash.media.Sound;\nimport flash.net.URLRequest;\n#elseif lime_console\nimport lime.media.fmod.FMODMode;\nimport lime.media.fmod.FMODSound;\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n@:access(lime.Assets)\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass AudioBuffer {\n\t\n\t\n\tpublic var bitsPerSample:Int;\n\tpublic var channels:Int;\n\tpublic var data:UInt8Array;\n\tpublic var sampleRate:Int;\n\tpublic var src (get, set):Dynamic;\n\t\n\t@:noCompletion private var __srcAudio:#if (js && html5) Audio #else Dynamic #end;\n\t@:noCompletion private var __srcBuffer:#if lime_cffi ALBuffer #else Dynamic #end;\n\t@:noCompletion private var __srcCustom:Dynamic;\n\t@:noCompletion private var __srcFMODSound:#if lime_console FMODSound #else Dynamic #end;\n\t@:noCompletion private var __srcHowl:#if howlerjs Howl #else Dynamic #end;\n\t@:noCompletion private var __srcSound:#if flash Sound #else Dynamic #end;\n\t@:noCompletion private var __srcVorbisFile:#if lime_vorbis VorbisFile #else Dynamic #end;\n\t\n\t\n\t#if (js && html5 && es5get)\n\tprivate static function __init__ () {\n\t\t\n\t\tvar p = untyped AudioBuffer.prototype;\n\t\tuntyped Object.defineProperties (p, {\n\t\t\t\"src\": { get: p.get_src, set: p.set_src }\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function dispose ():Void {\n\t\t\n\t\t#if (js && html5 && howlerjs)\n\t\t\n\t\t__srcHowl.unload ();\n\t\t\n\t\t#elseif lime_console\n\t\tif (channels > 0) {\n\t\t\t\n\t\t\tsrc.release ();\n\t\t\tchannels = 0;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if lime_console\n\t@:void\n\tprivate static function finalize (a:AudioBuffer):Void {\n\t\t\n\t\ta.dispose ();\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function fromBase64 (base64String:String):AudioBuffer {\n\t\t\n\t\tif (base64String == null) return null;\n\t\t\n\t\t#if (js && html5 && howlerjs)\n\t\t\n\t\t// if base64String doesn't contain codec data, add it.\n\t\tif (base64String.indexOf(\",\") == -1) {\n\t\t\t\n\t\t\tbase64String = \"data:\" + __getCodec (Base64.decode (base64String)) + \";base64,\" + base64String;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar\taudioBuffer = new AudioBuffer ();\n\t\taudioBuffer.src = new Howl ({ src: [ base64String ], html5: true, preload: false });\n\t\treturn audioBuffer;\n\t\t\n\t\t#elseif lime_console\n\t\t\n\t\tlime.Lib.notImplemented (\"AudioBuffer.fromBase64\");\n\t\t\n\t\t#elseif (lime_cffi && !macro)\n\t\t#if !cs\n\t\t\n\t\t// if base64String contains codec data, strip it then decode it.\n\t\tvar base64StringSplit = base64String.split (\",\");\n\t\tvar base64StringNoEncoding = base64StringSplit[base64StringSplit.length - 1];\n\t\tvar bytes: Bytes = Base64.decode (base64StringNoEncoding);\n\t\tvar audioBuffer = new AudioBuffer ();\n\t\taudioBuffer.data = new UInt8Array (Bytes.alloc (0));\n\t\t\n\t\treturn NativeCFFI.lime_audio_load (bytes, audioBuffer);\n\t\t\n\t\t#else\n\t\t\n\t\t// if base64String contains codec data, strip it then decode it.\n\t\tvar base64StringSplit = base64String.split (\",\");\n\t\tvar base64StringNoEncoding = base64StringSplit[base64StringSplit.length - 1];\n\t\tvar bytes: Bytes = Base64.decode (base64StringNoEncoding);\n\t\tvar data:Dynamic = NativeCFFI.lime_audio_load (bytes, null);\n\t\t\n\t\tif (data != null) {\n\t\t\t\n\t\t\tvar audioBuffer = new AudioBuffer ();\n\t\t\taudioBuffer.bitsPerSample = data.bitsPerSample;\n\t\t\taudioBuffer.channels = data.channels;\n\t\t\taudioBuffer.data = new UInt8Array (@:privateAccess new Bytes (data.data.length, data.data.b));\n\t\t\taudioBuffer.sampleRate = data.sampleRate;\n\t\t\treturn audioBuffer;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:Bytes):AudioBuffer {\n\t\t\n\t\tif (bytes == null) return null;\n\t\t\n\t\t#if (js && html5 && howlerjs)\n\t\t\n\t\tvar\taudioBuffer = new AudioBuffer ();\n\t\taudioBuffer.src = new Howl ({ src: [ \"data:\" + __getCodec (bytes) + \";base64,\" + Base64.encode (bytes) ], html5: true, preload: false });\n\t\t\n\t\treturn audioBuffer;\n\t\t\n\t\t#elseif lime_console\n\t\t\n\t\tlime.Lib.notImplemented (\"AudioBuffer.fromBytes\");\n\t\t\n\t\t#elseif (lime_cffi && !macro)\n\t\t#if !cs\n\t\t\n\t\tvar audioBuffer = new AudioBuffer ();\n\t\taudioBuffer.data = new UInt8Array (Bytes.alloc (0));\n\t\t\n\t\treturn NativeCFFI.lime_audio_load (bytes, audioBuffer);\n\t\t\n\t\t#else\n\t\t\n\t\tvar data:Dynamic = NativeCFFI.lime_audio_load (bytes, null);\n\t\t\n\t\tif (data != null) {\n\t\t\t\n\t\t\tvar audioBuffer = new AudioBuffer ();\n\t\t\taudioBuffer.bitsPerSample = data.bitsPerSample;\n\t\t\taudioBuffer.channels = data.channels;\n\t\t\taudioBuffer.data = new UInt8Array (@:privateAccess new Bytes (data.data.length, data.data.b));\n\t\t\taudioBuffer.sampleRate = data.sampleRate;\n\t\t\treturn audioBuffer;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String):AudioBuffer {\n\t\t\n\t\tif (path == null) return null;\n\t\t\n\t\t#if (js && html5 && howlerjs)\n\t\t\n\t\tvar audioBuffer = new AudioBuffer ();\n\t\taudioBuffer.__srcHowl = new Howl ({ src: [ path ], preload: false });\n\t\treturn audioBuffer;\n\t\t\n\t\t#elseif flash\n\t\t\n\t\tswitch (Path.extension (path)) {\n\t\t\t\n\t\t\tcase \"ogg\", \"wav\": return null;\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\tvar audioBuffer = new AudioBuffer ();\n\t\taudioBuffer.__srcSound = new Sound (new URLRequest (path));\n\t\treturn audioBuffer;\n\t\t\n\t\t#elseif lime_console\n\t\t\n\t\tvar mode = StringTools.endsWith(path, \".wav\") ? FMODMode.LOOP_OFF : FMODMode.LOOP_NORMAL;\n\t\tvar sound:FMODSound = FMODSound.fromFile (path, mode);\n\t\t\n\t\tif (sound.valid) {\n\t\t\t\n\t\t\t// TODO(james4k): AudioBuffer needs sound info filled in\n\t\t\t// TODO(james4k): probably move fmod.Sound creation to AudioSource,\n\t\t\t// and keep AudioBuffer as raw data. not as efficient for typical\n\t\t\t// use, but probably less efficient to do complex copy-on-read\n\t\t\t// mechanisms and such. also, what do we do for compressed sounds?\n\t\t\t// usually don't want to decompress large music files. I suppose we\n\t\t\t// can specialize for those and not allow data access.\n\t\t\tvar audioBuffer = new AudioBuffer ();\n\t\t\taudioBuffer.bitsPerSample = 0;\n\t\t\taudioBuffer.channels = 1;\n\t\t\taudioBuffer.data = null;\n\t\t\taudioBuffer.sampleRate = 0;\n\t\t\taudioBuffer.__srcFMODSound = sound;\n\t\t\tcpp.vm.Gc.setFinalizer (audioBuffer, cpp.Function.fromStaticFunction (finalize));\n\t\t\treturn audioBuffer;\n\t\t\t\n\t\t}\n\t\t\n\t\t#elseif (lime_cffi && !macro)\n\t\t#if !cs\n\t\t\n\t\tvar audioBuffer = new AudioBuffer ();\n\t\taudioBuffer.data = new UInt8Array (Bytes.alloc (0));\n\t\t\n\t\treturn NativeCFFI.lime_audio_load (path, audioBuffer);\n\t\t\n\t\t#else\n\t\t\n\t\tvar data:Dynamic = NativeCFFI.lime_audio_load (path, null);\n\t\t\n\t\tif (data != null) {\n\t\t\t\n\t\t\tvar audioBuffer = new AudioBuffer ();\n\t\t\taudioBuffer.bitsPerSample = data.bitsPerSample;\n\t\t\taudioBuffer.channels = data.channels;\n\t\t\taudioBuffer.data = new UInt8Array (@:privateAccess new Bytes (data.data.length, data.data.b));\n\t\t\taudioBuffer.sampleRate = data.sampleRate;\n\t\t\treturn audioBuffer;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\n\t// rename to \"fromSprite\" to better match the convention\n\tpublic static function makeSprite(spritePaths:Array<String>, spriteIndex:Map<String, Dynamic>, ?preload:Bool):AudioBuffer {\n\t\t#if (js && html5 && howlerjs)\n\t\t\n\t\tvar audioBuffer = new AudioBuffer();\n\n\t\tvar spriteIn = new Map<String, Dynamic>();\n\t\tfor (key in spriteIndex.keys()) {\n\t\t\tvar val:Dynamic = spriteIndex.get(key);\n\t\t\tReflect.setField(spriteIn, key, val);\n\t\t}\n\n\t\tif (preload == true) {\n\t\t\ttrace('HowlerJS preload not supported with soundSprites, as they\\'re loaded ASAP anyway.');\n\t\t\ttrace('Ignoring your request for preload.');\n\t\t\tpreload = false;\n\t\t}\n\n\t\taudioBuffer.__srcHowl = new Howl ({\n\t\t\tsrc: spritePaths,\n\t\t\tsprite: spriteIn,\n\t\t\tpreload: (preload == null ? false : preload)\n\t\t});\n\n\t\treturn audioBuffer;\n\t#else\n\treturn new AudioBuffer();\n\t#end\n\t}\n\n\tpublic static function fromFiles (paths:Array<String>):AudioBuffer {\n\t\t\n\t\t#if (js && html5 && howlerjs)\n\t\t\n\t\tvar audioBuffer = new AudioBuffer ();\n\t\taudioBuffer.__srcHowl = new Howl ({ src: paths, preload: false });\n\t\treturn audioBuffer;\n\t\t\n\t\t#else\n\t\t\n\t\tvar buffer = null;\n\t\t\n\t\tfor (path in paths) {\n\t\t\t\n\t\t\tbuffer = AudioBuffer.fromFile (path);\n\t\t\tif (buffer != null) break;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn buffer;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if lime_vorbis\n\t\n\tpublic static function fromVorbisFile (vorbisFile:VorbisFile):AudioBuffer {\n\t\t\n\t\tif (vorbisFile == null) return null;\n\t\t\n\t\tvar info = vorbisFile.info ();\n\t\t\n\t\tvar audioBuffer = new AudioBuffer ();\n\t\taudioBuffer.channels = info.channels;\n\t\taudioBuffer.sampleRate = info.rate;\n\t\taudioBuffer.bitsPerSample = 16;\n\t\taudioBuffer.__srcVorbisFile = vorbisFile;\n\t\t\n\t\treturn audioBuffer;\n\t\t\n\t}\n\t\n\t#else\n\t\n\tpublic static function fromVorbisFile (vorbisFile:Dynamic):AudioBuffer {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t#end\n\t\n\t\n\tpublic static function loadFromFile (path:String):Future<AudioBuffer> {\n\t\t\n\t\t#if (flash || (js && html5))\n\t\t\n\t\tvar promise = new Promise<AudioBuffer> ();\n\t\t\n\t\tvar audioBuffer = AudioBuffer.fromFile (path);\n\t\t\n\t\tif (audioBuffer != null) {\n\t\t\t\n\t\t\t#if flash\n\t\t\t\n\t\t\taudioBuffer.__srcSound.addEventListener (flash.events.Event.COMPLETE, function (event) {\n\t\t\t\t\n\t\t\t\tpromise.complete (audioBuffer);\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t\taudioBuffer.__srcSound.addEventListener (flash.events.ProgressEvent.PROGRESS, function (event) {\n\t\t\t\t\n\t\t\t\tpromise.progress (event.bytesLoaded, event.bytesTotal);\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t\taudioBuffer.__srcSound.addEventListener (flash.events.IOErrorEvent.IO_ERROR, promise.error);\n\t\t\t\n\t\t\t#elseif (js && html5 && howlerjs)\n\t\t\t\n\t\t\t\taudioBuffer.__srcHowl.on (\"load\", function () {\n\t\t\t\t\t\n\t\t\t\t\tpromise.complete (audioBuffer);\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\taudioBuffer.__srcHowl.on (\"loaderror\", function (id, msg) {\n\t\t\t\t\t\n\t\t\t\t\tpromise.error (msg);\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\taudioBuffer.__srcHowl.load ();\n\t\t\t\t\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tpromise.complete (audioBuffer);\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.error (null);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn promise.future;\n\t\t\n\t\t#else\n\t\t\n\t\t// TODO: Streaming\n\t\t\n\t\tvar request = new HTTPRequest<AudioBuffer> ();\n\t\treturn request.load (path).then (function (buffer) {\n\t\t\t\n\t\t\tif (buffer != null) {\n\t\t\t\t\n\t\t\t\treturn Future.withValue (buffer);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn cast Future.withError (\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromFiles (paths:Array<String>, ?baseBuffer:AudioBuffer):Future<AudioBuffer> {\n\t\t\n\t\tvar promise = new Promise<AudioBuffer> ();\n\t\t\n\t\t#if (js && html5 && howlerjs)\n\t\t\n\t\tvar audioBuffer = null;\n\t\tif (baseBuffer == null)\n\t\t\taudioBuffer = AudioBuffer.fromFiles (paths);\n\t  else\n\t\t\taudioBuffer = baseBuffer;\n\t\t\n\t\tif (audioBuffer != null) {\n\t\t\t\n\t\t\taudioBuffer.__srcHowl.on (\"load\", function () {\n\t\t\t\t\n\t\t\t\ttrace('loadFromFiles done; HowlerJS load event fired.');\n\t\t\t\ttrace('paths supplied: ' + paths);\n\t\t\t\tpromise.complete (audioBuffer);\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t\taudioBuffer.__srcHowl.on (\"loaderror\", function () {\n\t\t\t\t\n\t\t\t\tpromise.error (null);\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t\taudioBuffer.__srcHowl.load ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.error (null);\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tpromise.completeWith (new Future<AudioBuffer> (function () return fromFiles (paths), true));\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __getCodec (bytes:Bytes):String {\n\t\t\n\t\tvar signature = bytes.getString (0, 4);\n\t\t\n\t\tswitch (signature) {\n\t\t\t\n\t\t\tcase \"OggS\": return \"audio/ogg\";\n\t\t\tcase \"fLaC\": return \"audio/flac\";\n\t\t\tcase \"RIFF\" if (bytes.getString (8, 4) == \"WAVE\"): return \"audio/wav\";\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tif (bytes.getString (0, 3) == \"ID3\" || bytes.getString (0, 2) == \"ÿû\") {\n\t\t\t\t\t\n\t\t\t\t\treturn \"audio/mp3\";\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tLog.error (\"Unsupported sound format\");\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_src ():Dynamic {\n\t\t\n\t\t#if (js && html5)\n\t\t#if howlerjs\n\t\t\n\t\treturn __srcHowl;\n\t\t\n\t\t#else\n\t\t\n\t\treturn __srcAudio;\n\t\t\n\t\t#end\n\t\t#elseif flash\n\t\t\n\t\treturn __srcSound;\n\t\t\n\t\t#elseif lime_console\n\t\t\n\t\treturn __srcFMODSound;\n\t\t\n\t\t#elseif lime_vorbis\n\t\t\n\t\treturn __srcVorbisFile;\n\t\t\n\t\t#else\n\t\t\n\t\treturn __srcCustom;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function set_src (value:Dynamic):Dynamic {\n\t\t\n\t\t#if (js && html5)\n\t\t#if howlerjs\n\t\t\n\t\treturn __srcHowl = value;\n\t\t\n\t\t#else\n\t\t\n\t\treturn __srcAudio = value;\n\t\t\n\t\t#end\n\t\t#elseif flash\n\t\t\n\t\treturn __srcSound = value;\n\t\t\n\t\t#elseif lime_console\n\t\t\n\t\treturn __srcFMODSound = value;\n\t\t\n\t\t#elseif lime_vorbis\n\t\t\n\t\treturn __srcVorbisFile = value;\n\t\t\n\t\t#else\n\t\t\n\t\treturn __srcCustom = value;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}\n","package lime.media;\n\n\nimport lime.media.openal.AL;\nimport lime.media.openal.ALC;\nimport lime.media.openal.ALContext;\nimport lime.media.openal.ALDevice;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass AudioManager {\n\t\n\t\n\tpublic static var context:AudioContext;\n\t\n\t\n\tpublic static function init (context:AudioContext = null) {\n\t\t\n\t\tif (AudioManager.context == null) {\n\t\t\t\n\t\t\tif (context == null) {\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\tuntyped __js__ (\"window.AudioContext = window.AudioContext || window.webkitAudioContext;\");\n\t\t\t\t\t\tAudioManager.context = WEB (cast untyped __js__ (\"new AudioContext ()\"));\n\t\t\t\t\t\t\n\t\t\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tAudioManager.context = HTML5 (new HTML5AudioContext ());\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t#elseif flash\n\t\t\t\t\t\n\t\t\t\t\tAudioManager.context = FLASH (new FlashAudioContext ());\n\t\t\t\t\t\n\t\t\t\t#elseif lime_console\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\tAudioManager.context = CUSTOM (null);\n\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\t\n\t\t\t\t\tAudioManager.context = OPENAL (new ALCAudioContext (), new ALAudioContext ());\n\t\t\t\t\t\n\t\t\t\t\tvar device = ALC.openDevice ();\n\t\t\t\t\tvar ctx = ALC.createContext (device);\n\t\t\t\t\tALC.makeContextCurrent (ctx);\n\t\t\t\t\tALC.processContext (ctx);\n\t\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tAudioManager.context = context;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function resume ():Void {\n\t\t\n\t\tif (context != null) {\n\t\t\t\n\t\t\tswitch (context) {\n\t\t\t\t\n\t\t\t\tcase OPENAL (alc, al):\n\t\t\t\t\t\n\t\t\t\t\tvar currentContext = alc.getCurrentContext ();\n\t\t\t\t\t\n\t\t\t\t\tif (currentContext != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar device = alc.getContextsDevice (currentContext);\n\t\t\t\t\t\talc.resumeDevice (device);\n\t\t\t\t\t\talc.processContext (currentContext);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function shutdown ():Void {\n\t\t\n\t\tif (context != null) {\n\t\t\t\n\t\t\tswitch (context) {\n\t\t\t\t\n\t\t\t\tcase OPENAL (alc, al):\n\t\t\t\t\t\n\t\t\t\t\tvar currentContext = alc.getCurrentContext ();\n\t\t\t\t\t\n\t\t\t\t\tif (currentContext != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar device = alc.getContextsDevice (currentContext);\n\t\t\t\t\t\talc.makeContextCurrent (null);\n\t\t\t\t\t\talc.destroyContext (currentContext);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (device != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\talc.closeDevice (device);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcontext = null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function suspend ():Void {\n\t\t\n\t\tif (context != null) {\n\t\t\t\n\t\t\tswitch (context) {\n\t\t\t\t\n\t\t\t\tcase OPENAL (alc, al):\n\t\t\t\t\t\n\t\t\t\t\tvar currentContext = alc.getCurrentContext ();\n\t\t\t\t\t\n\t\t\t\t\tif (currentContext != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\talc.suspendContext (currentContext);\n\t\t\t\t\t\tvar device = alc.getContextsDevice (currentContext);\n\t\t\t\t\t\talc.pauseDevice (device);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n","package lime.media;\n\nimport lime.app.Event;\nimport lime.media.openal.AL;\nimport lime.media.openal.ALSource;\nimport lime.math.Vector4;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass AudioSource {\n\t\n\t\n\tpublic var onComplete = new Event<Void->Void> ();\n\t\n\tpublic var buffer:AudioBuffer;\n\tpublic var currentTime (get, set):Int;\n\tpublic var gain (get, set):Float;\n\tpublic var length (get, set):Int;\n\tpublic var loops (get, set):Int;\n\tpublic var offset:Int;\n\tpublic var position (get, set):Vector4;\n\t\n\t@:noCompletion private var backend:AudioSourceBackend;\n\t\n\t\n\tpublic function new (buffer:AudioBuffer = null, offset:Int = 0, length:Null<Int> = null, loops:Int = 0) {\n\t\t\n\t\tthis.buffer = buffer;\n\t\tthis.offset = offset;\n\t\t\n\t\tbackend = new AudioSourceBackend (this);\n\t\t\n\t\tif (length != null && length != 0) {\n\t\t\t\n\t\t\tthis.length = length;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.loops = loops;\n\t\t\n\t\tif (buffer != null) {\n\t\t\t\n\t\t\tinit ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function dispose ():Void {\n\t\t\n\t\tbackend.dispose ();\n\t\t\n\t}\n\t\n\t\n\tprivate function init ():Void {\n\t\t\n\t\tbackend.init ();\n\t\t\n\t}\n\t\n\t\n\tpublic function play (?spriteKey:String):Void {\n\t\t\n    #if howlerjs\n    if (spriteKey != null)\n  \t\tbackend.play (spriteKey);\n    else\n    #end\n  \t\tbackend.play ();\n\n\t\t\n\t}\n\t\n\t\n\tpublic function pause ():Void {\n\t\t\n\t\tbackend.pause ();\n\t\t\n\t}\n\t\n\t\n\tpublic function stop ():Void {\n\t\t\n\t\tbackend.stop ();\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_currentTime ():Int {\n\t\t\n\t\treturn backend.getCurrentTime ();\n\t\t\n\t}\n\t\n\t\n\tprivate function set_currentTime (value:Int):Int {\n\t\t\n\t\treturn backend.setCurrentTime (value);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_gain ():Float {\n\t\t\n\t\treturn backend.getGain ();\n\t\t\n\t}\n\t\n\t\n\tprivate function set_gain (value:Float):Float {\n\t\t\n\t\treturn backend.setGain (value);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_length ():Int {\n\t\t\n\t\treturn backend.getLength ();\n\t\t\n\t}\n\t\n\t\n\tprivate function set_length (value:Int):Int {\n\t\t\n\t\treturn backend.setLength (value);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_loops ():Int {\n\t\t\n\t\treturn backend.getLoops ();\n\t\t\n\t}\n\t\n\t\n\tprivate function set_loops (value:Int):Int {\n\t\t\n\t\treturn backend.setLoops (value);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_position ():Vector4 {\n\t\t\n\t\treturn backend.getPosition ();\n\t\t\n\t}\n\t\n\t\n\tprivate function set_position (value:Vector4):Vector4 {\n\t\t\n\t\treturn backend.setPosition (value);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if flash\n@:noCompletion private typedef AudioSourceBackend = lime._backend.flash.FlashAudioSource;\n#elseif (js && html5)\n@:noCompletion private typedef AudioSourceBackend = lime._backend.html5.HTML5AudioSource;\n#else\n@:noCompletion private typedef AudioSourceBackend = lime._backend.native.NativeAudioSource;\n#end\n","package lime.media;\n\n\n#if flash\nimport flash.media.Sound;\n#end\n\n\nclass FlashAudioContext {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function createBuffer (stream:Dynamic /*URLRequest*/ = null, context:Dynamic /*SoundLoaderContext*/ = null):AudioBuffer {\n\t\t\n\t\t#if flash\n\t\tvar buffer = new AudioBuffer ();\n\t\tbuffer.src = new Sound (stream, context);\n\t\treturn buffer;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function getBytesLoaded (buffer:AudioBuffer):UInt {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.bytesLoaded;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getBytesTotal (buffer:AudioBuffer):Int {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.bytesTotal;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getID3 (buffer:AudioBuffer):Dynamic /*ID3Info*/ {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.id3;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getIsBuffering (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.isBuffering;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getIsURLInaccessible (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.isURLInaccessible;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLength (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.length;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getURL (buffer:AudioBuffer):String {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.url;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function close (buffer:AudioBuffer):Void {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.close ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function extract (buffer:AudioBuffer, target:Dynamic /*flash.utils.ByteArray*/, length:Float, startPosition:Float = -1):Float {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.extract (target, length, startPosition);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function load (buffer:AudioBuffer, stream:Dynamic /*flash.net.URLRequest*/, context:Dynamic /*SoundLoaderContext*/ = null):Void {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.load (stream, context);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function loadCompressedDataFromByteArray (buffer:AudioBuffer, bytes:Dynamic /*flash.utils.ByteArray*/, bytesLength:UInt):Void {\n\t\t\n\t\t#if flash11\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.loadCompressedDataFromByteArray (bytes, bytesLength);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function loadPCMFromByteArray (buffer:AudioBuffer, bytes:Dynamic /*flash.utils.ByteArray*/, samples:UInt, format:String = null, stereo:Bool = true, sampleRate:Float = 44100):Void {\n\t\t\n\t\t#if flash11\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\tbuffer.src.loadPCMFromByteArray (bytes, samples, format, stereo, sampleRate);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function play (buffer:AudioBuffer, startTime:Float = 0, loops:Int = 0, sndTransform:Dynamic /*SoundTransform*/ = null):Dynamic /*SoundChannel*/ {\n\t\t\n\t\t#if flash\n\t\tif (buffer.src != null) {\n\t\t\t\n\t\t\treturn buffer.src.play (startTime, loops, sndTransform);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n}","package lime.media;\n\n\n#if (js && html5)\nimport js.html.Audio;\n#end\n\n@:access(lime.media.AudioBuffer)\n\n\nclass HTML5AudioContext {\n\t\n\t\n\tpublic var HAVE_CURRENT_DATA:Int = 2;\n\tpublic var HAVE_ENOUGH_DATA:Int = 4;\n\tpublic var HAVE_FUTURE_DATA:Int = 3;\n\tpublic var HAVE_METADATA:Int = 1;\n\tpublic var HAVE_NOTHING:Int = 0;\n\tpublic var NETWORK_EMPTY:Int = 0;\n\tpublic var NETWORK_IDLE:Int = 1;\n\tpublic var NETWORK_LOADING:Int = 2;\n\tpublic var NETWORK_NO_SOURCE:Int = 3;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function canPlayType (buffer:AudioBuffer, type:String):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.canPlayType (type);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function createBuffer (urlString:String = null):AudioBuffer {\n\t\t\n\t\t#if (js && html5)\n\t\tvar buffer = new AudioBuffer ();\n\t\tbuffer.__srcAudio = new Audio ();\n\t\tbuffer.__srcAudio.src = urlString;\n\t\treturn buffer;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function getAutoplay (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.autoplay;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getBuffered (buffer:AudioBuffer):Dynamic /*TimeRanges*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.buffered;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getCurrentSrc (buffer:AudioBuffer):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.currentSrc;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getCurrentTime (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.currentTime;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getDefaultPlaybackRate (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.defaultPlaybackRate;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 1;\n\t\t\n\t}\n\t\n\t\n\tpublic function getDuration (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.duration;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getEnded (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.ended;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getError (buffer:AudioBuffer):Dynamic /*MediaError*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.error;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLoop (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.loop;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getMuted (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.muted;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getNetworkState (buffer:AudioBuffer):Int {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.networkState;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPaused (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.paused;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPlaybackRate (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.playbackRate;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 1;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPlayed (buffer:AudioBuffer):Dynamic /*TimeRanges*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.played;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getPreload (buffer:AudioBuffer):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.preload;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getReadyState (buffer:AudioBuffer):Int {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.readyState;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSeekable (buffer:AudioBuffer):Dynamic /*TimeRanges*/ {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.seekable;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSeeking (buffer:AudioBuffer):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.seeking;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSrc (buffer:AudioBuffer):String {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.src;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getStartTime (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.playbackRate;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getVolume (buffer:AudioBuffer):Float {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.volume;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn 1;\n\t\t\n\t}\n\t\n\t\n\tpublic function load (buffer:AudioBuffer):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.load ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pause (buffer:AudioBuffer):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.pause ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function play (buffer:AudioBuffer):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\treturn buffer.__srcAudio.play ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setAutoplay (buffer:AudioBuffer, value:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\tbuffer.__srcAudio.autoplay = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setCurrentTime (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\tbuffer.__srcAudio.currentTime = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setDefaultPlaybackRate (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\tbuffer.__srcAudio.defaultPlaybackRate = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setLoop (buffer:AudioBuffer, value:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\tbuffer.__srcAudio.loop = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setMuted (buffer:AudioBuffer, value:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\tbuffer.__srcAudio.muted = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setPlaybackRate (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\tbuffer.__srcAudio.playbackRate = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setPreload (buffer:AudioBuffer, value:String):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\tbuffer.__srcAudio.preload = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setSrc (buffer:AudioBuffer, value:String):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\tbuffer.__srcAudio.src = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function setVolume (buffer:AudioBuffer, value:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (buffer.__srcAudio != null) {\n\t\t\t\n\t\t\tbuffer.__srcAudio.volume = value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.media.codecs.vorbis;\n\n\nclass VorbisComment {\n\t\n\t\n\tpublic var userComments:Array<String>;\n\tpublic var vendor:String;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime.media.codecs.vorbis;\n\n\nimport haxe.Int64;\nimport haxe.io.Bytes;\nimport lime._backend.native.NativeCFFI;\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nclass VorbisFile {\n\t\n\t\n\tpublic var bitstream (default, null):Int;\n\t\n\tprivate var handle:Dynamic;\n\t\n\t\n\tprivate function new (handle:Dynamic) {\n\t\t\n\t\tthis.handle = handle;\n\t\t\n\t}\n\t\n\t\n\tpublic function bitrate (bitstream:Int = -1):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_bitrate (handle, bitstream);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function bitrateInstant ():Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_bitrate_instant (handle);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function clear ():Void {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\tNativeCFFI.lime_vorbis_file_clear (handle);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function comment (bitstream:Int = -1):VorbisComment {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\tvar data = NativeCFFI.lime_vorbis_file_comment (handle, bitstream);\n\t\t\n\t\tif (data != null) {\n\t\t\t\n\t\t\tvar comment = new VorbisComment ();\n\t\t\tcomment.userComments = data.userComments;\n\t\t\tcomment.vendor = data.vendor;\n\t\t\treturn comment;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function crosslap (other:VorbisFile):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_crosslap (handle, other.handle);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:Bytes):VorbisFile {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\tvar handle = NativeCFFI.lime_vorbis_file_from_bytes (bytes);\n\t\t\n\t\tif (handle != null) {\n\t\t\t\n\t\t\treturn new VorbisFile (handle);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String):VorbisFile {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\tvar handle = NativeCFFI.lime_vorbis_file_from_file (path);\n\t\t\n\t\tif (handle != null) {\n\t\t\t\n\t\t\treturn new VorbisFile (handle);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function info (bitstream:Int = -1):VorbisInfo {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\tvar data = NativeCFFI.lime_vorbis_file_info (handle, bitstream);\n\t\t\n\t\tif (data != null) {\n\t\t\t\n\t\t\tvar info = new VorbisInfo ();\n\t\t\tinfo.bitrateLower = data.bitrateLower;\n\t\t\tinfo.bitrateNominal = data.bitrateNominal;\n\t\t\tinfo.bitrateUpper = data.bitrateUpper;\n\t\t\tinfo.channels = data.channels;\n\t\t\tinfo.rate = data.rate;\n\t\t\tinfo.version = data.version;\n\t\t\treturn info;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function pcmSeek (pos:Int64):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_pcm_seek (handle, pos.low, pos.high);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pcmSeekLap (pos:Int64):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_pcm_seek_lap (handle, pos.low, pos.high);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pcmSeekPage (pos:Int64):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_pcm_seek_page (handle, pos.low, pos.high);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pcmSeekPageLap (pos:Int64):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_pcm_seek_page_lap (handle, pos.low, pos.high);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pcmTell ():Int64 {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\tvar data = NativeCFFI.lime_vorbis_file_pcm_tell (handle);\n\t\t\n\t\tif (data != null) {\n\t\t\t\n\t\t\treturn Int64.make (data.high, data.low);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn Int64.ofInt (0);\n\t\t\n\t}\n\t\n\t\n\t\n\tpublic function pcmTotal (bitstream:Int = -1):Int64 {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\tvar data = NativeCFFI.lime_vorbis_file_pcm_total (handle, bitstream);\n\t\t\n\t\tif (data != null) {\n\t\t\t\n\t\t\treturn Int64.make (data.high, data.low);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn Int64.ofInt (0);\n\t\t\n\t}\n\t\n\t\n\tpublic function rawSeek (pos:Int64):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_raw_seek (handle, pos.low, pos.high);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function rawSeekLap (pos:Int64):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_raw_seek_lap (handle, pos.low, pos.high);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function rawTell ():Int64 {\n\t\t\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\tvar data = NativeCFFI.lime_vorbis_file_raw_tell (handle);\n\t\t\n\t\tif (data != null) {\n\t\t\t\n\t\t\treturn Int64.make (data.high, data.low);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn Int64.ofInt (0);\n\t\t\n\t}\n\t\n\t\n\tpublic function rawTotal (bitstream:Int = -1):Int64 {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\tvar data = NativeCFFI.lime_vorbis_file_raw_total (handle, bitstream);\n\t\t\n\t\tif (data != null) {\n\t\t\t\n\t\t\treturn Int64.make (data.high, data.low);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn Int64.ofInt (0);\n\t\t\n\t}\n\t\n\t\n\tpublic function read (buffer:Bytes, position:Int, length:Int = 4096, bigEndianPacking:Bool = false, wordSize:Int = 2, signed:Bool = true):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\tvar data = NativeCFFI.lime_vorbis_file_read (handle, buffer, position, length, bigEndianPacking, wordSize, signed);\n\t\tif (data == null) return 0;\n\t\tbitstream = data.bitstream;\n\t\treturn data.returnValue;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t//public function readFilter (buffer:Bytes, length:Int = 4096, endianness:Endian = LITTLE_ENDIAN, wordSize:Int = 2, signed:Bool = true, bitstream:Int = 0, filter, filter_param\n\t\n\t\n\tpublic function readFloat (pcmChannels:Bytes, samples:Int):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\tvar data = NativeCFFI.lime_vorbis_file_read_float (handle, pcmChannels, samples);\n\t\tif (data == null) return 0;\n\t\tbitstream = data.bitstream;\n\t\treturn data.returnValue;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function seekable ():Bool {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_seekable (handle);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function serialNumber (bitstream:Int = -1):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_serial_number (handle, bitstream);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function streams ():Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_streams (handle);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function timeSeek (s:Float):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_time_seek (handle, s);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function timeSeekLap (s:Float):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_time_seek_lap (handle, s);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function timeSeekPage (s:Float):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_time_seek_page (handle, s);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function timeSeekPageLap (s:Float):Int {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_time_seek_page_lap (handle, s);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function timeTell ():Float {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_time_tell (handle);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function timeTotal (bitstream:Int = -1):Float {\n\t\t\n\t\t#if (lime_cffi && lime_vorbis && !macro)\n\t\treturn NativeCFFI.lime_vorbis_file_time_total (handle, bitstream);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.media.codecs.vorbis;\n\n\nclass VorbisInfo {\n\t\n\t\n\tpublic var bitrateLower:Int;\n\tpublic var bitrateNominal:Int;\n\tpublic var bitrateUpper:Int;\n\t//public var bitrateWindow:Int;\n\tpublic var channels:Int;\n\tpublic var rate:Int;\n\tpublic var version:Int;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime.media.openal;\n\n\nimport lime._backend.native.NativeCFFI;\nimport lime.system.CFFIPointer;\nimport lime.utils.ArrayBufferView;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nclass AL {\n\t\n\t\n\tpublic static inline var NONE:Int = 0;\n\tpublic static inline var FALSE:Int = 0;\n\tpublic static inline var TRUE:Int = 1;\n\tpublic static inline var SOURCE_RELATIVE:Int = 0x202;\n\tpublic static inline var CONE_INNER_ANGLE:Int = 0x1001;\n\tpublic static inline var CONE_OUTER_ANGLE:Int = 0x1002;\n\tpublic static inline var PITCH:Int = 0x1003;\n\tpublic static inline var POSITION:Int = 0x1004;\n\tpublic static inline var DIRECTION:Int = 0x1005;\n\tpublic static inline var VELOCITY:Int = 0x1006;\n\tpublic static inline var LOOPING:Int = 0x1007;\n\tpublic static inline var BUFFER:Int = 0x1009;\n\tpublic static inline var GAIN:Int = 0x100A;\n\tpublic static inline var MIN_GAIN:Int = 0x100D;\n\tpublic static inline var MAX_GAIN:Int = 0x100E;\n\tpublic static inline var ORIENTATION:Int = 0x100F;\n\tpublic static inline var SOURCE_STATE:Int = 0x1010;\n\tpublic static inline var INITIAL:Int = 0x1011;\n\tpublic static inline var PLAYING:Int = 0x1012;\n\tpublic static inline var PAUSED:Int = 0x1013;\n\tpublic static inline var STOPPED:Int = 0x1014;\n\tpublic static inline var BUFFERS_QUEUED:Int = 0x1015;\n\tpublic static inline var BUFFERS_PROCESSED:Int = 0x1016;\n\tpublic static inline var REFERENCE_DISTANCE:Int = 0x1020;\n\tpublic static inline var ROLLOFF_FACTOR:Int = 0x1021;\n\tpublic static inline var CONE_OUTER_GAIN:Int = 0x1022;\n\tpublic static inline var MAX_DISTANCE:Int = 0x1023;\n\tpublic static inline var SEC_OFFSET:Int = 0x1024;\n\tpublic static inline var SAMPLE_OFFSET:Int = 0x1025;\n\tpublic static inline var BYTE_OFFSET:Int = 0x1026;\n\tpublic static inline var SOURCE_TYPE:Int = 0x1027;\n\tpublic static inline var STATIC:Int = 0x1028;\n\tpublic static inline var STREAMING:Int = 0x1029;\n\tpublic static inline var UNDETERMINED:Int = 0x1030;\n\tpublic static inline var FORMAT_MONO8:Int = 0x1100;\n\tpublic static inline var FORMAT_MONO16:Int = 0x1101;\n\tpublic static inline var FORMAT_STEREO8:Int = 0x1102;\n\tpublic static inline var FORMAT_STEREO16:Int = 0x1103;\n\tpublic static inline var FREQUENCY:Int = 0x2001;\n\tpublic static inline var BITS:Int = 0x2002;\n\tpublic static inline var CHANNELS:Int = 0x2003;\n\tpublic static inline var SIZE:Int = 0x2004;\n\tpublic static inline var NO_ERROR:Int = 0;\n\tpublic static inline var INVALID_NAME:Int = 0xA001;\n\tpublic static inline var INVALID_ENUM:Int = 0xA002;\n\tpublic static inline var INVALID_VALUE:Int = 0xA003;\n\tpublic static inline var INVALID_OPERATION:Int = 0xA004;\n\tpublic static inline var OUT_OF_MEMORY:Int = 0xA005;\n\tpublic static inline var VENDOR:Int = 0xB001;\n\tpublic static inline var VERSION:Int = 0xB002;\n\tpublic static inline var RENDERER:Int = 0xB003;\n\tpublic static inline var EXTENSIONS:Int = 0xB004;\n\tpublic static inline var DOPPLER_FACTOR:Int = 0xC000;\n\tpublic static inline var SPEED_OF_SOUND:Int = 0xC003;\n\tpublic static inline var DOPPLER_VELOCITY:Int = 0xC001;\n\tpublic static inline var DISTANCE_MODEL:Int = 0xD000;\n\tpublic static inline var INVERSE_DISTANCE:Int = 0xD001;\n\tpublic static inline var INVERSE_DISTANCE_CLAMPED:Int = 0xD002;\n\tpublic static inline var LINEAR_DISTANCE:Int = 0xD003;\n\tpublic static inline var LINEAR_DISTANCE_CLAMPED:Int = 0xD004;\n\tpublic static inline var EXPONENT_DISTANCE:Int = 0xD005;\n\tpublic static inline var EXPONENT_DISTANCE_CLAMPED:Int = 0xD006;\n\t\n\t\n\tpublic static function bufferData (buffer:ALBuffer, format:Int, data:ArrayBufferView, size:Int, freq:Int):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_buffer_data (buffer, format, data, size, freq);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function buffer3f (buffer:ALBuffer, param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_buffer3f (buffer, param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function buffer3i (buffer:ALBuffer, param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_buffer3i (buffer, param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function bufferf (buffer:ALBuffer, param:Int, value:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_bufferf (buffer, param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function bufferfv (buffer:ALBuffer, param:Int, values:Array<Float>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_bufferfv (buffer, param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function bufferi (buffer:ALBuffer, param:Int, value:Int):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_bufferi (buffer, param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function bufferiv (buffer:ALBuffer, param:Int, values:Array<Int>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_bufferiv (buffer, param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createBuffer ():ALBuffer {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_gen_buffer ();\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createSource ():ALSource {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_gen_source ();\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function deleteBuffer (buffer:ALBuffer):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_delete_buffer (buffer);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function deleteBuffers (buffers:Array<ALBuffer>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_delete_buffers (buffers.length, buffers);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function deleteSource (source:ALSource):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_delete_source (source);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function deleteSources (sources:Array<ALSource>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_delete_sources (sources.length, sources);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function disable (capability:Int):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_disable (capability);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function distanceModel (distanceModel:Int):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_distance_model (distanceModel);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function dopplerFactor (value:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_doppler_factor (value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function dopplerVelocity (value:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_doppler_velocity (value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function enable (capability:Int):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_enable (capability);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:deprecated(\"genSource has been renamed to 'createSource' for consistency with OpenGL\") public static function genSource ():ALSource {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_gen_source ();\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function genSources (n:Int):Array<ALSource> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_gen_sources (n);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:deprecated(\"genBuffer has been renamed to 'createBuffer' for consistency with OpenGL\") public static function genBuffer ():ALBuffer {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_gen_buffer ();\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function genBuffers (n:Int):Array<ALBuffer> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_gen_buffers (n);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBoolean (param:Int):Bool {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_boolean (param);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBooleanv (param:Int, count:Int = 1):Array<Bool> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_booleanv (param, 1);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBuffer3f (buffer:ALBuffer, param:Int):Array<Float> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_buffer3f (buffer, param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBuffer3i (buffer:ALBuffer, param:Int):Array<Int> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_buffer3i (buffer, param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBufferf (buffer:ALBuffer, param:Int):Float {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_bufferf (buffer, param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBufferfv (buffer:ALBuffer, param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_bufferfv (buffer, param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBufferi (buffer:ALBuffer, param:Int):Int {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_bufferi (buffer, param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBufferiv (buffer:ALBuffer, param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_bufferiv (buffer, param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getDouble (param:Int):Float {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_double (param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getDoublev (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_doublev (param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getEnumValue (ename:String):Int {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_enum_value (ename);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getError ():Int {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_error ();\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getErrorString ():String {\n\t\t\n\t\treturn switch (getError ()) {\n\t\t\t\n\t\t\tcase INVALID_NAME: \"INVALID_NAME: Invalid parameter name\";\n\t\t\tcase INVALID_ENUM: \"INVALID_ENUM: Invalid enum value\";\n\t\t\tcase INVALID_VALUE: \"INVALID_VALUE: Invalid parameter value\";\n\t\t\tcase INVALID_OPERATION: \"INVALID_OPERATION: Illegal operation or call\";\n\t\t\tcase OUT_OF_MEMORY: \"OUT_OF_MEMORY: OpenAL has run out of memory\";\n\t\t\tdefault: \"\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function getFloat (param:Int):Float {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_float (param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getFloatv (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_floatv (param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getInteger (param:Int):Int {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_integer (param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getIntegerv (param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_integerv (param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListener3f (param:Int):Array<Float> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_listener3f (param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListener3i (param:Int):Array<Int> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_listener3i (param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListenerf (param:Int):Float {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_listenerf (param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListenerfv (param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_listenerfv (param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListeneri (param:Int):Int {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_listeneri (param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getListeneriv (param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_listeneriv (param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:dox(hide) @:noCompletion public static function getParameter (param:Int):Dynamic {\n\t\t\n\t\t// TODO, return any type value (similar to WebGL getParameter)\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getProcAddress (fname:String):Dynamic {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_proc_address (fname);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSource3f (source:ALSource, param:Int):Array<Float> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_source3f (source, param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSourcef (source:ALSource, param:Int):Float {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_sourcef (source, param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSource3i (source:ALSource, param:Int):Array<Int> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_source3i (source, param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSourcefv (source:ALSource, param:Int, count:Int = 1):Array<Float> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_sourcefv (source, param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSourcei (source:ALSource, param:Int):Dynamic {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_sourcei (source, param);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSourceiv (source:ALSource, param:Int, count:Int = 1):Array<Int> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_sourceiv (source, param, count);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getString (param:Int):String {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_get_string (param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function isBuffer (buffer:ALBuffer):Bool {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_is_buffer (buffer);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\t\n\t\n\t\n\tpublic static function isEnabled (capability:Int):Bool {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_is_enabled (capability);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function isExtensionPresent (extname:String):Bool {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_is_extension_present (extname);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function isSource (source:ALSource):Bool {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_is_source (source);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listener3f (param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_listener3f (param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listener3i (param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_listener3i (param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listenerf (param:Int, value:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_listenerf (param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listenerfv (param:Int, values:Array<Float>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_listenerfv (param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listeneri (param:Int, value:Int):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_listeneri (param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function listeneriv (param:Int, values:Array<Int>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_listeneriv (param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function source3f (source:ALSource, param:Int, value1:Float, value2:Float, value3:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_source3f (source, param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function source3i (source:ALSource, param:Int, value1:Int, value2:Int, value3:Int):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_source3i (source, param, value1, value2, value3);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcef (source:ALSource, param:Int, value:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_sourcef (source, param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcefv (source:ALSource, param:Int, values:Array<Float>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_sourcefv (source, param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcei (source:ALSource, param:Int, value:Dynamic):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_sourcei (source, param, value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceiv (source:ALSource, param:Int, values:Array<Int>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_sourceiv (source, param, values);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcePlay (source:ALSource):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_source_play (source);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcePlayv (sources:Array<ALSource>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_source_playv (sources.length, sources);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceStop (source:ALSource):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_source_stop (source);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceStopv (sources:Array<ALSource>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_source_stopv (sources.length, sources);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceRewind (source:ALSource):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_source_rewind (source);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceRewindv (sources:Array<ALSource>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_source_rewindv (sources.length, sources);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcePause (source:ALSource):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_source_pause (source);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourcePausev (sources:Array<ALSource>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_source_pausev (sources.length, sources);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceQueueBuffer (source:ALSource, buffer:ALBuffer):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tvar buffers:Array<ALBuffer> = [ buffer ];\n\t\tNativeCFFI.lime_al_source_queue_buffers (source, 1, buffers);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceQueueBuffers (source:ALSource, nb:Int, buffers:Array<ALBuffer>):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_source_queue_buffers (source, nb, buffers);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceUnqueueBuffer (source:ALSource):ALBuffer {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tvar res = NativeCFFI.lime_al_source_unqueue_buffers (source, 1);\n\t\treturn res[0];\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function sourceUnqueueBuffers (source:ALSource, nb:Int):Array<ALBuffer> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_al_source_unqueue_buffers (source, nb);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function speedOfSound (value:Float):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_al_speed_of_sound (value);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.media.openal;\n\n\nimport lime.system.CFFIPointer;\n\n@:allow(lime.media.openal.AL)\n\n\nabstract ALBuffer(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tprivate inline function new (handle:CFFIPointer) {\n\t\t\n\t\tthis = handle;\n\t\t\n\t}\n\t\n\t\n}","package lime.media.openal;\n\n\nimport lime._backend.native.NativeCFFI;\nimport lime.system.CFFIPointer;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nclass ALC {\n\t\n\t\n\tpublic static inline var FALSE:Int = 0;\n\tpublic static inline var TRUE:Int = 1;\n\tpublic static inline var FREQUENCY:Int = 0x1007;\n\tpublic static inline var REFRESH:Int = 0x1008;\n\tpublic static inline var SYNC:Int = 0x1009;\n\tpublic static inline var MONO_SOURCES:Int = 0x1010;\n\tpublic static inline var STEREO_SOURCES:Int = 0x1011;\n\tpublic static inline var NO_ERROR:Int = 0;\n\tpublic static inline var INVALID_DEVICE:Int = 0xA001;\n\tpublic static inline var INVALID_CONTEXT:Int = 0xA002;\n\tpublic static inline var INVALID_ENUM:Int = 0xA003;\n\tpublic static inline var INVALID_VALUE:Int = 0xA004;\n\tpublic static inline var OUT_OF_MEMORY:Int = 0xA005;\n\tpublic static inline var ATTRIBUTES_SIZE:Int = 0x1002;\n\tpublic static inline var ALL_ATTRIBUTES:Int = 0x1003;\n\tpublic static inline var DEFAULT_DEVICE_SPECIFIER:Int = 0x1004;\n\tpublic static inline var DEVICE_SPECIFIER:Int = 0x1005;\n\tpublic static inline var EXTENSIONS:Int = 0x1006;\n\tpublic static inline var ENUMERATE_ALL_EXT:Int = 1;\n\tpublic static inline var DEFAULT_ALL_DEVICES_SPECIFIER:Int = 0x1012;\n\tpublic static inline var ALL_DEVICES_SPECIFIER:Int = 0x1013;\n\t\n\t\n\tpublic static function closeDevice (device:ALDevice):Bool {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_alc_close_device (device);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function createContext (device:ALDevice, attrlist:Array<Int> = null):ALContext {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tvar handle:Dynamic = NativeCFFI.lime_alc_create_context (device, attrlist);\n\t\t\n\t\tif (handle != null) {\n\t\t\t\n\t\t\treturn new ALContext (handle);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function destroyContext (context:ALContext):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_alc_destroy_context (context);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getContextsDevice (context:ALContext):ALDevice {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tvar handle:Dynamic = NativeCFFI.lime_alc_get_contexts_device (context);\n\t\t\n\t\tif (handle != null) {\n\t\t\t\n\t\t\treturn new ALDevice (handle);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getCurrentContext ():ALContext {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tvar handle:Dynamic = NativeCFFI.lime_alc_get_current_context ();\n\t\t\n\t\tif (handle != null) {\n\t\t\t\n\t\t\treturn new ALContext (handle);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getError (device:ALDevice):Int {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_alc_get_error (device);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getErrorString (device:ALDevice):String {\n\t\t\n\t\treturn switch (getError (device)) {\n\t\t\t\n\t\t\tcase INVALID_DEVICE: \"INVALID_DEVICE: Invalid device (or no device?)\";\n\t\t\tcase INVALID_CONTEXT: \"INVALID_CONTEXT: Invalid context (or no context?)\";\n\t\t\tcase INVALID_ENUM: \"INVALID_ENUM: Invalid enum value\";\n\t\t\tcase INVALID_VALUE: \"INVALID_VALUE: Invalid param value\";\n\t\t\tcase OUT_OF_MEMORY: \"OUT_OF_MEMORY: OpenAL has run out of memory\";\n\t\t\tdefault: \"\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function getIntegerv (device:ALDevice, param:Int, size:Int):Array<Int> {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_alc_get_integerv (device, param, size);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getString (device:ALDevice, param:Int):String {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_alc_get_string (device, param);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function makeContextCurrent (context:ALContext):Bool {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\treturn NativeCFFI.lime_alc_make_context_current (context);\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function openDevice (deviceName:String = null):ALDevice {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tvar handle:Dynamic = NativeCFFI.lime_alc_open_device (deviceName);\n\t\t\n\t\tif (handle != null) {\n\t\t\t\n\t\t\treturn new ALDevice (handle);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function pauseDevice (device:ALDevice):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_alc_pause_device (device);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function processContext (context:ALContext):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_alc_process_context (context);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function resumeDevice (device:ALDevice):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_alc_resume_device (device);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function suspendContext (context:ALContext):Void {\n\t\t\n\t\t#if (lime_cffi && lime_openal && !macro)\n\t\tNativeCFFI.lime_alc_suspend_context (context);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.media.openal;\n\n\nimport lime.system.CFFIPointer;\n\n@:allow(lime.media.openal.AL)\n@:allow(lime.media.openal.ALC)\n\n\nabstract ALContext(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tprivate inline function new (handle:CFFIPointer) {\n\t\t\n\t\tthis = handle;\n\t\t\n\t}\n\t\n\t\n}","package lime.media.openal;\n\n\nimport lime.system.CFFIPointer;\n\n@:allow(lime.media.openal.AL)\n@:allow(lime.media.openal.ALC)\n\n\nabstract ALDevice(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tprivate inline function new (handle:CFFIPointer) {\n\t\t\n\t\tthis = handle;\n\t\t\n\t}\n\t\n\t\n}","package lime.media.openal;\n\n\nimport lime.system.CFFIPointer;\n\n@:allow(lime.media.openal.AL)\n\n\nabstract ALSource(CFFIPointer) from CFFIPointer to CFFIPointer {\n\t\n\t\n\tprivate inline function new (handle:CFFIPointer) {\n\t\t\n\t\tthis = handle;\n\t\t\n\t}\n\t\n\t\n}","package lime.net;\n\n\nimport haxe.io.Bytes;\nimport haxe.macro.Compiler;\nimport lime.app.Event;\nimport lime.app.Future;\nimport lime.app.Promise;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n#if display\n\nclass HTTPRequest<T> {\n\n#else\n\n#if !macro\n@:genericBuild(lime._macros.HTTPRequestMacro.build())\n#end\nclass HTTPRequest<T> extends AbstractHTTPRequest<T> {}\n\nprivate class AbstractHTTPRequest<T> implements _IHTTPRequest {\n\t\n#end\n\t\n\tpublic var contentType:String;\n\tpublic var data:Bytes;\n\tpublic var enableResponseHeaders:Bool;\n\tpublic var followRedirects:Bool;\n\tpublic var formData:Map<String, Dynamic>;\n\tpublic var headers:Array<HTTPRequestHeader>;\n\tpublic var method:HTTPRequestMethod;\n\tpublic var responseData:T;\n\tpublic var responseHeaders:Array<HTTPRequestHeader>;\n\tpublic var responseStatus:Int;\n\tpublic var timeout:Int;\n\tpublic var uri:String;\n\tpublic var userAgent:String;\n\tpublic var withCredentials:Bool;\n\t\n\t#if !display\n\tprivate var backend:HTTPRequestBackend;\n\t#end\n\t\n\t\n\tpublic function new (uri:String = null) {\n\t\t\n\t\tthis.uri = uri;\n\t\t\n\t\tcontentType = \"application/x-www-form-urlencoded\";\n\t\tfollowRedirects = true;\n\t\tenableResponseHeaders = false;\n\t\tformData = new Map ();\n\t\theaders = [];\n\t\tmethod = GET;\n\t\ttimeout = #if lime_default_timeout Std.parseInt (Compiler.getDefine (\"lime-default-timeout\")) #else 30000 #end;\n\t\twithCredentials = false;\n\t\t\n\t\t#if !display\n\t\tbackend = new HTTPRequestBackend ();\n\t\tbackend.init (this);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function cancel ():Void {\n\t\t\n\t\t#if !display\n\t\tbackend.cancel ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function load (uri:String = null):Future<T> {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !display\n\n\nclass _HTTPRequest_Bytes<T> extends AbstractHTTPRequest<T> {\n\t\n\t\n\tpublic function new (uri:String = null) {\n\t\t\n\t\tsuper (uri);\n\t\t\n\t}\n\t\n\t\n\tprivate function fromBytes (bytes:Bytes):T {\n\t\t\n\t\treturn cast bytes;\n\t\t\n\t}\n\t\n\t\n\tpublic override function load (uri:String = null):Future<T> {\n\t\t\n\t\tif (uri != null) {\n\t\t\t\n\t\t\tthis.uri = uri;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar promise = new Promise<T> ();\n\t\tvar future = backend.loadData (this.uri);\n\t\t\n\t\tfuture.onProgress (promise.progress);\n\t\tfuture.onError (promise.error);\n\t\t\n\t\tfuture.onComplete (function (bytes) {\n\t\t\t\n\t\t\tresponseData = fromBytes (bytes);\n\t\t\tpromise.complete (responseData);\n\t\t\t\n\t\t});\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass _HTTPRequest_String<T> extends AbstractHTTPRequest<T> {\n\t\n\t\n\tpublic function new (uri:String = null) {\n\t\t\n\t\tsuper (uri);\n\t\t\n\t}\n\t\n\t\n\tpublic override function load (uri:String = null):Future<T> {\n\t\t\n\t\tif (uri != null) {\n\t\t\t\n\t\t\tthis.uri = uri;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar promise = new Promise<T> ();\n\t\tvar future = backend.loadText (this.uri);\n\t\t\n\t\tfuture.onProgress (promise.progress);\n\t\tfuture.onError (promise.error);\n\t\t\n\t\tfuture.onComplete (function (text) {\n\t\t\t\n\t\t\tresponseData = cast text;\n\t\t\tpromise.complete (responseData);\n\t\t\t\n\t\t});\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n}\n\n\ninterface _IHTTPRequest {\n\t\n\tpublic var contentType:String;\n\tpublic var data:haxe.io.Bytes;\n\tpublic var enableResponseHeaders:Bool;\n\tpublic var followRedirects:Bool;\n\tpublic var formData:Map<String, Dynamic>;\n\tpublic var headers:Array<HTTPRequestHeader>;\n\tpublic var method:HTTPRequestMethod;\n\t//public var responseData:T;\n\tpublic var responseHeaders:Array<HTTPRequestHeader>;\n\tpublic var responseStatus:Int;\n\tpublic var timeout:Int;\n\tpublic var uri:String;\n\tpublic var userAgent:String;\n\tpublic var withCredentials:Bool;\n\t\n\tpublic function cancel ():Void;\n\t\n}\n\n\n#if flash\nprivate typedef HTTPRequestBackend = lime._backend.flash.FlashHTTPRequest;\n#elseif (js && html5)\nprivate typedef HTTPRequestBackend = lime._backend.html5.HTML5HTTPRequest;\n#else\nprivate typedef HTTPRequestBackend = lime._backend.native.NativeHTTPRequest;\n#end\n#end\n","package lime.net;\n\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass HTTPRequestHeader {\n\t\n\t\n\tpublic var name:String;\n\tpublic var value:String;\n\t\n\t\n\tpublic function new (name:String, value:String = \"\") {\n\t\t\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t\t\n\t}\n\t\n\t\n}","package lime.text;\n\n\nimport haxe.io.Bytes;\nimport lime._backend.native.NativeCFFI;\nimport lime.app.Future;\nimport lime.app.Promise;\nimport lime.graphics.Image;\nimport lime.graphics.ImageBuffer;\nimport lime.math.Vector2;\nimport lime.net.HTTPRequest;\nimport lime.system.System;\nimport lime.utils.Log;\nimport lime.utils.UInt8Array;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\nimport js.html.SpanElement;\nimport js.Browser;\n#end\n\n#if (lime_cffi && !macro)\nimport haxe.io.Path;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n#if (!display && !flash && !nodejs && !macro)\n@:autoBuild(lime._macros.AssetsMacro.embedFont())\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n@:access(lime.text.Glyph)\n\n\nclass Font {\n\t\n\t\n\tpublic var ascender (get, null):Int;\n\tpublic var descender (get, null):Int;\n\tpublic var height (get, null):Int;\n\tpublic var name (default, null):String;\n\tpublic var numGlyphs (get, null):Int;\n\tpublic var src:Dynamic;\n\tpublic var underlinePosition (get, null):Int;\n\tpublic var underlineThickness (get, null):Int;\n\tpublic var unitsPerEM (get, null):Int;\n\t\n\t@:noCompletion private var __fontID:String;\n\t@:noCompletion private var __fontPath:String;\n\t#if lime_cffi\n\t@:noCompletion private var __fontPathWithoutDirectory:String;\n\t#end\n\t\n\t\n\tpublic function new (name:String = null) {\n\t\t\n\t\tif (name != null) {\n\t\t\t\n\t\t\tthis.name = name;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__fontID != null) {\n\t\t\t\n\t\t\tif (Assets.isLocal (__fontID)) {\n\t\t\t\t\n\t\t\t\t__fromBytes (Assets.getBytes (__fontID));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (__fontPath != null) {\n\t\t\t\n\t\t\t__fromFile (__fontPath);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function decompose ():NativeFontData {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\tif (src == null) throw \"Uninitialized font handle.\";\n\t\tvar data:Dynamic = NativeCFFI.lime_font_outline_decompose (src, 1024 * 20);\n\t\treturn data;\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:Bytes):Font {\n\t\t\n\t\tif (bytes == null) return null;\n\t\t\n\t\tvar font = new Font ();\n\t\tfont.__fromBytes (bytes);\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn (font.src != null) ? font : null;\n\t\t#else\n\t\treturn font;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String):Font {\n\t\t\n\t\tif (path == null) return null;\n\t\t\n\t\tvar font = new Font ();\n\t\tfont.__fromFile (path);\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn (font.src != null) ? font : null;\n\t\t#else\n\t\treturn font;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromBytes (bytes:Bytes):Future<Font> {\n\t\t\n\t\treturn Future.withValue (fromBytes (bytes));\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromFile (path:String):Future<Font> {\n\t\t\n\t\tvar request = new HTTPRequest<Font> ();\n\t\treturn request.load (path).then (function (font) {\n\t\t\t\n\t\t\tif (font != null) {\n\t\t\t\t\n\t\t\t\treturn Future.withValue (font);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn cast Future.withError (\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromName (path:String):Future<Font> {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tvar font = new Font ();\n\t\treturn font.__loadFromName (path);\n\t\t\n\t\t#else\n\t\t\n\t\treturn cast Future.withError (\"\");\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function getGlyph (character:String):Glyph {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_font_get_glyph_index (src, character);\n\t\t#else\n\t\treturn -1;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function getGlyphs (characters:String = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`'\\\"/\\\\&*()[]{}<>|:;_-+=?,. \"):Array<Glyph> {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tvar glyphs:Dynamic = NativeCFFI.lime_font_get_glyph_indices (src, characters);\n\t\treturn glyphs;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function getGlyphMetrics (glyph:Glyph):GlyphMetrics {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tvar value:Dynamic = NativeCFFI.lime_font_get_glyph_metrics (src, glyph);\n\t\tvar metrics = new GlyphMetrics ();\n\t\t\n\t\tmetrics.advance = new Vector2 (value.horizontalAdvance, value.verticalAdvance);\n\t\tmetrics.height = value.height;\n\t\tmetrics.horizontalBearing = new Vector2 (value.horizontalBearingX, value.horizontalBearingY);\n\t\tmetrics.verticalBearing = new Vector2 (value.verticalBearingX, value.verticalBearingY);\n\t\t\n\t\treturn metrics;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function renderGlyph (glyph:Glyph, fontSize:Int):Image {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t__setSize (fontSize);\n\t\t\n\t\tvar bytes = Bytes.alloc (0);\n\t\t//bytes.endian = (System.endianness == BIG_ENDIAN ? \"bigEndian\" : \"littleEndian\");\n\t\t\n\t\tvar dataPosition = 0;\n\t\t\n\t\tif (NativeCFFI.lime_font_render_glyph (src, glyph, bytes)) {\n\t\t\t\n\t\t\tvar index = bytes.getInt32 (dataPosition); dataPosition += 4;\n\t\t\tvar width = bytes.getInt32 (dataPosition); dataPosition += 4;\n\t\t\tvar height = bytes.getInt32 (dataPosition); dataPosition += 4;\n\t\t\tvar x = bytes.getInt32 (dataPosition); dataPosition += 4;\n\t\t\tvar y = bytes.getInt32 (dataPosition); dataPosition += 4;\n\t\t\t\n\t\t\tvar data = bytes.sub (dataPosition, width * height);\n\t\t\tdataPosition += (width * height);\n\t\t\t\n\t\t\tvar buffer = new ImageBuffer (new UInt8Array (data), width, height, 1);\n\t\t\tvar image = new Image (buffer, 0, 0, width, height);\n\t\t\timage.x = x;\n\t\t\timage.y = y;\n\t\t\t\n\t\t\treturn image;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\n\t\n\tpublic function renderGlyphs (glyphs:Array<Glyph>, fontSize:Int):Map<Glyph, Image> {\n\t\t\n\t\t//#if (lime_cffi && !macro)\n\t\t//\n\t\t//var uniqueGlyphs = new Map<Int, Bool> ();\n\t\t//\n\t\t//for (glyph in glyphs) {\n\t\t\t//\n\t\t\t//uniqueGlyphs.set (glyph, true);\n\t\t\t//\n\t\t//}\n\t\t//\n\t\t//var glyphList = [];\n\t\t//\n\t\t//for (key in uniqueGlyphs.keys ()) {\n\t\t\t//\n\t\t\t//glyphList.push (key);\n\t\t\t//\n\t\t//}\n\t\t//\n\t\t//NativeCFFI.lime_font_set_size (src, fontSize);\n\t\t//\n\t\t//var bytes = new ByteArray ();\n\t\t//bytes.endian = (System.endianness == BIG_ENDIAN ? \"bigEndian\" : \"littleEndian\");\n\t\t//\n\t\t//if (NativeCFFI.lime_font_render_glyphs (src, glyphList, bytes)) {\n\t\t\t//\n\t\t\t//bytes.position = 0;\n\t\t\t//\n\t\t\t//var count = bytes.readUnsignedInt ();\n\t\t\t//\n\t\t\t//var bufferWidth = 128;\n\t\t\t//var bufferHeight = 128;\n\t\t\t//var offsetX = 0;\n\t\t\t//var offsetY = 0;\n\t\t\t//var maxRows = 0;\n\t\t\t//\n\t\t\t//var width, height;\n\t\t\t//var i = 0;\n\t\t\t//\n\t\t\t//while (i < count) {\n\t\t\t\t//\n\t\t\t\t//bytes.position += 4;\n\t\t\t\t//width = bytes.readUnsignedInt ();\n\t\t\t\t//height = bytes.readUnsignedInt ();\n\t\t\t\t//bytes.position += (4 * 2) + width * height;\n\t\t\t\t//\n\t\t\t\t//if (offsetX + width > bufferWidth) {\n\t\t\t\t\t//\n\t\t\t\t\t//offsetY += maxRows + 1;\n\t\t\t\t\t//offsetX = 0;\n\t\t\t\t\t//maxRows = 0;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t\t//if (offsetY + height > bufferHeight) {\n\t\t\t\t\t//\n\t\t\t\t\t//if (bufferWidth < bufferHeight) {\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//bufferWidth *= 2;\n\t\t\t\t\t\t//\n\t\t\t\t\t//} else {\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//bufferHeight *= 2;\n\t\t\t\t\t\t//\n\t\t\t\t\t//}\n\t\t\t\t\t//\n\t\t\t\t\t//offsetX = 0;\n\t\t\t\t\t//offsetY = 0;\n\t\t\t\t\t//maxRows = 0;\n\t\t\t\t\t//\n\t\t\t\t\t//// TODO: make this better\n\t\t\t\t\t//\n\t\t\t\t\t//bytes.position = 4;\n\t\t\t\t\t//i = 0;\n\t\t\t\t\t//continue;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t\t//offsetX += width + 1;\n\t\t\t\t//\n\t\t\t\t//if (height > maxRows) {\n\t\t\t\t\t//\n\t\t\t\t\t//maxRows = height;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t\t//i++;\n\t\t\t\t//\n\t\t\t//}\n\t\t\t//\n\t\t\t//var map = new Map<Int, Image> ();\n\t\t\t//var buffer = new ImageBuffer (null, bufferWidth, bufferHeight, 8);\n\t\t\t//var data = new ByteArray (bufferWidth * bufferHeight);\n\t\t\t//\n\t\t\t//bytes.position = 4;\n\t\t\t//offsetX = 0;\n\t\t\t//offsetY = 0;\n\t\t\t//maxRows = 0;\n\t\t\t//\n\t\t\t//var index, x, y, image;\n\t\t\t//\n\t\t\t//for (i in 0...count) {\n\t\t\t\t//\n\t\t\t\t//index = bytes.readUnsignedInt ();\n\t\t\t\t//width = bytes.readUnsignedInt ();\n\t\t\t\t//height = bytes.readUnsignedInt ();\n\t\t\t\t//x = bytes.readUnsignedInt ();\n\t\t\t\t//y = bytes.readUnsignedInt ();\n\t\t\t\t//\n\t\t\t\t//if (offsetX + width > bufferWidth) {\n\t\t\t\t\t//\n\t\t\t\t\t//offsetY += maxRows + 1;\n\t\t\t\t\t//offsetX = 0;\n\t\t\t\t\t//maxRows = 0;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t\t//for (i in 0...height) {\n\t\t\t\t\t//\n\t\t\t\t\t//data.position = ((i + offsetY) * bufferWidth) + offsetX;\n\t\t\t\t\t////bytes.readBytes (data, 0, width);\n\t\t\t\t\t//\n\t\t\t\t\t//for (x in 0...width) {\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//var byte = bytes.readUnsignedByte ();\n\t\t\t\t\t\t//data.writeByte (byte);\n\t\t\t\t\t\t//\n\t\t\t\t\t//}\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t\t//image = new Image (buffer, offsetX, offsetY, width, height);\n\t\t\t\t//image.x = x;\n\t\t\t\t//image.y = y;\n\t\t\t\t//\n\t\t\t\t//map.set (index, image);\n\t\t\t\t//\n\t\t\t\t//offsetX += width + 1;\n\t\t\t\t//\n\t\t\t\t//if (height > maxRows) {\n\t\t\t\t\t//\n\t\t\t\t\t//maxRows = height;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t//}\n\t\t\t//\n\t\t\t//#if js\n\t\t\t//buffer.data = data.byteView;\n\t\t\t//#else\n\t\t\t//buffer.data = new UInt8Array (data);\n\t\t\t//#end\n\t\t\t//\n\t\t\t//return map;\n\t\t\t//\n\t\t//}\n\t\t//\n\t\t//#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\t\n\t@:noCompletion private function __fromBytes (bytes:Bytes):Void {\n\t\t\n\t\t__fontPath = null;\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t__fontPathWithoutDirectory = null;\n\t\t\n\t\tsrc = NativeCFFI.lime_font_load (bytes);\n\t\t\n\t\tif (src != null && name == null) {\n\t\t\t\n\t\t\tname = cast NativeCFFI.lime_font_get_family_name (src);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function __fromFile (path:String):Void {\n\t\t\n\t\t__fontPath = path;\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t__fontPathWithoutDirectory = Path.withoutDirectory (__fontPath);\n\t\t\n\t\tsrc = NativeCFFI.lime_font_load (__fontPath);\n\t\t\n\t\tif (src != null && name == null) {\n\t\t\t\n\t\t\tname = cast NativeCFFI.lime_font_get_family_name (src);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __loadFromName (name:String):Future<Font> {\n\t\t\n\t\tvar promise = new Promise<Font> ();\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tthis.name = name;\n\t\t\n\t\tvar ua = Browser.navigator.userAgent.toLowerCase();\n\t\tvar isSafari = (ua.indexOf(\" safari/\") >= 0 && ua.indexOf(\" chrome/\") < 0);\n\t\t\n\t\tif (!isSafari && untyped (Browser.document).fonts && untyped (Browser.document).fonts.load) {\n\t\t\t\n\t\t\tuntyped (Browser.document).fonts.load (\"1em '\" + name + \"'\").then (function (_) {\n\t\t\t\t\n\t\t\t\tpromise.complete (this);\n\t\t\t\t\n\t\t\t}, function (_) {\n\t\t\t\t\n\t\t\t\tLog.warn (\"Could not load web font \\\"\" + name + \"\\\"\");\n\t\t\t\tpromise.complete (this);\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar node1 = __measureFontNode (\"'\" + name + \"', sans-serif\");\n\t\t\tvar node2 = __measureFontNode (\"'\" + name + \"', serif\");\n\t\t\t\n\t\t\tvar width1 = node1.offsetWidth;\n\t\t\tvar width2 = node2.offsetWidth;\n\t\t\t\n\t\t\tvar interval = -1;\n\t\t\tvar timeout = 3000;\n\t\t\tvar intervalLength = 50;\n\t\t\tvar intervalCount = 0;\n\t\t\tvar loaded, timeExpired;\n\t\t\t\n\t\t\tvar checkFont = function () {\n\t\t\t\t\n\t\t\t\tintervalCount++;\n\t\t\t\t\n\t\t\t\tloaded = (node1.offsetWidth != width1 || node2.offsetWidth != width2);\n\t\t\t\ttimeExpired = (intervalCount * intervalLength >= timeout);\n\t\t\t\t\n\t\t\t\tif (loaded || timeExpired) {\n\t\t\t\t\t\n\t\t\t\t\tBrowser.window.clearInterval (interval);\n\t\t\t\t\tnode1.parentNode.removeChild (node1);\n\t\t\t\t\tnode2.parentNode.removeChild (node2);\n\t\t\t\t\tnode1 = null;\n\t\t\t\t\tnode2 = null;\n\t\t\t\t\t\n\t\t\t\t\tif (timeExpired) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tLog.warn (\"Could not load web font \\\"\" + name + \"\\\"\");\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpromise.complete (this);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tinterval = Browser.window.setInterval (checkFont, intervalLength);\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tpromise.error (\"\");\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tprivate static function __measureFontNode (fontFamily:String):SpanElement {\n\t\t\n\t\tvar node:SpanElement = cast Browser.document.createElement (\"span\");\n\t\tnode.setAttribute (\"aria-hidden\", \"true\");\n\t\tvar text = Browser.document.createTextNode (\"BESbswy\");\n\t\tnode.appendChild (text);\n\t\tvar style = node.style;\n\t\tstyle.display = \"block\";\n\t\tstyle.position = \"absolute\";\n\t\tstyle.top = \"-9999px\";\n\t\tstyle.left = \"-9999px\";\n\t\tstyle.fontSize = \"300px\";\n\t\tstyle.width = \"auto\";\n\t\tstyle.height = \"auto\";\n\t\tstyle.lineHeight = \"normal\";\n\t\tstyle.margin = \"0\";\n\t\tstyle.padding = \"0\";\n\t\tstyle.fontVariant = \"normal\";\n\t\tstyle.whiteSpace = \"nowrap\";\n\t\tstyle.fontFamily = fontFamily;\n\t\tBrowser.document.body.appendChild (node);\n\t\treturn node;\n\t\t\n\t}\n\t#end\n\t\n\t\n\t@:noCompletion private function __setSize (size:Int):Void {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tNativeCFFI.lime_font_set_size (src, size);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_ascender ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_font_get_ascender (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_descender ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_font_get_descender (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_height ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_font_get_height (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_numGlyphs ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_font_get_num_glyphs (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_underlinePosition ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_font_get_underline_position (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_underlineThickness ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_font_get_underline_thickness (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function get_unitsPerEM ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_font_get_units_per_em (src);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Native Methods\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}\n\n\ntypedef NativeFontData = {\n\t\n\tvar has_kerning:Bool;\n\tvar is_fixed_width:Bool;\n\tvar has_glyph_names:Bool;\n\tvar is_italic:Bool;\n\tvar is_bold:Bool;\n\tvar num_glyphs:Int;\n\tvar family_name:String;\n\tvar style_name:String;\n\tvar em_size:Int;\n\tvar ascend:Int;\n\tvar descend:Int;\n\tvar height:Int;\n\tvar glyphs:Array<NativeGlyphData>;\n\tvar kerning:Array<NativeKerningData>;\n\t\n}\n\n\ntypedef NativeGlyphData = {\n\t\n\tvar char_code:Int;\n\tvar advance:Int;\n\tvar min_x:Int;\n\tvar max_x:Int;\n\tvar min_y:Int;\n\tvar max_y:Int;\n\tvar points:Array<Int>;\n\t\n}\n\n\ntypedef NativeKerningData = {\n\t\n\tvar left_glyph:Int;\n\tvar right_glyph:Int;\n\tvar x:Int;\n\tvar y:Int;\n\t\n}\n","package lime._macros; #if macro\n\n\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nusing haxe.macro.Tools;\n\n\nclass HTTPRequestMacro {\n\t\n\t\n\tprivate static function build () {\n\t\t\n\t\tvar paramType;\n\t\tvar type:BaseType, typeArgs;\n\t\tvar stringAbstract = false;\n\t\tvar bytesAbstract = false;\n\t\t\n\t\tswitch (Context.follow (Context.getLocalType ())) {\n\t\t\t\n\t\t\tcase TInst (localType, [ t ]):\n\t\t\t\t\n\t\t\t\tparamType = t;\n\t\t\t\t\n\t\t\t\tswitch (t) {\n\t\t\t\t\t\n\t\t\t\t\tcase TInst (t, args):\n\t\t\t\t\t\t\n\t\t\t\t\t\ttype = t.get ();\n\t\t\t\t\t\ttypeArgs = args;\n\t\t\t\t\t\n\t\t\t\t\tcase TAbstract (t, args):\n\t\t\t\t\t\t\n\t\t\t\t\t\ttype = t.get ();\n\t\t\t\t\t\ttypeArgs = args;\n\t\t\t\t\t\t\n\t\t\t\t\t\tstringAbstract = isStringAbstract (t.get ());\n\t\t\t\t\t\tif (!stringAbstract) bytesAbstract = isBytesAbstract (t.get ());\n\t\t\t\t\t\n\t\t\t\t\tcase TType (t, args):\n\t\t\t\t\t\t\n\t\t\t\t\t\ttype = t.get ();\n\t\t\t\t\t\ttypeArgs = args;\n\t\t\t\t\t\n\t\t\t\t\tcase TMono (_):\n\t\t\t\t\t\t\n\t\t\t\t\t\tContext.fatalError (\"Invalid number of type parameters for \" + localType.toString (), Context.currentPos ());\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t\n\t\t\t\t\tcase TDynamic (_):\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch (Context.getType (\"haxe.io.Bytes\")) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase TInst (t, args):\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttype = t.get ();\n\t\t\t\t\t\t\t\ttypeArgs = args;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthrow false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tthrow false;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tthrow false;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar typeString = type.module;\n\t\t\n\t\tif (type.name != type.module && !StringTools.endsWith (type.module, \".\" + type.name)) {\n\t\t\t\n\t\t\ttypeString += \".\" + type.name;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (typeString == \"String\" || stringAbstract) {\n\t\t\t\n\t\t\treturn TPath ( { pack: [ \"lime\", \"net\" ], name: \"HTTPRequest\", sub: \"_HTTPRequest_String\", params: [ TPType (paramType.toComplexType ()) ] } ).toType ();\n\t\t\t\n\t\t} else if (typeString == \"haxe.io.Bytes\" || bytesAbstract) {\n\t\t\t\n\t\t\treturn TPath ( { pack: [ \"lime\", \"net\" ], name: \"HTTPRequest\", sub: \"_HTTPRequest_Bytes\", params: [ TPType (paramType.toComplexType ()) ] } ).toType ();\n\t\t\t\n\t\t} else {\n\t\t\n\t\t\tvar typeParamString = typeString;\n\t\t\t\n\t\t\tif (typeArgs.length > 0) {\n\t\t\t\t\n\t\t\t\ttypeParamString += \"<\";\n\t\t\t\t\n\t\t\t\tfor (i in 0...typeArgs.length) {\n\t\t\t\t\t\n\t\t\t\t\tif (i > 0) typeParamString += \",\";\n\t\t\t\t\ttypeParamString += typeArgs[i].toString ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttypeParamString += \">\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar flattenedTypeString = typeParamString;\n\t\t\t\n\t\t\tflattenedTypeString = StringTools.replace (flattenedTypeString, \"->\", \"_\");\n\t\t\tflattenedTypeString = StringTools.replace (flattenedTypeString, \".\", \"_\");\n\t\t\tflattenedTypeString = StringTools.replace (flattenedTypeString, \"<\", \"_\");\n\t\t\tflattenedTypeString = StringTools.replace (flattenedTypeString, \">\", \"_\");\n\t\t\t\n\t\t\tvar name = \"_HTTPRequest_\" + flattenedTypeString;\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tContext.getType (\"lime.net.\" + name);\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\n\t\t\t\tvar pos = Context.currentPos ();\n\t\t\t\t\n\t\t\t\tvar fields = [\n\t\t\t\t\t{ name: \"new\", access: [ APublic ], kind: FFun({ args: [ { name: \"uri\", type: macro :String, opt: true } ], expr: macro { super (uri); }, params: [], ret: macro :Void }), pos: Context.currentPos () },\n\t\t\t\t\t{ name: \"fromBytes\", access: [ APrivate, AOverride ], kind: FFun ( { args: [ { name: \"bytes\", type: macro :haxe.io.Bytes } ], expr: Context.parse (\"return \" + typeString + \".fromBytes (bytes)\", pos), params: [], ret: paramType.toComplexType () } ), pos: pos }\n\t\t\t\t];\n\t\t\t\t\n\t\t\t\tContext.defineType ({\n\t\t\t\t\t\n\t\t\t\t\tname: name,\n\t\t\t\t\tpack: [ \"lime\", \"net\" ],\n\t\t\t\t\tkind: TDClass ({ pack: [ \"lime\", \"net\" ], name: \"HTTPRequest\", sub: \"_HTTPRequest_Bytes\", params: [ TPType (paramType.toComplexType ()) ] }, null, false),\n\t\t\t\t\tfields: fields,\n\t\t\t\t\tpos: pos\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn TPath ( { pack: [ \"lime\", \"net\" ], name: name, params: [] } ).toType ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function isBytesAbstract (type:AbstractType):Bool {\n\t\t\n\t\twhile (type != null) {\n\t\t\t\n\t\t\tswitch (type.type) {\n\t\t\t\t\n\t\t\t\tcase TInst (t, _):\n\t\t\t\t\t\n\t\t\t\t\treturn t.get ().module == \"haxe.io.Bytes\";\n\t\t\t\t\n\t\t\t\tcase TAbstract (t, _):\n\t\t\t\t\t\n\t\t\t\t\ttype = t.get ();\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate static function isStringAbstract (type:AbstractType):Bool {\n\t\t\n\t\twhile (type != null) {\n\t\t\t\n\t\t\tswitch (type.type) {\n\t\t\t\t\n\t\t\t\tcase TInst (t, _):\n\t\t\t\t\t\n\t\t\t\t\treturn t.get ().module == \"String\";\n\t\t\t\t\n\t\t\t\tcase TAbstract (t, _):\n\t\t\t\t\t\n\t\t\t\t\ttype = t.get ();\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end","package lime.utils;\n\n\nimport haxe.io.Bytes in HaxeBytes;\nimport haxe.io.BytesData;\nimport lime._backend.native.NativeCFFI;\nimport lime.app.Future;\nimport lime.net.HTTPRequest;\n\n@:access(haxe.io.Bytes)\n@:access(lime._backend.native.NativeCFFI)\n@:forward()\n\n\nabstract Bytes(HaxeBytes) from HaxeBytes to HaxeBytes {\n\t\n\t\n\tpublic function new (length:Int, bytesData:BytesData) {\n\t\t\n\t\t#if js\n\t\tthis = new HaxeBytes (bytesData);\n\t\t#else\n\t\tthis = new HaxeBytes (length, bytesData);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function alloc (length:Int):Bytes {\n\t\t\n\t\tvar bytes = HaxeBytes.alloc (length);\n\t\treturn new Bytes (bytes.length, bytes.getData ());\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function fastGet (b:BytesData, pos:Int):Int {\n\t\t\n\t\treturn HaxeBytes.fastGet (b, pos);\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:haxe.io.Bytes):Bytes {\n\t\t\n\t\tif (bytes == null) return null;\n\t\t\n\t\treturn new Bytes (bytes.length, bytes.getData ());\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String):Bytes {\n\t\t\n\t\t#if (sys && lime_cffi && !macro)\n\t\t#if !cs\n\t\tvar bytes = Bytes.alloc (0);\n\t\tNativeCFFI.lime_bytes_read_file (path, bytes);\n\t\tif (bytes.length > 0) return bytes;\n\t\t#else\n\t\tvar data:Dynamic = NativeCFFI.lime_bytes_read_file (path, null);\n\t\tif (data != null) return new Bytes (data.length, data.b);\n\t\t#end\n\t\t#end\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromBytes (bytes:haxe.io.Bytes):Future<Bytes> {\n\t\t\n\t\treturn Future.withValue (fromBytes (bytes));\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromFile (path:String):Future<Bytes> {\n\t\t\n\t\tvar request = new HTTPRequest<Bytes> ();\n\t\treturn request.load (path);\n\t\t\n\t}\n\t\n\t\n\tpublic static function ofData (b:BytesData):Bytes {\n\t\t\n\t\tvar bytes = HaxeBytes.ofData (b);\n\t\treturn new Bytes (bytes.length, bytes.getData ());\n\t\t\n\t}\n\t\n\t\n\tpublic static function ofString (s:String):Bytes {\n\t\t\n\t\tvar bytes = HaxeBytes.ofString (s);\n\t\treturn new Bytes (bytes.length, bytes.getData ());\n\t\t\n\t}\n\t\n\t\n\t#if (lime_cffi && !macro)\n\tpublic static function __fromNativePointer (data:Dynamic, length:Int):Bytes {\n\t\t\n\t\tvar bytes:Dynamic = NativeCFFI.lime_bytes_from_data_pointer (data, length);\n\t\treturn new Bytes (bytes.length, bytes.b);\n\t\t\n\t}\n\t#end\n\t\n\t\n}\n","package openfl.net;\n\n\nimport haxe.io.Bytes;\nimport lime.app.Event;\nimport lime.app.Future;\nimport lime.net.HTTPRequest;\nimport lime.net.HTTPRequestHeader;\nimport openfl.events.Event;\nimport openfl.events.EventDispatcher;\nimport openfl.events.HTTPStatusEvent;\nimport openfl.events.IOErrorEvent;\nimport openfl.events.ProgressEvent;\nimport openfl.events.SecurityErrorEvent;\nimport openfl.net.URLRequestMethod;\nimport openfl.utils.ByteArray;\n\n\nclass URLLoader extends EventDispatcher {\n\t\n\t\n\tpublic var bytesLoaded:Int;\n\tpublic var bytesTotal:Int;\n\tpublic var data:Dynamic;\n\tpublic var dataFormat:URLLoaderDataFormat;\n\t\n\tprivate var __httpRequest:#if (display || macro) Dynamic #else _IHTTPRequest #end; // TODO: Better (non-private) solution\n\t\n\t\n\tpublic function new (request:URLRequest = null) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tbytesLoaded = 0;\n\t\tbytesTotal = 0;\n\t\tdataFormat = URLLoaderDataFormat.TEXT;\n\t\t\n\t\tif (request != null) {\n\t\t\t\n\t\t\tload (request);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function close ():Void {\n\t\t\n\t\tif (__httpRequest != null) {\n\t\t\t\n\t\t\t__httpRequest.cancel ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function load (request:URLRequest):Void {\n\t\t\n\t\t#if !macro\n\t\tif (dataFormat == BINARY) {\n\t\t\t\n\t\t\tvar httpRequest = new HTTPRequest<ByteArray> ();\n\t\t\t__prepareRequest (httpRequest, request);\n\t\t\t\n\t\t\thttpRequest.load ()\n\t\t\t\t.onProgress (httpRequest_onProgress)\n\t\t\t\t.onError (httpRequest_onError)\n\t\t\t\t.onComplete (function (data:ByteArray):Void {\n\t\t\t\t\t\n\t\t\t\t\t__dispatchStatus ();\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\t\n\t\t\t\t\tvar event = new Event (Event.COMPLETE);\n\t\t\t\t\tdispatchEvent (event);\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar httpRequest = new HTTPRequest<String> ();\n\t\t\t__prepareRequest (httpRequest, request);\n\t\t\t\n\t\t\thttpRequest.load ()\n\t\t\t\t.onProgress (httpRequest_onProgress)\n\t\t\t\t.onError (httpRequest_onError)\n\t\t\t\t.onComplete (function (data:String):Void {\n\t\t\t\t\t\n\t\t\t\t\t__dispatchStatus ();\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\t\n\t\t\t\t\tvar event = new Event (Event.COMPLETE);\n\t\t\t\t\tdispatchEvent (event);\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __dispatchStatus ():Void {\n\t\t\n\t\tvar event = new HTTPStatusEvent (HTTPStatusEvent.HTTP_STATUS, false, false, __httpRequest.responseStatus);\n\t\tevent.responseURL = __httpRequest.uri;\n\t\t\n\t\tvar headers = new Array<URLRequestHeader> ();\n\t\t\n\t\t#if (!display && !macro)\n\t\tif (__httpRequest.enableResponseHeaders && __httpRequest.responseHeaders != null) {\n\t\t\t\n\t\t\tfor (header in __httpRequest.responseHeaders) {\n\t\t\t\t\n\t\t\t\theaders.push (new URLRequestHeader (header.name, header.value));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tevent.responseHeaders = headers;\n\t\tdispatchEvent (event);\n\t\t\n\t}\n\t\n\t\n\tprivate function __prepareRequest (httpRequest:#if (display || macro) Dynamic #else _IHTTPRequest #end, request:URLRequest):Void {\n\t\t\n\t\t__httpRequest = httpRequest;\n\t\t__httpRequest.uri = request.url;\n\t\t\n\t\t__httpRequest.method = switch (request.method) {\n\t\t\t\n\t\t\tcase URLRequestMethod.DELETE: DELETE;\n\t\t\tcase URLRequestMethod.HEAD: HEAD;\n\t\t\tcase URLRequestMethod.OPTIONS: OPTIONS;\n\t\t\tcase URLRequestMethod.POST: POST;\n\t\t\tcase URLRequestMethod.PUT: PUT;\n\t\t\tdefault: GET;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (request.data != null) {\n\t\t\t\n\t\t\tif (Std.is (request.data, URLVariables)) {\n\t\t\t\t\n\t\t\t\tvar fields = Reflect.fields (request.data);\n\t\t\t\t\n\t\t\t\tfor (field in fields) {\n\t\t\t\t\t\n\t\t\t\t\t__httpRequest.formData.set (field, Reflect.field (request.data, field));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (Std.is (request.data, Bytes)) {\n\t\t\t\t\n\t\t\t\t__httpRequest.data = request.data;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__httpRequest.data = Bytes.ofString (Std.string (request.data));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__httpRequest.contentType = request.contentType;\n\t\t\n\t\tif (request.requestHeaders != null) {\n\t\t\t\n\t\t\tfor (header in request.requestHeaders) {\n\t\t\t\t\n\t\t\t\t__httpRequest.headers.push (new HTTPRequestHeader (header.name, header.value));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__httpRequest.followRedirects = request.followRedirects;\n\t\t__httpRequest.timeout = Std.int (request.idleTimeout);\n\t\t__httpRequest.withCredentials = request.manageCookies;\n\t\t\n\t\t// TODO: Better user agent?\n\t\tvar userAgent = request.userAgent;\n\t\tif (userAgent == null) userAgent = \"Mozilla/5.0 (Windows; U; en) AppleWebKit/420+ (KHTML, like Gecko) OpenFL/1.0\";\n\t\t\n\t\t__httpRequest.userAgent = request.userAgent;\n\t\t__httpRequest.enableResponseHeaders = true;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function httpRequest_onError (error:Dynamic):Void {\n\t\t\n\t\t__dispatchStatus ();\n\t\t\n\t\tif (error == 403) {\n\t\t\t\n\t\t\tvar event = new SecurityErrorEvent (SecurityErrorEvent.SECURITY_ERROR);\n\t\t\tevent.text = Std.string (error);\n\t\t\tdispatchEvent (event);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar event = new IOErrorEvent (IOErrorEvent.IO_ERROR);\n\t\t\tevent.text = Std.string (error);\n\t\t\tdispatchEvent (event);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function httpRequest_onProgress (bytesLoaded:Int, bytesTotal:Int):Void {\n\t\t\n\t\tvar event = new ProgressEvent (ProgressEvent.PROGRESS);\n\t\tevent.bytesLoaded = bytesLoaded;\n\t\tevent.bytesTotal = bytesTotal;\n\t\tdispatchEvent (event);\n\t\t\n\t}\n\t\n\t\n}","package lime.system;\n\n\nimport lime._macros.CFFIMacro;\n\n#if (sys && !macro)\nimport sys.io.Process;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass CFFI {\n\t\n\t\n\t@:noCompletion private static var __moduleNames:Map<String, String> = null;\n\t\n\t#if neko\n\tprivate static var __loadedNekoAPI:Bool;\n\t#elseif nodejs\n\tprivate static var __nodeNDLLModule:Dynamic;\n\t#end\n\t\n\tpublic static var available:Bool;\n\tpublic static var enabled:Bool;\n\t\n\t\n\tprivate static function __init__ ():Void {\n\t\t\n\t\t#if lime_cffi\n\t\tavailable = true;\n\t\tenabled = #if disable_cffi false; #else true; #end\n\t\t#else\n\t\tavailable = false;\n\t\tenabled = false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if macro\n\tpublic static function build (defaultLibrary:String = \"lime\") {\n\t\t\n\t\treturn CFFIMacro.build (defaultLibrary);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t/**\n\t * Tries to load a native CFFI primitive on compatible platforms\n\t * @param\tlibrary\tThe name of the native library (such as \"lime\")\n\t * @param\tmethod\tThe exported primitive method name\n\t * @param\targs\tThe number of arguments\n\t * @param\tlazy\tWhether to load the symbol immediately, or to allow lazy loading\n\t * @return\tThe loaded method\n\t */\n\tpublic static function load (library:String, method:String, args:Int = 0, lazy:Bool = false):Dynamic {\n\t\t\n\t\t#if (disable_cffi || macro)\n\t\tvar enabled = false;\n\t\t#end\n\t\t\n\t\t#if optional_cffi\n\t\tif (library != \"lime\" || method != \"neko_init\") {\n\t\t\t\n\t\t\tlazy = true;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tif (!enabled) {\n\t\t\t\n\t\t\treturn Reflect.makeVarArgs (function (__) return {});\n\t\t\t\n\t\t}\n\t\t\n\t\tvar result:Dynamic = null;\n\t\t\n\t\t#if (!disable_cffi && !macro)\n\t\t#if (sys && !html5)\n\t\t\n\t\tif (__moduleNames == null) __moduleNames = new Map<String, String> ();\n\t\t\n\t\tif (lazy) {\n\t\t\t\n\t\t\t__moduleNames.set (library, library);\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\t#if neko\n\t\t\t\tresult = neko.Lib.loadLazy (library, method, args);\n\t\t\t\t#elseif java\n\t\t\t\tresult = __loadJava (library, method, args);\n\t\t\t\t#elseif cpp\n\t\t\t\tresult = cpp.Lib.loadLazy (library, method, args);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) {}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if (cpp && (iphone || emscripten || android || static_link || tvos))\n\t\t\treturn cpp.Lib.load (library, method, args);\n\t\t\t#end\n\t\t\t\n\t\t\tif (__moduleNames.exists (library)) {\n\t\t\t\t\n\t\t\t\t#if cpp\n\t\t\t\treturn cpp.Lib.load (__moduleNames.get (library), method, args);\n\t\t\t\t#elseif neko\n\t\t\t\treturn neko.Lib.load (__moduleNames.get (library), method, args);\n\t\t\t\t#elseif nodejs\n\t\t\t\treturn untyped __nodeNDLLModule.load_lib (__moduleNames.get (library), method, args);\n\t\t\t\t#elseif java\n\t\t\t\tresult = __loadJava (__moduleNames.get (library), method, args);\n\t\t\t\t#elseif cs\n\t\t\t\treturn untyped CSFunctionLoader.load (__moduleNames.get (library), method, args);\n\t\t\t\t#else\n\t\t\t\treturn null;\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#if waxe\n\t\t\tif (library == \"lime\") {\n\t\t\t\t\n\t\t\t\tflash.Lib.load (\"waxe\", \"wx_boot\", 1);\n\t\t\t\t\n\t\t\t}\n\t\t\t#elseif nodejs\n\t\t\tif (__nodeNDLLModule == null) {\n\t\t\t\t\n\t\t\t\t__nodeNDLLModule = untyped require ('ndll');\n\t\t\t\t\n\t\t\t}\n\t\t\t#end\n\t\t\t\n\t\t\t__moduleNames.set (library, library);\n\t\t\t\n\t\t\tresult = __tryLoad (\"./\" + library, library, method, args);\n\t\t\t\n\t\t\tif (result == null) {\n\t\t\t\t\n\t\t\t\tresult = __tryLoad (\".\\\\\" + library, library, method, args);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (result == null) {\n\t\t\t\t\n\t\t\t\tresult = __tryLoad (library, library, method, args);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (result == null) {\n\t\t\t\t\n\t\t\t\tvar slash = (__sysName ().substr (7).toLowerCase () == \"windows\") ? \"\\\\\" : \"/\";\n\t\t\t\tvar haxelib = __findHaxelib (\"lime\");\n\t\t\t\t\n\t\t\t\tif (haxelib != \"\") {\n\t\t\t\t\t\n\t\t\t\t\tresult = __tryLoad (haxelib + slash + \"ndll\" + slash + __sysName () + slash + library, library, method, args);\n\t\t\t\t\t\n\t\t\t\t\tif (result == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tresult = __tryLoad (haxelib + slash + \"ndll\" + slash + __sysName() + \"64\" + slash + library, library, method, args);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__loaderTrace (\"Result : \" + result);\n\t\t\t\n\t\t}\n\t\t\n\t\t#if neko\n\t\tif (library == \"lime\" && method != \"neko_init\") {\n\t\t\t\n\t\t\t__loadNekoAPI (lazy);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t#end\n\t\t#else\n\t\t\n\t\tresult = function (_, _, _, _, _, _) { return { }; };\n\t\t\n\t\t#end\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\tpublic static macro function loadPrime (library:String, method:String, signature:String, lazy:Bool = false):Dynamic {\n\t\t\n\t\t#if (!display && !macro)\n\t\treturn cpp.Prime.load (library, method, signature, lazy);\n\t\t#else\n\t\tvar args = signature.length - 1;\n\t\t\n\t\tif (args > 5) {\n\t\t\t\n\t\t\targs = -1;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn { call: CFFI.load (library, method, args, lazy) };\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function __findHaxelib (library:String):String {\n\t\t\n\t\t#if (sys && !macro && !html5)\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tvar proc = new Process (\"haxelib\", [ \"path\", library ]);\n\t\t\t\t\n\t\t\t\tif (proc != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar stream = proc.stdout;\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar s = stream.readLine ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (s.substr (0, 1) != \"-\") {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstream.close ();\n\t\t\t\t\t\t\t\tproc.close ();\n\t\t\t\t\t\t\t\t__loaderTrace (\"Found haxelib \" + s);\n\t\t\t\t\t\t\t\treturn s;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} catch(e:Dynamic) { }\n\t\t\t\t\t\n\t\t\t\t\tstream.close ();\n\t\t\t\t\tproc.close ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) { }\n\t\t\t\n\t\t#end\n\t\t\n\t\treturn \"\";\n\t\t\n\t}\n\t\n\t\n\tprivate static function __loaderTrace (message:String) {\n\t\t\n\t\t#if (sys && !html5)\n\t\t#if cpp\n\t\tvar get_env = cpp.Lib.load (\"std\", \"get_env\", 1);\n\t\tvar debug = (get_env (\"OPENFL_LOAD_DEBUG\") != null);\n\t\t#else\n\t\tvar debug = (Sys.getEnv (\"OPENFL_LOAD_DEBUG\") !=null);\n\t\t#end\n\t\t\n\t\tif (debug) {\n\t\t\t\n\t\t\tSys.println (message);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if java\n\tprivate static var __loadedLibraries = new Map<String, Bool> ();\n\tprivate static function __loadJava (library:String, method:String, args:Int = 0) {\n\t\t\n\t\tif (!__loadedLibraries.exists (library)) {\n\t\t\t\n\t\t\tvar extension = #if android \".so\" #else \".ndll\" #end;\n\t\t\tvar path = Sys.getCwd () + \"/\" + library + extension;\n\t\t\t\n\t\t\tjava.lang.System.load (path);\n\t\t\t\n\t\t\t__loadedLibraries.set (library, true);\n\t\t\t\n\t\t\ttrace (\"load library: \" + library);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if neko\n\tprivate static function __loadNekoAPI (lazy:Bool):Void {\n\t\t\n\t\tif (!__loadedNekoAPI) {\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tvar init = load (\"lime\", \"neko_init\", 5);\n\t\t\t\t\n\t\t\t\tif (init != null) {\n\t\t\t\t\t\n\t\t\t\t\t__loaderTrace (\"Found nekoapi @ \" + __moduleNames.get (\"lime\"));\n\t\t\t\t\tinit (function(s) return new String (s), function (len:Int) { var r = []; if (len > 0) r[len - 1] = null; return r; }, null, true, false);\n\t\t\t\t\t\n\t\t\t\t} else if (!lazy) {\n\t\t\t\t\t\n\t\t\t\t\tthrow (\"Could not find NekoAPI interface.\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\n\t\t\t\tif (!lazy) {\n\t\t\t\t\t\n\t\t\t\t\tthrow (\"Could not find NekoAPI interface.\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__loadedNekoAPI = true;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n\tprivate static function __sysName ():String {\n\t\t\n\t\t#if (sys && !html5)\n\t\t#if cpp\n\t\tvar sys_string = cpp.Lib.load (\"std\", \"sys_string\", 0);\n\t\treturn sys_string ();\n\t\t#else\n\t\treturn Sys.systemName ();\n\t\t#end\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function __tryLoad (name:String, library:String, func:String, args:Int):Dynamic {\n\t\t\n\t\t#if sys\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t#if cpp\n\t\t\tvar result = cpp.Lib.load (name, func, args);\n\t\t\t#elseif (neko)\n\t\t\tvar result = neko.Lib.load (name, func, args);\n\t\t\t#elseif nodejs\n\t\t\tvar result = untyped __nodeNDLLModule.load_lib (name, func, args);\n\t\t\t#elseif java\n\t\t\tvar result = __loadJava (name, func, args);\n\t\t\t#elseif cs\n\t\t\tvar result = CSFunctionLoader.load (name, func, args);\n\t\t\t#else\n\t\t\tvar result = null;\n\t\t\t#end\n\t\t\t\n\t\t\tif (result != null) {\n\t\t\t\t\n\t\t\t\t__loaderTrace (\"Got result \" + name);\n\t\t\t\t__moduleNames.set (library, name);\n\t\t\t\treturn result;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__loaderTrace (\"Failed to load : \" + name);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if cs\n@:dox(hide) private class CSFunctionLoader\n{\n\tpublic static function load (name:String, func:String, args:Int):Dynamic {\n\t\t\n\t\tvar func:cs.ndll.NDLLFunction = cs.ndll.NDLLFunction.Load (name, func, args);\n\t\t\n\t\tif (func == null) {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (args == -1) {\n\t\t\t\n\t\t\tvar haxeFunc:Dynamic = function (args:Array<Dynamic>):Dynamic {\n\t\t\t\t\n\t\t\t\treturn func.CallMult(args);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn Reflect.makeVarArgs (haxeFunc);\n\t\t\t\n\t\t} else if (args == 0) {\n\t\t\t\n\t\t\treturn function ():Dynamic {\n\t\t\t\t\n\t\t\t\treturn func.Call0();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (args == 1) {\n\t\t\t\n\t\t\treturn function (arg1:Dynamic):Dynamic {\n\t\t\t\t\n\t\t\t\treturn func.Call1(arg1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (args == 2) {\n\t\t\t\n\t\t\treturn function (arg1:Dynamic, arg2:Dynamic):Dynamic {\n\t\t\t\t\n\t\t\t\treturn func.Call2(arg1, arg2);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (args == 3) {\n\t\t\t\n\t\t\treturn function (arg1:Dynamic, arg2:Dynamic, arg3:Dynamic):Dynamic {\n\t\t\t\t\n\t\t\t\treturn func.Call3(arg1, arg2, arg3);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (args == 4) {\n\t\t\t\n\t\t\treturn function (arg1:Dynamic, arg2:Dynamic, arg3:Dynamic, arg4:Dynamic):Dynamic {\n\t\t\t\t\n\t\t\t\treturn func.Call4(arg1, arg2, arg3, arg4);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t} else if (args == 5) {\n\t\t\t\n\t\t\treturn function (arg1:Dynamic, arg2:Dynamic, arg3:Dynamic, arg4:Dynamic, arg5:Dynamic):Dynamic {\n\t\t\t\t\n\t\t\t\treturn func.Call5(arg1, arg2, arg3, arg4, arg5);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n}\n#end","package lime.system;\n\n\nimport lime._backend.native.NativeCFFI;\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nabstract CFFIPointer(Dynamic) from Dynamic to Dynamic {\n\t\n\t\n\tpublic inline function new (handle:Dynamic) {\n\t\t\n\t\tthis = handle;\n\t\t\n\t}\n\t\n\t\n\tpublic function get ():Float {\n\t\t\n\t\tif (this != null) {\n\t\t\t\n\t\t\t#if (lime_cffi && !macro)\n\t\t\treturn NativeCFFI.lime_cffi_get_native_pointer (this);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:op(A == B) private static inline function equals (a:CFFIPointer, b:Int):Bool { return a.get () == b; }\n\t@:noCompletion @:op(A == B) private static inline function equalsPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () == b.get (); }\n\t@:noCompletion @:op(A > B) private static inline function greaterThan (a:CFFIPointer, b:Int):Bool { return a.get () > b; }\n\t@:noCompletion @:op(A > B) private static inline function greaterThanPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () > b.get (); }\n\t@:noCompletion @:op(A >= B) private static inline function greaterThanOrEqual (a:CFFIPointer, b:Int):Bool { return a.get () >= b; }\n\t@:noCompletion @:op(A >= B) private static inline function greaterThanOrEqualPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () >= b.get (); }\n\t@:noCompletion @:op(A < B) private static inline function lessThan (a:CFFIPointer, b:Int):Bool { return a.get () < b; }\n\t@:noCompletion @:op(A < B) private static inline function lessThanPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () < b.get (); }\n\t@:noCompletion @:op(A <= B) private static inline function lessThanOrEqual (a:CFFIPointer, b:Int):Bool { return a.get () <= b; }\n\t@:noCompletion @:op(A <= B) private static inline function lessThanOrEqualPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () <= b.get (); }\n\t@:noCompletion @:op(A != B) private static inline function notEquals (a:CFFIPointer, b:Int):Bool { return a.get () != b; }\n\t@:noCompletion @:op(A != B) private static inline function notEqualsPointer (a:CFFIPointer, b:CFFIPointer):Bool { return a.get () != b.get (); }\n\t\n\t\n}","package lime.system;\n\n\nimport lime._backend.native.NativeCFFI;\nimport lime.app.Application;\nimport lime.app.Event;\n\n#if flash\nimport flash.desktop.Clipboard in FlashClipboard;\n#elseif js\nimport lime._backend.html5.HTML5Window;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n@:access(lime.ui.Window)\n\n\nclass Clipboard {\n\t\n\t\n\tpublic static var onUpdate = new Event<Void->Void> ();\n\tpublic static var text (get, set):String;\n\t\n\tprivate static var _text:String;\n\t\n\t\n\t\n\tprivate static function __update ():Void {\n\t\t\n\t\tvar cacheText = _text;\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t_text = NativeCFFI.lime_clipboard_get_text ();\n\t\t#elseif flash\n\t\tif (FlashClipboard.generalClipboard.hasFormat (TEXT_FORMAT)) {\n\t\t\t\n\t\t\t_text = FlashClipboard.generalClipboard.getData (TEXT_FORMAT);\n\t\t\t\n\t\t}\n\t\t_text = null;\n\t\t#end\n\t\t\n\t\tif (_text != cacheText) {\n\t\t\t\n\t\t\tonUpdate.dispatch ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate static function get_text ():String {\n\t\t\n\t\t#if flash\n\t\t__update ();\n\t\t#end\n\t\t\n\t\treturn _text;\n\t\t\n\t}\n\t\n\t\n\tprivate static function set_text (value:String):String {\n\t\t\n\t\tvar cacheText = _text;\n\t\t_text = value;\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tNativeCFFI.lime_clipboard_set_text (value);\n\t\t#elseif flash\n\t\tFlashClipboard.generalClipboard.setData (TEXT_FORMAT, value);\n\t\t#elseif (js && html5)\n\t\tvar window = Application.current.window;\n\t\tif (window != null) {\n\t\t\t\n\t\t\twindow.backend.setClipboard (value);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tif (_text != cacheText) {\n\t\t\t\n\t\t\tonUpdate.dispatch ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.system;\n\n\nimport lime.math.Rectangle;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Display {\n\t\n\t\n\t/**\n\t * The desktop area represented by this display, with the upper-leftmost display at 0,0\n\t **/\n\tpublic var bounds (default, null):Rectangle;\n\t\n\t/**\n\t * The current display mode\n\t **/\n\tpublic var currentMode (default, null):DisplayMode;\n\t\n\tpublic var id (default, null):Int;\n\t\n\t/**\n\t * Pixel density of the display\n\t */\n\tpublic var dpi (default, null):Float;\n\t\n\t/**\n\t * The name of the device, such as \"Samsung SyncMaster P2350\", \"iPhone 6\", \"Oculus Rift DK2\", etc.\n\t **/\n\tpublic var name (default, null):String;\n\t\n\t/**\n\t * All of the display modes supported by this device\n\t **/\n\tpublic var supportedModes (default, null):Array<DisplayMode>;\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}\n","package lime.system;\n\n\nimport lime.graphics.PixelFormat;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass DisplayMode {\n\t\n\t\n\t/**\n\t * vertical resolution\n\t **/\n\tpublic var height (default, null):Int;\n\t\n\t/**\n\t * pixel format\n\t **/\n\tpublic var pixelFormat (default, null):PixelFormat;\n\t\n\t/**\n\t * refresh rate in Hz\n\t **/\n\tpublic var refreshRate (default, null):Int;\n\t\n\t/**\n\t * horizontal resolution\n\t **/\n\tpublic var width (default, null):Int;\n\t\n\t\n\tprivate function new (width:Int, height:Int, refreshRate:Int, pixelFormat:PixelFormat) {\n\t\t\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.refreshRate = refreshRate;\n\t\tthis.pixelFormat = pixelFormat;\n\t\t\n\t}\n\t\n\t\n}","package lime.system;\n\n\nimport haxe.Constraints;\nimport lime._backend.native.NativeCFFI;\nimport lime.app.Application;\nimport lime.app.Config;\nimport lime.math.Rectangle;\nimport lime.utils.ArrayBuffer;\nimport lime.utils.UInt8Array;\nimport lime.utils.UInt16Array;\n\n#if flash\nimport flash.net.URLRequest;\nimport flash.system.Capabilities;\nimport flash.Lib;\n#end\n\n#if air\nimport flash.desktop.NativeApplication;\n#end\n\n#if (js && html5)\nimport js.html.Element;\nimport js.Browser;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n@:access(lime.system.Display)\n@:access(lime.system.DisplayMode)\n\n#if (cpp && windows && !lime_disable_gpu_hint)\n@:cppFileCode('\n#if defined(HX_WINDOWS)\nextern \"C\" {\n\t_declspec(dllexport) unsigned long NvOptimusEnablement = 0x00000001;\n\t_declspec(dllexport) int AmdPowerXpressRequestHighPerformance = 1;\n}\n#endif\n')\n#end\n\n\nclass System {\n\t\n\t\n\tpublic static var allowScreenTimeout (get, set):Bool;\n\tpublic static var applicationDirectory (get, null):String;\n\tpublic static var applicationStorageDirectory (get, null):String;\n\tpublic static var desktopDirectory (get, null):String;\n\tpublic static var disableCFFI:Bool;\n\tpublic static var documentsDirectory (get, null):String;\n\tpublic static var endianness (get, null):Endian;\n\tpublic static var fontsDirectory (get, null):String;\n\tpublic static var numDisplays (get, null):Int;\n\tpublic static var userDirectory (get, null):String;\n\t\n\t@:noCompletion private static var __applicationConfig:Map<String, Config>;\n\t@:noCompletion private static var __applicationEntryPoint:Map<String, Function>;\n\t@:noCompletion private static var __directories = new Map<SystemDirectory, String> ();\n\t\n\t\n\t#if (js && html5)\n\t@:keep @:expose(\"lime.embed\")\n\tpublic static function embed (projectName:String, element:Dynamic, width:Null<Int> = null, height:Null<Int> = null, windowConfig:Dynamic = null):Void {\n\t\t\n\t\tif (__applicationEntryPoint == null || __applicationConfig == null) return;\n\t\t\n\t\tif (__applicationEntryPoint.exists (projectName)) {\n\t\t\t\n\t\t\tvar htmlElement:Element = null;\n\t\t\t\n\t\t\tif (Std.is (element, String)) {\n\t\t\t\t\n\t\t\t\thtmlElement = cast Browser.document.getElementById (element);\n\t\t\t\t\n\t\t\t} else if (element == null) {\n\t\t\t\t\n\t\t\t\thtmlElement = cast Browser.document.createElement (\"div\");\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\thtmlElement = cast element;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (htmlElement == null) {\n\t\t\t\t\n\t\t\t\tBrowser.window.console.log (\"[lime.embed] ERROR: Cannot find target element: \" + element);\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (width == null) {\n\t\t\t\t\n\t\t\t\twidth = 0;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (height == null) {\n\t\t\t\t\n\t\t\t\theight = 0;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar defaultConfig = __applicationConfig[projectName];\n\t\t\tvar config:Config = {};\n\t\t\t\n\t\t\t__copyMissingFields (config, defaultConfig);\n\t\t\t\n\t\t\tif (windowConfig != null) {\n\t\t\t\t\n\t\t\t\tconfig.windows = [];\n\t\t\t\t\n\t\t\t\tif (Std.is (windowConfig, Array)) {\n\t\t\t\t\t\n\t\t\t\t\tconfig.windows = windowConfig;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tconfig.windows[0] = windowConfig;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (i in 0...config.windows.length) {\n\t\t\t\t\t\n\t\t\t\t\tif (i < defaultConfig.windows.length) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__copyMissingFields (config.windows[i], defaultConfig.windows[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t__copyMissingFields (config.windows[i].parameters, defaultConfig.windows[i].parameters);\n\t\t\t\t\t\n\t\t\t\t\tif (Std.is (windowConfig.background, String)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar background = StringTools.replace (Std.string (windowConfig.background), \"#\", \"\");\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (background.indexOf (\"0x\") > -1) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twindowConfig.background = Std.parseInt (background);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twindowConfig.background = Std.parseInt (\"0x\" + background);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (Reflect.field (config.windows[0], \"rootPath\")) {\n\t\t\t\t\n\t\t\t\tconfig.rootPath = Reflect.field (config.windows[0], \"rootPath\");\n\t\t\t\tReflect.deleteField (config.windows[0], \"rootPath\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconfig.windows[0].element = htmlElement;\n\t\t\tconfig.windows[0].width = width;\n\t\t\tconfig.windows[0].height = height;\n\t\t\t\n\t\t\t__applicationEntryPoint[projectName] (config);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function exit (code:Int):Void {\n\t\t\n\t\t#if ((sys || air) && !macro)\n\t\tif (Application.current != null) {\n\t\t\t\n\t\t\tApplication.current.onExit.dispatch (code);\n\t\t\t\n\t\t\tif (Application.current.onExit.canceled) {\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t#if sys\n\t\tSys.exit (code);\n\t\t#elseif air\n\t\tNativeApplication.nativeApplication.exit (code);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getDisplay (id:Int):Display {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tvar displayInfo:Dynamic = NativeCFFI.lime_system_get_display (id);\n\t\t\n\t\tif (displayInfo != null) {\n\t\t\t\n\t\t\tvar display = new Display ();\n\t\t\tdisplay.id = id;\n\t\t\tdisplay.name = displayInfo.name;\n\t\t\tdisplay.bounds = new Rectangle (displayInfo.bounds.x, displayInfo.bounds.y, displayInfo.bounds.width, displayInfo.bounds.height);\n\t\t\t\n\t\t\t#if ios\n\t\t\tvar tablet = NativeCFFI.lime_system_get_ios_tablet ();\n\t\t\tvar scale = Application.current.window.scale;\n\t\t\tif (!tablet && scale > 2.46) {\n\t\t\t\tdisplay.dpi = 401; // workaround for iPhone Plus\n\t\t\t} else {\n\t\t\t\tdisplay.dpi = (tablet ? 132 : 163) * scale;\n\t\t\t}\n\t\t\t#elseif android\n\t\t\tvar getDisplayDPI = JNI.createStaticMethod (\"org/haxe/lime/GameActivity\", \"getDisplayDPI\", \"()D\");\n\t\t\tdisplay.dpi = Math.round (getDisplayDPI ());\n\t\t\t#else\n\t\t\tdisplay.dpi = displayInfo.dpi;\n\t\t\t#end\n\t\t\t\n\t\t\tdisplay.supportedModes = [];\n\t\t\t\n\t\t\tvar displayMode;\n\t\t\t\n\t\t\tfor (mode in cast (displayInfo.supportedModes, Array<Dynamic>)) {\n\t\t\t\t\n\t\t\t\tdisplayMode = new DisplayMode (mode.width, mode.height, mode.refreshRate, mode.pixelFormat);\n\t\t\t\tdisplay.supportedModes.push (displayMode);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar mode = displayInfo.currentMode;\n\t\t\tvar currentMode = new DisplayMode (mode.width, mode.height, mode.refreshRate, mode.pixelFormat);\n\t\t\t\n\t\t\tfor (mode in display.supportedModes) {\n\t\t\t\t\n\t\t\t\tif (currentMode.pixelFormat == mode.pixelFormat && currentMode.width == mode.width && currentMode.height == mode.height && currentMode.refreshRate == mode.refreshRate) {\n\t\t\t\t\t\n\t\t\t\t\tcurrentMode = mode;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tdisplay.currentMode = currentMode;\n\t\t\t\n\t\t\treturn display;\n\t\t\t\n\t\t}\n\t\t#elseif (flash || html5)\n\t\tif (id == 0) {\n\t\t\t\n\t\t\tvar display = new Display ();\n\t\t\tdisplay.id = 0;\n\t\t\tdisplay.name = \"Generic Display\";\n\t\t\t\n\t\t\t#if flash\n\t\t\tdisplay.dpi = Capabilities.screenDPI;\n\t\t\tdisplay.currentMode = new DisplayMode (Std.int (Capabilities.screenResolutionX), Std.int (Capabilities.screenResolutionY), 60, ARGB32);\n\t\t\t#elseif (js && html5)\n\t\t\t//var div = Browser.document.createElement (\"div\");\n\t\t\t//div.style.width = \"1in\";\n\t\t\t//Browser.document.body.appendChild (div);\n\t\t\t//var ppi = Browser.document.defaultView.getComputedStyle (div, null).getPropertyValue (\"width\");\n\t\t\t//Browser.document.body.removeChild (div);\n\t\t\t//display.dpi = Std.parseFloat (ppi);\n\t\t\tdisplay.dpi = 96 * Browser.window.devicePixelRatio;\n\t\t\tdisplay.currentMode = new DisplayMode (Browser.window.screen.width, Browser.window.screen.height, 60, ARGB32);\n\t\t\t#end\n\t\t\t\n\t\t\tdisplay.supportedModes = [ display.currentMode ];\n\t\t\tdisplay.bounds = new Rectangle (0, 0, display.currentMode.width, display.currentMode.height);\n\t\t\treturn display;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getTimer ():Int {\n\t\t\n\t\t#if flash\n\t\treturn flash.Lib.getTimer ();\n\t\t#elseif js\n\t\treturn Std.int (Browser.window.performance.now ());\n\t\t#elseif (!disable_cffi && !macro)\n\t\treturn cast NativeCFFI.lime_system_get_timer ();\n\t\t#elseif cpp\n\t\treturn Std.int (untyped __global__.__time_stamp () * 1000);\n\t\t#elseif sys\n\t\treturn Std.int (Sys.time () * 1000);\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\tpublic static inline function load (library:String, method:String, args:Int = 0, lazy:Bool = false):Dynamic {\n\t\t\n\t\t#if !macro\n\t\treturn CFFI.load (library, method, args, lazy);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function openFile (path:String):Void {\n\t\t\n\t\tif (path != null) {\n\t\t\t\n\t\t\t#if (sys && windows)\n\t\t\t\n\t\t\tSys.command (\"start\", [ path ]);\n\t\t\t\n\t\t\t#elseif mac\n\t\t\t\n\t\t\tSys.command (\"/usr/bin/open\", [ path ]);\n\t\t\t\n\t\t\t#elseif linux\n\t\t\t\n\t\t\tSys.command (\"/usr/bin/xdg-open\", [ path, \"&\" ]);\n\t\t\t\n\t\t\t#elseif (js && html5)\n\t\t\t\n\t\t\tBrowser.window.open (path, \"_blank\");\n\t\t\t\n\t\t\t#elseif flash\n\t\t\t\n\t\t\tLib.getURL (new URLRequest (path), \"_blank\");\n\t\t\t\n\t\t\t#elseif android\n\t\t\t\n\t\t\tvar openFile = JNI.createStaticMethod (\"org/haxe/lime/GameActivity\", \"openFile\", \"(Ljava/lang/String;)V\");\n\t\t\topenFile (path);\n\t\t\t\n\t\t\t#elseif (lime_cffi && !macro)\n\t\t\t\n\t\t\tNativeCFFI.lime_system_open_file (path);\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function openURL (url:String, target:String = \"_blank\"):Void {\n\t\t\n\t\tif (url != null) {\n\t\t\t\n\t\t\t#if desktop\n\t\t\t\n\t\t\topenFile (url);\n\t\t\t\n\t\t\t#elseif (js && html5)\n\t\t\t\n\t\t\tBrowser.window.open (url, target);\n\t\t\t\n\t\t\t#elseif flash\n\t\t\t\n\t\t\tLib.getURL (new URLRequest (url), target);\n\t\t\t\n\t\t\t#elseif android\n\t\t\t\n\t\t\tvar openURL = JNI.createStaticMethod (\"org/haxe/lime/GameActivity\", \"openURL\", \"(Ljava/lang/String;Ljava/lang/String;)V\");\n\t\t\topenURL (url, target);\n\t\t\t\n\t\t\t#elseif (lime_cffi && !macro)\n\t\t\t\n\t\t\tNativeCFFI.lime_system_open_url (url, target);\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __copyMissingFields (target:Dynamic, source:Dynamic):Void {\n\t\t\n\t\tif (source == null || target == null) return;\n\t\t\n\t\tfor (field in Reflect.fields (source)) {\n\t\t\t\n\t\t\tif (!Reflect.hasField (target, field)) {\n\t\t\t\t\n\t\t\t\tReflect.setField (target, field, Reflect.field (source, field));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function __getDirectory (type:SystemDirectory):String {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\tif (__directories.exists (type)) {\n\t\t\t\n\t\t\treturn __directories.get (type);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar path:String;\n\t\t\t\n\t\t\tif (type == APPLICATION_STORAGE) {\n\t\t\t\t\n\t\t\t\tvar company = \"MyCompany\";\n\t\t\t\tvar file = \"MyApplication\";\n\t\t\t\t\n\t\t\t\tif (Application.current != null && Application.current.config != null) {\n\t\t\t\t\t\n\t\t\t\t\tif (Application.current.config.company != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcompany = Application.current.config.company;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (Application.current.config.file != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfile = Application.current.config.file;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpath = NativeCFFI.lime_system_get_directory (type, company, file);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tpath = NativeCFFI.lime_system_get_directory (type, null, null);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#if windows\n\t\t\tvar seperator = \"\\\\\";\n\t\t\t#else\n\t\t\tvar seperator = \"/\";\n\t\t\t#end\n\t\t\t\n\t\t\tif (path != null && path.length > 0 && !StringTools.endsWith (path, seperator)) {\n\t\t\t\t\n\t\t\t\tpath += seperator;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__directories.set (type, path);\n\t\t\treturn path;\n\t\t\t\n\t\t}\n\t\t\n\t\t#elseif flash\n\t\t\n\t\tif (type != FONTS && Capabilities.playerType == \"Desktop\") {\n\t\t\t\n\t\t\tvar propertyName = switch (type) {\n\t\t\t\t\n\t\t\t\tcase APPLICATION: \"applicationDirectory\";\n\t\t\t\tcase APPLICATION_STORAGE: \"applicationStorageDirectory\";\n\t\t\t\tcase DESKTOP: \"desktopDirectory\";\n\t\t\t\tcase DOCUMENTS: \"documentsDirectory\";\n\t\t\t\tdefault: \"userDirectory\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn Reflect.getProperty (Type.resolveClass (\"flash.filesystem.File\"), propertyName).nativePath;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __registerEntryPoint (projectName:String, entryPoint:Function, config:Config):Void {\n\t\t\n\t\tif (__applicationConfig == null) {\n\t\t\t\n\t\t\t__applicationConfig = new Map ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__applicationEntryPoint == null) {\n\t\t\t\n\t\t\t__applicationEntryPoint = new Map ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__applicationEntryPoint[projectName] = entryPoint;\n\t\t__applicationConfig[projectName] = config;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate static function get_allowScreenTimeout ():Bool {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_system_get_allow_screen_timeout ();\n\t\t#else\n\t\treturn true;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function set_allowScreenTimeout (value:Bool):Bool {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_system_set_allow_screen_timeout (value);\n\t\t#else\n\t\treturn true;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_applicationDirectory ():String {\n\t\t\n\t\treturn __getDirectory (APPLICATION);\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_applicationStorageDirectory ():String {\n\t\t\n\t\treturn __getDirectory (APPLICATION_STORAGE);\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_desktopDirectory ():String {\n\t\t\n\t\treturn __getDirectory (DESKTOP);\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_documentsDirectory ():String {\n\t\t\n\t\treturn __getDirectory (DOCUMENTS);\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_fontsDirectory ():String {\n\t\t\n\t\treturn __getDirectory (FONTS);\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_numDisplays ():Int {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn NativeCFFI.lime_system_get_num_displays ();\n\t\t#else\n\t\treturn 1;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_userDirectory ():String {\n\t\t\n\t\treturn __getDirectory (USER);\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_endianness ():Endian {\n\t\t\n\t\tif (endianness == null) {\n\t\t\t\n\t\t\t#if (ps3 || wiiu || flash)\n\t\t\treturn BIG_ENDIAN;\n\t\t\t#else\n\t\t\tvar arrayBuffer = new ArrayBuffer (2);\n\t\t\tvar uint8Array = new UInt8Array (arrayBuffer);\n\t\t\tvar uint16array = new UInt16Array (arrayBuffer);\n\t\t\tuint8Array[0] = 0xAA;\n\t\t\tuint8Array[1] = 0xBB;\n\t\t\tif (uint16array[0] == 0xAABB) endianness = BIG_ENDIAN;\n\t\t\telse endianness = LITTLE_ENDIAN;\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn endianness;\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:enum private abstract SystemDirectory(Int) from Int to Int from UInt to UInt {\n\t\n\tvar APPLICATION = 0;\n\tvar APPLICATION_STORAGE = 1;\n\tvar DESKTOP = 2;\n\tvar DOCUMENTS = 3;\n\tvar FONTS = 4;\n\tvar USER = 5;\n\t\n}","package lime.utils;\n\n#if (js && !display)\n\n    @:forward\n    abstract UInt16Array(js.html.Uint16Array)\n        from js.html.Uint16Array\n        to js.html.Uint16Array {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 2;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Int>, #end\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n            if(elements != null) {\n                this = new js.html.Uint16Array( elements );\n            } else if(array != null) {\n                this = new js.html.Uint16Array( untyped array );\n            #if openfl } else if(vector != null) { this = new js.html.Uint16Array( untyped untyped (vector).__array ); #end\n            } else if(view != null) {\n                this = new js.html.Uint16Array( untyped view );\n            } else if(buffer != null) {\n                if(len == null) {\n                    this = new js.html.Uint16Array( buffer, byteoffset );\n                } else {\n                    this = new js.html.Uint16Array( buffer, byteoffset, len );\n                }\n            } else {\n                this = null;\n            }\n        }\n\n        @:arrayAccess @:extern inline function __set(idx:Int, val:UInt) : UInt return this[idx] = val;\n        @:arrayAccess @:extern inline function __get(idx:Int) : UInt return this[idx];\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt16Array {\n            if(byteOffset == null) return new js.html.Uint16Array(cast bytes.getData());\n            if(len == null) return new js.html.Uint16Array(cast bytes.getData(), byteOffset);\n            return new js.html.Uint16Array(cast bytes.getData(), byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\n        }\n\n        inline function toString() return this != null ? 'UInt16Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#else\n\n    import lime.utils.ArrayBufferView;\n\n    @:forward\n    abstract UInt16Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 2;\n\n        public var length (get, never):Int;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?buffer:ArrayBuffer,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Int>, #end\n            ?view:ArrayBufferView,\n            ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n\n            if(elements != null) {\n                this = new ArrayBufferView( elements, Uint16 );\n            } else if(array != null) {\n                this = new ArrayBufferView(0, Uint16).initArray(array);\n            #if openfl } else if(vector != null) { this = new ArrayBufferView(0, Uint16).initArray(untyped (vector).__array); #end\n            } else if(view != null) {\n                this = new ArrayBufferView(0, Uint16).initTypedArray(view);\n            } else if(buffer != null) {\n                this = new ArrayBufferView(0, Uint16).initBuffer(buffer, byteoffset, len);\n            } else {\n                throw \"Invalid constructor arguments for UInt16Array\";\n            }\n        }\n\n    //Public API\n\n        public inline function subarray( begin:Int, end:Null<Int> = null) : UInt16Array return this.subarray(begin, end);\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt16Array {\n            return new UInt16Array(bytes, byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return this.buffer;\n        }\n\n    //Internal\n\n        inline function get_length() return this.length;\n\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __get(idx:Int) {\n            return ArrayBufferIO.getUint16(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT));\n        }\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __set(idx:Int, val:UInt) {\n            ArrayBufferIO.setUint16(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\n            return val;\n        }\n\n        inline function toString() return this != null ? 'UInt16Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#end //!js","package lime.text;\n\n\nabstract Glyph(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tpublic function new (i:Int) {\n\t\t\n\t\tthis = i;\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime.text;\n\n\nimport lime.math.Vector2;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass GlyphMetrics {\n\t\n\t\n\tpublic var advance:Vector2;\n\tpublic var height:Int;\n\tpublic var horizontalBearing:Vector2;\n\tpublic var verticalBearing:Vector2;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package lime.text;\n\n\nimport lime.math.Vector2;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass GlyphPosition {\n\t\n\t\n\tpublic var advance:Vector2;\n\tpublic var glyph:Glyph;\n\tpublic var offset:Vector2;\n\t\n\t\n\tpublic function new (glyph:Glyph, advance:Vector2, offset:Vector2 = null) {\n\t\t\n\t\tthis.glyph = glyph;\n\t\tthis.advance = advance;\n\t\t\n\t\tif (offset != null) {\n\t\t\t\n\t\t\tthis.offset = offset;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis.offset = new Vector2 ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package lime.text;\n\n\n@:enum abstract TextDirection(Int) to (Int) {\n\t\n\t\n\tvar INVALID = 0;\n\tvar LEFT_TO_RIGHT = 4;\n\tvar RIGHT_TO_LEFT = 5;\n\tvar TOP_TO_BOTTOM = 6;\n\tvar BOTTOM_TO_TOP = 7;\n\t\n\t\n\tpublic var backward (get, never):Bool;\n\tpublic var forward (get, never):Bool;\n\tpublic var horizontal (get, never):Bool;\n\tpublic var vertical (get, never):Bool;\n\t\n\t\n\tpublic inline function reverse ():Void {\n\t\t\n\t\tthis = this ^ 1;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn switch (this) {\n\t\t\t\n\t\t\tcase LEFT_TO_RIGHT: \"leftToRight\";\n\t\t\tcase RIGHT_TO_LEFT: \"rightToLeft\";\n\t\t\tcase TOP_TO_BOTTOM: \"topToBottom\";\n\t\t\tcase BOTTOM_TO_TOP: \"bottomToTop\";\n\t\t\tdefault: \"\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_backward ():Bool {\n\t\t\n\t\treturn (this & ~2) == 5;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_forward ():Bool {\n\t\t\n\t\treturn (this & ~2) == 4;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_horizontal ():Bool {\n\t\t\n\t\treturn (this & ~1) == 4;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function get_vertical ():Bool {\n\t\t\n\t\treturn (this & ~1) == 6;\n\t\t\n\t}\n\t\n\t\n}","package lime.text;\n\n\nimport haxe.io.Bytes;\nimport lime._backend.native.NativeCFFI;\nimport lime.math.Vector2;\nimport lime.system.System;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n@:access(lime.text.Font)\n\n\nclass TextLayout {\n\t\n\t\n\tpublic var direction (get, set):TextDirection;\n\tpublic var font (default, set):Font;\n\tpublic var glyphs (get, null):Array<Glyph>;\n\tpublic var language (get, set):String;\n\t @:isVar public var positions (get, null):Array<GlyphPosition>;\n\tpublic var script (get, set):TextScript;\n\tpublic var size (default, set):Int;\n\tpublic var text (default, set):String;\n\t\n\tprivate var __dirty:Bool;\n\t\n\t@:noCompletion private var __buffer:Bytes;\n\t@:noCompletion private var __direction:TextDirection;\n\t@:noCompletion private var __handle:Dynamic;\n\t@:noCompletion private var __language:String;\n\t@:noCompletion private var __script:TextScript;\n\t\n\t\n\tpublic function new (text:String = \"\", font:Font = null, size:Int = 12, direction:TextDirection = LEFT_TO_RIGHT, script:TextScript = COMMON, language:String = \"en\") {\n\t\t\n\t\tthis.text = text;\n\t\tthis.font = font;\n\t\tthis.size = size;\n\t\t__direction = direction;\n\t\t__script = script;\n\t\t__language = language;\n\t\t\n\t\tpositions = [];\n\t\t__dirty = true;\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t__handle = NativeCFFI.lime_text_layout_create (__direction, __script, __language);\n\t\t#end\n\t}\n\t\n\t\n\t@:noCompletion private function __position ():Void {\n\t\t\n\t\tpositions = [];\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\tif (__handle != null && text != null && text != \"\" && font != null && font.src != null) {\n\t\t\t\n\t\t\tif (__buffer == null) {\n\t\t\t\t\n\t\t\t\t__buffer = Bytes.alloc (text.length * 5);\n\t\t\t\t//__buffer.endian = (System.endianness == BIG_ENDIAN ? \"bigEndian\" : \"littleEndian\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar data = NativeCFFI.lime_text_layout_position (__handle, font.src, size, text, #if cs null #else __buffer #end);\n\t\t\tvar position = 0;\n\t\t\t\n\t\t\tif (__buffer.length > 4) {\n\t\t\t\t\n\t\t\t\tvar count = __buffer.getInt32 (position); position += 4;\n\t\t\t\tvar codepoint, index, advanceX, advanceY, offsetX, offsetY;\n\t\t\t\tvar lastIndex = -1;\n\t\t\t\t\n\t\t\t\tfor (i in 0...count) {\n\t\t\t\t\t\n\t\t\t\t\tcodepoint = __buffer.getInt32 (position); position += 4;\n\t\t\t\t\tindex = __buffer.getInt32 (position); position += 4;\n\t\t\t\t\tadvanceX = __buffer.getFloat (position); position += 4;\n\t\t\t\t\tadvanceY = __buffer.getFloat (position); position += 4;\n\t\t\t\t\toffsetX = __buffer.getFloat (position); position += 4;\n\t\t\t\t\toffsetY = __buffer.getFloat (position); position += 4;\n\t\t\t\t\t\n\t\t\t\t\tfor (j in lastIndex + 1...index) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// TODO: Handle differently?\n\t\t\t\t\t\t\n\t\t\t\t\t\tpositions.push (new GlyphPosition (0, new Vector2 (0, 0), new Vector2 (0, 0)));\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpositions.push (new GlyphPosition (codepoint, new Vector2 (advanceX, advanceY), new Vector2 (offsetX, offsetY)));\n\t\t\t\t\tlastIndex = index;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_positions ():Array<GlyphPosition> {\n\t\t\n\t\tif (__dirty) {\n\t\t\t\n\t\t\t__dirty = false;\n\t\t\t__position ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn positions;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_direction ():TextDirection {\n\t\t\n\t\treturn __direction;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_direction (value:TextDirection):TextDirection {\n\t\t\n\t\tif (value == __direction) return value;\n\t\t\n\t\t__direction = value;\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tNativeCFFI.lime_text_layout_set_direction (__handle, value);\n\t\t#end\n\t\t\n\t\t__dirty = true;\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_font (value:Font):Font {\n\t\t\n\t\tif (value == this.font) return value;\n\t\t\n\t\tthis.font = value;\n\t\t__dirty = true;\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_glyphs ():Array<Glyph> {\n\t\t\n\t\tvar glyphs = [];\n\t\t\n\t\tfor (position in positions) {\n\t\t\t\n\t\t\tglyphs.push (position.glyph);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn glyphs;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_language ():String {\n\t\t\n\t\treturn __language;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_language (value:String):String {\n\t\t\n\t\tif (value == __language) return value;\n\t\t\n\t\t__language = value;\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tNativeCFFI.lime_text_layout_set_language (__handle, value);\n\t\t#end\n\t\t\n\t\t__dirty = true;\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function get_script ():TextScript {\n\t\t\n\t\treturn __script;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_script (value:TextScript):TextScript {\n\t\t\n\t\tif (value == __script) return value;\n\t\t\n\t\t__script = value;\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tNativeCFFI.lime_text_layout_set_script (__handle, value);\n\t\t#end\n\t\t\n\t\t__dirty = true;\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_size (value:Int):Int {\n\t\t\n\t\tif (value == this.size) return value;\n\t\t\n\t\tthis.size = value;\n\t\t__dirty = true;\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_text (value:String):String {\n\t\t\n\t\tif (value == this.text) return value;\n\t\t\n\t\tthis.text = value;\n\t\t__dirty = true;\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.text;\n\n\n@:enum abstract TextScript(String) to (String) {\n\t\n\tvar COMMON = \"Zyyy\";\n\tvar INHERITED = \"Zinh\";\n\tvar UNKNOWN = \"Zzzz\";\n\t\n\tvar ARABIC = \"Arab\";\n\tvar ARMENIAN = \"Armn\";\n\tvar BENGALI = \"Beng\";\n\tvar CYRILLIC = \"Cyrl\";\n\tvar DEVANAGARI = \"Deva\";\n\tvar GEORGIAN = \"Geor\";\n\tvar GREEK = \"Grek\";\n\tvar GUJARATI = \"Gujr\";\n\tvar GURMUKHI = \"Guru\";\n\tvar HANGUL = \"Hang\";\n\tvar HAN = \"Hani\";\n\tvar HEBREW = \"Hebr\";\n\tvar HIRAGANA = \"Hira\";\n\tvar KANNADA = \"Knda\";\n\tvar KATAKANA = \"Kana\";\n\tvar LAO = \"Laoo\";\n\tvar LATIN = \"Latn\";\n\tvar MALAYALAM = \"Mlym\";\n\tvar ORIYA = \"Orya\";\n\tvar TAMIL = \"Taml\";\n\tvar TELUGA = \"Telu\";\n\tvar THAI = \"Thai\";\n\t\n\tvar TIBETAN = \"Tibt\";\n\t\n\tvar BOPOMOFO = \"Bopo\";\n\tvar BRAILLE = \"Brai\";\n\tvar CANADIAN_SYLLABICS = \"Cans\";\n\tvar CHEROKEE = \"Cher\";\n\tvar ETHIOPIC = \"Ethi\";\n\tvar KHMER = \"Khmr\";\n\tvar MONGOLIAN = \"Mong\";\n\tvar MYANMAR = \"Mymr\";\n\tvar OGHAM = \"Ogam\";\n\tvar RUNIC = \"Runr\";\n\tvar SINHALA = \"Sinh\";\n\tvar SYRIAC = \"Syrc\";\n\tvar THAANA = \"Thaa\";\n\tvar YI = \"Yiii\";\n\t\n\tvar DESERET = \"Dsrt\";\n\tvar GOTHIC = \"Goth\";\n\tvar OLD_ITALIC = \"Ital\";\n\t\n\tvar BUHID = \"Buhd\";\n\tvar HANUNOO = \"Hano\";\n\tvar TAGALOG = \"Tglg\";\n\tvar TAGBANWA = \"Tagb\";\n\t\n\tvar CYPRIOT = \"Cprt\";\n\tvar LIMBU = \"Limb\";\n\tvar LINEAR_B = \"Linb\";\n\tvar OSMANYA = \"Osma\";\n\tvar SHAVIAN = \"Shaw\";\n\tvar TAI_LE = \"Tale\";\n\tvar UGARITIC = \"Ugar\";\n\t\n\tvar BUGINESE = \"Bugi\";\n\tvar COPTIC = \"Copt\";\n\tvar GLAGOLITIC = \"Glag\";\n\tvar KHAROSHTHI = \"Khar\";\n\tvar NEW_TAI_LUE = \"Talu\";\n\tvar OLD_PERSIAN = \"Xpeo\";\n\tvar SYLOTI_NAGRI = \"Sylo\";\n\tvar TIFINAGH = \"Tfng\";\n\t\n\tvar BALINESE = \"Bali\";\n\tvar CUNEIFORM = \"Xsux\";\n\tvar NKO = \"Nkoo\";\n\tvar PHAGS_PA = \"Phag\";\n\tvar PHOENICIAN = \"Phnx\";\n\t\n\tvar CARIAN = \"Cari\";\n\tvar CHAM = \"Cham\";\n\tvar KAYAH_LI = \"Kali\";\n\tvar LEPCHA = \"Lepc\";\n\tvar LYCIAN = \"Lyci\";\n\tvar LYDIAN = \"Lydi\";\n\tvar OL_CHIKI = \"Olck\";\n\tvar REJANG = \"Rjng\";\n\tvar SAURASHTRA = \"Saur\";\n\tvar SUNDANESE = \"Sund\";\n\tvar VAI = \"Vaii\";\n\t\n\tvar AVESTAN = \"Avst\";\n\tvar BAMUM = \"Bamu\";\n\tvar EGYPTIAN_HIEROGLYPHS = \"Egyp\";\n\tvar IMPERIAL_ARAMAIC = \"Armi\";\n\tvar INSCRIPTIONAL_PAHLAVI = \"Phli\";\n\tvar INSCRIPTIONAL_PARTHIAN = \"Prti\";\n\tvar JAVANESE = \"Java\";\n\tvar KAITHI = \"Kthi\";\n\tvar LISU = \"Lisu\";\n\tvar MEETEI_MAYEK = \"Mtei\";\n\tvar OLD_SOUTH_ARABIAN = \"Sarb\";\n\tvar OLD_TURKIC = \"Orkh\";\n\tvar SAMARITAN = \"Samr\";\n\tvar TAI_THAM = \"Lana\";\n\tvar TAI_VIET = \"Tavt\";\n\t\n\tvar BATAK = \"Batk\";\n\tvar BRAHMI = \"Brah\";\n\tvar MANDAIC = \"Mand\";\n\t\n\tvar CHAKMA = \"Cakm\";\n\tvar MEROITIC_CURSIVE = \"Merc\";\n\tvar MEROITIC_HIEROGLYPHS = \"Mero\";\n\tvar MIAO = \"Plrd\";\n\tvar SHARADA = \"Shrd\";\n\tvar SORA_SOMPENG = \"Sora\";\n\tvar TAKRI = \"Takr\";\n\t\n\tvar BASSA_VAH = \"Bass\";\n\tvar CAUCASIAN_ALBANIAN = \"Aghb\";\n\tvar DUPLOYAN = \"Dupl\";\n\tvar ELBASAN = \"Elba\";\n\tvar GRANTHA = \"Gran\";\n\tvar KHOJKI = \"Khoj\";\n\tvar KHUDAWADI = \"Sind\";\n\tvar LINEAR_A = \"Lina\";\n\tvar MAHAJANI = \"Mahj\";\n\tvar MANICHAEAN = \"Mani\";\n\tvar MENDE_KIKAKUI = \"Mend\";\n\tvar MODI = \"Modi\";\n\tvar MRO = \"Mroo\";\n\tvar NABATAEAN = \"Nbat\";\n\tvar OLD_NORTH_ARABIAN = \"Narb\";\n\tvar OLD_PERMIC = \"Perm\";\n\tvar PAHAWH_HMONG = \"Hmng\";\n\tvar PALMYRENE = \"Palm\";\n\tvar PAU_CIN_HAU = \"Pauc\";\n\tvar PSALTER_PAHLAVI = \"Phlp\";\n\tvar SIDDHAM = \"Sidd\";\n\tvar TIRHUTA = \"Tirh\";\n\tvar WARANG_CITI = \"Wara\";\n\t\n\t\n\tpublic var rightToLeft (get, never):Bool;\n\t\n\t\n\tprivate inline function get_rightToLeft ():Bool {\n\t\t\n\t\treturn switch (this) {\n\t\t\t\n\t\t\tcase HEBREW, ARABIC, SYRIAC, THAANA, NKO, SAMARITAN, MANDAIC, IMPERIAL_ARAMAIC, PHOENICIAN, LYDIAN, CYPRIOT, KHAROSHTHI, OLD_SOUTH_ARABIAN, AVESTAN, INSCRIPTIONAL_PAHLAVI, PSALTER_PAHLAVI, OLD_TURKIC: true;\n\t\t\t//case KURDISH: true;\n\t\t\tdefault: false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package lime.text;\n\n\nimport haxe.Utf8;\nimport lime.text.unifill.Unifill;\nimport lime.text.unifill.CodePoint;\n\n\nabstract UTF8String(String) from String to String {\n\t\n\t\n\t#if sys\n\tprivate static var lowercaseMap:Map<Int, Int>;\n\tprivate static var uppercaseMap:Map<Int, Int>;\n\t#end\n\t\n\t/**\n\t\tThe number of characters in `this` String.\n\t**/\n\tpublic var length (get, never):Int;\n\t\n\t\n\t/**\n\t\tCreates a copy from a given String.\n\t**/\n\tpublic function new (str:String) {\n\t\t\n\t\tthis = new String (str);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tReturns the character at position `index` of `this` String.\n\t\t\n\t\tIf `index` is negative or exceeds `this.length`, the empty String `\"\"`\n\t\tis returned.\n\t**/\n\tpublic function charAt (index:Int):String {\n\t\t\n\t\treturn Unifill.uCharAt (this, index);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tReturns the character code at position `index` of `this` String.\n\t\t\n\t\tIf `index` is negative or exceeds `this.length`, `null` is returned.\n\t\t\n\t\tTo obtain the character code of a single character, `\"x\".code` can be\n\t\tused instead to inline the character code at compile time. Note that\n\t\tthis only works on String literals of length 1.\n\t**/\n\tpublic function charCodeAt (index:Int):Null<Int> {\n\t\t\n\t\tif (index < 0 || index >= Unifill.uLength (this)) return null;\n\t\treturn Unifill.uCharCodeAt (this, index);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tReturns the String corresponding to the character code `code`.\n\t\t\n\t\tIf `code` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic static function fromCharCode (code:Int):String {\n\t\t\n\t\treturn CodePoint.fromInt (code);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tReturns the string corresponding to the array of character codes `codes`.\n\t\t\n\t\tIf #unifill is defined, these codes will be treated as UTF-8 code points,\n\t\totherwise it will default to using String.fromCharCode() for each character\n\t **/\n\tpublic static function fromCharCodes (codes:Array<Int>):String {\n\t\t\n\t\tvar s = \"\";\n\t\t\n\t\tfor (code in codes) {\n\t\t\t\n\t\t\ts += CodePoint.fromInt (code);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn s;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tReturns the position of the leftmost occurence of `str` within `this`\n\t\tString.\n\t\t\n\t\tIf `startIndex` is given, the search is performed within the substring\n\t\tof `this` String starting from `startIndex`. Otherwise the search is\n\t\tperformed within `this` String. In either case, the returned position\n\t\tis relative to the beginning of `this` String.\n\t\t\n\t\tIf `str` cannot be found, -1 is returned.\n\t**/\n\tpublic function indexOf (str:String, startIndex:Int = 0):Int {\n\t\t\n\t\treturn Unifill.uIndexOf (this, str, startIndex);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tReturns the position of the rightmost occurence of `str` within `this`\n\t\tString.\n\t\t\n\t\tIf `startIndex` is given, the search is performed within the substring\n\t\tof `this` String from 0 to `startIndex`. Otherwise the search is\n\t\tperformed within `this` String. In either case, the returned position\n\t\tis relative to the beginning of `this` String.\n\t\t\n\t\tIf `str` cannot be found, -1 is returned.\n\t**/\n\tpublic function lastIndexOf(str:String, ?startIndex:Int):Int {\n\t\t\n\t\treturn Unifill.uLastIndexOf (this, str, startIndex);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tSplits `this` String at each occurence of `delimiter`.\n\t\t\n\t\tIf `this` String is the empty String `\"\"`, the result is not consistent\n\t\tacross targets and may either be `[]` (on Js, Cpp) or `[\"\"]`.\n\t\t\n\t\tIf `delimiter` is the empty String `\"\"`, `this` String is split into an\n\t\tArray of `this.length` elements, where the elements correspond to the\n\t\tcharacters of `this` String.\n\t\t\n\t\tIf `delimiter` is not found within `this` String, the result is an Array\n\t\twith one element, which equals `this` String.\n\t\t\n\t\tIf `delimiter` is null, the result is unspecified.\n\t\t\n\t\tOtherwise, `this` String is split into parts at each occurence of\n\t\t`delimiter`. If `this` String starts (or ends) with `delimiter`, the\n\t\tresult `Array` contains a leading (or trailing) empty String `\"\"` element.\n\t\tTwo subsequent delimiters also result in an empty String `\"\"` element.\n\t**/\n\tpublic function split (delimiter:String):Array<String> {\n\t\t\n\t\treturn Unifill.uSplit (this, delimiter);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tReturns `len` characters of `this` String, starting at position `pos`.\n\t\t\n\t\tIf `len` is omitted, all characters from position `pos` to the end of\n\t\t`this` String are included.\n\t\t\n\t\tIf `pos` is negative, its value is calculated from the end of `this`\n\t\tString by `this.length + pos`. If this yields a negative value, 0 is\n\t\tused instead.\n\t\t\n\t\tIf the calculated position + `len` exceeds `this.length`, the characters\n\t\tfrom that position to the end of `this` String are returned.\n\t\t\n\t\tIf `len` is negative, the result is unspecified.\n\t**/\n\tpublic function substr (pos:Int, ?len:Int):String {\n\t\t\n\t\treturn Utf8.sub (this, pos, len);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tReturns the part of `this` String from `startIndex` to but not including `endIndex`.\n\t\t\n\t\tIf `startIndex` or `endIndex` are negative, 0 is used instead.\n\t\t\n\t\tIf `startIndex` exceeds `endIndex`, they are swapped.\n\t\t\n\t\tIf the (possibly swapped) `endIndex` is omitted or exceeds\n\t\t`this.length`, `this.length` is used instead.\n\t\t\n\t\tIf the (possibly swapped) `startIndex` exceeds `this.length`, the empty\n\t\tString `\"\"` is returned.\n\t**/\n\tpublic function substring (startIndex:Int, ?endIndex:Int):String {\n\t\t\n\t\treturn Unifill.uSubstring (this, startIndex, endIndex);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tReturns a String where all characters of `this` String are lower case.\n\t\t\n\t\tAffects the characters `A-Z`. Other characters remain unchanged.\n\t**/\n\tpublic function toLowerCase ():String {\n\t\t\n\t\t#if sys\n\t\t\n\t\tif (lowercaseMap == null) {\n\t\t\t\n\t\t\tlowercaseMap = new Map<Int, Int> ();\n\t\t\tUtf8Ext.fillUpperToLowerMap (uppercaseMap);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar r = new Utf8 ();\n\t\t\n\t\tUtf8.iter (this, function (v) {\n\t\t\t\n\t\t\tr.addChar (lowercaseMap.exists (v) ? lowercaseMap[v] : v);\n\t\t\t\n\t\t});\n\t\t\n\t\treturn r.toString ();\n\t\t\n\t\t#else\n\t\t\n\t\treturn this.toLowerCase ();\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tReturns the String itself.\n\t**/\n\tpublic function toString ():String {\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t\tReturns a String where all characters of `this` String are upper case.\n\t\t\n\t\tAffects the characters `a-z`. Other characters remain unchanged.\n\t**/\n\tpublic function toUpperCase ():String {\n\t\t\n\t\t#if sys\n\t\t\n\t\tif (uppercaseMap == null) {\n\t\t\t\n\t\t\tuppercaseMap = new Map<Int, Int> ();\n\t\t\tUtf8Ext.fillLowerToUpperMap (uppercaseMap);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar r = new Utf8 ();\n\t\t\n\t\tUtf8.iter (this, function(v) {\n\t\t\t\n\t\t\tr.addChar (uppercaseMap.exists (v) ? uppercaseMap[v] : v);\n\t\t\t\n\t\t});\n\t\t\n\t\treturn r.toString ();\n\t\t\n\t\t#else\n\t\t\n\t\treturn this.toUpperCase ();\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:op(A == B) private static function equals (a:UTF8String, b:UTF8String):Bool {\n\t\t\n\t\tif (a == null || b == null) return (a:String) == (b:String);\n\t\treturn Unifill.uCompare (a, b) == 0;\n\t\t\n\t}\n\t\n\t\n\t@:op(A < B) private static function lt (a:UTF8String, b:UTF8String):Bool {\n\t\t\n\t\tif (b == null) return false;\n\t\tif (a == null) return true;\n\t\treturn Unifill.uCompare (a, b) == -1;\n\t\t\n\t}\n\t\n\t\n\t@:op(A > B) private static function gt (a:UTF8String, b:UTF8String):Bool {\n\t\t\n\t\tif (a == null) return false;\n\t\tif (b == null) return true;\n\t\treturn Unifill.uCompare (a, b) == 1;\n\t\t\n\t}\n\t\n\t\n\t@:op(A <= B) private static function lteq (a:UTF8String, b:UTF8String):Bool {\n\t\t\n\t\tif (b == null) return (a == null);\n\t\tif (a == null) return true;\n\t\treturn Unifill.uCompare (a, b) != 1;\n\t\t\n\t}\n\t\n\t\n\t@:op(A >= B) private static function gteq (a:UTF8String, b:UTF8String):Bool {\n\t\t\n\t\tif (a == null) return (b == null);\n\t\tif (b == null) return true;\n\t\treturn Unifill.uCompare (a, b) != -1;\n\t\t\n\t}\n\t\n\t\n\t@:op(A + B) private static function plus (a:UTF8String, b:UTF8String):UTF8String {\n\t\t\n\t\tif (a == null && b == null) return null;\n\t\tif (a == null) return b;\n\t\tif (b == null) return a;\n\t\t\n\t\tvar sb = new StringBuf ();\n\t\tsb.add (Std.string (a));\n\t\tsb.add (Std.string (b));\n\t\treturn sb.toString ();\n\t\t\n\t}\n\t\n\t\n\t@:from static function fromDynamic (value:Dynamic):UTF8String {\n\t\t\n\t\treturn Std.string (value);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_length ():Int {\n\t\t\n\t\treturn this == null ? 0 : Utf8.length (this);\n\t\t\n\t}\n\t\n\t\n}\n\n\n// generated from org.zamedev.lib.tools.CaseMapsGenerator\n\nprivate class Utf8Ext {\npublic static function fillUpperToLowerMap(map : Map<Int, Int>) : Void {\nvar i = 0;\nfor (i in 0...26) map[0x41+i] = 0x61+i;\nfor (i in 0...23) map[0xC0+i] = 0xE0+i;\nfor (i in 0...7) map[0xD8+i] = 0xF8+i;\nwhile (i < 48) { map[0x100+i] = 0x101+i; i += 2; } i=0;\nmap[0x130] = 0x69;\nwhile (i < 6) { map[0x132+i] = 0x133+i; i += 2; } i=0;\nwhile (i < 16) { map[0x139+i] = 0x13A+i; i += 2; } i=0;\nwhile (i < 46) { map[0x14A+i] = 0x14B+i; i += 2; } i=0;\nmap[0x178] = 0xFF;\nwhile (i < 6) { map[0x179+i] = 0x17A+i; i += 2; } i=0;\nmap[0x181] = 0x253;\nwhile (i < 4) { map[0x182+i] = 0x183+i; i += 2; } i=0;\nmap[0x186] = 0x254;\nmap[0x187] = 0x188;\nfor (i in 0...2) map[0x189+i] = 0x256+i;\nmap[0x18B] = 0x18C;\nmap[0x18E] = 0x1DD;\nmap[0x18F] = 0x259;\nmap[0x190] = 0x25B;\nmap[0x191] = 0x192;\nmap[0x193] = 0x260;\nmap[0x194] = 0x263;\nmap[0x196] = 0x269;\nmap[0x197] = 0x268;\nmap[0x198] = 0x199;\nmap[0x19C] = 0x26F;\nmap[0x19D] = 0x272;\nmap[0x19F] = 0x275;\nwhile (i < 6) { map[0x1A0+i] = 0x1A1+i; i += 2; } i=0;\nmap[0x1A6] = 0x280;\nmap[0x1A7] = 0x1A8;\nmap[0x1A9] = 0x283;\nmap[0x1AC] = 0x1AD;\nmap[0x1AE] = 0x288;\nmap[0x1AF] = 0x1B0;\nfor (i in 0...2) map[0x1B1+i] = 0x28A+i;\nwhile (i < 4) { map[0x1B3+i] = 0x1B4+i; i += 2; } i=0;\nmap[0x1B7] = 0x292;\nmap[0x1B8] = 0x1B9;\nmap[0x1BC] = 0x1BD;\nmap[0x1C4] = 0x1C6;\nmap[0x1C7] = 0x1C9;\nmap[0x1CA] = 0x1CC;\nwhile (i < 16) { map[0x1CD+i] = 0x1CE+i; i += 2; } i=0;\nwhile (i < 18) { map[0x1DE+i] = 0x1DF+i; i += 2; } i=0;\nmap[0x1F1] = 0x1F3;\nmap[0x1F4] = 0x1F5;\nmap[0x1F6] = 0x195;\nmap[0x1F7] = 0x1BF;\nwhile (i < 40) { map[0x1F8+i] = 0x1F9+i; i += 2; } i=0;\nmap[0x220] = 0x19E;\nwhile (i < 18) { map[0x222+i] = 0x223+i; i += 2; } i=0;\nmap[0x23A] = 0x2C65;\nmap[0x23B] = 0x23C;\nmap[0x23D] = 0x19A;\nmap[0x23E] = 0x2C66;\nmap[0x241] = 0x242;\nmap[0x243] = 0x180;\nmap[0x244] = 0x289;\nmap[0x245] = 0x28C;\nwhile (i < 10) { map[0x246+i] = 0x247+i; i += 2; } i=0;\nwhile (i < 4) { map[0x370+i] = 0x371+i; i += 2; } i=0;\nmap[0x376] = 0x377;\nmap[0x37F] = 0x3F3;\nmap[0x386] = 0x3AC;\nfor (i in 0...3) map[0x388+i] = 0x3AD+i;\nmap[0x38C] = 0x3CC;\nfor (i in 0...2) map[0x38E+i] = 0x3CD+i;\nfor (i in 0...17) map[0x391+i] = 0x3B1+i;\nfor (i in 0...9) map[0x3A3+i] = 0x3C3+i;\nmap[0x3CF] = 0x3D7;\nwhile (i < 24) { map[0x3D8+i] = 0x3D9+i; i += 2; } i=0;\nmap[0x3F4] = 0x3B8;\nmap[0x3F7] = 0x3F8;\nmap[0x3F9] = 0x3F2;\nmap[0x3FA] = 0x3FB;\nfor (i in 0...3) map[0x3FD+i] = 0x37B+i;\nfor (i in 0...16) map[0x400+i] = 0x450+i;\nfor (i in 0...32) map[0x410+i] = 0x430+i;\nwhile (i < 34) { map[0x460+i] = 0x461+i; i += 2; } i=0;\nwhile (i < 54) { map[0x48A+i] = 0x48B+i; i += 2; } i=0;\nmap[0x4C0] = 0x4CF;\nwhile (i < 14) { map[0x4C1+i] = 0x4C2+i; i += 2; } i=0;\nwhile (i < 96) { map[0x4D0+i] = 0x4D1+i; i += 2; } i=0;\nfor (i in 0...38) map[0x531+i] = 0x561+i;\nfor (i in 0...38) map[0x10A0+i] = 0x2D00+i;\nmap[0x10C7] = 0x2D27;\nmap[0x10CD] = 0x2D2D;\nfor (i in 0...80) map[0x13A0+i] = 0xAB70+i;\nfor (i in 0...6) map[0x13F0+i] = 0x13F8+i;\nwhile (i < 150) { map[0x1E00+i] = 0x1E01+i; i += 2; } i=0;\nmap[0x1E9E] = 0xDF;\nwhile (i < 96) { map[0x1EA0+i] = 0x1EA1+i; i += 2; } i=0;\nfor (i in 0...8) map[0x1F08+i] = 0x1F00+i;\nfor (i in 0...6) map[0x1F18+i] = 0x1F10+i;\nfor (i in 0...8) map[0x1F28+i] = 0x1F20+i;\nfor (i in 0...8) map[0x1F38+i] = 0x1F30+i;\nfor (i in 0...6) map[0x1F48+i] = 0x1F40+i;\nwhile (i < 8) { map[0x1F59+i] = 0x1F51+i; i += 2; } i=0;\nfor (i in 0...8) map[0x1F68+i] = 0x1F60+i;\nfor (i in 0...2) map[0x1FB8+i] = 0x1FB0+i;\nfor (i in 0...2) map[0x1FBA+i] = 0x1F70+i;\nfor (i in 0...4) map[0x1FC8+i] = 0x1F72+i;\nfor (i in 0...2) map[0x1FD8+i] = 0x1FD0+i;\nfor (i in 0...2) map[0x1FDA+i] = 0x1F76+i;\nfor (i in 0...2) map[0x1FE8+i] = 0x1FE0+i;\nfor (i in 0...2) map[0x1FEA+i] = 0x1F7A+i;\nmap[0x1FEC] = 0x1FE5;\nfor (i in 0...2) map[0x1FF8+i] = 0x1F78+i;\nfor (i in 0...2) map[0x1FFA+i] = 0x1F7C+i;\nmap[0x2126] = 0x3C9;\nmap[0x212A] = 0x6B;\nmap[0x212B] = 0xE5;\nmap[0x2132] = 0x214E;\nmap[0x2183] = 0x2184;\nfor (i in 0...47) map[0x2C00+i] = 0x2C30+i;\nmap[0x2C60] = 0x2C61;\nmap[0x2C62] = 0x26B;\nmap[0x2C63] = 0x1D7D;\nmap[0x2C64] = 0x27D;\nwhile (i < 6) { map[0x2C67+i] = 0x2C68+i; i += 2; } i=0;\nmap[0x2C6D] = 0x251;\nmap[0x2C6E] = 0x271;\nmap[0x2C6F] = 0x250;\nmap[0x2C70] = 0x252;\nmap[0x2C72] = 0x2C73;\nmap[0x2C75] = 0x2C76;\nfor (i in 0...2) map[0x2C7E+i] = 0x23F+i;\nwhile (i < 100) { map[0x2C80+i] = 0x2C81+i; i += 2; } i=0;\nwhile (i < 4) { map[0x2CEB+i] = 0x2CEC+i; i += 2; } i=0;\nmap[0x2CF2] = 0x2CF3;\nwhile (i < 46) { map[0xA640+i] = 0xA641+i; i += 2; } i=0;\nwhile (i < 28) { map[0xA680+i] = 0xA681+i; i += 2; } i=0;\nwhile (i < 14) { map[0xA722+i] = 0xA723+i; i += 2; } i=0;\nwhile (i < 62) { map[0xA732+i] = 0xA733+i; i += 2; } i=0;\nwhile (i < 4) { map[0xA779+i] = 0xA77A+i; i += 2; } i=0;\nmap[0xA77D] = 0x1D79;\nwhile (i < 10) { map[0xA77E+i] = 0xA77F+i; i += 2; } i=0;\nmap[0xA78B] = 0xA78C;\nmap[0xA78D] = 0x265;\nwhile (i < 4) { map[0xA790+i] = 0xA791+i; i += 2; } i=0;\nwhile (i < 20) { map[0xA796+i] = 0xA797+i; i += 2; } i=0;\nmap[0xA7AA] = 0x266;\nmap[0xA7AB] = 0x25C;\nmap[0xA7AC] = 0x261;\nmap[0xA7AD] = 0x26C;\nmap[0xA7AE] = 0x26A;\nmap[0xA7B0] = 0x29E;\nmap[0xA7B1] = 0x287;\nmap[0xA7B2] = 0x29D;\nmap[0xA7B3] = 0xAB53;\nwhile (i < 4) { map[0xA7B4+i] = 0xA7B5+i; i += 2; } i=0;\nfor (i in 0...26) map[0xFF21+i] = 0xFF41+i;\nfor (i in 0...40) map[0x10400+i] = 0x10428+i;\nfor (i in 0...36) map[0x104B0+i] = 0x104D8+i;\nfor (i in 0...51) map[0x10C80+i] = 0x10CC0+i;\nfor (i in 0...32) map[0x118A0+i] = 0x118C0+i;\nfor (i in 0...34) map[0x1E900+i] = 0x1E922+i;\n}\n\npublic static function fillLowerToUpperMap(map : Map<Int, Int>) : Void {\nvar i = 0;\nfor (i in 0...26) map[0x61+i] = 0x41+i;\nmap[0xB5] = 0x39C;\nfor (i in 0...23) map[0xE0+i] = 0xC0+i;\nfor (i in 0...7) map[0xF8+i] = 0xD8+i;\nmap[0xFF] = 0x178;\nwhile (i < 48) { map[0x101+i] = 0x100+i; i += 2; } i=0;\nmap[0x131] = 0x49;\nwhile (i < 6) { map[0x133+i] = 0x132+i; i += 2; } i=0;\nwhile (i < 16) { map[0x13A+i] = 0x139+i; i += 2; } i=0;\nwhile (i < 46) { map[0x14B+i] = 0x14A+i; i += 2; } i=0;\nwhile (i < 6) { map[0x17A+i] = 0x179+i; i += 2; } i=0;\nmap[0x17F] = 0x53;\nmap[0x180] = 0x243;\nwhile (i < 4) { map[0x183+i] = 0x182+i; i += 2; } i=0;\nmap[0x188] = 0x187;\nmap[0x18C] = 0x18B;\nmap[0x192] = 0x191;\nmap[0x195] = 0x1F6;\nmap[0x199] = 0x198;\nmap[0x19A] = 0x23D;\nmap[0x19E] = 0x220;\nwhile (i < 6) { map[0x1A1+i] = 0x1A0+i; i += 2; } i=0;\nmap[0x1A8] = 0x1A7;\nmap[0x1AD] = 0x1AC;\nmap[0x1B0] = 0x1AF;\nwhile (i < 4) { map[0x1B4+i] = 0x1B3+i; i += 2; } i=0;\nmap[0x1B9] = 0x1B8;\nmap[0x1BD] = 0x1BC;\nmap[0x1BF] = 0x1F7;\nmap[0x1C6] = 0x1C4;\nmap[0x1C9] = 0x1C7;\nmap[0x1CC] = 0x1CA;\nwhile (i < 16) { map[0x1CE+i] = 0x1CD+i; i += 2; } i=0;\nmap[0x1DD] = 0x18E;\nwhile (i < 18) { map[0x1DF+i] = 0x1DE+i; i += 2; } i=0;\nmap[0x1F0] = 0x4A;\nmap[0x1F3] = 0x1F1;\nmap[0x1F5] = 0x1F4;\nwhile (i < 40) { map[0x1F9+i] = 0x1F8+i; i += 2; } i=0;\nwhile (i < 18) { map[0x223+i] = 0x222+i; i += 2; } i=0;\nmap[0x23C] = 0x23B;\nfor (i in 0...2) map[0x23F+i] = 0x2C7E+i;\nmap[0x242] = 0x241;\nwhile (i < 10) { map[0x247+i] = 0x246+i; i += 2; } i=0;\nmap[0x250] = 0x2C6F;\nmap[0x251] = 0x2C6D;\nmap[0x252] = 0x2C70;\nmap[0x253] = 0x181;\nmap[0x254] = 0x186;\nfor (i in 0...2) map[0x256+i] = 0x189+i;\nmap[0x259] = 0x18F;\nmap[0x25B] = 0x190;\nmap[0x25C] = 0xA7AB;\nmap[0x260] = 0x193;\nmap[0x261] = 0xA7AC;\nmap[0x263] = 0x194;\nmap[0x265] = 0xA78D;\nmap[0x266] = 0xA7AA;\nmap[0x268] = 0x197;\nmap[0x269] = 0x196;\nmap[0x26A] = 0xA7AE;\nmap[0x26B] = 0x2C62;\nmap[0x26C] = 0xA7AD;\nmap[0x26F] = 0x19C;\nmap[0x271] = 0x2C6E;\nmap[0x272] = 0x19D;\nmap[0x275] = 0x19F;\nmap[0x27D] = 0x2C64;\nmap[0x280] = 0x1A6;\nmap[0x283] = 0x1A9;\nmap[0x287] = 0xA7B1;\nmap[0x288] = 0x1AE;\nmap[0x289] = 0x244;\nfor (i in 0...2) map[0x28A+i] = 0x1B1+i;\nmap[0x28C] = 0x245;\nmap[0x292] = 0x1B7;\nmap[0x29D] = 0xA7B2;\nmap[0x29E] = 0xA7B0;\nwhile (i < 4) { map[0x371+i] = 0x370+i; i += 2; } i=0;\nmap[0x377] = 0x376;\nfor (i in 0...3) map[0x37B+i] = 0x3FD+i;\nmap[0x390] = 0x3AA;\nmap[0x3AC] = 0x386;\nfor (i in 0...3) map[0x3AD+i] = 0x388+i;\nmap[0x3B0] = 0x3AB;\nfor (i in 0...17) map[0x3B1+i] = 0x391+i;\nmap[0x3C2] = 0x3A3;\nfor (i in 0...9) map[0x3C3+i] = 0x3A3+i;\nmap[0x3CC] = 0x38C;\nfor (i in 0...2) map[0x3CD+i] = 0x38E+i;\nmap[0x3D0] = 0x392;\nmap[0x3D1] = 0x398;\nmap[0x3D5] = 0x3A6;\nmap[0x3D6] = 0x3A0;\nmap[0x3D7] = 0x3CF;\nwhile (i < 24) { map[0x3D9+i] = 0x3D8+i; i += 2; } i=0;\nmap[0x3F0] = 0x39A;\nmap[0x3F1] = 0x3A1;\nmap[0x3F2] = 0x3F9;\nmap[0x3F3] = 0x37F;\nmap[0x3F5] = 0x395;\nmap[0x3F8] = 0x3F7;\nmap[0x3FB] = 0x3FA;\nfor (i in 0...32) map[0x430+i] = 0x410+i;\nfor (i in 0...16) map[0x450+i] = 0x400+i;\nwhile (i < 34) { map[0x461+i] = 0x460+i; i += 2; } i=0;\nwhile (i < 54) { map[0x48B+i] = 0x48A+i; i += 2; } i=0;\nwhile (i < 14) { map[0x4C2+i] = 0x4C1+i; i += 2; } i=0;\nmap[0x4CF] = 0x4C0;\nwhile (i < 96) { map[0x4D1+i] = 0x4D0+i; i += 2; } i=0;\nfor (i in 0...38) map[0x561+i] = 0x531+i;\nfor (i in 0...6) map[0x13F8+i] = 0x13F0+i;\nmap[0x1C80] = 0x412;\nmap[0x1C81] = 0x414;\nmap[0x1C82] = 0x41E;\nfor (i in 0...2) map[0x1C83+i] = 0x421+i;\nmap[0x1C85] = 0x422;\nmap[0x1C86] = 0x42A;\nmap[0x1C87] = 0x462;\nmap[0x1C88] = 0xA64A;\nmap[0x1D79] = 0xA77D;\nmap[0x1D7D] = 0x2C63;\nwhile (i < 150) { map[0x1E01+i] = 0x1E00+i; i += 2; } i=0;\nmap[0x1E96] = 0x48;\nmap[0x1E97] = 0x54;\nmap[0x1E98] = 0x57;\nmap[0x1E99] = 0x59;\nmap[0x1E9B] = 0x1E60;\nwhile (i < 96) { map[0x1EA1+i] = 0x1EA0+i; i += 2; } i=0;\nfor (i in 0...8) map[0x1F00+i] = 0x1F08+i;\nfor (i in 0...6) map[0x1F10+i] = 0x1F18+i;\nfor (i in 0...8) map[0x1F20+i] = 0x1F28+i;\nfor (i in 0...8) map[0x1F30+i] = 0x1F38+i;\nfor (i in 0...6) map[0x1F40+i] = 0x1F48+i;\nmap[0x1F50] = 0x3A5;\nmap[0x1F51] = 0x1F59;\nmap[0x1F52] = 0x3A5;\nmap[0x1F53] = 0x1F5B;\nmap[0x1F54] = 0x3A5;\nmap[0x1F55] = 0x1F5D;\nmap[0x1F56] = 0x3A5;\nmap[0x1F57] = 0x1F5F;\nfor (i in 0...8) map[0x1F60+i] = 0x1F68+i;\nfor (i in 0...2) map[0x1F70+i] = 0x1FBA+i;\nfor (i in 0...4) map[0x1F72+i] = 0x1FC8+i;\nfor (i in 0...2) map[0x1F76+i] = 0x1FDA+i;\nfor (i in 0...2) map[0x1F78+i] = 0x1FF8+i;\nfor (i in 0...2) map[0x1F7A+i] = 0x1FEA+i;\nfor (i in 0...2) map[0x1F7C+i] = 0x1FFA+i;\nfor (i in 0...8) map[0x1F80+i] = 0x1F88+i;\nfor (i in 0...8) map[0x1F90+i] = 0x1F98+i;\nfor (i in 0...8) map[0x1FA0+i] = 0x1FA8+i;\nfor (i in 0...3) map[0x1FB0+i] = 0x1FB8+i;\nmap[0x1FB3] = 0x1FBC;\nmap[0x1FB4] = 0x386;\nmap[0x1FB6] = 0x391;\nmap[0x1FB7] = 0x391;\nmap[0x1FBE] = 0x399;\nmap[0x1FC2] = 0x1FCA;\nmap[0x1FC3] = 0x1FCC;\nmap[0x1FC4] = 0x389;\nmap[0x1FC6] = 0x397;\nmap[0x1FC7] = 0x397;\nfor (i in 0...2) map[0x1FD0+i] = 0x1FD8+i;\nmap[0x1FD2] = 0x3AA;\nmap[0x1FD3] = 0x3AA;\nmap[0x1FD6] = 0x399;\nmap[0x1FD7] = 0x3AA;\nfor (i in 0...2) map[0x1FE0+i] = 0x1FE8+i;\nmap[0x1FE2] = 0x3AB;\nmap[0x1FE3] = 0x3AB;\nmap[0x1FE4] = 0x3A1;\nmap[0x1FE5] = 0x1FEC;\nmap[0x1FE6] = 0x3A5;\nmap[0x1FE7] = 0x3AB;\nmap[0x1FF2] = 0x1FFA;\nmap[0x1FF3] = 0x1FFC;\nmap[0x1FF4] = 0x38F;\nmap[0x1FF6] = 0x3A9;\nmap[0x1FF7] = 0x3A9;\nmap[0x214E] = 0x2132;\nmap[0x2184] = 0x2183;\nfor (i in 0...47) map[0x2C30+i] = 0x2C00+i;\nmap[0x2C61] = 0x2C60;\nmap[0x2C65] = 0x23A;\nmap[0x2C66] = 0x23E;\nwhile (i < 6) { map[0x2C68+i] = 0x2C67+i; i += 2; } i=0;\nmap[0x2C73] = 0x2C72;\nmap[0x2C76] = 0x2C75;\nwhile (i < 100) { map[0x2C81+i] = 0x2C80+i; i += 2; } i=0;\nwhile (i < 4) { map[0x2CEC+i] = 0x2CEB+i; i += 2; } i=0;\nmap[0x2CF3] = 0x2CF2;\nfor (i in 0...38) map[0x2D00+i] = 0x10A0+i;\nmap[0x2D27] = 0x10C7;\nmap[0x2D2D] = 0x10CD;\nwhile (i < 46) { map[0xA641+i] = 0xA640+i; i += 2; } i=0;\nwhile (i < 28) { map[0xA681+i] = 0xA680+i; i += 2; } i=0;\nwhile (i < 14) { map[0xA723+i] = 0xA722+i; i += 2; } i=0;\nwhile (i < 62) { map[0xA733+i] = 0xA732+i; i += 2; } i=0;\nwhile (i < 4) { map[0xA77A+i] = 0xA779+i; i += 2; } i=0;\nwhile (i < 10) { map[0xA77F+i] = 0xA77E+i; i += 2; } i=0;\nmap[0xA78C] = 0xA78B;\nwhile (i < 4) { map[0xA791+i] = 0xA790+i; i += 2; } i=0;\nwhile (i < 20) { map[0xA797+i] = 0xA796+i; i += 2; } i=0;\nwhile (i < 4) { map[0xA7B5+i] = 0xA7B4+i; i += 2; } i=0;\nmap[0xAB53] = 0xA7B3;\nfor (i in 0...80) map[0xAB70+i] = 0x13A0+i;\nfor (i in 0...26) map[0xFF41+i] = 0xFF21+i;\nfor (i in 0...40) map[0x10428+i] = 0x10400+i;\nfor (i in 0...36) map[0x104D8+i] = 0x104B0+i;\nfor (i in 0...51) map[0x10CC0+i] = 0x10C80+i;\nfor (i in 0...32) map[0x118C0+i] = 0x118A0+i;\nfor (i in 0...34) map[0x1E922+i] = 0x1E900+i;\n}\n}","package lime.text.unifill;\n\nabstract Utf16 (StringU16) {\n\n\t/**\n\t   Converts the code point `code` to a character as a Utf16 string.\n\t**/\n\tpublic static inline function fromCodePoint(codePoint : Int) : Utf16 {\n\t\tif (codePoint <= 0xFFFF) {\n\t\t\treturn new Utf16(StringU16.fromCodeUnit(codePoint));\n\t\t} else {\n\t\t\treturn new Utf16(StringU16.fromTwoCodeUnits(\n\t\t\t\tUnicode.encodeHighSurrogate(codePoint),\n\t\t\t\tUnicode.encodeLowSurrogate(codePoint)));\n\t\t}\n\t}\n\n\t/**\n\t   Converts `codePoints` to a Utf16 string.\n\t**/\n\tpublic static inline function fromCodePoints(codePoints : Iterable<Int>) : Utf16 {\n\t\tvar buf = new StringU16Buffer();\n\t\tfor (c in codePoints) {\n\t\t\tUtf16Impl.encode_code_point(function (x) buf.addUnit(x), c);\n\t\t}\n\t\treturn new Utf16(buf.getStringU16());\n\t}\n\n\tpublic static inline function fromString(s : String) : Utf16 {\n\t\treturn new Utf16(StringU16.fromString(s));\n\t}\n\n\tpublic static inline function fromArray(a : Array<Int>) : Utf16 {\n\t\treturn new Utf16(StringU16.fromArray(a));\n\t}\n\n\tpublic static inline function encodeWith(f : Int -> Void, c : Int) : Void {\n\t\tUtf16Impl.encode_code_point(f, c);\n\t}\n\n\tpublic var length(get, never) : Int;\n\n\t/**\n\t   Returns the UTF-16 code unit at position `index` of `this`.\n\t**/\n\tpublic inline function codeUnitAt(index : Int) : Int {\n\t\treturn this.codeUnitAt(index);\n\t}\n\n\t/**\n\t   Returns the Unicode code point at position `index` of\n\t   `this`.\n\t**/\n\tpublic function codePointAt(index : Int) : Int {\n\t\treturn Utf16Impl.decode_code_point(length, function(i) return codeUnitAt(i), index);\n\t}\n\n\t/**\n\t   Returns the character as a String at position `index` of\n\t   `this`.\n\t**/\n\tpublic inline function charAt(index : Int) : Utf16 {\n\t\treturn new Utf16(this.substr(index, codePointWidthAt(index)));\n\t}\n\n\t/**\n\t   Returns the number of Unicode code points from `beginIndex`\n\t   to `endIndex` in `this`.\n\t**/\n\tpublic function codePointCount(beginIndex : Int, endIndex : Int) : Int {\n\t\tvar index = beginIndex;\n\t\tvar i = 0;\n\t\twhile (index < endIndex) {\n\t\t\tindex += codePointWidthAt(index);\n\t\t\t++i;\n\t\t}\n\t\treturn i;\n\t}\n\n\t/**\n\t   Returns the number of units of the code point at position\n\t   `index` of `this`.\n\t**/\n\tpublic inline function codePointWidthAt(index : Int) : Int {\n\t\tvar c = codeUnitAt(index);\n\t\treturn Utf16Impl.code_point_width(c);\n\t}\n\n\t/**\n\t   Returns the number of units of the code point before\n\t   position `index` of `this`.\n\t**/\n\tpublic inline function codePointWidthBefore(index : Int) : Int {\n\t\treturn Utf16Impl.find_prev_code_point(function(i) return codeUnitAt(i), index);\n\t}\n\n\t/**\n\t   Returns the index within `this` that is offset from\n\t   position `index` by `codePointOffset` code points.\n\t**/\n\tpublic inline function offsetByCodePoints(index : Int, codePointOffset : Int) : Int {\n\t\treturn if (codePointOffset >= 0) {\n\t\t\tforward_offset_by_code_points(index, codePointOffset);\n\t\t} else {\n\t\t\tbackward_offset_by_code_points(index, -codePointOffset);\n\t\t}\n\t}\n\n\t/**\n\t   Returns `len` code units of `this`, starting at position pos.\n\t**/\n\tpublic inline function substr(index : Int, ?len : Int) : Utf16 {\n\t\treturn new Utf16(this.substr(index, len));\n\t}\n\n\t/**\n\t   Validates `this` Utf16 string.\n\n\t   If the code unit sequence of `this` is invalid,\n\t   `Exception.InvalidCodeUnitSequence` is throwed.\n\t**/\n\tpublic function validate() : Void {\n\t\tvar len = this.length;\n\t\tvar accessor = function(i) return codeUnitAt(i);\n\t\tvar i = 0;\n\t\twhile  (i < len) {\n\t\t\tUtf16Impl.decode_code_point(len, accessor, i);\n\t\t\ti += codePointWidthAt(i);\n\t\t}\n\t}\n\n\tpublic inline function toString() : String {\n\t\treturn this.toString();\n\t}\n\n\tpublic inline function toArray() : Array<Int> {\n\t\treturn this.toArray();\n\t}\n\n\tinline function new(s : StringU16) {\n\t\tthis = s;\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn this.length;\n\t}\n\n\tinline function forward_offset_by_code_points(index : Int, codePointOffset : Int) : Int {\n\t\tvar len = this.length;\n\t\tvar i = 0;\n\t\twhile (i < codePointOffset && index < len) {\n\t\t\tindex += codePointWidthAt(index);\n\t\t\t++i;\n\t\t}\n\t\treturn index;\n\t}\n\n\tinline function backward_offset_by_code_points(index : Int, codePointOffset : Int) : Int {\n\t\tvar count = 0;\n\t\twhile (count < codePointOffset && 0 < index) {\n\t\t\tindex -= codePointWidthBefore(index);\n\t\t\t++count;\n\t\t}\n\t\treturn index;\n\t}\n\n}\n\nprivate class Utf16Impl {\n\n\tpublic static inline function code_point_width(c : Int) : Int {\n\t\treturn (!Unicode.isHighSurrogate(c)) ? 1 : 2;\n\t}\n\n\tpublic static inline function find_prev_code_point(accessor : Int -> Int, index : Int) : Int {\n\t\tvar c = accessor(index - 1);\n\t\treturn (!Unicode.isLowSurrogate(c)) ? 1 : 2;\n\t}\n\n\tpublic static inline function encode_code_point(addUnit : Int -> Void, codePoint : Int) : Void {\n\t\tif (codePoint <= 0xFFFF) {\n\t\t\taddUnit(codePoint);\n\t\t} else {\n\t\t\taddUnit(Unicode.encodeHighSurrogate(codePoint));\n\t\t\taddUnit(Unicode.encodeLowSurrogate(codePoint));\n\t\t}\n\t}\n\n\tpublic static function decode_code_point(len : Int, accessor : Int -> Int, index : Int) : Int {\n\t\tif (index < 0 || len <= index)\n\t\t\tthrow new Exception.InvalidCodeUnitSequence(index);\n\t\tvar hi = accessor(index);\n\t\tif (Unicode.isHighSurrogate(hi)) {\n\t\t\tif (index + 1 < 0 || len <= index + 1) {\n\t\t\t\tthrow new Exception.InvalidCodeUnitSequence(index);\n\t\t\t}\n\t\t\tvar lo = accessor(index + 1);\n\t\t\tif (Unicode.isLowSurrogate(lo)) {\n\t\t\t\treturn Unicode.decodeSurrogate(hi, lo);\n\t\t\t} else {\n\t\t\t\tthrow new Exception.InvalidCodeUnitSequence(index);\n\t\t\t}\n\t\t} else if (Unicode.isLowSurrogate(hi)) {\n\t\t\tthrow new Exception.InvalidCodeUnitSequence(index);\n\t\t} else {\n\t\t\treturn hi;\n\t\t}\n\t}\n\n}\n\n#if !(neko || php || cpp || lua || macro || python)\n\nprivate abstract StringU16Buffer(StringBuf) {\n\n\tpublic inline function new() {\n\t\tthis = new StringBuf();\n\t}\n\n\tpublic inline function addUnit(unit : Int) : Void {\n\t\tthis.addChar(unit);\n\t}\n\n\tpublic inline function getStringU16() : StringU16 {\n\t\treturn StringU16.fromString(this.toString());\n\t}\n\n}\n\nprivate abstract StringU16(String) {\n\n\tpublic static inline function fromString(s : String) : StringU16 {\n\t\treturn new StringU16(s);\n\t}\n\n\tpublic static inline function fromCodeUnit(u : Int) : StringU16 {\n\t\treturn new StringU16(String.fromCharCode(u));\n\t}\n\n\tpublic static inline function fromTwoCodeUnits(u0 : Int, u1 : Int) : StringU16 {\n\t\treturn new StringU16(String.fromCharCode(u0) + String.fromCharCode(u1));\n\t}\n\n\tpublic static inline function ofArray(a : Array<Int>) : StringU16 {\n\t\treturn fromArray(a);\n\t}\n\n\tpublic static inline function fromArray(a : Array<Int>) : StringU16 {\n\t\tvar buf = new StringBuf();\n\t\tfor (x in a) {\n\t\t\tbuf.addChar(x);\n\t\t}\n\t\treturn new StringU16(buf.toString());\n\t}\n\n\tpublic var length(get, never) : Int;\n\n\tpublic #if !flash inline #end function codeUnitAt(index : Int) : Int {\n\t\treturn StringTools.fastCodeAt(this, index);\n\t}\n\n\tpublic inline function substr(index : Int, ?len : Int) : StringU16 {\n\t\treturn new StringU16(this.substr(index, len));\n\t}\n\n\tpublic inline function toString() : String {\n\t\treturn this;\n\t}\n\n\tpublic inline function toArray() : Array<Int> {\n\t\tvar i = 0;\n\t\tvar len = this.length;\n\t\treturn [while (i < len) StringTools.fastCodeAt(this, i++)];\n\t}\n\n\tinline function new(s : String) {\n\t\tthis = s;\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn this.length;\n\t}\n\n}\n\n#else\n\nprivate abstract StringU16Buffer(Array<Int>) {\n\n\tpublic inline function new() {\n\t\tthis = [];\n\t}\n\n\tpublic inline function addUnit(unit : Int) : Void {\n\t\tthis.push(unit);\n\t}\n\n\tpublic inline function getStringU16() : StringU16 {\n\t\treturn StringU16.ofArray(this);\n\t}\n\n}\n\nprivate abstract StringU16(Array<Int>) {\n\n\tpublic static function fromString(s : String) : StringU16 {\n\t\tvar buf = new StringU16Buffer();\n\t\tvar addUnit = function (x) buf.addUnit(x);\n\t\tfor (i in new InternalEncodingIter(s, 0, s.length)) {\n\t\t\tvar c = InternalEncoding.codePointAt(s, i);\n\t\t\tUtf16Impl.encode_code_point(addUnit, c);\n\t\t}\n\t\treturn buf.getStringU16();\n\t}\n\n\tpublic static inline function fromCodeUnit(u : Int) : StringU16 {\n\t\treturn new StringU16([u]);\n\t}\n\n\tpublic static inline function fromTwoCodeUnits(u0 : Int, u1 : Int) : StringU16 {\n\t\treturn new StringU16([u0, u1]);\n\t}\n\n\tpublic static inline function ofArray(a : Array<Int>) : StringU16 {\n\t\treturn new StringU16(a);\n\t}\n\n\tpublic static inline function fromArray(a : Array<Int>) : StringU16 {\n\t\treturn new StringU16(a.copy());\n\t}\n\n\tpublic var length(get, never) : Int;\n\n\tpublic inline function codeUnitAt(index : Int) : Int {\n\t\treturn this[index];\n\t}\n\n\tpublic inline function substr(index : Int, ?len : Int) : StringU16 {\n\t\tif (index < 0) {\n\t\t\tindex += this.length;\n\t\t\tif (index < 0) index = 0;\n\t\t}\n\t\tvar j = (len != null) ? index + len : this.length;\n\t\tvar a = this.slice(index, j);\n\t\treturn new StringU16(a);\n\t}\n\n\tpublic function toString() : String {\n\t\tvar buf = new StringBuf();\n\t\tvar i = 0;\n\t\tvar len = this.length;\n\t\tvar cua = function (i) return this[i];\n\t\twhile (i < len) {\n\t\t\tvar u = Utf16Impl.decode_code_point(len, cua, i);\n\t\t\tbuf.add(InternalEncoding.fromCodePoint(u));\n\t\t\ti += Utf16Impl.code_point_width(codeUnitAt(i));\n\t\t}\n\t\treturn buf.toString();\n\t}\n\n\tpublic inline function toArray() : Array<Int> {\n\t\treturn this.copy();\n\t}\n\n\tinline function new(a : Array<Int>) {\n\t\tthis = a;\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn this.length;\n\t}\n\n}\n\n#end\n","package lime.text.unifill;\n\n/**\n   Unifill provides Unicode-code-point-wise methods on Strings. It is\n   ideally used with 'using Unifill' and then acts as an extension to\n   the String class.\n **/\nclass Unifill {\n\n\t/**\n\t   Returns the number of Unicode code points of String `s`.\n\t **/\n\tpublic static inline function uLength(s : String) : Int\n\t\treturn InternalEncoding.codePointCount(s, 0, s.length);\n\n\t/**\n\t   Returns the character at position `index` by code points of String `s`.\n\t **/\n\tpublic static inline function uCharAt(s : String, index : Int) : String {\n\t#if (neko || php || cpp)\n\t\treturn InternalEncoding.fromCodePoint(haxe.Utf8.charCodeAt(s, index));\n\t#else\n\t\tvar i = InternalEncoding.offsetByCodePoints(s, 0, index);\n\t\treturn InternalEncoding.charAt(s, i);\n\t#end\n\t}\n\n\t/**\n\t   Returns the code point as Int at position `index` by code points of String `s`.\n\t **/\n\tpublic static inline function uCharCodeAt(s : String, index : Int) : Int {\n\t#if (neko || php || cpp || lua || macro)\n\t\treturn cast haxe.Utf8.charCodeAt(s, index);\n\t#else\n\t\tvar i = InternalEncoding.offsetByCodePoints(s, 0, index);\n\t\treturn InternalEncoding.codePointAt(s, i);\n\t#end\n\t}\n\n\t/**\n\t   Returns the code point at position `index` by code points of String `s`.\n\t **/\n\tpublic static inline function uCodePointAt(s : String, index : Int) : CodePoint {\n\t\treturn cast uCharCodeAt(s, index);\n\t}\n\n\t/**\n\t   Returns the position of the leftmost occurence of the str within String `s`.\n\n\t   `startIndex` is counted by code points.\n\t **/\n\tpublic static inline function uIndexOf(s : String, value : String, startIndex : Int = 0) : Int {\n\t\tvar index = s.indexOf(value, InternalEncoding.offsetByCodePoints(s, 0, startIndex));\n\t\treturn if (index >= 0) InternalEncoding.codePointCount(s, 0, index) else -1;\n\t}\n\n\t/**\n\t   Returns the position of the rightmost occurence of the str within String `s`.\n\n\t   `startIndex` is counted by code points.\n\t **/\n\tpublic static inline function uLastIndexOf(s : String, value : String, ?startIndex) : Int {\n\t\tif (startIndex == null)\n\t\t\tstartIndex = s.length - 1;\n\t\tvar index = s.lastIndexOf(value, InternalEncoding.offsetByCodePoints(s, 0, startIndex));\n\t\treturn if (index >= 0) InternalEncoding.codePointCount(s, 0, index) else -1;\n\t}\n\n\t/**\n\t   Splits String `s` at each occurence of `delimiter`.\n\t **/\n\tpublic static inline function uSplit(s : String, delimiter : String) : Array<String> {\n\t\treturn if (delimiter.length == 0) {\n\t\t\t[for (i in new InternalEncodingIter(s, 0, s.length)) InternalEncoding.charAt(s, i)];\n\t\t} else {\n\t\t\ts.split(delimiter);\n\t\t}\n\t}\n\n\t/**\n\t   Returns `length` characters of String `s`, starting at position `startIndex`.\n\n\t   `startIndex` and `length` are counted by code points.\n\t **/\n\tpublic static inline function uSubstr(s : String, startIndex : Int, ?length : Int) : String {\n\t\tvar si = InternalEncoding.offsetByCodePoints(s,\n\t\t\tif (startIndex >= 0) 0 else s.length,\n\t\t\tstartIndex);\n\t\tvar ei = if (length == null) s.length\n\t\t\telse if (length < 0) si\n\t\t\telse InternalEncoding.offsetByCodePoints(s, si, length);\n\t\treturn s.substring(si, ei);\n\t}\n\n\t/**\n\t   Returns the part of String `s` from `startIndex` to `endIndex`.\n\n\t   `startIndex` and `endIndex` are counted by code points.\n\t **/\n\tpublic static inline function uSubstring(s : String, startIndex : Int, ?endIndex : Int) : String {\n\t\tvar si = if (startIndex < 0) 0\n\t\t\telse InternalEncoding.offsetByCodePoints(s, 0, startIndex);\n\t\tvar ei = if (endIndex == null) s.length\n\t\t\telse if (endIndex < 0) 0\n\t\t\telse InternalEncoding.offsetByCodePoints(s, 0, endIndex);\n\t\treturn s.substring(si, ei);\n\t}\n\n\t/**\n\t   Returns an iterator of the code points of String `s`.\n\t **/\n\tpublic static inline function uIterator(s : String) : CodePointIter {\n\t\treturn new CodePointIter(s);\n\t}\n\n\t/**\n\t   Compares String `a` and `b`.\n\t **/\n\tpublic static function uCompare(a : String, b : String) : Int {\n\t\tvar aiter = new InternalEncodingIter(a, 0, a.length);\n\t\tvar biter = new InternalEncodingIter(b, 0, b.length);\n\t\twhile (aiter.hasNext() && biter.hasNext()) {\n\t\t\tvar acode = InternalEncoding.codePointAt(a, aiter.next());\n\t\t\tvar bcode = InternalEncoding.codePointAt(b, biter.next());\n\t\t\tif (acode < bcode)\n\t\t\t\treturn -1;\n\t\t\tif (acode > bcode)\n\t\t\t\treturn 1;\n\t\t}\n\t\tif (biter.hasNext())\n\t\t\treturn -1;\n\t\tif (aiter.hasNext())\n\t\t\treturn 1;\n\t\treturn 0;\n\t}\n\n\t/**\n\t   Converts `codePoints` to string.\n\t **/\n\tpublic static inline function uToString(codePoints : Iterable<CodePoint>) : String\n\t\treturn InternalEncoding.fromCodePoints(cast codePoints);\n\n\t/**\n\t   Appends the character `c` to StringBuf `sb`.\n\t **/\n\tpublic static inline function uAddChar(sb : StringBuf, c : CodePoint) : Void {\n\t\t#if (neko || php || cpp || lua || macro)\n\t\t\tUtf8.encodeWith(function(c) sb.addChar(c), c.toInt());\n\t\t#elseif python\n\t\t\t// Utf32.encodeWith(function(c) sb.addChar(c), c.toInt());\n\t\t\tsb.addChar(c);\n\t\t#else\n\t\t\tUtf16.encodeWith(function(c) sb.addChar(c), c.toInt());\n\t\t#end\n\t}\n\n}\n","package lime.text.unifill;\n\nabstract CodePoint(Int) {\n\n\t@:from\n\tpublic static inline function fromInt(code : Int) : CodePoint {\n\t\tif (!Unicode.isScalar(code)) {\n\t\t\tthrow new Exception.InvalidCodePoint(code);\n\t\t}\n\t\treturn new CodePoint(code);\n\t}\n\n\t@:op(A + B)\n\tpublic static inline function cons(a : CodePoint, b : String) : String\n\t\treturn a.toString() + b;\n\n\t@:op(A + B)\n\tpublic static inline function snoc(a : String, b : CodePoint) : String\n\t\treturn a + b.toString();\n\n\t@:op(A + B)\n\tpublic static inline function addInt(a : CodePoint, b : Int) : CodePoint\n\t\treturn CodePoint.fromInt(a.toInt() + b);\n\n\t@:op(A - B)\n\tpublic static inline function sub(a : CodePoint, b : CodePoint) : Int\n\t\treturn (a.toInt()) - (b.toInt());\n\n\t@:op(A - B)\n\tpublic static inline function subInt(a : CodePoint, b : Int) : CodePoint\n\t\treturn CodePoint.fromInt(a.toInt() - b);\n\n\t@:op(A == B) public static function eq(a : CodePoint, b : CodePoint) : Bool;\n\t@:op(A != B) public static function ne(a : CodePoint, b : CodePoint) : Bool;\n\t@:op(A < B) public static function lt(a : CodePoint, b : CodePoint) : Bool;\n\t@:op(A <= B) public static function lte(a : CodePoint, b : CodePoint) : Bool;\n\t@:op(A > B) public static function gt(a : CodePoint, b : CodePoint) : Bool;\n\t@:op(A >= B) public static function gte(a : CodePoint, b : CodePoint) : Bool;\n\n\tinline function new(code : Int) : Void {\n\t\tthis = code;\n\t}\n\n\t@:to\n\tpublic inline function toString() : String\n\t\treturn InternalEncoding.fromCodePoint(this);\n\n\t@:to\n\tpublic inline function toInt() : Int\n\t\treturn this;\n}\n","package lime.text.unifill;\n\nclass CodePointIter {\n\n\tvar string : String;\n\tvar index : Int;\n\tvar endIndex : Int;\n\n\tpublic inline function new(s : String) {\n\t\tstring = s;\n\t\tindex = 0;\n\t\tendIndex = s.length;\n\t}\n\n\tpublic inline function hasNext() : Bool {\n\t\treturn index < endIndex;\n\t}\n\n\tvar i = 0; // FIXME: blocked by HaxeFoundation/haxe#4353\n\tpublic inline function next() : CodePoint {\n\t\ti = index;\n\t\tindex += InternalEncoding.codePointWidthAt(string, index);\n\t\treturn cast InternalEncoding.codePointAt(string, i);\n\t}\n\n}\n","package lime.text.unifill;\n\nclass Exception {\n\tfunction new() {\n\t}\n\tpublic function toString() : String {\n\t\tthrow null;\n\t}\n}\n\nclass InvalidCodePoint extends Exception {\n\tpublic var code(default, null) : Int;\n\tpublic function new(code : Int) {\n\t\tsuper();\n\t\tthis.code = code;\n\t}\n\toverride public function toString() : String {\n\t\treturn 'InvalidCodePoint(code: $code)';\n\t}\n}\n\nclass InvalidCodeUnitSequence extends Exception {\n\tpublic var index(default, null) : Int;\n\tpublic function new(index : Int) {\n\t\tsuper();\n\t\tthis.index = index;\n\t}\n\toverride public function toString() : String {\n\t\treturn 'InvalidCodeUnitSequence(index: $index)';\n\t}\n}\n","package lime.text.unifill;\n\n#if (neko || php || cpp || lua || macro)\n\tprivate typedef UtfX = Utf8;\n#elseif python\n\tprivate typedef UtfX = Utf32;\n#else\n\tprivate typedef UtfX = Utf16;\n#end\n\n/**\n   InternalEncoding provides primitive API to deal with strings across\n   all platforms. You should consider adopting Unifill before this.\n **/\nclass InternalEncoding {\n\n\t/**\n\t   Returns Encoding strings on the platform are encoded in.\n\t **/\n\tpublic static var internalEncoding(get, never) : String;\n\n\tstatic inline function get_internalEncoding() : String\n\t#if (neko || php || cpp || lua || macro)\n\t\treturn \"UTF-8\";\n\t#elseif python\n\t\treturn \"UTF-32\";\n\t#else\n\t\treturn \"UTF-16\";\n\t#end\n\n\t/**\n\t   Returns the UTF-8/16/32 code unit at position `index` of\n\t   String `s`.\n\t **/\n\tpublic static inline function codeUnitAt(s : String, index : Int) : Int {\n\t\treturn UtfX.fromString(s).codeUnitAt(index);\n\t}\n\n\t/**\n\t   Returns the Unicode code point at position `index` of\n\t   String `s`.\n\t **/\n\tpublic static inline function codePointAt(s : String, index : Int) : Int {\n\t\treturn UtfX.fromString(s).codePointAt(index);\n\t}\n\n\t/**\n\t   Returns the character as a String at position `index` of\n\t   String `s`.\n\t **/\n\tpublic static inline function charAt(s : String, index : Int) : String {\n\t\treturn UtfX.fromString(s).charAt(index).toString();\n\t}\n\n\t/**\n\t   Returns the number of Unicode code points from `beginIndex`\n\t   to `endIndex` in String `s`.\n\t **/\n\tpublic static inline function codePointCount(s : String, beginIndex : Int, endIndex : Int) : Int {\n\t\treturn UtfX.fromString(s).codePointCount(beginIndex, endIndex);\n\t}\n\n\t/**\n\t   Returns the number of units of the code point at position\n\t   `index` of String `s`.\n\t **/\n\tpublic static inline function codePointWidthAt(s : String, index : Int) : Int {\n\t\treturn UtfX.fromString(s).codePointWidthAt(index);\n\t}\n\n\t/**\n\t   Returns the number of units of the code point before\n\t   position `index` of String `s`.\n\t **/\n\tpublic static inline function codePointWidthBefore(s : String, index : Int) : Int {\n\t\treturn UtfX.fromString(s).codePointWidthBefore(index);\n\t}\n\n\t/**\n\t   Returns the index within String `s` that is offset from\n\t   position `index` by `codePointOffset` code points.\n\t **/\n\tpublic static inline function offsetByCodePoints(s : String, index : Int, codePointOffset : Int) : Int {\n\t\treturn UtfX.fromString(s).offsetByCodePoints(index, codePointOffset);\n\t}\n\n\t/**\n\t   Returns the index within String `s` that is offset from\n\t   position `index` by `codePointOffset` code points counting\n\t   backward.\n\t **/\n\tpublic static inline function backwardOffsetByCodePoints(s : String, index : Int, codePointOffset : Int) : Int {\n\t\treturn UtfX.fromString(s).offsetByCodePoints(index, -codePointOffset);\n\t}\n\n\t/**\n\t   Converts the code point `code` to a character as String.\n\t **/\n\tpublic static inline function fromCodePoint(codePoint : Int) : String {\n\t\treturn UtfX.fromCodePoint(codePoint).toString();\n\t}\n\n\t/**\n\t   Converts `codePoints` to a String.\n\t **/\n\tpublic static inline function fromCodePoints(codePoints : Iterable<Int>) : String {\n\t\treturn UtfX.fromCodePoints(codePoints).toString();\n\t}\n\n\t/**\n\t   Validates String `s`.\n\n\t   If the code unit sequence of `s` is invalid,\n\t   `Exception.InvalidCodeUnitSequence` is throwed.\n\t **/\n\tpublic static inline function validate(s : String) : Void {\n\t\tUtfX.fromString(s).validate();\n\t}\n\n\t/**\n\t   Returns if String `s` is valid.\n\t **/\n\tpublic static function isValidString(s : String) : Bool {\n\t\ttry {\n\t\t\tvalidate(s);\n\t\t\treturn true;\n\t\t} catch (e : Exception.InvalidCodeUnitSequence) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic static inline function encodeWith(f : Int -> Void, c : Int) : Void {\n\t\tUtfX.encodeWith(f, c);\n\t}\n\n}\n","package lime.text.unifill;\n\nclass InternalEncodingIter {\n\n\tpublic var string : String;\n\tpublic var index : Int;\n\tpublic var endIndex : Int;\n\n\tpublic inline function new(s : String, beginIndex : Int, endIndex : Int) {\n\t\tstring = s;\n\t\tthis.index = beginIndex;\n\t\tthis.endIndex = endIndex;\n\t}\n\n\tpublic inline function hasNext() : Bool {\n\t\treturn index < endIndex;\n\t}\n\n\tvar i = 0; // FIXME: blocked by HaxeFoundation/haxe#4353\n\tpublic inline function next() : Int {\n\t\ti = index;\n\t\tindex += InternalEncoding.codePointWidthAt(string, index);\n\t\treturn i;\n\t}\n\n}\n","package lime.text.unifill;\n\nclass Unicode {\n\n\tpublic static inline var minCodePoint : Int = 0x0000;\n\tpublic static inline var maxCodePoint : Int = 0x10FFFF;\n\tpublic static inline var minHighSurrogate : Int = 0xD800;\n\tpublic static inline var maxHighSurrogate : Int = 0xDBFF;\n\tpublic static inline var minLowSurrogate : Int = 0xDC00;\n\tpublic static inline var maxLowSurrogate : Int = 0xDFFF;\n\n\tpublic static inline function decodeSurrogate(hi : Int, lo : Int) : Int\n\t\treturn (hi - 0xD7C0 << 10) | (lo & 0x3FF);\n\n\tpublic static inline function encodeHighSurrogate(c : Int) : Int\n\t\treturn (c >> 10) + 0xD7C0;\n\n\tpublic static inline function encodeLowSurrogate(c : Int) : Int\n\t\treturn (c & 0x3FF) | 0xDC00;\n\n\tpublic static inline function isScalar(code : Int) : Bool {\n\t\treturn minCodePoint <= code && code <= maxCodePoint && !isHighSurrogate(code) && !isLowSurrogate(code);\n\t}\n\n\tpublic static inline function isHighSurrogate(code : Int) : Bool {\n\t\treturn minHighSurrogate <= code && code <= maxHighSurrogate;\n\t}\n\n\tpublic static inline function isLowSurrogate(code : Int) : Bool {\n\t\treturn minLowSurrogate <= code && code <= maxLowSurrogate;\n\t}\n\n}\n","package lime.ui;\n\n\n@:enum abstract GamepadAxis(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tvar LEFT_X = 0;\n\tvar LEFT_Y = 1;\n\tvar RIGHT_X = 2;\n\tvar RIGHT_Y = 3;\n\tvar TRIGGER_LEFT = 4;\n\tvar TRIGGER_RIGHT = 5;\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn switch (this) {\n\t\t\t\n\t\t\tcase LEFT_X: \"LEFT_X\";\n\t\t\tcase LEFT_Y: \"LEFT_Y\";\n\t\t\tcase RIGHT_X: \"RIGHT_X\";\n\t\t\tcase RIGHT_Y: \"RIGHT_Y\";\n\t\t\tcase TRIGGER_LEFT: \"TRIGGER_LEFT\";\n\t\t\tcase TRIGGER_RIGHT: \"TRIGGER_RIGHT\";\n\t\t\tdefault: \"UNKNOWN (\" + this + \")\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package lime.ui;\n\n\n@:enum abstract GamepadButton(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tvar A = 0;\n\tvar B = 1;\n\tvar X = 2;\n\tvar Y = 3;\n\tvar BACK = 4;\n\tvar GUIDE = 5;\n\tvar START = 6;\n\tvar LEFT_STICK = 7;\n\tvar RIGHT_STICK = 8;\n\tvar LEFT_SHOULDER = 9;\n\tvar RIGHT_SHOULDER = 10;\n\tvar DPAD_UP = 11;\n\tvar DPAD_DOWN = 12;\n\tvar DPAD_LEFT = 13;\n\tvar DPAD_RIGHT = 14;\n\t\n\t\n\tpublic inline function toString ():String {\n\t\t\n\t\treturn switch (this) {\n\t\t\t\n\t\t\tcase A: \"A\";\n\t\t\tcase B: \"B\";\n\t\t\tcase X: \"X\";\n\t\t\tcase Y: \"Y\";\n\t\t\tcase BACK: \"BACK\";\n\t\t\tcase GUIDE: \"GUIDE\";\n\t\t\tcase START: \"START\";\n\t\t\tcase LEFT_STICK: \"LEFT_STICK\";\n\t\t\tcase RIGHT_STICK: \"RIGHT_STICK\";\n\t\t\tcase LEFT_SHOULDER: \"LEFT_SHOULDER\";\n\t\t\tcase RIGHT_SHOULDER: \"RIGHT_SHOULDER\";\n\t\t\tcase DPAD_UP: \"DPAD_UP\";\n\t\t\tcase DPAD_DOWN: \"DPAD_DOWN\";\n\t\t\tcase DPAD_LEFT: \"DPAD_LEFT\";\n\t\t\tcase DPAD_RIGHT: \"DPAD_RIGHT\";\n\t\t\tdefault: \"UNKNOWN (\" + this + \")\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package lime.ui;\n\n\nabstract JoystickHatPosition(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tpublic static inline var CENTER:JoystickHatPosition = 0x00;\n\tpublic static inline var DOWN:JoystickHatPosition = 0x04;\n\tpublic static inline var LEFT:JoystickHatPosition = 0x08;\n\tpublic static inline var RIGHT:JoystickHatPosition = 0x02;\n\tpublic static inline var UP:JoystickHatPosition = 0x01;\n\t\n\tpublic static inline var DOWN_LEFT:JoystickHatPosition = (0x04 | 0x08);\n\tpublic static inline var DOWN_RIGHT:JoystickHatPosition = (0x04 | 0x02);\n\tpublic static inline var UP_LEFT:JoystickHatPosition = (0x01 | 0x08);\n\tpublic static inline var UP_RIGHT:JoystickHatPosition = (0x01 | 0x02);\n\t\n\tpublic var center (get, set):Bool;\n\tpublic var down (get, set):Bool;\n\tpublic var left (get, set):Bool;\n\tpublic var right (get, set):Bool;\n\tpublic var up (get, set):Bool;\n\t\n\t\n\tpublic function new (value:Int) {\n\t\t\n\t\tthis = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_center ():Bool {\n\t\t\n\t\treturn (this == 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_center (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_down ():Bool {\n\t\t\n\t\treturn (this & DOWN > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_down (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= DOWN;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - DOWN;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_left ():Bool {\n\t\t\n\t\treturn (this & LEFT > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_left (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= LEFT;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - LEFT;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_right ():Bool {\n\t\t\n\t\treturn (this & RIGHT > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_right (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= RIGHT;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - RIGHT;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_up ():Bool {\n\t\t\n\t\treturn (this & UP > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_up (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= UP;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - UP;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.ui;\n\n\nimport lime._backend.native.NativeCFFI;\n\n@:access(lime._backend.native.NativeCFFI)\n\n\n@:enum abstract KeyCode(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tvar UNKNOWN = 0x00;\n\tvar BACKSPACE = 0x08;\n\tvar TAB = 0x09;\n\tvar RETURN = 0x0D;\n\tvar ESCAPE = 0x1B;\n\tvar SPACE = 0x20;\n\tvar EXCLAMATION = 0x21;\n\tvar QUOTE = 0x22;\n\tvar HASH = 0x23;\n\tvar DOLLAR = 0x24;\n\tvar PERCENT = 0x25;\n\tvar AMPERSAND = 0x26;\n\tvar SINGLE_QUOTE = 0x27;\n\tvar LEFT_PARENTHESIS = 0x28;\n\tvar RIGHT_PARENTHESIS = 0x29;\n\tvar ASTERISK = 0x2A;\n\tvar PLUS = 0x2B;\n\tvar COMMA = 0x2C;\n\tvar MINUS = 0x2D;\n\tvar PERIOD = 0x2E;\n\tvar SLASH = 0x2F;\n\tvar NUMBER_0 = 0x30;\n\tvar NUMBER_1 = 0x31;\n\tvar NUMBER_2 = 0x32;\n\tvar NUMBER_3 = 0x33;\n\tvar NUMBER_4 = 0x34;\n\tvar NUMBER_5 = 0x35;\n\tvar NUMBER_6 = 0x36;\n\tvar NUMBER_7 = 0x37;\n\tvar NUMBER_8 = 0x38;\n\tvar NUMBER_9 = 0x39;\n\tvar COLON = 0x3A;\n\tvar SEMICOLON = 0x3B;\n\tvar LESS_THAN = 0x3C;\n\tvar EQUALS = 0x3D;\n\tvar GREATER_THAN = 0x3E;\n\tvar QUESTION = 0x3F;\n\tvar AT = 0x40;\n\tvar LEFT_BRACKET = 0x5B;\n\tvar BACKSLASH = 0x5C;\n\tvar RIGHT_BRACKET = 0x5D;\n\tvar CARET = 0x5E;\n\tvar UNDERSCORE = 0x5F;\n\tvar GRAVE = 0x60;\n\tvar A = 0x61;\n\tvar B = 0x62;\n\tvar C = 0x63;\n\tvar D = 0x64;\n\tvar E = 0x65;\n\tvar F = 0x66;\n\tvar G = 0x67;\n\tvar H = 0x68;\n\tvar I = 0x69;\n\tvar J = 0x6A;\n\tvar K = 0x6B;\n\tvar L = 0x6C;\n\tvar M = 0x6D;\n\tvar N = 0x6E;\n\tvar O = 0x6F;\n\tvar P = 0x70;\n\tvar Q = 0x71;\n\tvar R = 0x72;\n\tvar S = 0x73;\n\tvar T = 0x74;\n\tvar U = 0x75;\n\tvar V = 0x76;\n\tvar W = 0x77;\n\tvar X = 0x78;\n\tvar Y = 0x79;\n\tvar Z = 0x7A;\n\tvar DELETE = 0x7F;\n\tvar CAPS_LOCK = 0x40000039;\n\tvar F1 = 0x4000003A;\n\tvar F2 = 0x4000003B;\n\tvar F3 = 0x4000003C;\n\tvar F4 = 0x4000003D;\n\tvar F5 = 0x4000003E;\n\tvar F6 = 0x4000003F;\n\tvar F7 = 0x40000040;\n\tvar F8 = 0x40000041;\n\tvar F9 = 0x40000042;\n\tvar F10 = 0x40000043;\n\tvar F11 = 0x40000044;\n\tvar F12 = 0x40000045;\n\tvar PRINT_SCREEN = 0x40000046;\n\tvar SCROLL_LOCK = 0x40000047;\n\tvar PAUSE = 0x40000048;\n\tvar INSERT = 0x40000049;\n\tvar HOME = 0x4000004A;\n\tvar PAGE_UP = 0x4000004B;\n\tvar END = 0x4000004D;\n\tvar PAGE_DOWN = 0x4000004E;\n\tvar RIGHT = 0x4000004F;\n\tvar LEFT = 0x40000050;\n\tvar DOWN = 0x40000051;\n\tvar UP = 0x40000052;\n\tvar NUM_LOCK = 0x40000053;\n\tvar NUMPAD_DIVIDE = 0x40000054;\n\tvar NUMPAD_MULTIPLY = 0x40000055;\n\tvar NUMPAD_MINUS = 0x40000056;\n\tvar NUMPAD_PLUS = 0x40000057;\n\tvar NUMPAD_ENTER = 0x40000058;\n\tvar NUMPAD_1 = 0x40000059;\n\tvar NUMPAD_2 = 0x4000005A;\n\tvar NUMPAD_3 = 0x4000005B;\n\tvar NUMPAD_4 = 0x4000005C;\n\tvar NUMPAD_5 = 0x4000005D;\n\tvar NUMPAD_6 = 0x4000005E;\n\tvar NUMPAD_7 = 0x4000005F;\n\tvar NUMPAD_8 = 0x40000060;\n\tvar NUMPAD_9 = 0x40000061;\n\tvar NUMPAD_0 = 0x40000062;\n\tvar NUMPAD_PERIOD = 0x40000063;\n\tvar APPLICATION = 0x40000065;\n\tvar POWER = 0x40000066;\n\tvar NUMPAD_EQUALS = 0x40000067;\n\tvar F13 = 0x40000068;\n\tvar F14 = 0x40000069;\n\tvar F15 = 0x4000006A;\n\tvar F16 = 0x4000006B;\n\tvar F17 = 0x4000006C;\n\tvar F18 = 0x4000006D;\n\tvar F19 = 0x4000006E;\n\tvar F20 = 0x4000006F;\n\tvar F21 = 0x40000070;\n\tvar F22 = 0x40000071;\n\tvar F23 = 0x40000072;\n\tvar F24 = 0x40000073;\n\tvar EXECUTE = 0x40000074;\n\tvar HELP = 0x40000075;\n\tvar MENU = 0x40000076;\n\tvar SELECT = 0x40000077;\n\tvar STOP = 0x40000078;\n\tvar AGAIN = 0x40000079;\n\tvar UNDO = 0x4000007A;\n\tvar CUT = 0x4000007B;\n\tvar COPY = 0x4000007C;\n\tvar PASTE = 0x4000007D;\n\tvar FIND = 0x4000007E;\n\tvar MUTE = 0x4000007F;\n\tvar VOLUME_UP = 0x40000080;\n\tvar VOLUME_DOWN = 0x40000081;\n\tvar NUMPAD_COMMA = 0x40000085;\n\t//var NUMPAD_EQUALS_AS400 = 0x40000086;\n\tvar ALT_ERASE = 0x40000099;\n\tvar SYSTEM_REQUEST = 0x4000009A;\n\tvar CANCEL = 0x4000009B;\n\tvar CLEAR = 0x4000009C;\n\tvar PRIOR = 0x4000009D;\n\tvar RETURN2 = 0x4000009E;\n\tvar SEPARATOR = 0x4000009F;\n\tvar OUT = 0x400000A0;\n\tvar OPER = 0x400000A1;\n\tvar CLEAR_AGAIN = 0x400000A2;\n\tvar CRSEL = 0x400000A3;\n\tvar EXSEL = 0x400000A4;\n\tvar NUMPAD_00 = 0x400000B0;\n\tvar NUMPAD_000 = 0x400000B1;\n\tvar THOUSAND_SEPARATOR = 0x400000B2;\n\tvar DECIMAL_SEPARATOR = 0x400000B3;\n\tvar CURRENCY_UNIT = 0x400000B4;\n\tvar CURRENCY_SUBUNIT = 0x400000B5;\n\tvar NUMPAD_LEFT_PARENTHESIS = 0x400000B6;\n\tvar NUMPAD_RIGHT_PARENTHESIS = 0x400000B7;\n\tvar NUMPAD_LEFT_BRACE = 0x400000B8;\n\tvar NUMPAD_RIGHT_BRACE = 0x400000B9;\n\tvar NUMPAD_TAB = 0x400000BA;\n\tvar NUMPAD_BACKSPACE = 0x400000BB;\n\tvar NUMPAD_A = 0x400000BC;\n\tvar NUMPAD_B = 0x400000BD;\n\tvar NUMPAD_C = 0x400000BE;\n\tvar NUMPAD_D = 0x400000BF;\n\tvar NUMPAD_E = 0x400000C0;\n\tvar NUMPAD_F = 0x400000C1;\n\tvar NUMPAD_XOR = 0x400000C2;\n\tvar NUMPAD_POWER = 0x400000C3;\n\tvar NUMPAD_PERCENT = 0x400000C4;\n\tvar NUMPAD_LESS_THAN = 0x400000C5;\n\tvar NUMPAD_GREATER_THAN = 0x400000C6;\n\tvar NUMPAD_AMPERSAND = 0x400000C7;\n\tvar NUMPAD_DOUBLE_AMPERSAND = 0x400000C8;\n\tvar NUMPAD_VERTICAL_BAR = 0x400000C9;\n\tvar NUMPAD_DOUBLE_VERTICAL_BAR = 0x400000CA;\n\tvar NUMPAD_COLON = 0x400000CB;\n\tvar NUMPAD_HASH = 0x400000CC;\n\tvar NUMPAD_SPACE = 0x400000CD;\n\tvar NUMPAD_AT = 0x400000CE;\n\tvar NUMPAD_EXCLAMATION = 0x400000CF;\n\tvar NUMPAD_MEM_STORE = 0x400000D0;\n\tvar NUMPAD_MEM_RECALL = 0x400000D1;\n\tvar NUMPAD_MEM_CLEAR = 0x400000D2;\n\tvar NUMPAD_MEM_ADD = 0x400000D3;\n\tvar NUMPAD_MEM_SUBTRACT = 0x400000D4;\n\tvar NUMPAD_MEM_MULTIPLY = 0x400000D5;\n\tvar NUMPAD_MEM_DIVIDE = 0x400000D6;\n\tvar NUMPAD_PLUS_MINUS = 0x400000D7;\n\tvar NUMPAD_CLEAR = 0x400000D8;\n\tvar NUMPAD_CLEAR_ENTRY = 0x400000D9;\n\tvar NUMPAD_BINARY = 0x400000DA;\n\tvar NUMPAD_OCTAL = 0x400000DB;\n\tvar NUMPAD_DECIMAL = 0x400000DC;\n\tvar NUMPAD_HEXADECIMAL = 0x400000DD;\n\tvar LEFT_CTRL = 0x400000E0;\n\tvar LEFT_SHIFT = 0x400000E1;\n\tvar LEFT_ALT = 0x400000E2;\n\tvar LEFT_META = 0x400000E3;\n\tvar RIGHT_CTRL = 0x400000E4;\n\tvar RIGHT_SHIFT = 0x400000E5;\n\tvar RIGHT_ALT = 0x400000E6;\n\tvar RIGHT_META = 0x400000E7;\n\tvar MODE = 0x40000101;\n\tvar AUDIO_NEXT = 0x40000102;\n\tvar AUDIO_PREVIOUS = 0x40000103;\n\tvar AUDIO_STOP = 0x40000104;\n\tvar AUDIO_PLAY = 0x40000105;\n\tvar AUDIO_MUTE = 0x40000106;\n\tvar MEDIA_SELECT = 0x40000107;\n\tvar WWW = 0x40000108;\n\tvar MAIL = 0x40000109;\n\tvar CALCULATOR = 0x4000010A;\n\tvar COMPUTER = 0x4000010B;\n\tvar APP_CONTROL_SEARCH = 0x4000010C;\n\tvar APP_CONTROL_HOME = 0x4000010D;\n\tvar APP_CONTROL_BACK = 0x4000010E;\n\tvar APP_CONTROL_FORWARD = 0x4000010F;\n\tvar APP_CONTROL_STOP = 0x40000110;\n\tvar APP_CONTROL_REFRESH = 0x40000111;\n\tvar APP_CONTROL_BOOKMARKS = 0x40000112;\n\tvar BRIGHTNESS_DOWN = 0x40000113;\n\tvar BRIGHTNESS_UP = 0x40000114;\n\tvar DISPLAY_SWITCH = 0x40000115;\n\tvar BACKLIGHT_TOGGLE = 0x40000116;\n\tvar BACKLIGHT_DOWN = 0x40000117;\n\tvar BACKLIGHT_UP = 0x40000118;\n\tvar EJECT = 0x40000119;\n\tvar SLEEP = 0x4000011A;\n\t\n\t@:from public static function fromScanCode (scanCode:ScanCode):KeyCode {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tvar code:Int = scanCode;\n\t\treturn Std.int (NativeCFFI.lime_key_code_from_scan_code (code));\n\t\t#else\n\t\treturn KeyCode.UNKNOWN;\n\t\t#end\n\t\t\n\t}\n\t\n\tprivate static function toScanCode (keyCode:KeyCode):ScanCode {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tvar code:Int = keyCode;\n\t\treturn Std.int (NativeCFFI.lime_key_code_to_scan_code (code));\n\t\t#else\n\t\treturn ScanCode.UNKNOWN;\n\t\t#end\n\t\t\n\t}\n\t\n\t@:op(A > B) private static inline function gt (a:KeyCode, b:KeyCode):Bool { return (a:Int) > (b:Int); }\n\t@:op(A >= B) private static inline function gte (a:KeyCode, b:KeyCode):Bool { return (a:Int) >= (b:Int); }\n\t@:op(A < B) private static inline function lt (a:KeyCode, b:KeyCode):Bool { return (a:Int) < (b:Int); }\n\t@:op(A <= B) private static inline function lte (a:KeyCode, b:KeyCode):Bool { return (a:Int) <= (b:Int); }\n\t@:op(A + B) private static inline function plus (a:KeyCode, b:Int):KeyCode { return (a:Int) + b; }\n\t\n\t\n}","package lime.ui;\n\n\nabstract KeyModifier(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tpublic static inline var NONE:KeyModifier = 0x0000;\n\tpublic static inline var LEFT_SHIFT:KeyModifier = 0x0001;\n\tpublic static inline var RIGHT_SHIFT:KeyModifier = 0x0002;\n\tpublic static inline var LEFT_CTRL:KeyModifier = 0x0040;\n\tpublic static inline var RIGHT_CTRL:KeyModifier = 0x0080;\n\tpublic static inline var LEFT_ALT:KeyModifier = 0x0100;\n\tpublic static inline var RIGHT_ALT:KeyModifier = 0x0200;\n\tpublic static inline var LEFT_META:KeyModifier = 0x0400;\n\tpublic static inline var RIGHT_META:KeyModifier = 0x0800;\n\tpublic static inline var NUM_LOCK:KeyModifier = 0x1000;\n\tpublic static inline var CAPS_LOCK:KeyModifier = 0x2000;\n\tpublic static inline var MODE:KeyModifier = 0x4000;\n\t\n\tpublic static inline var CTRL:KeyModifier = (0x0040 | 0x0080);\n\tpublic static inline var SHIFT:KeyModifier = (0x001 | 0x0002);\n\tpublic static inline var ALT:KeyModifier = (0x0100 | 0x0200);\n\tpublic static inline var META:KeyModifier = (0x0400 | 0x0800);\n\t\n\tpublic var altKey (get, set):Bool;\n\tpublic var capsLock (get, set):Bool;\n\tpublic var ctrlKey (get, set):Bool;\n\tpublic var metaKey (get, set):Bool;\n\tpublic var numLock (get, set):Bool;\n\tpublic var shiftKey (get, set):Bool;\n\t\n\t\n\tprivate function get_altKey ():Bool {\n\t\t\n\t\treturn (this & LEFT_ALT > 0) || (this & RIGHT_ALT > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_altKey (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= ALT;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - ALT;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_capsLock ():Bool {\n\t\t\n\t\treturn (this & CAPS_LOCK > 0) || (this & CAPS_LOCK > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_capsLock (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= CAPS_LOCK;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - CAPS_LOCK;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_ctrlKey ():Bool {\n\t\t\n\t\treturn (this & LEFT_CTRL > 0) || (this & RIGHT_CTRL > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_ctrlKey (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= CTRL;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - CTRL;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_metaKey ():Bool {\n\t\t\n\t\treturn (this & LEFT_META > 0) || (this & RIGHT_META > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_metaKey (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= META;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - META;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_numLock ():Bool {\n\t\t\n\t\treturn (this & NUM_LOCK > 0) || (this & NUM_LOCK > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_numLock (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= NUM_LOCK;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - NUM_LOCK;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_shiftKey ():Bool {\n\t\t\n\t\treturn (this & LEFT_SHIFT > 0) || (this & RIGHT_SHIFT > 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_shiftKey (value:Bool):Bool {\n\t\t\n\t\tif (value) {\n\t\t\t\n\t\t\tthis |= SHIFT;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis &= 0xFFFFFFF - SHIFT;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package lime.ui;\n\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Mouse {\n\t\n\t\n\tpublic static var cursor (get, set):MouseCursor;\n\tpublic static var lock (get, set):Bool;\n\t\n\t\n\tpublic static function hide ():Void {\n\t\t\n\t\tMouseBackend.hide ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function show ():Void {\n\t\t\n\t\tMouseBackend.show ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function warp (x:Int, y:Int, window:Window = null):Void {\n\t\t\n\t\tMouseBackend.warp (x, y, window);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate static function get_cursor ():MouseCursor {\n\t\t\n\t\treturn MouseBackend.get_cursor ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function set_cursor (value:MouseCursor):MouseCursor {\n\t\t\n\t\treturn MouseBackend.set_cursor (value);\n\t\t\n\t}\n\t\n\t\n\tprivate static function get_lock ():Bool {\n\t\t\n\t\treturn MouseBackend.get_lock ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function set_lock (value:Bool):Bool {\n\t\t\n\t\treturn MouseBackend.set_lock (value);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if flash\n@:noCompletion private typedef MouseBackend = lime._backend.flash.FlashMouse;\n#elseif (js && html5)\n@:noCompletion private typedef MouseBackend = lime._backend.html5.HTML5Mouse;\n#else\n@:noCompletion private typedef MouseBackend = lime._backend.native.NativeMouse;\n#end","package lime.ui;\n\n\nimport lime._backend.native.NativeCFFI;\n\n@:access(lime._backend.native.NativeCFFI)\n@:access(lime.ui.KeyCode)\n\n\n@:enum abstract ScanCode(Int) from Int to Int from UInt to UInt {\n\t\n\t\n\tvar UNKNOWN = 0;\n\tvar BACKSPACE = 42;\n\tvar TAB = 43;\n\tvar RETURN = 40;\n\tvar ESCAPE = 41;\n\tvar SPACE = 44;\n\t//var EXCLAMATION = 0x21;\n\t//var QUOTE = 0x22;\n\t//var HASH = 0x23;\n\t//var DOLLAR = 0x24;\n\t//var PERCENT = 0x25;\n\t//var AMPERSAND = 0x26;\n\tvar SINGLE_QUOTE = 52;\n\t//var LEFT_PARENTHESIS = 0x28;\n\t//var RIGHT_PARENTHESIS = 0x29;\n\t//var ASTERISK = 0x2A;\n\t//var PLUS = 0x2B;\n\tvar COMMA = 54;\n\tvar MINUS = 45;\n\tvar PERIOD = 55;\n\tvar SLASH = 56;\n\tvar NUMBER_0 = 39;\n\tvar NUMBER_1 = 30;\n\tvar NUMBER_2 = 31;\n\tvar NUMBER_3 = 32;\n\tvar NUMBER_4 = 33;\n\tvar NUMBER_5 = 34;\n\tvar NUMBER_6 = 35;\n\tvar NUMBER_7 = 36;\n\tvar NUMBER_8 = 37;\n\tvar NUMBER_9 = 38;\n\t//var COLON = 0x3A;\n\tvar SEMICOLON = 51;\n\t//var LESS_THAN = 0x3C;\n\tvar EQUALS = 46;\n\t//var GREATER_THAN = 0x3E;\n\t//var QUESTION = 0x3F;\n\t//var AT = 0x40;\n\tvar LEFT_BRACKET = 47;\n\tvar BACKSLASH = 49;\n\tvar RIGHT_BRACKET = 48;\n\t//var CARET = 0x5E;\n\t//var UNDERSCORE = 0x5F;\n\tvar GRAVE = 53;\n\tvar A = 4;\n\tvar B = 5;\n\tvar C = 6;\n\tvar D = 7;\n\tvar E = 8;\n\tvar F = 9;\n\tvar G = 10;\n\tvar H = 11;\n\tvar I = 12;\n\tvar J = 13;\n\tvar K = 14;\n\tvar L = 15;\n\tvar M = 16;\n\tvar N = 17;\n\tvar O = 18;\n\tvar P = 19;\n\tvar Q = 20;\n\tvar R = 21;\n\tvar S = 22;\n\tvar T = 23;\n\tvar U = 24;\n\tvar V = 25;\n\tvar W = 26;\n\tvar X = 27;\n\tvar Y = 28;\n\tvar Z = 29;\n\tvar DELETE = 76;\n\tvar CAPS_LOCK = 57;\n\tvar F1 = 58;\n\tvar F2 = 59;\n\tvar F3 = 60;\n\tvar F4 = 61;\n\tvar F5 = 62;\n\tvar F6 = 63;\n\tvar F7 = 64;\n\tvar F8 = 65;\n\tvar F9 = 66;\n\tvar F10 = 67;\n\tvar F11 = 68;\n\tvar F12 = 69;\n\tvar PRINT_SCREEN = 70;\n\tvar SCROLL_LOCK = 71;\n\tvar PAUSE = 72;\n\tvar INSERT = 73;\n\tvar HOME = 74;\n\tvar PAGE_UP = 75;\n\tvar END = 77;\n\tvar PAGE_DOWN = 78;\n\tvar RIGHT = 79;\n\tvar LEFT = 80;\n\tvar DOWN = 81;\n\tvar UP = 82;\n\tvar NUM_LOCK = 83;\n\tvar NUMPAD_DIVIDE = 84;\n\tvar NUMPAD_MULTIPLY = 85;\n\tvar NUMPAD_MINUS = 86;\n\tvar NUMPAD_PLUS = 87;\n\tvar NUMPAD_ENTER = 88;\n\tvar NUMPAD_1 = 89;\n\tvar NUMPAD_2 = 90;\n\tvar NUMPAD_3 = 91;\n\tvar NUMPAD_4 = 92;\n\tvar NUMPAD_5 = 93;\n\tvar NUMPAD_6 = 94;\n\tvar NUMPAD_7 = 95;\n\tvar NUMPAD_8 = 96;\n\tvar NUMPAD_9 = 97;\n\tvar NUMPAD_0 = 98;\n\tvar NUMPAD_PERIOD = 99;\n\tvar APPLICATION = 101;\n\tvar POWER = 102;\n\tvar NUMPAD_EQUALS = 103;\n\tvar F13 = 104;\n\tvar F14 = 105;\n\tvar F15 = 106;\n\tvar F16 = 107;\n\tvar F17 = 108;\n\tvar F18 = 109;\n\tvar F19 = 110;\n\tvar F20 = 111;\n\tvar F21 = 112;\n\tvar F22 = 113;\n\tvar F23 = 114;\n\tvar F24 = 115;\n\tvar EXECUTE = 116;\n\tvar HELP = 117;\n\tvar MENU = 118;\n\tvar SELECT = 119;\n\tvar STOP = 120;\n\tvar AGAIN = 121;\n\tvar UNDO = 122;\n\tvar CUT = 123;\n\tvar COPY = 124;\n\tvar PASTE = 125;\n\tvar FIND = 126;\n\tvar MUTE = 127;\n\tvar VOLUME_UP = 128;\n\tvar VOLUME_DOWN = 129;\n\tvar NUMPAD_COMMA = 133;\n\t//var NUMPAD_EQUALS_AS400 = 134;\n\tvar ALT_ERASE = 153;\n\tvar SYSTEM_REQUEST = 154;\n\tvar CANCEL = 155;\n\tvar CLEAR = 156;\n\tvar PRIOR = 157;\n\tvar RETURN2 = 158;\n\tvar SEPARATOR = 159;\n\tvar OUT = 160;\n\tvar OPER = 161;\n\tvar CLEAR_AGAIN = 162;\n\tvar CRSEL = 163;\n\tvar EXSEL = 164;\n\tvar NUMPAD_00 = 176;\n\tvar NUMPAD_000 = 177;\n\tvar THOUSAND_SEPARATOR = 178;\n\tvar DECIMAL_SEPARATOR = 179;\n\tvar CURRENCY_UNIT = 180;\n\tvar CURRENCY_SUBUNIT = 181;\n\tvar NUMPAD_LEFT_PARENTHESIS = 182;\n\tvar NUMPAD_RIGHT_PARENTHESIS = 183;\n\tvar NUMPAD_LEFT_BRACE = 184;\n\tvar NUMPAD_RIGHT_BRACE = 185;\n\tvar NUMPAD_TAB = 186;\n\tvar NUMPAD_BACKSPACE = 187;\n\tvar NUMPAD_A = 188;\n\tvar NUMPAD_B = 189;\n\tvar NUMPAD_C = 190;\n\tvar NUMPAD_D = 191;\n\tvar NUMPAD_E = 192;\n\tvar NUMPAD_F = 193;\n\tvar NUMPAD_XOR = 194;\n\tvar NUMPAD_POWER = 195;\n\tvar NUMPAD_PERCENT = 196;\n\tvar NUMPAD_LESS_THAN = 197;\n\tvar NUMPAD_GREATER_THAN = 198;\n\tvar NUMPAD_AMPERSAND = 199;\n\tvar NUMPAD_DOUBLE_AMPERSAND = 200;\n\tvar NUMPAD_VERTICAL_BAR = 201;\n\tvar NUMPAD_DOUBLE_VERTICAL_BAR = 202;\n\tvar NUMPAD_COLON = 203;\n\tvar NUMPAD_HASH = 204;\n\tvar NUMPAD_SPACE = 205;\n\tvar NUMPAD_AT = 206;\n\tvar NUMPAD_EXCLAMATION = 207;\n\tvar NUMPAD_MEM_STORE = 208;\n\tvar NUMPAD_MEM_RECALL = 209;\n\tvar NUMPAD_MEM_CLEAR = 210;\n\tvar NUMPAD_MEM_ADD = 211;\n\tvar NUMPAD_MEM_SUBTRACT = 212;\n\tvar NUMPAD_MEM_MULTIPLY = 213;\n\tvar NUMPAD_MEM_DIVIDE = 214;\n\tvar NUMPAD_PLUS_MINUS = 215;\n\tvar NUMPAD_CLEAR = 216;\n\tvar NUMPAD_CLEAR_ENTRY = 217;\n\tvar NUMPAD_BINARY = 218;\n\tvar NUMPAD_OCTAL = 219;\n\tvar NUMPAD_DECIMAL = 220;\n\tvar NUMPAD_HEXADECIMAL = 221;\n\tvar LEFT_CTRL = 224;\n\tvar LEFT_SHIFT = 225;\n\tvar LEFT_ALT = 226;\n\tvar LEFT_META = 227;\n\tvar RIGHT_CTRL = 228;\n\tvar RIGHT_SHIFT = 229;\n\tvar RIGHT_ALT = 230;\n\tvar RIGHT_META = 231;\n\tvar MODE = 257;\n\tvar AUDIO_NEXT = 258;\n\tvar AUDIO_PREVIOUS = 259;\n\tvar AUDIO_STOP = 260;\n\tvar AUDIO_PLAY = 261;\n\tvar AUDIO_MUTE = 262;\n\tvar MEDIA_SELECT = 263;\n\tvar WWW = 264;\n\tvar MAIL = 265;\n\tvar CALCULATOR = 266;\n\tvar COMPUTER = 267;\n\tvar APP_CONTROL_SEARCH = 268;\n\tvar APP_CONTROL_HOME = 269;\n\tvar APP_CONTROL_BACK = 270;\n\tvar APP_CONTROL_FORWARD = 271;\n\tvar APP_CONTROL_STOP = 272;\n\tvar APP_CONTROL_REFRESH = 273;\n\tvar APP_CONTROL_BOOKMARKS = 274;\n\tvar BRIGHTNESS_DOWN = 275;\n\tvar BRIGHTNESS_UP = 276;\n\tvar DISPLAY_SWITCH = 277;\n\tvar BACKLIGHT_TOGGLE = 278;\n\tvar BACKLIGHT_DOWN = 279;\n\tvar BACKLIGHT_UP = 280;\n\tvar EJECT = 281;\n\tvar SLEEP = 282;\n\t\n\t@:from public static function fromKeyCode (keyCode:KeyCode):ScanCode {\n\t\t\n\t\treturn KeyCode.toScanCode (keyCode);\n\t\t\n\t}\n\t\n\tprivate static function toKeyCode (scanCode:ScanCode):KeyCode {\n\t\t\n\t\treturn KeyCode.fromScanCode (scanCode);\n\t\t\n\t}\n\t\n\t@:op(A > B) private static inline function gt (a:ScanCode, b:ScanCode):Bool { return (a:Int) > (b:Int); }\n\t@:op(A >= B) private static inline function gte (a:ScanCode, b:ScanCode):Bool { return (a:Int) >= (b:Int); }\n\t@:op(A < B) private static inline function lt (a:ScanCode, b:ScanCode):Bool { return (a:Int) < (b:Int); }\n\t@:op(A <= B) private static inline function lte (a:ScanCode, b:ScanCode):Bool { return (a:Int) <= (b:Int); }\n\t@:op(A + B) private static inline function plus (a:ScanCode, b:Int):ScanCode { return (a:Int) + b; }\n\t\n\t\n}","package lime.utils;\n\n\nimport lime._macros.AssetsMacro;\nimport lime.media.AudioBuffer;\nimport lime.graphics.Image;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass AssetCache {\n\t\n\t\n\tpublic var audio:Map<String, AudioBuffer>;\n\tpublic var enabled:Bool = true;\n\tpublic var image:Map<String, Image>;\n\tpublic var font:Map<String, Dynamic /*Font*/>;\n\tpublic var version:Int;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\taudio = new Map<String, AudioBuffer> ();\n\t\tfont = new Map<String, Dynamic /*Font*/> ();\n\t\timage = new Map<String, Image> ();\n\t\tversion = AssetsMacro.cacheVersion ();\n\t\t\n\t}\n\t\n\t\n\tpublic function exists (id:String, ?type:AssetType):Bool {\n\t\t\n\t\tif (type == AssetType.IMAGE || type == null) {\n\t\t\t\n\t\t\tif (image.exists (id)) return true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (type == AssetType.FONT || type == null) {\n\t\t\t\n\t\t\tif (font.exists (id)) return true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (type == AssetType.SOUND || type == AssetType.MUSIC || type == null) {\n\t\t\t\n\t\t\tif (audio.exists (id)) return true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic function set (id:String, type:AssetType, asset:Dynamic):Void {\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase FONT:\n\t\t\t\tfont.set(id, asset);\n\t\t\t\n\t\t\tcase IMAGE:\n\t\t\t\tif (!Std.is(asset, Image))\n\t\t\t\t\tthrow \"Cannot cache non-Image asset: \" + asset + \" as Image\";\n\t\t\t\t\n\t\t\t\timage.set(id, asset);\n\t\t\t\n\t\t\tcase SOUND, MUSIC:\n\t\t\t\tif (!Std.is(asset, AudioBuffer))\n\t\t\t\t\tthrow \"Cannot cache non-AudioBuffer asset: \" + asset + \" as AudioBuffer\";\n\t\t\t\t\n\t\t\t\taudio.set(id, asset);\n\t\t\t\t\n\t\t\tdefault:\n\t\t\t\tthrow type + \" assets are not cachable\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function clear (prefix:String = null):Void {\n\t\t\n\t\tif (prefix == null) {\n\t\t\t\n\t\t\taudio = new Map<String, AudioBuffer> ();\n\t\t\tfont = new Map<String, Dynamic /*Font*/> ();\n\t\t\timage = new Map<String, Image> ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar keys = audio.keys ();\n\t\t\t\n\t\t\tfor (key in keys) {\n\t\t\t\t\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\n\t\t\t\t\t\n\t\t\t\t\taudio.remove (key);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar keys = font.keys ();\n\t\t\t\n\t\t\tfor (key in keys) {\n\t\t\t\t\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\n\t\t\t\t\t\n\t\t\t\t\tfont.remove (key);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar keys = image.keys ();\n\t\t\t\n\t\t\tfor (key in keys) {\n\t\t\t\t\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\n\t\t\t\t\t\n\t\t\t\t\timage.remove (key);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package lime._macros;\n\n\n#if macro\nimport haxe.crypto.BaseCode;\nimport haxe.io.Bytes;\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\n#end\n\n#if (macro && !display)\nimport sys.io.File;\nimport sys.FileSystem;\n#end\n\n\nclass AssetsMacro {\n\t\n\t\n\t#if !macro\n\t\n\t\n\tmacro public static function cacheVersion () {}\n\t\n\t\n\t#else\n\t\n\t\n\tprivate static var base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\tprivate static var base64Encoder:BaseCode;\n\t\n\t\n\tprivate static function base64Encode (bytes:Bytes):String {\n\t\t\n\t\tvar extension = switch (bytes.length % 3) {\n\t\t\t\n\t\t\tcase 1: \"==\";\n\t\t\tcase 2: \"=\";\n\t\t\tdefault: \"\";\n\t\t\t\n\t\t}\n\t\t\n\t\tif (base64Encoder == null) {\n\t\t\t\n\t\t\tbase64Encoder = new BaseCode (Bytes.ofString (base64Chars));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn base64Encoder.encodeBytes (bytes).toString () + extension;\n\t\t\n\t}\n\t\n\t\n\tmacro public static function cacheVersion () {\n\t\t\n\t\treturn macro $v{Std.int (Math.random () * 1000000)};\n\t\t\n\t}\n\t\n\t\n\tmacro public static function embedBytes ():Array<Field> {\n\t\t\n\t\tvar fields = embedData (\":file\");\n\t\t\n\t\tif (fields != null) {\n\t\t\t\n\t\t\t#if !display\n\t\t\t\n\t\t\tvar constructor = macro {\n\t\t\t\t\n\t\t\t\t#if lime_console\n\t\t\t\tthrow \"not implemented\";\n\t\t\t\t#else\n\t\t\t\tvar bytes = haxe.Resource.getBytes (resourceName);\n\t\t\t\t#if html5\n\t\t\t\tsuper (bytes.b.buffer);\n\t\t\t\t#else\n\t\t\t\tsuper (bytes.length, bytes.b);\n\t\t\t\t#end\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tvar args = [ { name: \"length\", opt: true, type: macro :Int }, { name: \"bytesData\", opt: true, type: macro :haxe.io.BytesData } ];\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: args, expr: constructor, params: [], ret: null }), pos: Context.currentPos () });\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n\tmacro public static function embedByteArray ():Array<Field> {\n\t\t\n\t\tvar fields = embedData (\":file\");\n\t\t\n\t\tif (fields != null) {\n\t\t\t\n\t\t\t#if !display\n\t\t\t\n\t\t\tvar constructor = macro {\n\t\t\t\t\n\t\t\t\tsuper ();\n\t\t\t\t\n\t\t\t\t#if lime_console\n\t\t\t\tthrow \"not implemented\";\n\t\t\t\t#else\n\t\t\t\tvar bytes = haxe.Resource.getBytes (resourceName);\n\t\t\t\t__fromBytes (bytes);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tvar args = [ { name: \"length\", opt: true, type: macro :Int, value: macro 0 } ];\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: args, expr: constructor, params: [], ret: null }), pos: Context.currentPos () });\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n\tprivate static function embedData (metaName:String, encode:Bool = false):Array<Field> {\n\t\t\n\t\t#if !display\n\t\t\n\t\tvar classType = Context.getLocalClass().get();\n\t\tvar metaData = classType.meta.get();\n\t\tvar position = Context.currentPos();\n\t\tvar fields = Context.getBuildFields();\n\t\t\n\t\tfor (meta in metaData) {\n\t\t\t\n\t\t\tif (meta.name == metaName) {\n\t\t\t\t\n\t\t\t\tif (meta.params.length > 0) {\n\t\t\t\t\t\n\t\t\t\t\tswitch (meta.params[0].expr) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase EConst(CString(filePath)):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#if lime_console\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar fieldValue = {\n\t\t\t\t\t\t\t\tpos: position,\n\t\t\t\t\t\t\t\texpr: EConst(CString(filePath))\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfields.push ({\n\t\t\t\t\t\t\t\tkind: FVar(macro :String, fieldValue),\n\t\t\t\t\t\t\t\tname: \"filePath\",\n\t\t\t\t\t\t\t\taccess: [ APrivate, AStatic ],\n\t\t\t\t\t\t\t\tpos: position\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#else\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar path = filePath;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (path == \"\") return null;\n\t\t\t\t\t\t\tif (path == null) return null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!FileSystem.exists (filePath)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tpath = Context.resolvePath (filePath);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!FileSystem.exists (path) || FileSystem.isDirectory (path)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar bytes = File.getBytes (path);\n\t\t\t\t\t\t\tvar resourceName = \"__ASSET__\" + metaName + \"_\" + (classType.pack.length > 0 ? classType.pack.join (\"_\") + \"_\" : \"\") + classType.name;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (Context.getResources ().exists (resourceName)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (encode) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar resourceType = \"image/png\";\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (bytes.get (0) == 0xFF && bytes.get (1) == 0xD8) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tresourceType = \"image/jpg\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else if (bytes.get (0) == 0x47 && bytes.get (1) == 0x49 && bytes.get (2) == 0x46) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tresourceType = \"image/gif\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar fieldValue = { pos: position, expr: EConst(CString(resourceType)) };\n\t\t\t\t\t\t\t\tfields.push ({ kind: FVar(macro :String, fieldValue), name: \"resourceType\", access: [ APrivate, AStatic ], pos: position });\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar base64 = base64Encode (bytes);\n\t\t\t\t\t\t\t\tContext.addResource (resourceName, Bytes.ofString (base64));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tContext.addResource (resourceName, bytes);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar fieldValue = { pos: position, expr: EConst(CString(resourceName)) };\n\t\t\t\t\t\t\tfields.push ({ kind: FVar(macro :String, fieldValue), name: \"resourceName\", access: [ APrivate, AStatic ], pos: position });\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn fields;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tmacro public static function embedFont ():Array<Field> {\n\n\t\tvar fields = null;\n\t\t\n\t\tvar classType = Context.getLocalClass().get();\n\t\tvar metaData = classType.meta.get();\n\t\tvar position = Context.currentPos();\n\t\tvar fields = Context.getBuildFields();\n\t\t\n\t\tvar path = \"\";\n\t\tvar glyphs = \"32-255\";\n\t\t\n\t\t#if !display\n\t\t\n\t\tfor (meta in metaData) {\n\t\t\t\n\t\t\tif (meta.name == \":font\") {\n\t\t\t\t\n\t\t\t\tif (meta.params.length > 0) {\n\t\t\t\t\t\n\t\t\t\t\tswitch (meta.params[0].expr) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase EConst(CString(filePath)):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpath = filePath;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!sys.FileSystem.exists(filePath)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tpath = Context.resolvePath (filePath);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (path != null && path != \"\") {\n\t\t\t\n\t\t\t#if lime_console\n\t\t\tthrow \"not implemented\";\n\t\t\t#end\n\t\t\t\n\t\t\t#if html5\n\t\t\tSys.command (\"haxelib\", [ \"run\", \"lime\", \"generate\", \"-font-hash\", sys.FileSystem.fullPath(path) ]);\n\t\t\tpath += \".hash\";\n\t\t\t#end\n\t\t\t\n\t\t\tvar bytes = File.getBytes (path);\n\t\t\tvar resourceName = \"LIME_font_\" + (classType.pack.length > 0 ? classType.pack.join (\"_\") + \"_\" : \"\") + classType.name;\n\t\t\t\n\t\t\tContext.addResource (resourceName, bytes);\n\t\t\t\n\t\t\tfor (field in fields) {\n\t\t\t\t\n\t\t\t\tif (field.name == \"new\") {\n\t\t\t\t\t\n\t\t\t\t\tfields.remove (field);\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar fieldValue = { pos: position, expr: EConst(CString(resourceName)) };\n\t\t\tfields.push ({ kind: FVar(macro :String, fieldValue), name: \"resourceName\", access: [ APublic, AStatic ], pos: position });\n\t\t\t\n\t\t\tvar constructor = macro {\n\t\t\t\t\n\t\t\t\tsuper ();\n\t\t\t\t\n\t\t\t\t__fromBytes (haxe.Resource.getBytes (resourceName));\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: [], expr: constructor, params: [], ret: null }), pos: Context.currentPos() });\n\t\t\t\n\t\t\treturn fields;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n\tmacro public static function embedImage ():Array<Field> {\n\t\t\n\t\t#if html5\n\t\tvar fields = embedData (\":image\", true);\n\t\t#else\n\t\tvar fields = embedData (\":image\");\n\t\t#end\n\t\t\n\t\tif (fields != null) {\n\t\t\t\n\t\t\t#if !display\n\t\t\t\n\t\t\tvar constructor = macro { \n\t\t\t\t\n\t\t\t\t#if html5\n\t\t\t\t\n\t\t\t\tsuper ();\n\t\t\t\t\n\t\t\t\tif (preload != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar buffer = new lime.graphics.ImageBuffer ();\n\t\t\t\t\tbuffer.__srcImage = preload;\n\t\t\t\t\tbuffer.width = preload.width;\n\t\t\t\t\tbuffer.width = preload.height;\n\t\t\t\t\t\n\t\t\t\t\t__fromImageBuffer (buffer);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t__fromBase64 (haxe.Resource.getString (resourceName), resourceType, function (image) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (preload == null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpreload = image.buffer.__srcImage;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (onload != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tonload (image);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\n\t\t\t\tsuper ();\n\t\t\t\t\n\t\t\t\t#if lime_console\n\t\t\t\tthrow \"not implemented\";\n\t\t\t\t#else\n\t\t\t\t__fromBytes (haxe.Resource.getBytes (resourceName), null);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tvar args = [ { name: \"buffer\", opt: true, type: macro :lime.graphics.ImageBuffer, value: null }, { name: \"offsetX\", opt: true, type: macro :Int, value: null }, { name: \"offsetY\", opt: true, type: macro :Int, value: null }, { name: \"width\", opt: true, type: macro :Int, value: null }, { name: \"height\", opt: true, type: macro :Int, value: null }, { name: \"color\", opt: true, type: macro :Null<Int>, value: null }, { name: \"type\", opt: true, type: macro :lime.graphics.ImageType, value: null } ];\n\t\t\t\n\t\t\t#if html5\n\t\t\targs.push ({ name: \"onload\", opt: true, type: macro :Dynamic, value: null });\n\t\t\tfields.push ({ kind: FVar(macro :js.html.Image, null), name: \"preload\", doc: null, meta: [], access: [ APublic, AStatic ], pos: Context.currentPos() });\n\t\t\t#end\n\t\t\t\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: args, expr: constructor, params: [], ret: null }), pos: Context.currentPos() });\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n\tmacro public static function embedSound ():Array<Field> {\n\t\t\n\t\tvar fields = embedData (\":sound\");\n\t\t\n\t\tif (fields != null) {\n\t\t\t\n\t\t\t#if (openfl && !html5 && !display) // CFFILoader.h(248) : NOT Implemented:api_buffer_data\n\t\t\t\n\t\t\tvar constructor = macro { \n\t\t\t\t\n\t\t\t\tsuper();\n\t\t\t\t\n\t\t\t\t#if lime_console\n\t\t\t\tthrow \"not implemented\";\n\t\t\t\t#else\n\t\t\t\tvar byteArray = openfl.utils.ByteArray.fromBytes (haxe.Resource.getBytes(resourceName));\n\t\t\t\tloadCompressedDataFromByteArray(byteArray, byteArray.length, forcePlayAsMusic);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tvar args = [ { name: \"stream\", opt: true, type: macro :openfl.net.URLRequest, value: null }, { name: \"context\", opt: true, type: macro :openfl.media.SoundLoaderContext, value: null }, { name: \"forcePlayAsMusic\", opt: true, type: macro :Bool, value: macro false } ];\n\t\t\tfields.push ({ name: \"new\", access: [ APublic ], kind: FFun({ args: args, expr: constructor, params: [], ret: null }), pos: Context.currentPos() });\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n\t#end\n\t\n\t\n}","package lime.utils;\n\n\nimport haxe.io.Path;\nimport lime.app.Event;\nimport lime.app.Future;\nimport lime.app.Promise;\nimport lime.media.AudioBuffer;\nimport lime.graphics.Image;\nimport lime.net.HTTPRequest;\nimport lime.text.Font;\nimport lime.utils.AssetType;\n\n#if flash\nimport flash.display.BitmapData;\nimport flash.media.Sound;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass AssetLibrary {\n\t\n\t\n\tpublic var onChange = new Event<Void->Void> ();\n\t\n\tprivate var assetsLoaded:Int;\n\tprivate var assetsTotal:Int;\n\tprivate var bytesLoaded:Int;\n\tprivate var bytesLoadedCache:Map<String, Int>;\n\tprivate var bytesTotal:Int;\n\tprivate var cachedAudioBuffers = new Map<String, AudioBuffer> ();\n\tprivate var cachedBytes = new Map<String, Bytes> ();\n\tprivate var cachedFonts = new Map<String, Font> ();\n\tprivate var cachedImages = new Map<String, Image> ();\n\tprivate var cachedText = new Map<String, String> ();\n\tprivate var classTypes = new Map<String, Class<Dynamic>> ();\n\tprivate var loaded:Bool;\n\tprivate var pathGroups = new Map<String, Array<String>> ();\n\tprivate var paths = new Map<String, String> ();\n\tprivate var preload = new Map<String, Bool> ();\n\tprivate var promise:Promise<AssetLibrary>;\n\tprivate var sizes = new Map<String, Int> ();\n\tprivate var types = new Map<String, AssetType> ();\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tbytesLoaded = 0;\n\t\tbytesTotal = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function exists (id:String, type:String):Bool {\n\t\t\n\t\tvar requestedType = type != null ? cast (type, AssetType) : null;\n\t\tvar assetType = types.get (id);\n\t\t\n\t\tif (assetType != null) {\n\t\t\t\n\t\t\tif (assetType == requestedType || ((requestedType == SOUND || requestedType == MUSIC) && (assetType == MUSIC || assetType == SOUND))) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#if flash\n\t\t\t\n\t\t\tif (requestedType == BINARY && (assetType == BINARY || assetType == TEXT || assetType == IMAGE)) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t} else if (requestedType == TEXT && assetType == BINARY) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t} else if (requestedType == null || paths.exists (id)) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tif (requestedType == BINARY || requestedType == null || (assetType == BINARY && requestedType == TEXT)) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:Bytes, rootPath:String = null):AssetLibrary {\n\t\t\n\t\treturn fromManifest (AssetManifest.fromBytes (bytes, rootPath));\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String, rootPath:String = null):AssetLibrary {\n\t\t\n\t\treturn fromManifest (AssetManifest.fromFile (path, rootPath));\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromManifest (manifest:AssetManifest):AssetLibrary {\n\t\t\n\t\tif (manifest == null) return null;\n\t\t\n\t\tvar library:AssetLibrary = null;\n\t\t\n\t\tif (manifest.libraryType == null) {\n\t\t\t\n\t\t\tlibrary = new AssetLibrary ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar libraryClass = Type.resolveClass (manifest.libraryType);\n\t\t\t\n\t\t\tif (libraryClass != null) {\n\t\t\t\t\n\t\t\t\tlibrary = Type.createInstance (libraryClass, manifest.libraryArgs);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tLog.warn (\"Could not find library type: \" + manifest.libraryType);\n\t\t\t\treturn null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tlibrary.__fromManifest (manifest);\n\t\t\n\t\treturn library;\n\t\t\n\t}\n\t\n\t\n\tpublic function getAsset (id:String, type:String):Dynamic {\n\t\t\n\t\treturn switch (type) {\n\t\t\t\n\t\t\tcase BINARY: getBytes (id);\n\t\t\tcase FONT: getFont (id);\n\t\t\tcase IMAGE: getImage (id);\n\t\t\tcase MUSIC, SOUND: getAudioBuffer (id);\n\t\t\tcase TEXT: getText (id);\n\t\t\t\n\t\t\tcase TEMPLATE: throw \"Not sure how to get template: \" + id;\n\t\t\tdefault: throw \"Unknown asset type: \" + type;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getAudioBuffer (id:String):AudioBuffer {\n\t\t\n\t\tif (cachedAudioBuffers.exists (id)) {\n\t\t\t\n\t\t\treturn cachedAudioBuffers.get (id);\n\t\t\t\n\t\t} else if (classTypes.exists (id)) {\n\t\t\t\n\t\t\t#if flash\n\t\t\t\n\t\t\tvar buffer = new AudioBuffer ();\n\t\t\tbuffer.src = cast (Type.createInstance (classTypes.get (id), []), Sound);\n\t\t\treturn buffer;\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\treturn AudioBuffer.fromBytes (cast (Type.createInstance (classTypes.get (id), []), Bytes));\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn AudioBuffer.fromFile (paths.get (id));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getBytes (id:String):Bytes {\n\t\t\n\t\tif (cachedBytes.exists (id)) {\n\t\t\t\n\t\t\treturn cachedBytes.get (id);\n\t\t\t\n\t\t} else if (cachedText.exists (id)) {\n\t\t\t\n\t\t\tvar bytes = Bytes.ofString (cachedText.get (id));\n\t\t\tcachedBytes.set (id, bytes);\n\t\t\treturn bytes;\n\t\t\t\n\t\t} else if (classTypes.exists (id)) {\n\t\t\t\n\t\t\t#if flash\n\t\t\t\n\t\t\tvar data = Type.createInstance (classTypes.get (id), []);\n\t\t\t\n\t\t\tswitch (types.get (id)) {\n\t\t\t\t\n\t\t\t\tcase TEXT, BINARY:\n\t\t\t\t\t\n\t\t\t\t\treturn Bytes.ofData (cast (Type.createInstance (classTypes.get (id), []), flash.utils.ByteArray));\n\t\t\t\t\n\t\t\t\tcase IMAGE:\n\t\t\t\t\t\n\t\t\t\t\tvar bitmapData = cast (Type.createInstance (classTypes.get (id), []), BitmapData);\n\t\t\t\t\treturn Bytes.ofData (bitmapData.getPixels (bitmapData.rect));\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\treturn null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\treturn cast (Type.createInstance (classTypes.get (id), []), Bytes);\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn Bytes.fromFile (paths.get (id));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getFont (id:String):Font {\n\t\t\n\t\tif (cachedFonts.exists (id)) {\n\t\t\t\n\t\t\treturn cachedFonts.get (id);\n\t\t\t\n\t\t} else if (classTypes.exists (id)) {\n\t\t\t\n\t\t\t#if flash\n\t\t\t\n\t\t\tvar src = Type.createInstance (classTypes.get (id), []);\n\t\t\t\n\t\t\tvar font = new Font (src.fontName);\n\t\t\tfont.src = src;\n\t\t\treturn font;\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\treturn cast (Type.createInstance (classTypes.get (id), []), Font);\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn Font.fromFile (paths.get (id));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getImage (id:String):Image {\n\t\t\n\t\tif (cachedImages.exists (id)) {\n\t\t\t\n\t\t\treturn cachedImages.get (id);\n\t\t\t\n\t\t} else if (classTypes.exists (id)) {\n\t\t\t\n\t\t\t#if flash\n\t\t\t\n\t\t\treturn Image.fromBitmapData (cast (Type.createInstance (classTypes.get (id), []), BitmapData));\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\treturn cast (Type.createInstance (classTypes.get (id), []), Image);\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn Image.fromFile (paths.get (id));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getPath (id:String):String {\n\t\t\n\t\treturn paths.get (id);\n\t\t\n\t}\n\t\n\t\n\tpublic function getText (id:String):String {\n\t\t\n\t\tif (cachedText.exists (id)) {\n\t\t\t\n\t\t\treturn cachedText.get (id);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar bytes = getBytes (id);\n\t\t\t\n\t\t\tif (bytes == null) {\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn bytes.getString (0, bytes.length);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function isLocal (id:String, type:String):Bool {\n\t\t\n\t\t#if sys\n\t\t\n\t\treturn true;\n\t\t\n\t\t#else\n\t\t\n\t\tif (classTypes.exists (id)) {\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar requestedType = type != null ? cast (type, AssetType) : null;\n\t\t\n\t\treturn switch (requestedType) {\n\t\t\t\n\t\t\tcase IMAGE:\n\t\t\t\t\n\t\t\t\tcachedImages.exists (id);\n\t\t\t\n\t\t\tcase MUSIC, SOUND:\n\t\t\t\t\n\t\t\t\tcachedAudioBuffers.exists (id);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tcachedBytes.exists (id) || cachedText.exists (id);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function list (type:String):Array<String> {\n\t\t\n\t\tvar requestedType = type != null ? cast (type, AssetType) : null;\n\t\tvar items = [];\n\t\t\n\t\tfor (id in types.keys ()) {\n\t\t\t\n\t\t\tif (requestedType == null || exists (id, type)) {\n\t\t\t\t\n\t\t\t\titems.push (id);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn items;\n\t\t\n\t}\n\t\n\t\n\tpublic function loadAsset (id:String, type:String):Future<Dynamic> {\n\t\t\n\t\treturn switch (type) {\n\t\t\t\n\t\t\tcase BINARY: loadBytes (id);\n\t\t\tcase FONT: loadFont (id);\n\t\t\tcase IMAGE: loadImage (id);\n\t\t\tcase MUSIC, SOUND: loadAudioBuffer (id);\n\t\t\tcase TEXT: loadText (id);\n\t\t\t\n\t\t\tcase TEMPLATE: throw \"Not sure how to load template: \" + id;\n\t\t\tdefault: throw \"Unknown asset type: \" + type;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function load ():Future<AssetLibrary> {\n\t\t\n\t\tif (loaded) {\n\t\t\t\n\t\t\treturn Future.withValue (this);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (promise == null) {\n\t\t\t\n\t\t\tpromise = new Promise<AssetLibrary> ();\n\t\t\tbytesLoadedCache = new Map ();\n\t\t\t\n\t\t\tassetsLoaded = 0;\n\t\t\tassetsTotal = 1;\n\t\t\t\n\t\t\tfor (id in preload.keys ()) {\n\t\t\t\t\n\t\t\t\tif (!preload.get (id)) continue;\n\t\t\t\t\n\t\t\t\tLog.verbose (\"Preloading asset: \" + id + \" [\" + types.get (id) + \"]\");\n\t\t\t\t\n\t\t\t\tswitch (types.get (id)) {\n\t\t\t\t\t\n\t\t\t\t\tcase BINARY:\n\t\t\t\t\t\t\n\t\t\t\t\t\tassetsTotal++;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar future = loadBytes (id);\n\t\t\t\t\t\tfuture.onProgress (load_onProgress.bind (id));\n\t\t\t\t\t\tfuture.onError (load_onError.bind (id));\n\t\t\t\t\t\tfuture.onComplete (loadBytes_onComplete.bind (id));\n\t\t\t\t\t\n\t\t\t\t\tcase FONT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tassetsTotal++;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar future = loadFont (id);\n\t\t\t\t\t\tfuture.onProgress (load_onProgress.bind (id));\n\t\t\t\t\t\tfuture.onError (load_onError.bind (id));\n\t\t\t\t\t\tfuture.onComplete (loadFont_onComplete.bind (id));\n\t\t\t\t\t\n\t\t\t\t\tcase IMAGE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tassetsTotal++;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar future = loadImage (id);\n\t\t\t\t\t\tfuture.onProgress (load_onProgress.bind (id));\n\t\t\t\t\t\tfuture.onError (load_onError.bind (id));\n\t\t\t\t\t\tfuture.onComplete (loadImage_onComplete.bind (id));\n\t\t\t\t\t\n\t\t\t\t\tcase MUSIC, SOUND:\n\t\t\t\t\t\t\n\t\t\t\t\t\tassetsTotal++;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar future = loadAudioBuffer (id);\n\t\t\t\t\t\tfuture.onProgress (load_onProgress.bind (id));\n\t\t\t\t\t\tfuture.onError (load_onError.bind (id));\n\t\t\t\t\t\tfuture.onComplete (loadAudioBuffer_onComplete.bind (id));\n\t\t\t\t\t\n\t\t\t\t\tcase TEXT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tassetsTotal++;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar future = loadText (id);\n\t\t\t\t\t\tfuture.onProgress (load_onProgress.bind (id));\n\t\t\t\t\t\tfuture.onError (load_onError.bind (id));\n\t\t\t\t\t\tfuture.onComplete (loadText_onComplete.bind (id));\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__assetLoaded (null);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic function loadAudioBuffer (id:String):Future<AudioBuffer> {\n\t\t\n\t\tif (cachedAudioBuffers.exists (id)) {\n\t\t\t\n\t\t\treturn Future.withValue (cachedAudioBuffers.get (id));\n\t\t\t\n\t\t} else if (classTypes.exists (id)) {\n\t\t\t\n\t\t\treturn Future.withValue (Type.createInstance (classTypes.get (id), []));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (pathGroups.exists (id)) {\n\t\t\t\t\n\t\t\t\treturn AudioBuffer.loadFromFiles (pathGroups.get (id));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn AudioBuffer.loadFromFile (paths.get (id));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function loadBytes (id:String):Future<Bytes> {\n\t\t\n\t\tif (cachedBytes.exists (id)) {\n\t\t\t\n\t\t\treturn Future.withValue (cachedBytes.get (id));\n\t\t\t\n\t\t} else if (classTypes.exists (id)) {\n\t\t\t\n\t\t\t#if flash\n\t\t\treturn Future.withValue (Bytes.ofData (Type.createInstance (classTypes.get (id), [])));\n\t\t\t#else\n\t\t\treturn Future.withValue (Type.createInstance (classTypes.get (id), []));\n\t\t\t#end\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn Bytes.loadFromFile (paths.get (id));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function loadFont (id:String):Future<Font> {\n\t\t\n\t\tif (cachedFonts.exists (id)) {\n\t\t\t\n\t\t\treturn Future.withValue (cachedFonts.get (id));\n\t\t\t\n\t\t} else if (classTypes.exists (id)) {\n\t\t\t\n\t\t\tvar font:Font = Type.createInstance (classTypes.get (id), []);\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\treturn Font.loadFromName (font.name);\n\t\t\t#else\n\t\t\treturn Future.withValue (font);\n\t\t\t#end\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\treturn Font.loadFromName (paths.get (id));\n\t\t\t#else\n\t\t\treturn Font.loadFromFile (paths.get (id));\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromBytes (bytes:Bytes, rootPath:String = null):Future<AssetLibrary> {\n\t\t\n\t\treturn AssetManifest.loadFromBytes (bytes, rootPath).then (function (manifest) {\n\t\t\t\n\t\t\treturn loadFromManifest (manifest);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromFile (path:String, rootPath:String = null):Future<AssetLibrary> {\n\t\t\n\t\treturn AssetManifest.loadFromFile (path, rootPath).then (function (manifest) {\n\t\t\t\n\t\t\treturn loadFromManifest (manifest);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromManifest (manifest:AssetManifest):Future<AssetLibrary> {\n\t\t\n\t\tvar library = fromManifest (manifest);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\treturn library.load ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn cast Future.withError (\"Could not load asset manifest\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function loadImage (id:String):Future<Image> {\n\t\t\n\t\tif (cachedImages.exists (id)) {\n\t\t\t\n\t\t\treturn Future.withValue (cachedImages.get (id));\n\t\t\t\n\t\t} else if (classTypes.exists (id)) {\n\t\t\t\n\t\t\treturn Future.withValue (Type.createInstance (classTypes.get (id), []));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn Image.loadFromFile (paths.get (id));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function loadText (id:String):Future<String> {\n\t\t\n\t\tif (cachedText.exists (id)) {\n\t\t\t\n\t\t\treturn Future.withValue (cachedText.get (id));\n\t\t\t\n\t\t} else if (cachedBytes.exists (id) || classTypes.exists (id)) {\n\t\t\t\n\t\t\tvar bytes = getBytes (id);\n\t\t\t\n\t\t\tif (bytes == null) {\n\t\t\t\t\n\t\t\t\treturn cast Future.withValue (null);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar text = bytes.getString (0, bytes.length);\n\t\t\t\tcachedText.set (id, text);\n\t\t\t\treturn Future.withValue (text);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar request = new HTTPRequest<String> ();\n\t\t\treturn request.load (paths.get (id));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function unload ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function __assetLoaded (id:String):Void {\n\t\t\n\t\tassetsLoaded++;\n\t\t\n\t\tif (id != null) {\n\t\t\t\n\t\t\tLog.verbose (\"Loaded asset: \" + id + \" [\" + types.get (id) + \"] (\" + (assetsLoaded - 1) + \"/\" + (assetsTotal - 1) + \")\");\n\t\t\t\n\t\t}\n\t\t\n\t\tif (id != null) {\n\t\t\t\n\t\t\tvar size = sizes.get (id);\n\t\t\t\n\t\t\tif (!bytesLoadedCache.exists (id)) {\n\t\t\t\t\n\t\t\t\tbytesLoaded += size;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar cache = bytesLoadedCache.get (id);\n\t\t\t\t\n\t\t\t\tif (cache < size) {\n\t\t\t\t\t\n\t\t\t\t\tbytesLoaded += (size - cache);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbytesLoadedCache.set (id, size);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (assetsLoaded < assetsTotal) {\n\t\t\t\n\t\t\tpromise.progress (bytesLoaded, bytesTotal);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tloaded = true;\n\t\t\tpromise.progress (bytesTotal, bytesTotal);\n\t\t\tpromise.complete (this);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __cacheBreak (path:String):String {\n\t\t\n\t\t#if web\n\t\tif (path.indexOf (\"?\") > -1) {\n\t\t\t\n\t\t\tpath += \"&\" + Assets.cache.version;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpath += \"?\" + Assets.cache.version;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn path;\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromManifest (manifest:AssetManifest):Void {\n\t\t\n\t\tvar hasSize = (manifest.version >= 2);\n\t\tvar size, id, pathGroup:Array<String>, classRef;\n\t\t\n\t\tvar basePath = manifest.rootPath;\n\t\tif (basePath == null) basePath = \"\";\n\t\tif (basePath != \"\") basePath += \"/\";\n\t\t\n\t\tfor (asset in manifest.assets) {\n\t\t\t\n\t\t\tsize = hasSize ? asset.size : 100;\n\t\t\tid = asset.id;\n\t\t\t\n\t\t\tif (Reflect.hasField (asset, \"path\")) {\n\t\t\t\t\n\t\t\t\tpaths.set (id, __cacheBreak (basePath + Reflect.field (asset, \"path\")));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (Reflect.hasField (asset, \"pathGroup\")) {\n\t\t\t\t\n\t\t\t\tpathGroup = Reflect.field (asset, \"pathGroup\");\n\t\t\t\t\n\t\t\t\tfor (i in 0...pathGroup.length) {\n\t\t\t\t\t\n\t\t\t\t\tpathGroup[i] = __cacheBreak (basePath + pathGroup[i]);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpathGroups.set (id, pathGroup);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsizes.set (id, size);\n\t\t\ttypes.set (id, asset.type);\n\t\t\t\n\t\t\tif (Reflect.hasField (asset, \"preload\")) {\n\t\t\t\t\n\t\t\t\tpreload.set (id, Reflect.field (asset, \"preload\"));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (Reflect.hasField (asset, \"className\")) {\n\t\t\t\t\n\t\t\t\tclassRef = Type.resolveClass (Reflect.field (asset, \"className\"));\n\t\t\t\t\n\t\t\t\t#if (js && html5 && modular)\n\t\t\t\tif (classRef == null) {\n\t\t\t\t\t\n\t\t\t\t\tclassRef = untyped $hx_exports[asset.className];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tclassTypes.set (id, classRef);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tbytesTotal = 0;\n\t\t\n\t\tfor (asset in manifest.assets) {\n\t\t\t\n\t\t\tid = asset.id;\n\t\t\t\n\t\t\tif (preload.exists (id) && preload.get (id)) {\n\t\t\t\t\n\t\t\t\tbytesTotal += sizes.get (id);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function loadAudioBuffer_onComplete (id:String, audioBuffer:AudioBuffer):Void {\n\t\t\n\t\tcachedAudioBuffers.set (id, audioBuffer);\n\t\t\n\t\tif (pathGroups.exists (id)) {\n\t\t\t\n\t\t\tvar pathGroup = pathGroups.get (id);\n\t\t\t\n\t\t\tfor (otherID in pathGroups.keys ()) {\n\t\t\t\t\n\t\t\t\tif (otherID == id) continue;\n\t\t\t\t\n\t\t\t\tfor (path in pathGroup) {\n\t\t\t\t\t\n\t\t\t\t\tif (pathGroups.get (otherID).indexOf (path) > -1) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcachedAudioBuffers.set (otherID, audioBuffer);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__assetLoaded (id);\n\t\t\n\t}\n\t\n\t\n\tprivate function loadBytes_onComplete (id:String, bytes:Bytes):Void {\n\t\t\n\t\tcachedBytes.set (id, bytes);\n\t\t__assetLoaded (id);\n\t\t\n\t}\n\t\n\t\n\tprivate function loadFont_onComplete (id:String, font:Font):Void {\n\t\t\n\t\tcachedFonts.set (id, font);\n\t\t__assetLoaded (id);\n\t\t\n\t}\n\t\n\t\n\tprivate function loadImage_onComplete (id:String, image:Image):Void {\n\t\t\n\t\tcachedImages.set (id, image);\n\t\t__assetLoaded (id);\n\t\t\n\t}\n\t\n\t\n\tprivate function loadText_onComplete (id:String, text:String):Void {\n\t\t\n\t\tcachedText.set (id, text);\n\t\t__assetLoaded (id);\n\t\t\n\t}\n\t\n\t\n\tprivate function load_onError (id:String, message:Dynamic):Void {\n\t\t\n\t\tif (message != null && message != \"\") {\n\t\t\t\n\t\t\tpromise.error (\"Error loading asset \\\"\" + id + \"\\\": \" + Std.string (message));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.error (\"Error loading asset \\\"\" + id + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function load_onProgress (id:String, bytesLoaded:Int, bytesTotal:Int):Void {\n\t\t\n\t\tif (bytesLoaded > 0) {\n\t\t\t\n\t\t\tvar size = sizes.get (id);\n\t\t\tvar percent;\n\t\t\t\n\t\t\tif (bytesTotal > 0) {\n\t\t\t\t\n\t\t\t\t// Use a ratio in case the real bytesTotal is different than our precomputed total\n\t\t\t\t\n\t\t\t\tpercent = (bytesLoaded / bytesTotal);\n\t\t\t\tif (percent > 1) percent = 1;\n\t\t\t\tbytesLoaded = Math.floor (percent * size);\n\t\t\t\t\n\t\t\t} else if (bytesLoaded > size) {\n\t\t\t\t\n\t\t\t\tbytesLoaded = size;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (bytesLoadedCache.exists (id)) {\n\t\t\t\t\n\t\t\t\tvar cache = bytesLoadedCache.get (id);\n\t\t\t\t\n\t\t\t\tif (bytesLoaded != cache) {\n\t\t\t\t\t\n\t\t\t\t\tthis.bytesLoaded += (bytesLoaded - cache);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.bytesLoaded += bytesLoaded;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbytesLoadedCache.set (id, bytesLoaded);\n\t\t\tpromise.progress (this.bytesLoaded, this.bytesTotal);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package lime.utils;\n\n\nimport haxe.io.Path;\nimport haxe.Serializer;\nimport haxe.Unserializer;\nimport lime.app.Future;\nimport lime.utils.Bytes;\n\n#if !macro\nimport haxe.Json;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass AssetManifest {\n\t\n\t\n\tpublic var assets:Array<Dynamic>;\n\tpublic var libraryArgs:Array<String>;\n\tpublic var libraryType:String;\n\tpublic var name:String;\n\tpublic var rootPath:String;\n\tpublic var version:Int;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tassets = [];\n\t\tlibraryArgs = [];\n\t\tversion = 2;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:Bytes, rootPath:String = null):AssetManifest {\n\t\t\n\t\tif (bytes != null) {\n\t\t\t\n\t\t\treturn parse (bytes.getString (0, bytes.length), rootPath);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String, rootPath:String = null):AssetManifest {\n\t\t\n\t\tpath = __resolvePath (path);\n\t\trootPath = __resolveRootPath (rootPath, path);\n\t\t\n\t\tif (path == null) return null;\n\t\t\n\t\treturn fromBytes (Bytes.fromFile (path), rootPath);\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromBytes (bytes:Bytes, rootPath:String = null):Future<AssetManifest> {\n\t\t\n\t\treturn Future.withValue (fromBytes (bytes, rootPath));\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromFile (path:String, rootPath:String = null):Future<AssetManifest> {\n\t\t\n\t\tpath = __resolvePath (path);\n\t\trootPath = __resolveRootPath (rootPath, path);\n\t\t\n\t\tif (path == null) return null;\n\t\t\n\t\treturn Bytes.loadFromFile (path).then (function (bytes) {\n\t\t\t\n\t\t\treturn Future.withValue (fromBytes (bytes, rootPath));\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic static function parse (data:String, rootPath:String = null):AssetManifest {\n\t\t\n\t\tif (data == null || data == \"\") return null;\n\t\t\n\t\t#if !macro\n\t\t\n\t\tvar manifestData = Json.parse (data);\n\t\tvar manifest = new AssetManifest ();\n\t\t\n\t\tmanifest.name = manifestData.name;\n\t\tmanifest.libraryType = manifestData.libraryType;\n\t\tmanifest.libraryArgs = manifestData.libraryArgs;\n\t\tmanifest.assets = Unserializer.run (manifestData.assets);\n\t\t\n\t\tif (rootPath != null) {\n\t\t\t\n\t\t\tmanifest.rootPath = rootPath;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn manifest;\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function serialize ():String {\n\t\t\n\t\t#if !macro\n\t\t\n\t\tvar manifestData:Dynamic = {};\n\t\tmanifestData.version = version;\n\t\tmanifestData.libraryType = libraryType;\n\t\tmanifestData.libraryArgs = libraryArgs;\n\t\tmanifestData.name = name;\n\t\tmanifestData.assets = Serializer.run (assets);\n\t\t\n\t\treturn Json.stringify (manifestData);\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function __resolvePath (path:String):String {\n\t\t\n\t\tif (path == null) return null;\n\t\t\n\t\tvar queryIndex = path.indexOf (\"?\");\n\t\tvar basePath;\n\t\t\n\t\tif (queryIndex > -1) {\n\t\t\t\n\t\t\tbasePath = path.substr (0, queryIndex);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tbasePath = path;\n\t\t\t\n\t\t}\n\t\t\n\t\tStringTools.replace (basePath, \"\\\\\", \"/\");\n\t\t\n\t\twhile (StringTools.endsWith (basePath, \"/\")) {\n\t\t\t\n\t\t\tbasePath = basePath.substr (0, basePath.length - 1);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (StringTools.endsWith (basePath, \".bundle\")) {\n\t\t\t\n\t\t\tif (queryIndex > -1) {\n\t\t\t\t\n\t\t\t\treturn basePath + \"/library.json\" + path.substr (queryIndex);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn basePath + \"/library.json\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn path;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __resolveRootPath (rootPath:String, path:String):String {\n\t\t\n\t\tif (rootPath != null) return rootPath;\n\t\t\n\t\tvar queryIndex = path.indexOf (\"?\");\n\t\t\n\t\tif (queryIndex > -1) {\n\t\t\t\n\t\t\trootPath = path.substr (0, queryIndex);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\trootPath = path;\n\t\t\t\n\t\t}\n\t\t\n\t\tStringTools.replace (rootPath, \"\\\\\", \"/\");\n\t\t\n\t\twhile (StringTools.endsWith (rootPath, \"/\")) {\n\t\t\t\n\t\t\tif (rootPath == \"/\") return rootPath;\n\t\t\trootPath = rootPath.substr (0, rootPath.length - 1);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (StringTools.endsWith (rootPath, \".bundle\")) {\n\t\t\t\n\t\t\treturn rootPath;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn Path.directory (rootPath);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn rootPath;\n\t\t\n\t}\n\t\n\t\n}","package lime.utils;\n\n\nimport haxe.io.Path;\nimport haxe.CallStack;\nimport haxe.Unserializer;\nimport lime.app.Application;\nimport lime.app.Event;\nimport lime.app.Promise;\nimport lime.app.Future;\nimport lime.media.AudioBuffer;\nimport lime.graphics.Image;\nimport lime.text.Font;\nimport lime.utils.Bytes;\nimport lime.utils.Log;\n\n#if !macro\nimport haxe.Json;\n#end\n\n\n/**\n * <p>The Assets class provides a cross-platform interface to access \n * embedded images, fonts, sounds and other resource files.</p>\n * \n * <p>The contents are populated automatically when an application\n * is compiled using the Lime command-line tools, based on the\n * contents of the project file.</p>\n * \n * <p>For most platforms, the assets are included in the same directory\n * or package as the application, and the paths are handled\n * automatically. For web content, the assets are preloaded before\n * the start of the rest of the application.</p>\n */\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime.utils.AssetLibrary)\n\n\nclass Assets {\n\t\n\t\n\tpublic static var cache:AssetCache = new AssetCache ();\n\tpublic static var onChange = new Event<Void->Void> ();\n\t\n\tprivate static var defaultRootPath:String;\n\tprivate static var libraries (default, null) = new Map<String, AssetLibrary> ();\n\tprivate static var libraryPaths = new Map<String, String> ();\n\t\n\t\n\tpublic static function exists (id:String, type:AssetType = null):Bool {\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (type == null) {\n\t\t\t\n\t\t\ttype = BINARY;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar symbol = new LibrarySymbol (id);\n\t\t\n\t\tif (symbol.library != null) {\n\t\t\t\n\t\t\treturn symbol.exists (type);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets an instance of a cached or embedded asset\n\t * @usage\t\tvar sound = Assets.getAsset(\"sound.wav\", SOUND);\n\t * @param\tid\t\tThe ID or asset path for the asset\n\t * @return\t\tAn Asset object, or null.\n\t */\n\tpublic static function getAsset (id:String, type:AssetType, useCache:Bool):Dynamic {\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase BINARY, TEXT: // Not cached\n\t\t\t\t\t\n\t\t\t\t\tuseCache = false;\n\t\t\t\t\n\t\t\t\tcase FONT:\n\t\t\t\t\t\n\t\t\t\t\tvar font = cache.font.get (id);\n\t\t\t\t\t\n\t\t\t\t\tif (font != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn font;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase IMAGE:\n\t\t\t\t\t\n\t\t\t\t\tvar image = cache.image.get (id);\n\t\t\t\t\t\n\t\t\t\t\tif (isValidImage (image)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn image;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase MUSIC, SOUND:\n\t\t\t\t\t\n\t\t\t\t\tvar audio = cache.audio.get (id);\n\t\t\t\t\t\n\t\t\t\t\tif (isValidAudio (audio)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn audio;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase TEMPLATE:\n\t\t\t\t\t\n\t\t\t\t\tthrow \"Not sure how to get template: \" + id;\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\treturn null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar symbol = new LibrarySymbol (id);\n\t\t\n\t\tif (symbol.library != null) {\n\t\t\t\n\t\t\tif (symbol.exists (type)) {\n\t\t\t\t\n\t\t\t\tif (symbol.isLocal (type)) {\n\t\t\t\t\t\n\t\t\t\t\tvar asset = symbol.library.getAsset (symbol.symbolName, type);\n\t\t\t\t\t\n\t\t\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcache.set (id, type, asset);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn asset;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tLog.error (type + \" asset \\\"\" + id + \"\\\" exists, but only asynchronously\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tLog.error (\"There is no \" + type + \" asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tLog.error (__libraryNotFound (symbol.libraryName));\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets an instance of an embedded sound\n\t * @usage\t\tvar sound = Assets.getSound(\"sound.wav\");\n\t * @param\tid\t\tThe ID or asset path for the sound\n\t * @return\t\tA new Sound object\n\t */\n\tpublic static function getAudioBuffer (id:String, useCache:Bool = true):AudioBuffer {\n\t\t\n\t\treturn cast getAsset (id, SOUND, useCache);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets an instance of an embedded binary asset\n\t * @usage\t\tvar bytes = Assets.getBytes(\"file.zip\");\n\t * @param\tid\t\tThe ID or asset path for the file\n\t * @return\t\tA new Bytes object\n\t */\n\tpublic static function getBytes (id:String):Bytes {\n\t\t\n\t\treturn cast getAsset (id, BINARY, false);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets an instance of an embedded font\n\t * @usage\t\tvar fontName = Assets.getFont(\"font.ttf\").fontName;\n\t * @param\tid\t\tThe ID or asset path for the font\n\t * @return\t\tA new Font object\n\t */\n\tpublic static function getFont (id:String, useCache:Bool = true):Font {\n\t\t\n\t\treturn getAsset (id, FONT, useCache);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets an instance of an embedded bitmap\n\t * @usage\t\tvar bitmap = new Bitmap(Assets.getBitmapData(\"image.jpg\"));\n\t * @param\tid\t\tThe ID or asset path for the bitmap\n\t * @param\tuseCache\t\t(Optional) Whether to use BitmapData from the cache(Default: true)\n\t * @return\t\tA new BitmapData object\n\t */\n\tpublic static function getImage (id:String, useCache:Bool = true):Image {\n\t\t\n\t\treturn getAsset (id, IMAGE, useCache);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getLibrary (name:String):AssetLibrary {\n\t\t\n\t\tif (name == null || name == \"\") {\n\t\t\t\n\t\t\tname = \"default\";\n\t\t\t\n\t\t}\n\t\t\n\t\treturn libraries.get (name);\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets the file path (if available) for an asset\n\t * @usage\t\tvar path = Assets.getPath(\"image.jpg\");\n\t * @param\tid\t\tThe ID or asset path for the asset\n\t * @return\t\tThe path to the asset (or null)\n\t */\n\tpublic static function getPath (id:String):String {\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar symbol = new LibrarySymbol (id);\n\t\t\n\t\tif (symbol.library != null) {\n\t\t\t\n\t\t\tif (symbol.exists ()) {\n\t\t\t\t\n\t\t\t\treturn symbol.library.getPath (symbol.symbolName);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tLog.error (\"There is no asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tLog.error (__libraryNotFound (symbol.libraryName));\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Gets an instance of an embedded text asset\n\t * @usage\t\tvar text = Assets.getText(\"text.txt\");\n\t * @param\tid\t\tThe ID or asset path for the file\n\t * @return\t\tA new String object\n\t */\n\tpublic static function getText (id:String):String {\n\t\t\n\t\treturn getAsset (id, TEXT, false);\n\t\t\n\t}\n\t\n\t\n\tpublic static function hasLibrary (name:String):Bool {\n\t\t\n\t\tif (name == null || name == \"\") {\n\t\t\t\n\t\t\tname = \"default\";\n\t\t\t\n\t\t}\n\t\t\n\t\treturn libraries.exists (name);\n\t\t\n\t}\n\t\n\t\n\tpublic static function isLocal (id:String, type:AssetType = null, useCache:Bool = true):Bool {\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled) {\n\t\t\t\n\t\t\tif (cache.exists(id, type)) return true;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar symbol = new LibrarySymbol (id);\n\t\treturn symbol.library != null && symbol.isLocal (type);\n\t\t\n\t\t#else\n\t\t\n\t\treturn false;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function isValidAudio (buffer:AudioBuffer):Bool {\n\t\t\n\t\t// TODO: Check disposed\n\t\t\n\t\treturn buffer != null;\n\t\t\n\t}\n\t\n\t\n\tprivate static function isValidImage (image:Image):Bool {\n\t\t\n\t\t// TODO: Check disposed\n\t\t\n\t\treturn (image != null && image.buffer != null);\n\t\t\n\t}\n\t\n\t\n\tpublic static function list (type:AssetType = null):Array<String> {\n\t\t\n\t\tvar items = [];\n\t\t\n\t\tfor (library in libraries) {\n\t\t\t\n\t\t\tvar libraryItems = library.list (type);\n\t\t\t\n\t\t\tif (libraryItems != null) {\n\t\t\t\t\n\t\t\t\titems = items.concat (libraryItems);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn items;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadAsset (id:String, type:AssetType, useCache:Bool):Future<Dynamic> {\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase BINARY, TEXT: // Not cached\n\t\t\t\t\t\n\t\t\t\t\tuseCache = false;\n\t\t\t\t\n\t\t\t\tcase FONT:\n\t\t\t\t\t\n\t\t\t\t\tvar font = cache.font.get (id);\n\t\t\t\t\t\n\t\t\t\t\tif (font != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn Future.withValue (font);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase IMAGE:\n\t\t\t\t\t\n\t\t\t\t\tvar image = cache.image.get (id);\n\t\t\t\t\t\n\t\t\t\t\tif (isValidImage (image)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn Future.withValue (image);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase MUSIC, SOUND:\n\t\t\t\t\t\n\t\t\t\t\tvar audio = cache.audio.get (id);\n\t\t\t\t\t\n\t\t\t\t\tif (isValidAudio (audio)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn Future.withValue (audio);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase TEMPLATE:\n\t\t\t\t\t\n\t\t\t\t\tthrow \"Not sure how to get template: \" + id;\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\treturn null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar symbol = new LibrarySymbol (id);\n\t\t\n\t\tif (symbol.library != null) {\n\t\t\t\n\t\t\tif (symbol.exists (type)) {\n\t\t\t\t\n\t\t\t\tvar future = symbol.library.loadAsset (symbol.symbolName, type);\n\t\t\t\t\n\t\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\t\n\t\t\t\t\tfuture.onComplete (function (asset) cache.set (id, type, asset));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn future;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn Future.withError (\"There is no \" + type + \" asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn Future.withError (__libraryNotFound (symbol.libraryName));\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadAudioBuffer (id:String, useCache:Bool = true):Future<AudioBuffer> {\n\t\t\n\t\treturn cast loadAsset (id, SOUND, useCache);\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadBytes (id:String):Future<Bytes> {\n\t\t\n\t\treturn cast loadAsset (id, BINARY, false);\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFont (id:String, useCache:Bool = true):Future<Font> {\n\t\t\n\t\treturn cast loadAsset (id, FONT, useCache);\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadImage (id:String, useCache:Bool = true):Future<Image> {\n\t\t\n\t\treturn cast loadAsset (id, IMAGE, useCache);\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadLibrary (id:String):Future<AssetLibrary> {\n\t\t\n\t\tvar promise = new Promise<AssetLibrary> ();\n\t\t\n\t\t#if (tools && !display && !macro)\n\t\t\n\t\tvar library = getLibrary (id);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\treturn library.load ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar path = id;\n\t\tvar rootPath = null;\n\t\t\n\t\tif (libraryPaths.exists (id)) {\n\t\t\t\n\t\t\tpath = libraryPaths[id];\n\t\t\trootPath = defaultRootPath;\n\t\t\t\n\t\t} else if (StringTools.endsWith (path, \".bundle\")) {\n\t\t\t\n\t\t\tpath += \"/library.json\";\n\t\t\t\n\t\t}\n\t\t\n\t\tAssetManifest.loadFromFile (path, rootPath).onComplete (function (manifest) {\n\t\t\t\n\t\t\tif (manifest == null) {\n\t\t\t\t\n\t\t\t\tpromise.error (\"Cannot parse asset manifest for library \\\"\" + id + \"\\\"\");\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar library = AssetLibrary.fromManifest (manifest);\n\t\t\t\n\t\t\tif (library == null) {\n\t\t\t\t\n\t\t\t\tpromise.error (\"Cannot open library \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tlibraries.set (id, library);\n\t\t\t\tlibrary.onChange.add (onChange.dispatch);\n\t\t\t\tpromise.completeWith (library.load ());\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}).onError (function (_) {\n\t\t\t\n\t\t\tpromise.error (\"There is no asset library with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\n\t\t});\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadText (id:String):Future<String> {\n\t\t\n\t\treturn cast loadAsset (id, TEXT, false);\n\t\t\n\t}\n\t\n\t\n\tpublic static function registerLibrary (name:String, library:AssetLibrary):Void {\n\t\t\n\t\tif (libraries.exists (name)) {\n\t\t\t\n\t\t\tif (libraries.get (name) == library) {\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tunloadLibrary (name);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tlibrary.onChange.add (library_onChange);\n\t\t\t\n\t\t}\n\t\t\n\t\tlibraries.set (name, library);\n\t\t\n\t}\n\t\n\t\n\tpublic static function unloadLibrary (name:String):Void {\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar library = libraries.get (name);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\tcache.clear (name + \":\");\n\t\t\tlibrary.onChange.remove (library_onChange);\n\t\t\tlibrary.unload ();\n\t\t\t\n\t\t}\n\t\t\n\t\tlibraries.remove (name);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function __libraryNotFound (name:String):String {\n\t\t\n\t\tif (name == null || name == \"\") {\n\t\t\t\n\t\t\tname = \"default\";\n\t\t\t\n\t\t}\n\t\t\n\t\tif (Application.current != null && Application.current.preloader != null && !Application.current.preloader.complete) {\n\t\t\t\n\t\t\treturn \"There is no asset library named \\\"\" + name + \"\\\", or it is not yet preloaded\";\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn \"There is no asset library named \\\"\" + name + \"\\\"\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate static function library_onChange ():Void {\n\t\t\n\t\tcache.clear ();\n\t\tonChange.dispatch ();\n\t\t\n\t}\n\t\n\t\n}\n\n\nprivate class LibrarySymbol {\n\t\n\t\n\tpublic var library (default, null):AssetLibrary;\n\tpublic var libraryName (default, null):String;\n\tpublic var symbolName (default, null):String;\n\t\n\t\n\tpublic inline function new (id:String) {\n\t\t\n\t\tvar colonIndex = id.indexOf (\":\");\n\t\tlibraryName = id.substring (0, colonIndex);\n\t\tsymbolName = id.substring (colonIndex + 1);\n\t\tlibrary = Assets.getLibrary (libraryName);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isLocal (?type) return library.isLocal (symbolName, type);\n\tpublic inline function exists  (?type) return library.exists  (symbolName, type);\n\t\n}","package lime.utils;\n\n#if (js && !display)\n\n    @:forward\n    abstract UInt8ClampedArray(js.html.Uint8ClampedArray)\n        from js.html.Uint8ClampedArray\n        to js.html.Uint8ClampedArray {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 1;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Int>, #end\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n            if(elements != null) {\n                this = new js.html.Uint8ClampedArray( elements );\n            } else if(array != null) {\n                this = new js.html.Uint8ClampedArray( untyped array );\n            #if openfl } else if(vector != null) { this = new js.html.Uint8ClampedArray( untyped untyped (vector).__array ); #end\n            } else if(view != null) {\n                this = new js.html.Uint8ClampedArray( untyped view );\n            } else if(buffer != null) {\n                if (len == null) {\n                    this = new js.html.Uint8ClampedArray( buffer, byteoffset );\n                } else {\n                    this = new js.html.Uint8ClampedArray( buffer, byteoffset, len );\n                }\n            } else {\n                this = null;\n            }\n        }\n\n        @:arrayAccess @:extern inline function __set(idx:Int, val:UInt) : UInt return this[idx] = _clamp(val);\n        @:arrayAccess @:extern inline function __get(idx:Int) : UInt return this[idx];\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt8ClampedArray {\n            if(byteOffset == null) return new js.html.Uint8ClampedArray(cast bytes.getData());\n            if(len == null) return new js.html.Uint8ClampedArray(cast bytes.getData(), byteOffset);\n            return new js.html.Uint8ClampedArray(cast bytes.getData(), byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\n        }\n\n        inline function toString() return this != null ? 'UInt8ClampedArray [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n        //internal\n        //clamp a Int to a 0-255 Uint8\n        static function _clamp(_in:Float) : Int {\n            var _out = Std.int(_in);\n            _out = _out > 255 ? 255 : _out;\n            return _out < 0 ? 0 : _out;\n        } //_clamp\n\n    }\n\n#else\n\n    import lime.utils.ArrayBufferView;\n\n    @:forward\n    @:arrayAccess\n    abstract UInt8ClampedArray(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 1;\n\n        public var length (get, never):Int;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?buffer:ArrayBuffer,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Int>, #end\n            ?view:ArrayBufferView,\n            ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n\n            if(elements != null) {\n                this = new ArrayBufferView( elements, Uint8Clamped );\n            } else if(array != null) {\n                this = new ArrayBufferView(0, Uint8Clamped).initArray(array);\n            #if openfl } else if(vector != null) { this = new ArrayBufferView(0, Uint8Clamped).initArray(untyped (vector).__array); #end\n            } else if(view != null) {\n                this = new ArrayBufferView(0, Uint8Clamped).initTypedArray(view);\n            } else if(buffer != null) {\n                this = new ArrayBufferView(0, Uint8Clamped).initBuffer(buffer, byteoffset, len);\n            } else {\n                throw \"Invalid constructor arguments for UInt8ClampedArray\";\n            }\n        }\n\n    //Public API\n\n        public inline function subarray( begin:Int, end:Null<Int> = null) : UInt8ClampedArray return this.subarray(begin, end);\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt8ClampedArray {\n            return new UInt8ClampedArray(bytes, byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return this.buffer;\n        }\n\n    //Internal\n\n        inline function get_length() return this.length;\n\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __get(idx:Int) {\n            return ArrayBufferIO.getUint8(this.buffer, this.byteOffset+idx);\n        }\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __set(idx:Int, val:UInt) {\n            ArrayBufferIO.setUint8Clamped(this.buffer, this.byteOffset+idx, val);\n            return val;\n        }\n\n        inline function toString() return this != null ? 'UInt8ClampedArray [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#end //!js","package lime.utils;\n\n#if (js && !display)\n\n    @:forward\n    abstract Int8Array(js.html.Int8Array)\n        from js.html.Int8Array\n        to js.html.Int8Array {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 1;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Int>, #end\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n            if(elements != null) {\n                this = new js.html.Int8Array( elements );\n            } else if(array != null) {\n                this = new js.html.Int8Array( untyped array );\n            #if openfl } else if(vector != null) { this = new js.html.Int8Array( untyped untyped (vector).__array ); #end\n            } else if(view != null) {\n                this = new js.html.Int8Array( untyped view );\n            } else if(buffer != null) {\n                if(len == null) {\n                    this = new js.html.Int8Array( buffer, byteoffset );\n                } else {\n                    this = new js.html.Int8Array( buffer, byteoffset, len );\n                }\n            } else {\n                this = null;\n            }\n        }\n\n        @:arrayAccess @:extern inline function __set(idx:Int, val:Int) : Int return this[idx] = val;\n        @:arrayAccess @:extern inline function __get(idx:Int) : Int return this[idx];\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int8Array {\n            return new js.html.Int8Array(cast bytes.getData(), byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\n        }\n\n        inline function toString() return this != null ? 'Int8Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#else\n\n    import lime.utils.ArrayBufferView;\n\n    @:forward\n    abstract Int8Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 1;\n\n        public var length (get, never):Int;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?buffer:ArrayBuffer,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Int>, #end\n            ?view:ArrayBufferView,\n            ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n\n            if(elements != null) {\n                this = new ArrayBufferView( elements, Int8 );\n            } else if(array != null) {\n                this = new ArrayBufferView(0, Int8).initArray(array);\n            #if openfl } else if(vector != null) { this = new ArrayBufferView(0, Int8).initArray(untyped (vector).__array); #end\n            } else if(view != null) {\n                this = new ArrayBufferView(0, Int8).initTypedArray(view);\n            } else if(buffer != null) {\n                this = new ArrayBufferView(0, Int8).initBuffer(buffer, byteoffset, len);\n            } else {\n                throw \"Invalid constructor arguments for Int8Array\";\n            }\n        }\n\n    //Public API\n\n        public inline function subarray( begin:Int, end:Null<Int> = null) : Int8Array return this.subarray(begin, end);\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int8Array {\n            if(byteOffset == null) return new Int8Array(null, null, cast bytes.getData());\n            if(len == null) return new Int8Array(null, null, cast bytes.getData(), byteOffset);\n            return new Int8Array(null, null, cast bytes.getData(), byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return this.buffer;\n        }\n\n    //Internal\n\n        inline function get_length() return this.length;\n\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __get(idx:Int) {\n            return ArrayBufferIO.getInt8(this.buffer, this.byteOffset+idx);\n        }\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __set(idx:Int, val:Int) {\n            ArrayBufferIO.setInt8(this.buffer, this.byteOffset+idx, val);\n            return val;\n        }\n\n        inline function toString() return this != null ? 'Int8Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#end //!js","package lime.utils;\n\n#if (js && !display)\n\n    @:forward\n    abstract Int16Array(js.html.Int16Array)\n        from js.html.Int16Array\n        to js.html.Int16Array {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 2;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Int>, #end\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n            if(elements != null) {\n                this = new js.html.Int16Array( elements );\n            } else if(array != null) {\n                this = new js.html.Int16Array( untyped array );\n            #if openfl } else if(vector != null) { this = new js.html.Int16Array( untyped untyped (vector).__array ); #end\n            } else if(view != null) {\n                this = new js.html.Int16Array( untyped view );\n            } else if(buffer != null) {\n                if(len == null) {\n                    this = new js.html.Int16Array( buffer, byteoffset );\n                } else {\n                    this = new js.html.Int16Array( buffer, byteoffset, len );\n                }\n            } else {\n                this = null;\n            }\n        }\n\n        @:arrayAccess @:extern inline function __set(idx:Int, val:Int) : Int return this[idx] = val;\n        @:arrayAccess @:extern inline function __get(idx:Int) : Int return this[idx];\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int16Array {\n            if(byteOffset == null) return new js.html.Int16Array(cast bytes.getData());\n            if(len == null) return new js.html.Int16Array(cast bytes.getData(), byteOffset);\n            return new js.html.Int16Array(cast bytes.getData(), byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\n        }\n\n        inline function toString() return this != null ? 'Int16Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#else\n\n    import lime.utils.ArrayBufferView;\n\n    @:forward\n    abstract Int16Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 2;\n\n        public var length (get, never):Int;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?buffer:ArrayBuffer,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Int>, #end\n            ?view:ArrayBufferView,\n            ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n\n            if(elements != null) {\n                this = new ArrayBufferView( elements, Int16 );\n            } else if(array != null) {\n                this = new ArrayBufferView(0, Int16).initArray(array);\n            #if openfl } else if(vector != null) { this = new ArrayBufferView(0, Int16).initArray(untyped (vector).__array); #end\n            } else if(view != null) {\n                this = new ArrayBufferView(0, Int16).initTypedArray(view);\n            } else if(buffer != null) {\n                this = new ArrayBufferView(0, Int16).initBuffer(buffer, byteoffset, len);\n            } else {\n                throw \"Invalid constructor arguments for Int16Array\";\n            }\n        }\n\n    //Public API\n\n        public inline function subarray( begin:Int, end:Null<Int> = null) : Int16Array return this.subarray(begin, end);\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int16Array {\n            return new Int16Array(bytes, byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return this.buffer;\n        }\n\n    //Internal\n\n        inline function get_length() return this.length;\n\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __get(idx:Int) {\n            return ArrayBufferIO.getInt16(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT));\n        }\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __set(idx:Int, val:Int) {\n            ArrayBufferIO.setInt16(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\n            return val;\n        }\n\n        inline function toString() return this != null ? 'Int16Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#end //!js","package lime.utils;\n\n#if (js && !display)\n\n    @:forward\n    abstract UInt32Array(js.html.Uint32Array)\n        from js.html.Uint32Array\n        to js.html.Uint32Array {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Int>, #end\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n            if(elements != null) {\n                this = new js.html.Uint32Array( elements );\n            } else if(array != null) {\n                this = new js.html.Uint32Array( untyped array );\n            #if openfl } else if(vector != null) { this = new js.html.Uint32Array( untyped untyped (vector).__array ); #end\n            } else if(view != null) {\n                this = new js.html.Uint32Array( untyped view );\n            } else if(buffer != null) {\n                if(len == null) {\n                    this = new js.html.Uint32Array( buffer, byteoffset );\n                } else {\n                    this = new js.html.Uint32Array( buffer, byteoffset, len );\n                }\n            } else {\n                this = null;\n            }\n        }\n\n        @:arrayAccess @:extern inline function __set(idx:Int, val:UInt) : UInt return this[idx] = val;\n        @:arrayAccess @:extern inline function __get(idx:Int) : UInt return this[idx];\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt32Array {\n            if(byteOffset == null) return new js.html.Uint32Array(cast bytes.getData());\n            if(len == null) return new js.html.Uint32Array(cast bytes.getData(), byteOffset);\n            return new js.html.Uint32Array(cast bytes.getData(), byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\n        }\n\n        inline function toString() return this != null ? 'UInt32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#else\n\n    import lime.utils.ArrayBufferView;\n\n    @:forward\n    abstract UInt32Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\n\n        public var length (get, never):Int;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?buffer:ArrayBuffer,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Int>, #end\n            ?view:ArrayBufferView,\n            ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n\n            if(elements != null) {\n                this = new ArrayBufferView( elements, Uint32 );\n            } else if(array != null) {\n                this = new ArrayBufferView(0, Uint32).initArray(array);\n            #if openfl } else if(vector != null) { this = new ArrayBufferView(0, Uint32).initArray(untyped (vector).__array); #end\n            } else if(view != null) {\n                this = new ArrayBufferView(0, Uint32).initTypedArray(view);\n            } else if(buffer != null) {\n                this = new ArrayBufferView(0, Uint32).initBuffer(buffer, byteoffset, len);\n            } else {\n                throw \"Invalid constructor arguments for UInt32Array\";\n            }\n        }\n\n    //Public API\n\n        public inline function subarray( begin:Int, end:Null<Int> = null) : UInt32Array return this.subarray(begin, end);\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : UInt32Array {\n            return new UInt32Array(bytes, byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return this.buffer;\n        }\n\n    //Internal\n\n        inline function get_length() return this.length;\n\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __get(idx:Int) {\n            return ArrayBufferIO.getUint32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT));\n        }\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __set(idx:Int, val:UInt) {\n            ArrayBufferIO.setUint32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\n            return val;\n        }\n\n        inline function toString() return this != null ? 'UInt32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#end //!js","package lime.utils;\r\n\r\n#if (js && !display)\r\n\r\n    @:forward\r\n    abstract Int32Array(js.html.Int32Array)\r\n        from js.html.Int32Array\r\n        to js.html.Int32Array {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?array:Array<T>,\r\n            #if openfl ?vector:openfl.Vector<Int>, #end\r\n            ?view:ArrayBufferView,\r\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n            if(elements != null) {\r\n                this = new js.html.Int32Array( elements );\r\n            } else if(array != null) {\r\n                this = new js.html.Int32Array( untyped array );\r\n            #if openfl } else if(vector != null) { this = new js.html.Int32Array( untyped untyped (vector).__array ); #end\r\n            } else if(view != null) {\r\n                this = new js.html.Int32Array( untyped view );\r\n            } else if(buffer != null) {\r\n                if(len == null) {\r\n                    this = new js.html.Int32Array( buffer, byteoffset );\r\n                } else {\r\n                    this = new js.html.Int32Array( buffer, byteoffset, len );\r\n                }\r\n            } else {\r\n                this = null;\r\n            }\r\n        }\r\n\r\n        @:arrayAccess @:extern inline function __set(idx:Int, val:Int) : Int return this[idx] = val;\r\n        @:arrayAccess @:extern inline function __get(idx:Int) : Int return this[idx];\r\n\r\n\r\n            //non spec haxe conversions\r\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int32Array {\r\n            if(byteOffset == null) return new js.html.Int32Array(cast bytes.getData());\r\n            if(len == null) return new js.html.Int32Array(cast bytes.getData(), byteOffset);\r\n            return new js.html.Int32Array(cast bytes.getData(), byteOffset, len);\r\n        }\r\n\r\n        inline public function toBytes() : haxe.io.Bytes {\r\n            return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\r\n        }\r\n\r\n        inline function toString() return this != null ? 'Int32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\r\n\r\n    }\r\n\r\n#else\r\n\r\n    import lime.utils.ArrayBufferView;\r\n\r\n    @:forward\r\n    abstract Int32Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\r\n\r\n        public inline static var BYTES_PER_ELEMENT : Int = 4;\r\n\r\n        public var length (get, never):Int;\r\n\r\n        @:generic\r\n        public inline function new<T>(\r\n            ?elements:Int,\r\n            ?buffer:ArrayBuffer,\r\n            ?array:Array<T>,\r\n            #if openfl ?vector:openfl.Vector<Int>, #end\r\n            ?view:ArrayBufferView,\r\n            ?byteoffset:Int = 0, ?len:Null<Int>\r\n        ) {\r\n\r\n            if(elements != null) {\r\n                this = new ArrayBufferView( elements, Int32 );\r\n            } else if(array != null) {\r\n                this = new ArrayBufferView(0, Int32).initArray(array);\r\n            #if openfl } else if(vector != null) { this = new ArrayBufferView(0, Int32).initArray(untyped (vector).__array); #end\r\n            } else if(view != null) {\r\n                this = new ArrayBufferView(0, Int32).initTypedArray(view);\r\n            } else if(buffer != null) {\r\n                this = new ArrayBufferView(0, Int32).initBuffer(buffer, byteoffset, len);\r\n            } else {\r\n                throw \"Invalid constructor arguments for Int32Array\";\r\n            }\r\n        }\r\n\r\n    //Public API\r\n\r\n        public inline function subarray( begin:Int, end:Null<Int> = null) : Int32Array return this.subarray(begin, end);\r\n\r\n\r\n            //non spec haxe conversions\r\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Int32Array {\r\n            return new Int32Array(bytes, byteOffset, len);\r\n        }\r\n\r\n        inline public function toBytes() : haxe.io.Bytes {\r\n            return this.buffer;\r\n        }\r\n\r\n    //Internal\r\n\r\n        inline function get_length() return this.length;\r\n\r\n\r\n        @:noCompletion\r\n        @:arrayAccess @:extern\r\n        public inline function __get(idx:Int) {\r\n            return ArrayBufferIO.getInt32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT));\r\n        }\r\n\r\n        @:noCompletion\r\n        @:arrayAccess @:extern\r\n        public inline function __set(idx:Int, val:Int) {\r\n            ArrayBufferIO.setInt32(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\r\n            return val;\r\n        }\r\n\r\n        inline function toString() return this != null ? 'Int32Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\r\n\r\n    }\r\n\r\n#end //!js","package lime.utils;\n\n#if (js && !display)\n\n    @:forward\n    abstract Float64Array(js.html.Float64Array)\n        from js.html.Float64Array\n        to js.html.Float64Array {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 8;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Float>, #end\n            ?view:ArrayBufferView,\n            ?buffer:ArrayBuffer, ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n            if(elements != null) {\n                this = new js.html.Float64Array( elements );\n            } else if(array != null) {\n                this = new js.html.Float64Array( untyped array );\n            #if openfl } else if(vector != null) { this = new js.html.Float64Array( untyped untyped (vector).__array ); #end\n            } else if(view != null) {\n                this = new js.html.Float64Array( untyped view );\n            } else if(buffer != null) {\n                if(len == null) {\n                    this = new js.html.Float64Array( buffer, byteoffset );\n                } else {\n                    this = new js.html.Float64Array( buffer, byteoffset, len );\n                }\n            } else {\n                this = null;\n            }\n        }\n\n        @:arrayAccess @:extern inline function __set(idx:Int, val:Float) : Float return this[idx] = val;\n        @:arrayAccess @:extern inline function __get(idx:Int) : Float return this[idx];\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Float64Array {\n            if(byteOffset == null) return new js.html.Float64Array(cast bytes.getData());\n            if(len == null) return new js.html.Float64Array(cast bytes.getData(), byteOffset);\n            return new js.html.Float64Array(cast bytes.getData(), byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return @:privateAccess new haxe.io.Bytes( cast new js.html.Uint8Array(this.buffer) );\n        }\n\n        function toString() return this != null ? 'Float64Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#else\n\n    import lime.utils.ArrayBufferView;\n\n    @:forward\n    abstract Float64Array(ArrayBufferView) from ArrayBufferView to ArrayBufferView {\n\n        public inline static var BYTES_PER_ELEMENT : Int = 8;\n\n        public var length (get, never):Int;\n\n        @:generic\n        public inline function new<T>(\n            ?elements:Int,\n            ?buffer:ArrayBuffer,\n            ?array:Array<T>,\n            #if openfl ?vector:openfl.Vector<Float>, #end\n            ?view:ArrayBufferView,\n            ?byteoffset:Int = 0, ?len:Null<Int>\n        ) {\n\n            if(elements != null) {\n                this = new ArrayBufferView( elements, Float64 );\n            } else if(array != null) {\n                this = new ArrayBufferView(0, Float64).initArray(array);\n            #if openfl } else if(vector != null) { this = new ArrayBufferView(0, Float64).initArray(untyped (vector).__array); #end\n            } else if(view != null) {\n                this = new ArrayBufferView(0, Float64).initTypedArray(view);\n            } else if(buffer != null) {\n                this = new ArrayBufferView(0, Float64).initBuffer(buffer, byteoffset, len);\n            } else {\n                throw \"Invalid constructor arguments for Float64Array\";\n            }\n        }\n\n    //Public API\n\n        public inline function subarray( begin:Int, end:Null<Int> = null) : Float64Array return this.subarray(begin, end);\n\n\n            //non spec haxe conversions\n        inline public static function fromBytes( bytes:haxe.io.Bytes, ?byteOffset:Int=0, ?len:Int ) : Float64Array {\n            return new Float64Array(bytes, byteOffset, len);\n        }\n\n        inline public function toBytes() : haxe.io.Bytes {\n            return this.buffer;\n        }\n\n    //Internal\n\n        inline function get_length() return this.length;\n\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __get(idx:Int) : Float {\n            return ArrayBufferIO.getFloat64(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT));\n        }\n\n        @:noCompletion\n        @:arrayAccess @:extern\n        public inline function __set(idx:Int, val:Float) : Float {\n            ArrayBufferIO.setFloat64(this.buffer, this.byteOffset+(idx*BYTES_PER_ELEMENT), val);\n            return val;\n        }\n\n        inline function toString() return this != null ? 'Float64Array [byteLength:${this.byteLength}, length:${this.length}]' : null;\n\n    }\n\n#end //!js","package lime.utils;\n\n\nimport haxe.io.BytesData;\nimport haxe.io.Bytes;\nimport lime.system.CFFIPointer;\nimport lime.utils.Bytes in LimeBytes;\n\n#if (lime_cffi && !macro)\nimport lime._backend.native.NativeCFFI;\n@:access(lime._backend.native.NativeCFFI)\n#end\n\n\nabstract DataPointer(DataPointerType) to DataPointerType {\n\t\n\t\n\tprivate function new (data:DataPointerType) {\n\t\t\n\t\tthis = data;\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion private static function fromInt (value:Int):DataPointer {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tvar float:Float = value;\n\t\treturn new DataPointer (float);\n\t\t#elseif (js && !display)\n\t\treturn new DataPointer (new DataPointerObject (value));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion private static function fromFloat (value:Float):DataPointer {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn new DataPointer (value);\n\t\t#elseif (js && !display)\n\t\treturn new DataPointer (new DataPointerObject (Std.int (value)));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromBytesPointer (pointer:BytePointer):DataPointer {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tif (pointer == null || pointer.bytes == null) return cast 0;\n\t\tvar data:Float = NativeCFFI.lime_bytes_get_data_pointer_offset (pointer.bytes, pointer.offset);\n\t\treturn new DataPointer (data);\n\t\t#elseif (js && !display)\n\t\treturn new DataPointer (new DataPointerObject (null, pointer.bytes.getData (), pointer.offset));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromArrayBufferView (arrayBufferView:ArrayBufferView):DataPointer {\n\t\t\n\t\t#if (lime_cffi && !js && !macro)\n\t\tif (arrayBufferView == null) return cast 0;\n\t\tvar data:Float = NativeCFFI.lime_bytes_get_data_pointer_offset (arrayBufferView.buffer, arrayBufferView.byteOffset);\n\t\treturn new DataPointer (data);\n\t\t#elseif (js && !display)\n\t\treturn new DataPointer (new DataPointerObject (arrayBufferView));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromArrayBuffer (buffer:ArrayBuffer):DataPointer {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tif (buffer == null) return cast 0;\n\t\treturn fromBytes (buffer);\n\t\t#elseif (js && !display)\n\t\treturn new DataPointer (new DataPointerObject (buffer));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromBytes (bytes:Bytes):DataPointer {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tif (bytes == null) return cast 0;\n\t\tvar data:Float = NativeCFFI.lime_bytes_get_data_pointer (bytes);\n\t\treturn new DataPointer (data);\n\t\t#elseif (js && !display)\n\t\treturn fromArrayBuffer (bytes.getData ());\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromBytesData (bytesData:BytesData):DataPointer {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tif (bytesData == null) return cast 0;\n\t\treturn fromBytes (Bytes.ofData (bytesData));\n\t\t#elseif (js && !display)\n\t\treturn fromArrayBuffer (bytesData);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromLimeBytes (bytes:LimeBytes):DataPointer {\n\t\t\n\t\treturn fromBytes (bytes);\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromCFFIPointer (pointer:CFFIPointer):DataPointer {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tif (pointer == null) return cast 0;\n\t\treturn new DataPointer (pointer.get ());\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String):DataPointer {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\treturn fromBytes (LimeBytes.fromFile (path));\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5 && !display)\n\t@:dox(hide) @:noCompletion public function toBufferOrBufferView (?length:Int):Dynamic {\n\t\t\n\t\tvar data:DataPointerObject = this;\n\t\tuntyped __js__ (\"if (!data) return null\");\n\t\t\n\t\tswitch (data.type) {\n\t\t\t\n\t\t\tcase BUFFER_VIEW:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.bufferView.byteLength;\n\t\t\t\t\n\t\t\t\tif (data.offset == 0 && length == data.bufferView.byteLength) {\n\t\t\t\t\t\n\t\t\t\t\treturn data.bufferView;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn new UInt8Array (data.bufferView.buffer, data.bufferView.byteOffset + data.offset, length);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase BUFFER:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.buffer.byteLength;\n\t\t\t\t\n\t\t\t\tif (data.offset == 0 && length == data.buffer.byteLength) {\n\t\t\t\t\t\n\t\t\t\t\treturn data.buffer;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn new UInt8Array (data.buffer, data.offset, length);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:dox(hide) @:noCompletion public function toBufferView (?length:Int):Dynamic {\n\t\t\n\t\tvar data:DataPointerObject = this;\n\t\tuntyped __js__ (\"if (!data) return null\");\n\t\t\n\t\tswitch (data.type) {\n\t\t\t\n\t\t\tcase BUFFER_VIEW:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.bufferView.byteLength;\n\t\t\t\t\n\t\t\t\tif (data.offset == 0 && length == data.bufferView.byteLength) {\n\t\t\t\t\t\n\t\t\t\t\treturn data.bufferView;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn new UInt8Array (data.bufferView.buffer, data.bufferView.byteOffset + data.offset, length);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase BUFFER:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.buffer.byteLength;\n\t\t\t\treturn new UInt8Array (data.buffer, data.offset, length);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:dox(hide) @:noCompletion public function toFloat32Array (?length:Int):Float32Array {\n\t\t\n\t\tvar data:DataPointerObject = this;\n\t\tuntyped __js__ (\"if (!data) return null\");\n\t\t\n\t\tswitch (data.type) {\n\t\t\t\n\t\t\tcase BUFFER_VIEW:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.bufferView.byteLength;\n\t\t\t\tif (data.offset == 0 && length == data.bufferView.byteLength && untyped __js__ (\"data.bufferView.constructor == Float32Array\")) {\n\t\t\t\t\t\n\t\t\t\t\treturn cast data.bufferView;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn new Float32Array (data.bufferView.buffer, data.bufferView.byteOffset + data.offset, Std.int (length / Float32Array.BYTES_PER_ELEMENT));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase BUFFER:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.buffer.byteLength;\n\t\t\t\treturn new Float32Array (data.buffer, data.offset, Std.int (length / Float32Array.BYTES_PER_ELEMENT));\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:dox(hide) @:noCompletion public function toInt32Array (?length:Int):Int32Array {\n\t\t\n\t\tvar data:DataPointerObject = this;\n\t\tuntyped __js__ (\"if (!data) return null\");\n\t\t\n\t\tswitch (data.type) {\n\t\t\t\n\t\t\tcase BUFFER_VIEW:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.bufferView.byteLength;\n\t\t\t\tif (data.offset == 0 && length == data.bufferView.byteLength && untyped __js__ (\"data.bufferView.constructor == Int32Array\")) {\n\t\t\t\t\t\n\t\t\t\t\treturn cast data.bufferView;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn new Int32Array (data.bufferView.buffer, data.bufferView.byteOffset + data.offset, Std.int (length / Int32Array.BYTES_PER_ELEMENT));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase BUFFER:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.buffer.byteLength;\n\t\t\t\treturn new Int32Array (data.buffer, data.offset, Std.int (length / Int32Array.BYTES_PER_ELEMENT));\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:dox(hide) @:noCompletion public function toUInt8Array (?length:Int):UInt8Array {\n\t\t\n\t\tvar data:DataPointerObject = this;\n\t\tuntyped __js__ (\"if (!data) return null\");\n\t\t\n\t\tswitch (data.type) {\n\t\t\t\n\t\t\tcase BUFFER_VIEW:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.bufferView.byteLength;\n\t\t\t\tif (data.offset == 0 && length == data.bufferView.byteLength && untyped __js__ (\"data.bufferView.constructor == Uint8Array\")) {\n\t\t\t\t\t\n\t\t\t\t\treturn cast data.bufferView;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn new UInt8Array (data.bufferView.buffer, data.bufferView.byteOffset + data.offset, length);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase BUFFER:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.buffer.byteLength;\n\t\t\t\treturn new UInt8Array (data.buffer, data.offset, length);\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:dox(hide) @:noCompletion public function toUInt32Array (?length:Int):UInt32Array {\n\t\t\n\t\tvar data:DataPointerObject = this;\n\t\tuntyped __js__ (\"if (!data) return null\");\n\t\t\n\t\tswitch (data.type) {\n\t\t\t\n\t\t\tcase BUFFER_VIEW:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.bufferView.byteLength;\n\t\t\t\tif (data.offset == 0 && length == data.bufferView.byteLength && untyped __js__ (\"data.bufferView.constructor == Uint32Array\")) {\n\t\t\t\t\t\n\t\t\t\t\treturn cast data.bufferView;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn new UInt32Array (data.bufferView.buffer, data.bufferView.byteOffset + data.offset, Std.int (length / UInt32Array.BYTES_PER_ELEMENT));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase BUFFER:\n\t\t\t\t\n\t\t\t\tif (length == null) length = data.buffer.byteLength;\n\t\t\t\treturn new UInt32Array (data.buffer, data.offset, Std.int (length / UInt32Array.BYTES_PER_ELEMENT));\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:dox(hide) @:noCompletion public function toValue ():Int {\n\t\t\n\t\tvar data:DataPointerObject = this;\n\t\tuntyped __js__ (\"if (!data) return 0\");\n\t\tuntyped __js__ (\"if (typeof data === 'number') return data\");\n\t\t\n\t\tswitch (data.type) {\n\t\t\t\n\t\t\tcase VALUE:\n\t\t\t\t\n\t\t\t\treturn data.offset;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\treturn 0;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t#end\n\t\n\t\n\tprivate static function __withOffset (data:DataPointer, offset:Int):DataPointer {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\tif (data == 0) return cast 0;\n\t\tvar data:Float = NativeCFFI.lime_data_pointer_offset (data, offset);\n\t\treturn new DataPointer (data);\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:op(A == B) private static inline function equals (a:DataPointer, b:Int):Bool { return (a:Float) == b; }\n\t@:noCompletion @:op(A == B) private static inline function equalsPointer (a:DataPointer, b:DataPointer):Bool { return (a:Float) == (b:Float); }\n\t@:noCompletion @:op(A > B) private static inline function greaterThan (a:DataPointer, b:Int):Bool { return (a:Float) > b; }\n\t@:noCompletion @:op(A > B) private static inline function greaterThanPointer (a:DataPointer, b:CFFIPointer):Bool { return (a:Float) > b; }\n\t@:noCompletion @:op(A >= B) private static inline function greaterThanOrEqual (a:DataPointer, b:Int):Bool { return (a:Float) >= b; }\n\t@:noCompletion @:op(A >= B) private static inline function greaterThanOrEqualPointer (a:DataPointer, b:CFFIPointer):Bool { return (a:Float) >= b; }\n\t@:noCompletion @:op(A < B) private static inline function lessThan (a:DataPointer, b:Int):Bool { return (a:Float) < b; }\n\t@:noCompletion @:op(A < B) private static inline function lessThanPointer (a:DataPointer, b:CFFIPointer):Bool { return (a:Float) < b; }\n\t@:noCompletion @:op(A <= B) private static inline function lessThanOrEqual (a:DataPointer, b:Int):Bool { return (a:Float) <= b; }\n\t@:noCompletion @:op(A <= B) private static inline function lessThanOrEqualPointer (a:DataPointer, b:CFFIPointer):Bool { return (a:Float) <= b; }\n\t@:noCompletion @:op(A != B) private static inline function notEquals (a:DataPointer, b:Int):Bool { return (a:Float) != b; }\n\t@:noCompletion @:op(A != B) private static inline function notEqualsPointer (a:DataPointer, b:DataPointer):Bool { return (a:Float) != (b:Float); }\n\t@:noCompletion @:op(A + B) private static inline function plus (a:DataPointer, b:Int):DataPointer { return __withOffset (a, b); }\n\t@:noCompletion @:op(A + B) private static inline function plusPointer (a:DataPointer, b:DataPointer):DataPointer { return  __withOffset (a, Std.int ((b:Float))); }\n\t@:noCompletion @:op(A - B) private static inline function minus (a:DataPointer, b:Int):DataPointer { return __withOffset (a, -b); }\n\t@:noCompletion @:op(A - B) private static inline function minusPointer (a:DataPointer, b:DataPointer):DataPointer { return __withOffset (a, -Std.int ((b:Float))); }\n\t\n\t\n}\n\n\n#if (lime_cffi && !js)\nprivate typedef DataPointerType = Float;\n#else\nprivate typedef DataPointerType = Dynamic;\n\n@:dox(hide) class DataPointerObject {\n\t\n\t\n\tpublic var buffer:ArrayBuffer;\n\tpublic var bufferView:ArrayBufferView;\n\tpublic var offset:Int;\n\tpublic var type:DataPointerObjectType;\n\t\n\t\n\tpublic function new (?bufferView:ArrayBufferView, ?buffer:ArrayBuffer, offset:Int = 0) {\n\t\t\n\t\tif (bufferView != null) {\n\t\t\t\n\t\t\tthis.bufferView = bufferView;\n\t\t\ttype = BUFFER_VIEW;\n\t\t\t\n\t\t} else if (buffer != null) {\n\t\t\t\n\t\t\tthis.buffer = buffer;\n\t\t\ttype = BUFFER;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttype = VALUE;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.offset = offset;\n\t\t\n\t}\n\t\n\t\n}\n\n@:dox(hide) enum DataPointerObjectType {\n\t\n\tBUFFER;\n\tBUFFER_VIEW;\n\tVALUE;\n\t\n}\n#end","package lime.utils;\n\n\nimport lime.graphics.opengl.GLProgram;\nimport lime.graphics.opengl.GLShader;\nimport lime.graphics.opengl.GL;\nimport lime.utils.Log;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass GLUtils {\n\t\n\t\n\tpublic static function compileShader (source:String, type:Int):GLShader {\n\t\t\n\t\tvar shader = GL.createShader (type);\n\t\tGL.shaderSource (shader, source);\n\t\tGL.compileShader (shader);\n\t\t\n\t\tif (GL.getShaderParameter (shader, GL.COMPILE_STATUS) == 0) {\n\t\t\t\n\t\t\tvar message = switch (type) {\n\t\t\t\t\n\t\t\t\tcase GL.VERTEX_SHADER: \"Error compiling vertex shader\";\n\t\t\t\tcase GL.FRAGMENT_SHADER: \"Error compiling fragment shader\";\n\t\t\t\tdefault: \"Error compiling unknown shader type\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tmessage += \"\\n\" + GL.getShaderInfoLog (shader);\n\t\t\tLog.error (message);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn shader;\n\t\t\n\t}\n\t\n\t\n\tpublic static function createProgram (vertexSource:String, fragmentSource:String):GLProgram {\n\t\t\n\t\tvar vertexShader = compileShader (vertexSource, GL.VERTEX_SHADER);\n\t\tvar fragmentShader = compileShader (fragmentSource, GL.FRAGMENT_SHADER);\n\t\t\n\t\tvar program = GL.createProgram ();\n\t\tGL.attachShader (program, vertexShader);\n\t\tGL.attachShader (program, fragmentShader);\n\t\tGL.linkProgram (program);\n\t\t\n\t\tif (GL.getProgramParameter (program, GL.LINK_STATUS) == 0) {\n\t\t\t\n\t\t\tvar message = \"Unable to initialize the shader program\";\n\t\t\tmessage += \"\\n\" + GL.getProgramInfoLog (program);\n\t\t\tLog.error (message);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn program;\n\t\t\n\t}\n\t\n\t\n}","package lime.utils;\n\n\nimport haxe.PosInfos;\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Log {\n\t\n\t\n\tpublic static var level:LogLevel;\n\tpublic static var throwErrors:Bool = true;\n\t\n\t\n\tpublic static function debug (message:String, ?obj:Dynamic = null, ?info:PosInfos):Void {\n\t\t\n\t\tif (level >= LogLevel.DEBUG) {\n\t\t\t\n\t\t\t#if js\n\t\t\t\tif(obj != null) {\n\t\t\t\t\tuntyped __js__(\"console\").debug (\"[\" + info.className + \"] \" + message, obj, info);\n\t\t\t\t} else {\n\t\t\t\t\tuntyped __js__(\"console\").debug (\"[\" + info.className + \"] \" + message, info);\n\t\t\t\t}\n\t\t\t#else\n\t\t\t\tprintln (\"[\" + info.className + \"] \" + message);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function error (message:String, ?info:PosInfos):Void {\n\t\t\n\t\tif (level >= LogLevel.ERROR) {\n\t\t\t\n\t\t\tvar message = \"[\" + info.className + \"] ERROR: \" + message;\n\t\t\t\n\t\t\tif (throwErrors) {\n\n\t\t\t\t#if js\n\t\t\t\t\tuntyped __js__(\"console\").error (message, info);\n\t\t\t\t#end\n\t\t\t\tthrow message;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t#if js\n\t\t\t\t\tuntyped __js__(\"console\").error (message);\n\t\t\t\t#else\n\t\t\t\t\tprintln (message);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function info (message:String, ?obj:Dynamic, ?info:PosInfos):Void {\n\t\t\n\t\tif (level >= LogLevel.INFO) {\n\t\t\t\n\t\t\t#if js\n\t\t\t\tif(obj != null) {\n\t\t\t\t\tuntyped __js__(\"console\").info (\"[\" + info.className + \"] \" + message, obj, info);\n\t\t\t\t} else {\n\t\t\t\t\tuntyped __js__(\"console\").info (\"[\" + info.className + \"] \" + message, info);\n\t\t\t\t}\n\t\t\t#else\n\t\t\t\tprintln (\"[\" + info.className + \"] \" + message);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function print (message:String):Void {\n\t\t\n\t\t#if sys\n\t\tSys.print (message);\n\t\t#elseif flash\n\t\tuntyped __global__[\"trace\"] (message);\n\t\t#elseif js\n\t\tuntyped __js__(\"console\").log (message);\n\t\t#else\n\t\ttrace (message);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function println (message:String):Void {\n\t\t\n\t\t#if sys\n\t\tSys.println (message);\n\t\t#elseif flash\n\t\tuntyped __global__[\"trace\"] (message);\n\t\t#elseif js\n\t\tuntyped __js__(\"console\").log (message);\n\t\t#else\n\t\ttrace (message);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function verbose (message:String, ?info:PosInfos):Void {\n\t\t\n\t\tif (level >= LogLevel.VERBOSE) {\n\t\t\t\n\t\t\tprintln (\"[\" + info.className + \"] \" + message);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function warn (message:String, ?obj:Dynamic = null, ?info:PosInfos):Void {\n\t\t\n\t\tif (level >= LogLevel.WARN) {\n\t\t\t\n\t\t\t#if js\n\t\t\t\tif(obj != null) {\n\t\t\t\t\tuntyped __js__(\"console\").warn (\"[\" + info.className + \"] WARNING: \" + message, obj, info);\n\t\t\t\t} else {\n\t\t\t\t\tuntyped __js__(\"console\").warn (\"[\" + info.className + \"] WARNING: \" + message, info);\n\t\t\t\t}\n\t\t\t#else\n\t\t\t\tprintln (\"[\" + info.className + \"] WARNING: \" + message);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __init__ ():Void {\n\t\t\n\t\t#if no_traces\n\t\tlevel = NONE;\n\t\t#elseif verbose\n\t\tlevel = VERBOSE;\n\t\t#else\n\t\t#if sys\n\t\tvar args = Sys.args ();\n\t\tif (args.indexOf (\"-v\") > -1 || args.indexOf (\"-verbose\") > -1) {\n\t\t\tlevel = VERBOSE;\n\t\t} else\n\t\t#end\n\t\t{\n\t\t\t#if debug\n\t\t\tlevel = DEBUG;\n\t\t\t#else\n\t\t\tlevel = INFO;\n\t\t\t#end\n\t\t}\n\t\t#end\n\t\t\n\t\t#if js\n\t\tif (untyped __js__(\"typeof console\") == \"undefined\") {\n\t\t\tuntyped __js__(\"console = {}\");\n\t\t}\n\t\tif (untyped __js__(\"console\").log == null) {\n\t\t\tuntyped __js__(\"console\").log = function () {};\n\t\t}\n\t\t#end\n\t\t\n\t\t#if (lime >= \"4.0.0\")\n\t\tthrowErrors = true;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:enum abstract LogLevel(Int) from Int to Int from UInt to UInt {\n\t\n\tvar NONE = 0;\n\tvar ERROR = 1;\n\tvar WARN = 2;\n\tvar INFO = 3;\n\tvar DEBUG = 4;\n\tvar VERBOSE = 5;\n\t\n\t@:op(A > B) private static inline function gt (a:LogLevel, b:LogLevel):Bool { return (a:Int) > (b:Int); }\n\t@:op(A >= B) private static inline function gte (a:LogLevel, b:LogLevel):Bool { return (a:Int) >= (b:Int); }\n\t@:op(A < B) private static inline function lt (a:LogLevel, b:LogLevel):Bool { return (a:Int) < (b:Int); }\n\t@:op(A <= B) private static inline function lte (a:LogLevel, b:LogLevel):Bool { return (a:Int) <= (b:Int); }\n\t\n}\n","package lime.utils.compress;\n\n\nimport haxe.io.Bytes;\nimport lime._backend.native.NativeCFFI;\n\n#if flash\nimport flash.utils.ByteArray;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nclass Deflate {\n\t\n\t\n\tpublic static function compress (bytes:Bytes):Bytes {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t#if !cs\n\t\treturn NativeCFFI.lime_deflate_compress (bytes, Bytes.alloc (0));\n\t\t#else\n\t\tvar data:Dynamic = NativeCFFI.lime_deflate_compress (bytes, null);\n\t\tif (data == null) return null;\n\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t#end\n\t\t\n\t\t#elseif (js && html5)\n\t\t\n\t\tvar data = untyped __js__ (\"pako.deflateRaw\") (bytes.getData ());\n\t\treturn Bytes.ofData (data);\n\t\t\n\t\t#elseif flash\n\t\t\n\t\tvar byteArray:ByteArray = cast bytes.getData ();\n\t\t\n\t\tvar data = new ByteArray ();\n\t\tdata.writeBytes (byteArray);\n\t\tdata.deflate ();\n\t\t\n\t\treturn Bytes.ofData (data);\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function decompress (bytes:Bytes):Bytes {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t#if !cs\n\t\treturn NativeCFFI.lime_deflate_decompress (bytes, Bytes.alloc (0));\n\t\t#else\n\t\tvar data:Dynamic = NativeCFFI.lime_deflate_decompress (bytes, null);\n\t\tif (data == null) return null;\n\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t#end\n\t\t\n\t\t#elseif (js && html5)\n\t\t\n\t\tvar data = untyped __js__ (\"pako.inflateRaw\") (bytes.getData ());\n\t\treturn Bytes.ofData (data);\n\t\t\n\t\t#elseif flash\n\t\t\n\t\tvar byteArray:ByteArray = cast bytes.getData ();\n\t\t\n\t\tvar data = new ByteArray ();\n\t\tdata.writeBytes (byteArray);\n\t\tdata.inflate ();\n\t\t\n\t\treturn Bytes.ofData (data);\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.utils.compress;\n\n\nimport haxe.io.Bytes;\nimport lime._backend.native.NativeCFFI;\n\n#if flash\nimport flash.utils.CompressionAlgorithm;\nimport flash.utils.ByteArray;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nclass LZMA {\n\t\n\t\n\tpublic static function compress (bytes:Bytes):Bytes {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t#if !cs\n\t\treturn NativeCFFI.lime_lzma_compress (bytes, Bytes.alloc (0));\n\t\t#else\n\t\tvar data:Dynamic = NativeCFFI.lime_lzma_compress (bytes, null);\n\t\tif (data == null) return null;\n\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t#end\n\t\t\n\t\t#elseif flash\n\t\t\n\t\tvar byteArray:ByteArray = cast bytes.getData ();\n\t\t\n\t\tvar data = new ByteArray ();\n\t\tdata.writeBytes (byteArray);\n\t\tdata.compress (CompressionAlgorithm.LZMA);\n\t\t\n\t\treturn Bytes.ofData (data);\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function decompress (bytes:Bytes):Bytes {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t#if !cs\n\t\treturn NativeCFFI.lime_lzma_decompress (bytes, Bytes.alloc (0));\n\t\t#else\n\t\tvar data:Dynamic = NativeCFFI.lime_lzma_decompress (bytes, null);\n\t\tif (data == null) return null;\n\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t#end\n\t\t\n\t\t#elseif flash\n\t\t\n\t\tvar byteArray:ByteArray = cast bytes.getData ();\n\t\t\n\t\tvar data = new ByteArray ();\n\t\tdata.writeBytes (byteArray);\n\t\tdata.uncompress (CompressionAlgorithm.LZMA);\n\t\t\n\t\treturn Bytes.ofData (data);\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package lime.utils.compress;\n\n\nimport haxe.io.Bytes;\nimport lime._backend.native.NativeCFFI;\n\n#if flash\nimport flash.utils.ByteArray;\n#end\n\n#if !lime_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime._backend.native.NativeCFFI)\n\n\nclass Zlib {\n\t\n\t\n\tpublic static function compress (bytes:Bytes):Bytes {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t#if !cs\n\t\treturn NativeCFFI.lime_zlib_compress (bytes, Bytes.alloc (0));\n\t\t#else\n\t\tvar data:Dynamic = NativeCFFI.lime_zlib_compress (bytes, null);\n\t\tif (data == null) return null;\n\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t#end\n\t\t\n\t\t#elseif (js && html5)\n\t\t\n\t\tvar data = untyped __js__ (\"pako.deflate\") (bytes.getData ());\n\t\treturn Bytes.ofData (data);\n\t\t\n\t\t#elseif flash\n\t\t\n\t\tvar byteArray:ByteArray = cast bytes.getData ();\n\t\t\n\t\tvar data = new ByteArray ();\n\t\tdata.writeBytes (byteArray);\n\t\tdata.compress ();\n\t\t\n\t\treturn Bytes.ofData (data);\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function decompress (bytes:Bytes):Bytes {\n\t\t\n\t\t#if (lime_cffi && !macro)\n\t\t\n\t\t#if !cs\n\t\treturn NativeCFFI.lime_zlib_decompress (bytes, Bytes.alloc (0));\n\t\t#else\n\t\tvar data:Dynamic = NativeCFFI.lime_zlib_decompress (bytes, null);\n\t\tif (data == null) return null;\n\t\treturn @:privateAccess new Bytes (data.length, data.b);\n\t\t#end\n\t\t\n\t\t#elseif (js && html5)\n\t\t\n\t\tvar data = untyped __js__ (\"pako.inflate\") (bytes.getData ());\n\t\treturn Bytes.ofData (data);\n\t\t\n\t\t#elseif flash\n\t\t\n\t\tvar byteArray:ByteArray = cast bytes.getData ();\n\t\t\n\t\tvar data = new ByteArray ();\n\t\tdata.writeBytes (byteArray);\n\t\tdata.uncompress ();\n\t\t\n\t\treturn Bytes.ofData (data);\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl;\n\n\nimport haxe.PosInfos;\nimport lime.system.System;\nimport lime.utils.Log;\nimport openfl._internal.Lib in InternalLib;\nimport openfl.display.Application;\nimport openfl.display.MovieClip;\nimport openfl.display.Stage;\nimport openfl.net.URLRequest;\nimport openfl.net.URLVariables;\n\n#if swf\n#if flash\nimport openfl._internal.swf.SWFLibrary;\n#else\nimport openfl._internal.swf.SWFLiteLibrary; // workaround\n#end\n#end\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:access(openfl.display.Stage) class Lib {\n\t\n\t\n\tpublic static var application (get, never):Application;\n\tpublic static var current (get, never):MovieClip;\n\t\n\t@:noCompletion private static var __sentWarnings = new Map<String, Bool> ();\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (Lib, {\n\t\t\t\"application\": { get: function () { return Lib.get_application (); } },\n\t\t\t\"current\": { get: function () { return Lib.get_current (); } }\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function as<T> (v:Dynamic, c:Class<T>):Null<T> {\n\t\t\n\t\t#if flash\n\t\treturn flash.Lib.as (v,c);\n\t\t#else\n\t\treturn Std.is (v, c) ? v : null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function attach (name:String):MovieClip {\n\t\t\n\t\t#if flash\n\t\treturn cast flash.Lib.attach (name);\n\t\t#else\n\t\treturn new MovieClip ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if flash\n\tpublic static function eval (path:String):Dynamic {\n\t\t\n\t\treturn flash.Lib.eval (path);\n\t\t\n\t}\n\t#end\n\t\n\t\n\t#if flash\n\tpublic static function fscommand (cmd:String, ?param:String) {\n\t\t\n\t\treturn flash.Lib.fscommand (cmd, param);\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function getTimer ():Int {\n\t\t\n\t\t#if flash\n\t\treturn flash.Lib.getTimer ();\n\t\t#else\n\t\treturn System.getTimer ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function getURL (request:URLRequest, target:String = null) {\n\t\t\n\t\tif (target == null) {\n\t\t\t\n\t\t\ttarget = \"_blank\";\n\t\t\t\n\t\t}\n\t\t\n\t\t#if flash\n\t\treturn flash.Lib.getURL (request, target);\n\t\t#else\n\t\tvar uri = request.url;\n\t\t\n\t\tif (Std.is (request.data, URLVariables)) {\n\t\t\t\n\t\t\tvar query = \"\";\n\t\t\tvar fields = Reflect.fields (request.data);\n\t\t\t\n\t\t\tfor (field in fields) {\n\t\t\t\t\n\t\t\t\tif (query.length > 0) query += \"&\";\n\t\t\t\tquery += StringTools.urlEncode (field) + \"=\" + StringTools.urlEncode (Std.string (Reflect.field (request.data, field)));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (uri.indexOf (\"?\") > -1) {\n\t\t\t\t\n\t\t\t\turi += \"&\" + query;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\turi += \"?\" + query;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tSystem.openURL (uri, target);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function notImplemented (?posInfo:PosInfos):Void {\n\t\t\n\t\tvar api = posInfo.className + \".\" + posInfo.methodName;\n\t\t\n\t\tif (!__sentWarnings.exists (api)) {\n\t\t\t\n\t\t\t__sentWarnings.set (api, true);\n\t\t\t\n\t\t\tLog.warn (posInfo.methodName + \" is not implemented\", posInfo);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function preventDefaultTouchMove ():Void {\n\t\t\n\t\t#if (js && html5)\n\t\tBrowser.document.addEventListener (\"touchmove\", function (evt:js.html.Event):Void {\n\t\t\t\n\t\t\tevt.preventDefault ();\n\t\t\t\n\t\t}, false);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if flash\n\tpublic static function redirectTraces () {\n\t\t\n\t\treturn flash.Lib.redirectTraces ();\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function trace (arg:Dynamic):Void {\n\t\t\n\t\thaxe.Log.trace (arg);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private static function get_application ():Application {\n\t\t\n\t\treturn InternalLib.application;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private static function get_current ():MovieClip {\n\t\t\n\t\t#if flash\n\t\treturn cast flash.Lib.current;\n\t\t#else\n\t\tif (InternalLib.current == null) InternalLib.current = new MovieClip ();\n\t\treturn InternalLib.current;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t// @:noCompletion private static function set_current (current:MovieClip):MovieClip {\n\t\t\n\t// \treturn cast flash.Lib.current = cast current;\n\t\t\n\t// }\n\t\n\t\n}","package openfl._internal;\n\n\nimport haxe.PosInfos;\nimport lime.utils.Log;\nimport openfl.display.Application;\nimport openfl.display.MovieClip;\n\n\nclass Lib {\n\t\n\t\n\tpublic static var application:Application;\n\tpublic static var current:MovieClip #if flash = flash.Lib.current #end;\n\t\n\t@:noCompletion private static var __sentWarnings = new Map<String, Bool> ();\n\t\n\t\n\tpublic static function notImplemented (?posInfo:PosInfos):Void {\n\t\t\n\t\tvar api = posInfo.className + \".\" + posInfo.methodName;\n\t\t\n\t\tif (!__sentWarnings.exists (api)) {\n\t\t\t\n\t\t\t__sentWarnings.set (api, true);\n\t\t\t\n\t\t\tLog.warn (posInfo.methodName + \" is not implemented\", posInfo);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal;\n\n\nimport lime.ui.Touch;\nimport lime.utils.ObjectPool;\nimport openfl.display.DisplayObject;\nimport openfl.display.InteractiveObject;\n\n\nclass TouchData {\n\t\n\t\n\tpublic static var __pool = new ObjectPool<TouchData> (function () return new TouchData (), function (data) data.reset ());\n\t\n\tpublic var rollOutStack:Array<DisplayObject>;\n\tpublic var touch:Touch;\n\tpublic var touchDownTarget:InteractiveObject;\n\tpublic var touchOverTarget:InteractiveObject;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\trollOutStack = [];\n\t\t\n\t}\n\t\n\t\n\tpublic function reset ():Void {\n\t\t\n\t\ttouch = null;\n\t\ttouchDownTarget = null;\n\t\ttouchOverTarget = null;\n\t\t\n\t\trollOutStack.splice (0, rollOutStack.length);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer;\n\n\nimport openfl.display.BlendMode;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass AbstractBlendModeManager {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function setBlendMode (blendMode:BlendMode):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer;\n\n\nimport openfl.display.DisplayObject;\nimport openfl.display.Shader;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.DisplayObject)\n@:keep\n\n\nclass AbstractFilterManager {\n\t\n\t\n\tprivate var renderSession:RenderSession;\n\t\n\t\n\tpublic function new (renderSession:RenderSession) {\n\t\t\n\t\tthis.renderSession = renderSession;\n\t\t\n\t}\n\t\n\t\n\tpublic function pushObject (object:DisplayObject):Shader {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function popObject (object:DisplayObject):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer;\n\n\nimport openfl.display.*;\nimport openfl.geom.*;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.DisplayObject)\n@:keep\n\n\nclass AbstractMaskManager {\n\t\n\t\n\tprivate var renderSession:RenderSession;\n\t\n\t\n\tpublic function new (renderSession:RenderSession) {\n\t\t\n\t\tthis.renderSession = renderSession;\n\t\t\n\t}\n\t\n\t\n\tpublic function pushMask (mask:DisplayObject):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function pushObject (object:DisplayObject, handleScrollRect:Bool = true):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function pushRect (rect:Rectangle, transform:Matrix):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function popMask ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function popObject (object:DisplayObject, handleScrollRect:Bool = true):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function popRect ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function saveState ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function restoreState ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer;\n\n\nimport openfl.display.Shape;\nimport openfl.display.Stage;\nimport openfl.geom.Matrix;\nimport openfl.geom.Rectangle;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass AbstractRenderer {\n\t\n\t\n\tpublic var height:Int;\n\tpublic var width:Int;\n\tpublic var transparent:Bool;\n\tpublic var viewport:Rectangle;\n\t\n\tprivate var renderSession:RenderSession;\n\tprivate var stage:Stage;\n\t\n\t\n\tprivate function new (stage:Stage) {\n\t\t\n\t\tthis.stage = stage;\n\t\t\n\t\twidth = stage.stageWidth;\n\t\theight = stage.stageHeight;\n\t\t\n\t}\n\t\n\t\n\tpublic function clear ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function render ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function renderStage3D ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t//public function renderShape (shape:Shape):Void {\n\t\t//\n\t\t//\n\t\t//\n\t//}\n\t\n\t\n\t//public function setViewport (x:Int, y:Int, width:Int, height:Int):Void {\n\t\t//\n\t\t//\n\t\t//\n\t//}\n\t\n\t\n\tpublic function resize (width:Int, height:Int):Void {\n\t\t\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer;\n\n\nimport openfl.display.Shader;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass AbstractShaderManager {\n\t\n\t\n\tpublic var currentShader (default, null):Shader;\n\tpublic var defaultShader:Shader;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function initShader (shader:Shader):Shader {\n\t\t\n\t\treturn shader;\n\t\t\n\t}\n\t\n\t\n\tpublic function setShader (shader:Shader):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function updateShader (shader:Shader):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer;\n\n\nimport openfl.display.BitmapData;\nimport openfl.display.CapsStyle;\nimport openfl.display.GradientType;\nimport openfl.display.GraphicsPathWinding;\nimport openfl.display.InterpolationMethod;\nimport openfl.display.JointStyle;\nimport openfl.display.LineScaleMode;\nimport openfl.display.Shader;\nimport openfl.display.SpreadMethod;\nimport openfl.display.TriangleCulling;\nimport openfl.geom.Matrix;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:allow(openfl._internal.renderer.DrawCommandReader)\n\n\nclass DrawCommandBuffer {\n\t\n\t\n\tprivate static var empty:DrawCommandBuffer = new DrawCommandBuffer ();\n\t\n\tpublic var length (get, never):Int; \n\tpublic var types:Array<DrawCommandType>;\n\t\n\tprivate var b:Array<Bool>;\n\tprivate var copyOnWrite:Bool;\n\tprivate var f:Array<Float>;\n\tprivate var ff:Array<Array<Float>>;\n\tprivate var i:Array<Int>;\n\tprivate var ii:Array<Array<Int>>;\n\tprivate var o:Array<Dynamic>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tif (empty == null) {\n\t\t\t\n\t\t\ttypes = [];\n\t\t\t\n\t\t\tb = [];\n\t\t\ti = [];\n\t\t\tf = [];\n\t\t\to = [];\n\t\t\tff = [];\n\t\t\tii = [];\n\t\t\t\n\t\t\tcopyOnWrite = true;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tclear ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function append (other:DrawCommandBuffer):DrawCommandBuffer {\n\t\t\n\t\tif (length == 0) {\n\t\t\t\n\t\t\tthis.types = other.types;\n\t\t\tthis.b = other.b;\n\t\t\tthis.i = other.i;\n\t\t\tthis.f = other.f;\n\t\t\tthis.o = other.o;\n\t\t\tthis.ff = other.ff;\n\t\t\tthis.ii = other.ii;\n\t\t\tthis.copyOnWrite = other.copyOnWrite = true;\n\t\t\t\n\t\t\treturn other;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar data = new DrawCommandReader (other);\n\t\t\n\t\tfor (type in other.types) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase BEGIN_BITMAP_FILL: var c = data.readBeginBitmapFill (); beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\tcase BEGIN_FILL: var c = data.readBeginFill (); beginFill (c.color, c.alpha);\n\t\t\t\tcase BEGIN_GRADIENT_FILL: var c = data.readBeginGradientFill (); beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\tcase CUBIC_CURVE_TO: var c = data.readCubicCurveTo (); cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\n\t\t\t\tcase CURVE_TO: var c = data.readCurveTo (); curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\n\t\t\t\tcase DRAW_CIRCLE: var c = data.readDrawCircle (); drawCircle (c.x, c.y, c.radius);\n\t\t\t\tcase DRAW_ELLIPSE: var c = data.readDrawEllipse (); drawEllipse (c.x, c.y, c.width, c.height);\n\t\t\t\tcase DRAW_RECT: var c = data.readDrawRect (); drawRect (c.x, c.y, c.width, c.height);\n\t\t\t\tcase DRAW_ROUND_RECT: var c = data.readDrawRoundRect (); drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\tcase DRAW_TRIANGLES: var c = data.readDrawTriangles (); drawTriangles (c.vertices, c.indices, c.uvtData, c.culling);\n\t\t\t\tcase END_FILL: var c = data.readEndFill (); endFill ();\n\t\t\t\tcase LINE_BITMAP_STYLE: var c = data.readLineBitmapStyle (); lineBitmapStyle (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\tcase LINE_GRADIENT_STYLE: var c = data.readLineGradientStyle (); lineGradientStyle (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\tcase LINE_STYLE: var c = data.readLineStyle (); lineStyle (c.thickness, c.color, c.alpha, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\n\t\t\t\tcase LINE_TO: var c = data.readLineTo (); lineTo (c.x, c.y);\n\t\t\t\tcase MOVE_TO: var c = data.readMoveTo (); moveTo (c.x, c.y);\n\t\t\t\tcase OVERRIDE_MATRIX: var c = data.readOverrideMatrix (); overrideMatrix (c.matrix);\n\t\t\t\tcase WINDING_EVEN_ODD: var c = data.readWindingEvenOdd (); windingEvenOdd ();\n\t\t\t\tcase WINDING_NON_ZERO: var c = data.readWindingNonZero (); windingNonZero ();\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tdata.destroy ();\n\t\treturn other;\n\t\t\n\t}\n\t\n\t\n\tpublic function beginBitmapFill (bitmap:BitmapData, matrix:Matrix, repeat:Bool, smooth:Bool):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (BEGIN_BITMAP_FILL);\n\t\to.push (bitmap);\n\t\to.push (matrix);\n\t\tb.push (repeat);\n\t\tb.push (smooth);\n\t\t\n\t}\n\t\n\tpublic function beginFill (color:Int, alpha:Float):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (BEGIN_FILL);\n\t\ti.push (color);\n\t\tf.push (alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic function beginGradientFill (type:GradientType, colors:Array<Int>, alphas:Array<Float>, ratios:Array<Int>, matrix:Matrix, spreadMethod:SpreadMethod, interpolationMethod:InterpolationMethod, focalPointRatio:Float):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (BEGIN_GRADIENT_FILL);\n\t\to.push (type);\n\t\tii.push (colors);\n\t\tff.push (alphas);\n\t\tii.push (ratios);\n\t\to.push (matrix);\n\t\to.push (spreadMethod);\n\t\to.push (interpolationMethod);\n\t\tf.push (focalPointRatio);\n\t\t\n\t}\n\t\n\t\n\tpublic function clear ():Void {\n\t\t\n\t\ttypes = empty.types;\n\t\t\n\t\tb = empty.b;\n\t\ti = empty.i;\n\t\tf = empty.f;\n\t\to = empty.o;\n\t\tff = empty.ff;\n\t\tii = empty.ii;\n\t\t\n\t\tcopyOnWrite = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function copy ():DrawCommandBuffer {\n\t\t\n\t\tvar copy = new DrawCommandBuffer ();\n\t\tcopy.append (this);\n\t\treturn copy;\n\t\t\n\t}\n\t\n\t\n\tpublic function cubicCurveTo (controlX1:Float, controlY1:Float, controlX2:Float, controlY2:Float, anchorX:Float, anchorY:Float):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (CUBIC_CURVE_TO);\n\t\tf.push (controlX1);\n\t\tf.push (controlY1);\n\t\tf.push (controlX2);\n\t\tf.push (controlY2);\n\t\tf.push (anchorX);\n\t\tf.push (anchorY);\n\t\t\n\t}\n\t\n\tpublic function curveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (CURVE_TO);\n\t\tf.push (controlX);\n\t\tf.push (controlY);\n\t\tf.push (anchorX);\n\t\tf.push (anchorY);\n\t\t\n\t}\n\t\n\t\n\tpublic function destroy ():Void {\n\t\t\n\t\tclear ();\n\t\t\n\t\ttypes = null;\n\t\t\n\t\tb = null;\n\t\ti = null;\n\t\tf = null;\n\t\to = null;\n\t\tff = null;\n\t\tii = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function drawCircle (x:Float, y:Float, radius:Float):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (DRAW_CIRCLE);\n\t\tf.push (x);\n\t\tf.push (y);\n\t\tf.push (radius);\n\t\t\n\t}\n\t\n\t\n\tpublic function drawEllipse (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (DRAW_ELLIPSE);\n\t\tf.push (x);\n\t\tf.push (y);\n\t\tf.push (width);\n\t\tf.push (height);\n\t\t\n\t}\n\t\n\t\n\tpublic function drawRect (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (DRAW_RECT);\n\t\tf.push (x);\n\t\tf.push (y);\n\t\tf.push (width);\n\t\tf.push (height);\n\t\t\n\t}\n\t\n\tpublic function drawRoundRect (x:Float, y:Float, width:Float, height:Float, ellipseWidth:Float, ellipseHeight:Null<Float>):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (DRAW_ROUND_RECT);\n\t\tf.push (x);\n\t\tf.push (y);\n\t\tf.push (width);\n\t\tf.push (height);\n\t\tf.push (ellipseWidth);\n\t\to.push (ellipseHeight);\n\t\t\n\t}\n\t\n\t\n\tpublic function drawTriangles (vertices:Vector<Float>, indices:Vector<Int>, uvtData:Vector<Float>, culling:TriangleCulling):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (DRAW_TRIANGLES);\n\t\to.push (vertices);\n\t\to.push (indices);\n\t\to.push (uvtData);\n\t\to.push (culling);\n\t\t\n\t}\n\t\n\t\n\tpublic function endFill ():Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (END_FILL);\n\t\t\n\t}\n\t\n\t\n\tpublic function lineBitmapStyle (bitmap:BitmapData, matrix:Matrix, repeat:Bool, smooth:Bool):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (LINE_BITMAP_STYLE);\n\t\to.push (bitmap);\n\t\to.push (matrix);\n\t\tb.push (repeat);\n\t\tb.push (smooth);\n\t\t\n\t}\n\t\n\t\n\tpublic function lineGradientStyle (type:GradientType, colors:Array<Int>, alphas:Array<Float>, ratios:Array<Int>, matrix:Matrix, spreadMethod:SpreadMethod, interpolationMethod:InterpolationMethod, focalPointRatio:Float):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (LINE_GRADIENT_STYLE);\n\t\to.push (type);\n\t\tii.push (colors);\n\t\tff.push (alphas);\n\t\tii.push (ratios);\n\t\to.push (matrix);\n\t\to.push (spreadMethod);\n\t\to.push (interpolationMethod);\n\t\tf.push (focalPointRatio);\n\t\t\n\t}\n\t\n\t\n\tpublic function lineStyle (thickness:Null<Float>, color:Int, alpha:Float, pixelHinting:Bool, scaleMode:LineScaleMode, caps:CapsStyle, joints:JointStyle, miterLimit:Float):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (LINE_STYLE);\n\t\to.push (thickness);\n\t\ti.push (color);\n\t\tf.push (alpha);\n\t\tb.push (pixelHinting);\n\t\to.push (scaleMode);\n\t\to.push (caps);\n\t\to.push (joints);\n\t\tf.push (miterLimit);\n\t\t\n\t}\n\t\n\t\n\tpublic function lineTo (x:Float, y:Float):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (LINE_TO);\n\t\tf.push (x);\n\t\tf.push (y);\n\t\t\n\t}\n\t\n\t\n\tpublic function moveTo (x:Float, y:Float):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (MOVE_TO);\n\t\tf.push (x);\n\t\tf.push (y);\n\t\t\n\t}\n\t\n\t\n\tprivate function prepareWrite ():Void {\n\t\t\n\t\tif (copyOnWrite) {\n\t\t\t\n\t\t\ttypes = types.copy ();\n\t\t\tb = b.copy ();\n\t\t\ti = i.copy ();\n\t\t\tf = f.copy ();\n\t\t\to = o.copy ();\n\t\t\tff = ff.copy ();\n\t\t\tii = ii.copy ();\n\t\t\t\n\t\t\tcopyOnWrite = false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function overrideMatrix (matrix:Matrix):Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (OVERRIDE_MATRIX);\n\t\to.push (matrix);\n\t\t\n\t}\n\t\n\t\n\tpublic function windingEvenOdd ():Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (WINDING_EVEN_ODD);\n\t\t\n\t}\n\t\n\t\n\tpublic function windingNonZero ():Void {\n\t\t\n\t\tprepareWrite ();\n\t\t\n\t\ttypes.push (WINDING_NON_ZERO);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_length ():Int {\n\t\t\n\t\treturn types.length;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer;\n\n\nimport openfl.display.BitmapData;\nimport openfl.display.CapsStyle;\nimport openfl.display.GradientType;\nimport openfl.display.GraphicsPathWinding;\nimport openfl.display.InterpolationMethod;\nimport openfl.display.JointStyle;\nimport openfl.display.LineScaleMode;\nimport openfl.display.Shader;\nimport openfl.display.SpreadMethod;\nimport openfl.display.TriangleCulling;\nimport openfl.geom.Matrix;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:allow(openfl._internal.renderer)\n\n\nclass DrawCommandReader {\n\t\n\t\n\tpublic var buffer:DrawCommandBuffer;\n\t\n\tprivate var bPos:Int;\n\tprivate var iiPos:Int;\n\tprivate var iPos:Int;\n\tprivate var ffPos:Int;\n\tprivate var fPos:Int;\n\tprivate var oPos:Int;\n\tprivate var prev:DrawCommandType;\n\tprivate var tsPos:Int;\n\t\n\t\n\tpublic function new (buffer:DrawCommandBuffer) {\n\t\t\n\t\tthis.buffer = buffer;\n\t\t\n\t\tbPos = iPos = fPos = oPos = ffPos = iiPos = tsPos = 0;\n\t\tprev = UNKNOWN;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function advance ():Void {\n\t\t\n\t\tswitch (prev) {\n\t\t\t\n\t\t\tcase BEGIN_BITMAP_FILL:\n\t\t\t\t\n\t\t\t\toPos += 2; //bitmap, matrix\n\t\t\t\tbPos += 2; //repeat, smooth\n\t\t\t\n\t\t\tcase BEGIN_FILL:\n\t\t\t\t\n\t\t\t\tiPos += 1; //color\n\t\t\t\tfPos += 1; //alpha\n\t\t\t\n\t\t\tcase BEGIN_GRADIENT_FILL:\n\t\t\t\t\n\t\t\t\toPos += 4;  //type, matrix, spreadMethod, interpolationMethod\n\t\t\t\tiiPos += 2; //colors, ratios\n\t\t\t\tffPos += 1; //alphas\n\t\t\t\tfPos += 1;  //focalPointRatio\n\t\t\t\n\t\t\tcase CUBIC_CURVE_TO:\n\t\t\t\t\n\t\t\t\tfPos += 6; //controlX1, controlY1, controlX2, controlY2, anchorX, anchorY\n\t\t\t\n\t\t\tcase CURVE_TO: \n\t\t\t\t\n\t\t\t\tfPos += 4; //controlX, controlY, anchorX, anchorY\n\t\t\t\n\t\t\tcase DRAW_CIRCLE:\n\t\t\t\t\n\t\t\t\tfPos += 3; //x, y, radius\n\t\t\t\n\t\t\tcase DRAW_ELLIPSE:\n\t\t\t\t\n\t\t\t\tfPos += 4; //x, y, width, height\n\t\t\t\n\t\t\tcase DRAW_RECT:\n\t\t\t\t\n\t\t\t\tfPos += 4; //x, y, width, height\n\t\t\t\n\t\t\tcase DRAW_ROUND_RECT:\n\t\t\t\t\n\t\t\t\tfPos += 5; //x, y, width, height, ellipseWidth\n\t\t\t\toPos += 1; //ellipseHeight\n\t\t\t\n\t\t\tcase DRAW_TRIANGLES:\n\t\t\t\t\n\t\t\t\toPos += 4; //vertices, indices, uvtData, culling\n\t\t\t\n\t\t\tcase END_FILL:\n\t\t\t\t\n\t\t\t\t//no parameters\n\t\t\t\n\t\t\tcase LINE_BITMAP_STYLE:\n\t\t\t\t\n\t\t\t\toPos += 2; //bitmap, matrix\n\t\t\t\tbPos += 2; //repeat, smooth\n\t\t\t\n\t\t\tcase LINE_GRADIENT_STYLE:\n\t\t\t\t\n\t\t\t\toPos += 4; //type, matrix, spreadMethod, interpolationMethod\n\t\t\t\tiiPos += 2; //colors, ratios\n\t\t\t\tffPos += 1; //alphas\n\t\t\t\tfPos += 1; //focalPointRatio\n\t\t\t\n\t\t\tcase LINE_STYLE:\n\t\t\t\t\n\t\t\t\toPos += 4; //thickness, scaleMode, caps, joints\n\t\t\t\tiPos += 1; //color\n\t\t\t\tfPos += 2; //alpha, miterLimit\n\t\t\t\tbPos += 1; //pixelHinting\n\t\t\t\n\t\t\tcase LINE_TO:\n\t\t\t\t\n\t\t\t\tfPos += 2; //x, y\n\t\t\t\n\t\t\tcase MOVE_TO:\n\t\t\t\t\n\t\t\t\tfPos += 2; //x, y\n\t\t\t\n\t\t\tcase OVERRIDE_MATRIX:\n\t\t\t\t\n\t\t\t\toPos += 1; //matrix\n\t\t\t\n\t\t\tcase WINDING_EVEN_ODD, WINDING_NON_ZERO:\n\t\t\t\t\n\t\t\t\t//no parameters\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate inline function bool (index:Int):Bool {\n\t\t\n\t\treturn buffer.b[bPos + index];\n\t\t\n\t}\n\t\n\t\n\tpublic function destroy ():Void {\n\t\t\n\t\tbuffer = null;\n\t\treset ();\n\t\t\n\t}\n\t\n\t\n\tprivate inline function fArr (index:Int):Array<Float> {\n\t\t\n\t\treturn buffer.ff[ffPos + index];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function float (index:Int):Float {\n\t\t\n\t\treturn buffer.f[fPos + index];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function iArr (index:Int):Array<Int> {\n\t\t\n\t\treturn buffer.ii[iiPos + index];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function int (index:Int):Int {\n\t\t\n\t\treturn buffer.i[iPos + index];\n\t\t\n\t}\n\t\n\t\n\tprivate inline function obj (index:Int):Dynamic {\n\t\t\n\t\treturn buffer.o[oPos + index];\n\t\t\n\t}\n\t\n\t\n\tpublic inline function readBeginBitmapFill ():BeginBitmapFillView { advance (); prev = BEGIN_BITMAP_FILL; return new BeginBitmapFillView (this); }\n\tpublic inline function readBeginFill ():BeginFillView { advance (); prev = BEGIN_FILL; return new BeginFillView (this); }\n\tpublic inline function readBeginGradientFill ():BeginGradientFillView { advance (); prev = BEGIN_GRADIENT_FILL; return new BeginGradientFillView (this); }\n\tpublic inline function readCubicCurveTo ():CubicCurveToView { advance (); prev = CUBIC_CURVE_TO; return new CubicCurveToView (this); }\n\tpublic inline function readCurveTo ():CurveToView { advance (); prev = CURVE_TO; return new CurveToView (this); }\n\tpublic inline function readDrawCircle ():DrawCircleView { advance (); prev = DRAW_CIRCLE; return new DrawCircleView (this); }\n\tpublic inline function readDrawEllipse ():DrawEllipseView { advance (); prev = DRAW_ELLIPSE; return new DrawEllipseView (this); }\n\tpublic inline function readDrawRect ():DrawRectView { advance (); prev = DRAW_RECT; return new DrawRectView (this); }\n\tpublic inline function readDrawRoundRect ():DrawRoundRectView { advance (); prev = DRAW_ROUND_RECT; return new DrawRoundRectView (this); }\n\tpublic inline function readDrawTriangles ():DrawTrianglesView { advance (); prev = DRAW_TRIANGLES; return new DrawTrianglesView (this); }\n\tpublic inline function readEndFill ():EndFillView { advance (); prev = END_FILL; return new EndFillView (this); }\n\tpublic inline function readLineBitmapStyle ():LineBitmapStyleView { advance (); prev = LINE_BITMAP_STYLE; return new LineBitmapStyleView (this); }\n\tpublic inline function readLineGradientStyle ():LineGradientStyleView { advance (); prev = LINE_GRADIENT_STYLE; return new LineGradientStyleView (this); }\n\tpublic inline function readLineStyle ():LineStyleView { advance (); prev = LINE_STYLE; return new LineStyleView (this); }\n\tpublic inline function readLineTo ():LineToView { advance (); prev = LINE_TO; return new LineToView (this); }\n\tpublic inline function readMoveTo ():MoveToView { advance (); prev = MOVE_TO; return new MoveToView (this); }\n\tpublic inline function readOverrideMatrix ():OverrideMatrixView { advance (); prev = OVERRIDE_MATRIX; return new OverrideMatrixView (this); }\n\tpublic inline function readWindingEvenOdd ():WindingEvenOddView { advance (); prev = WINDING_EVEN_ODD; return new WindingEvenOddView (this); }\n\tpublic inline function readWindingNonZero ():WindingNonZeroView { advance (); prev = WINDING_NON_ZERO; return new WindingNonZeroView (this); }\n\t\n\t\n\tpublic function reset ():Void {\n\t\t\n\t\tbPos = iPos = fPos = oPos = ffPos = iiPos = tsPos = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function skip (type:DrawCommandType):Void {\n\t\t\n\t\tadvance ();\n\t\tprev = type;\n\t\t\n\t}\n\t\n\t\n}\n\n\nabstract BeginBitmapFillView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var bitmap (get, never):BitmapData; private inline function get_bitmap ():BitmapData { return cast this.obj (0); }\n\tpublic var matrix (get, never):Matrix; private inline function get_matrix ():Matrix { return cast this.obj (1); }\n\tpublic var repeat (get, never):Bool; private inline function get_repeat ():Bool { return this.bool (0); }\n\tpublic var smooth (get, never):Bool; private inline function get_smooth ():Bool { return this.bool (1); }\n\t\n}\n\n\nabstract BeginFillView (DrawCommandReader) {\n\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var color (get, never):Int; private inline function get_color ():Int { return this.int (0); }\n\tpublic var alpha (get, never):Float; private inline function get_alpha ():Float { return this.float (0); }\n\t\n}\n\n\nabstract BeginGradientFillView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var type (get, never):GradientType; private inline function get_type ():GradientType { return cast this.obj (0); }\n\tpublic var colors (get, never):Array<Int>; private inline function get_colors ():Array<Int> { return cast this.iArr (0); }\n\tpublic var alphas (get, never):Array<Float>; private inline function get_alphas ():Array<Float> { return cast this.fArr (0); }\n\tpublic var ratios (get, never):Array<Int>; private inline function get_ratios ():Array<Int> { return cast this.iArr (1); }\n\tpublic var matrix (get, never):Matrix; private inline function get_matrix ():Matrix { return cast this.obj (1); }\n\tpublic var spreadMethod (get, never):SpreadMethod; private inline function get_spreadMethod ():SpreadMethod { return cast this.obj (2); }\n\tpublic var interpolationMethod (get, never):InterpolationMethod; private inline function get_interpolationMethod ():InterpolationMethod { return cast this.obj (3); }\n\tpublic var focalPointRatio (get, never):Float; private inline function get_focalPointRatio ():Float { return cast this.float (0); }\n\t\n}\n\n\nabstract CubicCurveToView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var controlX1 (get, never):Float; private inline function get_controlX1 ():Float { return this.float (0); }\n\tpublic var controlY1 (get, never):Float; private inline function get_controlY1 ():Float { return this.float (1); }\n\tpublic var controlX2 (get, never):Float; private inline function get_controlX2 ():Float { return this.float (2); }\n\tpublic var controlY2 (get, never):Float; private inline function get_controlY2 ():Float { return this.float (3); }\n\tpublic var anchorX (get, never):Float; private inline function get_anchorX ():Float { return this.float (4); }\n\tpublic var anchorY (get, never):Float; private inline function get_anchorY ():Float { return this.float (5); }\n\t\n}\n\n\nabstract CurveToView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var controlX (get, never):Float; private inline function get_controlX ():Float { return this.float (0); }\n\tpublic var controlY (get, never):Float; private inline function get_controlY ():Float { return this.float (1); }\n\tpublic var anchorX (get, never):Float; private inline function get_anchorX ():Float { return this.float (2); }\n\tpublic var anchorY (get, never):Float; private inline function get_anchorY ():Float { return this.float (3); }\n\t\n}\n\n\nabstract DrawCircleView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\n\tpublic var radius(get, never):Float; private inline function get_radius ():Float { return this.float (2); }\n\t\n}\n\n\nabstract DrawEllipseView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\n\tpublic var width (get, never):Float; private inline function get_width ():Float { return this.float (2); }\n\tpublic var height(get, never):Float; private inline function get_height ():Float { return this.float (3); }\n\t\n}\n\n\nabstract DrawRectView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\n\tpublic var width (get, never):Float; private inline function get_width ():Float { return this.float (2); }\n\tpublic var height(get, never):Float; private inline function get_height ():Float { return this.float (3); }\n\t\n}\n\n\nabstract DrawRoundRectView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\n\tpublic var width (get, never):Float; private inline function get_width ():Float { return this.float (2); }\n\tpublic var height(get, never):Float; private inline function get_height ():Float { return this.float (3); }\n\tpublic var ellipseWidth (get, never):Float; private inline function get_ellipseWidth ():Float { return this.float (4); }\n\tpublic var ellipseHeight (get, never):Null<Float>; private inline function get_ellipseHeight ():Null<Float> { return this.obj (0); }\n\t\n}\n\n\nabstract DrawTrianglesView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var vertices (get, never):Vector<Float>; private inline function get_vertices ():Vector<Float> { return cast this.obj (0); }\n\tpublic var indices (get, never):Vector<Int>; private inline function get_indices ():Vector<Int> { return cast this.obj (1); }\n\tpublic var uvtData (get, never):Vector<Float>; private inline function get_uvtData ():Vector<Float> { return cast this.obj (2); }\n\tpublic var culling (get, never):TriangleCulling; private inline function get_culling ():TriangleCulling { return cast this.obj (3); }\n\t\n}\n\n\nabstract EndFillView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\t\n}\n\n\nabstract LineBitmapStyleView (DrawCommandReader) { \n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var bitmap (get, never):BitmapData; private inline function get_bitmap ():BitmapData { return cast this.obj (0); }\n\tpublic var matrix (get, never):Matrix; private inline function get_matrix ():Matrix { return cast this.obj (1); }\n\tpublic var repeat (get, never):Bool; private inline function get_repeat ():Bool { return cast this.bool (0); }\n\tpublic var smooth (get, never):Bool; private inline function get_smooth ():Bool { return cast this.bool (1); }\n\t\n}\n\n\nabstract LineGradientStyleView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var type (get, never):GradientType; private inline function get_type ():GradientType { return cast this.obj (0); }\n\tpublic var colors (get, never):Array<Int>; private inline function get_colors ():Array<Int> { return cast this.iArr (0); }\n\tpublic var alphas (get, never):Array<Float>; private inline function get_alphas ():Array<Float> { return cast this.fArr (0); }\n\tpublic var ratios (get, never):Array<Int>; private inline function get_ratios ():Array<Int> { return cast this.iArr (1); }\n\tpublic var matrix (get, never):Matrix; private inline function get_matrix ():Matrix { return cast this.obj (1); }\n\tpublic var spreadMethod (get, never):SpreadMethod; private inline function get_spreadMethod ():SpreadMethod { return cast this.obj (2); }\n\tpublic var interpolationMethod (get, never):InterpolationMethod; private inline function get_interpolationMethod ():InterpolationMethod { return cast this.obj (3); }\n\tpublic var focalPointRatio (get, never):Float; private inline function get_focalPointRatio ():Float { return cast this.float (0); }\n\t\n}\n\n\nabstract LineStyleView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var thickness (get, never):Null<Float>; private inline function get_thickness ():Null<Float> { return cast this.obj (0); }\n\tpublic var color (get, never):Int; private inline function get_color ():Int { return cast this.int (0); }\n\tpublic var alpha (get, never):Float; private inline function get_alpha ():Float { return cast this.float (0); }\n\tpublic var pixelHinting (get, never):Bool; private inline function get_pixelHinting ():Bool { return cast this.bool (0); }\n\tpublic var scaleMode (get, never):LineScaleMode; private inline function get_scaleMode ():LineScaleMode { return cast this.obj (1); }\n\tpublic var caps (get, never):CapsStyle; private inline function get_caps ():CapsStyle { return cast this.obj (2); }\n\tpublic var joints (get, never):JointStyle; private inline function get_joints ():JointStyle { return cast this.obj (3); }\n\tpublic var miterLimit (get, never):Float; private inline function get_miterLimit ():Float { return cast this.float (1); }\n\t\n}\n\n\nabstract LineToView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\n\t\n}\n\n\nabstract MoveToView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var x (get, never):Float; private inline function get_x ():Float { return this.float (0); }\n\tpublic var y (get, never):Float; private inline function get_y ():Float { return this.float (1); }\n\t\n}\n\n\nabstract OverrideMatrixView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\tpublic var matrix (get, never):Matrix; private inline function get_matrix ():Matrix { return cast this.obj (0); }\n\t\n}\n\n\nabstract WindingEvenOddView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\t\n}\n\n\nabstract WindingNonZeroView (DrawCommandReader) {\n\t\n\tpublic inline function new (d:DrawCommandReader) { this = d; }\n\t\n}","package openfl._internal.renderer; #if (!display && !flash)\n\n\nimport lime.graphics.CairoRenderContext;\nimport lime.graphics.CanvasRenderContext;\nimport lime.graphics.DOMRenderContext;\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.opengl.GLFramebuffer;\n//import openfl._internal.renderer.opengl.utils.BlendModeManager;\n//import openfl._internal.renderer.opengl.utils.FilterManager;\n//import openfl._internal.renderer.opengl.utils.ShaderManager;\n//import openfl._internal.renderer.opengl.utils.SpriteBatch;\n//import openfl._internal.renderer.opengl.utils.StencilManager;\nimport openfl.display.BlendMode;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass RenderSession {\n\t\n\t\n\tpublic var allowSmoothing:Bool;\n\tpublic var cairo:CairoRenderContext;\n\tpublic var clearRenderDirty:Bool;\n\tpublic var context:CanvasRenderContext;\n\tpublic var element:DOMRenderContext;\n\tpublic var gl:GLRenderContext;\n\t// public var lockTransform:Bool;\n\tpublic var renderer:AbstractRenderer;\n\tpublic var roundPixels:Bool;\n\tpublic var transformProperty:String;\n\tpublic var transformOriginProperty:String;\n\tpublic var upscaled:Bool;\n\tpublic var vendorPrefix:String;\n\tpublic var projectionMatrix:Matrix;\n\tpublic var z:Int;\n\t\n\tpublic var drawCount:Int;\n\tpublic var currentBlendMode:BlendMode;\n\tpublic var activeTextures:Int = 0;\n\t\n\t//public var shaderManager:ShaderManager;\n\tpublic var blendModeManager:AbstractBlendModeManager;\n\tpublic var filterManager:AbstractFilterManager;\n\tpublic var maskManager:AbstractMaskManager;\n\tpublic var shaderManager:AbstractShaderManager;\n\t//public var filterManager:FilterManager;\n\t//public var blendModeManager:BlendModeManager;\n\t//public var spriteBatch:SpriteBatch;\n\t//public var stencilManager:StencilManager;\n\t//public var defaultFramebuffer:GLFramebuffer;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tallowSmoothing = true;\n\t\tclearRenderDirty = false;\n\t\t//maskManager = new MaskManager (this);\n\t\t\n\t}\n\t\n\t\n}\n\n#else\n\nclass RenderSession {}\n\n#end","package openfl._internal.renderer.cairo;\n\n\nimport lime.graphics.cairo.CairoFilter;\nimport lime.graphics.cairo.CairoFormat;\nimport lime.graphics.cairo.CairoPattern;\nimport lime.graphics.cairo.CairoSurface;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.Bitmap;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime.graphics.ImageBuffer)\n@:access(openfl.display.Bitmap)\n@:access(openfl.display.BitmapData)\n@:access(openfl.geom.Matrix)\n\n\nclass CairoBitmap {\n\t\n\t\n\tpublic static inline function render (bitmap:Bitmap, renderSession:RenderSession):Void {\n\t\t\n\t\tif (!bitmap.__renderable || bitmap.__worldAlpha <= 0) return;\n\t\t\n\t\tvar cairo = renderSession.cairo;\n\t\t\n\t\tif (bitmap.__bitmapData != null && bitmap.__bitmapData.__isValid) {\n\t\t\t\n\t\t\trenderSession.blendModeManager.setBlendMode (bitmap.__worldBlendMode);\n\t\t\trenderSession.maskManager.pushObject (bitmap);\n\t\t\t\n\t\t\tvar transform = bitmap.__renderTransform;\n\t\t\t\n\t\t\tif (renderSession.roundPixels) {\n\t\t\t\t\n\t\t\t\tvar matrix = transform.__toMatrix3 ();\n\t\t\t\tmatrix.tx = Math.round (matrix.tx);\n\t\t\t\tmatrix.ty = Math.round (matrix.ty);\n\t\t\t\tcairo.matrix = matrix;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcairo.matrix = transform.__toMatrix3 ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar surface = bitmap.__bitmapData.getSurface ();\n\t\t\t\n\t\t\tif (surface != null) {\n\t\t\t\t\n\t\t\t\tvar pattern = CairoPattern.createForSurface (surface);\n\t\t\t\tpattern.filter = (renderSession.allowSmoothing && bitmap.smoothing) ? CairoFilter.GOOD : CairoFilter.NEAREST;\n\t\t\t\t\n\t\t\t\tcairo.source = pattern;\n\t\t\t\t\n\t\t\t\tif (bitmap.__worldAlpha == 1) {\n\t\t\t\t\t\n\t\t\t\t\tcairo.paint ();\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tcairo.paintWithAlpha (bitmap.__worldAlpha);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\trenderSession.maskManager.popObject (bitmap);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n","package openfl._internal.renderer.cairo;\n\n\nimport lime.math.color.ARGB;\nimport openfl.display.DisplayObject;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.geom.Matrix)\n\n\nclass CairoDisplayObject {\n\t\n\t\n\tpublic static function render (displayObject:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\t#if lime_cairo\n\t\tif (displayObject.opaqueBackground == null && displayObject.__graphics == null) return;\n\t\t\n\t\tif (!displayObject.__renderable || displayObject.__worldAlpha <= 0) return;\n\t\t\n\t\tif (displayObject.opaqueBackground != null && !displayObject.__cacheBitmapRender && displayObject.width > 0 && displayObject.height > 0) {\n\t\t\t\n\t\t\trenderSession.blendModeManager.setBlendMode (displayObject.__worldBlendMode);\n\t\t\trenderSession.maskManager.pushObject (displayObject);\n\t\t\t\n\t\t\tvar cairo = renderSession.cairo;\n\t\t\t\n\t\t\tif (renderSession.roundPixels) {\n\t\t\t\t\n\t\t\t\tvar matrix = displayObject.__renderTransform.__toMatrix3 ();\n\t\t\t\tmatrix.tx = Math.round (matrix.tx);\n\t\t\t\tmatrix.ty = Math.round (matrix.ty);\n\t\t\t\tcairo.matrix = matrix;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcairo.matrix = displayObject.__renderTransform.__toMatrix3 ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar color:ARGB = (displayObject.opaqueBackground:ARGB);\n\t\t\tcairo.setSourceRGB (color.r / 0xFF, color.g / 0xFF, color.b / 0xFF);\n\t\t\tcairo.rectangle (0, 0, displayObject.width, displayObject.height);\n\t\t\tcairo.fill ();\n\t\t\t\n\t\t\trenderSession.maskManager.popObject (displayObject);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (displayObject.__graphics != null) {\n\t\t\t\n\t\t\tCairoShape.render (displayObject, renderSession);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.cairo;\n\n\nimport lime.graphics.cairo.Cairo;\nimport lime.graphics.cairo.CairoExtend;\nimport lime.graphics.cairo.CairoFillRule;\nimport lime.graphics.cairo.CairoFilter;\nimport lime.graphics.cairo.CairoImageSurface;\nimport lime.graphics.cairo.CairoPattern;\nimport lime.graphics.cairo.CairoSurface;\nimport lime.math.Matrix3;\nimport lime.math.Vector2;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.BitmapData;\nimport openfl.display.CapsStyle;\nimport openfl.display.DisplayObject;\nimport openfl._internal.renderer.DrawCommandBuffer;\nimport openfl._internal.renderer.DrawCommandReader;\nimport openfl._internal.renderer.DrawCommandType;\nimport openfl.display.GradientType;\nimport openfl.display.Graphics;\nimport openfl.display.InterpolationMethod;\nimport openfl.display.SpreadMethod;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.BitmapData)\n@:access(openfl.display.Graphics)\n@:access(openfl.geom.Matrix)\n@:access(openfl.geom.Point)\n\n\nclass CairoGraphics {\n\t\n\t\n\tprivate static var SIN45 = 0.70710678118654752440084436210485;\n\tprivate static var TAN22 = 0.4142135623730950488016887242097;\n\t\n\tprivate static var allowSmoothing:Bool;\n\tprivate static var bitmapFill:BitmapData;\n\tprivate static var bitmapRepeat:Bool;\n\tprivate static var bounds:Rectangle;\n\tprivate static var cairo:Cairo;\n\tprivate static var fillCommands:DrawCommandBuffer = new DrawCommandBuffer ();\n\tprivate static var fillPattern:CairoPattern;\n\tprivate static var fillPatternMatrix:Matrix;\n\tprivate static var graphics:Graphics;\n\tprivate static var hasFill:Bool;\n\tprivate static var hasStroke:Bool;\n\tprivate static var hitTesting:Bool;\n\tprivate static var inversePendingMatrix:Matrix;\n\tprivate static var pendingMatrix:Matrix;\n\tprivate static var strokeCommands:DrawCommandBuffer = new DrawCommandBuffer ();\n\tprivate static var strokePattern:CairoPattern;\n\t\n\t\n\tprivate static function closePath (strokeBefore:Bool = false):Void {\n\t\t\n\t\tif (strokePattern == null) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!strokeBefore) {\n\t\t\t\n\t\t\tcairo.closePath ();\n\t\t\t\n\t\t}\n\t\t\n\t\tcairo.source = strokePattern;\n\t\tif (!hitTesting) cairo.strokePreserve ();\n\t\t\n\t\tif (strokeBefore) {\n\t\t\t\n\t\t\tcairo.closePath ();\n\t\t\t\n\t\t}\n\t\t\n\t\tcairo.newPath ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function createGradientPattern (type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix, spreadMethod:SpreadMethod, interpolationMethod:InterpolationMethod, focalPointRatio:Float):CairoPattern {\n\t\t\n\t\tvar pattern:CairoPattern = null, point = null, point2 = null, releaseMatrix = false;\n\t\t\n\t\tif (matrix == null) {\n\t\t\t\n\t\t\tmatrix = Matrix.__pool.get ();\n\t\t\treleaseMatrix = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase RADIAL:\n\t\t\t\t\n\t\t\t\tpoint = Point.__pool.get ();\n\t\t\t\tpoint.setTo (1638.4, 0);\n\t\t\t\tmatrix.__transformPoint (point);\n\t\t\t\t\n\t\t\t\tvar x = matrix.tx + graphics.__bounds.x;\n\t\t\t\tvar y = matrix.ty + graphics.__bounds.y;\n\t\t\t\t\n\t\t\t\tpattern = CairoPattern.createRadial (x, y, 0, x, y, Math.abs ((point.x - matrix.tx) / 2));\n\t\t\t\n\t\t\tcase LINEAR:\n\t\t\t\t\n\t\t\t\tpoint = Point.__pool.get ();\n\t\t\t\tpoint.setTo (-819.2, 0);\n\t\t\t\tmatrix.__transformPoint (point);\n\t\t\t\t\n\t\t\t\tpoint2 = Point.__pool.get ();\n\t\t\t\tpoint2.setTo (819.2, 0);\n\t\t\t\tmatrix.__transformPoint (point2);\n\t\t\t\t\n\t\t\t\tpoint.x += graphics.__bounds.x;\n\t\t\t\tpoint2.x += graphics.__bounds.x;\n\t\t\t\tpoint.y += graphics.__bounds.y;\n\t\t\t\tpoint2.y += graphics.__bounds.y;\n\t\t\t\t\n\t\t\t\tpattern = CairoPattern.createLinear (point.x, point.y, point2.x, point2.y);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar rgb, alpha, r, g, b, ratio;\n\t\t\n\t\tfor (i in 0...colors.length) {\n\t\t\t\n\t\t\trgb = colors[i];\n\t\t\talpha = alphas[i];\n\t\t\tr = ((rgb & 0xFF0000) >>> 16) / 0xFF;\n\t\t\tg = ((rgb & 0x00FF00) >>> 8) / 0xFF;\n\t\t\tb = (rgb & 0x0000FF) / 0xFF;\n\t\t\t\n\t\t\tratio = ratios[i] / 0xFF;\n\t\t\tif (ratio < 0) ratio = 0;\n\t\t\tif (ratio > 1) ratio = 1;\n\t\t\t\n\t\t\tpattern.addColorStopRGBA (ratio, r, g, b, alpha);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (point != null) Point.__pool.release (point);\n\t\tif (point2 != null) Point.__pool.release (point2);\n\t\tif (releaseMatrix) Matrix.__pool.release (matrix);\n\t\t\n\t\tvar mat = pattern.matrix;\n\t\t\n\t\tmat.tx = bounds.x; \n\t\tmat.ty = bounds.y; \n\t\t\n\t\tpattern.matrix = mat;\n\t\t\n\t\treturn pattern;\n\t\t\n\t}\n\t\n\t\n\tprivate static function createImagePattern (bitmapFill:BitmapData, matrix:Matrix, bitmapRepeat:Bool, smooth:Bool):CairoPattern {\n\t\t\n\t\tvar pattern = CairoPattern.createForSurface (bitmapFill.getSurface ());\n\t\tpattern.filter = (smooth && allowSmoothing) ? CairoFilter.GOOD : CairoFilter.NEAREST;\n\t\t\n\t\tif (bitmapRepeat) {\n\t\t\t\n\t\t\tpattern.extend = CairoExtend.REPEAT;\n\t\t\t\n\t\t}\n\t\t\n\t\tfillPatternMatrix = matrix;\n\t\t\n\t\treturn pattern;\n\t\t\n\t}\n\t\n\t\n\tprivate static function drawRoundRect (x:Float, y:Float, width:Float, height:Float, ellipseWidth:Float, ellipseHeight:Null<Float>):Void {\n\t\t\n\t\tif (ellipseHeight == null) ellipseHeight = ellipseWidth;\n\t\t\n\t\tellipseWidth *= 0.5;\n\t\tellipseHeight *= 0.5;\n\t\t\n\t\tif (ellipseWidth > width / 2) ellipseWidth = width / 2;\n\t\tif (ellipseHeight > height / 2) ellipseHeight = height / 2;\n\t\t\n\t\tvar xe = x + width,\n\t\tye = y + height,\n\t\tcx1 = -ellipseWidth + (ellipseWidth * SIN45),\n\t\tcx2 = -ellipseWidth + (ellipseWidth * TAN22),\n\t\tcy1 = -ellipseHeight + (ellipseHeight * SIN45),\n\t\tcy2 = -ellipseHeight + (ellipseHeight * TAN22);\n\t\t\n\t\tcairo.moveTo (xe, ye - ellipseHeight);\n\t\tquadraticCurveTo (xe, ye + cy2, xe + cx1, ye + cy1);\n\t\tquadraticCurveTo (xe + cx2, ye, xe - ellipseWidth, ye);\n\t\tcairo.lineTo (x + ellipseWidth, ye);\n\t\tquadraticCurveTo (x - cx2, ye, x - cx1, ye + cy1);\n\t\tquadraticCurveTo (x, ye + cy2, x, ye - ellipseHeight);\n\t\tcairo.lineTo (x, y + ellipseHeight);\n\t\tquadraticCurveTo (x, y - cy2, x - cx1, y - cy1);\n\t\tquadraticCurveTo (x - cx2, y, x + ellipseWidth, y);\n\t\tcairo.lineTo (xe - ellipseWidth, y);\n\t\tquadraticCurveTo (xe + cx2, y, xe + cx1, y - cy1);\n\t\tquadraticCurveTo (xe, y - cy2, xe, y + ellipseHeight);\n\t\tcairo.lineTo (xe, ye - ellipseHeight);\n\t\t\n\t}\n\t\n\t\n\tprivate static function endFill ():Void {\n\t\t\n\t\tcairo.newPath ();\n\t\tplayCommands (fillCommands, false);\n\t\tfillCommands.clear ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function endStroke ():Void {\n\t\t\n\t\tcairo.newPath ();\n\t\tplayCommands (strokeCommands, true);\n\t\tcairo.closePath ();\n\t\tstrokeCommands.clear ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function hitTest (graphics:Graphics, x:Float, y:Float):Bool {\n\t\t\n\t\t#if lime_cairo\n\t\tCairoGraphics.graphics = graphics;\n\t\tbounds = graphics.__bounds;\n\t\t\n\t\tif (graphics.__commands.length == 0 || bounds == null || bounds.width == 0 || bounds.height == 0 || !bounds.contains (x, y)) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\thitTesting = true;\n\t\t\t\n\t\t\tx -= bounds.x;\n\t\t\ty -= bounds.y;\n\t\t\t\n\t\t\tif (graphics.__cairo == null) {\n\t\t\t\t\n\t\t\t\tvar bitmap = new BitmapData (Math.floor (bounds.width), Math.floor (bounds.height), true, 0);\n\t\t\t\tvar surface = bitmap.getSurface ();\n\t\t\t\tgraphics.__cairo = new Cairo (surface);\n\t\t\t\t//graphics.__bitmap = bitmap;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcairo = graphics.__cairo;\n\t\t\t\n\t\t\tfillCommands.clear ();\n\t\t\tstrokeCommands.clear ();\n\t\t\t\n\t\t\thasFill = false;\n\t\t\thasStroke = false;\n\t\t\t\n\t\t\tfillPattern = null;\n\t\t\tstrokePattern = null;\n\t\t\t\n\t\t\tcairo.newPath ();\n\t\t\tcairo.fillRule = EVEN_ODD;\n\t\t\t\n\t\t\tvar data = new DrawCommandReader (graphics.__commands);\n\t\t\t\n\t\t\tfor (type in graphics.__commands.types) {\n\t\t\t\t\n\t\t\t\tswitch (type) {\n\t\t\t\t\t\n\t\t\t\t\tcase CUBIC_CURVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\n\t\t\t\t\t\tfillCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\n\t\t\t\t\t\tstrokeCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\n\t\t\t\t\t\n\t\t\t\t\tcase CURVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readCurveTo ();\n\t\t\t\t\t\tfillCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\n\t\t\t\t\t\tstrokeCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineTo ();\n\t\t\t\t\t\tfillCommands.lineTo (c.x, c.y);\n\t\t\t\t\t\tstrokeCommands.lineTo (c.x, c.y);\n\t\t\t\t\t\n\t\t\t\t\tcase MOVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readMoveTo ();\n\t\t\t\t\t\tfillCommands.moveTo (c.x, c.y);\n\t\t\t\t\t\tstrokeCommands.moveTo (c.x, c.y);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_STYLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineStyle ();\n\t\t\t\t\t\tstrokeCommands.lineStyle (c.thickness, c.color, 1, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_GRADIENT_STYLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineGradientStyle ();\n\t\t\t\t\t\tstrokeCommands.lineGradientStyle (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_BITMAP_STYLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineBitmapStyle ();\n\t\t\t\t\t\tstrokeCommands.lineBitmapStyle (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\n\t\t\t\t\tcase END_FILL:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.readEndFill ();\n\t\t\t\t\t\tendFill ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasFill && cairo.inFill (x, y)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.destroy ();\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tendStroke ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasStroke && cairo.inStroke (x, y)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.destroy ();\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\thasFill = false;\n\t\t\t\t\t\tbitmapFill = null;\n\t\t\t\t\t\n\t\t\t\t\tcase BEGIN_BITMAP_FILL, BEGIN_FILL, BEGIN_GRADIENT_FILL:\n\t\t\t\t\t\t\n\t\t\t\t\t\tendFill ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasFill && cairo.inFill (x, y)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.destroy ();\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tendStroke ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasStroke && cairo.inStroke (x, y)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.destroy ();\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (type == BEGIN_BITMAP_FILL) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readBeginBitmapFill ();\n\t\t\t\t\t\t\tfillCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\t\tstrokeCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else if (type == BEGIN_GRADIENT_FILL) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readBeginGradientFill ();\n\t\t\t\t\t\t\tfillCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\t\tstrokeCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readBeginFill ();\n\t\t\t\t\t\t\tfillCommands.beginFill (c.color, 1);\n\t\t\t\t\t\t\tstrokeCommands.beginFill (c.color, 1);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_CIRCLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawCircle ();\n\t\t\t\t\t\tfillCommands.drawCircle (c.x, c.y, c.radius);\n\t\t\t\t\t\tstrokeCommands.drawCircle (c.x, c.y, c.radius);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_ELLIPSE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawEllipse ();\n\t\t\t\t\t\tfillCommands.drawEllipse (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\tstrokeCommands.drawEllipse (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_RECT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawRect ();\n\t\t\t\t\t\tfillCommands.drawRect (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\tstrokeCommands.drawRect (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_ROUND_RECT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\n\t\t\t\t\t\tfillCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\t\tstrokeCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\t\n\t\t\t\t\tcase WINDING_EVEN_ODD:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.readWindingEvenOdd ();\n\t\t\t\t\t\tcairo.fillRule = EVEN_ODD;\n\t\t\t\t\t\n\t\t\t\t\tcase WINDING_NON_ZERO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.readWindingNonZero ();\n\t\t\t\t\t\tcairo.fillRule = WINDING;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.skip (type);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar hitTest = false;\n\t\t\t\n\t\t\tif (fillCommands.length > 0) {\n\t\t\t\t\n\t\t\t\tendFill ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hasFill && cairo.inFill (x, y)) {\n\t\t\t\t\n\t\t\t\thitTest = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (strokeCommands.length > 0) {\n\t\t\t\t\n\t\t\t\tendStroke ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hasStroke && cairo.inStroke (x, y)) {\n\t\t\t\t\n\t\t\t\thitTest = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tdata.destroy ();\n\t\t\t\n\t\t\treturn hitTest;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate static inline function isCCW (x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {\n\t\t\n\t\treturn ((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1)) < 0;\n\t\t\n\t}\n\t\n\t\n\tprivate static function normalizeUVT (uvt:Vector<Float>, skipT:Bool = false):{ max:Float, uvt:Vector<Float> } {\n\t\t\n\t\tvar max:Float = Math.NEGATIVE_INFINITY;\n\t\tvar tmp = Math.NEGATIVE_INFINITY;\n\t\tvar len = uvt.length;\n\t\t\n\t\tfor (t in 1...len + 1) {\n\t\t\t\n\t\t\tif (skipT && t % 3 == 0) {\n\t\t\t\t\n\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\ttmp = uvt[t - 1];\n\t\t\t\n\t\t\tif (max < tmp) {\n\t\t\t\t\n\t\t\t\tmax = tmp;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif ( !skipT ) {\n\t\t\t\n\t\t\treturn { max: max, uvt: uvt };\n\t\t\t\n\t\t}\n\t\t\n\t\tvar result = new Vector<Float> ();\n\t\t\n\t\tfor (t in 1...len + 1) {\n\t\t\t\n\t\t\tif (skipT && t % 3 == 0) {\n\t\t\t\t\n\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tresult.push (uvt[t - 1]);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn { max: max, uvt: result };\n\t\t\n\t}\n\t\n\t\n\tprivate static function playCommands (commands:DrawCommandBuffer, stroke:Bool = false):Void {\n\t\t\n\t\tif (commands.length == 0) return;\n\t\t\n\t\tbounds = graphics.__bounds;\n\t\t\n\t\tvar offsetX = bounds.x;\n\t\tvar offsetY = bounds.y;\n\t\t\n\t\tvar positionX = 0.0;\n\t\tvar positionY = 0.0;\n\t\t\n\t\tvar closeGap = false;\n\t\tvar startX = 0.0;\n\t\tvar startY = 0.0;\n\t\tvar setStart = false;\n\t\t\n\t\tcairo.fillRule = EVEN_ODD;\n\t\tcairo.antialias = SUBPIXEL;\n\t\t\n\t\tvar hasPath:Bool = false;\n\t\t\n\t\tvar data = new DrawCommandReader (commands);\n\t\t\n\t\tvar x, y, width, height, kappa = .5522848, ox, oy, xe, ye, xm, ym, r, g, b;\n\t\t\n\t\tfor (type in commands.types) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase CUBIC_CURVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readCubicCurveTo ();\n\t\t\t\t\thasPath = true;\n\t\t\t\t\tcairo.curveTo (c.controlX1 - offsetX, c.controlY1 - offsetY, c.controlX2 - offsetX, c.controlY2 - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\n\t\t\t\t\n\t\t\t\tcase CURVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readCurveTo ();\n\t\t\t\t\thasPath = true;\n\t\t\t\t\tquadraticCurveTo (c.controlX - offsetX, c.controlY - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\n\t\t\t\t\n\t\t\t\tcase DRAW_CIRCLE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawCircle ();\n\t\t\t\t\thasPath = true;\n\t\t\t\t\tcairo.moveTo (c.x - offsetX + c.radius, c.y - offsetY);\n\t\t\t\t\tcairo.arc (c.x - offsetX, c.y - offsetY, c.radius, 0, Math.PI * 2);\n\t\t\t\t\n\t\t\t\tcase DRAW_RECT:\n\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawRect ();\n\t\t\t\t\thasPath = true;\n\t\t\t\t\tcairo.rectangle (c.x - offsetX, c.y - offsetY, c.width, c.height);\n\t\t\t\t\n\t\t\t\tcase DRAW_ELLIPSE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawEllipse ();\n\t\t\t\t\thasPath = true;\n\t\t\t\t\t\n\t\t\t\t\tx = c.x;\n\t\t\t\t\ty = c.y;\n\t\t\t\t\twidth = c.width;\n\t\t\t\t\theight = c.height;\n\t\t\t\t\t\n\t\t\t\t\tx -= offsetX;\n\t\t\t\t\ty -= offsetY;\n\t\t\t\t\t\n\t\t\t\t\tox = (width / 2) * kappa; // control point offset horizontal\n\t\t\t\t\toy = (height / 2) * kappa; // control point offset vertical\n\t\t\t\t\txe = x + width; // x-end\n\t\t\t\t\tye = y + height; // y-end\n\t\t\t\t\txm = x + width / 2; // x-middle\n\t\t\t\t\tym = y + height / 2; // y-middle\n\t\t\t\t\t\n\t\t\t\t\tcairo.moveTo (x, ym);\n\t\t\t\t\tcairo.curveTo (x, ym - oy, xm - ox, y, xm, y);\n\t\t\t\t\tcairo.curveTo (xm + ox, y, xe, ym - oy, xe, ym);\n\t\t\t\t\tcairo.curveTo (xe, ym + oy, xm + ox, ye, xm, ye);\n\t\t\t\t\tcairo.curveTo (xm - ox, ye, x, ym + oy, x, ym);\n\t\t\t\t\n\t\t\t\tcase DRAW_ROUND_RECT:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawRoundRect ();\n\t\t\t\t\thasPath = true;\n\t\t\t\t\tdrawRoundRect (c.x - offsetX, c.y - offsetY, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\n\t\t\t\tcase LINE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineTo ();\n\t\t\t\t\thasPath = true;\n\t\t\t\t\tcairo.lineTo (c.x - offsetX, c.y - offsetY);\n\t\t\t\t\t\n\t\t\t\t\tpositionX = c.x;\n\t\t\t\t\tpositionY = c.y;\n\t\t\t\t\t\n\t\t\t\t\tif (positionX == startX && positionY == startY) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcloseGap = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase MOVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readMoveTo ();\n\t\t\t\t\tcairo.moveTo (c.x - offsetX, c.y - offsetY);\n\t\t\t\t\t\n\t\t\t\t\tpositionX = c.x;\n\t\t\t\t\tpositionY = c.y;\n\t\t\t\t\t\n\t\t\t\t\tif (setStart) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcloseGap = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tstartX = c.x;\n\t\t\t\t\tstartY = c.y;\n\t\t\t\t\tsetStart = true;\n\t\t\t\t\n\t\t\t\tcase LINE_STYLE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineStyle ();\n\t\t\t\t\tif (stroke && hasStroke) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tclosePath (true);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcairo.moveTo (positionX - offsetX, positionY - offsetY);\n\t\t\t\t\t\n\t\t\t\t\tif (c.thickness == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\thasStroke = false;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\thasStroke = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcairo.lineWidth = (c.thickness > 0 ? c.thickness : 1);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (c.joints == null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcairo.lineJoin = ROUND;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcairo.lineJoin = switch (c.joints) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase MITER: MITER;\n\t\t\t\t\t\t\t\tcase BEVEL: BEVEL;\n\t\t\t\t\t\t\t\tdefault: ROUND;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (c.caps == null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcairo.lineCap = ROUND;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcairo.lineCap = switch (c.caps) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase NONE: BUTT;\n\t\t\t\t\t\t\t\tcase SQUARE: SQUARE;\n\t\t\t\t\t\t\t\tdefault: ROUND;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcairo.miterLimit = c.miterLimit;\n\t\t\t\t\t\t\n\t\t\t\t\t\tr = ((c.color & 0xFF0000) >>> 16) / 0xFF;\n\t\t\t\t\t\tg = ((c.color & 0x00FF00) >>> 8) / 0xFF;\n\t\t\t\t\t\tb = (c.color & 0x0000FF) / 0xFF;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (c.alpha == 1) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokePattern = CairoPattern.createRGB (r, g, b);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokePattern = CairoPattern.createRGBA (r, g, b, c.alpha);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase LINE_GRADIENT_STYLE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineGradientStyle ();\n\t\t\t\t\tif (stroke && hasStroke) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tclosePath ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcairo.moveTo (positionX - offsetX, positionY - offsetY);\n\t\t\t\t\tstrokePattern = createGradientPattern (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\n\t\t\t\t\thasStroke = true;\n\t\t\t\t\n\t\t\t\tcase LINE_BITMAP_STYLE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineBitmapStyle ();\n\t\t\t\t\tif (stroke && hasStroke) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tclosePath ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcairo.moveTo (positionX - offsetX, positionY - offsetY);\n\t\t\t\t\tstrokePattern = createImagePattern (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\n\t\t\t\t\thasStroke = true;\n\t\t\t\t\n\t\t\t\tcase BEGIN_BITMAP_FILL:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readBeginBitmapFill ();\n\t\t\t\t\tfillPattern = createImagePattern (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\n\t\t\t\t\tbitmapFill = c.bitmap;\n\t\t\t\t\tbitmapRepeat = c.repeat;\n\t\t\t\t\t\n\t\t\t\t\thasFill = true;\n\t\t\t\t\n\t\t\t\tcase BEGIN_FILL:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readBeginFill ();\n\t\t\t\t\tif (c.alpha < 0.005) {\n\t\t\t\t\t\t\n\t\t\t\t\t\thasFill = false;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (fillPattern != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfillPatternMatrix = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfillPattern = CairoPattern.createRGBA (((c.color & 0xFF0000) >>> 16) / 0xFF, ((c.color & 0x00FF00) >>> 8) / 0xFF, (c.color & 0x0000FF) / 0xFF, c.alpha);\n\t\t\t\t\t\thasFill = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbitmapFill = null;\n\t\t\t\t\n\t\t\t\tcase BEGIN_GRADIENT_FILL:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readBeginGradientFill ();\n\t\t\t\t\tif (fillPattern != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfillPatternMatrix = null;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfillPattern = createGradientPattern (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\n\t\t\t\t\thasFill = true;\n\t\t\t\t\tbitmapFill = null;\n\t\t\t\t\n\t\t\t\tcase DRAW_TRIANGLES:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawTriangles ();\n\t\t\t\t\tvar v = c.vertices;\n\t\t\t\t\tvar ind = c.indices;\n\t\t\t\t\tvar uvt:Vector<Float> = c.uvtData;\n\t\t\t\t\tvar colorFill = bitmapFill == null;\n\t\t\t\t\t\n\t\t\t\t\tif (colorFill && uvt != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar width = 0;\n\t\t\t\t\tvar height = 0;\n\t\t\t\t\tvar currentMatrix = graphics.__renderTransform.__toMatrix3 ();\n\t\t\t\t\t\n\t\t\t\t\tif (!colorFill) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t//TODO move this to Graphics?\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (uvt == null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tuvt = new Vector<Float> ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (i in 0...(Std.int (v.length / 2))) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tuvt.push (v[i * 2] - offsetX / bitmapFill.width);\n\t\t\t\t\t\t\t\tuvt.push (v[i * 2 + 1] - offsetY / bitmapFill.height);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar skipT = c.uvtData.length != v.length;\n\t\t\t\t\t\tvar normalizedUVT = normalizeUVT (uvt, skipT);\n\t\t\t\t\t\tvar maxUVT = normalizedUVT.max;\n\t\t\t\t\t\tuvt = normalizedUVT.uvt;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (maxUVT > 1) {\n\t\t\t\t\t\t\twidth = Std.int (bounds.width);\n\t\t\t\t\t\t\theight = Std.int (bounds.height);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twidth = bitmapFill.width;\n\t\t\t\t\t\t\theight = bitmapFill.height;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar i = 0;\n\t\t\t\t\tvar l = ind.length;\n\t\t\t\t\t\n\t\t\t\t\tvar a_:Int, b_:Int, c_:Int;\n\t\t\t\t\tvar iax:Int, iay:Int, ibx:Int, iby:Int, icx:Int, icy:Int;\n\t\t\t\t\tvar x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float;\n\t\t\t\t\tvar uvx1:Float, uvy1:Float, uvx2:Float, uvy2:Float, uvx3:Float, uvy3:Float;\n\t\t\t\t\tvar denom:Float;\n\t\t\t\t\tvar t1:Float, t2:Float, t3:Float, t4:Float;\n\t\t\t\t\tvar dx:Float, dy:Float;\n\t\t\t\t\t\n\t\t\t\t\tvar matrix = new Matrix3 ();\n\t\t\t\t\t\n\t\t\t\t\tcairo.antialias = NONE;\n\t\t\t\t\t\n\t\t\t\t\twhile (i < l) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ta_ = i;\n\t\t\t\t\t\tb_ = i + 1;\n\t\t\t\t\t\tc_ = i + 2;\n\t\t\t\t\t\t\n\t\t\t\t\t\tiax = ind[a_] * 2;\n\t\t\t\t\t\tiay = ind[a_] * 2 + 1;\n\t\t\t\t\t\tibx = ind[b_] * 2;\n\t\t\t\t\t\tiby = ind[b_] * 2 + 1;\n\t\t\t\t\t\ticx = ind[c_] * 2;\n\t\t\t\t\t\ticy = ind[c_] * 2 + 1;\n\t\t\t\t\t\t\n\t\t\t\t\t\tx1 = v[iax] - offsetX;\n\t\t\t\t\t\ty1 = v[iay] - offsetY;\n\t\t\t\t\t\tx2 = v[ibx] - offsetX;\n\t\t\t\t\t\ty2 = v[iby] - offsetY;\n\t\t\t\t\t\tx3 = v[icx] - offsetX;\n\t\t\t\t\t\ty3 = v[icy] - offsetY;\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch (c.culling) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase POSITIVE:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (!isCCW (x1, y1, x2, y2, x3, y3)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase NEGATIVE:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (isCCW (x1, y1, x2, y2, x3, y3)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (colorFill) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcairo.newPath ();\n\t\t\t\t\t\t\tcairo.moveTo (x1, y1);\n\t\t\t\t\t\t\tcairo.lineTo (x2, y2);\n\t\t\t\t\t\t\tcairo.lineTo (x3, y3);\n\t\t\t\t\t\t\tcairo.closePath ();\n\t\t\t\t\t\t\tif (!hitTesting) cairo.fillPreserve ();\n\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} \n\t\t\t\t\t\t\n\t\t\t\t\t\tcairo.matrix = graphics.__renderTransform.__toMatrix3 ();\n\t\t\t\t\t\t//cairo.identityMatrix();\n\t\t\t\t\t\t//cairo.resetClip();\n\t\t\t\t\t\t\n\t\t\t\t\t\tcairo.newPath ();\n\t\t\t\t\t\tcairo.moveTo (x1, y1);\n\t\t\t\t\t\tcairo.lineTo (x2, y2);\n\t\t\t\t\t\tcairo.lineTo (x3, y3);\n\t\t\t\t\t\tcairo.closePath ();\n\t\t\t\t\t\t//cairo.clip ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tuvx1 = uvt[iax] * width;\n\t\t\t\t\t\tuvx2 = uvt[ibx] * width;\n\t\t\t\t\t\tuvx3 = uvt[icx] * width;\n\t\t\t\t\t\tuvy1 = uvt[iay] * height;\n\t\t\t\t\t\tuvy2 = uvt[iby] * height;\n\t\t\t\t\t\tuvy3 = uvt[icy] * height;\n\t\t\t\t\t\t\n\t\t\t\t\t\tdenom = uvx1 * (uvy3 - uvy2) - uvx2 * uvy3 + uvx3 * uvy2 + (uvx2 - uvx3) * uvy1;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (denom == 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tx1*=currentMatrix.a;\n\t\t\t\t\t\tx2*=currentMatrix.a;\n\t\t\t\t\t\tx3*=currentMatrix.a;\n\t\t\t\t\t\ty1*=currentMatrix.d;\n\t\t\t\t\t\ty2*=currentMatrix.d;\n\t\t\t\t\t\ty3*=currentMatrix.d;\n\t\t\t\t\t\t\n\t\t\t\t\t\tt1 = - (uvy1 * (x3 - x2) - uvy2 * x3 + uvy3 * x2 + (uvy2 - uvy3) * x1) / denom;\n\t\t\t\t\t\tt2 = (uvy2 * y3 + uvy1 * (y2 - y3) - uvy3 * y2 + (uvy3 - uvy2) * y1) / denom;\n\t\t\t\t\t\tt3 = (uvx1 * (x3 - x2) - uvx2 * x3 + uvx3 * x2 + (uvx2 - uvx3) * x1) / denom;\n\t\t\t\t\t\tt4 = - (uvx2 * y3 + uvx1 * (y2 - y3) - uvx3 * y2 + (uvx3 - uvx2) * y1) / denom;\n\t\t\t\t\t\tdx = (uvx1 * (uvy3 * x2 - uvy2 * x3) + uvy1 * (uvx2 * x3 - uvx3 * x2) + (uvx3 * uvy2 - uvx2 * uvy3) * x1) / denom;\n\t\t\t\t\t\tdy = (uvx1 * (uvy3 * y2 - uvy2 * y3) + uvy1 * (uvx2 * y3 - uvx3 * y2) + (uvx3 * uvy2 - uvx2 * uvy3) * y1) / denom;\n\t\t\t\t\t\t\n\t\t\t\t\t\tmatrix.setTo (t1, t2, t3, t4, dx, dy);\n\t\t\t\t\t\tcairo.matrix = matrix;\n\t\t\t\t\t\tcairo.source = fillPattern;\n\t\t\t\t\t\tif (!hitTesting) cairo.fill ();\n\t\t\t\t\t\t\n\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase WINDING_EVEN_ODD:\n\t\t\t\t\t\n\t\t\t\t\tdata.readWindingEvenOdd ();\n\t\t\t\t\tcairo.fillRule = EVEN_ODD;\n\t\t\t\t\n\t\t\t\tcase WINDING_NON_ZERO:\n\t\t\t\t\t\n\t\t\t\t\tdata.readWindingNonZero ();\n\t\t\t\t\tcairo.fillRule = WINDING;\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\tdata.skip (type);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tdata.destroy ();\n\t\t\n\t\tif (hasPath) {\n\t\t\t\n\t\t\tif (stroke && hasStroke) {\n\t\t\t\t\n\t\t\t\tif (hasFill && closeGap) {\n\t\t\t\t\t\n\t\t\t\t\tcairo.lineTo (startX - offsetX, startY - offsetY);\n\t\t\t\t\tclosePath (false);\n\t\t\t\t\t\n\t\t\t\t} else if (closeGap && positionX == startX && positionY == startY) {\n\t\t\t\t\t\n\t\t\t\t\tclosePath (false);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcairo.source = strokePattern;\n\t\t\t\tif (!hitTesting) cairo.strokePreserve ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!stroke && hasFill) {\n\t\t\t\t\n\t\t\t\tcairo.translate (-bounds.x, -bounds.y);\n\t\t\t\t\n\t\t\t\tif (fillPatternMatrix != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar matrix = Matrix.__pool.get ();\n\t\t\t\t\tmatrix.copyFrom (fillPatternMatrix);\n\t\t\t\t\tmatrix.invert ();\n\t\t\t\t\t\n\t\t\t\t\tif (pendingMatrix != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tmatrix.concat (pendingMatrix);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfillPattern.matrix = matrix.__toMatrix3 ();\n\t\t\t\t\t\n\t\t\t\t\tMatrix.__pool.release (matrix);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcairo.source = fillPattern;\n\t\t\t\t\n\t\t\t\tif (pendingMatrix != null) {\n\t\t\t\t\t\n\t\t\t\t\tcairo.transform (pendingMatrix.__toMatrix3 ());\n\t\t\t\t\tif (!hitTesting) cairo.fillPreserve ();\n\t\t\t\t\tcairo.transform (inversePendingMatrix.__toMatrix3 ());\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (!hitTesting) cairo.fillPreserve ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcairo.translate (bounds.x, bounds.y);\n\t\t\t\tcairo.closePath ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t\n\t\n\tprivate static function quadraticCurveTo (cx:Float, cy:Float, x:Float, y:Float):Void {\n\t\t\n\t\tvar current = null;\n\t\t\n\t\tif (!cairo.hasCurrentPoint) {\n\t\t\t\n\t\t\tcairo.moveTo (cx, cy);\n\t\t\tcurrent = new Vector2 (cx, cy);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tcurrent = cairo.currentPoint;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar cx1 = current.x + ((2 / 3) * (cx - current.x));\n\t\tvar cy1 = current.y + ((2 / 3) * (cy - current.y));\n\t\tvar cx2 = x + ((2 / 3) * (cx - x));\n\t\tvar cy2 = y + ((2 / 3) * (cy - y));\n\t\t\n\t\tcairo.curveTo (cx1, cy1, cx2, cy2, x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic static function render (graphics:Graphics, renderSession:RenderSession, parentTransform:Matrix):Void {\n\t\t\n\t\t#if lime_cairo\n\t\t\n\t\tCairoGraphics.graphics = graphics;\n\t\tCairoGraphics.allowSmoothing = renderSession.allowSmoothing;\n\t\tgraphics.__update ();\n\t\t\n\t\tif (!graphics.__dirty || graphics.__managed) return;\n\t\t\n\t\tbounds = graphics.__bounds;\n\t\t\n\t\tvar width = graphics.__width;\n\t\tvar height = graphics.__height;\n\t\t\n\t\tif (!graphics.__visible || graphics.__commands.length == 0 || bounds == null || width < 1 || height < 1) {\n\t\t\t\n\t\t\tgraphics.__cairo = null;\n\t\t\tgraphics.__bitmap = null;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\thitTesting = false;\n\t\t\t\n\t\t\tif (graphics.__cairo != null) {\n\t\t\t\t\n\t\t\t\tvar surface:CairoImageSurface = cast graphics.__cairo.target;\n\t\t\t\t\n\t\t\t\tif (width != surface.width || height != surface.height) {\n\t\t\t\t\t\n\t\t\t\t\tgraphics.__cairo = null;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (graphics.__cairo == null || graphics.__bitmap == null) {\n\t\t\t\t\n\t\t\t\tvar bitmap = new BitmapData (width, height, true, 0);\n\t\t\t\tvar surface = bitmap.getSurface ();\n\t\t\t\tgraphics.__cairo = new Cairo (surface);\n\t\t\t\tgraphics.__bitmap = bitmap;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcairo = graphics.__cairo;\n\t\t\tcairo.matrix = graphics.__renderTransform.__toMatrix3 ();\n\t\t\t\n\t\t\tcairo.operator = CLEAR;\n\t\t\tcairo.paint ();\n\t\t\tcairo.operator = OVER;\n\t\t\t\n\t\t\tfillCommands.clear ();\n\t\t\tstrokeCommands.clear ();\n\t\t\t\n\t\t\thasFill = false;\n\t\t\thasStroke = false;\n\t\t\t\n\t\t\tfillPattern = null;\n\t\t\tstrokePattern = null;\n\t\t\t\n\t\t\tvar hasLineStyle = false;\n\t\t\tvar initStrokeX = 0.0;\n\t\t\tvar initStrokeY = 0.0;\n\t\t\t\n\t\t\tvar data = new DrawCommandReader (graphics.__commands);\n\t\t\t\n\t\t\tfor (type in graphics.__commands.types) {\n\t\t\t\t\n\t\t\t\tswitch (type) {\n\t\t\t\t\t\n\t\t\t\t\tcase CUBIC_CURVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\n\t\t\t\t\t\tfillCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokeCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tinitStrokeX = c.anchorX;\n\t\t\t\t\t\t\tinitStrokeY = c.anchorY;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase CURVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readCurveTo ();\n\t\t\t\t\t\tfillCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokeCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tinitStrokeX = c.anchorX;\n\t\t\t\t\t\t\tinitStrokeY = c.anchorY;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineTo ();\n\t\t\t\t\t\tfillCommands.lineTo (c.x, c.y);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokeCommands.lineTo (c.x, c.y);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tinitStrokeX = c.x;\n\t\t\t\t\t\t\tinitStrokeY = c.y;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase MOVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readMoveTo ();\n\t\t\t\t\t\tfillCommands.moveTo (c.x, c.y);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokeCommands.moveTo (c.x, c.y);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tinitStrokeX = c.x;\n\t\t\t\t\t\t\tinitStrokeY = c.y;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase END_FILL:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.readEndFill ();\n\t\t\t\t\t\tendFill ();\n\t\t\t\t\t\tendStroke ();\n\t\t\t\t\t\thasFill = false;\n\t\t\t\t\t\thasLineStyle = false;\n\t\t\t\t\t\tbitmapFill = null;\n\t\t\t\t\t\tinitStrokeX = 0;\n\t\t\t\t\t\tinitStrokeY = 0;\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_GRADIENT_STYLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineGradientStyle ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!hasLineStyle && (initStrokeX != 0 || initStrokeY != 0)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokeCommands.moveTo (initStrokeX, initStrokeY);\n\t\t\t\t\t\t\tinitStrokeX = 0;\n\t\t\t\t\t\t\tinitStrokeY = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\thasLineStyle = true;\n\t\t\t\t\t\tstrokeCommands.lineGradientStyle (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_BITMAP_STYLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineBitmapStyle ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!hasLineStyle && (initStrokeX != 0 || initStrokeY != 0)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokeCommands.moveTo (initStrokeX, initStrokeY);\n\t\t\t\t\t\t\tinitStrokeX = 0;\n\t\t\t\t\t\t\tinitStrokeY = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\thasLineStyle = true;\n\t\t\t\t\t\tstrokeCommands.lineBitmapStyle (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_STYLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineStyle ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!hasLineStyle && c.thickness != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (initStrokeX != 0 || initStrokeY != 0) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstrokeCommands.moveTo (initStrokeX, initStrokeY);\n\t\t\t\t\t\t\t\tinitStrokeX = 0;\n\t\t\t\t\t\t\t\tinitStrokeY = 0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\thasLineStyle = c.thickness != null;\n\t\t\t\t\t\tstrokeCommands.lineStyle (c.thickness, c.color, c.alpha, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\n\t\t\t\t\t\n\t\t\t\t\tcase BEGIN_BITMAP_FILL, BEGIN_FILL, BEGIN_GRADIENT_FILL:\n\t\t\t\t\t\t\n\t\t\t\t\t\tendFill ();\n\t\t\t\t\t\tendStroke ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (type == BEGIN_BITMAP_FILL) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readBeginBitmapFill ();\n\t\t\t\t\t\t\tfillCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\t\tstrokeCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else if (type == BEGIN_GRADIENT_FILL) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readBeginGradientFill ();\n\t\t\t\t\t\t\tfillCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\t\tstrokeCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readBeginFill ();\n\t\t\t\t\t\t\tfillCommands.beginFill (c.color, c.alpha);\n\t\t\t\t\t\t\tstrokeCommands.beginFill (c.color, c.alpha);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_CIRCLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawCircle ();\n\t\t\t\t\t\tfillCommands.drawCircle (c.x, c.y, c.radius);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokeCommands.drawCircle (c.x, c.y, c.radius);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_ELLIPSE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawEllipse ();\n\t\t\t\t\t\tfillCommands.drawEllipse (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokeCommands.drawEllipse (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_RECT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawRect ();\n\t\t\t\t\t\tfillCommands.drawRect (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokeCommands.drawRect (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_ROUND_RECT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\n\t\t\t\t\t\tfillCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstrokeCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_TRIANGLES:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawTriangles ();\n\t\t\t\t\t\tfillCommands.drawTriangles (c.vertices, c.indices, c.uvtData, c.culling);\n\t\t\t\t\t\n\t\t\t\t\tcase WINDING_EVEN_ODD:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.readWindingEvenOdd ();\n\t\t\t\t\t\tfillCommands.windingEvenOdd ();\n\t\t\t\t\t\n\t\t\t\t\tcase WINDING_NON_ZERO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.readWindingNonZero ();\n\t\t\t\t\t\tfillCommands.windingNonZero ();\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.skip (type);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (fillCommands.length > 0) {\n\t\t\t\t\n\t\t\t\tendFill ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (strokeCommands.length > 0) {\n\t\t\t\t\n\t\t\t\tendStroke ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tdata.destroy ();\n\t\t\t\n\t\t\tgraphics.__bitmap.image.dirty = true;\n\t\t\tgraphics.__bitmap.image.version++;\n\t\t\t\n\t\t}\n\t\t\n\t\tgraphics.__dirty = false;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function renderMask (graphics:Graphics, renderSession:RenderSession) {\n\t\t\n\t\tif (graphics.__commands.length != 0) {\n\t\t\t\n\t\t\tvar cairo = renderSession.cairo;\n\t\t\t\n\t\t\tvar positionX = 0.0;\n\t\t\tvar positionY = 0.0;\n\t\t\t\n\t\t\tvar offsetX = 0;\n\t\t\tvar offsetY = 0;\n\t\t\t\n\t\t\tvar data = new DrawCommandReader(graphics.__commands);\n\t\t\t\n\t\t\tvar x, y, width, height, kappa = .5522848, ox, oy, xe, ye, xm, ym;\n\t\t\t\n\t\t\tfor (type in graphics.__commands.types) {\n\t\t\t\t\n\t\t\t\tswitch (type) {\n\t\t\t\t\t\n\t\t\t\t\tcase CUBIC_CURVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\n\t\t\t\t\t\tcairo.curveTo (c.controlX1 - offsetX, c.controlY1 - offsetY, c.controlX2 - offsetX, c.controlY2 - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\n\t\t\t\t\t\tpositionX = c.anchorX;\n\t\t\t\t\t\tpositionY = c.anchorX;\n\t\t\t\t\t\n\t\t\t\t\tcase CURVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readCurveTo ();\n\t\t\t\t\t\tquadraticCurveTo (c.controlX - offsetX, c.controlY - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\n\t\t\t\t\t\tpositionX = c.anchorX;\n\t\t\t\t\t\tpositionY = c.anchorY;\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_CIRCLE:\n\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawCircle ();\n\t\t\t\t\t\tcairo.arc (c.x - offsetX, c.y - offsetY, c.radius, 0, Math.PI * 2);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_ELLIPSE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawEllipse ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tx = c.x;\n\t\t\t\t\t\ty = c.y;\n\t\t\t\t\t\twidth = c.width;\n\t\t\t\t\t\theight = c.height;\n\t\t\t\t\t\t\n\t\t\t\t\t\tx -= offsetX;\n\t\t\t\t\t\ty -= offsetY;\n\t\t\t\t\t\t\n\t\t\t\t\t\tox = (width / 2) * kappa; // control point offset horizontal\n\t\t\t\t\t\toy = (height / 2) * kappa; // control point offset vertical\n\t\t\t\t\t\txe = x + width; // x-end\n\t\t\t\t\t\tye = y + height; // y-end\n\t\t\t\t\t\txm = x + width / 2; // x-middle\n\t\t\t\t\t\tym = y + height / 2; // y-middle\n\t\t\t\t\t\t\n\t\t\t\t\t\t//closePath (false);\n\t\t\t\t\t\t//beginPath ();\n\t\t\t\t\t\tcairo.moveTo (x, ym);\n\t\t\t\t\t\tcairo.curveTo (x, ym - oy, xm - ox, y, xm, y);\n\t\t\t\t\t\tcairo.curveTo (xm + ox, y, xe, ym - oy, xe, ym);\n\t\t\t\t\t\tcairo.curveTo (xe, ym + oy, xm + ox, ye, xm, ye);\n\t\t\t\t\t\tcairo.curveTo (xm - ox, ye, x, ym + oy, x, ym);\n\t\t\t\t\t\t//closePath (false);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_RECT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawRect ();\n\t\t\t\t\t\tcairo.rectangle (c.x - offsetX, c.y - offsetY, c.width, c.height);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_ROUND_RECT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\n\t\t\t\t\t\tdrawRoundRect (c.x - offsetX, c.y - offsetY, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineTo ();\n\t\t\t\t\t\tcairo.lineTo (c.x - offsetX, c.y - offsetY);\n\t\t\t\t\t\tpositionX = c.x;\n\t\t\t\t\t\tpositionY = c.y;\n\t\t\t\t\t\t\n\t\t\t\t\tcase MOVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readMoveTo ();\n\t\t\t\t\t\tcairo.moveTo (c.x - offsetX, c.y - offsetY);\n\t\t\t\t\t\tpositionX = c.x;\n\t\t\t\t\t\tpositionY = c.y;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.skip (type);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tdata.destroy();\n\t\t}\n\t}\n\t\n\t\n}\n","package openfl._internal.renderer.cairo;\n\n\nimport lime.graphics.cairo.Cairo;\nimport openfl._internal.renderer.AbstractRenderer;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.DisplayObject;\nimport openfl.display.Stage;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.Graphics)\n@:access(openfl.display.Stage)\n@:access(openfl.display.Stage3D)\n@:allow(openfl.display.Stage)\n\n\nclass CairoRenderer extends AbstractRenderer {\n\t\n\t\n\tprivate var cairo:Cairo;\n\t\n\t\n\tpublic function new (stage:Stage, cairo:Cairo) {\n\t\t\n\t\tsuper (stage);\n\t\t\n\t\t#if lime_cairo\n\t\tthis.cairo = cairo;\n\t\t\n\t\trenderSession = new RenderSession ();\n\t\trenderSession.clearRenderDirty = true;\n\t\trenderSession.cairo = cairo;\n\t\t//renderSession.roundPixels = true;\n\t\trenderSession.renderer = this;\n\t\trenderSession.maskManager = new CairoMaskManager (renderSession);\n\t\trenderSession.blendModeManager = new CairoBlendModeManager (renderSession);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic override function clear ():Void {\n\t\t\n\t\tcairo.identityMatrix ();\n\t\t\n\t\tif (stage.__clearBeforeRender) {\n\t\t\t\n\t\t\tcairo.setSourceRGB (stage.__colorSplit[0], stage.__colorSplit[1], stage.__colorSplit[2]);\n\t\t\tcairo.paint ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function render ():Void {\n\t\t\n\t\trenderSession.allowSmoothing = (stage.quality != LOW);\n\t\t\n\t\tstage.__renderCairo (renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic override function renderStage3D ():Void {\n\t\t\n\t\tfor (stage3D in stage.stage3Ds) {\n\t\t\t\n\t\t\tstage3D.__renderCairo (stage, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.cairo;\n\n\nimport lime.graphics.cairo.Cairo;\nimport lime.graphics.cairo.CairoAntialias;\nimport lime.graphics.cairo.CairoFontFace;\nimport lime.graphics.cairo.CairoFontOptions;\nimport lime.graphics.cairo.CairoFTFontFace;\nimport lime.graphics.cairo.CairoGlyph;\nimport lime.graphics.cairo.CairoHintMetrics;\nimport lime.graphics.cairo.CairoHintStyle;\nimport lime.graphics.cairo.CairoImageSurface;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.text.TextEngine;\nimport openfl.display.BitmapData;\nimport openfl.filters.GlowFilter;\nimport openfl.geom.Matrix;\nimport openfl.geom.Rectangle;\nimport openfl.text.TextField;\nimport openfl.text.TextFormat;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.BitmapData)\n@:access(openfl.display.Graphics)\n@:access(openfl.geom.Matrix)\n@:access(openfl.text.TextField)\n\n\nclass CairoTextField {\n\t\n\t\n\tpublic static function render (textField:TextField, renderSession:RenderSession, transform:Matrix) {\n\t\t\n\t\t#if lime_cairo\n\t\t\n\t\tvar textEngine = textField.__textEngine;\n\t\tvar bounds = textEngine.bounds;\n\t\tvar graphics = textField.__graphics;\n\t\tvar cairo = graphics.__cairo;\n\t\t\n\t\tif (textField.__dirty) {\n\t\t\t\n\t\t\ttextField.__updateLayout ();\n\t\t\t\n\t\t\tif (graphics.__bounds == null) {\n\t\t\t\t\n\t\t\t\tgraphics.__bounds = new Rectangle ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgraphics.__bounds.copyFrom (bounds);\n\t\t\t\n\t\t\t//graphics.__bounds.x += textField.__offsetX;\n\t\t\t//graphics.__bounds.y += textField.__offsetY;\n\t\t\t\n\t\t}\n\t\t\n\t\tgraphics.__update ();\n\t\t\n\t\tvar width = graphics.__width;\n\t\tvar height = graphics.__height;\n\t\t\n\t\tvar renderable = (textEngine.border || textEngine.background || textEngine.text != null);\n\t\t\n\t\tif (cairo != null) {\n\t\t\t\n\t\t\t//var surface:CairoImageSurface = cast cairo.target;\n\t\t\tvar surface = graphics.__bitmap.getSurface ();\n\t\t\t\n\t\t\tif (!renderable || (graphics.__dirty && (width != surface.width || height != surface.height))) {\n\t\t\t\t\n\t\t\t\tgraphics.__cairo = null;\n\t\t\t\tgraphics.__bitmap = null;\n\t\t\t\tgraphics.__visible = false;\n\t\t\t\tcairo = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (width <= 0 || height <= 0 || (!textField.__dirty && !graphics.__dirty) || !renderable) {\n\t\t\t\n\t\t\ttextField.__dirty = false;\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (cairo == null) {\n\t\t\t\n\t\t\tvar bitmap = new BitmapData (width, height, true, 0);\n\t\t\tvar surface = bitmap.getSurface ();\n\t\t\tgraphics.__cairo = new Cairo (surface);\n\t\t\tgraphics.__visible = true;\n\t\t\tgraphics.__managed = true;\n\t\t\t\n\t\t\tgraphics.__bitmap = bitmap;\n\t\t\t\n\t\t\tcairo = graphics.__cairo;\n\t\t\t\n\t\t\tvar options = new CairoFontOptions ();\n\t\t\t\n\t\t\tif (textEngine.antiAliasType == ADVANCED && textEngine.sharpness == 400) {\n\t\t\t\t\n\t\t\t\toptions.hintStyle = CairoHintStyle.NONE;\n\t\t\t\toptions.hintMetrics = CairoHintMetrics.OFF;\n\t\t\t\toptions.antialias = CairoAntialias.NONE;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\toptions.hintStyle = CairoHintStyle.SLIGHT;\n\t\t\t\toptions.hintMetrics = CairoHintMetrics.OFF;\n\t\t\t\toptions.antialias = CairoAntialias.GOOD;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcairo.fontOptions = options;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (true || renderSession.roundPixels) {\n\t\t\t\n\t\t\tvar matrix = graphics.__renderTransform.__toMatrix3 ();\n\t\t\tmatrix.tx = Math.round (matrix.tx);\n\t\t\tmatrix.ty = Math.round (matrix.ty);\n\t\t\tcairo.matrix = matrix;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tcairo.matrix = graphics.__renderTransform.__toMatrix3 ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (textEngine.border) {\n\t\t\t\n\t\t\tcairo.rectangle (0.5, 0.5, Std.int (bounds.width - 1), Std.int (bounds.height - 1));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tcairo.rectangle (0, 0, bounds.width, bounds.height);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!textEngine.background) {\n\t\t\t\n\t\t\tcairo.operator = CLEAR;\n\t\t\tcairo.paint ();\n\t\t\tcairo.operator = OVER;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar color = textEngine.backgroundColor;\n\t\t\tvar r = ((color & 0xFF0000) >>> 16) / 0xFF;\n\t\t\tvar g = ((color & 0x00FF00) >>> 8) / 0xFF;\n\t\t\tvar b = (color & 0x0000FF) / 0xFF;\n\t\t\t\n\t\t\tcairo.setSourceRGB (r, g, b);\n\t\t\tcairo.fillPreserve ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (textEngine.border) {\n\t\t\t\n\t\t\tvar color = textEngine.borderColor;\n\t\t\tvar r = ((color & 0xFF0000) >>> 16) / 0xFF;\n\t\t\tvar g = ((color & 0x00FF00) >>> 8) / 0xFF;\n\t\t\tvar b = (color & 0x0000FF) / 0xFF;\n\t\t\t\n\t\t\tcairo.setSourceRGB (r, g, b);\n\t\t\tcairo.lineWidth = 1;\n\t\t\tcairo.stroke ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (textEngine.text != null && textEngine.text != \"\") {\n\t\t\t\n\t\t\tcairo.rectangle (0, 0, bounds.width - (textField.border ? 1 : 0), bounds.height - (textField.border ? 1 : 0));\n\t\t\tcairo.clip ();\n\t\t\t\n\t\t\tvar text = textEngine.text;\n\t\t\t\n\t\t\tvar scrollX = -textField.scrollH;\n\t\t\tvar scrollY = 0.0;\n\t\t\t\n\t\t\tfor (i in 0...textField.scrollV - 1) {\n\t\t\t\t\n\t\t\t\tscrollY -= textEngine.lineHeights[i];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar color, r, g, b, font, size, advance;\n\t\t\t\n\t\t\tfor (group in textEngine.layoutGroups) {\n\t\t\t\t\n\t\t\t\tif (group.lineIndex < textField.scrollV - 1) continue;\n\t\t\t\tif (group.lineIndex > textField.scrollV + textEngine.bottomScrollV - 2) break;\n\t\t\t\t\n\t\t\t\tcolor = group.format.color;\n\t\t\t\tr = ((color & 0xFF0000) >>> 16) / 0xFF;\n\t\t\t\tg = ((color & 0x00FF00) >>> 8) / 0xFF;\n\t\t\t\tb = (color & 0x0000FF) / 0xFF;\n\t\t\t\t\n\t\t\t\tcairo.setSourceRGB (r, g, b);\n\t\t\t\t\n\t\t\t\tfont = TextEngine.getFontInstance (group.format);\n\t\t\t\t\n\t\t\t\tif (font != null && group.format.size != null) {\n\t\t\t\t\t\n\t\t\t\t\tif (textEngine.__cairoFont != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (textEngine.__font != font) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttextEngine.__cairoFont = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (textEngine.__cairoFont == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttextEngine.__font = font;\n\t\t\t\t\t\ttextEngine.__cairoFont = CairoFTFontFace.create (font, 0);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcairo.fontFace = textEngine.__cairoFont;\n\t\t\t\t\t\n\t\t\t\t\tsize = Std.int (group.format.size);\n\t\t\t\t\tcairo.setFontSize (size);\n\t\t\t\t\t\n\t\t\t\t\tcairo.moveTo (group.offsetX + scrollX, group.offsetY + group.ascent + scrollY);\n\t\t\t\t\t\n\t\t\t\t\tvar usedHack = false;\n\t\t\t\t\t\n\t\t\t\t\tif (textField.__filters != null && textField.__filters.length > 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Hack, force outline\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (Std.is (textField.__filters[0], GlowFilter)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcairo.textPath (text.substring (group.startIndex, group.endIndex));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar glowFilter:GlowFilter = cast textField.__filters[0];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcolor = glowFilter.color;\n\t\t\t\t\t\t\tr = ((color & 0xFF0000) >>> 16) / 0xFF;\n\t\t\t\t\t\t\tg = ((color & 0x00FF00) >>> 8) / 0xFF;\n\t\t\t\t\t\t\tb = (color & 0x0000FF) / 0xFF;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcairo.setSourceRGBA (r, g, b, glowFilter.alpha);\n\t\t\t\t\t\t\tcairo.lineWidth = Math.max (glowFilter.blurX, glowFilter.blurY);\n\t\t\t\t\t\t\tcairo.strokePreserve ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcolor = group.format.color;\n\t\t\t\t\t\t\tr = ((color & 0xFF0000) >>> 16) / 0xFF;\n\t\t\t\t\t\t\tg = ((color & 0x00FF00) >>> 8) / 0xFF;\n\t\t\t\t\t\t\tb = (color & 0x0000FF) / 0xFF;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcairo.setSourceRGB (r, g, b);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcairo.fillPreserve ();\n\t\t\t\t\t\t\tusedHack = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!usedHack) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t#if openfl_cairo_show_text\n\t\t\t\t\t\tcairo.showText (text.substring (group.startIndex, group.endIndex));\n\t\t\t\t\t\t#else\n\t\t\t\t\t\t\n\t\t\t\t\t\t// TODO: Improve performance\n\t\t\t\t\t\t\n\t\t\t\t\t\tcairo.translate (0, 0);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar glyphs = [];\n\t\t\t\t\t\tvar x:Float = group.offsetX + scrollX;\n\t\t\t\t\t\tvar y:Float = group.offsetY + group.ascent + scrollY;\n\t\t\t\t\t\tvar j = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (position in group.positions) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (position == null || position.glyph == 0) continue;\n\t\t\t\t\t\t\tglyphs.push (new CairoGlyph (position.glyph, x + 0.5, y + 0.5));\n\t\t\t\t\t\t\tx += position.advance.x;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcairo.showGlyphs (glyphs);\n\t\t\t\t\t\t#end\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (textField.__caretIndex > -1 && textEngine.selectable) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (textField.__selectionIndex == textField.__caretIndex) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (textField.__showCursor && group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tadvance = 0.0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (i in 0...(textField.__caretIndex - group.startIndex)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (group.positions.length <= i) break;\n\t\t\t\t\t\t\t\t\tadvance += group.getAdvance (i);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar scrollY = 0.0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor (i in 0...textField.scrollV - 1) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tscrollY -= textEngine.lineHeights[i];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcairo.moveTo (Math.floor (group.offsetX + advance) + 0.5 - textField.scrollH, scrollY + 2.5);\n\t\t\t\t\t\t\t\tcairo.lineWidth = 1;\n\t\t\t\t\t\t\t\tcairo.lineTo (Math.floor (group.offsetX + advance) + 0.5 - textField.scrollH, scrollY + TextEngine.getFormatHeight (textField.defaultTextFormat) - 1);\n\t\t\t\t\t\t\t\tcairo.stroke ();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else if ((group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex) || (group.startIndex <= textField.__selectionIndex && group.endIndex >= textField.__selectionIndex) || (group.startIndex > textField.__caretIndex && group.endIndex < textField.__selectionIndex) || (group.startIndex > textField.__selectionIndex && group.endIndex < textField.__caretIndex)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar selectionStart = Std.int (Math.min (textField.__selectionIndex, textField.__caretIndex));\n\t\t\t\t\t\t\tvar selectionEnd = Std.int (Math.max (textField.__selectionIndex, textField.__caretIndex));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (group.startIndex > selectionStart) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tselectionStart = group.startIndex;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (group.endIndex < selectionEnd) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tselectionEnd = group.endIndex;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar start, end;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstart = textField.getCharBoundaries (selectionStart);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (selectionEnd >= textEngine.text.length) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tend = textField.getCharBoundaries (textEngine.text.length - 1);\n\t\t\t\t\t\t\t\tend.x += end.width + 2;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tend = textField.getCharBoundaries (selectionEnd);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (start != null && end != null) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcairo.setSourceRGB (0, 0, 0);\n\t\t\t\t\t\t\t\tcairo.rectangle (scrollX + start.x, start.y + scrollY, end.x - start.x, group.height);\n\t\t\t\t\t\t\t\tcairo.fill ();\n\t\t\t\t\t\t\t\tcairo.setSourceRGB (1, 1, 1);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// TODO: draw only once\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcairo.moveTo (scrollX + start.x, group.offsetY + group.ascent + scrollY);\n\t\t\t\t\t\t\t\tcairo.showText (text.substring (selectionStart, selectionEnd));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (textField.__caretIndex > -1 && textEngine.selectable && textField.__showCursor) {\n\t\t\t\n\t\t\tvar scrollX = -textField.scrollH;\n\t\t\tvar scrollY = 0.0;\n\t\t\t\n\t\t\tfor (i in 0...textField.scrollV - 1) {\n\t\t\t\t\n\t\t\t\tscrollY -= textEngine.lineHeights[i];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar color = textField.defaultTextFormat.color;\n\t\t\tvar r = ((color & 0xFF0000) >>> 16) / 0xFF;\n\t\t\tvar g = ((color & 0x00FF00) >>> 8) / 0xFF;\n\t\t\tvar b = (color & 0x0000FF) / 0xFF;\n\t\t\t\n\t\t\tcairo.setSourceRGB (r, g, b);\n\t\t\t\n\t\t\tcairo.newPath ();\n\t\t\tcairo.moveTo (scrollX + 2.5, scrollY + 2.5);\n\t\t\tcairo.lineWidth = 1;\n\t\t\tcairo.lineTo (scrollX + 2.5, scrollY + TextEngine.getFormatHeight (textField.defaultTextFormat) - 1);\n\t\t\tcairo.stroke ();\n\t\t\tcairo.closePath ();\n\t\t\t\n\t\t}\n\t\t\n\t\tgraphics.__bitmap.image.dirty = true;\n\t\tgraphics.__bitmap.image.version++;\n\t\ttextField.__dirty = false;\n\t\tgraphics.__dirty = false;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.canvas;\n\n\nimport lime.graphics.utils.ImageCanvasUtil;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.Bitmap;\n\n@:access(openfl.display.Bitmap)\n@:access(openfl.display.BitmapData)\n\n\nclass CanvasBitmap {\n\t\n\t\n\tpublic static inline function render (bitmap:Bitmap, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (!bitmap.__renderable || bitmap.__worldAlpha <= 0) return;\n\t\t\n\t\tvar context = renderSession.context;\n\t\t\n\t\tif (bitmap.__bitmapData != null && bitmap.__bitmapData.__isValid && bitmap.__bitmapData.readable) {\n\t\t\t\n\t\t\trenderSession.blendModeManager.setBlendMode (bitmap.__worldBlendMode);\n\t\t\trenderSession.maskManager.pushObject (bitmap, false);\n\t\t\t\n\t\t\tImageCanvasUtil.convertToCanvas (bitmap.__bitmapData.image);\n\t\t\t\n\t\t\tcontext.globalAlpha = bitmap.__worldAlpha;\n\t\t\tvar transform = bitmap.__renderTransform;\n\t\t\tvar scrollRect = bitmap.__scrollRect;\n\t\t\t\n\t\t\tif (renderSession.roundPixels) {\n\t\t\t\t\n\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, Std.int (transform.tx), Std.int (transform.ty));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!renderSession.allowSmoothing || !bitmap.smoothing) {\n\t\t\t\t\n\t\t\t\tuntyped (context).mozImageSmoothingEnabled = false;\n\t\t\t\t//untyped (context).webkitImageSmoothingEnabled = false;\n\t\t\t\tuntyped (context).msImageSmoothingEnabled = false;\n\t\t\t\tuntyped (context).imageSmoothingEnabled = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (scrollRect == null) {\n\t\t\t\t\n\t\t\t\tcontext.drawImage (bitmap.__bitmapData.image.src, 0, 0);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcontext.drawImage (bitmap.__bitmapData.image.src, scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height, scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!renderSession.allowSmoothing || !bitmap.smoothing) {\n\t\t\t\t\n\t\t\t\tuntyped (context).mozImageSmoothingEnabled = true;\n\t\t\t\t//untyped (context).webkitImageSmoothingEnabled = true;\n\t\t\t\tuntyped (context).msImageSmoothingEnabled = true;\n\t\t\t\tuntyped (context).imageSmoothingEnabled = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\trenderSession.maskManager.popObject (bitmap, false);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.canvas;\n\n\nimport openfl._internal.renderer.AbstractBlendModeManager;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.BlendMode;\n\n\nclass CanvasBlendModeManager extends AbstractBlendModeManager {\n\t\n\t\n\tpublic var currentBlendMode:BlendMode;\n\tpublic var renderSession:RenderSession;\n\t\n\t\n\tpublic function new (renderSession:RenderSession) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tthis.renderSession = renderSession;\n\t\t\n\t}\n\t\n\t\n\tpublic override function setBlendMode (blendMode:BlendMode):Void {\n\t\t\n\t\tif (currentBlendMode == blendMode) return;\n\t\t\n\t\tcurrentBlendMode = blendMode;\n\t\t\n\t\tswitch (blendMode) {\n\t\t\t\n\t\t\tcase ADD:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"lighter\";\n\t\t\t\n\t\t\tcase ALPHA:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"destination-in\";\n\t\t\t\n\t\t\tcase DARKEN:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"darken\";\n\t\t\t\n\t\t\tcase DIFFERENCE:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"difference\";\n\t\t\t\n\t\t\tcase ERASE:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"destination-out\";\n\t\t\t\n\t\t\tcase HARDLIGHT:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"hard-light\";\n\t\t\t\n\t\t\t//case INVERT:\n\t\t\t\t\n\t\t\t\t//renderSession.context.globalCompositeOperation = \"\";\n\t\t\t\n\t\t\tcase LAYER:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"source-over\";\n\t\t\t\n\t\t\tcase LIGHTEN:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"lighten\";\n\t\t\t\n\t\t\tcase MULTIPLY:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"multiply\";\n\t\t\t\n\t\t\tcase OVERLAY:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"overlay\";\n\t\t\t\n\t\t\tcase SCREEN:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"screen\";\n\t\t\t\n\t\t\t//case SHADER:\n\t\t\t\t\n\t\t\t\t//renderSession.context.globalCompositeOperation = \"\";\n\t\t\t\n\t\t\t//case SUBTRACT:\n\t\t\t\t\n\t\t\t\t//renderSession.context.globalCompositeOperation = \"\";\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\trenderSession.context.globalCompositeOperation = \"source-over\";\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n","package openfl._internal.renderer.canvas;\n\n\nimport lime.math.color.ARGB;\nimport openfl.display.DisplayObject;\nimport openfl.geom.Rectangle;\n\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.Graphics)\n@:access(openfl.geom.Matrix)\n\n\nclass CanvasDisplayObject {\n\n\tpublic static inline function render (displayObject:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (displayObject.opaqueBackground == null && displayObject.__graphics == null) return;\n\t\tif (!displayObject.__renderable || displayObject.__worldAlpha <= 0) return;\n\n\t\t// Bail on rendering if bounds are completely offscreen\n\t\tvar gBounds:Rectangle = displayObject.__graphics.__bounds;\n\t\tvar rX : Float = gBounds == null ? Math.NaN : displayObject.__worldTransform.tx + gBounds.x;\n\t\tvar rY : Float = gBounds == null ? Math.NaN : displayObject.__worldTransform.ty + gBounds.y;\n\t\tif ((!Math.isNaN(rX) && !Math.isNaN(rY)) && (rX < 0 && (rX * -1) > gBounds.width) || (rY < 0 && (rY * -1) > gBounds.height) || (renderSession.renderer != null && (rX > renderSession.renderer.width || rY > renderSession.renderer.height)) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (displayObject.opaqueBackground != null && !displayObject.__cacheBitmapRender && displayObject.width > 0 && displayObject.height > 0) {\n\t\t\t\n\t\t\trenderSession.blendModeManager.setBlendMode (displayObject.__worldBlendMode);\n\t\t\trenderSession.maskManager.pushObject (displayObject);\n\t\t\t\n\t\t\tvar context = renderSession.context;\n\t\t\tvar transform = displayObject.__renderTransform;\n\t\t\t\n\t\t\tif (renderSession.roundPixels) {\n\t\t\t\t\n\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, Std.int (transform.tx), Std.int (transform.ty));\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar color:ARGB = (displayObject.opaqueBackground:ARGB);\n\t\t\tcontext.fillStyle = 'rgb(${color.r},${color.g},${color.b})';\n\t\t\tcontext.fillRect (0, 0, displayObject.width, displayObject.height);\n\t\t\t\n\t\t\trenderSession.maskManager.popObject (displayObject);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (displayObject.__graphics != null) {\n\t\t\t\n\t\t\tCanvasShape.render (displayObject, renderSession);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.canvas;\n\nimport lime.graphics.utils.ImageCanvasUtil;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.BitmapData;\nimport openfl.display.BitmapDataChannel;\nimport openfl.display.CapsStyle;\nimport openfl.display.DisplayObject;\nimport openfl._internal.renderer.DrawCommandBuffer;\nimport openfl._internal.renderer.DrawCommandReader;\nimport openfl._internal.renderer.DrawCommandType;\nimport openfl.display.GradientType;\nimport openfl.display.Graphics;\nimport openfl.display.InterpolationMethod;\nimport openfl.display.SpreadMethod;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.utils.ByteArray;\nimport openfl.Vector;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.CanvasGradient;\nimport js.html.CanvasPattern;\nimport js.html.CanvasRenderingContext2D;\nimport js.html.CanvasWindingRule;\nimport js.Browser;\nimport js.html.ImageData;\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.BitmapData)\n@:access(openfl.display.Graphics)\n@:access(openfl.geom.Matrix)\n@:access(openfl.geom.Point)\n\n\nclass CanvasGraphics {\n\t\n\t\n\tprivate static var SIN45 = 0.70710678118654752440084436210485;\n\tprivate static var TAN22 = 0.4142135623730950488016887242097;\n\t\n\tprivate static var allowSmoothing:Bool;\n\tprivate static var bitmapFill:BitmapData;\n\tprivate static var bitmapStroke:BitmapData;\n\tprivate static var bitmapRepeat:Bool;\n\tprivate static var bounds:Rectangle;\n\tprivate static var fillCommands:DrawCommandBuffer = new DrawCommandBuffer ();\n\tprivate static var graphics:Graphics;\n\tprivate static var hasFill:Bool;\n\tprivate static var hasStroke:Bool;\n\tprivate static var hitTesting:Bool;\n\tprivate static var inversePendingMatrix:Matrix;\n\tprivate static var pendingMatrix:Matrix;\n\tprivate static var strokeCommands:DrawCommandBuffer = new DrawCommandBuffer ();\n\tprivate static var windingRule:#if (js && html5) CanvasWindingRule #else Dynamic #end;\n\t\n\t#if (js && html5)\n\tprivate static var context:CanvasRenderingContext2D;\n\tprivate static var hitTestCanvas:CanvasElement;\n\tprivate static var hitTestContext:CanvasRenderingContext2D;\n\t#end\n\t\n\t\n\t#if (js && html5)\n\tprivate static function __init__ ():Void {\n\t\t\n\t\thitTestCanvas = cast Browser.document.createElement (\"canvas\");\n\t\thitTestContext = hitTestCanvas.getContext (\"2d\");\n\t\t\n\t}\n\t#end\n\t\n\t\n\tprivate static function closePath (strokeBefore:Bool = false):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tif (context.strokeStyle == null) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!strokeBefore) {\n\t\t\t\n\t\t\tcontext.closePath ();\n\t\t\t\n\t\t}\n\t\t\n\t\tcontext.stroke ();\n\t\t\n\t\tif (strokeBefore) {\n\t\t\t\n\t\t\tcontext.closePath ();\n\t\t\t\n\t\t}\n\t\t\n\t\tcontext.beginPath ();\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function createBitmapFill (bitmap:BitmapData, bitmapRepeat:Bool, smooth:Bool) {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tImageCanvasUtil.convertToCanvas (bitmap.image);\n\t\tsetSmoothing (smooth);\n\t\treturn context.createPattern (bitmap.image.src, bitmapRepeat ? \"repeat\" : \"no-repeat\");\n\t\t\n\t\t#else\n\t\t\n\t\treturn null;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function createGradientPattern (type:GradientType, colors:Array<Dynamic>, alphas:Array<Dynamic>, ratios:Array<Dynamic>, matrix:Matrix, spreadMethod:SpreadMethod, interpolationMethod:InterpolationMethod, focalPointRatio:Float) {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tvar gradientFill = null, point = null, point2 = null, releaseMatrix = false;\n\t\t\n\t\tif (matrix == null) {\n\t\t\t\n\t\t\tmatrix = Matrix.__pool.get ();\n\t\t\treleaseMatrix = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase RADIAL:\n\t\t\t\t\n\t\t\t\tpoint = Point.__pool.get ();\n\t\t\t\tpoint.setTo (1638.4, 0);\n\t\t\t\tmatrix.__transformPoint (point);\n\t\t\t\t\n\t\t\t\tgradientFill = context.createRadialGradient (matrix.tx, matrix.ty, 0, matrix.tx, matrix.ty, Math.abs ((point.x - matrix.tx) / 2));\n\t\t\t\n\t\t\tcase LINEAR:\n\t\t\t\t\n\t\t\t\tpoint = Point.__pool.get ();\n\t\t\t\tpoint.setTo (-819.2, 0);\n\t\t\t\tmatrix.__transformPoint (point);\n\t\t\t\t\n\t\t\t\tpoint2 = Point.__pool.get ();\n\t\t\t\tpoint2.setTo (819.2, 0);\n\t\t\t\tmatrix.__transformPoint (point2);\n\t\t\t\t\n\t\t\t\tgradientFill = context.createLinearGradient (point.x, point.y, point2.x, point2.y);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar rgb, alpha, r, g, b, ratio;\n\t\t\n\t\tfor (i in 0...colors.length) {\n\t\t\t\n\t\t\trgb = colors[i];\n\t\t\talpha = alphas[i];\n\t\t\tr = (rgb & 0xFF0000) >>> 16;\n\t\t\tg = (rgb & 0x00FF00) >>> 8;\n\t\t\tb = (rgb & 0x0000FF);\n\t\t\t\n\t\t\tratio = ratios[i] / 0xFF;\n\t\t\tif (ratio < 0) ratio = 0;\n\t\t\tif (ratio > 1) ratio = 1;\n\t\t\t\n\t\t\tgradientFill.addColorStop (ratio, \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\");\n\t\t\t\n\t\t}\n\t\t\n\t\tif (point != null) Point.__pool.release (point);\n\t\tif (point2 != null) Point.__pool.release (point2);\n\t\tif (releaseMatrix) Matrix.__pool.release (matrix);\n\t\t\n\t\treturn cast (gradientFill);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function createTempPatternCanvas (bitmap:BitmapData, repeat:Bool, width:Int, height:Int) {\n\t\t\n\t\t// TODO: Don't create extra canvas elements like this\n\t\t\n\t\t#if (js && html5)\n\t\tvar canvas:CanvasElement = cast Browser.document.createElement (\"canvas\");\n\t\tvar context = canvas.getContext (\"2d\");\n\t\t\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\t\n\t\tcontext.fillStyle = context.createPattern (bitmap.image.src, repeat ? \"repeat\" : \"no-repeat\");\n\t\tcontext.beginPath ();\n\t\tcontext.moveTo (0, 0);\n\t\tcontext.lineTo (0, height);\n\t\tcontext.lineTo (width, height);\n\t\tcontext.lineTo (width, 0);\n\t\tcontext.lineTo (0, 0);\n\t\tcontext.closePath ();\n\t\tif (!hitTesting) context.fill (windingRule);\n\t\treturn canvas;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function drawRoundRect (x:Float, y:Float, width:Float, height:Float, ellipseWidth:Float, ellipseHeight:Null<Float>):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (ellipseHeight == null) ellipseHeight = ellipseWidth;\n\t\t\n\t\tellipseWidth *= 0.5;\n\t\tellipseHeight *= 0.5;\n\t\t\n\t\tif (ellipseWidth > width / 2) ellipseWidth = width / 2;\n\t\tif (ellipseHeight > height / 2) ellipseHeight = height / 2;\n\t\t\n\t\tvar xe = x + width,\n\t\tye = y + height,\n\t\tcx1 = -ellipseWidth + (ellipseWidth * SIN45),\n\t\tcx2 = -ellipseWidth + (ellipseWidth * TAN22),\n\t\tcy1 = -ellipseHeight + (ellipseHeight * SIN45),\n\t\tcy2 = -ellipseHeight + (ellipseHeight * TAN22);\n\t\t\n\t\tcontext.moveTo (xe, ye - ellipseHeight);\n\t\tcontext.quadraticCurveTo (xe, ye + cy2, xe + cx1, ye + cy1);\n\t\tcontext.quadraticCurveTo (xe + cx2, ye, xe - ellipseWidth, ye);\n\t\tcontext.lineTo (x + ellipseWidth, ye);\n\t\tcontext.quadraticCurveTo (x - cx2, ye, x - cx1, ye + cy1);\n\t\tcontext.quadraticCurveTo (x, ye + cy2, x, ye - ellipseHeight);\n\t\tcontext.lineTo (x, y + ellipseHeight);\n\t\tcontext.quadraticCurveTo (x, y - cy2, x - cx1, y - cy1);\n\t\tcontext.quadraticCurveTo (x - cx2, y, x + ellipseWidth, y);\n\t\tcontext.lineTo (xe - ellipseWidth, y);\n\t\tcontext.quadraticCurveTo (xe + cx2, y, xe + cx1, y - cy1);\n\t\tcontext.quadraticCurveTo (xe, y - cy2, xe, y + ellipseHeight);\n\t\tcontext.lineTo (xe, ye - ellipseHeight);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function endFill ():Void {\n\t\t\n\t\t#if (js && html5)\n\t\tcontext.beginPath ();\n\t\tplayCommands (fillCommands, false);\n\t\tfillCommands.clear ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function endStroke ():Void {\n\t\t\n\t\t#if (js && html5)\n\t\tcontext.beginPath ();\n\t\tplayCommands (strokeCommands, true);\n\t\tcontext.closePath ();\n\t\tstrokeCommands.clear ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function hitTest (graphics:Graphics, x:Float, y:Float):Bool {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tbounds = graphics.__bounds;\n\t\tCanvasGraphics.graphics = graphics;\n\t\t\n\t\tif (graphics.__commands.length == 0 || bounds == null || bounds.width <= 0 || bounds.height <= 0) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\thitTesting = true;\n\t\t\t\n\t\t\tvar transform = graphics.__renderTransform;\n\t\t\t\n\t\t\tvar px = transform.__transformX (x, y);\n\t\t\tvar py = transform.__transformY (x, y);\n\t\t\t\n\t\t\tx = px;\n\t\t\ty = py;\n\t\t\t\n\t\t\tx -= transform.__transformX (bounds.x, bounds.y);\n\t\t\ty -= transform.__transformY (bounds.x, bounds.y);\n\t\t\t\n\t\t\tvar cacheCanvas = graphics.__canvas;\n\t\t\tvar cacheContext = graphics.__context;\n\t\t\tgraphics.__canvas = hitTestCanvas;\n\t\t\tgraphics.__context = hitTestContext;\n\t\t\t\n\t\t\tcontext = graphics.__context;\n\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t\t\t\n\t\t\tfillCommands.clear ();\n\t\t\tstrokeCommands.clear ();\n\t\t\t\n\t\t\thasFill = false;\n\t\t\thasStroke = false;\n\t\t\tbitmapFill = null;\n\t\t\tbitmapRepeat = false;\n\t\t\t\n\t\t\twindingRule = CanvasWindingRule.EVENODD;\n\t\t\t\n\t\t\tvar data = new DrawCommandReader (graphics.__commands);\n\t\t\t\n\t\t\tfor (type in graphics.__commands.types) {\n\t\t\t\t\n\t\t\t\tswitch (type) {\n\t\t\t\t\t\n\t\t\t\t\tcase CUBIC_CURVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\n\t\t\t\t\t\tfillCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\n\t\t\t\t\t\tstrokeCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\n\t\t\t\t\t\n\t\t\t\t\tcase CURVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readCurveTo ();\n\t\t\t\t\t\tfillCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\n\t\t\t\t\t\tstrokeCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineTo ();\n\t\t\t\t\t\tfillCommands.lineTo (c.x, c.y);\n\t\t\t\t\t\tstrokeCommands.lineTo (c.x, c.y);\n\t\t\t\t\t\t\n\t\t\t\t\tcase MOVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readMoveTo ();\n\t\t\t\t\t\tfillCommands.moveTo (c.x, c.y);\n\t\t\t\t\t\tstrokeCommands.moveTo (c.x, c.y);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_GRADIENT_STYLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineGradientStyle ();\n\t\t\t\t\t\tstrokeCommands.lineGradientStyle (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_BITMAP_STYLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineBitmapStyle ();\n\t\t\t\t\t\tstrokeCommands.lineBitmapStyle (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_STYLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineStyle ();\n\t\t\t\t\t\tstrokeCommands.lineStyle (c.thickness, c.color, 1, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\n\t\t\t\t\t\n\t\t\t\t\tcase END_FILL:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.readEndFill ();\n\t\t\t\t\t\tendFill ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasFill && context.isPointInPath (x, y, windingRule)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.destroy ();\n\t\t\t\t\t\t\tgraphics.__canvas = cacheCanvas;\n\t\t\t\t\t\t\tgraphics.__context = cacheContext;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tendStroke ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasStroke && (context:Dynamic).isPointInStroke (x, y)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.destroy ();\n\t\t\t\t\t\t\tgraphics.__canvas = cacheCanvas;\n\t\t\t\t\t\t\tgraphics.__context = cacheContext;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\thasFill = false;\n\t\t\t\t\t\tbitmapFill = null;\n\t\t\t\t\t\n\t\t\t\t\tcase BEGIN_BITMAP_FILL, BEGIN_FILL, BEGIN_GRADIENT_FILL:\n\t\t\t\t\t\t\n\t\t\t\t\t\tendFill ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasFill && context.isPointInPath (x, y, windingRule)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.destroy ();\n\t\t\t\t\t\t\tgraphics.__canvas = cacheCanvas;\n\t\t\t\t\t\t\tgraphics.__context = cacheContext;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tendStroke ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasStroke && (context:Dynamic).isPointInStroke (x, y)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.destroy ();\n\t\t\t\t\t\t\tgraphics.__canvas = cacheCanvas;\n\t\t\t\t\t\t\tgraphics.__context = cacheContext;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (type == BEGIN_BITMAP_FILL) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readBeginBitmapFill ();\n\t\t\t\t\t\t\tfillCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\t\tstrokeCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else if (type == BEGIN_GRADIENT_FILL) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readBeginGradientFill ();\n\t\t\t\t\t\t\tfillCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\t\tstrokeCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readBeginFill ();\n\t\t\t\t\t\t\tfillCommands.beginFill (c.color, 1);\n\t\t\t\t\t\t\tstrokeCommands.beginFill (c.color, 1);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_CIRCLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawCircle ();\n\t\t\t\t\t\tfillCommands.drawCircle (c.x, c.y, c.radius);\n\t\t\t\t\t\tstrokeCommands.drawCircle (c.x, c.y, c.radius);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_ELLIPSE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawEllipse ();\n\t\t\t\t\t\tfillCommands.drawEllipse (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\tstrokeCommands.drawEllipse (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_RECT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawRect ();\n\t\t\t\t\t\tfillCommands.drawRect (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\tstrokeCommands.drawRect (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_ROUND_RECT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\n\t\t\t\t\t\tfillCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\t\tstrokeCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\t\n\t\t\t\t\tcase WINDING_EVEN_ODD:\n\t\t\t\t\t\t\n\t\t\t\t\t\twindingRule = CanvasWindingRule.EVENODD;\n\t\t\t\t\t\n\t\t\t\t\tcase WINDING_NON_ZERO:\n\t\t\t\t\t\t\n\t\t\t\t\t\twindingRule = CanvasWindingRule.NONZERO;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.skip (type);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar hitTest = false;\n\t\t\t\n\t\t\tif (fillCommands.length > 0) {\n\t\t\t\t\n\t\t\t\tendFill ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hasFill && context.isPointInPath (x, y, windingRule)) {\n\t\t\t\t\n\t\t\t\thitTest = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (strokeCommands.length > 0) {\n\t\t\t\t\n\t\t\t\tendStroke ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hasStroke && (context:Dynamic).isPointInStroke (x, y)) {\n\t\t\t\t\n\t\t\t\thitTest = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tdata.destroy ();\n\t\t\t\n\t\t\tgraphics.__canvas = cacheCanvas;\n\t\t\tgraphics.__context = cacheContext;\n\t\t\treturn hitTest;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate static inline function isCCW (x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float) {\n\t\t\n\t\treturn ((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1)) < 0;\n\t\t\n\t}\n\t\n\t\n\tprivate static function normalizeUVT (uvt:Vector<Float>, skipT:Bool = false): { max:Float, uvt:Vector<Float> } {\n\t\t\n\t\tvar max:Float = Math.NEGATIVE_INFINITY;\n\t\tvar tmp = Math.NEGATIVE_INFINITY;\n\t\tvar len = uvt.length;\n\t\t\n\t\tfor (t in 1...len + 1) {\n\t\t\t\n\t\t\tif (skipT && t % 3 == 0) {\n\t\t\t\t\n\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\ttmp = uvt[t - 1];\n\t\t\t\n\t\t\tif (max < tmp) {\n\t\t\t\t\n\t\t\t\tmax = tmp;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tif ( !skipT ) {\n\n\t\t\treturn { max: max, uvt: uvt };\n\t\t\n\t\t}\n\t\t\n\t\tvar result = new Vector<Float> ();\n\t\t\n\t\tfor (t in 1...len + 1) {\n\t\t\t\n\t\t\tif (skipT && t % 3 == 0) {\n\t\t\t\t\n\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tresult.push (uvt[t - 1]);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn { max: max, uvt: result };\n\t\t\n\t}\n\t\n\t\n\tprivate static function playCommands (commands:DrawCommandBuffer, stroke:Bool = false):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tbounds = graphics.__bounds;\n\t\t\n\t\tvar offsetX = bounds.x;\n\t\tvar offsetY = bounds.y;\n\t\t\n\t\tvar positionX = 0.0;\n\t\tvar positionY = 0.0;\n\t\t\n\t\tvar closeGap = false;\n\t\tvar startX = 0.0;\n\t\tvar startY = 0.0;\n\t\tvar setStart = false;\n\t\t\n\t\twindingRule = CanvasWindingRule.EVENODD;\n\t\tsetSmoothing (true);\n\t\t\n\t\tvar data = new DrawCommandReader (commands);\n\t\t\n\t\tvar x, y, width, height, kappa = .5522848, ox, oy, xe, ye, xm, ym, r, g, b;\n\t\tvar optimizationUsed, canOptimizeMatrix, st:Float, sr:Float, sb:Float, sl:Float, stl = null, sbr = null;\n\t\t\n\t\tfor (type in commands.types) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase CUBIC_CURVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readCubicCurveTo ();\n\t\t\t\t\tcontext.bezierCurveTo (c.controlX1 - offsetX, c.controlY1 - offsetY, c.controlX2 - offsetX, c.controlY2 - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\n\t\t\t\t\n\t\t\t\tcase CURVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readCurveTo ();\n\t\t\t\t\tcontext.quadraticCurveTo (c.controlX - offsetX, c.controlY - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\n\t\t\t\t\n\t\t\t\tcase DRAW_CIRCLE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawCircle ();\n\t\t\t\t\tcontext.moveTo (c.x - offsetX + c.radius, c.y - offsetY);\n\t\t\t\t\tcontext.arc (c.x - offsetX, c.y - offsetY, c.radius, 0, Math.PI * 2, true);\n\t\t\t\t\n\t\t\t\tcase DRAW_ELLIPSE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawEllipse ();\n\t\t\t\t\tx = c.x;\n\t\t\t\t\ty = c.y;\n\t\t\t\t\twidth = c.width;\n\t\t\t\t\theight = c.height;\n\t\t\t\t\tx -= offsetX;\n\t\t\t\t\ty -= offsetY;\n\t\t\t\t\t\n\t\t\t\t\tox = (width / 2) * kappa; // control point offset horizontal\n\t\t\t\t\toy = (height / 2) * kappa; // control point offset vertical\n\t\t\t\t\txe = x + width; // x-end\n\t\t\t\t\tye = y + height; // y-end\n\t\t\t\t\txm = x + width / 2; // x-middle\n\t\t\t\t\tym = y + height / 2; // y-middle\n\t\t\t\t\t\n\t\t\t\t\tcontext.moveTo (x, ym);\n\t\t\t\t\tcontext.bezierCurveTo (x, ym - oy, xm - ox, y, xm, y);\n\t\t\t\t\tcontext.bezierCurveTo (xm + ox, y, xe, ym - oy, xe, ym);\n\t\t\t\t\tcontext.bezierCurveTo (xe, ym + oy, xm + ox, ye, xm, ye);\n\t\t\t\t\tcontext.bezierCurveTo (xm - ox, ye, x, ym + oy, x, ym);\n\t\t\t\t\n\t\t\t\tcase DRAW_ROUND_RECT:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawRoundRect ();\n\t\t\t\t\tdrawRoundRect (c.x - offsetX, c.y - offsetY, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\n\t\t\t\tcase LINE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineTo ();\n\t\t\t\t\tcontext.lineTo (c.x - offsetX, c.y - offsetY);\n\t\t\t\t\t\n\t\t\t\t\tpositionX = c.x;\n\t\t\t\t\tpositionY = c.y;\n\t\t\t\t\t\n\t\t\t\t\tif (positionX == startX && positionY == startY) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcloseGap = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase MOVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readMoveTo ();\n\t\t\t\t\tcontext.moveTo (c.x - offsetX, c.y - offsetY);\n\t\t\t\t\t\n\t\t\t\t\tpositionX = c.x;\n\t\t\t\t\tpositionY = c.y;\n\t\t\t\t\t\n\t\t\t\t\tif (setStart) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcloseGap = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tstartX = c.x;\n\t\t\t\t\tstartY = c.y;\n\t\t\t\t\tsetStart = true;\n\t\t\t\t\n\t\t\t\tcase LINE_STYLE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineStyle ();\n\t\t\t\t\tif (stroke && hasStroke) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tclosePath (true);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcontext.moveTo (positionX - offsetX, positionY - offsetY);\n\t\t\t\t\t\n\t\t\t\t\tif (c.thickness == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\thasStroke = false;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.lineWidth = (c.thickness > 0 ? c.thickness : 1);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.lineJoin = (c.joints == null ? \"round\" : Std.string (c.joints).toLowerCase ());\n\t\t\t\t\t\tcontext.lineCap = (c.caps == null ? \"round\" : switch (c.caps) {\n\t\t\t\t\t\t\tcase CapsStyle.NONE: \"butt\";\n\t\t\t\t\t\t\tdefault: Std.string (c.caps).toLowerCase ();\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.miterLimit = c.miterLimit;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (c.alpha == 1) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontext.strokeStyle = \"#\" + StringTools.hex (c.color & 0x00FFFFFF, 6);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tr = (c.color & 0xFF0000) >>> 16;\n\t\t\t\t\t\t\tg = (c.color & 0x00FF00) >>> 8;\n\t\t\t\t\t\t\tb = (c.color & 0x0000FF);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontext.strokeStyle = \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + c.alpha + \")\";\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tsetSmoothing (true);\n\t\t\t\t\t\thasStroke = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase LINE_GRADIENT_STYLE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineGradientStyle ();\n\t\t\t\t\tif (stroke && hasStroke) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tclosePath ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcontext.moveTo (positionX - offsetX, positionY - offsetY);\n\t\t\t\t\tcontext.strokeStyle = createGradientPattern (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\n\t\t\t\t\tsetSmoothing (true);\n\t\t\t\t\thasStroke = true;\n\t\t\t\t\n\t\t\t\tcase LINE_BITMAP_STYLE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineBitmapStyle ();\n\t\t\t\t\tif (stroke && hasStroke) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tclosePath ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcontext.moveTo (positionX - offsetX, positionY - offsetY);\n\t\t\t\t\tcontext.strokeStyle = createBitmapFill (c.bitmap, c.repeat, c.smooth);\n\t\t\t\t\t\n\t\t\t\t\thasStroke = true;\n\t\t\t\t\n\t\t\t\tcase BEGIN_BITMAP_FILL:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readBeginBitmapFill ();\n\t\t\t\t\tbitmapFill = c.bitmap;\n\t\t\t\t\tcontext.fillStyle = createBitmapFill (c.bitmap, true, c.smooth);\n\t\t\t\t\thasFill = true;\n\t\t\t\t\t\n\t\t\t\t\tif (c.matrix != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tpendingMatrix = c.matrix;\n\t\t\t\t\t\tinversePendingMatrix = c.matrix.clone ();\n\t\t\t\t\t\tinversePendingMatrix.invert ();\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tpendingMatrix = null;\n\t\t\t\t\t\tinversePendingMatrix = null;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase BEGIN_FILL:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readBeginFill ();\n\t\t\t\t\tif (c.alpha < 0.005) {\n\t\t\t\t\t\t\n\t\t\t\t\t\thasFill = false;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (c.alpha == 1) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontext.fillStyle = \"#\" + StringTools.hex (c.color & 0xFFFFFF, 6);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tr = (c.color & 0xFF0000) >>> 16;\n\t\t\t\t\t\t\tg = (c.color & 0x00FF00) >>> 8;\n\t\t\t\t\t\t\tb = (c.color & 0x0000FF);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontext.fillStyle = \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + c.alpha + \")\";\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbitmapFill = null;\n\t\t\t\t\t\tsetSmoothing (true);\n\t\t\t\t\t\thasFill = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase BEGIN_GRADIENT_FILL:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readBeginGradientFill ();\n\t\t\t\t\tcontext.fillStyle = createGradientPattern (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\n\t\t\t\t\tbitmapFill = null;\n\t\t\t\t\tsetSmoothing (true);\n\t\t\t\t\thasFill = true;\n\t\t\t\t\n\t\t\t\tcase DRAW_TRIANGLES:\n\t\t\t\t\t\n\t\t\t\t\t// endFill ();\n\t\t\t\t\t// endStroke ();\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawTriangles ();\n\t\t\t\t\t\n\t\t\t\t\tvar v = c.vertices;\n\t\t\t\t\tvar ind = c.indices;\n\t\t\t\t\tvar uvt = c.uvtData;\n\t\t\t\t\tvar pattern:CanvasElement = null;\n\t\t\t\t\tvar colorFill = bitmapFill == null;\n\t\t\t\t\t\n\t\t\t\t\tif (colorFill && uvt != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Flash doesn't draw anything if the fill isn't a bitmap and there are uvt values\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!colorFill) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t//TODO move this to Graphics?\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (uvt == null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tuvt = new Vector<Float> ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (i in 0...(Std.int (v.length / 2))) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tuvt.push (v[i * 2] - offsetX / bitmapFill.width);\n\t\t\t\t\t\t\t\tuvt.push (v[i * 2 + 1] - offsetY / bitmapFill.height);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar skipT = uvt.length != v.length;\n\t\t\t\t\t\tvar normalizedUVT = normalizeUVT (uvt, skipT);\n\t\t\t\t\t\tvar maxUVT = normalizedUVT.max;\n\t\t\t\t\t\tuvt = normalizedUVT.uvt;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (maxUVT > 1) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpattern = createTempPatternCanvas (bitmapFill, bitmapRepeat, Std.int (bounds.width), Std.int (bounds.height));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpattern = createTempPatternCanvas (bitmapFill, bitmapRepeat, bitmapFill.width, bitmapFill.height);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar i = 0;\n\t\t\t\t\tvar l = ind.length;\n\t\t\t\t\t\n\t\t\t\t\tvar a_:Int, b_:Int, c_:Int;\n\t\t\t\t\tvar iax:Int, iay:Int, ibx:Int, iby:Int, icx:Int, icy:Int;\n\t\t\t\t\tvar x1:Float, y1:Float, x2:Float, y2:Float, x3:Float, y3:Float;\n\t\t\t\t\tvar uvx1:Float, uvy1:Float, uvx2:Float, uvy2:Float, uvx3:Float, uvy3:Float;\n\t\t\t\t\tvar denom:Float;\n\t\t\t\t\tvar t1:Float, t2:Float, t3:Float, t4:Float;\n\t\t\t\t\tvar dx:Float, dy:Float;\n\t\t\t\t\t\n\t\t\t\t\twhile (i < l) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ta_ = i;\n\t\t\t\t\t\tb_ = i + 1;\n\t\t\t\t\t\tc_ = i + 2;\n\t\t\t\t\t\t\n\t\t\t\t\t\tiax = ind[a_] * 2;\n\t\t\t\t\t\tiay = ind[a_] * 2 + 1;\n\t\t\t\t\t\tibx = ind[b_] * 2;\n\t\t\t\t\t\tiby = ind[b_] * 2 + 1;\n\t\t\t\t\t\ticx = ind[c_] * 2;\n\t\t\t\t\t\ticy = ind[c_] * 2 + 1;\n\t\t\t\t\t\t\n\t\t\t\t\t\tx1 = v[iax] - offsetX;\n\t\t\t\t\t\ty1 = v[iay] - offsetY;\n\t\t\t\t\t\tx2 = v[ibx] - offsetX;\n\t\t\t\t\t\ty2 = v[iby] - offsetY;\n\t\t\t\t\t\tx3 = v[icx] - offsetX;\n\t\t\t\t\t\ty3 = v[icy] - offsetY;\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch (c.culling) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase POSITIVE:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (!isCCW (x1, y1, x2, y2, x3, y3)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase NEGATIVE:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (isCCW (x1, y1, x2, y2, x3, y3)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (colorFill) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontext.beginPath ();\n\t\t\t\t\t\t\tcontext.moveTo (x1, y1);\n\t\t\t\t\t\t\tcontext.lineTo (x2, y2);\n\t\t\t\t\t\t\tcontext.lineTo (x3, y3);\n\t\t\t\t\t\t\tcontext.closePath ();\n\t\t\t\t\t\t\tif (!hitTesting) context.fill (windingRule);\n\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} \n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.save ();\n\t\t\t\t\t\tcontext.beginPath ();\n\t\t\t\t\t\tcontext.moveTo (x1, y1);\n\t\t\t\t\t\tcontext.lineTo (x2, y2);\n\t\t\t\t\t\tcontext.lineTo (x3, y3);\n\t\t\t\t\t\tcontext.closePath ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.clip ();\n\t\t\t\t\t\t\n\t\t\t\t\t\tuvx1 = uvt[iax] * pattern.width;\n\t\t\t\t\t\tuvx2 = uvt[ibx] * pattern.width;\n\t\t\t\t\t\tuvx3 = uvt[icx] * pattern.width;\n\t\t\t\t\t\tuvy1 = uvt[iay] * pattern.height;\n\t\t\t\t\t\tuvy2 = uvt[iby] * pattern.height;\n\t\t\t\t\t\tuvy3 = uvt[icy] * pattern.height;\n\t\t\t\t\t\t\n\t\t\t\t\t\tdenom = uvx1 * (uvy3 - uvy2) - uvx2 * uvy3 + uvx3 * uvy2 + (uvx2 - uvx3) * uvy1;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (denom == 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tt1 = - (uvy1 * (x3 - x2) - uvy2 * x3 + uvy3 * x2 + (uvy2 - uvy3) * x1) / denom;\n\t\t\t\t\t\tt2 = (uvy2 * y3 + uvy1 * (y2 - y3) - uvy3 * y2 + (uvy3 - uvy2) * y1) / denom;\n\t\t\t\t\t\tt3 = (uvx1 * (x3 - x2) - uvx2 * x3 + uvx3 * x2 + (uvx2 - uvx3) * x1) / denom;\n\t\t\t\t\t\tt4 = - (uvx2 * y3 + uvx1 * (y2 - y3) - uvx3 * y2 + (uvx3 - uvx2) * y1) / denom;\n\t\t\t\t\t\tdx = (uvx1 * (uvy3 * x2 - uvy2 * x3) + uvy1 * (uvx2 * x3 - uvx3 * x2) + (uvx3 * uvy2 - uvx2 * uvy3) * x1) / denom;\n\t\t\t\t\t\tdy = (uvx1 * (uvy3 * y2 - uvy2 * y3) + uvy1 * (uvx2 * y3 - uvx3 * y2) + (uvx3 * uvy2 - uvx2 * uvy3) * y1) / denom;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.transform (t1, t2, t3, t4, dx, dy);\n\t\t\t\t\t\tcontext.drawImage (pattern, 0, 0);\n\t\t\t\t\t\tcontext.restore ();\n\t\t\t\t\t\t\n\t\t\t\t\t\ti += 3;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase DRAW_RECT:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawRect ();\n\t\t\t\t\toptimizationUsed = false;\n\t\t\t\t\t\n\t\t\t\t\tif (bitmapFill != null && !hitTesting) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tst = 0;\n\t\t\t\t\t\tsr = 0;\n\t\t\t\t\t\tsb = 0;\n\t\t\t\t\t\tsl = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcanOptimizeMatrix = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pendingMatrix != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (pendingMatrix.b != 0 || pendingMatrix.c != 0) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcanOptimizeMatrix = false;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (stl == null) stl = Point.__pool.get ();\n\t\t\t\t\t\t\t\tif (sbr == null) sbr = Point.__pool.get ();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstl.setTo (c.x, c.y);\n\t\t\t\t\t\t\t\tinversePendingMatrix.__transformPoint (stl);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsbr.setTo (c.x + c.width, c.y + c.height);\n\t\t\t\t\t\t\t\tinversePendingMatrix.__transformPoint (sbr);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tst = stl.y;\n\t\t\t\t\t\t\t\tsl = stl.x;\n\t\t\t\t\t\t\t\tsb = sbr.y;\n\t\t\t\t\t\t\t\tsr = sbr.x;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tst = c.y;\n\t\t\t\t\t\t\tsl = c.x;\n\t\t\t\t\t\t\tsb = c.y + c.height;\n\t\t\t\t\t\t\tsr = c.x + c.width;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (canOptimizeMatrix && st >= 0 && sl >= 0 && sr <= bitmapFill.width && sb <= bitmapFill.height) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\toptimizationUsed = true;\n\t\t\t\t\t\t\tif (!hitTesting) context.drawImage (bitmapFill.image.src, sl, st, sr - sl, sb - st, c.x - offsetX, c.y - offsetY, c.width, c.height);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!optimizationUsed) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.rect (c.x - offsetX, c.y - offsetY, c.width, c.height);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase WINDING_EVEN_ODD:\n\t\t\t\t\t\n\t\t\t\t\twindingRule = CanvasWindingRule.EVENODD;\n\t\t\t\t\n\t\t\t\tcase WINDING_NON_ZERO:\n\t\t\t\t\t\n\t\t\t\t\twindingRule = CanvasWindingRule.NONZERO;\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\tdata.skip (type);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (stl != null) Point.__pool.release (stl);\n\t\tif (sbr != null) Point.__pool.release (sbr);\n\t\t\n\t\tdata.destroy ();\n\t\t\n\t\tif (stroke && hasStroke) {\n\t\t\t\n\t\t\tif (hasFill && closeGap) {\n\t\t\t\t\n\t\t\t\tcontext.lineTo (startX - offsetX, startY - offsetY);\n\t\t\t\tclosePath (false);\n\t\t\t\t\n\t\t\t} else if (closeGap && positionX == startX && positionY == startY) {\n\t\t\t\t\n\t\t\t\tclosePath (false);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (!hitTesting) context.stroke ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!stroke) {\n\t\t\t\n\t\t\tif (hasFill || bitmapFill != null) {\n\t\t\t\t\n\t\t\t\tcontext.translate (-bounds.x, -bounds.y);\n\t\t\t\t\n\t\t\t\tif (pendingMatrix != null) {\n\t\t\t\t\t\n\t\t\t\t\tcontext.transform (pendingMatrix.a, pendingMatrix.b, pendingMatrix.c, pendingMatrix.d, pendingMatrix.tx, pendingMatrix.ty);\n\t\t\t\t\tif (!hitTesting) context.fill (windingRule);\n\t\t\t\t\tcontext.transform (inversePendingMatrix.a, inversePendingMatrix.b, inversePendingMatrix.c, inversePendingMatrix.d, inversePendingMatrix.tx, inversePendingMatrix.ty);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (!hitTesting) context.fill (windingRule);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontext.translate (bounds.x, bounds.y);\n\t\t\t\tcontext.closePath ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function render (graphics:Graphics, renderSession:RenderSession, parentTransform:Matrix):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tgraphics.__update ();\n\t\t\n\t\tif (graphics.__dirty) {\n\t\t\t\n\t\t\thitTesting = false;\n\t\t\t\n\t\t\tCanvasGraphics.graphics = graphics;\n\t\t\tCanvasGraphics.allowSmoothing = renderSession.allowSmoothing;\n\t\t\tbounds = graphics.__bounds;\n\t\t\t\n\t\t\tvar width = graphics.__width;\n\t\t\tvar height = graphics.__height;\n\t\t\t\n\t\t\tif (!graphics.__visible || graphics.__commands.length == 0 || bounds == null || width < 1 || height < 1) {\n\t\t\t\t\n\t\t\t\tgraphics.__canvas = null;\n\t\t\t\tgraphics.__context = null;\n\t\t\t\tgraphics.__bitmap = null;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (graphics.__canvas == null) {\n\t\t\t\t\t\n\t\t\t\t\tgraphics.__canvas = cast Browser.document.createElement (\"canvas\");\n\t\t\t\t\tgraphics.__context = graphics.__canvas.getContext (\"2d\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontext = graphics.__context;\n\t\t\t\tvar transform = graphics.__renderTransform;\n\t\t\t\tvar canvas = graphics.__canvas;\n\t\t\t\t\n\t\t\t\tvar scale = CanvasRenderer.scale;\n\t\t\t\tvar scaledWidth = Std.int (width * scale);\n\t\t\t\tvar scaledHeight = Std.int (height * scale);\n\t\t\t\t\n\t\t\t\t#if dom\n\t\t\t\t\n\t\t\t\tif (canvas.width == scaledWidth && canvas.height == scaledHeight) {\n\t\t\t\t\t\n\t\t\t\t\tcontext.clearRect (0, 0, scaledWidth, scaledHeight);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\n\t\t\t\t\tcanvas.width = scaledWidth;\n\t\t\t\t\tcanvas.height = scaledHeight;\n\t\t\t\t\tcanvas.style.width = width + \"px\";\n\t\t\t\t\tcanvas.style.height = height + \"px\";\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar transform = graphics.__renderTransform;\n\t\t\t\tcontext.setTransform (transform.a * scale, transform.b * scale, transform.c * scale, transform.d * scale, transform.tx * scale, transform.ty * scale);\n\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\n\t\t\t\tif (canvas.width == scaledWidth && canvas.height == scaledHeight) {\n\t\t\t\t\t\n\t\t\t\t\tcontext.clearRect (0, 0, scaledWidth, scaledHeight);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tcanvas.width  = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tfillCommands.clear ();\n\t\t\t\tstrokeCommands.clear ();\n\t\t\t\t\n\t\t\t\thasFill = false;\n\t\t\t\thasStroke = false;\n\t\t\t\tbitmapFill = null;\n\t\t\t\tbitmapRepeat = false;\n\t\t\t\t\n\t\t\t\tvar hasLineStyle = false;\n\t\t\t\tvar initStrokeX = 0.0;\n\t\t\t\tvar initStrokeY = 0.0;\n\t\t\t\t\n\t\t\t\twindingRule = CanvasWindingRule.EVENODD;\n\t\t\t\t\n\t\t\t\tvar data = new DrawCommandReader (graphics.__commands);\n\t\t\t\t\n\t\t\t\tfor (type in graphics.__commands.types) {\n\t\t\t\t\t\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase CUBIC_CURVE_TO:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\n\t\t\t\t\t\t\tfillCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstrokeCommands.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tinitStrokeX = c.anchorX;\n\t\t\t\t\t\t\t\tinitStrokeY = c.anchorY;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase CURVE_TO:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readCurveTo ();\n\t\t\t\t\t\t\tfillCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstrokeCommands.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tinitStrokeX = c.anchorX;\n\t\t\t\t\t\t\t\tinitStrokeY = c.anchorY;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase LINE_TO:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readLineTo ();\n\t\t\t\t\t\t\tfillCommands.lineTo (c.x, c.y);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstrokeCommands.lineTo (c.x, c.y);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tinitStrokeX = c.x;\n\t\t\t\t\t\t\t\tinitStrokeY = c.y;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase MOVE_TO:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readMoveTo ();\n\t\t\t\t\t\t\tfillCommands.moveTo (c.x, c.y);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstrokeCommands.moveTo (c.x, c.y);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tinitStrokeX = c.x;\n\t\t\t\t\t\t\t\tinitStrokeY = c.y;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase END_FILL:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.readEndFill ();\n\t\t\t\t\t\t\tendFill ();\n\t\t\t\t\t\t\tendStroke ();\n\t\t\t\t\t\t\thasFill = false;\n\t\t\t\t\t\t\thasLineStyle = false;\n\t\t\t\t\t\t\tbitmapFill = null;\n\t\t\t\t\t\t\tinitStrokeX = 0;\n\t\t\t\t\t\t\tinitStrokeY = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase LINE_GRADIENT_STYLE:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readLineGradientStyle ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!hasLineStyle && (initStrokeX != 0 || initStrokeY != 0)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstrokeCommands.moveTo (initStrokeX, initStrokeY);\n\t\t\t\t\t\t\t\tinitStrokeX = 0;\n\t\t\t\t\t\t\t\tinitStrokeY = 0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\thasLineStyle = true;\n\t\t\t\t\t\t\tstrokeCommands.lineGradientStyle (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase LINE_BITMAP_STYLE:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readLineBitmapStyle ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!hasLineStyle && (initStrokeX != 0 || initStrokeY != 0)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstrokeCommands.moveTo (initStrokeX, initStrokeY);\n\t\t\t\t\t\t\t\tinitStrokeX = 0;\n\t\t\t\t\t\t\t\tinitStrokeY = 0;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\thasLineStyle = true;\n\t\t\t\t\t\t\tstrokeCommands.lineBitmapStyle (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase LINE_STYLE:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readLineStyle ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!hasLineStyle && c.thickness != null) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (initStrokeX != 0 || initStrokeY != 0) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tstrokeCommands.moveTo (initStrokeX, initStrokeY);\n\t\t\t\t\t\t\t\t\tinitStrokeX = 0;\n\t\t\t\t\t\t\t\t\tinitStrokeY = 0;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\thasLineStyle = c.thickness != null;\n\t\t\t\t\t\t\tstrokeCommands.lineStyle (c.thickness, c.color, c.alpha, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase BEGIN_BITMAP_FILL, BEGIN_FILL, BEGIN_GRADIENT_FILL:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tendFill ();\n\t\t\t\t\t\t\tendStroke ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (type == BEGIN_BITMAP_FILL) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar c = data.readBeginBitmapFill ();\n\t\t\t\t\t\t\t\tfillCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\t\t\tstrokeCommands.beginBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else if (type == BEGIN_GRADIENT_FILL) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar c = data.readBeginGradientFill ();\n\t\t\t\t\t\t\t\tfillCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\t\t\tstrokeCommands.beginGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar c = data.readBeginFill ();\n\t\t\t\t\t\t\t\tfillCommands.beginFill (c.color, c.alpha);\n\t\t\t\t\t\t\t\tstrokeCommands.beginFill (c.color, c.alpha);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase DRAW_CIRCLE:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readDrawCircle ();\n\t\t\t\t\t\t\tfillCommands.drawCircle (c.x, c.y, c.radius);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstrokeCommands.drawCircle (c.x, c.y, c.radius);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase DRAW_ELLIPSE:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readDrawEllipse ();\n\t\t\t\t\t\t\tfillCommands.drawEllipse (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstrokeCommands.drawEllipse (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase DRAW_RECT:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readDrawRect ();\n\t\t\t\t\t\t\tfillCommands.drawRect (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstrokeCommands.drawRect (c.x, c.y, c.width, c.height);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase DRAW_ROUND_RECT:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\n\t\t\t\t\t\t\tfillCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (hasLineStyle) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstrokeCommands.drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase DRAW_TRIANGLES:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar c = data.readDrawTriangles ();\n\t\t\t\t\t\t\tfillCommands.drawTriangles (c.vertices, c.indices, c.uvtData, c.culling);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase WINDING_EVEN_ODD:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.readWindingEvenOdd ();\n\t\t\t\t\t\t\tfillCommands.windingEvenOdd ();\n\t\t\t\t\t\t\twindingRule = CanvasWindingRule.EVENODD;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase WINDING_NON_ZERO:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.readWindingNonZero ();\n\t\t\t\t\t\t\tfillCommands.windingNonZero ();\n\t\t\t\t\t\t\twindingRule = CanvasWindingRule.NONZERO;\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata.skip (type);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (fillCommands.length > 0) {\n\t\t\t\t\t\n\t\t\t\t\tendFill ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (strokeCommands.length > 0) {\n\t\t\t\t\t\n\t\t\t\t\tendStroke ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdata.destroy ();\n\t\t\t\tgraphics.__bitmap = BitmapData.fromCanvas (graphics.__canvas);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgraphics.__dirty = false;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function renderMask (graphics:Graphics, renderSession:RenderSession) {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tif (graphics.__commands.length != 0) {\n\t\t\t\n\t\t\tcontext = cast renderSession.context;\n\t\t\t\n\t\t\tvar positionX = 0.0;\n\t\t\tvar positionY = 0.0;\n\t\t\t\n\t\t\tvar offsetX = 0;\n\t\t\tvar offsetY = 0;\n\t\t\t\n\t\t\tvar data = new DrawCommandReader (graphics.__commands);\n\t\t\t\n\t\t\tvar x, y, width, height, kappa = .5522848, ox, oy, xe, ye, xm, ym;\n\t\t\t\n\t\t\tfor (type in graphics.__commands.types) {\n\t\t\t\t\n\t\t\t\tswitch (type) {\n\t\t\t\t\t\n\t\t\t\t\tcase CUBIC_CURVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readCubicCurveTo ();\n\t\t\t\t\t\tcontext.bezierCurveTo (c.controlX1 - offsetX, c.controlY1 - offsetY, c.controlX2 - offsetX, c.controlY2 - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\n\t\t\t\t\t\tpositionX = c.anchorX;\n\t\t\t\t\t\tpositionY = c.anchorY;\n\t\t\t\t\t\n\t\t\t\t\tcase CURVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readCurveTo ();\n\t\t\t\t\t\tcontext.quadraticCurveTo (c.controlX - offsetX, c.controlY - offsetY, c.anchorX - offsetX, c.anchorY - offsetY);\n\t\t\t\t\t\tpositionX = c.anchorX;\n\t\t\t\t\t\tpositionY = c.anchorY;\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_CIRCLE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawCircle ();\n\t\t\t\t\t\tcontext.arc (c.x - offsetX, c.y - offsetY, c.radius, 0, Math.PI * 2, true);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_ELLIPSE:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawEllipse ();\n\t\t\t\t\t\tx = c.x;\n\t\t\t\t\t\ty = c.y;\n\t\t\t\t\t\twidth = c.width;\n\t\t\t\t\t\theight = c.height;\n\t\t\t\t\t\tx -= offsetX;\n\t\t\t\t\t\ty -= offsetY;\n\t\t\t\t\t\t\n\t\t\t\t\t\tox = (width / 2) * kappa; // control point offset horizontal\n\t\t\t\t\t\toy = (height / 2) * kappa; // control point offset vertical\n\t\t\t\t\t\txe = x + width; // x-end\n\t\t\t\t\t\tye = y + height; // y-end\n\t\t\t\t\t\txm = x + width / 2; // x-middle\n\t\t\t\t\t\tym = y + height / 2; // y-middle\n\t\t\t\t\t\t\n\t\t\t\t\t\t//closePath (false);\n\t\t\t\t\t\t//beginPath ();\n\t\t\t\t\t\tcontext.moveTo (x, ym);\n\t\t\t\t\t\tcontext.bezierCurveTo (x, ym - oy, xm - ox, y, xm, y);\n\t\t\t\t\t\tcontext.bezierCurveTo (xm + ox, y, xe, ym - oy, xe, ym);\n\t\t\t\t\t\tcontext.bezierCurveTo (xe, ym + oy, xm + ox, ye, xm, ye);\n\t\t\t\t\t\tcontext.bezierCurveTo (xm - ox, ye, x, ym + oy, x, ym);\n\t\t\t\t\t\t//closePath (false);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_RECT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawRect ();\n\t\t\t\t\t\tcontext.rect (c.x - offsetX, c.y - offsetY, c.width, c.height);\n\t\t\t\t\t\n\t\t\t\t\tcase DRAW_ROUND_RECT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readDrawRoundRect ();\n\t\t\t\t\t\tdrawRoundRect (c.x - offsetX, c.y - offsetY, c.width, c.height, c.ellipseWidth, c.ellipseHeight);\n\t\t\t\t\t\n\t\t\t\t\tcase LINE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readLineTo ();\n\t\t\t\t\t\tcontext.lineTo (c.x - offsetX, c.y - offsetY);\n\t\t\t\t\t\tpositionX = c.x;\n\t\t\t\t\t\tpositionY = c.y;\n\t\t\t\t\t\n\t\t\t\t\tcase MOVE_TO:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar c = data.readMoveTo ();\n\t\t\t\t\t\tcontext.moveTo (c.x - offsetX, c.y - offsetY);\n\t\t\t\t\t\tpositionX = c.x;\n\t\t\t\t\t\tpositionY = c.y;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tdata.skip (type);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tdata.destroy ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function setSmoothing (smooth:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tif (!allowSmoothing) {\n\t\t\t\n\t\t\tsmooth = false;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (untyped (context).imageSmoothingEnabled != smooth) {\n\t\t\t\n\t\t\tuntyped (context).mozImageSmoothingEnabled = smooth;\n\t\t\t//untyped (context).webkitImageSmoothingEnabled = smooth;\n\t\t\tuntyped (context).msImageSmoothingEnabled = smooth;\n\t\t\tuntyped (context).imageSmoothingEnabled = smooth;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}\n","package openfl._internal.renderer.canvas;\n\n\nimport openfl._internal.renderer.AbstractMaskManager;\nimport openfl.display.*;\nimport openfl.geom.*;\n\n@:access(openfl.display.DisplayObject)\n@:keep\n\n\nclass CanvasMaskManager extends AbstractMaskManager {\n\t\n\t\n\tpublic function new (renderSession:RenderSession) {\n\t\t\n\t\tsuper (renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic override function pushMask (mask:DisplayObject):Void {\n\t\t\n\t\tvar context = renderSession.context;\n\t\t\n\t\tcontext.save ();\n\t\t\n\t\t//var cacheAlpha = mask.__worldAlpha;\n\t\tvar transform = mask.__getRenderTransform ();\n\t\t\n\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t\t\n\t\tcontext.beginPath ();\n\t\tmask.__renderCanvasMask (renderSession);\n\t\t\n\t\tcontext.clip ();\n\t\t\n\t\t//mask.worldAlpha = cacheAlpha;\n\t\t\n\t}\n\t\n\t\n\tpublic override function pushObject (object:DisplayObject, handleScrollRect:Bool = true):Void {\n\t\t\n\t\tif (handleScrollRect && object.__scrollRect != null) {\n\t\t\t\n\t\t\tpushRect (object.__scrollRect, object.__renderTransform);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!object.__cacheBitmapRender && object.__mask != null) {\n\t\t\t\n\t\t\tpushMask (object.__mask);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function pushRect (rect:Rectangle, transform:Matrix):Void {\n\t\t\n\t\tvar context = renderSession.context;\n\t\tcontext.save ();\n\t\t\n\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t\t\n\t\tcontext.beginPath ();\n\t\tcontext.rect (rect.x, rect.y, rect.width, rect.height);\n\t\tcontext.clip ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function popMask ():Void {\n\t\t\n\t\trenderSession.context.restore ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function popObject (object:DisplayObject, handleScrollRect:Bool = true):Void {\n\t\t\n\t\tif (!object.__cacheBitmapRender && object.__mask != null) {\n\t\t\t\n\t\t\tpopMask ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (handleScrollRect && object.__scrollRect != null) {\n\t\t\t\n\t\t\tpopRect ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function popRect ():Void {\n\t\t\n\t\trenderSession.context.restore ();\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.canvas;\n\n\nimport lime.graphics.CanvasRenderContext;\nimport openfl._internal.renderer.AbstractRenderer;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.Stage;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n@:access(openfl.display.Stage)\n@:access(openfl.display.Stage3D)\n\n\nclass CanvasRenderer extends AbstractRenderer {\n\t\n\t\n\tpublic static var scale (default, null):Float = 1;\n\t\n\tprivate var context:CanvasRenderContext;\n\t\n\t\n\tpublic function new (stage:Stage, context:CanvasRenderContext) {\n\t\t\n\t\tsuper (stage);\n\t\t\n\t\tthis.context = context;\n\t\t\n\t\trenderSession = new RenderSession ();\n\t\trenderSession.clearRenderDirty = true;\n\t\trenderSession.context = context;\n\t\t//renderSession.roundPixels = true;\n\t\trenderSession.renderer = this;\n\t\t#if !neko\n\t\trenderSession.blendModeManager = new CanvasBlendModeManager (renderSession);\n\t\trenderSession.maskManager = new CanvasMaskManager (renderSession);\n\t\t#end\n\t\t\n\t\t#if (js && html5)\n\t\tvar config = stage.window.config;\n\t\t\n\t\tif (config != null && Reflect.hasField (config, \"allowHighDPI\") && config.allowHighDPI) {\n\t\t\t\n\t\t\tscale = untyped window.devicePixelRatio || 1;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic override function clear ():Void {\n\t\t\n\t\trenderSession.blendModeManager.setBlendMode (NORMAL);\n\t\t\n\t\tcontext.setTransform (1, 0, 0, 1, 0, 0);\n\t\tcontext.globalAlpha = 1;\n\t\t\n\t\tif (!stage.__transparent && stage.__clearBeforeRender) {\n\t\t\t\n\t\t\tcontext.fillStyle = stage.__colorString;\n\t\t\tcontext.fillRect (0, 0, stage.stageWidth * stage.window.scale, stage.stageHeight * stage.window.scale);\n\t\t\t\n\t\t} else if (stage.__transparent && stage.__clearBeforeRender) {\n\t\t\t\n\t\t\tcontext.clearRect (0, 0, stage.stageWidth * stage.window.scale, stage.stageHeight * stage.window.scale);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function render ():Void {\n\t\t\n\t\trenderSession.allowSmoothing = (stage.quality != LOW);\n\t\t\n\t\tstage.__renderCanvas (renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic override function renderStage3D ():Void {\n\t\t\n\t\tfor (stage3D in stage.stage3Ds) {\n\t\t\t\n\t\t\tstage3D.__renderCanvas (stage, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.canvas;\n\n\nimport openfl.display.DisplayObject;\nimport openfl.geom.Matrix;\n\n#if (js && html5 && dom)\nimport js.Browser;\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.Graphics)\n@:access(openfl.geom.Matrix)\n\n\nclass CanvasShape {\n\t\n\t\n\tpublic static inline function render (shape:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (!shape.__renderable || shape.__worldAlpha <= 0) return;\n\t\t\n\t\tvar graphics = shape.__graphics;\n\t\t\n\t\tif (graphics != null) {\n\t\t\t\n\t\t\tCanvasGraphics.render (graphics, renderSession, shape.__renderTransform);\n\t\t\t\n\t\t\tvar bounds = graphics.__bounds;\n\t\t\tvar width = graphics.__width;\n\t\t\tvar height = graphics.__height;\n\t\t\t\n\t\t\tif (graphics.__canvas != null) {\n\t\t\t\t\n\t\t\t\tvar context = renderSession.context;\n\t\t\t\tvar scrollRect = shape.__scrollRect;\n\t\t\t\t\n\t\t\t\tif (width > 0 && height > 0 && (scrollRect == null || (scrollRect.width > 0 && scrollRect.height > 0))) {\n\t\t\t\t\t\n\t\t\t\t\trenderSession.blendModeManager.setBlendMode (shape.__worldBlendMode);\n\t\t\t\t\trenderSession.maskManager.pushObject (shape);\n\t\t\t\t\t\n\t\t\t\t\tcontext.globalAlpha = shape.__worldAlpha;\n\t\t\t\t\t\n\t\t\t\t\tvar transform = graphics.__worldTransform;\n\t\t\t\t\t\n\t\t\t\t\tif (renderSession.roundPixels) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, Std.int (transform.tx), Std.int (transform.ty));\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t#if dom\n\t\t\t\t\tvar reverseScale = 1 / CanvasRenderer.scale;\n\t\t\t\t\tcontext.scale (reverseScale, reverseScale);\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tcontext.drawImage (graphics.__canvas, 0, 0);\n\t\t\t\t\t\n\t\t\t\t\trenderSession.maskManager.popObject (shape);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.canvas;\n\n\nimport haxe.Utf8;\nimport openfl._internal.renderer.dom.DOMTextField;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.text.TextEngine;\nimport openfl.display.BitmapData;\nimport openfl.display.BitmapDataChannel;\nimport openfl.display.Graphics;\nimport openfl.events.Event;\nimport openfl.filters.GlowFilter;\nimport openfl.geom.Matrix;\nimport openfl.geom.Rectangle;\nimport openfl.text.TextField;\nimport openfl.text.TextFieldAutoSize;\nimport openfl.text.TextFormat;\nimport openfl.text.TextFormatAlign;\nimport openfl.utils.ByteArray;\n\n#if (js && html5)\nimport js.html.CanvasRenderingContext2D;\nimport js.Browser;\nimport js.html.ImageData;\n#end\n\n@:access(openfl._internal.text.TextEngine)\n@:access(openfl.display.Graphics)\n@:access(openfl.text.TextField)\n\n\nclass CanvasTextField {\n\t\n\t\n\t#if (js && html5)\n\tprivate static var context:CanvasRenderingContext2D;\n\tprivate static var clearRect:Null<Bool>;\n\t#end\n\t\n\t\n\tpublic static inline function render (textField:TextField, renderSession:RenderSession, transform:Matrix):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tvar textEngine = textField.__textEngine;\n\t\tvar bounds = textEngine.bounds;\n\t\tvar graphics = textField.__graphics;\n\t\t\n\t\tif (textField.__dirty) {\n\t\t\t\n\t\t\ttextField.__updateLayout ();\n\t\t\t\n\t\t\tif (graphics.__bounds == null) {\n\t\t\t\t\n\t\t\t\tgraphics.__bounds = new Rectangle ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgraphics.__bounds.copyFrom (bounds);\n\t\t\t\n\t\t}\n\t\t\n\t\tgraphics.__update ();\n\t\t\n\t\tif (textField.__dirty || graphics.__dirty) {\n\t\t\t\n\t\t\tvar width = graphics.__width;\n\t\t\tvar height = graphics.__height;\n\t\t\t\n\t\t\tif (((textEngine.text == null || textEngine.text == \"\") && !textEngine.background && !textEngine.border && !textEngine.__hasFocus && (textEngine.type != INPUT || !textEngine.selectable)) || ((textEngine.width <= 0 || textEngine.height <= 0) && textEngine.autoSize != TextFieldAutoSize.NONE)) {\n\t\t\t\t\n\t\t\t\ttextField.__graphics.__canvas = null;\n\t\t\t\ttextField.__graphics.__context = null;\n\t\t\t\ttextField.__graphics.__bitmap = null;\n\t\t\t\ttextField.__graphics.__dirty = false;\n\t\t\t\ttextField.__dirty = false;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (textField.__graphics.__canvas == null) {\n\t\t\t\t\t\n\t\t\t\t\ttextField.__graphics.__canvas = cast Browser.document.createElement (\"canvas\");\n\t\t\t\t\ttextField.__graphics.__context = textField.__graphics.__canvas.getContext (\"2d\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontext = graphics.__context;\n\t\t\t\t\n\t\t\t\tvar transform = graphics.__renderTransform;\n\t\t\t\t\n\t\t\t\t#if dom\n\t\t\t\t\t\n\t\t\t\t\tvar scale = CanvasRenderer.scale;\n\t\t\t\t\t\n\t\t\t\t\tgraphics.__canvas.width = Std.int (width * scale);\n\t\t\t\t\tgraphics.__canvas.height = Std.int (height * scale);\n\t\t\t\t\tgraphics.__canvas.style.width = width + \"px\";\n\t\t\t\t\tgraphics.__canvas.style.height = height + \"px\";\n\t\t\t\t\t\n\t\t\t\t\tcontext.setTransform (transform.a * scale, transform.b * scale, transform.c * scale, transform.d * scale, transform.tx * scale, transform.ty * scale);\n\t\t\t\t\t\n\t\t\t\t#else\n\t\t\t\t\t\n\t\t\t\t\tgraphics.__canvas.width  = width;\n\t\t\t\t\tgraphics.__canvas.height = height;\n\t\t\t\t\t\n\t\t\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tif (clearRect == null) {\n\t\t\t\t\t\n\t\t\t\t\tclearRect = untyped __js__ (\"(typeof navigator !== 'undefined' && typeof navigator['isCocoonJS'] !== 'undefined')\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (clearRect) {\n\t\t\t\t\t\n\t\t\t\t\tcontext.clearRect (0, 0, graphics.__canvas.width, graphics.__canvas.height);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((textEngine.text != null && textEngine.text != \"\") || textEngine.__hasFocus) {\n\t\t\t\t\t\n\t\t\t\t\tvar text = textEngine.text;\n\t\t\t\t\t\n\t\t\t\t\tif (!renderSession.allowSmoothing || (textEngine.antiAliasType == ADVANCED && textEngine.sharpness == 400)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tuntyped (graphics.__context).mozImageSmoothingEnabled = false;\n\t\t\t\t\t\t//untyped (graphics.__context).webkitImageSmoothingEnabled = false;\n\t\t\t\t\t\tuntyped (graphics.__context).msImageSmoothingEnabled = false;\n\t\t\t\t\t\tuntyped (graphics.__context).imageSmoothingEnabled = false;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tuntyped (graphics.__context).mozImageSmoothingEnabled = true;\n\t\t\t\t\t\t//untyped (graphics.__context).webkitImageSmoothingEnabled = true;\n\t\t\t\t\t\tuntyped (graphics.__context).msImageSmoothingEnabled = true;\n\t\t\t\t\t\tuntyped (graphics.__context).imageSmoothingEnabled = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (textEngine.border || textEngine.background) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.rect (0.5, 0.5, bounds.width - 1, bounds.height - 1);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (textEngine.background) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontext.fillStyle = \"#\" + StringTools.hex (textEngine.backgroundColor & 0xFFFFFF, 6);\n\t\t\t\t\t\t\tcontext.fill ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (textEngine.border) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\t\t\tcontext.strokeStyle = \"#\" + StringTools.hex (textEngine.borderColor & 0xFFFFFF, 6);\n\t\t\t\t\t\t\tcontext.stroke ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcontext.textBaseline = \"top\";\n\t\t\t\t\t//context.textBaseline = \"alphabetic\";\n\t\t\t\t\tcontext.textAlign = \"start\";\n\t\t\t\t\t\n\t\t\t\t\tvar scrollX = -textField.scrollH;\n\t\t\t\t\tvar scrollY = 0.0;\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...textField.scrollV - 1) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tscrollY -= textEngine.lineHeights[i];\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar advance;\n\t\t\t\t\t\n\t\t\t\t\t// Hack, baseline \"top\" is not consistent across browsers\n\t\t\t\t\t\n\t\t\t\t\tvar offsetY = 0.0;\n\t\t\t\t\tvar applyHack = ~/(iPad|iPhone|iPod|Firefox)/g.match (Browser.window.navigator.userAgent);\n\t\t\t\t\t\n\t\t\t\t\tfor (group in textEngine.layoutGroups) {\n\t\t\t\t\t\tif (group.lineIndex < textField.scrollV - 1) continue;\n\t\t\t\t\t\tif (group.lineIndex > textField.scrollV + textEngine.bottomScrollV - 2) break;\n\n\t\t\t\t\t\tif (group.format.underline) {\n\t\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\t\tcontext.strokeStyle = \"#000000\";\n\t\t\t\t\t\t\tcontext.lineWidth = .5;\n\t\t\t\t\t\t\tvar x = group.offsetX + scrollX;\n\t\t\t\t\t\t\tvar y = group.offsetY + offsetY + scrollY + group.ascent;\n\t\t\t\t\t\t\tcontext.moveTo(x, y);\n\t\t\t\t\t\t\tcontext.lineTo(x + group.width, y);\n\t\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.font = TextEngine.getFont (group.format);\n\t\t\t\t\t\tcontext.fillStyle = \"#\" + StringTools.hex (group.format.color & 0xFFFFFF, 6);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (applyHack) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\toffsetY = group.format.size * 0.185;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (textField.__filters != null && textField.__filters.length > 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Hack, force outline\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (Std.is (textField.__filters[0], GlowFilter)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar glowFilter:GlowFilter = cast textField.__filters[0];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar cacheAlpha = context.globalAlpha;\n\t\t\t\t\t\t\t\tcontext.globalAlpha = cacheAlpha * glowFilter.alpha;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontext.strokeStyle = \"#\" + StringTools.hex (glowFilter.color & 0xFFFFFF, 6);\n\t\t\t\t\t\t\t\tcontext.lineWidth = Math.max (glowFilter.blurX, glowFilter.blurY);\n\t\t\t\t\t\t\t\tcontext.strokeText (text.substring (group.startIndex, group.endIndex), group.offsetX + scrollX, group.offsetY + offsetY + scrollY);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcontext.strokeStyle = null;\n\t\t\t\t\t\t\t\tcontext.globalAlpha = cacheAlpha;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.fillText (text.substring (group.startIndex, group.endIndex), group.offsetX + scrollX, group.offsetY + offsetY + scrollY);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (textField.__caretIndex > -1 && textEngine.selectable) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (textField.__selectionIndex == textField.__caretIndex) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (textField.__showCursor && group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tadvance = 0.0;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfor (i in 0...(textField.__caretIndex - group.startIndex)) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (group.positions.length <= i) break;\n\t\t\t\t\t\t\t\t\t\tadvance += group.getAdvance (i);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar scrollY = 0.0;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfor (i in 0...textField.scrollV - 1) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tscrollY -= textEngine.lineHeights[i];\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcontext.fillRect (group.offsetX + advance - textField.scrollH, scrollY + 2, 1, TextEngine.getFormatHeight (textField.defaultTextFormat) - 1);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else if ((group.startIndex <= textField.__caretIndex && group.endIndex >= textField.__caretIndex) || (group.startIndex <= textField.__selectionIndex && group.endIndex >= textField.__selectionIndex) || (group.startIndex > textField.__caretIndex && group.endIndex < textField.__selectionIndex) || (group.startIndex > textField.__selectionIndex && group.endIndex < textField.__caretIndex)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar selectionStart = Std.int (Math.min (textField.__selectionIndex, textField.__caretIndex));\n\t\t\t\t\t\t\t\tvar selectionEnd = Std.int (Math.max (textField.__selectionIndex, textField.__caretIndex));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (group.startIndex > selectionStart) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tselectionStart = group.startIndex;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (group.endIndex < selectionEnd) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tselectionEnd = group.endIndex;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar start, end;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstart = textField.getCharBoundaries (selectionStart);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (selectionEnd >= textEngine.text.length) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tend = textField.getCharBoundaries (textEngine.text.length - 1);\n\t\t\t\t\t\t\t\t\tend.x += end.width + 2;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tend = textField.getCharBoundaries (selectionEnd);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (start != null && end != null) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcontext.fillStyle = \"#000000\";\n\t\t\t\t\t\t\t\t\tcontext.fillRect (start.x + scrollX, start.y + scrollY, end.x - start.x, group.height);\n\t\t\t\t\t\t\t\t\tcontext.fillStyle = \"#FFFFFF\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// TODO: fill only once\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcontext.fillText (text.substring (selectionStart, selectionEnd), scrollX + start.x, group.offsetY + offsetY + scrollY);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (textEngine.border || textEngine.background) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (textEngine.border) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontext.rect (0.5, 0.5, bounds.width - 1, bounds.height - 1);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontext.rect (0, 0, bounds.width, bounds.height);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (textEngine.background) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontext.fillStyle = \"#\" + StringTools.hex (textEngine.backgroundColor & 0xFFFFFF, 6);\n\t\t\t\t\t\t\tcontext.fill ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (textEngine.border) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\t\t\tcontext.lineCap = \"square\";\n\t\t\t\t\t\t\tcontext.strokeStyle = \"#\" + StringTools.hex (textEngine.borderColor & 0xFFFFFF, 6);\n\t\t\t\t\t\t\tcontext.stroke ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (textField.__caretIndex > -1 && textEngine.selectable && textField.__showCursor) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar scrollX = -textField.scrollH;\n\t\t\t\t\t\tvar scrollY = 0.0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...textField.scrollV - 1) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscrollY -= textEngine.lineHeights[i];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontext.beginPath ();\n\t\t\t\t\t\tcontext.strokeStyle = \"#\" + StringTools.hex (textField.defaultTextFormat.color & 0xFFFFFF, 6);\n\t\t\t\t\t\tcontext.moveTo (scrollX + 2.5, scrollY + 2.5);\n\t\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\t\tcontext.lineTo (scrollX + 2.5, scrollY + TextEngine.getFormatHeight (textField.defaultTextFormat) - 1);\n\t\t\t\t\t\tcontext.stroke ();\n\t\t\t\t\t\tcontext.closePath ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgraphics.__bitmap = BitmapData.fromCanvas (textField.__graphics.__canvas);\n\t\t\t\tgraphics.__visible = true;\n\t\t\t\ttextField.__dirty = false;\n\t\t\t\tgraphics.__dirty = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.console;\nimport openfl._internal.renderer.DrawCommandType;\n#if lime_console\n\n\nimport cpp.vm.WeakRef;\nimport cpp.Int8;\nimport cpp.UInt8;\nimport cpp.Float32;\nimport lime.graphics.console.IndexBuffer;\nimport lime.graphics.console.PointerUtil;\nimport lime.graphics.console.Primitive;\nimport lime.graphics.console.RenderState;\nimport lime.graphics.console.Shader;\nimport lime.graphics.console.Texture;\nimport lime.graphics.console.TextureData;\nimport lime.graphics.console.TextureFilter;\nimport lime.graphics.console.TextureFormat;\nimport lime.graphics.console.VertexDecl;\nimport lime.graphics.console.VertexBuffer;\nimport lime.graphics.ConsoleRenderContext;\nimport lime.graphics.Image;\nimport lime.math.Matrix4;\nimport lime.text.Glyph;\nimport lime.text.TextLayout;\nimport openfl._internal.renderer.cairo.CairoTextField;\nimport openfl._internal.renderer.AbstractRenderer;\nimport openfl.display.Bitmap;\nimport openfl.display.BitmapData;\nimport openfl.display.BlendMode;\nimport openfl.display.CapsStyle;\nimport openfl.display.DisplayObject;\nimport openfl.display.DisplayObjectContainer;\nimport openfl.display.Graphics;\nimport openfl.display.JointStyle;\nimport openfl.display.LineScaleMode;\nimport openfl.display.Shape;\nimport openfl.display.Sprite;\nimport openfl.display.Stage;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.text.Font;\nimport openfl.text.TextField;\nimport openfl.text.TextFieldAutoSize;\nimport openfl.text.TextFormat;\nimport openfl.text.TextFormatAlign;\n\n\n@:access(openfl.display.Bitmap)\n@:access(openfl.display.BitmapData)\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.DisplayObjectContainer)\n@:access(openfl.display.Graphics)\n@:access(openfl.display.Sprite)\n@:access(openfl.display.Stage)\n@:access(openfl.geom.Rectangle)\n\n\nclass ConsoleRenderer extends AbstractRenderer {\n\t\n\n\tprivate var ctx:ConsoleRenderContext;\n\n\tprivate var defaultShader:Shader;\n\tprivate var fillShader:Shader;\n\n\t// TODO(james4k): move to a TransientBuffers class or something.. or move to C++\n\tprivate var indexBufferCounts:Array<Int> = [];\n\tprivate var indexBuffers:Array<IndexBuffer> = [];\n\tprivate var indexBufferAges:Array<Int8> = [];\n\tprivate var vertexBufferDecls:Array<VertexDecl> = [];\n\tprivate var vertexBufferCounts:Array<Int> = [];\n\tprivate var vertexBuffers:Array<VertexBuffer> = [];\n\tprivate var vertexBufferAges:Array<Int8> = [];\n\n\tprivate var textureImages:Array<WeakRef<Image>> = [];\n\tprivate var textures:Array<Texture> = [];\n\n\tprivate var scissorRect:Array<Float32> = [0, 0, 0, 0];\n\tprivate var viewProj:Matrix4;\n\tprivate var transform:Matrix4;\n\n\tprivate var hasFill = false;\n\tprivate var fillBitmap:BitmapData = null;\n\tprivate var fillBitmapSmooth:Bool = false;\n\tprivate var fillColor:Array<Float32> = [1, 1, 1, 1];\n\n\tprivate var hasStroke = false;\n\tprivate var lineBitmap:BitmapData = null;\n\tprivate var lineBitmapMatrix:Matrix = null;\n\tprivate var lineBitmapRepeat:Bool = false;\n\tprivate var lineBitmapSmooth:Bool = false;\n\tprivate var lineThickness = 0.0;\n\tprivate var lineColor:Array<Float32> = [1, 1, 1, 1];\n\tprivate var lineAlpha = 1.0;\n\tprivate var lineScaleMode = LineScaleMode.NORMAL;\n\tprivate var lineCaps = CapsStyle.ROUND;\n\tprivate var lineJoints = JointStyle.ROUND;\n\tprivate var lineMiter = 3.0;\n\n\tprivate var whiteTexture:Texture;\n\n\tprivate var points = new Array<Float32> ();\n\n\tprivate var blendMode:BlendMode = NORMAL;\n\tprivate var clipRect:Rectangle = null;\n\n\t#if !console_pc\n\tprivate static var pixelOffsetX:Float = 0.0;\n\tprivate static var pixelOffsetY:Float = 0.0;\n\t#else\n\t// DirectX 9 texture sampling offset\n\tprivate static var pixelOffsetX:Float = 0.5;\n\tprivate static var pixelOffsetY:Float = 0.5;\n\t#end\n\n\t\n\tpublic function new (stage:Stage, ctx:ConsoleRenderContext) {\n\n\t\tthis.ctx = ctx;\n\t\t\n\t\tsuper (stage);\n\n\t\tdefaultShader = ctx.lookupShader (\"openfl_default\");\n\t\tfillShader = ctx.lookupShader (\"openfl_fill\");\n\n\t\t\n\t\tvar white:cpp.UInt32 = 0xffffffff;\n\t\twhiteTexture = ctx.createTexture (\n\t\t\tTextureFormat.ARGB,\n\t\t\t1, 1,\n\t\t\tcpp.Pointer.addressOf (white).reinterpret ()\n\t\t);\n\n\t}\n\n\n\tpublic function destroy ():Void {\n\n\t\tfor (ib in indexBuffers) {\n\t\t\tctx.destroyIndexBuffer (ib);\n\t\t}\n\n\t\tfor (vb in vertexBuffers) {\n\t\t\tctx.destroyVertexBuffer (vb);\n\t\t}\n\n\t\tfor (tex in textures) {\n\t\t\tctx.destroyTexture (tex);\n\t\t}\n\n\t\tindexBuffers = null;\n\t\tvertexBuffers = null;\n\t\ttextures = null;\n\n\t}\n\t\n\t\n\tpublic override function render ():Void {\n\n\t\tviewProj = Matrix4.createOrtho (\n\t\t\t0 + pixelOffsetX,\n\t\t\twidth + pixelOffsetX,\n\t\t\theight + pixelOffsetY,\n\t\t\t0 + pixelOffsetY,\n\t\t\t-1, 1\n\t\t);\n\n\t\tctx.setViewport (0, 0, width, height);\n\t\tscissorRect[0] = 0.0;\n\t\tscissorRect[1] = 0.0;\n\t\tscissorRect[2] = width;\n\t\tscissorRect[3] = height;\n\t\tctx.clear (\n\t\t\tStd.int (stage.__colorSplit[0] * 0xff),\n\t\t\tStd.int (stage.__colorSplit[1] * 0xff),\n\t\t\tStd.int (stage.__colorSplit[2] * 0xff),\n\t\t\t0xff\n\t\t);\n\n\t\tctx.setRasterizerState (CULLNONE_SOLID);\n\t\tctx.setDepthStencilState (DEPTHTESTOFF_DEPTHWRITEOFF_STENCILOFF);\n\n\t\tblendMode = NORMAL;\n\t\tsetBlendState (blendMode);\n\n\t\trenderDisplayObject (stage);\n\n\t\tcollectTransientBuffers ();\n\t\tcollectTextures ();\n\n\t}\n\n\n\tpublic function setBlendState (b:BlendMode):Void {\n\n\t\t#if !final\n\t\tswitch (b) {\n\t\t\tcase NORMAL, ADD, MULTIPLY:\n\t\t\tdefault:\n\t\t\t\ttrace ('unsupported blend mode: $b');\n\t\t}\n\t\t#end\n\n\t\t// TODO(james4k): premultiplied alpha\n\t\tctx.setBlendState (switch (b) {\n\t\t\tcase ADD:       SRCALPHA_ONE_ONE_ZERO_RGB;\n\t\t\tcase MULTIPLY:  DESTCOLOR_INVSRCALPHA_ONE_ZERO_RGB;\n\t\t\tdefault:        SRCALPHA_INVSRCALPHA_ONE_ZERO_RGB;\n\t\t});\n\n\t}\n\n\n\tpublic override function resize (width:Int, height:Int):Void {\n\n\t\tsuper.resize (width, height);\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\t\n\tprivate function renderDisplayObject (object:DisplayObject) {\n\n\t\tif (!object.__renderable || object.__worldAlpha <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar prevClipRect = clipRect;\n\t\tif (object.scrollRect != null) {\n\t\t\tclipRect = new Rectangle (\n\t\t\t\tobject.scrollRect.x,\n\t\t\t\tobject.scrollRect.y,\n\t\t\t\tobject.scrollRect.width,\n\t\t\t\tobject.scrollRect.height\n\t\t\t);\n\t\t\tclipRect.__transform (clipRect, object.__getWorldTransform ());\n\t\t}\n\n\t\tvar prevBlendMode = blendMode;\n\t\tvar objBlendMode:BlendMode = (object.blendMode == null) ? NORMAL : object.blendMode;\n\t\tif (objBlendMode != blendMode) {\n\t\t\tblendMode = objBlendMode;\n\t\t\tsetBlendState(objBlendMode);\n\t\t}\n\n\t\tif (Std.is (object, DisplayObjectContainer)) {\n\n\t\t\trenderDisplayObjectContainer (cast (object));\n\n\t\t} else if (Std.is (object, Bitmap)) {\n\n\t\t\tvar b:Bitmap = cast (object);\n\t\t\tif (b.__bitmapData != null) {\n\t\t\t\tdrawBitmapData (b, b.__bitmapData, b.smoothing);\n\t\t\t}\n\n\t\t} else if (Std.is (object, Shape)) {\n\n\t\t\trenderShape_ (cast (object));\n\n\t\t} else if (Std.is (object, TextField)) {\n\n\t\t\trenderTextField (cast (object));\n\n\t\t}\n\n\t\tif (object.scrollRect != null) {\n\t\t\tclipRect = prevClipRect;\t\n\t\t}\n\t\tblendMode = prevBlendMode;\n\n\t}\n\n\n\tprivate function renderDisplayObjectContainer (object:DisplayObjectContainer) {\n\n\t\tif (Std.is (object, Sprite)) {\n\n\t\t\trenderSprite (cast (object));\n\t\t}\n\n\t\tfor (child in object.__children) {\n\n\t\t\trenderDisplayObject (child);\n\n\t\t}\n\n\t\tobject.__removedChildren = [];\n\n\t}\n\n\n\tprivate function setObjectTransform (object:DisplayObject) {\n\n\t\tobject.__getWorldTransform ();\n\t\tvar matrix = object.__worldTransform;\n\t\ttransform = Matrix4.createABCD (\n\t\t\tmatrix.a,\n\t\t\tmatrix.b,\n\t\t\tmatrix.c,\n\t\t\tmatrix.d,\n\t\t\tmatrix.tx,\n\t\t\tmatrix.ty\n\t\t);\n\n\t}\n\n\n\t// transientIndexBuffer returns an IndexBuffer that is only valid for the frame\n\tprivate function transientIndexBuffer (indexCount:Int):IndexBuffer {\n \n\t\t// aligned indexCount to allow for more reusability\n\t\tvar align = 16;\n\t\tindexCount = (indexCount + align - 1) & ~(align - 1);\n\n\t\t// age of -1 to double buffer, to prevent race conditions\n\t\t// TODO(james4k): confirm this is necessary. dynamic vertex buffers are\n\t\t// double buffered internally, and dynamic index buffers are not..\n\t\tvar startAge = -1;\n\n\t\tfor (i in 0...indexBuffers.length) {\n\n\t\t\tif (indexBufferCounts[i] == indexCount &&\n\t\t\t\tindexBufferAges[i] > 0\n\t\t\t) {\n\t\t\t\tindexBufferAges[i] = startAge;\n\t\t\t\treturn indexBuffers[i];\n\t\t\t}\n\n\t\t}\n\n\t\tvar ib = ctx.createIndexBuffer (untyped __cpp__ (\"NULL\"), indexCount);\n\n\t\tindexBufferCounts.push (indexCount);\n\t\tindexBuffers.push (ib);\n\t\tindexBufferAges.push (startAge);\n\n\t\treturn ib;\n\n\t}\n\n\n\t// transientVertexBuffer returns a VertexBuffer that is only valid for the frame\n\tprivate function transientVertexBuffer (decl:VertexDecl, vertexCount:Int):VertexBuffer {\n \n\t\t// aligned vertexCount to allow for more reusability\n\t\tvar align = 16;\n\t\tvertexCount = (vertexCount + align - 1) & ~(align - 1);\n\n\t\t// vertex buffers are double buffered internally, so can reuse every frame.\n\t\t// (compare to transientIndexBuffer)\n\t\tvar startAge = 0;\n\n\t\tfor (i in 0...vertexBuffers.length) {\n\n\t\t\tif (vertexBufferDecls[i] == decl &&\n\t\t\t\tvertexBufferCounts[i] == vertexCount &&\n\t\t\t\tvertexBufferAges[i] > 0\n\t\t\t) {\n\t\t\t\tvertexBufferAges[i] = startAge;\n\t\t\t\treturn vertexBuffers[i];\n\t\t\t}\n\n\t\t}\n\n\t\tvar vb = ctx.createVertexBuffer (decl, vertexCount);\t\n\n\t\tvertexBufferDecls.push (decl);\n\t\tvertexBufferCounts.push (vertexCount);\n\t\tvertexBuffers.push (vb);\n\t\tvertexBufferAges.push (startAge);\n\n\t\treturn vb;\n\n\t}\n\n\n\tprivate function collectTransientBuffers ():Void {\n\n\t\tvar i = 0;\n\n\t\twhile (i < indexBufferAges.length) {\n\n\t\t\tif (indexBufferAges[i] > 1) {\n\n\t\t\t\tctx.destroyIndexBuffer (indexBuffers[i]);\n\n\t\t\t\tif (i == indexBufferCounts.length - 1) {\n\t\t\t\t\tindexBufferCounts.pop ();\n\t\t\t\t\tindexBuffers.pop ();\n\t\t\t\t\tindexBufferAges.pop ();\n\t\t\t\t} else {\n\t\t\t\t\tindexBufferCounts[i] = indexBufferCounts.pop ();\n\t\t\t\t\tindexBuffers[i] = indexBuffers.pop ();\n\t\t\t\t\tindexBufferAges[i] = indexBufferAges.pop ();\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tindexBufferAges[i]++;\n\t\t\ti++;\n\n\t\t}\n\n\t\ti = 0;\n\n\t\twhile (i < vertexBufferAges.length) {\n\n\t\t\tif (vertexBufferAges[i] > 1) {\n\n\t\t\t\tctx.destroyVertexBuffer (vertexBuffers[i]);\n\n\t\t\t\tif (i == vertexBufferDecls.length - 1) {\n\t\t\t\t\tvertexBufferDecls.pop ();\n\t\t\t\t\tvertexBufferCounts.pop ();\n\t\t\t\t\tvertexBuffers.pop ();\n\t\t\t\t\tvertexBufferAges.pop ();\n\t\t\t\t} else {\n\t\t\t\t\tvertexBufferDecls[i] = vertexBufferDecls.pop ();\n\t\t\t\t\tvertexBufferCounts[i] = vertexBufferCounts.pop ();\n\t\t\t\t\tvertexBuffers[i] = vertexBuffers.pop ();\n\t\t\t\t\tvertexBufferAges[i] = vertexBufferAges.pop ();\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvertexBufferAges[i]++;\n\t\t\ti++;\n\n\t\t}\n\n\t}\n\n\n\tprivate function collectTextures ():Void {\n\n\t\tvar i = 0;\n\n\t\twhile (i < textureImages.length) {\n\n\t\t\tif (textureImages[i].get () == null) {\n\n\t\t\t\tctx.destroyTexture (textures[i]);\n\n\t\t\t\tif (i == textureImages.length - 1) {\n\t\t\t\t\ttextureImages.pop ();\n\t\t\t\t\ttextures.pop ();\n\t\t\t\t} else {\n\t\t\t\t\ttextureImages[i] = textureImages.pop ();\n\t\t\t\t\ttextures[i] = textures.pop ();\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\ti++;\n\n\t\t}\n\n\t}\n\n\n\tprivate function imageTexture (image:Image):Texture {\n\n\t\tfor (i in 0...textureImages.length) {\n\n\t\t\tif (textureImages[i].get () == image) {\n\n\t\t\t\tvar t = textures[i];\n\n\t\t\t\tif (image.dirty && image.buffer.data != null) {\n\n\t\t\t\t\tt.updateFromRGBA (\n\t\t\t\t\t\tcast (cpp.Pointer.arrayElem (image.buffer.data.buffer.getData (), 0))\n\t\t\t\t\t);\n\n\t\t\t\t\timage.dirty = false;\n\n\t\t\t\t}\n\n\t\t\t\treturn t;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar texture = ctx.createTexture (\n\t\t\tTextureFormat.ARGB,\n\t\t\timage.buffer.width,\n\t\t\timage.buffer.height,\n\t\t\tuntyped __cpp__ (\"NULL\")\n\t\t);\n\n\t\tif (image.buffer.data != null) {\n\n\t\t\ttexture.updateFromRGBA (\n\t\t\t\tcast (cpp.Pointer.arrayElem (image.buffer.data.buffer.getData (), 0))\n\t\t\t);\n\n\t\t}\n\n\t\timage.dirty = false;\n\n\t\ttextureImages.push (new WeakRef (image));\n\t\ttextures.push (texture);\n\n\t\treturn texture;\n\n\t}\n\n\n\tprivate function beginClipRect ():Void {\n\n\t\tif (clipRect == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar viewport = new Rectangle (0, 0, this.width, this.height);\n\t\tviewport = viewport.intersection (clipRect);\n\n\t\tviewProj = Matrix4.createOrtho (\n\t\t\tMath.floor (viewport.x) + pixelOffsetX,\n\t\t\tMath.floor (viewport.x) + Math.ceil (viewport.width) + pixelOffsetX,\n\t\t\tMath.floor (viewport.y) + Math.ceil (viewport.height) + pixelOffsetY,\n\t\t\tMath.floor (viewport.y) + pixelOffsetY,\n\t\t\t-1, 1\n\t\t);\n\n\t\tctx.setViewport (\n\t\t\tcast (viewport.x),\n\t\t\tcast (viewport.y),\n\t\t\tcast (Math.ceil (viewport.width)),\n\t\t\tcast (Math.ceil (viewport.height))\n\t\t);\n\t\tscissorRect[0] = viewport.x;\n\t\tscissorRect[1] = viewport.y;\n\t\tscissorRect[2] = viewport.x + viewport.width;\n\t\tscissorRect[3] = viewport.y + viewport.height;\n\n\t}\n\n\n\tprivate function endClipRect ():Void {\n\n\t\tif (clipRect == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewProj = Matrix4.createOrtho (\n\t\t\t0 + pixelOffsetX,\n\t\t\tthis.width + pixelOffsetX,\n\t\t\tthis.height + pixelOffsetY,\n\t\t\t0 + pixelOffsetY,\n\t\t\t-1, 1\n\t\t);\n\n\t\tctx.setViewport (0, 0, this.width, this.height);\n\t\tscissorRect[0] = 0;\n\t\tscissorRect[1] = 0;\n\t\tscissorRect[2] = this.width;\n\t\tscissorRect[3] = this.height;\n\n\t}\n\n\n\tprivate function drawBitmapData (object:DisplayObject, bitmap:BitmapData, smoothing:Bool) {\n\n\t\tbeginClipRect ();\n\n\t\tsetObjectTransform (object);\n\t\ttransform.append (viewProj);\n\t\ttransform.transpose ();\n\n\t\tvar w = bitmap.width;\n\t\tvar h = bitmap.height;\n\t\tvar color:Array<cpp.Float32> = [1, 1, 1, object.__worldAlpha];\n\n\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.PositionTexcoordColor, 4);\n\t\tvar out = vertexBuffer.lock ();\n\t\tout.vec3 (0, 0, 0);\n\t\tout.vec2 (0, 0);\n\t\tout.color(0xff, 0xff, 0xff, 0xff);\n\t\tout.vec3 (0, h, 0);\n\t\tout.vec2 (0, 1);\n\t\tout.color(0xff, 0xff, 0xff, 0xff);\n\t\tout.vec3 (w, 0, 0);\n\t\tout.vec2 (1, 0);\n\t\tout.color(0xff, 0xff, 0xff, 0xff);\n\t\tout.vec3 (w, h, 0);\n\t\tout.vec2 (1, 1);\n\t\tout.color(0xff, 0xff, 0xff, 0xff);\n\t\tvertexBuffer.unlock ();\n\n\t\tvar texture = imageTexture (bitmap.image);\n\n\t\tctx.bindShader (defaultShader);\n\t\tctx.setPixelShaderConstantF (0, cpp.Pointer.arrayElem (scissorRect, 0), 1);\n\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\n\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (color, 0), 1);\n\t\tctx.setVertexSource (vertexBuffer);\n\t\tctx.setTexture (0, texture);\n\t\tctx.setTextureAddressMode (0, Clamp, Clamp);\n\t\tif (smoothing) {\n\t\t\tctx.setTextureFilter (0, TextureFilter.Linear, TextureFilter.Linear);\n\t\t} else {\n\t\t\tctx.setTextureFilter (0, TextureFilter.Nearest, TextureFilter.Nearest);\n\t\t}\n\t\tctx.draw (Primitive.TriangleStrip, 0, 2);\n\n\t\tendClipRect ();\n\n\t}\n\n\n\tprivate function renderShape_ (shape:Shape) {\n\n\t\tvar graphics = shape.__graphics;\n\t\t//var dirty = graphics.__dirty;\n\t\tif (graphics.__commands.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawNaive (shape, graphics);\n\n\t}\n\n\n\tprivate function renderSprite (sprite:Sprite) {\n\n\t\tif (sprite.__graphics == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tdraw (sprite);\n\n\t}\n\t\n\t\n\tprivate function renderTextField (tf:TextField) {\n\t\t\n\t\tCairoTextField.render (tf, null);\n\n\t\tif (tf.__graphics == null || tf.__graphics.__bitmap == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar smoothing = false;\n\t\tdrawBitmapData (tf, tf.__graphics.__bitmap, smoothing);\n\n\t}\n\n\n\tprivate function draw (object:DisplayObject) {\n\n\t\tvar graphics = object.__graphics;\n\t\tvar dirty = graphics.__dirty;\n\t\tif (graphics.__commands.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawNaive (object, graphics);\n\n/*\n\t\tif (dirty) {\n\n\t\t\t//update (object, graphics);\n\n\t\t}\n\n\t\tif (object.cacheAsBitmap) {\n\n\t\t\ttrace (\"not implemented\");\n\n\t\t} else {\n\t\t\t\n\t\t\t//submit ();\n\n\t\t}\n*/\n\n\t}\n\n\n\tprivate function closePath (object:DisplayObject) {\n\n\t\tdrawFill (object);\n\t\tdrawStroke (object);\n\n\t\tcpp.NativeArray.setSize (points, 0);\n\n\t}\n\n\t\n\t// div divides an integer by an integer using integer math.\n\t// Normally in haxe, Int divided by Int returns Float. Can't seem to be\n\t// avoided even with cast() or Std.int()\n\tprivate inline function div (a:Int, b:Int):Int {\n\n\t\treturn untyped __cpp__ (\"{0} / {1}\", a, b);\n\n\t}\n\n\n\n\n\tprivate function drawFill (object:DisplayObject) {\n\n\t\t// need minimum of 3 points\n\t\tif (!hasFill || points.length < 6) {\n\t\t\treturn;\n\t\t}\n\n\t\t//var triangles = new Array<Int> ();\n\t\t//PolyK.triangulate (triangles, points);\n\n\t\tsetObjectTransform (object);\n\t\ttransform.append (viewProj);\n\t\ttransform.transpose ();\n\n\t\tvar vertexCount = div (points.length, 2);\n\t\tvar indexCount = (vertexCount - 2) * 3;\n\n\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.Position, vertexCount);\t\n\t\tvar indexBuffer = transientIndexBuffer (indexCount);\n\n\t\tvar out = vertexBuffer.lock ();\n\t\tfor (i in 0...vertexCount) {\n\t\t\tout.vec3 (points[i*2 + 0], points[i*2 + 1], 0);\n\t\t}\n\t\tvertexBuffer.unlock ();\n\n\t\tvar unsafeIndices = indexBuffer.lock ();\n\t\tfor (i in 0...vertexCount-2) {\n\t\t\tunsafeIndices[i*3 + 0] = 0;\n\t\t\tunsafeIndices[i*3 + 1] = i+1;\n\t\t\tunsafeIndices[i*3 + 2] = i+2;\n\t\t}\n\t\tindexBuffer.unlock ();\n\n\t\tctx.bindShader (fillShader);\n\t\tctx.setPixelShaderConstantF (0, cpp.Pointer.arrayElem (scissorRect, 0), 1);\n\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\n\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (fillColor, 0), 1);\n\t\tctx.setVertexSource (vertexBuffer);\n\t\t//ctx.draw (Primitive.Triangle, 0, vertexCount - 2);\n\t\tctx.setIndexSource (indexBuffer);\n\t\tctx.drawIndexed (Primitive.Triangle, vertexCount, 0, div (indexCount, 3));\n\n\t}\n\n\n\n\tprivate function drawStroke (object:DisplayObject) {\n\n\t\tvar numPoints = Std.int (points.length / 2);\n\t\tif (!hasStroke || numPoints < 2) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO(james4k): complex tesselation like this could easily go into a\n\t\t// background job. maybe do so if expected vertices is greater than 64 or\n\t\t// something. doubt we have any games that need this yet, though. think\n\t\t// about this when the renderer does more shape tesselation.\n\t\t\n\t\t// TODO(james4k): if lines overlap, may be visible overdraw if lines\n\t\t// are transparent. not clear if there is a cheap solution.\n\n\t\t// TODO(james4k): closed paths to form rectangles/shapes\n\t\t// TODO(james4k): bevel/miter joints\n\t\t// TODO(james4k): square/butt caps\n\n\t\tsetObjectTransform (object);\n\t\ttransform.append (viewProj);\n\t\ttransform.transpose ();\n\n\t\t// TODO(james4k): closed paths should form a joint, and have no caps\n\t\tvar numSegments = numPoints - 1;\n\t\tvar numCaps = 2;\n\t\tvar numJoints = numPoints - numCaps;\n\n\t\t// TODO(james4k): prealloc size should be ConsoleLineTesselator's jurisdiction.\n\t\t// also, these overestimate a bit. at least as of May 14th, 2016.\n\t\tvar vertexCount = numSegments * 4;\n\t\tvertexCount += numCaps; // for now just 1 additional vertex for rounded cap\n\t\tvertexCount += numJoints; // for now just 1 additional vertex for rounded joint\n\t\tvar indexCount = numSegments * 6; // 2 triangles per segment\n\t\tindexCount += numCaps * 3; // 1 triangle per cap\n\t\tindexCount += numJoints * 12; // 4 triangles per joint\n\n\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.PositionTexcoordColor, vertexCount);\t\n\t\tvar indexBuffer = transientIndexBuffer (indexCount);\n\t\tvar texture = if (lineBitmap != null) {\n\t\t\timageTexture (lineBitmap.image);\n\t\t} else {\n\t\t\twhiteTexture;\n\t\t}\n\t\tvar bitmapMatrix:Matrix = new Matrix ();\n\t\tif (lineBitmap != null) {\n\t\t\t// TODO(james4k): this is a hack, only applies translation. need to\n\t\t\t// think through these coordinate spaces.\n\t\t\tvar tx = 0.0;\n\t\t\tvar ty = 0.0;\n\t\t\tif (lineBitmapMatrix != null) {\n\t\t\t\ttx = lineBitmapMatrix.tx;\n\t\t\t\tty = lineBitmapMatrix.ty;\n\t\t\t}\n\t\t\tbitmapMatrix.translate (-tx, -ty);\n\t\t\tbitmapMatrix.scale (1.0 / lineBitmap.width, 1.0 / lineBitmap.height);\n\t\t\tbitmapMatrix.translate (tx, ty);\n\t\t}\n\n\t\tvar vertices = vertexBuffer.lock ();\n\t\tvar unsafeIndices = indexBuffer.lock ();\n\n\t\tvar radius = lineThickness * 0.5;\n\t\tvar line = new ConsoleLineTesselator (vertices, unsafeIndices, radius, bitmapMatrix);\n\n\t\tline.capRound (\n\t\t\tpoints[0], points[1],\n\t\t\tpoints[2], points[3]\n\t\t);\n\t\tfor (i in 1...numPoints-1) {\n\t\t\tline.jointRound (\n\t\t\t\tpoints[i*2+0], points[i*2+1],\n\t\t\t\tpoints[i*2+2], points[i*2+3]\n\t\t\t);\n\t\t}\n\t\tline.capRound (\n\t\t\tpoints[points.length-2], points[points.length-1], 0, 0\n\t\t);\n\n\t\t#if debug\n\t\tif (vertexCount < line.vertexCount || indexCount < line.indexCount) {\n\t\t\tthrow \"overflowed vertex buffer or index buffer\";\n\t\t}\n\t\t#end\n\t\tvertexCount = line.vertexCount;\n\t\tindexCount = line.indexCount;\n\t\tvertexBuffer.unlock ();\n\t\tindexBuffer.unlock ();\n\n\t\tctx.bindShader (defaultShader);\n\t\tctx.setPixelShaderConstantF (0, cpp.Pointer.arrayElem (scissorRect, 0), 1);\n\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\n\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (lineColor, 0), 1);\n\t\tctx.setVertexSource (vertexBuffer);\n\t\tctx.setIndexSource (indexBuffer);\n\t\tctx.setTexture (0, texture);\n\t\tif (lineBitmapRepeat) {\n\t\t\tctx.setTextureAddressMode (0, Wrap, Wrap);\n\t\t} else {\n\t\t\tctx.setTextureAddressMode (0, Clamp, Clamp);\n\t\t}\n\t\tif (lineBitmapSmooth) {\n\t\t\tctx.setTextureFilter (0, TextureFilter.Linear, TextureFilter.Linear);\n\t\t} else {\n\t\t\tctx.setTextureFilter (0, TextureFilter.Nearest, TextureFilter.Nearest);\n\t\t}\n\t\tctx.drawIndexed (Primitive.Triangle, vertexCount, 0, div (indexCount, 3));\n\n\t}\n\n\n\tprivate function drawNaive (object:DisplayObject, graphics:Graphics) {\n\n\t\tgraphics.__dirty = false;\n\n\t\thasFill = false;\n\t\thasStroke = false;\n\t\tfillColor[0] = 1.0;\n\t\tfillColor[1] = 1.0;\n\t\tfillColor[2] = 1.0;\n\t\tfillColor[3] = object.__worldAlpha;\n\n\t\t// TODO(james4k): warn on unimplemented WindingRules\n\n\t\tbeginClipRect ();\n\n\t\tvar r = new DrawCommandReader (graphics.__commands);\n\n\t\tfor (type in graphics.__commands.types) {\n\n\t\t\tswitch (type) {\n\n\t\t\t\t//case BeginBitmapFill (bitmap, matrix, repeat, smooth):\n\t\t\t\tcase BEGIN_BITMAP_FILL:\n\n\t\t\t\t\tvar cmd = r.readBeginBitmapFill ();\n\n\t\t\t\t\thasFill = true;\n\t\t\t\t\tfillBitmap = cmd.bitmap;\n\t\t\t\t\tfillBitmapSmooth = cmd.smooth;\n\t\t\t\t\tfillColor[0] = 1.0;\n\t\t\t\t\tfillColor[1] = 1.0;\n\t\t\t\t\tfillColor[2] = 1.0;\n\t\t\t\t\tfillColor[3] = object.__worldAlpha;\n\n\t\t\t\t\t// TODO(james4k): deal with matrix, repeat\n\n\t\t\t\t//case BeginFill (rgb, alpha):\n\t\t\t\tcase BEGIN_FILL:\n\n\t\t\t\t\t// TODO(james4k): color transform. no sense doing that in shader for fill, right?\n\n\t\t\t\t\tvar cmd = r.readBeginFill ();\n\n\t\t\t\t\thasFill = true;\n\t\t\t\t\tfillBitmap = null;\n\t\t\t\t\tfillColor[0] = ((cmd.color >> 16) & 0xFF) / 255.0;\n\t\t\t\t\tfillColor[1] = ((cmd.color >> 8) & 0xFF) / 255.0;\n\t\t\t\t\tfillColor[2] = ((cmd.color >> 0) & 0xFF) / 255.0;\n\t\t\t\t\tfillColor[3] = cmd.alpha * object.__worldAlpha;\n\n\t\t\t\t// LineStyle (thickness:Null<Float>, color:Null<Int>, alpha:Null<Float>, pixelHinting:Null<Bool>,\n\t\t\t\t//            scaleMode:LineScaleMode, caps:CapsStyle, joints:JointStyle, miterLimit:Null<Float>);\n\t\t\t\t//case LineStyle (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit):\n\t\t\t\tcase LINE_STYLE:\n\n\t\t\t\t\t//closePath (object);\n\n\t\t\t\t\tvar cmd = r.readLineStyle ();\n\n\t\t\t\t\tif (cmd.thickness == null) {\n\t\t\t\t\t\thasStroke = false;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\thasStroke = true;\n\n\t\t\t\t\tlineThickness = cmd.thickness;\n\t\t\t\t\tlineBitmap = null;\n\t\t\t\t\tlineColor[0] = ((cmd.color >> 16) & 0xFF) / 255.0;\n\t\t\t\t\tlineColor[1] = ((cmd.color >> 8) & 0xFF) / 255.0;\n\t\t\t\t\tlineColor[2] = ((cmd.color >> 0) & 0xFF) / 255.0;\n\t\t\t\t\tlineColor[3] = cmd.alpha * object.__worldAlpha;\n\t\t\t\t\tlineAlpha = cmd.alpha;\n\t\t\t\t\tlineScaleMode = cmd.scaleMode;\n\t\t\t\t\tlineCaps = cmd.caps != null ? cmd.caps : ROUND;\n\t\t\t\t\tlineJoints = cmd.joints != null ? cmd.joints : ROUND;\n\t\t\t\t\tlineMiter = cmd.miterLimit;\n\t\t\t\t\t// TODO(james4k): pixelHinting\n\n\t\t\t\t\tif (lineScaleMode != NORMAL ||\n\t\t\t\t\t    lineCaps != ROUND ||\n\t\t\t\t\t    lineJoints != ROUND \n\t\t\t\t\t) {\n\t\t\t\t\t\ttrace (\"unsupported lineStyle\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tcase LINE_BITMAP_STYLE:\n\n\t\t\t\t\tvar cmd = r.readLineBitmapStyle ();\n\n\t\t\t\t\tlineBitmap = cmd.bitmap;\n\t\t\t\t\tlineBitmapMatrix = cmd.matrix;\n\t\t\t\t\tlineBitmapRepeat = cmd.repeat;\n\t\t\t\t\tlineBitmapSmooth = cmd.smooth;\n\n\t\t\t\t//case LineTo (x, y):\n\t\t\t\tcase LINE_TO:\n\n\t\t\t\t\tvar cmd = r.readLineTo ();\n\n\t\t\t\t\tpoints.push (cmd.x);\n\t\t\t\t\tpoints.push (cmd.y);\n\n\t\t\t\t//case MoveTo (x, y):\n\t\t\t\tcase MOVE_TO:\n\n\t\t\t\t\tvar cmd = r.readMoveTo ();\n\n\t\t\t\t\tclosePath (object);\n\n\t\t\t\t\tpoints.push (cmd.x);\n\t\t\t\t\tpoints.push (cmd.y);\n\n\t\t\t\t//case EndFill:\n\t\t\t\tcase END_FILL:\n\n\t\t\t\t\tvar cmd = r.readEndFill ();\n\n\t\t\t\t\tclosePath (object);\n\n\t\t\t\t\thasFill = false;\n\t\t\t\t\thasStroke = false;\n\t\t\t\t\tfillBitmap = null;\n\t\t\t\t\tfillColor[0] = 1.0;\n\t\t\t\t\tfillColor[1] = 1.0;\n\t\t\t\t\tfillColor[2] = 1.0;\n\t\t\t\t\tfillColor[3] = object.__worldAlpha;\n\n\t\t\t\t//case DrawCircle (x, y, radius):\n\t\t\t\tcase DRAW_CIRCLE:\n\n\t\t\t\t\t// TODO(james4k): replace with 2? curveTo calls\n\n\t\t\t\t\tvar cmd = r.readDrawCircle ();\n\n\t\t\t\t\tdrawEllipse (object, cmd.x, cmd.y, cmd.radius, cmd.radius);\n\n\t\t\t\t//case DrawEllipse (x, y, width, height):\n\t\t\t\tcase DRAW_ELLIPSE:\n\n\t\t\t\t\t// TODO(james4k): replace with 2? curveTo calls\n\n\t\t\t\t\tvar cmd = r.readDrawEllipse ();\n\n\t\t\t\t\tdrawEllipse (object, cmd.x + cmd.width*0.5, cmd.y + cmd.height*0.5, cmd.width*0.5, cmd.height*0.5);\n\n\t\t\t\t//case DrawRect (x, y, width, height):\n\t\t\t\tcase DRAW_RECT:\n\n\t\t\t\t\tvar cmd = r.readDrawRect ();\n\n\t\t\t\t\tif (!hasFill) {\n\t\t\t\t\t\t// TODO(james4k): stroke\n\t\t\t\t\t\ttrace (\"unsupported DrawRect\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (fillBitmap != null) {\n\n\t\t\t\t\t\tsetObjectTransform (object);\n\t\t\t\t\t\ttransform.append (viewProj);\n\t\t\t\t\t\ttransform.transpose ();\n\n\t\t\t\t\t\tvar w = cmd.width;\n\t\t\t\t\t\tvar h = cmd.height;\n\t\t\t\t\t\tvar color:Array<cpp.Float32> = [1, 1, 1, object.__worldAlpha];\n\n\t\t\t\t\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.PositionTexcoordColor, 4);\n\t\t\t\t\t\tvar out = vertexBuffer.lock ();\n\t\t\t\t\t\tout.vec3 (cmd.x, cmd.y, 0);\n\t\t\t\t\t\tout.vec2 (0, 0);\n\t\t\t\t\t\tout.color(0xff, 0xff, 0xff, 0xff);\n\t\t\t\t\t\tout.vec3 (cmd.x, cmd.y + h, 0);\n\t\t\t\t\t\tout.vec2 (0, 1);\n\t\t\t\t\t\tout.color(0xff, 0xff, 0xff, 0xff);\n\t\t\t\t\t\tout.vec3 (cmd.x + w, cmd.y, 0);\n\t\t\t\t\t\tout.vec2 (1, 0);\n\t\t\t\t\t\tout.color(0xff, 0xff, 0xff, 0xff);\n\t\t\t\t\t\tout.vec3 (cmd.x + w, cmd.y + h, 0);\n\t\t\t\t\t\tout.vec2 (1, 1);\n\t\t\t\t\t\tout.color(0xff, 0xff, 0xff, 0xff);\n\t\t\t\t\t\tvertexBuffer.unlock ();\n\n\t\t\t\t\t\tvar texture = imageTexture (fillBitmap.image);\n\n\t\t\t\t\t\tctx.bindShader (defaultShader);\n\t\t\t\t\t\tctx.setPixelShaderConstantF (0, cpp.Pointer.arrayElem (scissorRect, 0), 1);\n\t\t\t\t\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\n\t\t\t\t\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (color, 0), 1);\n\t\t\t\t\t\tctx.setVertexSource (vertexBuffer);\n\t\t\t\t\t\tctx.setTexture (0, texture);\n\t\t\t\t\t\tctx.setTextureAddressMode (0, Clamp, Clamp);\n\t\t\t\t\t\tif (fillBitmapSmooth) {\n\t\t\t\t\t\t\tctx.setTextureFilter (0, TextureFilter.Linear, TextureFilter.Linear);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.setTextureFilter (0, TextureFilter.Nearest, TextureFilter.Nearest);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.draw (Primitive.TriangleStrip, 0, 2);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// TODO(james4k): replace moveTo/lineTo calls\n\n\t\t\t\t\t\tsetObjectTransform (object);\n\t\t\t\t\t\ttransform.append (viewProj);\n\t\t\t\t\t\ttransform.transpose ();\n\n\t\t\t\t\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.Position, 4);\t\n\t\t\t\t\t\tvar out = vertexBuffer.lock ();\n\t\t\t\t\t\tout.vec3 (cmd.x, cmd.y, 0);\n\t\t\t\t\t\tout.vec3 (cmd.x, cmd.y + cmd.height, 0);\n\t\t\t\t\t\tout.vec3 (cmd.x + cmd.width, cmd.y, 0);\n\t\t\t\t\t\tout.vec3 (cmd.x + cmd.width, cmd.y + cmd.height, 0);\n\t\t\t\t\t\tvertexBuffer.unlock ();\n\n\t\t\t\t\t\tctx.bindShader (fillShader);\n\t\t\t\t\t\tctx.setPixelShaderConstantF (0, cpp.Pointer.arrayElem (scissorRect, 0), 1);\n\t\t\t\t\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\n\t\t\t\t\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (fillColor, 0), 1);\n\t\t\t\t\t\tctx.setVertexSource (vertexBuffer);\n\t\t\t\t\t\tctx.draw (Primitive.TriangleStrip, 0, 2);\n\n\t\t\t\t\t}\n\n\t\t\t\t//case DrawRoundRect (x, y, width, height, rx, ry):\n\t\t\t\tcase DRAW_ROUND_RECT:\n\n\t\t\t\t\tvar cmd = r.readDrawRoundRect ();\n\n\t\t\t\t\tif (!hasFill || fillBitmap != null) {\n\t\t\t\t\t\t// TODO(james4k): fillBitmap, stroke\n\t\t\t\t\t\ttrace (\"unsupported DrawRoundRect\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO(james4k): replace with lineTo/curveTo calls\n\n\t\t\t\t\tvar rx = cmd.ellipseWidth * 1.0;\n\t\t\t\t\tvar ry = cmd.ellipseHeight * 1.0;\n\n\t\t\t\t\tif (ry == -1) ry = rx;\n\t\t\t\t\t\n\t\t\t\t\trx *= 0.5;\n\t\t\t\t\try *= 0.5;\n\t\t\t\t\t\n\t\t\t\t\tif (rx > cmd.width / 2) rx = cmd.width / 2;\n\t\t\t\t\tif (ry > cmd.height / 2) ry = cmd.height / 2;\n\n\t\t\t\t\tvar points = new Array<Float> ();\n\t\t\t\t\tGraphicsPaths.roundRectangle (points, cmd.x, cmd.y, cmd.width, cmd.height, rx, ry);\n\n\t\t\t\t\tif (hasFill) {\n\n\t\t\t\t\t\tvar triangles = new Array<Int> ();\n\t\t\t\t\t\tPolyK.triangulate (triangles, points);\n\n\t\t\t\t\t\tsetObjectTransform (object);\n\t\t\t\t\t\ttransform.append (viewProj);\n\t\t\t\t\t\ttransform.transpose ();\n\n\t\t\t\t\t\tvar vertexCount = div (points.length, 2);\n\t\t\t\t\t\tvar indexCount = triangles.length;\n\n\t\t\t\t\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.Position, vertexCount);\t\n\t\t\t\t\t\tvar indexBuffer = transientIndexBuffer (indexCount);\n\n\t\t\t\t\t\tvar out = vertexBuffer.lock ();\n\t\t\t\t\t\tfor (i in 0...div (points.length, 2)) {\n\t\t\t\t\t\t\tout.vec3 (points[i*2], points[i*2 + 1], 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvertexBuffer.unlock ();\n\n\t\t\t\t\t\tvar unsafeIndices = indexBuffer.lock ();\n\t\t\t\t\t\tfor (i in 0...triangles.length) {\n\t\t\t\t\t\t\tunsafeIndices[i] = triangles[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindexBuffer.unlock ();\n\n\t\t\t\t\t\tctx.bindShader (fillShader);\n\t\t\t\t\t\tctx.setPixelShaderConstantF (0, cpp.Pointer.arrayElem (scissorRect, 0), 1);\n\t\t\t\t\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\n\t\t\t\t\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (fillColor, 0), 1);\n\t\t\t\t\t\tctx.setVertexSource (vertexBuffer);\n\t\t\t\t\t\tctx.setIndexSource (indexBuffer);\n\t\t\t\t\t\tctx.drawIndexed (Primitive.Triangle, vertexCount, 0, div (triangles.length, 3));\n\t\t\t\t\t\t//ctx.draw (Primitive.TriangleStrip, 0, div (triangles.length, 3));\n\n\t\t\t\t\t}\n\n\t\t\t\t//case DrawTriangles (vertices, indices, uvtData, culling, colors, blendMode):\n\t\t\t\tcase DRAW_TRIANGLES:\n\n\t\t\t\t\tvar cmd = r.readDrawTriangles ();\n\n\t\t\t\t\tif (!hasFill || fillBitmap == null) {\n\t\t\t\t\t\ttrace (\"DrawTriangles without bitmap fill\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cmd.vertices.length <= 0 || cmd.indices.length <= 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetObjectTransform (object);\n\t\t\t\t\ttransform.append (viewProj);\n\t\t\t\t\ttransform.transpose ();\n\n\t\t\t\t\tvar texture = imageTexture (fillBitmap.image);\n\n\t\t\t\t\tvar vertexCount = div (cmd.vertices.length, 2);\n\t\t\t\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.PositionTexcoordColor, vertexCount);\t\n\t\t\t\t\tvar out = vertexBuffer.lock ();\n\t\t\t\t\tvar i = 0;\n\t\t\t\t\twhile (i < cmd.vertices.length) {\n\t\t\t\t\t\tout.vec3 (cmd.vertices[i], cmd.vertices[i+1], 0);\n\t\t\t\t\t\tout.vec2 (cmd.uvtData[i], cmd.uvtData[i+1]);\n\t\t\t\t\t\t// TODO(james4k): color\n\t\t\t\t\t\tout.color (0xff, 0xff, 0xff, 0xff);\n\t\t\t\t\t\ti += 2;\n\t\t\t\t\t}\n\t\t\t\t\tvertexBuffer.unlock ();\n\t\t\t\t\t\n\t\t\t\t\tvar indexCount = cmd.indices.length;\n\t\t\t\t\tvar indexBuffer = transientIndexBuffer (indexCount);\n\t\t\t\t\tvar unsafeIndices = indexBuffer.lock ();\n\t\t\t\t\tfor (i in 0...indexCount) {\n\t\t\t\t\t\tunsafeIndices[i] = cmd.indices[i];\n\t\t\t\t\t}\n\t\t\t\t\tindexBuffer.unlock ();\n\n\t\t\t\t\tctx.bindShader (defaultShader);\n\t\t\t\t\tctx.setPixelShaderConstantF (0, cpp.Pointer.arrayElem (scissorRect, 0), 1);\n\t\t\t\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\n\t\t\t\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (fillColor, 0), 1);\n\t\t\t\t\tctx.setVertexSource (vertexBuffer);\n\t\t\t\t\tctx.setIndexSource (indexBuffer);\n\t\t\t\t\tctx.setTexture (0, texture);\n\t\t\t\t\tctx.setTextureAddressMode (0, Wrap, Wrap);\n\t\t\t\t\tif (fillBitmapSmooth) {\n\t\t\t\t\t\tctx.setTextureFilter (0, TextureFilter.Linear, TextureFilter.Linear);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.setTextureFilter (0, TextureFilter.Nearest, TextureFilter.Nearest);\n\t\t\t\t\t}\n\t\t\t\t\tctx.drawIndexed (Primitive.Triangle, vertexCount, 0, div (cmd.indices.length, 3));\n\n\t\t\t\tcase BEGIN_GRADIENT_FILL:\n\n\t\t\t\t\tr.readBeginGradientFill ();\n\n\t\t\t\tcase CUBIC_CURVE_TO:\n\n\t\t\t\t\tr.readCubicCurveTo ();\n\n\t\t\t\tcase CURVE_TO:\n\n\t\t\t\t\tr.readCurveTo ();\n\n\t\t\t\tcase LINE_GRADIENT_STYLE:\n\n\t\t\t\t\tr.readLineGradientStyle ();\n\n\t\t\t\tcase OVERRIDE_MATRIX:\n\n\t\t\t\t\tr.readOverrideMatrix ();\n\n\t\t\t\tcase UNKNOWN:\n\n\t\t\t}\n\t\n\t\t}\n\n\t\tr.destroy ();\n\n\t\tif (points.length > 0) {\n\t\t\tclosePath (object);\n\t\t}\n\n\t\tendClipRect ();\n\n\t}\n\n\tprivate function drawEllipse (object:DisplayObject, x:Float, y:Float, rx:Float, ry:Float) {\n\n\t\tif (!hasFill || fillBitmap != null) {\n\t\t\t// TODO(james4k): fillBitmap, stroke\n\t\t\ttrace (\"unsupported drawEllipse\");\n\t\t\treturn;\n\t\t}\n\n\t\tvar segments:Int = cast (0.334 * 2 * Math.PI * Math.max (rx, ry));\n\t\tvar points = new Array<Float> ();\n\t\tGraphicsPaths.ellipse (points, x, y, rx, ry, segments);\n\n\t\tif (hasFill) {\n\n\t\t\t//var triangles = new Array<Int> ();\n\t\t\t//PolyK.triangulate (triangles, points);\n\n\t\t\tsetObjectTransform (object);\n\t\t\ttransform.append (viewProj);\n\t\t\ttransform.transpose ();\n\n\t\t\tvar vertexCount = div (points.length, 2) + 1;\n\t\t\tvar indexCount = (vertexCount - 2) * 3;\n\n\t\t\tvar vertexBuffer = transientVertexBuffer (VertexDecl.Position, vertexCount);\t\n\t\t\tvar indexBuffer = transientIndexBuffer (indexCount);\n\n\t\t\tvar out = vertexBuffer.lock ();\n\t\t\tout.vec3 (x, y, 0);\n\t\t\tfor (i in 0...vertexCount) {\n\t\t\t\tout.vec3 (points[i*2 + 0], points[i*2 + 1], 0);\n\t\t\t}\n\t\t\tvertexBuffer.unlock ();\n\n\t\t\tvar unsafeIndices = indexBuffer.lock ();\n\t\t\tfor (i in 0...vertexCount-2) {\n\t\t\t\tunsafeIndices[i*3 + 0] = 0;\n\t\t\t\tunsafeIndices[i*3 + 1] = i+1;\n\t\t\t\tunsafeIndices[i*3 + 2] = i+2;\n\t\t\t}\n\t\t\tindexBuffer.unlock ();\n\n\t\t\tctx.bindShader (fillShader);\n\t\t\tctx.setPixelShaderConstantF (0, cpp.Pointer.arrayElem (scissorRect, 0), 1);\n\t\t\tctx.setVertexShaderConstantF (0, PointerUtil.fromMatrix (transform), 4);\n\t\t\tctx.setVertexShaderConstantF (4, cpp.Pointer.arrayElem (fillColor, 0), 1);\n\t\t\tctx.setVertexSource (vertexBuffer);\n\t\t\t//ctx.draw (Primitive.Triangle, 0, vertexCount - 2);\n\t\t\tctx.setIndexSource (indexBuffer);\n\t\t\tctx.drawIndexed (Primitive.Triangle, vertexCount, 0, div (indexCount, 3));\n\n\t\t}\n\n\t}\n\n\t\n\t\n}\n\n\n#else\n\n\nimport lime.graphics.ConsoleRenderContext;\nimport openfl._internal.renderer.AbstractRenderer;\nimport openfl.display.Stage;\n\n\nclass ConsoleRenderer extends AbstractRenderer {\n\t\n\n\tpublic function new (stage:Stage, ctx:ConsoleRenderContext) {\n\t\t\n\t\tsuper (stage);\n\n\t\tthrow \"ConsoleRenderer not supported\";\n\n\t}\n\t\n\t\n\tpublic override function render ():Void {\n\n\n\n\t}\n\n\n}\n\n\t\n#end\n","package openfl._internal.renderer.dom;\n\n\nimport lime.graphics.ImageBuffer;\nimport lime.graphics.utils.ImageCanvasUtil;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.Bitmap;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n@:access(lime.graphics.ImageBuffer)\n@:access(openfl.display.Bitmap)\n@:access(openfl.display.BitmapData)\n\n\nclass DOMBitmap {\n\t\n\t\n\tpublic static function clear (bitmap:Bitmap, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (bitmap.__image != null) {\n\t\t\t\n\t\t\trenderSession.element.removeChild (bitmap.__image);\n\t\t\tbitmap.__image = null;\n\t\t\tbitmap.__style = null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (bitmap.__canvas != null) {\n\t\t\t\n\t\t\trenderSession.element.removeChild (bitmap.__canvas);\n\t\t\tbitmap.__canvas = null;\n\t\t\tbitmap.__style = null;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function render (bitmap:Bitmap, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (bitmap.stage != null && bitmap.__worldVisible && bitmap.__renderable && bitmap.__bitmapData != null && bitmap.__bitmapData.__isValid && bitmap.__bitmapData.readable) {\n\t\t\t\n\t\t\trenderSession.maskManager.pushObject (bitmap);\n\t\t\t\n\t\t\tif (bitmap.__bitmapData.image.buffer.__srcImage != null) {\n\t\t\t\t\n\t\t\t\trenderImage (bitmap, renderSession);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\trenderCanvas (bitmap, renderSession);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\trenderSession.maskManager.popObject (bitmap);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tclear (bitmap, renderSession);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function renderCanvas (bitmap:Bitmap, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (bitmap.__image != null) {\n\t\t\t\n\t\t\trenderSession.element.removeChild (bitmap.__image);\n\t\t\tbitmap.__image = null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (bitmap.__canvas == null) {\n\t\t\t\n\t\t\tbitmap.__canvas = cast Browser.document.createElement (\"canvas\");\n\t\t\tbitmap.__context = bitmap.__canvas.getContext (\"2d\");\n\t\t\tbitmap.__imageVersion = -1;\n\t\t\t\n\t\t\tif (!renderSession.allowSmoothing || !bitmap.smoothing) {\n\t\t\t\t\n\t\t\t\tuntyped (bitmap.__context).mozImageSmoothingEnabled = false;\n\t\t\t\t//untyped (bitmap.__context).webkitImageSmoothingEnabled = false;\n\t\t\t\tuntyped (bitmap.__context).msImageSmoothingEnabled = false;\n\t\t\t\tuntyped (bitmap.__context).imageSmoothingEnabled = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tDOMRenderer.initializeElement (bitmap, bitmap.__canvas, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (bitmap.__imageVersion != bitmap.__bitmapData.image.version) {\n\t\t\t\n\t\t\tImageCanvasUtil.convertToCanvas (bitmap.__bitmapData.image);\n\t\t\t\n\t\t\t// Next line is workaround, to fix rendering bug in Chrome 59 (https://vimeo.com/222938554)\n\t\t\tbitmap.__canvas.width = bitmap.__bitmapData.width + 1;\n\t\t\t\n\t\t\tbitmap.__canvas.width = bitmap.__bitmapData.width;\n\t\t\tbitmap.__canvas.height = bitmap.__bitmapData.height;\n\t\t\t\n\t\t\tbitmap.__context.drawImage (bitmap.__bitmapData.image.buffer.__srcCanvas, 0, 0);\n\t\t\tbitmap.__imageVersion = bitmap.__bitmapData.image.version;\n\t\t\t\n\t\t}\n\t\t\n\t\tDOMRenderer.updateClip (bitmap, renderSession);\n\t\tDOMRenderer.applyStyle (bitmap, renderSession, true, true, true);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function renderImage (bitmap:Bitmap, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (bitmap.__canvas != null) {\n\t\t\t\n\t\t\trenderSession.element.removeChild (bitmap.__canvas);\n\t\t\tbitmap.__canvas = null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (bitmap.__image == null) {\n\t\t\t\n\t\t\tbitmap.__image = cast Browser.document.createElement (\"img\");\n\t\t\tbitmap.__image.crossOrigin = \"Anonymous\";\n\t\t\tbitmap.__image.src = bitmap.__bitmapData.image.buffer.__srcImage.src;\n\t\t\tDOMRenderer.initializeElement (bitmap, bitmap.__image, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\tDOMRenderer.updateClip (bitmap, renderSession);\n\t\tDOMRenderer.applyStyle (bitmap, renderSession, true, true, true);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}\n","package openfl._internal.renderer.dom;\n\n\nimport lime.math.color.ARGB;\nimport openfl.display.DisplayObject;\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.geom.Matrix)\n\n\nclass DOMDisplayObject {\n\t\n\t\n\tpublic static function clear (displayObject:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tDOMShape.clear (displayObject, renderSession);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function render (displayObject:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\t//if (displayObject.opaqueBackground == null && displayObject.__graphics == null) return;\n\t\t//if (!displayObject.__renderable || displayObject.__worldAlpha <= 0) return;\n\t\t\n\t\tif (displayObject.opaqueBackground != null && !displayObject.__cacheBitmapRender && displayObject.width > 0 && displayObject.height > 0) {\n\t\t\t\n\t\t\t//renderSession.maskManager.pushObject (displayObject);\n\t\t\t\n\t\t\t// TODO: opaqueBackground using DIV element\n\t\t\t\n\t\t\t//renderSession.maskManager.popObject (displayObject);\n\t\t\t\n\t\t}\n\t\t\n\t\tDOMShape.render (displayObject, renderSession);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.dom;\n\n\nimport openfl._internal.renderer.AbstractMaskManager;\nimport openfl.display.DisplayObject;\nimport openfl.geom.Matrix;\nimport openfl.geom.Rectangle;\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.geom.Matrix)\n@:access(openfl.geom.Rectangle)\n@:keep\n\n\nclass DOMMaskManager extends AbstractMaskManager {\n\t\n\t\n\tpublic var currentClipRect:Rectangle;\n\t\n\tprivate var clipRects:Array<Rectangle>;\n\tprivate var numClipRects:Int;\n\t\n\t\n\tpublic function new (renderSession:RenderSession) {\n\t\t\n\t\tsuper (renderSession);\n\t\t\n\t\tclipRects = new Array ();\n\t\tnumClipRects = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic override function pushMask (mask:DisplayObject):Void {\n\t\t\n\t\t// TODO: Handle true mask shape, as well as alpha test\n\t\t\n\t\tpushRect (mask.getBounds (mask), mask.__getRenderTransform ());\n\t\t\n\t}\n\t\n\t\n\tpublic override function pushObject (object:DisplayObject, handleScrollRect:Bool = true):Void {\n\t\t\n\t\tif (handleScrollRect && object.__scrollRect != null) {\n\t\t\t\n\t\t\tpushRect (object.__scrollRect, object.__renderTransform);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (object.__mask != null) {\n\t\t\t\n\t\t\tpushMask (object.__mask);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function pushRect (rect:Rectangle, transform:Matrix):Void {\n\t\t\n\t\t// TODO: Handle rotation?\n\t\t\n\t\tif (numClipRects == clipRects.length) {\n\t\t\t\n\t\t\tclipRects[numClipRects] = new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar clipRect = clipRects[numClipRects];\n\t\trect.__transform (clipRect, transform);\n\t\t\n\t\tif (numClipRects > 0) {\n\t\t\t\n\t\t\tvar parentClipRect = clipRects[numClipRects - 1];\n\t\t\tclipRect.__contract (parentClipRect.x, parentClipRect.y, parentClipRect.width, parentClipRect.height);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (clipRect.height < 0) {\n\t\t\t\n\t\t\tclipRect.height = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (clipRect.width < 0) {\n\t\t\t\n\t\t\tclipRect.width = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tcurrentClipRect = clipRect;\n\t\tnumClipRects++;\n\t\t\n\t}\n\t\n\t\n\tpublic override function popMask ():Void {\n\t\t\n\t\tpopRect ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function popObject (object:DisplayObject, handleScrollRect:Bool = true):Void {\n\t\t\n\t\tif (object.__mask != null) {\n\t\t\t\n\t\t\tpopMask ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (handleScrollRect && object.__scrollRect != null) {\n\t\t\t\n\t\t\tpopRect ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function popRect ():Void {\n\t\t\n\t\tif (numClipRects > 0) {\n\t\t\t\n\t\t\tnumClipRects--;\n\t\t\t\n\t\t\tif (numClipRects > 0) {\n\t\t\t\t\n\t\t\t\tcurrentClipRect = clipRects[numClipRects - 1];\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcurrentClipRect = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function updateClip (displayObject:DisplayObject):Void {\n\t\t\n\t\tif (currentClipRect == null) {\n\t\t\t\n\t\t\tdisplayObject.__worldClipChanged = (displayObject.__worldClip != null);\n\t\t\tdisplayObject.__worldClip = null;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (displayObject.__worldClip == null) {\n\t\t\t\t\n\t\t\t\tdisplayObject.__worldClip = new Rectangle ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar clip = Rectangle.__pool.get ();\n\t\t\tvar matrix = Matrix.__pool.get ();\n\t\t\t\n\t\t\tmatrix.copyFrom (displayObject.__renderTransform);\n\t\t\tmatrix.invert ();\n\t\t\t\n\t\t\tcurrentClipRect.__transform (clip, matrix);\n\t\t\t\n\t\t\tif (clip.equals (displayObject.__worldClip)) {\n\t\t\t\t\n\t\t\t\tdisplayObject.__worldClipChanged = false;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tdisplayObject.__worldClip.copyFrom (clip);\n\t\t\t\tdisplayObject.__worldClipChanged = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tRectangle.__pool.release (clip);\n\t\t\tMatrix.__pool.release (matrix);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.dom;\n\n\nimport lime.graphics.DOMRenderContext;\nimport openfl._internal.renderer.canvas.CanvasRenderer;\nimport openfl._internal.renderer.AbstractRenderer;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.DisplayObject;\nimport openfl.display.Stage;\nimport openfl.geom.Matrix;\nimport openfl.geom.Rectangle;\n\n#if (js && html5)\nimport js.html.Element;\nimport js.Browser;\n#end\n\n@:access(openfl._internal.renderer.canvas.CanvasRenderer)\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.Stage)\n@:access(openfl.display.Stage3D)\n@:access(openfl.geom.Matrix)\n@:access(openfl.geom.Rectangle)\n\n\nclass DOMRenderer extends AbstractRenderer {\n\t\n\t\n\tprivate var element:DOMRenderContext;\n\t\n\t\n\tpublic function new (stage:Stage, element:DOMRenderContext) {\n\t\t\n\t\tsuper (stage);\n\t\t\n\t\t#if dom\n\t\tthis.element = element;\n\t\t\n\t\trenderSession = new RenderSession ();\n\t\trenderSession.clearRenderDirty = true;\n\t\trenderSession.element = element;\n\t\t//renderSession.roundPixels = true;\n\t\t\n\t\t#if (js && html5)\n\t\tvar config = stage.window.config;\n\t\t\n\t\tif (config != null && Reflect.hasField (config, \"allowHighDPI\") && config.allowHighDPI) {\n\t\t\t\n\t\t\tCanvasRenderer.scale = untyped window.devicePixelRatio || 1;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar prefix = untyped __js__ (\"(function () {\n\t\t  var styles = window.getComputedStyle(document.documentElement, ''),\n\t\t\tpre = (Array.prototype.slice\n\t\t\t  .call(styles)\n\t\t\t  .join('') \n\t\t\t  .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])\n\t\t\t)[1],\n\t\t\tdom = ('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1];\n\t\t  return {\n\t\t\tdom: dom,\n\t\t\tlowercase: pre,\n\t\t\tcss: '-' + pre + '-',\n\t\t\tjs: pre[0].toUpperCase() + pre.substr(1)\n\t\t  };\n\t\t})\")();\n\t\t\n\t\trenderSession.vendorPrefix = prefix.lowercase;\n\t\trenderSession.transformProperty = (prefix.lowercase == \"webkit\") ? \"-webkit-transform\" : \"transform\";\n\t\trenderSession.transformOriginProperty = (prefix.lowercase == \"webkit\") ? \"-webkit-transform-origin\" : \"transform-origin\";\n\t\t#end\n\t\t\n\t\trenderSession.maskManager = new DOMMaskManager (renderSession);\n\t\trenderSession.blendModeManager = new DOMBlendModeManager (renderSession);\n\t\t\n\t\trenderSession.renderer = this;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function applyStyle (displayObject:DisplayObject, renderSession:RenderSession, setTransform:Bool, setAlpha:Bool, setClip:Bool):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tvar style = displayObject.__style;\n\t\t\n\t\tif (setTransform && displayObject.__renderTransformChanged) {\n\t\t\t\n\t\t\tstyle.setProperty (renderSession.transformProperty, displayObject.__renderTransform.to3DString (renderSession.roundPixels), null);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (displayObject.__worldZ != ++renderSession.z) {\n\t\t\t\n\t\t\tdisplayObject.__worldZ = renderSession.z;\n\t\t\tstyle.setProperty (\"z-index\", Std.string (displayObject.__worldZ), null);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (setAlpha && displayObject.__worldAlphaChanged) {\n\t\t\t\n\t\t\tif (displayObject.__worldAlpha < 1) {\n\t\t\t\t\n\t\t\t\tstyle.setProperty (\"opacity\", Std.string (displayObject.__worldAlpha), null);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tstyle.removeProperty (\"opacity\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (setClip && displayObject.__worldClipChanged) {\n\t\t\t\n\t\t\tif (displayObject.__worldClip == null) {\n\t\t\t\t\n\t\t\t\tstyle.removeProperty (\"clip\");\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar clip = displayObject.__worldClip;\n\t\t\t\tstyle.setProperty (\"clip\", \"rect(\" + clip.y + \"px, \" + clip.right + \"px, \" + clip.bottom + \"px, \" + clip.x + \"px)\", null);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static function initializeElement (displayObject:DisplayObject, element:Element, renderSession:RenderSession):Void {\n\t\t\n\t\tvar style = displayObject.__style = element.style;\n\t\t\n\t\tstyle.setProperty (\"position\", \"absolute\", null);\n\t\tstyle.setProperty (\"top\", \"0\", null);\n\t\tstyle.setProperty (\"left\", \"0\", null);\n\t\tstyle.setProperty (renderSession.transformOriginProperty, \"0 0 0\", null);\n\t\t\n\t\trenderSession.element.appendChild (element);\n\t\t\n\t\tdisplayObject.__worldAlphaChanged = true;\n\t\tdisplayObject.__renderTransformChanged = true;\n\t\tdisplayObject.__worldVisibleChanged = true;\n\t\tdisplayObject.__worldClipChanged = true;\n\t\tdisplayObject.__worldClip = null;\n\t\tdisplayObject.__worldZ = -1;\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic override function render ():Void {\n\t\t\n\t\trenderSession.allowSmoothing = (stage.quality != LOW);\n\t\t\n\t\tif (!stage.__transparent) {\n\t\t\t\n\t\t\telement.style.background = stage.__colorString;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\telement.style.background = \"none\";\n\t\t\t\n\t\t}\n\t\t\n\t\trenderSession.z = 1;\n\t\tstage.__renderDOM (renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic override function renderStage3D ():Void {\n\t\t\n\t\tfor (stage3D in stage.stage3Ds) {\n\t\t\t\n\t\t\tstage3D.__renderDOM (stage, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function updateClip (displayObject:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\tvar maskManager:DOMMaskManager = cast renderSession.maskManager;\n\t\tmaskManager.updateClip (displayObject);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.dom;\n\n\nimport openfl._internal.renderer.canvas.CanvasGraphics;\nimport openfl.display.DisplayObject;\nimport openfl.geom.Matrix;\nimport openfl.geom.Rectangle;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.Graphics)\n@:access(openfl.geom.Matrix)\n@:access(openfl.geom.Rectangle)\n\n\nclass DOMShape {\n\t\n\t\n\tpublic static function clear (shape:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (shape.__canvas != null) {\n\t\t\t\n\t\t\trenderSession.element.removeChild (shape.__canvas);\n\t\t\tshape.__canvas = null;\n\t\t\tshape.__style = null;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function render (shape:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tvar graphics = shape.__graphics;\n\t\t\n\t\tif (shape.stage != null && shape.__worldVisible && shape.__renderable && graphics != null) {\n\t\t\t\n\t\t\tCanvasGraphics.render (graphics, renderSession, shape.__renderTransform);\n\t\t\t\n\t\t\tif (graphics.__dirty || shape.__worldAlphaChanged || (shape.__canvas != graphics.__canvas)) {\n\t\t\t\t\n\t\t\t\tif (graphics.__canvas != null) {\n\t\t\t\t\t\n\t\t\t\t\tif (shape.__canvas != graphics.__canvas) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (shape.__canvas != null) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\trenderSession.element.removeChild (shape.__canvas);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tshape.__canvas = graphics.__canvas;\n\t\t\t\t\t\tshape.__context = graphics.__context;\n\t\t\t\t\t\t\n\t\t\t\t\t\tDOMRenderer.initializeElement (shape, shape.__canvas, renderSession);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tclear (shape, renderSession);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (shape.__canvas != null) {\n\t\t\t\t\n\t\t\t\trenderSession.maskManager.pushObject (shape);\n\t\t\t\t\n\t\t\t\tvar cacheTransform = shape.__renderTransform;\n\t\t\t\tshape.__renderTransform = graphics.__worldTransform;\n\t\t\t\t\n\t\t\t\tif (graphics.__transformDirty) {\n\t\t\t\t\t\n\t\t\t\t\tgraphics.__transformDirty = false;\n\t\t\t\t\tshape.__renderTransformChanged = true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tDOMRenderer.updateClip (shape, renderSession);\n\t\t\t\tDOMRenderer.applyStyle (shape, renderSession, true, true, true);\n\t\t\t\t\n\t\t\t\tshape.__renderTransform = cacheTransform;\n\t\t\t\t\n\t\t\t\trenderSession.maskManager.popObject (shape);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tclear (shape, renderSession);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.dom;\n\n\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.text.TextEngine;\nimport openfl.text.TextField;\nimport openfl.text.TextFieldAutoSize;\nimport openfl.text.TextFormat;\nimport openfl.text.TextFormatAlign;\n\n#if (js && html5)\nimport js.html.Element;\nimport js.Browser;\n#end\n\n@:access(openfl._internal.text.TextEngine)\n@:access(openfl.text.TextField)\n\n\nclass DOMTextField {\n\t\n\t\n\tprivate static var __regexColor = ~/color=(\"#([^\"]+)\"|'#([^']+)')/i;\n\tprivate static var __regexFace = ~/face=(\"([^\"]+)\"|'([^']+)')/i;\n\tprivate static var __regexFont = ~/<font ([^>]+)>/gi;\n\tprivate static var __regexCloseFont = new EReg(\"</font>\", \"gi\");\n\tprivate static var __regexSize = ~/size=(\"([^\"]+)\"|'([^']+)')/i;\n\t\n\t\n\tpublic static function clear (textField:TextField, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (textField.__div != null) {\n\t\t\t\n\t\t\trenderSession.element.removeChild (textField.__div);\n\t\t\ttextField.__div = null;\n\t\t\ttextField.__style = null;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function measureText (textField:TextField):Void {\n\t\t\n\t \t#if (js && html5)\n\t \t\n\t\tvar textEngine = textField.__textEngine;\n\t\tvar div:Element = textField.__div;\n\t\t\n\t\tif (div == null) {\n\t\t\t\n\t\t\tdiv = cast Browser.document.createElement (\"div\");\n\t\t\tdiv.innerHTML = new EReg (\"\\n\", \"g\").replace (textEngine.text, \"<br>\");\n\t\t\tdiv.style.setProperty (\"font\", TextEngine.getFont (textField.__textFormat), null);\n\t\t\tdiv.style.setProperty (\"pointer-events\", \"none\", null);\n\t\t\tdiv.style.position = \"absolute\";\n\t\t\tdiv.style.top = \"110%\"; // position off-screen!\n\t\t\tBrowser.document.body.appendChild (div);\n\t\t\t\n\t\t}\n\t\t\n\t\ttextEngine.__measuredWidth = div.clientWidth;\n\t\t\n\t\t// Now set the width so that the height is accurate as a\n\t\t// function of the flow within the width bounds...\n\t\t\n\t\tif (textField.__div == null) {\n\t\t\t\n\t\t\tdiv.style.width = Std.string (textEngine.width - 4) + \"px\";\n\t\t\t\n\t\t}\n\t\t\n\t\ttextEngine.__measuredHeight = div.clientHeight;\n\t\t\n\t\tif (textField.__div == null) {\n\t\t\t\n\t\t\tBrowser.document.body.removeChild (div);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function render (textField:TextField, renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tvar textEngine = textField.__textEngine;\n\t\t\n\t\tif (textField.stage != null && textField.__worldVisible && textField.__renderable) {\n\t\t\t\n\t\t\tif (textField.__dirty || textField.__renderTransformChanged || textField.__div == null) {\n\t\t\t\t\n\t\t\t\tif (textEngine.text != \"\" || textEngine.background || textEngine.border || textEngine.type == INPUT) {\n\t\t\t\t\t\n\t\t\t\t\tif (textField.__div == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttextField.__div = cast Browser.document.createElement (\"div\");\n\t\t\t\t\t\tDOMRenderer.initializeElement (textField, textField.__div, renderSession);\n\t\t\t\t\t\ttextField.__style.setProperty (\"outline\", \"none\", null);\n\t\t\t\t\t\t\n\t\t\t\t\t\ttextField.__div.addEventListener (\"input\", function (event) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tevent.preventDefault ();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// TODO: Set caret index, and replace only selection\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (textField.htmlText != textField.__div.innerHTML) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttextField.htmlText = textField.__div.innerHTML;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (textField.__displayAsPassword) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// TODO: Enable display as password\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttextField.__dirty = false;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}, true);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!textEngine.wordWrap) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttextField.__style.setProperty (\"white-space\", \"nowrap\", null);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttextField.__style.setProperty (\"word-wrap\", \"break-word\", null);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttextField.__style.setProperty (\"overflow\", \"hidden\", null);\n\t\t\t\t\t\n\t\t\t\t\tif (textEngine.selectable) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttextField.__style.setProperty (\"cursor\", \"text\", null);\n\t\t\t\t\t\ttextField.__style.setProperty (\"-webkit-user-select\", \"text\", null);\n\t\t\t\t\t\ttextField.__style.setProperty (\"-moz-user-select\", \"text\", null);\n\t\t\t\t\t\ttextField.__style.setProperty (\"-ms-user-select\", \"text\", null);\n\t\t\t\t\t\ttextField.__style.setProperty (\"-o-user-select\", \"text\", null);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttextField.__style.setProperty (\"cursor\", \"inherit\", null);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tuntyped (textField.__div).contentEditable = (textEngine.type == INPUT);\n\t\t\t\t\t\n\t\t\t\t\tvar style = textField.__style;\n\t\t\t\t\t\n\t\t\t\t\t// TODO: Handle ranges using span\n\t\t\t\t\t// TODO: Vertical align\n\t\t\t\t\t\n\t\t\t\t\t//textField.__div.innerHTML = textEngine.text;\n\t\t\t\t\t\n\t\t\t\t\tif (textEngine.background) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tstyle.setProperty (\"background-color\", \"#\" + StringTools.hex (textEngine.backgroundColor & 0xFFFFFF, 6), null);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tstyle.removeProperty (\"background-color\");\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar w = textEngine.width;\n\t\t\t\t\tvar h = textEngine.height;\n\t\t\t\t\tvar scale:Float = 1;\n\t\t\t\t\tvar unscaledSize = textField.__textFormat.size;\n\t\t\t\t\tvar scaledSize:Float = unscaledSize;\n\t\t\t\t\t\n\t\t\t\t\tvar t = textField.__renderTransform;\n\t\t\t\t\tif (t.a != 1.0 || t.d != 1.0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (t.a == t.d) {\n\t\t\t\t\t\t\tscale = t.a;\n\t\t\t\t\t\t\tt.a = t.d = 1.0;\n\t\t\t\t\t\t} else if (t.a > t.d) {\n\t\t\t\t\t\t\tscale = t.a;\n\t\t\t\t\t\t\tt.d /= t.a;\n\t\t\t\t\t\t\tt.a = 1.0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscale = t.d;\n\t\t\t\t\t\t\tt.a /= t.d;\n\t\t\t\t\t\t\tt.d = 1.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscaledSize *= scale;\n\t\t\t\t\t\t\n\t\t\t\t\t#if openfl_half_round_font_sizes\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar roundedFontSize = Math.fceil(scaledFontSize * 2) / 2;\n\t\t\t\t\t\tif (roundedFontSize > scaledFontSize) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar adjustment = (scaledFontSize / roundedFontSize);\n\t\t\t\t\t\t\tif (adjustment < 1 && (1 - adjustment) < 0.1) {\n\t\t\t\t\t\t\t\tt.a = 1;\n\t\t\t\t\t\t\t\tt.d = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tscale *= adjustment;\n\t\t\t\t\t\t\t\tt.a *= adjustment;\n\t\t\t\t\t\t\t\tt.d *= adjustment;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tscaledSize = roundedFontSize;\n\t\t\t\t\t\t\n\t\t\t\t\t#end\n\t\t\t\t\t\t\n\t\t\t\t\t\tw = Math.ceil(w * scale);\n\t\t\t\t\t\th = Math.ceil(h * scale);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tuntyped textField.__textFormat.size = scaledSize;\n\t\t\t\t\t\n\t\t\t\t\tvar text = textEngine.text;\n\t\t\t\t\tvar adjustment:Float = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (!textField.__isHTML) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttext = StringTools.htmlEscape (text);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar matchText = text;\n\t\t\t\t\t\twhile (__regexFont.match (matchText)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar fontText = __regexFont.matched(0);\n\t\t\t\t\t\t\tvar style = \"\";\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (__regexFace.match (fontText)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstyle += \"font-family:'\" +  __getAttributeMatch (__regexFace) + \"';\";\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (__regexColor.match (fontText)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstyle += \"color:#\" +  __getAttributeMatch (__regexColor) + \";\";\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (__regexSize.match (fontText)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar sizeAttr = __getAttributeMatch (__regexSize);\n\t\t\t\t\t\t\t\tvar firstChar = sizeAttr.charCodeAt (0);\n\t\t\t\t\t\t\t\tvar size:Float;\n\t\t\t\t\t\t\t\tadjustment = Std.parseFloat (sizeAttr) * scale;\n\t\t\t\t\t\t\t\tif (firstChar == \"+\".code || firstChar == \"-\".code) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tsize = scaledSize + adjustment;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tsize = adjustment;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstyle += \"font-size:\" + size + \"px;\";\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttext = StringTools.replace( text, fontText, \"<span style='\" + style + \"'>\" );\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmatchText = __regexFont.matchedRight();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\ttext = __regexCloseFont.replace( text, \"</span>\" );\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttext = StringTools.replace( text, \"<p \", \"<p style='margin-top:0; margin-bottom:0;' \" );\n\t\t\t\t\t\n\t\t\t\t\tvar unscaledLeading = textField.__textFormat.leading;\n\t\t\t\t\ttextField.__textFormat.leading += Std.int( adjustment );\n\t\t\t\t\t\n\t\t\t\t\ttextField.__div.innerHTML = new EReg (\"\\r\\n\", \"g\").replace (text, \"<br>\");\n\t\t\t\t\ttextField.__div.innerHTML = new EReg (\"\\n\", \"g\").replace (textField.__div.innerHTML, \"<br>\");\n\t\t\t\t\ttextField.__div.innerHTML = new EReg (\"\\r\", \"g\").replace (textField.__div.innerHTML, \"<br>\");\n\t\t\t\t\t\n\t\t\t\t\tstyle.setProperty (\"font\", TextEngine.getFont (textField.__textFormat), null);\n\t\t\t\t\t\n\t\t\t\t\ttextField.__textFormat.size = unscaledSize;\n\t\t\t\t\ttextField.__textFormat.leading = unscaledLeading;\n\t\t\t\t\t\n\t\t\t\t\tstyle.setProperty (\"top\", \"3px\", null);\n\t\t\t\t\t\n\t\t\t\t\tif (textEngine.border) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tstyle.setProperty (\"border\", \"solid 1px #\" + StringTools.hex (textEngine.borderColor & 0xFFFFFF, 6), null);\n\t\t\t\t\t\ttextField.__renderTransform.translate (-1, -1);\n\t\t\t\t\t\ttextField.__renderTransformChanged = true;\n\t\t\t\t\t\ttextField.__transformDirty = true;\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (style.border != \"\") {\n\t\t\t\t\t\t\n\t\t\t\t\t\tstyle.removeProperty (\"border\");\n\t\t\t\t\t\ttextField.__renderTransformChanged = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tstyle.setProperty (\"color\", \"#\" + StringTools.hex (textField.__textFormat.color & 0xFFFFFF, 6), null);\n\t\t\t\t\t\n\t\t\t\t\tstyle.setProperty (\"width\",  w + \"px\", null);\n\t\t\t\t\tstyle.setProperty (\"height\", h + \"px\", null);\n\t\t\t\t\t\n\t\t\t\t\tswitch (textField.__textFormat.align) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase TextFormatAlign.CENTER:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstyle.setProperty (\"text-align\", \"center\", null);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase TextFormatAlign.RIGHT:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstyle.setProperty (\"text-align\", \"right\", null);\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstyle.setProperty (\"text-align\", \"left\", null);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttextField.__dirty = false;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (textField.__div != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\trenderSession.element.removeChild (textField.__div);\n\t\t\t\t\t\ttextField.__div = null;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (textField.__div != null) {\n\t\t\t\t\n\t\t\t\t// force roundPixels = true for TextFields\n\t\t\t\t// Chrome shows blurry text if coordinates are fractional\n\t\t\t\t\n\t\t\t\tvar old = renderSession.roundPixels;\n\t\t\t\trenderSession.roundPixels = true;\n\t\t\t\t\n\t\t\t\tDOMRenderer.updateClip (textField, renderSession);\n\t\t\t\tDOMRenderer.applyStyle (textField, renderSession, true, true, true);\n\t\t\t\t\n\t\t\t\trenderSession.roundPixels = old;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tclear (textField, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function __getAttributeMatch (regex:EReg):String {\n\t\t\n\t\treturn regex.matched (2) != null ? regex.matched (2) : regex.matched (3);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl;\n\n\nimport lime.utils.Float32Array;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.Bitmap;\n\n#if gl_stats\nimport openfl._internal.renderer.opengl.stats.GLStats;\nimport openfl._internal.renderer.opengl.stats.DrawCallContext;\n#end\n\n#if !openfl_debug\n@:fileXml(' tags=\"haxe,release\" ')\n@:noDebug\n#end\n\n@:access(openfl.display.Bitmap)\n@:access(openfl.display.BitmapData)\n@:access(openfl.display.Stage)\n@:access(openfl.filters.BitmapFilter)\n@:access(openfl.geom.ColorTransform)\n\n\nclass GLBitmap {\n\t\n\t\n\tpublic static function render (bitmap:Bitmap, renderSession:RenderSession):Void {\n\t\t\n\t\tif (!bitmap.__renderable || bitmap.__worldAlpha <= 0) return;\n\t\t\n\t\tif (bitmap.__bitmapData != null && bitmap.__bitmapData.__isValid) {\n\t\t\t\n\t\t\tvar renderer:GLRenderer = cast renderSession.renderer;\n\t\t\tvar gl = renderSession.gl;\n\t\t\t\n\t\t\trenderSession.blendModeManager.setBlendMode (bitmap.__worldBlendMode);\n\t\t\trenderSession.maskManager.pushObject (bitmap);\n\t\t\t\n\t\t\trenderSession.filterManager.pushObject (bitmap);\n\t\t\t\n\t\t\tvar shader = renderSession.shaderManager.initShader (bitmap.shader);\n\t\t\trenderSession.shaderManager.setShader (shader);\n\t\t\t\n\t\t\tshader.data.uImage0.input = bitmap.__bitmapData;\n\t\t\tshader.data.uImage0.smoothing = renderSession.allowSmoothing && (bitmap.smoothing || renderSession.upscaled);\n\t\t\tshader.data.uMatrix.value = renderer.getMatrix (bitmap.__renderTransform);\n\t\t\t\n\t\t\tvar useColorTransform = !bitmap.__worldColorTransform.__isDefault ();\n\t\t\tif (shader.data.uColorTransform.value == null) shader.data.uColorTransform.value = [];\n\t\t\tshader.data.uColorTransform.value[0] = useColorTransform;\n\t\t\t\n\t\t\trenderSession.shaderManager.updateShader (shader);\n\t\t\t\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, bitmap.__bitmapData.getBuffer (gl, bitmap.__worldAlpha, bitmap.__worldColorTransform));\n\t\t\t\n\t\t\tgl.vertexAttribPointer (shader.data.aPosition.index, 3, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 0);\n\t\t\tgl.vertexAttribPointer (shader.data.aTexCoord.index, 2, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\tgl.vertexAttribPointer (shader.data.aAlpha.index, 1, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 5 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\n\t\t\tif (true || useColorTransform) {\n\t\t\t\t\n\t\t\t\tgl.vertexAttribPointer (shader.data.aColorMultipliers.index, 4, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 6 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\tgl.vertexAttribPointer (shader.data.aColorMultipliers.index + 1, 4, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 10 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\tgl.vertexAttribPointer (shader.data.aColorMultipliers.index + 2, 4, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 14 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\tgl.vertexAttribPointer (shader.data.aColorMultipliers.index + 3, 4, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 18 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\tgl.vertexAttribPointer (shader.data.aColorOffsets.index, 4, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 22 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.drawArrays (gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\n\t\t\t#if gl_stats\n\t\t\t\tGLStats.incrementDrawCall (DrawCallContext.STAGE);\n\t\t\t#end\n\t\t\t\n\t\t\trenderSession.filterManager.popObject (bitmap);\n\t\t\trenderSession.maskManager.popObject (bitmap);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function renderMask (bitmap:Bitmap, renderSession:RenderSession):Void {\n\t\t\n\t\tif (bitmap.__bitmapData != null && bitmap.__bitmapData.__isValid) {\n\t\t\t\n\t\t\tvar renderer:GLRenderer = cast renderSession.renderer;\n\t\t\tvar gl = renderSession.gl;\n\t\t\t\n\t\t\tvar shader = GLMaskManager.maskShader;\n\t\t\trenderSession.shaderManager.setShader (shader);\n\t\t\t\n\t\t\tshader.data.uImage0.input = bitmap.__bitmapData;\n\t\t\tshader.data.uImage0.smoothing = renderSession.allowSmoothing && (bitmap.smoothing || renderSession.upscaled);\n\t\t\tshader.data.uMatrix.value = renderer.getMatrix (bitmap.__renderTransform);\n\t\t\t\n\t\t\trenderSession.shaderManager.updateShader (shader);\n\t\t\t\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, bitmap.__bitmapData.getBuffer (gl, bitmap.__worldAlpha, bitmap.__worldColorTransform));\n\t\t\t\n\t\t\tgl.vertexAttribPointer (shader.data.aPosition.index, 3, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 0);\n\t\t\tgl.vertexAttribPointer (shader.data.aTexCoord.index, 2, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\n\t\t\tgl.drawArrays (gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\n\t\t\t#if gl_stats\n\t\t\t\tGLStats.incrementDrawCall (DrawCallContext.STAGE);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl;\n\n\nimport lime.graphics.GLRenderContext;\nimport openfl._internal.renderer.AbstractBlendModeManager;\nimport openfl.display.BlendMode;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass GLBlendModeManager extends AbstractBlendModeManager {\n\t\n\t\n\tprivate var currentBlendMode:BlendMode;\n\tprivate var gl:GLRenderContext;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tthis.gl = gl;\n\t\t\n\t\tsetBlendMode (NORMAL);\n\t\tgl.enable (gl.BLEND);\n\t\t\n\t}\n\t\n\t\n\tpublic override function setBlendMode (blendMode:BlendMode):Void {\n\t\t\n\t\tif (currentBlendMode == blendMode) return;\n\t\t\n\t\tcurrentBlendMode = blendMode;\n\t\t\n\t\tswitch (blendMode) {\n\t\t\t\n\t\t\tcase ADD:\n\t\t\t\t\n\t\t\t\tgl.blendEquation (gl.FUNC_ADD);\n\t\t\t\tgl.blendFunc (gl.ONE, gl.ONE);\n\t\t\t\n\t\t\tcase MULTIPLY:\n\t\t\t\t\n\t\t\t\tgl.blendEquation (gl.FUNC_ADD);\n\t\t\t\tgl.blendFunc (gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\n\t\t\tcase SCREEN:\n\t\t\t\t\n\t\t\t\tgl.blendEquation (gl.FUNC_ADD);\n\t\t\t\tgl.blendFunc (gl.ONE, gl.ONE_MINUS_SRC_COLOR);\n\t\t\t\n\t\t\tcase SUBTRACT:\n\t\t\t\t\n\t\t\t\tgl.blendEquation (gl.FUNC_REVERSE_SUBTRACT);\n\t\t\t\tgl.blendFunc (gl.ONE, gl.ONE);\n\t\t\t\n\t\t\t#if desktop\n\t\t\tcase DARKEN:\n\t\t\t\t\n\t\t\t\tgl.blendEquation (0x8007); // GL_MIN\n\t\t\t\tgl.blendFunc (gl.ONE, gl.ONE);\n\t\t\t\t\n\t\t\tcase LIGHTEN:\n\t\t\t\t\n\t\t\t\tgl.blendEquation (0x8008); // GL_MAX\n\t\t\t\tgl.blendFunc (gl.ONE, gl.ONE);\n\t\t\t#end\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tgl.blendEquation (gl.FUNC_ADD);\n\t\t\t\tgl.blendFunc (gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl;\n\n\nimport lime.math.color.ARGB;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.DisplayObject;\nimport openfl.geom.Rectangle;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.geom.Matrix)\n@:access(openfl.geom.Rectangle)\n\n\nclass GLDisplayObject {\n\t\n\t\n\tpublic static inline function render (displayObject:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\tif (displayObject.opaqueBackground == null && displayObject.__graphics == null) return;\n\t\tif (!displayObject.__renderable || displayObject.__worldAlpha <= 0) return;\n\t\t\n\t\tif (displayObject.opaqueBackground != null && !displayObject.__cacheBitmapRender && displayObject.width > 0 && displayObject.height > 0) {\n\t\t\t\n\t\t\trenderSession.blendModeManager.setBlendMode (displayObject.__worldBlendMode);\n\t\t\trenderSession.maskManager.pushObject (displayObject);\n\t\t\t\n\t\t\tvar gl = renderSession.gl;\n\t\t\t\n\t\t\tvar rect = Rectangle.__pool.get ();\n\t\t\trect.setTo (0, 0, displayObject.width, displayObject.height);\n\t\t\trenderSession.maskManager.pushRect (rect, displayObject.__renderTransform);\n\t\t\t\n\t\t\tvar color:ARGB = (displayObject.opaqueBackground:ARGB);\n\t\t\tgl.clearColor (color.r / 0xFF, color.g / 0xFF, color.b / 0xFF, 1);\n\t\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\t\n\t\t\trenderSession.maskManager.popRect ();\n\t\t\trenderSession.maskManager.popObject (displayObject);\n\t\t\t\n\t\t\tRectangle.__pool.release (rect);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (displayObject.__graphics != null) {\n\t\t\t\n\t\t\tGLShape.render (displayObject, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function renderMask (displayObject:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\tif (displayObject.opaqueBackground == null && displayObject.__graphics == null) return;\n\t\t\n\t\tif (displayObject.opaqueBackground != null && !displayObject.__cacheBitmapRender && displayObject.width > 0 && displayObject.height > 0) {\n\t\t\t\n\t\t\tvar gl = renderSession.gl;\n\t\t\t\n\t\t\t// TODO\n\t\t\t\n\t\t\t// var rect = Rectangle.__pool.get ();\n\t\t\t// rect.setTo (0, 0, displayObject.width, displayObject.height);\n\t\t\t// renderSession.maskManager.pushRect (rect, displayObject.__renderTransform);\n\t\t\t\n\t\t\t// var color:ARGB = (displayObject.opaqueBackground:ARGB);\n\t\t\t// gl.clearColor (color.r / 0xFF, color.g / 0xFF, color.b / 0xFF, 1);\n\t\t\t// gl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\t\n\t\t\t// renderSession.maskManager.popRect ();\n\t\t\t// renderSession.maskManager.popObject (displayObject);\n\t\t\t\n\t\t\t// Rectangle.__pool.release (rect);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (displayObject.__graphics != null) {\n\t\t\t\n\t\t\tGLShape.renderMask (displayObject, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl;\n\n\nimport lime.graphics.GLRenderContext;\nimport lime.utils.Float32Array;\nimport openfl._internal.renderer.AbstractFilterManager;\nimport openfl.display.BitmapData;\nimport openfl.display.DisplayObject;\nimport openfl.display.Shader;\nimport openfl.filters.BitmapFilter;\nimport openfl.filters.GlowFilter;\nimport openfl.geom.Matrix;\nimport openfl.text.TextField;\nimport openfl.Vector;\n\n#if gl_stats\nimport openfl._internal.renderer.opengl.stats.GLStats;\nimport openfl._internal.renderer.opengl.stats.DrawCallContext;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.renderer.opengl.GLRenderer)\n@:access(openfl.display.BitmapData)\n@:access(openfl.display.DisplayObject)\n@:access(openfl.filters.BitmapFilter)\n@:keep\n\n\nclass GLFilterManager extends AbstractFilterManager {\n\t\n\t\n\tprivate var filterDepth:Int;\n\tprivate var gl:GLRenderContext;\n\tprivate var matrix:Matrix;\n\tprivate var renderer:GLRenderer;\n\t\n\t\n\tpublic function new (renderer:GLRenderer, renderSession:RenderSession) {\n\t\t\n\t\tsuper (renderSession);\n\t\t\n\t\tthis.renderer = renderer;\n\t\tthis.gl = renderSession.gl;\n\t\t\n\t\tfilterDepth = 0;\n\t\tmatrix = new Matrix ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function pushObject (object:DisplayObject):Shader {\n\t\t\n\t\treturn renderSession.shaderManager.defaultShader;\n\t\t\n\t\t// TODO: Support one-pass filters?\n\t\t\n\t\tif (object.__filters != null && object.__filters.length > 0) {\n\t\t\t\n\t\t\tif (Std.is (object.__filters[0], GlowFilter) && Std.is (object, TextField)) {\n\t\t\t\t\n\t\t\t\t// Hack, force outline\n\t\t\t\treturn renderSession.shaderManager.defaultShader;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (object.__filters.length == 1 && object.__filters[0].__numShaderPasses == 0) {\n\t\t\t\t\n\t\t\t\trenderer.getRenderTarget (false);\n\t\t\t\treturn object.__filters[0].__initShader (renderSession, 0);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\trenderer.getRenderTarget (true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfilterDepth++;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn renderSession.shaderManager.defaultShader;\n\t\t\n\t}\n\t\n\t\n\tpublic override function popObject (object:DisplayObject):Void {\n\t\t\n\t\treturn;\n\t\t\n\t\t// TEMPORARILY DISABLED\n\t\t\n\t\tif (object.__filters != null && object.__filters.length > 0) {\n\t\t\t\n\t\t\tif (Std.is (object.__filters[0], GlowFilter) && Std.is (object, TextField)) {\n\t\t\t\t\n\t\t\t\t// Hack, force outline\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar numPasses:Int = 0;\n\t\t\t\n\t\t\tif (object.__filters.length > 1 || object.__filters[0].__numShaderPasses > 0) {\n\t\t\t\t\n\t\t\t\tnumPasses = object.__filters.length;\n\t\t\t\t\n\t\t\t\tfor (filter in object.__filters) {\n\t\t\t\t\t\n\t\t\t\t\tnumPasses += (filter.__numShaderPasses > 0) ? (filter.__numShaderPasses - 1) : 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (numPasses > 0) {\n\t\t\t\t\n\t\t\t\t// if (filter.__cacheObject) {\n\t\t\t\t\t\n\t\t\t\t// \tcurrentTarget = renderer.currentRenderTarget;\n\t\t\t\t// \trenderer.getCacheObject ();\n\t\t\t\t\t\n\t\t\t\t// \trenderPass (currentTarget, renderSession.shaderManager.defaultShader);\n\t\t\t\t\t\n\t\t\t\t// }\n\t\t\t\t\n\t\t\t\tvar currentTarget, shader;\n\t\t\t\t\n\t\t\t\tfor (filter in object.__filters) {\n\t\t\t\t\t\n\t\t\t\t\t// TODO: Handle mixture of software-only filters\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...filter.__numShaderPasses) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcurrentTarget = renderer.currentRenderTarget;\n\t\t\t\t\t\trenderer.getRenderTarget(true);\n\t\t\t\t\t\tshader = filter.__initShader(renderSession, i);\n\t\t\t\t\t\t\n\t\t\t\t\t\trenderPass (currentTarget, shader);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// TODO: Properly handle filter-within-filter rendering\n\t\t\t\t\t\n\t\t\t\t\tfilterDepth--;\n\t\t\t\t\tcurrentTarget = renderer.currentRenderTarget;\n\t\t\t\t\trenderer.getRenderTarget (filterDepth > 0);\n\t\t\t\t\t\n\t\t\t\t\trenderPass (currentTarget, renderSession.shaderManager.defaultShader);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tfilterDepth--;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function renderPass (target:BitmapData, shader:Shader):Void {\n\t\t\n\t\tif (target == null || shader == null) return;\n\t\t\n\t\tshader.data.uImage0.input = target;\n\t\tshader.data.uImage0.smoothing = renderSession.allowSmoothing && (renderSession.upscaled);\n\t\tshader.data.uMatrix.value = renderer.getMatrix (matrix);\n\t\t\n\t\tif (shader.data.uColorTransform != null) {\n\t\t\tif (shader.data.uColorTransform.value == null) shader.data.uColorTransform.value = [];\n\t\t\tshader.data.uColorTransform.value[0] = false;\n\t\t}\n\t\t\n\t\trenderSession.shaderManager.setShader (shader);\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, target.getBuffer (gl, 1, null));\n\t\t\n\t\tgl.vertexAttribPointer (shader.data.aPosition.index, 3, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 0);\n\t\tgl.vertexAttribPointer (shader.data.aTexCoord.index, 2, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);\n\t\tgl.vertexAttribPointer (shader.data.aAlpha.index, 1, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 5 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\n\t\tgl.drawArrays (gl.TRIANGLE_STRIP, 0, 4);\n\t\t\n\t\t#if gl_stats\n\t\t\tGLStats.incrementDrawCall (DrawCallContext.STAGE);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.opengl.GLProgram;\nimport lime.utils.Float32Array;\nimport lime.utils.GLUtils;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.ShaderInput)\n@:access(openfl.display.ShaderParameter)\n\n#if (!display && !macro)\n@:autoBuild(openfl._internal.macros.ShaderMacro.build())\n@:build(openfl._internal.macros.ShaderMacro.build())\n#end\n\n\nclass Shader {\n\t\n\t\n\tpublic var byteCode (null, default):ByteArray;\n\tpublic var data (get, set):ShaderData;\n\tpublic var glFragmentSource (get, set):String;\n\tpublic var glProgram (default, null):GLProgram;\n\tpublic var glVertexSource (get, set):String;\n\tpublic var precisionHint:ShaderPrecision;\n\t\n\tprivate var gl:GLRenderContext;\n\t\n\tprivate var __data:ShaderData;\n\tprivate var __glFragmentSource:String;\n\tprivate var __glSourceDirty:Bool;\n\tprivate var __glVertexSource:String;\n\tprivate var __isUniform:Map<String, Bool>;\n\tprivate var __inputBitmapData:Array<ShaderInput<BitmapData>>;\n\tprivate var __numPasses:Int;\n\tprivate var __paramBool:Array<ShaderParameter<Bool>>;\n\tprivate var __paramFloat:Array<ShaderParameter<Float>>;\n\tprivate var __paramInt:Array<ShaderParameter<Int>>;\n\tprivate var __uniformMatrix2:Float32Array;\n\tprivate var __uniformMatrix3:Float32Array;\n\tprivate var __uniformMatrix4:Float32Array;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (Shader.prototype, {\n\t\t\t\"data\": { get: untyped __js__ (\"function () { return this.get_data (); }\"), set: untyped __js__ (\"function (v) { return this.set_data (v); }\") },\n\t\t\t\"glFragmentSource\": { get: untyped __js__ (\"function () { return this.get_glFragmentSource (); }\"), set: untyped __js__ (\"function (v) { return this.set_glFragmentSource (v); }\") },\n\t\t\t\"glVertexSource\": { get: untyped __js__ (\"function () { return this.get_glVertexSource (); }\"), set: untyped __js__ (\"function (v) { return this.set_glVertexSource (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\t@:glFragmentSource(\n\t\t\n\t\t#if emscripten\n\t\t\"varying float vAlpha;\n\t\tvarying mat4 vColorMultipliers;\n\t\tvarying vec4 vColorOffsets;\n\t\tvarying vec2 vTexCoord;\n\t\t\n\t\tuniform bool uColorTransform;\n\t\tuniform sampler2D uImage0;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 color = texture2D (uImage0, vTexCoord);\n\t\t\t\n\t\t\tif (color.a == 0.0) {\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\t\t\t\t\n\t\t\t} else if (uColorTransform) {\n\t\t\t\t\n\t\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\t\t\t\tcolor = vColorOffsets + (color * vColorMultipliers);\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (color.bgr * color.a * vAlpha, color.a * vAlpha);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl_FragColor = color.bgra * vAlpha;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\"\n\t\t#else\n\t\t\"varying float vAlpha;\n\t\tvarying mat4 vColorMultipliers;\n\t\tvarying vec4 vColorOffsets;\n\t\tvarying vec2 vTexCoord;\n\t\t\n\t\tuniform bool uColorTransform;\n\t\tuniform sampler2D uImage0;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 color = texture2D (uImage0, vTexCoord);\n\t\t\t\n\t\t\tif (color.a == 0.0) {\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\t\t\t\t\n\t\t\t} else if (uColorTransform) {\n\t\t\t\t\n\t\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\t\t\t\tcolor = vColorOffsets + (color * vColorMultipliers);\n\t\t\t\t\n\t\t\t\tif (color.a > 0.0) {\n\t\t\t\t\t\n\t\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * vAlpha, color.a * vAlpha);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl_FragColor = color * vAlpha;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\"\n\t\t#end\n\t\t\n\t)\n\t\n\t\n\t@:glVertexSource(\n\t\t\n\t\t\"attribute float aAlpha;\n\t\tattribute mat4 aColorMultipliers;\n\t\tattribute vec4 aColorOffsets;\n\t\tattribute vec4 aPosition;\n\t\tattribute vec2 aTexCoord;\n\t\tvarying float vAlpha;\n\t\tvarying mat4 vColorMultipliers;\n\t\tvarying vec4 vColorOffsets;\n\t\tvarying vec2 vTexCoord;\n\t\t\n\t\tuniform mat4 uMatrix;\n\t\tuniform bool uColorTransform;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvAlpha = aAlpha;\n\t\t\tvTexCoord = aTexCoord;\n\t\t\t\n\t\t\tif (uColorTransform) {\n\t\t\t\t\n\t\t\t\tvColorMultipliers = aColorMultipliers;\n\t\t\t\tvColorOffsets = aColorOffsets;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl_Position = uMatrix * aPosition;\n\t\t\t\n\t\t}\"\n\t\t\n\t)\n\t\n\t\n\tpublic function new (code:ByteArray = null) {\n\t\t\n\t\tbyteCode = code;\n\t\tprecisionHint = FULL;\n\t\t\n\t\t__glSourceDirty = true;\n\t\t__numPasses = 1;\n\t\t\n\t}\n\t\n\t\n\tprivate function __disable ():Void {\n\t\t\n\t\tif (glProgram != null) {\n\t\t\t\n\t\t\t__disableGL ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __disableGL ():Void {\n\t\t\n\t\tif (data.uImage0 != null) {\n\t\t\t\n\t\t\tdata.uImage0.input = null;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (parameter in __paramBool) {\n\t\t\t\n\t\t\tgl.disableVertexAttribArray (parameter.index);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (parameter in __paramFloat) {\n\t\t\t\n\t\t\tgl.disableVertexAttribArray (parameter.index);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (parameter in __paramInt) {\n\t\t\t\n\t\t\tgl.disableVertexAttribArray (parameter.index);\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, null);\n\t\tgl.bindTexture (gl.TEXTURE_2D, null);\n\t\t\n\t\tif (gl.type == OPENGL) {\n\t\t\t\n\t\t\tgl.disable (gl.TEXTURE_2D);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __enable ():Void {\n\t\t\n\t\t__init ();\n\t\t\n\t\tif (glProgram != null) {\n\t\t\t\n\t\t\t__enableGL ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __enableGL ():Void {\n\t\t\n\t\tvar textureCount = 0;\n\t\t\n\t\tfor (input in __inputBitmapData) {\n\t\t\t\n\t\t\tgl.uniform1i (input.index, textureCount);\n\t\t\ttextureCount++;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (gl.type == OPENGL && textureCount > 0) {\n\t\t\t\n\t\t\tgl.enable (gl.TEXTURE_2D);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __init ():Void {\n\t\t\n\t\tif (__data == null) {\n\t\t\t\n\t\t\t__data = cast new ShaderData (null);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__glFragmentSource != null && __glVertexSource != null && (glProgram == null || __glSourceDirty)) {\n\t\t\t\n\t\t\t__initGL ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __initGL ():Void {\n\t\t\n\t\tif (__glSourceDirty || __isUniform == null) {\n\t\t\t\n\t\t\t__glSourceDirty = false;\n\t\t\tglProgram = null;\n\t\t\t\n\t\t\t__isUniform = new Map ();\n\t\t\t\n\t\t\t__inputBitmapData = new Array ();\n\t\t\t__paramBool = new Array ();\n\t\t\t__paramFloat = new Array ();\n\t\t\t__paramInt = new Array ();\n\t\t\t\n\t\t\t__uniformMatrix2 = new Float32Array (4);\n\t\t\t__uniformMatrix3 = new Float32Array (9);\n\t\t\t__uniformMatrix4 = new Float32Array (16);\n\t\t\t\n\t\t\t__processGLData (glVertexSource, \"attribute\");\n\t\t\t__processGLData (glVertexSource, \"uniform\");\n\t\t\t__processGLData (glFragmentSource, \"uniform\");\n\t\t\t\n\t\t}\n\t\t\n\t\tif (gl != null && glProgram == null) {\n\t\t\t\n\t\t\tvar fragment = \n\t\t\t\t\n\t\t\t\t\"#ifdef GL_ES\n\t\t\t\tprecision \" + (precisionHint == FULL ? \"mediump\" : \"lowp\") + \" float;\n\t\t\t\t#endif\n\t\t\t\t\" + glFragmentSource;\n\t\t\t\n\t\t\tglProgram = GLUtils.createProgram (glVertexSource, fragment);\n\t\t\t\n\t\t\tif (glProgram != null) {\n\t\t\t\t\n\t\t\t\tfor (input in __inputBitmapData) {\n\t\t\t\t\t\n\t\t\t\t\tif (__isUniform.get (input.name)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tinput.index = gl.getUniformLocation (glProgram, input.name);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tinput.index = gl.getAttribLocation (glProgram, input.name);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (parameter in __paramBool) {\n\t\t\t\t\t\n\t\t\t\t\tif (__isUniform.get (parameter.name)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparameter.index = gl.getUniformLocation (glProgram, parameter.name);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparameter.index = gl.getAttribLocation (glProgram, parameter.name);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (parameter in __paramFloat) {\n\t\t\t\t\t\n\t\t\t\t\tif (__isUniform.get (parameter.name)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparameter.index = gl.getUniformLocation (glProgram, parameter.name);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparameter.index = gl.getAttribLocation (glProgram, parameter.name);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (parameter in __paramInt) {\n\t\t\t\t\t\n\t\t\t\t\tif (__isUniform.get (parameter.name)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparameter.index = gl.getUniformLocation (glProgram, parameter.name);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparameter.index = gl.getAttribLocation (glProgram, parameter.name);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __processGLData (source:String, storageType:String):Void {\n\t\t\n\t\tvar lastMatch = 0, position, regex, name, type;\n\t\t\n\t\tif (storageType == \"uniform\") {\n\t\t\t\n\t\t\tregex = ~/uniform ([A-Za-z0-9]+) ([A-Za-z0-9]+)/;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tregex = ~/attribute ([A-Za-z0-9]+) ([A-Za-z0-9]+)/;\n\t\t\t\n\t\t}\n\t\t\n\t\twhile (regex.matchSub (source, lastMatch)) {\n\t\t\t\n\t\t\ttype = regex.matched (1);\n\t\t\tname = regex.matched (2);\n\t\t\t\n\t\t\tif (StringTools.startsWith (type, \"sampler\")) {\n\t\t\t\t\n\t\t\t\tvar input = new ShaderInput<BitmapData> ();\n\t\t\t\tinput.name = name;\n\t\t\t\t__inputBitmapData.push (input);\n\t\t\t\tReflect.setField (data, name, input);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar parameterType:ShaderParameterType = switch (type) {\n\t\t\t\t\t\n\t\t\t\t\tcase \"bool\": BOOL;\n\t\t\t\t\tcase \"double\", \"float\": FLOAT;\n\t\t\t\t\tcase \"int\", \"uint\": INT;\n\t\t\t\t\tcase \"bvec2\": BOOL2;\n\t\t\t\t\tcase \"bvec3\": BOOL3;\n\t\t\t\t\tcase \"bvec4\": BOOL4;\n\t\t\t\t\tcase \"ivec2\", \"uvec2\": INT2;\n\t\t\t\t\tcase \"ivec3\", \"uvec3\": INT3;\n\t\t\t\t\tcase \"ivec4\", \"uvec4\": INT4;\n\t\t\t\t\tcase \"vec2\", \"dvec2\": FLOAT2;\n\t\t\t\t\tcase \"vec3\", \"dvec3\": FLOAT3;\n\t\t\t\t\tcase \"vec4\", \"dvec4\": FLOAT4;\n\t\t\t\t\tcase \"mat2\", \"mat2x2\": MATRIX2X2;\n\t\t\t\t\tcase \"mat2x3\": MATRIX2X3;\n\t\t\t\t\tcase \"mat2x4\": MATRIX2X4;\n\t\t\t\t\tcase \"mat3x2\": MATRIX3X2;\n\t\t\t\t\tcase \"mat3\", \"mat3x3\": MATRIX3X3;\n\t\t\t\t\tcase \"mat3x4\": MATRIX3X4;\n\t\t\t\t\tcase \"mat4x2\": MATRIX4X2;\n\t\t\t\t\tcase \"mat4x3\": MATRIX4X3;\n\t\t\t\t\tcase \"mat4\", \"mat4x4\": MATRIX4X4;\n\t\t\t\t\tdefault: null;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tswitch (parameterType) {\n\t\t\t\t\t\n\t\t\t\t\tcase BOOL, BOOL2, BOOL3, BOOL4:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar parameter = new ShaderParameter<Bool> ();\n\t\t\t\t\t\tparameter.name = name;\n\t\t\t\t\t\tparameter.type = parameterType;\n\t\t\t\t\t\t__paramBool.push (parameter);\n\t\t\t\t\t\tReflect.setField (data, name, parameter);\n\t\t\t\t\t\n\t\t\t\t\tcase INT, INT2, INT3, INT4:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar parameter = new ShaderParameter<Int> ();\n\t\t\t\t\t\tparameter.name = name;\n\t\t\t\t\t\tparameter.type = parameterType;\n\t\t\t\t\t\t__paramInt.push (parameter);\n\t\t\t\t\t\tReflect.setField (data, name, parameter);\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar parameter = new ShaderParameter<Float> ();\n\t\t\t\t\t\tparameter.name = name;\n\t\t\t\t\t\tparameter.type = parameterType;\n\t\t\t\t\t\t__paramFloat.push (parameter);\n\t\t\t\t\t\tReflect.setField (data, name, parameter);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__isUniform.set (name, storageType == \"uniform\");\n\t\t\t\n\t\t\tposition = regex.matchedPos ();\n\t\t\tlastMatch = position.pos + position.len;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __update ():Void {\n\t\t\n\t\tif (glProgram != null) {\n\t\t\t\n\t\t\t__updateGL ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __updateGL ():Void {\n\t\t\n\t\tvar textureCount = 0;\n\t\t\n\t\tfor (input in __inputBitmapData) {\n\t\t\t\n\t\t\tif (input.input != null) {\n\t\t\t\t\n\t\t\t\tgl.activeTexture (gl.TEXTURE0 + textureCount);\n\t\t\t\tgl.bindTexture (gl.TEXTURE_2D, input.input.getTexture (gl));\n\t\t\t\t\n\t\t\t\tif (input.smoothing) {\n\t\t\t\t\t\n\t\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\ttextureCount++;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar value, index;\n\t\t\n\t\tfor (parameter in __paramBool) {\n\t\t\t\n\t\t\tvalue = parameter.value;\n\t\t\tindex = parameter.index;\n\t\t\t\n\t\t\tif (value != null) {\n\t\t\t\t\n\t\t\t\tswitch (parameter.type) {\n\t\t\t\t\t\n\t\t\t\t\tcase BOOL:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform1i (index, value[0] ? 1 : 0);\n\t\t\t\t\t\n\t\t\t\t\tcase BOOL2:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform2i (index, value[0] ? 1 : 0, value[1] ? 1 : 0);\n\t\t\t\t\t\n\t\t\t\t\tcase BOOL3:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform3i (index, value[0] ? 1 : 0, value[1] ? 1 : 0, value[2] ? 1 : 0);\n\t\t\t\t\t\n\t\t\t\t\tcase BOOL4:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform4i (index, value[0] ? 1 : 0, value[1] ? 1 : 0, value[2] ? 1 : 0, value[3] ? 1 : 0);\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (!__isUniform.get (parameter.name)) {\n\t\t\t\t\n\t\t\t\tgl.enableVertexAttribArray (parameter.index);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar value, index;\n\t\t\n\t\tfor (parameter in __paramFloat) {\n\t\t\t\n\t\t\tvalue = parameter.value;\n\t\t\tindex = parameter.index;\n\t\t\t\n\t\t\tif (value != null) {\n\t\t\t\t\n\t\t\t\tswitch (parameter.type) {\n\t\t\t\t\t\n\t\t\t\t\tcase FLOAT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform1f (index, value[0]);\n\t\t\t\t\t\n\t\t\t\t\tcase FLOAT2:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform2f (index, value[0], value[1]);\n\t\t\t\t\t\n\t\t\t\t\tcase FLOAT3:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform3f (index, value[0], value[1], value[2]);\n\t\t\t\t\t\n\t\t\t\t\tcase FLOAT4:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform4f (index, value[0], value[1], value[2], value[3]);\n\t\t\t\t\t\n\t\t\t\t\tcase MATRIX2X2:\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...4) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t__uniformMatrix2[i] = value[i];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniformMatrix2fv (index, 1, false, __uniformMatrix2);\n\t\t\t\t\t\n\t\t\t\t\t//case MATRIX2X3:\n\t\t\t\t\t//case MATRIX2X4:\n\t\t\t\t\t//case MATRIX3X2:\n\t\t\t\t\t\n\t\t\t\t\tcase MATRIX3X3:\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...9) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t__uniformMatrix3[i] = value[i];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniformMatrix3fv (index, 1, false, __uniformMatrix3);\n\t\t\t\t\t\n\t\t\t\t\t//case MATRIX3X4:\n\t\t\t\t\t//case MATRIX4X2:\n\t\t\t\t\t//case MATRIX4X3:\n\t\t\t\t\t\n\t\t\t\t\tcase MATRIX4X4:\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (i in 0...16) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t__uniformMatrix4[i] = value[i];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniformMatrix4fv (index, 1, false, __uniformMatrix4);\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (!__isUniform.get (parameter.name)) {\n\t\t\t\t\n\t\t\t\tgl.enableVertexAttribArray (parameter.index);\n\t\t\t\t\n\t\t\t\tswitch (parameter.type) {\n\t\t\t\t\t\n\t\t\t\t\tcase MATRIX2X2:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.enableVertexAttribArray (parameter.index + 1);\n\t\t\t\t\t\n\t\t\t\t\tcase MATRIX3X3:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.enableVertexAttribArray (parameter.index + 1);\n\t\t\t\t\t\tgl.enableVertexAttribArray (parameter.index + 2);\n\t\t\t\t\t\n\t\t\t\t\tcase MATRIX4X4:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.enableVertexAttribArray (parameter.index + 1);\n\t\t\t\t\t\tgl.enableVertexAttribArray (parameter.index + 2);\n\t\t\t\t\t\tgl.enableVertexAttribArray (parameter.index + 3);\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar value, index;\n\t\t\n\t\tfor (parameter in __paramInt) {\n\t\t\t\n\t\t\tvalue = parameter.value;\n\t\t\tindex = parameter.index;\n\t\t\t\n\t\t\tif (value != null) {\n\t\t\t\t\n\t\t\t\tswitch (parameter.type) {\n\t\t\t\t\t\n\t\t\t\t\tcase INT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform1i (index, value[0]);\n\t\t\t\t\t\n\t\t\t\t\tcase INT2:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform2i (index, value[0], value[1]);\n\t\t\t\t\t\n\t\t\t\t\tcase INT3:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform3i (index, value[0], value[1], value[2]);\n\t\t\t\t\t\n\t\t\t\t\tcase INT4:\n\t\t\t\t\t\t\n\t\t\t\t\t\tgl.uniform4i (index, value[0], value[1], value[2], value[3]);\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (!__isUniform.get (parameter.name)) {\n\t\t\t\t\n\t\t\t\tgl.enableVertexAttribArray (parameter.index);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_data ():ShaderData {\n\t\t\n\t\tif (__glSourceDirty || __data == null) {\n\t\t\t\n\t\t\t__init ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __data;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_data (value:ShaderData):ShaderData {\n\t\t\n\t\treturn __data = cast value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_glFragmentSource ():String {\n\t\t\n\t\treturn __glFragmentSource;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_glFragmentSource (value:String):String {\n\t\t\n\t\tif (value != __glFragmentSource) {\n\t\t\t\n\t\t\t__glSourceDirty = true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __glFragmentSource = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_glVertexSource ():String {\n\t\t\n\t\treturn __glVertexSource;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_glVertexSource (value:String):String {\n\t\t\n\t\tif (value != __glVertexSource) {\n\t\t\t\n\t\t\t__glSourceDirty = true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __glVertexSource = value;\n\t\t\n\t}\n\t\n\t\n}\n","package openfl._internal.macros; #if macro\n\n\nimport haxe.macro.Context;\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\n\nusing haxe.macro.ExprTools;\nusing haxe.macro.Tools;\n\n\nclass ShaderMacro {\n\t\n\t\n\tprivate static var defaultFields = new Map<String, Bool> ();\n\t\n\t\n\tpublic static function build ():Array<Field> {\n\t\t\n\t\tvar fields = Context.getBuildFields ();\n\t\t\n\t\tvar glFragmentSource = null;\n\t\tvar glVertexSource = null;\n\t\t\n\t\tfor (field in fields) {\n\t\t\t\n\t\t\tfor (meta in field.meta) {\n\t\t\t\t\n\t\t\t\tswitch (meta.name) {\n\t\t\t\t\t\n\t\t\t\t\tcase \"glFragmentSource\", \":glFragmentSource\":\n\t\t\t\t\t\t\n\t\t\t\t\t\tglFragmentSource = meta.params[0].getValue ();\n\t\t\t\t\t\n\t\t\t\t\tcase \"glVertexSource\", \":glVertexSource\":\n\t\t\t\t\t\t\n\t\t\t\t\t\tglVertexSource = meta.params[0].getValue ();\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (glVertexSource != null || glFragmentSource != null) {\n\t\t\t\n\t\t\tvar pos = Context.currentPos ();\n\t\t\tvar localClass = Context.getLocalClass ().get ();\n\t\t\t\n\t\t\tvar isBaseClass = (localClass.name == \"Shader\" && localClass.pack.length == 2 && localClass.pack[0] == \"openfl\" && localClass.pack[1] == \"display\");\n\t\t\t\n\t\t\tvar shaderDataFields = new Array<Field> ();\n\t\t\tvar dataClassName;\n\t\t\t\n\t\t\tprocessFields (glVertexSource, \"attribute\", shaderDataFields, isBaseClass, pos);\n\t\t\tprocessFields (glVertexSource, \"uniform\", shaderDataFields, isBaseClass, pos);\n\t\t\tprocessFields (glFragmentSource, \"uniform\", shaderDataFields, isBaseClass, pos);\n\t\t\t\n\t\t\tif (isBaseClass) {\n\t\t\t\t\n\t\t\t\tdataClassName = \"ShaderData\";\n\t\t\t\t\n\t\t\t} else if (shaderDataFields.length > 0) {\n\t\t\t\t\n\t\t\t\tdataClassName = \"_\" + localClass.name + \"_ShaderData\";\n\t\t\t\t\n\t\t\t\tContext.defineType ({\n\t\t\t\t\t\n\t\t\t\t\tpos: pos,\n\t\t\t\t\tpack: localClass.pack,\n\t\t\t\t\tname: dataClassName,\n\t\t\t\t\tkind: TDClass ({ pack: [ \"openfl\", \"display\" ], name: \"ShaderData\", params: [] }, null, false),\n\t\t\t\t\tfields: shaderDataFields,\n\t\t\t\t\tparams: [],\n\t\t\t\t\tmeta: [ { name: \":dox\", params: [ macro hide ], pos: pos }, { name: \":noCompletion\", pos: pos }, { name: \":hack\", pos: pos } ]\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tdataClassName = \"_Shader_ShaderData\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor (field in fields) {\n\t\t\t\t\n\t\t\t\tswitch (field.name) {\n\t\t\t\t\t\n\t\t\t\t\tcase \"new\":\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar block = switch (field.kind) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase FFun (f):\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (f.expr == null) null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tswitch (f.expr.expr) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcase EBlock (e): e;\n\t\t\t\t\t\t\t\t\tdefault: null;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdefault: null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (glVertexSource != null) block.unshift (macro if (__glVertexSource == null) __glVertexSource = $v{glVertexSource});\n\t\t\t\t\t\tif (glFragmentSource != null) block.unshift (macro if (__glFragmentSource == null) __glFragmentSource = $v{glFragmentSource});\n\t\t\t\t\t\n\t\t\t\t\tcase \"__data\":\n\t\t\t\t\t\t\n\t\t\t\t\t\tfield.kind = FVar (TPath ({ name: dataClassName, pack: localClass.pack, params: [] }), Context.parse (\"new \" + dataClassName + \" (null)\", pos));\n\t\t\t\t\t\n\t\t\t\t\tcase \"get_data\":\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch (field.kind) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase FFun (f):\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tf.ret = TPath ({ name: dataClassName, pack: localClass.pack, params: [] });\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn fields;\n\t\t\n\t}\n\t\n\t\n\tprivate static function processFields (source:String, storageType:String, fields:Array<Field>, isBaseClass:Bool, pos:Position):Void {\n\t\t\n\t\tif (source == null) return;\n\t\t\n\t\tvar lastMatch = 0, position, regex, name, type;\n\t\t\n\t\tif (storageType == \"uniform\") {\n\t\t\t\n\t\t\tregex = ~/uniform ([A-Za-z0-9]+) ([A-Za-z0-9]+)/;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tregex = ~/attribute ([A-Za-z0-9]+) ([A-Za-z0-9]+)/;\n\t\t\t\n\t\t}\n\t\t\n\t\twhile (regex.matchSub (source, lastMatch)) {\n\t\t\t\n\t\t\ttype = regex.matched (1);\n\t\t\tname = regex.matched (2);\n\t\t\t\n\t\t\tif (isBaseClass) {\n\t\t\t\t\n\t\t\t\tdefaultFields.set (name, true);\n\t\t\t\t\n\t\t\t} else if (defaultFields.exists (name)) {\n\t\t\t\t\n\t\t\t\tposition = regex.matchedPos ();\n\t\t\t\tlastMatch = position.pos + position.len;\n\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (StringTools.startsWith (type, \"sampler\")) {\n\t\t\t\t\n\t\t\t\tfields.push ( { name: name, access: [ APublic ], kind: FVar (macro :openfl.display.ShaderInput<openfl.display.BitmapData>), pos: pos } );\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar parameterType:openfl.display.ShaderParameterType = switch (type) {\n\t\t\t\t\t\n\t\t\t\t\tcase \"bool\": BOOL;\n\t\t\t\t\tcase \"double\", \"float\": FLOAT;\n\t\t\t\t\tcase \"int\", \"uint\": INT;\n\t\t\t\t\tcase \"bvec2\": BOOL2;\n\t\t\t\t\tcase \"bvec3\": BOOL3;\n\t\t\t\t\tcase \"bvec4\": BOOL4;\n\t\t\t\t\tcase \"ivec2\", \"uvec2\": INT2;\n\t\t\t\t\tcase \"ivec3\", \"uvec3\": INT3;\n\t\t\t\t\tcase \"ivec4\", \"uvec4\": INT4;\n\t\t\t\t\tcase \"vec2\", \"dvec2\": FLOAT2;\n\t\t\t\t\tcase \"vec3\", \"dvec3\": FLOAT3;\n\t\t\t\t\tcase \"vec4\", \"dvec4\": FLOAT4;\n\t\t\t\t\tcase \"mat2\", \"mat2x2\": MATRIX2X2;\n\t\t\t\t\tcase \"mat2x3\": MATRIX2X3;\n\t\t\t\t\tcase \"mat2x4\": MATRIX2X4;\n\t\t\t\t\tcase \"mat3x2\": MATRIX3X2;\n\t\t\t\t\tcase \"mat3\", \"mat3x3\": MATRIX3X3;\n\t\t\t\t\tcase \"mat3x4\": MATRIX3X4;\n\t\t\t\t\tcase \"mat4x2\": MATRIX4X2;\n\t\t\t\t\tcase \"mat4x3\": MATRIX4X3;\n\t\t\t\t\tcase \"mat4\", \"mat4x4\": MATRIX4X4;\n\t\t\t\t\tdefault: null;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tswitch (parameterType) {\n\t\t\t\t\t\n\t\t\t\t\tcase BOOL, BOOL2, BOOL3, BOOL4:\n\t\t\t\t\t\t\n\t\t\t\t\t\tfields.push ( { name: name, access: [ APublic ], kind: FVar (macro :openfl.display.ShaderParameter<Bool>), pos: pos } );\n\t\t\t\t\t\n\t\t\t\t\tcase INT, INT2, INT3, INT4:\n\t\t\t\t\t\t\n\t\t\t\t\t\tfields.push ( { name: name, access: [ APublic ], kind: FVar (macro :openfl.display.ShaderParameter<Int>), pos: pos } );\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\tfields.push ( { name: name, access: [ APublic ], kind: FVar (macro :openfl.display.ShaderParameter<Float>), pos: pos } );\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tposition = regex.matchedPos ();\n\t\t\tlastMatch = position.pos + position.len;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n#end","package openfl._internal.renderer.opengl;\n\n\nimport lime.graphics.GLRenderContext;\nimport openfl._internal.renderer.AbstractMaskManager;\nimport openfl.display.DisplayObject;\nimport openfl.display.Shader;\nimport openfl.geom.Matrix;\nimport openfl.geom.Rectangle;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.renderer.opengl.GLRenderer)\n@:access(openfl.display.DisplayObject)\n@:access(openfl.geom.Matrix)\n@:access(openfl.geom.Rectangle)\n@:keep\n\n\nclass GLMaskManager extends AbstractMaskManager {\n\t\n\t\n\t@:allow(openfl._internal.renderer.opengl) private static var maskShader = new GLMaskShader ();\n\t\n\tprivate var clipRects:Array<Rectangle>;\n\tprivate var gl:GLRenderContext;\n\tprivate var maskObjects:Array<DisplayObject>;\n\tprivate var numClipRects:Int;\n\tprivate var stencilReference:Int;\n\tprivate var tempRect:Rectangle;\n\t\n\t\n\tpublic function new (renderSession:RenderSession) {\n\t\t\n\t\tsuper (renderSession);\n\t\t\n\t\tthis.gl = renderSession.gl;\n\t\t\n\t\tclipRects = new Array ();\n\t\tmaskObjects = new Array ();\n\t\tnumClipRects = 0;\n\t\tstencilReference = 0;\n\t\ttempRect = new Rectangle ();\n\t\t\n\t}\n\t\n\t\n\tpublic override function pushMask (mask:DisplayObject):Void {\n\t\t\n\t\tif (stencilReference == 0) {\n\t\t\t\n\t\t\tgl.enable (gl.STENCIL_TEST);\n\t\t\tgl.stencilMask (0xFF);\n\t\t\tgl.clear (gl.STENCIL_BUFFER_BIT);\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.INCR);\n\t\tgl.stencilFunc (gl.EQUAL, stencilReference, 0xFF);\n\t\tgl.colorMask (false, false, false, false);\n\t\t\n\t\tmask.__renderGLMask (renderSession);\n\t\tmaskObjects.push (mask);\n\t\tstencilReference++;\n\t\t\n\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.KEEP);\n\t\tgl.stencilFunc (gl.EQUAL, stencilReference, 0xFF);\n\t\tgl.colorMask (true, true, true, true);\n\t\t\n\t}\n\t\n\t\n\tpublic override function pushObject (object:DisplayObject, handleScrollRect:Bool = true):Void {\n\t\t\n\t\tif (handleScrollRect && object.__scrollRect != null) {\n\t\t\t\n\t\t\tpushRect (object.__scrollRect, object.__renderTransform);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (object.__mask != null) {\n\t\t\t\n\t\t\tpushMask (object.__mask);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function pushRect (rect:Rectangle, transform:Matrix):Void {\n\t\t\n\t\t// TODO: Handle rotation?\n\t\t\n\t\tif (numClipRects == clipRects.length) {\n\t\t\t\n\t\t\tclipRects[numClipRects] = new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar clipRect = clipRects[numClipRects];\n\t\trect.__transform (clipRect, transform);\n\t\t\n\t\tif (numClipRects > 0) {\n\t\t\t\n\t\t\tvar parentClipRect = clipRects[numClipRects - 1];\n\t\t\tclipRect.__contract (parentClipRect.x, parentClipRect.y, parentClipRect.width, parentClipRect.height);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (clipRect.height < 0) {\n\t\t\t\n\t\t\tclipRect.height = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (clipRect.width < 0) {\n\t\t\t\n\t\t\tclipRect.width = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tscissorRect (clipRect);\n\t\tnumClipRects++;\n\t\t\n\t}\n\t\n\t\n\tpublic override function popMask ():Void {\n\t\t\n\t\tif (stencilReference == 0) return;\n\t\t\n\t\tif (stencilReference > 1) {\n\t\t\t\n\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.DECR);\n\t\t\tgl.stencilFunc (gl.EQUAL, stencilReference, 0xFF);\n\t\t\tgl.colorMask (false, false, false, false);\n\t\t\t\n\t\t\tvar mask = maskObjects.pop ();\n\t\t\tmask.__renderGLMask (renderSession);\n\t\t\tstencilReference--;\n\t\t\t\n\t\t\tgl.stencilOp (gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\tgl.stencilFunc (gl.EQUAL, stencilReference, 0xFF);\n\t\t\tgl.colorMask (true, true, true, true);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tstencilReference = 0;\n\t\t\tgl.disable (gl.STENCIL_TEST);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function popObject (object:DisplayObject, handleScrollRect:Bool = true):Void {\n\t\t\n\t\tif (object.__mask != null) {\n\t\t\t\n\t\t\tpopMask ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (handleScrollRect && object.__scrollRect != null) {\n\t\t\t\n\t\t\tpopRect ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function popRect ():Void {\n\t\t\n\t\tif (numClipRects > 0) {\n\t\t\t\n\t\t\tnumClipRects--;\n\t\t\t\n\t\t\tif (numClipRects > 0) {\n\t\t\t\t\n\t\t\t\tscissorRect (clipRects[numClipRects - 1]);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tscissorRect ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function scissorRect (rect:Rectangle = null):Void {\n\t\t\n\t\tif (rect != null) {\n\t\t\t\n\t\t\tvar renderer:GLRenderer = cast renderSession.renderer;\n\t\t\t\n\t\t\tgl.enable (gl.SCISSOR_TEST);\n\t\t\t\n\t\t\tvar clipRect = tempRect;\n\t\t\trect.__transform (clipRect, renderer.displayMatrix);\n\t\t\t\n\t\t\tvar x = Math.floor (clipRect.x);\n\t\t\tvar y = Math.floor (renderer.height - clipRect.y - clipRect.height);\n\t\t\tvar width = Math.ceil (clipRect.width);\n\t\t\tvar height = Math.ceil (clipRect.height);\n\t\t\t\n\t\t\tif (width < 0) width = 0;\n\t\t\tif (height < 0) height = 0;\n\t\t\t\n\t\t\tgl.scissor (x, y, width, height);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tgl.disable (gl.SCISSOR_TEST);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\nclass GLMaskShader extends Shader {\n\t\n\t\n\t@:glFragmentSource(\n\t\t\n\t\t\"varying vec2 vTexCoord;\n\t\t\n\t\tuniform sampler2D uImage0;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 color = texture2D (uImage0, vTexCoord);\n\t\t\t\n\t\t\tif (color.a == 0.0) {\n\t\t\t\t\n\t\t\t\tdiscard;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl_FragColor = color;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\"\n\t\t\n\t)\n\t\n\t\n\t@:glVertexSource(\n\t\t\n\t\t\"attribute vec4 aPosition;\n\t\tattribute vec2 aTexCoord;\n\t\tvarying vec2 vTexCoord;\n\t\t\n\t\tuniform mat4 uMatrix;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvTexCoord = aTexCoord;\n\t\t\t\n\t\t\tgl_Position = uMatrix * aPosition;\n\t\t\t\n\t\t}\"\n\t\t\n\t)\n\t\n\t\n\tpublic function new (code:ByteArray = null) {\n\t\t\n\t\tsuper (code);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl;\n\n\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.opengl.GLFramebuffer;\nimport lime.math.Matrix4;\nimport openfl._internal.renderer.AbstractRenderer;\nimport openfl.display.BitmapData;\nimport openfl.display.Graphics;\nimport openfl.display.Stage;\nimport openfl.geom.Matrix;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.BitmapData)\n@:access(openfl.display.Graphics)\n@:access(openfl.display.Stage)\n@:access(openfl.display.Stage3D)\n@:access(openfl.display3D.Context3D)\n@:access(openfl.display3D.Program3D)\n@:access(openfl.geom.Matrix)\n\n\nclass GLRenderer extends AbstractRenderer {\n\t\n\t\n\tpublic var projection:Matrix4;\n\tpublic var projectionFlipped:Matrix4;\n\t\n\tpublic var defaultRenderTarget:BitmapData;\n\t\n\t// private var cacheObject:BitmapData;\n\tprivate var currentRenderTarget:BitmapData;\n\tprivate var displayHeight:Int;\n\tprivate var displayMatrix:Matrix;\n\tprivate var displayWidth:Int;\n\tprivate var flipped:Bool;\n\tprivate var gl:GLRenderContext;\n\tprivate var matrix:Matrix4;\n\tprivate var renderTargetA:BitmapData;\n\tprivate var renderTargetB:BitmapData;\n\tprivate var offsetX:Int;\n\tprivate var offsetY:Int;\n\tprivate var values:Array<Float>;\n\t\n\t\n\tpublic function new (stage:Stage, gl:GLRenderContext, ?defaultRenderTarget:BitmapData) {\n\t\t\n\t\tsuper (stage);\n\t\t\n\t\tthis.gl = gl;\n\t\tthis.defaultRenderTarget = defaultRenderTarget;\n\t\tthis.flipped = (defaultRenderTarget == null);\n\t\t\n\t\tif (Graphics.maxTextureWidth == null) {\n\t\t\t\n\t\t\tGraphics.maxTextureWidth = Graphics.maxTextureHeight = gl.getInteger (gl.MAX_TEXTURE_SIZE);\n\t\t\t\n\t\t}\n\t\t\n\t\tmatrix = new Matrix4 ();\n\t\tvalues = new Array ();\n\t\t\n\t\trenderSession = new RenderSession ();\n\t\trenderSession.clearRenderDirty = true;\n\t\trenderSession.gl = gl;\n\t\t//renderSession.roundPixels = true;\n\t\trenderSession.renderer = this;\n\t\trenderSession.blendModeManager = new GLBlendModeManager (gl);\n\t\trenderSession.filterManager = new GLFilterManager (this, renderSession);\n\t\trenderSession.shaderManager = new GLShaderManager (gl);\n\t\trenderSession.maskManager = new GLMaskManager (renderSession);\n\t\t\n\t\tif (stage.window != null) {\n\t\t\t\n\t\t\tif (stage.stage3Ds[0].context3D == null) {\n\t\t\t\t\n\t\t\t\tstage.stage3Ds[0].__createContext (stage, renderSession);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar width:Int = (defaultRenderTarget != null) ? defaultRenderTarget.width : Math.ceil (stage.window.width * stage.window.scale);\n\t\t\tvar height:Int = (defaultRenderTarget != null) ? defaultRenderTarget.height : Math.ceil (stage.window.height * stage.window.scale);\n\t\t\t\n\t\t\tresize (width, height);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function clear ():Void {\n\t\t\n\t\tif (stage.__transparent) {\n\t\t\t\n\t\t\tgl.clearColor (0, 0, 0, 0);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tgl.clearColor (stage.__colorSplit[0], stage.__colorSplit[1], stage.__colorSplit[2], 1);\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\n\t}\n\t\n\t\n\tpublic function getCacheObject ():Void {\n\t\t\n\t\t// gl.bindFramebuffer (gl.FRAMEBUFFER, cacheObject.__getFramebuffer (gl));\n\t\t// gl.viewport (0, 0, width, height);\n\t\t// gl.clearColor (0, 0, 0, 0);\n\t\t// gl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\n\t\t// flipped = false;\n\t\t\n\t}\n\t\n\t\n\tpublic function getMatrix (transform:Matrix):Array<Float> {\n\t\t\n\t\tvar _matrix = Matrix.__pool.get ();\n\t\t_matrix.copyFrom (transform);\n\t\t_matrix.concat (displayMatrix);\n\t\t\n\t\tif (renderSession.roundPixels) {\n\t\t\t\n\t\t\t_matrix.tx = Math.round (_matrix.tx);\n\t\t\t_matrix.ty = Math.round (_matrix.ty);\n\t\t\t\n\t\t}\n\t\t\n\t\tmatrix.identity ();\n\t\tmatrix[0] = _matrix.a;\n\t\tmatrix[1] = _matrix.b;\n\t\tmatrix[4] = _matrix.c;\n\t\tmatrix[5] = _matrix.d;\n\t\tmatrix[12] = _matrix.tx;\n\t\tmatrix[13] = _matrix.ty;\n\t\tmatrix.append (flipped ? projectionFlipped : projection);\n\t\t\n\t\tfor (i in 0...16) {\n\t\t\t\n\t\t\tvalues[i] = matrix[i];\n\t\t\t\n\t\t}\n\t\t\n\t\tMatrix.__pool.release (_matrix);\n\t\t\n\t\treturn values;\n\t\t\n\t}\n\t\n\t\n\tpublic function getRenderTarget (framebuffer:Bool):Void {\n\t\t\n\t\tif (framebuffer) {\n\t\t\t\n\t\t\tif (renderTargetA == null) {\n\t\t\t\t\n\t\t\t\trenderTargetA = BitmapData.fromTexture (stage.stage3Ds[0].context3D.createRectangleTexture (width, height, BGRA, true));\n\t\t\t\t\n\t\t\t\tgl.bindTexture (gl.TEXTURE_2D, renderTargetA.getTexture (gl));\n\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (renderTargetB == null) {\n\t\t\t\t\n\t\t\t\trenderTargetB = BitmapData.fromTexture (stage.stage3Ds[0].context3D.createRectangleTexture (width, height, BGRA, true));\n\t\t\t\t\n\t\t\t\tgl.bindTexture (gl.TEXTURE_2D, renderTargetB.getTexture (gl));\n\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (currentRenderTarget == renderTargetA) {\n\t\t\t\t\n\t\t\t\tcurrentRenderTarget = renderTargetB;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcurrentRenderTarget = renderTargetA;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, currentRenderTarget.__getFramebuffer (gl));\n\t\t\tgl.viewport (0, 0, width, height);\n\t\t\tgl.clearColor (0, 0, 0, 0);\n\t\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\t\n\t\t\tflipped = false;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tcurrentRenderTarget = defaultRenderTarget;\n\t\t\tvar frameBuffer:GLFramebuffer = (currentRenderTarget != null) ? currentRenderTarget.__getFramebuffer (gl) : null;\n\t\t\t\n\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, frameBuffer);\n\t\t\t\n\t\t\tflipped = (currentRenderTarget == null);\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function render ():Void {\n\t\t\n\t\tgl.viewport (offsetX, offsetY, displayWidth, displayHeight);\n\t\t\n\t\trenderSession.allowSmoothing = (stage.quality != LOW);\n\t\trenderSession.upscaled = (displayMatrix.a != 1 || displayMatrix.d != 1);\n\t\t\n\t\tstage.__renderGL (renderSession);\n\t\t\n\t\tif (offsetX > 0 || offsetY > 0) {\n\t\t\t\n\t\t\tgl.clearColor (0, 0, 0, 1);\n\t\t\tgl.enable (gl.SCISSOR_TEST);\n\t\t\t\n\t\t\tif (offsetX > 0) {\n\t\t\t\t\n\t\t\t\tgl.scissor (0, 0, offsetX, height);\n\t\t\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\t\t\n\t\t\t\tgl.scissor (offsetX + displayWidth, 0, width, height);\n\t\t\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (offsetY > 0) {\n\t\t\t\t\n\t\t\t\tgl.scissor (0, 0, width, offsetY);\n\t\t\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\t\t\n\t\t\t\tgl.scissor (0, offsetY + displayHeight, width, height);\n\t\t\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.disable (gl.SCISSOR_TEST);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function renderStage3D ():Void {\n\t\t\n\t\tfor (stage3D in stage.stage3Ds) {\n\t\t\t\n\t\t\tstage3D.__renderGL (stage, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function resize (width:Int, height:Int):Void {\n\t\t\n\t\tsuper.resize (width, height);\n\t\t\n\t\t// if (cacheObject == null || cacheObject.width != width || cacheObject.height != height) {\n\t\t\t\n\t\t// \tcacheObject = BitmapData.fromTexture (stage.stage3Ds[0].context3D.createRectangleTexture (width, height, BGRA, true));\n\t\t\t\n\t\t// \tgl.bindTexture (gl.TEXTURE_2D, cacheObject.getTexture (gl));\n\t\t// \tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t// \tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\n\t\t// }\n\t\t\n\t\tif (width > 0 && height > 0) {\n\t\t\t\n\t\t\tif (renderTargetA != null && (renderTargetA.width != width || renderTargetA.height != height)) {\n\t\t\t\t\n\t\t\t\trenderTargetA = BitmapData.fromTexture (stage.stage3Ds[0].context3D.createRectangleTexture (width, height, BGRA, true));\n\t\t\t\t\n\t\t\t\tgl.bindTexture (gl.TEXTURE_2D, renderTargetA.getTexture (gl));\n\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (renderTargetB != null && (renderTargetB.width != width || renderTargetB.height != height)) {\n\t\t\t\t\n\t\t\t\trenderTargetB = BitmapData.fromTexture (stage.stage3Ds[0].context3D.createRectangleTexture (width, height, BGRA, true));\n\t\t\t\t\n\t\t\t\tgl.bindTexture (gl.TEXTURE_2D, renderTargetB.getTexture (gl));\n\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tdisplayMatrix = (defaultRenderTarget == null) ? stage.__displayMatrix : new Matrix ();\n\t\t\n\t\tvar w = (defaultRenderTarget == null) ? stage.stageWidth : defaultRenderTarget.width;\n\t\tvar h = (defaultRenderTarget == null) ? stage.stageHeight : defaultRenderTarget.height;\n\t\t\n\t\toffsetX = Math.round (displayMatrix.__transformX (0, 0));\n\t\toffsetY = Math.round (displayMatrix.__transformY (0, 0));\n\t\tdisplayWidth = Math.round (displayMatrix.__transformX (w, 0) - offsetX);\n\t\tdisplayHeight = Math.round (displayMatrix.__transformY (0, h) - offsetY);\n\t\t\n\t\tprojection = Matrix4.createOrtho (offsetX, displayWidth + offsetX, offsetY, displayHeight + offsetY, -1000, 1000);\n\t\tprojectionFlipped = Matrix4.createOrtho (offsetX, displayWidth + offsetX, displayHeight + offsetY, offsetY, -1000, 1000);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl;\n\n\nimport lime.graphics.GLRenderContext;\nimport openfl._internal.renderer.AbstractShaderManager;\nimport openfl.display.Shader;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.Shader)\n\n\nclass GLShaderManager extends AbstractShaderManager {\n\t\n\t\n\tprivate var gl:GLRenderContext;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tthis.gl = gl;\n\t\t\n\t\tdefaultShader = new Shader ();\n\t\tinitShader (defaultShader);\n\t\t\n\t}\n\t\n\t\n\tpublic override function initShader (shader:Shader):Shader {\n\t\t\n\t\tif (shader != null) {\n\t\t\t\n\t\t\t// TODO: Change of GL context?\n\t\t\t\n\t\t\tif (shader.gl == null) {\n\t\t\t\t\n\t\t\t\tshader.gl = gl;\n\t\t\t\tshader.__init ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t//currentShader = shader;\n\t\t\treturn shader;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn defaultShader;\n\t\t\n\t}\n\t\n\t\n\tpublic override function setShader (shader:Shader):Void {\n\t\t\n\t\tif (currentShader == shader) return;\n\t\t\n\t\tif (currentShader != null) {\n\t\t\t\n\t\t\tcurrentShader.__disable ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (shader == null) {\n\t\t\t\n\t\t\tcurrentShader = null;\n\t\t\tgl.useProgram (null);\n\t\t\treturn;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tcurrentShader = shader;\n\t\t\tinitShader (shader);\n\t\t\tgl.useProgram (shader.glProgram);\n\t\t\tcurrentShader.__enable ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function updateShader (shader:Shader):Void {\n\t\t\n\t\tif (currentShader != null) {\n\t\t\t\n\t\t\tcurrentShader.__update ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.renderer.opengl;\n\n\nimport lime.utils.Float32Array;\nimport openfl._internal.renderer.cairo.CairoGraphics;\nimport openfl._internal.renderer.canvas.CanvasGraphics;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.DisplayObject;\nimport openfl.geom.Matrix;\n\n#if gl_stats\nimport openfl._internal.renderer.opengl.stats.GLStats;\nimport openfl._internal.renderer.opengl.stats.DrawCallContext;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.BitmapData)\n@:access(openfl.display.Graphics)\n@:access(openfl.filters.BitmapFilter)\n@:access(openfl.geom.ColorTransform)\n@:access(openfl.geom.Matrix)\n\n\nclass GLShape {\n\t\n\t\n\tpublic static inline function render (shape:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\tif (!shape.__renderable || shape.__worldAlpha <= 0) return;\n\t\t\n\t\tvar graphics = shape.__graphics;\n\t\t\n\t\tif (graphics != null) {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\tCanvasGraphics.render (graphics, renderSession, shape.__renderTransform);\n\t\t\t#elseif lime_cairo\n\t\t\tCairoGraphics.render (graphics, renderSession, shape.__renderTransform);\n\t\t\t#end\n\t\t\t\n\t\t\tvar bounds = graphics.__bounds;\n\t\t\t\n\t\t\tif (graphics.__bitmap != null && graphics.__visible) {\n\t\t\t\t\n\t\t\t\tvar renderer:GLRenderer = cast renderSession.renderer;\n\t\t\t\tvar gl = renderSession.gl;\n\t\t\t\t\n\t\t\t\trenderSession.blendModeManager.setBlendMode (shape.__worldBlendMode);\n\t\t\t\trenderSession.maskManager.pushObject (shape);\n\t\t\t\t\n\t\t\t\tvar shader = renderSession.filterManager.pushObject (shape);\n\t\t\t\t\n\t\t\t\t//var shader = renderSession.shaderManager.initShader (shape.shader);\n\t\t\t\trenderSession.shaderManager.setShader (shader);\n\t\t\t\t\n\t\t\t\tshader.data.uImage0.input = graphics.__bitmap;\n\t\t\t\tshader.data.uImage0.smoothing = renderSession.allowSmoothing;\n\t\t\t\tshader.data.uMatrix.value = renderer.getMatrix (graphics.__worldTransform);\n\t\t\t\t\n\t\t\t\tvar useColorTransform = !shape.__worldColorTransform.__isDefault ();\n\t\t\t\tif (shader.data.uColorTransform.value == null) shader.data.uColorTransform.value = [];\n\t\t\t\tshader.data.uColorTransform.value[0] = useColorTransform;\n\t\t\t\t\n\t\t\t\trenderSession.shaderManager.updateShader (shader);\n\t\t\t\t\n\t\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, graphics.__bitmap.getBuffer (gl, shape.__worldAlpha, shape.__worldColorTransform));\n\t\t\t\t\n\t\t\t\tgl.vertexAttribPointer (shader.data.aPosition.index, 3, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 0);\n\t\t\t\tgl.vertexAttribPointer (shader.data.aTexCoord.index, 2, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\tgl.vertexAttribPointer (shader.data.aAlpha.index, 1, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 5 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\t\n\t\t\t\tif (true || useColorTransform) {\n\t\t\t\t\t\n\t\t\t\t\tgl.vertexAttribPointer (shader.data.aColorMultipliers.index, 4, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 6 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\t\tgl.vertexAttribPointer (shader.data.aColorMultipliers.index + 1, 4, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 10 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\t\tgl.vertexAttribPointer (shader.data.aColorMultipliers.index + 2, 4, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 14 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\t\tgl.vertexAttribPointer (shader.data.aColorMultipliers.index + 3, 4, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 18 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\t\tgl.vertexAttribPointer (shader.data.aColorOffsets.index, 4, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 22 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl.drawArrays (gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\t\n\t\t\t\t#if gl_stats\n\t\t\t\t\tGLStats.incrementDrawCall (DrawCallContext.STAGE);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\trenderSession.filterManager.popObject (shape);\n\t\t\t\trenderSession.maskManager.popObject (shape);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static inline function renderMask (shape:DisplayObject, renderSession:RenderSession):Void {\n\t\t\n\t\tvar graphics = shape.__graphics;\n\t\t\n\t\tif (graphics != null) {\n\t\t\t\n\t\t\t// TODO: Support invisible shapes\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\tCanvasGraphics.render (graphics, renderSession, shape.__renderTransform);\n\t\t\t#elseif lime_cairo\n\t\t\tCairoGraphics.render (graphics, renderSession, shape.__renderTransform);\n\t\t\t#end\n\t\t\t\n\t\t\tvar bounds = graphics.__bounds;\n\t\t\t\n\t\t\tif (graphics.__bitmap != null) {\n\t\t\t\t\n\t\t\t\tvar renderer:GLRenderer = cast renderSession.renderer;\n\t\t\t\tvar gl = renderSession.gl;\n\t\t\t\t\n\t\t\t\tvar shader = GLMaskManager.maskShader;\n\t\t\t\t\n\t\t\t\t//var shader = renderSession.shaderManager.initShader (shape.shader);\n\t\t\t\trenderSession.shaderManager.setShader (shader);\n\t\t\t\t\n\t\t\t\tshader.data.uImage0.input = graphics.__bitmap;\n\t\t\t\tshader.data.uImage0.smoothing = renderSession.allowSmoothing;\n\t\t\t\tshader.data.uMatrix.value = renderer.getMatrix (graphics.__worldTransform);\n\t\t\t\t\n\t\t\t\trenderSession.shaderManager.updateShader (shader);\n\t\t\t\t\n\t\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, graphics.__bitmap.getBuffer (gl, shape.__worldAlpha, shape.__worldColorTransform));\n\t\t\t\t\n\t\t\t\tgl.vertexAttribPointer (shader.data.aPosition.index, 3, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 0);\n\t\t\t\tgl.vertexAttribPointer (shader.data.aTexCoord.index, 2, gl.FLOAT, false, 26 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\t\t\n\t\t\t\tgl.drawArrays (gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\t\n\t\t\t\t#if gl_stats\n\t\t\t\t\tGLStats.incrementDrawCall (DrawCallContext.STAGE);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D;\n\n\nimport haxe.Int64;\nimport lime.graphics.opengl.GL;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.errors.IllegalOperationError;\nimport openfl.utils.ByteArray;\nimport openfl.utils.Endian;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass AGALConverter {\n\t\n\t\n\tprivate static var limitedProfile:Null<Bool> #if !desktop = true #end;\n\t\n\t\n\tpublic static function prefixFromType (regType:RegisterType, programType:ProgramType):String {\n\t\t\n\t\tswitch (regType) {\n\t\t\t\n\t\t\tcase RegisterType.ATTRIBUTE: return \"va\";\n\t\t\tcase RegisterType.CONSTANT: return (programType == ProgramType.VERTEX) ? \"vc\" : \"fc\";\n\t\t\tcase RegisterType.TEMPORARY: return (programType == ProgramType.VERTEX) ? \"vt\" : \"ft\";\n\t\t\tcase RegisterType.OUTPUT: return \"output_\";\n\t\t\tcase RegisterType.VARYING: return \"v\";\n\t\t\tcase RegisterType.SAMPLER: return \"sampler\";\n\t\t\tdefault: throw new IllegalOperationError (\"Invalid data!\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function readUInt64 (byteArray:ByteArray):Int64 {\n\t\t\n\t\tvar low = byteArray.readInt ();\n\t\tvar high = byteArray.readInt ();\n\t\treturn Int64.make (high, low);\n\t\t\n\t}\n\t\n\t\n\tpublic static function convertToGLSL (agal:ByteArray, samplerState:Array<SamplerState>):String {\n\t\t\n\t\tagal.position = 0;\n\t\tagal.endian = Endian.LITTLE_ENDIAN;\n\t\t\n\t\tvar magic = agal.readByte () & 0xFF;\n\t\t\n\t\tif (magic == 0xB0) {\n\t\t\t\n\t\t\t// use embedded GLSL shader instead\n\t\t\treturn agal.readUTF ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (magic != 0xA0) {\n\t\t\t\n\t\t\tthrow new IllegalOperationError (\"Magic value must be 0xA0, may not be AGAL\");\n\t\t\t\n\t\t}\n\t\t\n\t\tvar version = agal.readInt ();\n\t\t\n\t\tif (version != 1) {\n\t\t\t\n\t\t\tthrow new IllegalOperationError (\"Version must be 1\");\n\t\t\t\n\t\t}\n\t\t\n\t\tvar shaderTypeID = agal.readByte() & 0xFF;\n\t\t\n\t\tif (shaderTypeID != 0xA1) {\n\t\t\t\n\t\t\tthrow new IllegalOperationError (\"Shader type ID must be 0xA1\");\n\t\t\t\n\t\t}\n\t\t\n\t\tvar programType = (agal.readByte() & 0xFF == 0) ? ProgramType.VERTEX : ProgramType.FRAGMENT;\n\t\t\n\t\tvar map = new RegisterMap ();\n\t\tvar sb = new StringBuf ();\n\t\t\n\t\twhile (agal.position < agal.length) {\n\t\t\t\n\t\t\t// fetch instruction info\n\t\t\tvar opcode = agal.readInt ();\n\t\t\tvar dest = agal.readUnsignedInt ();\n\t\t\tvar source1 = readUInt64 (agal);\n\t\t\tvar source2 = readUInt64 (agal);\n\t\t\t\n\t\t\t// parse registers\n\t\t\tvar dr = DestRegister.parse (dest, programType);\n\t\t\tvar sr1 = SourceRegister.parse (source1, programType, dr.mask);\n\t\t\tvar sr2 = SourceRegister.parse (source2, programType, dr.mask);\n\t\t\t\n\t\t\t// switch on opcode and emit GLSL\n\t\t\tsb.add (\"\\t\");\n\t\t\t\n\t\t\tswitch (opcode) {\n\t\t\t\t\n\t\t\t\tcase 0x00: // mov\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = \" + sr1.toGLSL () + \"; // mov\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x01: // add\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = \" + sr1.toGLSL () + \" + \" + sr2.toGLSL () + \"; // add\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x02: // sub\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = \" + sr1.toGLSL () + \" - \" + sr2.toGLSL () + \"; // sub\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x03: // mul\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = \" + sr1.toGLSL () + \" * \" + sr2.toGLSL () + \"; // mul\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x04: // div\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = \" + sr1.toGLSL () + \" / \" + sr2.toGLSL () + \"; // div\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x05: // rcp\n\t\t\t\t\t\n\t\t\t\t\tvar sr = sr1.toGLSL ();\n\t\t\t\t\t\n\t\t\t\t\tif (sr.indexOf (\".\") > -1) { // swizzle\n\t\t\t\t\t\n\t\t\t\t\t\tsb.add (dr.toGLSL () + \" = 1.0 / \" + sr1.toGLSL () + \"; // rcp\");\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsb.add (dr.toGLSL () + \" = vec4(1) / \" + sr1.toGLSL () + \"; // rcp\");\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x06: // min\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = min(\" + sr1.toGLSL () + \", \" + sr2.toGLSL () + \"); // min\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x07: // max\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = max(\" + sr1.toGLSL () + \", \" + sr2.toGLSL () + \"); // max\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x08: // frc\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = fract(\" + sr1.toGLSL () + \"); // frc\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x09: // sqrt\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = sqrt(\" + sr1.toGLSL () + \"); // sqrt\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x0A: // rsq\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = inversesqrt(\" + sr1.toGLSL () + \"); // rsq\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x0B: // pow\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = pow(\" + sr1.toGLSL () + \", \" + sr2.toGLSL () + \"); // pow\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x0C: // log\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = log2(\" + sr1.toGLSL () + \"); // log\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x0D: // exp\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = exp2(\" + sr1.toGLSL () + \"); // exp\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x0E: // normalize\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = normalize(\" + sr1.toGLSL () + \"); // normalize\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x0F: // sin\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = sin(\" + sr1.toGLSL () + \"); // sin\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x10: // cos\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = cos(\" + sr1.toGLSL () + \"); // cos\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x11: // crs\n\t\t\t\t\t\n\t\t\t\t\tsr1.sourceMask = sr2.sourceMask = 7; // adjust source mask for xyz input to dot product\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = cross(vec3(\" + sr1.toGLSL () + \"), vec3(\" + sr2.toGLSL () + \")); // crs\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x12: // dp3\n\t\t\t\t\t\n\t\t\t\t\tsr1.sourceMask = sr2.sourceMask = 7; // adjust source mask for xyz input to dot product\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = vec4(dot(vec3(\" + sr1.toGLSL () + \"), vec3(\" + sr2.toGLSL () + \")))\" + dr.getWriteMask () + \"; // dp3\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x13: // dp4\n\t\t\t\t\t\n\t\t\t\t\tsr1.sourceMask = sr2.sourceMask = 0xF; // adjust source mask for xyzw input to dot product\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = vec4(dot(vec4(\" + sr1.toGLSL () + \"), vec4(\" + sr2.toGLSL () + \")))\" + dr.getWriteMask () + \"; // dp4\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x14: // abs\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = abs(\" + sr1.toGLSL () + \"); // abs\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x15: // neg\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = -\" + sr1.toGLSL () + \"; // neg\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x16: // saturate\n\t\t\t\t\t\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = clamp(\" + sr1.toGLSL () + \", 0.0, 1.0); // saturate\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x17: // m33\n\t\t\t\t\t\n\t\t\t\t\t//destination.x = (source1.x * source2[0].x) + (source1.y * source2[0].y) + (source1.z * source2[0].z)\n\t\t\t\t\t//destination.y = (source1.x * source2[1].x) + (source1.y * source2[1].y) + (source1.z * source2[1].z)\n\t\t\t\t\t//destination.z = (source1.x * source2[2].x) + (source1.y * source2[2].y) + (source1.z * source2[2].z)\n\t\t\t\t\t\n\t\t\t\t\tvar existingUsage = map.getRegisterUsage (sr2);\n\t\t\t\t\t\n\t\t\t\t\tif (existingUsage != RegisterUsage.VECTOR_4 && existingUsage != RegisterUsage.VECTOR_4_ARRAY) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsb.add (dr.toGLSL () + \" = \" + sr1.toGLSL () + \" * mat3(\" + sr2.toGLSL (false) + \"); // m33\");\n\t\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.MATRIX_4_4); // 33?\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// compose the matrix multiply from dot products\n\t\t\t\t\t\tsr1.sourceMask = sr2.sourceMask = 7;\n\t\t\t\t\t\tsb.add (dr.toGLSL () + \" = vec3(\" +\n\t\t\t\t\t\t\t\"dot(\" + sr1.toGLSL (true) + \",\" + sr2.toGLSL (true, 0) + \"), \" +\n\t\t\t\t\t\t\t\"dot(\" + sr1.toGLSL (true) + \",\" + sr2.toGLSL (true, 1) + \"),\" +\n\t\t\t\t\t\t\t\"dot(\" + sr1.toGLSL (true) + \",\" + sr2.toGLSL (true, 2) + \")); // m33\");\n\t\t\t\t\t\t\n\t\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4, 0);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4, 1);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4, 2);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase 0x18: // m44\n\t\t\t\t\t\n\t\t\t\t\t//multiply matrix 4x4\n\t\t\t\t\t//destination.x = (source1.x * source2[0].x) + (source1.y * source2[0].y) + (source1.z * source2[0].z)+ (source1.w * source2[0].w)\n\t\t\t\t\t//destination.y = (source1.x * source2[1].x) + (source1.y * source2[1].y) + (source1.z * source2[1].z)+ (source1.w * source2[1].w)\n\t\t\t\t\t//destination.z = (source1.x * source2[2].x) + (source1.y * source2[2].y) + (source1.z * source2[2].z)+ (source1.w * source2[2].w)\n\t\t\t\t\t//destination.w = (source1.x * source2[3].x) + (source1.y * source2[3].y) + (source1.z * source2[3].z)+ (source1.w * source2[3].w)\n\t\t\t\t\t\n\t\t\t\t\tvar existingUsage = map.getRegisterUsage (sr2);\n\t\t\t\t\t\n\t\t\t\t\tif (existingUsage != RegisterUsage.VECTOR_4 && existingUsage != RegisterUsage.VECTOR_4_ARRAY) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsb.add (dr.toGLSL () + \" = \" + sr1.toGLSL () + \" * \" + sr2.toGLSL (false) + \"; // m44\");\n\t\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.MATRIX_4_4);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// compose the matrix multiply from dot products\n\t\t\t\t\t\tsr1.sourceMask = sr2.sourceMask = 0xF;\n\t\t\t\t\t\tsb.add (dr.toGLSL () + \" = vec4(\" +\n\t\t\t\t\t\t\t\"dot(\" + sr1.toGLSL (true) + \",\" + sr2.toGLSL (true, 0) + \"), \" +\n\t\t\t\t\t\t\t\"dot(\" + sr1.toGLSL (true) + \",\" + sr2.toGLSL (true, 1) + \"), \" +\n\t\t\t\t\t\t\t\"dot(\" + sr1.toGLSL (true) + \",\" + sr2.toGLSL (true, 2) + \"), \" +\n\t\t\t\t\t\t\t\"dot(\" + sr1.toGLSL (true) + \",\" + sr2.toGLSL (true, 3) + \")); // m44\");\n\t\t\t\t\t\t\n\t\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4, 0);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4, 1);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4, 2);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4, 3);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase 0x19: // m34\n\t\t\t\t\t\n\t\t\t\t\t//m34 0x19 multiply matrix 3x4\n\t\t\t\t\t//destination.x = (source1.x * source2[0].x) + (source1.y * source2[0].y) + (source1.z * source2[0].z)+ (source1.w * source2[0].w)\n\t\t\t\t\t//destination.y = (source1.x * source2[1].x) + (source1.y * source2[1].y) + (source1.z * source2[1].z)+ (source1.w * source2[1].w)\n\t\t\t\t\t//destination.z = (source1.x * source2[2].x) + (source1.y * source2[2].y) + (source1.z * source2[2].z)+ (source1.w * source2[2].w)\n\t\t\t\t\t\n\t\t\t\t\t// prevent w from being written for a m34\n\t\t\t\t\tdr.mask &= 7;\n\t\t\t\t\t\n\t\t\t\t\tvar existingUsage = map.getRegisterUsage (sr2);\n\t\t\t\t\t\n\t\t\t\t\tif (existingUsage != RegisterUsage.VECTOR_4 && existingUsage != RegisterUsage.VECTOR_4_ARRAY) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsb.add (dr.toGLSL () + \" = \" + sr1.toGLSL () + \" * \" + sr2.toGLSL (false) + \"; // m34\");\n\t\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.MATRIX_4_4);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// compose the matrix multiply from dot products\n\t\t\t\t\t\tsr1.sourceMask = sr2.sourceMask = 0xF;\n\t\t\t\t\t\tsb.add (dr.toGLSL () + \" = vec3(\" +\n\t\t\t\t\t\t\t\"dot(\" + sr1.toGLSL (true) + \",\" + sr2.toGLSL (true, 0) + \"), \" +\n\t\t\t\t\t\t\t\"dot(\" + sr1.toGLSL (true) + \",\" + sr2.toGLSL (true, 1) + \"),\" +\n\t\t\t\t\t\t\t\"dot(\" + sr1.toGLSL (true) + \",\" + sr2.toGLSL (true, 2) + \")); // m34\");\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4, 0);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4, 1);\n\t\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4, 2);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase 0x27: // kill /  discard\n\t\t\t\t\t\n\t\t\t\t\tif (true) { //(openfl.display.Stage3D.allowDiscard) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// ensure we have a full source mask since there is no destination register\n\t\t\t\t\t\tsr1.sourceMask = 0xF;\n\t\t\t\t\t\tsb.add (\"if (any(lessThan(\" + sr1.toGLSL () + \", vec4(0)))) discard;\");\n\t\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase 0x28: // tex\n\t\t\t\t\t\n\t\t\t\t\tvar sampler = SamplerRegister.parse (source2, programType);\n\t\t\t\t\t\n\t\t\t\t\tswitch (sampler.d) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 0: // 2d texture\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsr1.sourceMask = 0x3;\n\t\t\t\t\t\t\tmap.addSaR (sampler, RegisterUsage.SAMPLER_2D);\n\t\t\t\t\t\t\tsb.add (dr.toGLSL () + \" = texture2D(\" + sampler.toGLSL () + \", \" + sr1.toGLSL () + \"); // tex\");\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 1: // cube texture\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsr1.sourceMask = 0x7;\n\t\t\t\t\t\t\tsb.add (dr.toGLSL () + \" = textureCube(\" + sampler.toGLSL () + \", \" + sr1.toGLSL () + \"); // tex\");\n\t\t\t\t\t\t\tmap.addSaR (sampler, RegisterUsage.SAMPLER_CUBE);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//sb.AppendFormat(\"{0} = vec4(0,1,0,1);\", dr.toGLSL () );\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\t\n\t\t\t\t\tif (samplerState != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// add sampler state to output list for caller\n\t\t\t\t\t\tsamplerState[sampler.n] = sampler.toSamplerState ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase 0x29: // sge\n\t\t\t\t\t\n\t\t\t\t\tsr1.sourceMask = sr2.sourceMask = 0xF; // sge only supports vec4\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = vec4(greaterThanEqual(\" + sr1.toGLSL () + \", \" + sr2.toGLSL () + \"))\" + dr.getWriteMask () + \"; // ste\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x2A: // slt\n\t\t\t\t\t\n\t\t\t\t\tsr1.sourceMask = sr2.sourceMask = 0xF; // slt only supports vec4\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = vec4(lessThan(\" + sr1.toGLSL () + \", \" + sr2.toGLSL () + \"))\" + dr.getWriteMask () + \"; // slt\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x2C: // seq\n\t\t\t\t\t\n\t\t\t\t\tsr1.sourceMask = sr2.sourceMask = 0xF; // seq only supports vec4\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = vec4(equal(\" + sr1.toGLSL () + \", \" + sr2.toGLSL () + \"))\" + dr.getWriteMask () + \"; // seq\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tcase 0x2D: // sne\n\t\t\t\t\t\n\t\t\t\t\tsr1.sourceMask = sr2.sourceMask = 0xF; // sne only supports vec4\n\t\t\t\t\tsb.add (dr.toGLSL () + \" = vec4(notEqual(\" + sr1.toGLSL () + \", \" + sr2.toGLSL () + \"))\" + dr.getWriteMask () + \"; // sne\");\n\t\t\t\t\tmap.addDR (dr, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr1, RegisterUsage.VECTOR_4);\n\t\t\t\t\tmap.addSR (sr2, RegisterUsage.VECTOR_4);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\t//sb.AppendFormat (\"unsupported opcode\" + opcode);\n\t\t\t\t\tthrow new IllegalOperationError (\"Opcode \" + opcode);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsb.add (\"\\n\");\n\t\t\t\n\t\t}\n\t\t\n\t\tif (limitedProfile == null) {\n\t\t\t\n\t\t\tvar version:String = GL.getParameter (GL.VERSION);\n\t\t\tlimitedProfile = (version.indexOf (\"OpenGL ES\") > -1 || version.indexOf (\"WebGL\") > -1);\n\t\t\t\n\t\t}\n\t\t\n\t\t// combine parts into final progam\n\t\tvar glsl = new StringBuf ();\n\t\tglsl.add (\"// AGAL \" + ((programType == ProgramType.VERTEX) ? \"vertex\" : \"fragment\") + \" shader\\n\");\n\t\t\n\t\tif (limitedProfile) {\n\t\t\t\n\t\t\tglsl.add (\"#version 100\\n\");\n\t\t\t\n\t\t\t// Required to set the default precision of vectors\n\t\t\tglsl.add (\"precision highp float;\\n\");\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tglsl.add (\"#version 120\\n\");\n\t\t\t\n\t\t}\n\t\t\n\t\tglsl.add (map.toGLSL (false));\n\t\t\n\t\tif (programType == ProgramType.VERTEX) {\n\t\t\t\n\t\t\t// this is needed for flipping render textures upside down\n\t\t\tglsl.add (\"uniform vec4 vcPositionScale;\\n\");\n\t\t\t\n\t\t}\n\t\t\n\t\tglsl.add (\"void main() {\\n\");\n\t\tglsl.add (map.toGLSL (true));\n\t\tglsl.add (sb.toString ());\n\t\t\n\t\tif (programType == ProgramType.VERTEX) {\n\t\t\t\n\t\t\t// this is needed for flipping render textures upside down\n\t\t\tglsl.add (\"\\tgl_Position *= vcPositionScale;\\n\");\n\t\t\t\n\t\t}\n\t\t\n\t\tglsl.add (\"}\\n\");\n\t\t\n\t\t// System.Console.WriteLine(glsl);\n\t\treturn glsl.toString ();\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nprivate class DestRegister {\n\t\n\t\n\tpublic var mask:Int;\n\tpublic var n:Int;\n\tpublic var programType:ProgramType;\n\tpublic var type:RegisterType;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function getWriteMask ():String {\n\t\t\n\t\tvar str:String = \".\";\n\t\tif ((mask & 1) != 0) str += \"x\";\n\t\tif ((mask & 2) != 0) str += \"y\";\n\t\tif ((mask & 4) != 0) str += \"z\";\n\t\tif ((mask & 8) != 0) str += \"w\";\n\t\treturn str;\n\t\t\n\t}\n\t\n\t\n\tpublic static function parse (v:UInt, programType:ProgramType):DestRegister {\n\t\t\n\t\tvar dr = new DestRegister ();\n\t\tdr.programType = programType;\n\t\tdr.type = cast ((v >> 24) & 0xF);\n\t\tdr.mask = ((v >> 16) & 0xF);\n\t\tdr.n = (v & 0xFFFF);\n\t\treturn dr;\n\t\t\n\t}\n\t\n\t\n\tpublic function toGLSL (useMask:Bool = true):String {\n\t\t\n\t\tvar str:String;\n\t\t\n\t\tif (type == RegisterType.OUTPUT) {\n\t\t\t\n\t\t\tstr = programType == ProgramType.VERTEX ? \"gl_Position\" : \"gl_FragColor\";\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tstr = AGALConverter.prefixFromType (type, programType) + n;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (useMask && mask != 0xF) {\n\t\t\t\n\t\t\tstr += getWriteMask ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn str;\n\t\t\n\t}\n\t\n\t\n}\n\n\nprivate enum ProgramType {\n\t\n\tVERTEX;\n\tFRAGMENT;\n\t\n}\n\n\nclass RegisterMap {\n\t\n\t\n\tprivate var mEntries = new Array<RegisterMapEntry> ();\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t//Stub.\n\t\t\n\t}\n\t\n\t\n\tpublic function add (type:RegisterType, name:String, number:Int, usage:RegisterUsage):Void {\n\t\t\n\t\tfor (entry in mEntries) {\n\t\t\t\n\t\t\tif (entry.type == type && entry.name == name && entry.number == number) {\n\t\t\t\t\n\t\t\t\tif (entry.usage != usage) {\n\t\t\t\t\t\n\t\t\t\t\tthrow new IllegalOperationError (\"Cannot use register in multiple ways yet (mat4/vec4)\");\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar entry = new RegisterMapEntry ();\n\t\tentry.type = type;\n\t\tentry.name = name;\n\t\tentry.number = number;\n\t\tentry.usage = usage;\n\t\tmEntries.push (entry);\n\t\t\n\t}\n\t\n\t\n\tpublic function addDR (dr:DestRegister, usage:RegisterUsage):Void {\n\t\t\n\t\tadd (dr.type, dr.toGLSL (false), dr.n, usage);\n\t\t\n\t}\n\t\n\t\n\tpublic function addSaR (sr:SamplerRegister, usage:RegisterUsage):Void {\n\t\t\n\t\tadd (sr.type, sr.toGLSL (), sr.n, usage);\n\t\t\n\t}\n\t\n\t\n\tpublic function addSR (sr:SourceRegister, usage:RegisterUsage, offset:Int = 0):Void {\n\t\t\n\t\tif (sr.d != 0) {\n\t\t\t\n\t\t\tadd (sr.itype, AGALConverter.prefixFromType (sr.itype, sr.programType) + sr.n, sr.n, RegisterUsage.VECTOR_4);\n\t\t\tadd (sr.type, AGALConverter.prefixFromType (sr.type, sr.programType) + sr.o, sr.o, RegisterUsage.VECTOR_4_ARRAY);\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tadd (sr.type, sr.toGLSL (false, offset), sr.n + offset, usage);\n\t\t\n\t}\n\t\n\t\n\tpublic function getRegisterUsage (sr:SourceRegister):RegisterUsage {\n\t\t\n\t\tif (sr.d != 0) {\n\t\t\t\n\t\t\treturn RegisterUsage.VECTOR_4_ARRAY;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn getUsage (sr.type, sr.toGLSL (false), sr.n);\n\t\t\n\t}\n\t\n\t\n\tpublic function getUsage (type:RegisterType, name:String, number:Int):RegisterUsage {\n\t\t\n\t\tfor (entry in mEntries) {\n\t\t\t\n\t\t\tif (entry.type == type && entry.name == name && entry.number == number) {\n\t\t\t\t\n\t\t\t\treturn entry.usage;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn RegisterUsage.UNUSED;\n\t\t\n\t}\n\t\n\t\n\tpublic function toGLSL (tempRegistersOnly:Bool):String {\n\t\t\n\t\tmEntries.sort (function (a:RegisterMapEntry, b:RegisterMapEntry):Int {\n\t\t\t\n\t\t\treturn a.number - b.number;\n\t\t\t\n\t\t});\n\t\t\n\t\tvar arrayCount = new Map<RegisterMapEntry, Int> ();\n\t\tvar entry:RegisterMapEntry;\n\t\t\n\t\tfor (i in 0...mEntries.length) {\n\t\t\t\n\t\t\tentry = mEntries[i];\n\t\t\t\n\t\t\tif (entry.usage == RegisterUsage.VECTOR_4_ARRAY) {\n\t\t\t\t\n\t\t\t\t// find how many registers based on the next entry.\n\t\t\t\tif (i < mEntries.length - 1) {\n\t\t\t\t\t\n\t\t\t\t\tarrayCount[entry] = mEntries[i + 1].number - entry.number;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tarrayCount[entry] = 128;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tmEntries.sort (function (a:RegisterMapEntry, b:RegisterMapEntry):Int {\n\t\t\t\n\t\t\treturn cast (a.type, Int) - cast (b.type, Int);\n\t\t\t\n\t\t});\n\t\t\n\t\tvar sb = new StringBuf ();\n\t\t\n\t\tfor (i in 0...mEntries.length) {\n\t\t\t\n\t\t\tentry = mEntries [i];\n\t\t\t\n\t\t\t// only emit temporary registers based on Boolean passed in\n\t\t\t// this is so temp registers can be grouped in the main() block\n\t\t\tif ((tempRegistersOnly && entry.type != RegisterType.TEMPORARY) || (!tempRegistersOnly && entry.type == RegisterType.TEMPORARY)) {\n\t\t\t\t\n\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// dont emit output registers\n\t\t\tif (entry.type == RegisterType.OUTPUT) {\n\t\t\t\t\n\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (entry.type) {\n\t\t\t\t\n\t\t\t\tcase RegisterType.ATTRIBUTE:\n\t\t\t\t\t\n\t\t\t\t\t// sb.AppendFormat(\"layout(location = {0}) \", entry.number);\n\t\t\t\t\tsb.add (\"attribute \");\n\t\t\t\t\n\t\t\t\tcase RegisterType.CONSTANT:\n\t\t\t\t\t\n\t\t\t\t\t//sb.AppendFormat(\"layout(location = {0}) \", entry.number);\n\t\t\t\t\tsb.add (\"uniform \");\n\t\t\t\t\n\t\t\t\tcase RegisterType.TEMPORARY:\n\t\t\t\t\t\n\t\t\t\t\tsb.add (\"\\t\");\n\t\t\t\t\n\t\t\t\tcase RegisterType.OUTPUT:\n\t\t\t\t\n\t\t\t\tcase RegisterType.VARYING:\n\t\t\t\t\t\n\t\t\t\t\tsb.add (\"varying \");\n\t\t\t\t\n\t\t\t\tcase RegisterType.SAMPLER:\n\t\t\t\t\t\n\t\t\t\t\tsb.add (\"uniform \");\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\tthrow new IllegalOperationError ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (entry.usage) {\n\t\t\t\t\n\t\t\t\tcase RegisterUsage.VECTOR_4:\n\t\t\t\t\t\n\t\t\t\t\tsb.add (\"vec4 \");\n\t\t\t\t\n\t\t\t\tcase RegisterUsage.VECTOR_4_ARRAY:\n\t\t\t\t\t\n\t\t\t\t\tsb.add (\"vec4 \");\n\t\t\t\t\n\t\t\t\tcase RegisterUsage.MATRIX_4_4:\n\t\t\t\t\t\n\t\t\t\t\tsb.add (\"mat4 \");\n\t\t\t\t\n\t\t\t\tcase RegisterUsage.SAMPLER_2D:\n\t\t\t\t\t\n\t\t\t\t\tsb.add (\"sampler2D \");\n\t\t\t\t\n\t\t\t\tcase RegisterUsage.SAMPLER_CUBE:\n\t\t\t\t\t\n\t\t\t\t\tsb.add (\"samplerCube \");\n\t\t\t\t\n\t\t\t\tcase RegisterUsage.UNUSED:\n\t\t\t\t\t\n\t\t\t\t\ttrace (\"Missing switch patten: RegisterUsage.UNUSED\");\n\t\t\t\t\n\t\t\t\tcase RegisterUsage.SAMPLER_2D_ALPHA:\n\t\t\t\t\t\n\t\t\t\t\ttrace (\"Missing switch patten: RegisterUsage.SAMPLER_2D_ALPHA\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (entry.usage == RegisterUsage.SAMPLER_2D_ALPHA) {\n\t\t\t\t\n\t\t\t\tsb.add (\"sampler2D \");\n\t\t\t\tsb.add (entry.name);\n\t\t\t\tsb.add (\";\\n\");\n\t\t\t\t\n\t\t\t\tsb.add (\"uniform \");\n\t\t\t\tsb.add (\"sampler2D \");\n\t\t\t\tsb.add (entry.name + \"_alpha\");\n\t\t\t\tsb.add (\";\\n\");\n\t\t\t\t\n\t\t\t} else if (entry.usage == RegisterUsage.VECTOR_4_ARRAY) {\n\t\t\t\t\n\t\t\t\tsb.add (entry.name + \"[\" + arrayCount[entry] + \"]\"); // this is an array of \"count\" elements.\n\t\t\t\tsb.add (\";\\n\");\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tsb.add (entry.name);\n\t\t\t\tsb.add (\";\\n\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn sb.toString ();\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nprivate class RegisterMapEntry {\n\t\n\t\n\tpublic var name:String;\n\tpublic var number:Int;\n\tpublic var type:RegisterType;\n\tpublic var usage:RegisterUsage;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:enum abstract RegisterType(Int) {\n\t\n\tvar ATTRIBUTE = 0;\n\tvar CONSTANT = 1;\n\tvar TEMPORARY = 2;\n\tvar OUTPUT = 3;\n\tvar VARYING = 4;\n\tvar SAMPLER = 5;\n\t\n}\n\n\nprivate enum RegisterUsage {\n\t\n\tUNUSED;\n\tVECTOR_4;\n\tMATRIX_4_4;\n\tSAMPLER_2D;\n\tSAMPLER_2D_ALPHA;\n\tSAMPLER_CUBE;\n\tVECTOR_4_ARRAY;\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nprivate class SamplerRegister {\n\t\n\t\n\tpublic var b:Int; // lod bias\n\tpublic var d:Int; // dimension 0=2d 1=cube\n\tpublic var f:Int; // Filter (0=nearest,1=linear) (4 bits)\n\tpublic var m:Int; // Mipmap (0=disable,1=nearest, 2=linear)\n\tpublic var n:Int; // number\n\tpublic var programType:ProgramType;\n\tpublic var s:Int; // special flags bit\n\tpublic var t:Int; // texture format (0=none, dxt1=1, dxt5=2)\n\tpublic var type:RegisterType;\n\tpublic var w:Int; // wrap (0=clamp 1=repeat)\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic static function parse (v:Int64, programType:ProgramType):SamplerRegister {\n\t\t\n\t\tvar sr = new SamplerRegister ();\n\t\tsr.programType = programType;\n\t\tsr.f = ((v >> 60) & 0xF).low; // filter\n\t\tsr.m = ((v >> 56) & 0xF).low; // mipmap\n\t\tsr.w = ((v >> 52) & 0xF).low; // wrap\n\t\tsr.s = ((v >> 48) & 0xF).low; // special\n\t\tsr.d = ((v >> 44) & 0xF).low; // dimension\n\t\tsr.t = ((v >> 40) & 0xF).low; // texture\n\t\tsr.type = cast ((v >> 32) & 0xF).low; // type\n\t\tsr.b = ((v >> 16) & 0xFF).low; // TODO: should this be .low?\n\t\tsr.n = (v & 0xFFFF).low; // number\n\t\treturn sr;\n\t\t\n\t}\n\t\n\t\n\tpublic function toGLSL ():String {\n\t\t\n\t\tvar str = AGALConverter.prefixFromType (type, programType) + n;\n\t\treturn str;\n\t\t\n\t}\n\t\n\t\n\tpublic function toSamplerState ():SamplerState {\n\t\t\n\t\tvar magFilter:Int /*TextureMagFilter*/ = 0;\n\t\tvar minFilter:Int /*TextureMinFilter*/ = 0;\n\t\tvar wrapModeS:Int /*TextureWrapMode*/ = 0;\n\t\tvar wrapModeT:Int /*TextureWrapMode*/ = 0;\n\t\t\n\t\t// translate mag filter\n\t\tswitch (f) {\n\t\t\t\n\t\t\tcase 0: magFilter = GL.NEAREST; //TextureMagFilter.Nearest;\n\t\t\tcase 1: magFilter = GL.LINEAR; //TextureMagFilter.Linear;\n\t\t\tdefault: throw new IllegalOperationError(); //NotImplementedException();\n\t\t\t\n\t\t}\n\t\t\n\t\t// translate min filter\n\t\tswitch (m) {\n\t\t\t\n\t\t\t// disable\n\t\t\tcase 0:\n\t\t\t\t\n\t\t\t\tminFilter = (f != 0) ? GL.LINEAR : GL.NEAREST;\n\t\t\t\n\t\t\t// nearest\n\t\t\tcase 1:\n\t\t\t\t\n\t\t\t\tminFilter = (f != 0) ? GL.LINEAR_MIPMAP_NEAREST : GL.NEAREST_MIPMAP_NEAREST;\n\t\t\t\n\t\t\t// linear\n\t\t\tcase 2:\n\t\t\t\t\n\t\t\t\tminFilter = (f != 0) ? GL.LINEAR_MIPMAP_LINEAR : GL.NEAREST_MIPMAP_LINEAR;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tthrow new IllegalOperationError ();\n\t\t\t\n\t\t}\n\t\t\n\t\t// translate wrapping mode\n\t\tswitch (w) {\n\t\t\t\n\t\t\tcase 0:\n\t\t\t\t\n\t\t\t\twrapModeS = GL.CLAMP_TO_EDGE;\n\t\t\t\twrapModeT = GL.CLAMP_TO_EDGE;\n\t\t\t\n\t\t\tcase 1:\n\t\t\t\t\n\t\t\t\twrapModeS = GL.REPEAT;\n\t\t\t\twrapModeT = GL.REPEAT;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tthrow new IllegalOperationError ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar ignoreSampler = (s & 4 == 4);\n\t\tvar centroid = (s & 1 == 1);\n\t\t\n\t\t// translate lod bias, sign extend and /8\n\t\tvar lodBias:Float = ((b << 24) >> 24) / 8.0;\n\t\tvar maxAniso:Float = 0.0;\n\t\t\n\t\treturn new SamplerState (minFilter, magFilter, wrapModeS, wrapModeT, lodBias, maxAniso, ignoreSampler, centroid);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nprivate class SourceRegister {\n\t\n\t\n\tpublic var d:Int;\n\tpublic var itype:RegisterType;\n\tpublic var n:Int;\n\tpublic var o:Int;\n\tpublic var programType:ProgramType;\n\tpublic var q:Int;\n\tpublic var s:Int;\n\tpublic var sourceMask:Int;\n\tpublic var type:RegisterType;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic static function parse (v:Int64, programType:ProgramType, sourceMask:Int):SourceRegister {\n\t\t\n\t\tvar sr = new SourceRegister ();\n\t\tsr.programType = programType;\n\t\tsr.d = ((v >> 63) & 1).low; // Direct=0/Indirect=1 for direct Q and I are ignored, 1bit\n\t\tsr.q = ((v >> 48) & 0x3).low; // index register component select\n\t\tsr.itype = cast ((v >> 40) & 0xF).low; // index register type\n\t\tsr.type = cast ((v >> 32) & 0xF).low; // type\n\t\tsr.s = ((v >> 24) & 0xFF).low; // swizzle\n\t\tsr.o = ((v >> 16) & 0xFF).low; // indirect offset\n\t\tsr.n = (v & 0xFFFF).low; // number\n\t\tsr.sourceMask = sourceMask;\n\t\treturn sr;\n\t\t\n\t}\n\t\n\t\n\tpublic function toGLSL (emitSwizzle:Bool = true, offset:Int = 0):String {\n\t\t\n\t\tif (type == RegisterType.OUTPUT) {\n\t\t\t\n\t\t\treturn programType == ProgramType.VERTEX ? \"gl_Position\" : \"gl_FragColor\";\n\t\t\t\n\t\t}\n\t\t\n\t\tvar fullxyzw = (s == 228) && (sourceMask == 0xF);\n\t\tvar swizzle = \"\";\n\t\t\n\t\tif (type != RegisterType.SAMPLER && !fullxyzw) {\n\t\t\t\n\t\t\tfor (i in 0...4) {\n\t\t\t\t\n\t\t\t\t// only output swizzles for each source mask\n\t\t\t\tif ((sourceMask & (1 << i)) != 0) {\n\t\t\t\t\t\n\t\t\t\t\tswitch ((s >> (i * 2)) & 3) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 0: swizzle += \"x\";\n\t\t\t\t\t\tcase 1: swizzle += \"y\";\n\t\t\t\t\t\tcase 2: swizzle += \"z\";\n\t\t\t\t\t\tcase 3: swizzle += \"w\";\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar str = AGALConverter.prefixFromType (type, programType);\n\t\t\n\t\tif (d == 0) {\n\t\t\t\n\t\t\t// direct register\n\t\t\tstr += (n + offset);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t// indirect register\n\t\t\tstr += o;\n\t\t\tvar indexComponent = String.fromCharCode ('x'.charCodeAt (0) + q);\n\t\t\tvar indexRegister = AGALConverter.prefixFromType (itype, programType) + this.n + \".\" + indexComponent;\n\t\t\tstr += \"[ int(\" + indexRegister + \") +\" + offset + \"]\";\n\t\t\t\n\t\t}\n\t\t\n\t\tif (emitSwizzle && swizzle != \"\") {\n\t\t\t\n\t\t\tstr += \".\" + swizzle;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn str;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D;\n\n\nimport openfl.display3D.Context3DBlendFactor;\nimport openfl.display3D.Context3DCompareMode;\nimport openfl.display3D.Context3DTriangleFace;\nimport openfl.display3D.Program3D;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Context3DStateCache {\n\t\n\t\n\tprivate static inline var FLOATS_PER_REGISTER = 4;\n\tprivate static inline var MAX_NUM_REGISTERS = 1024;\n\t\n\tprivate static inline var disableCache = true;\n\t\n\tprivate var _activeTexture:Int;\n\tprivate var _activeVertexArray:Int;\n\tprivate var _cullingMode:Context3DTriangleFace;\n\tprivate var _depthTestCompareMode:Context3DCompareMode;\n\tprivate var _depthTestEnabled:Bool;\n\tprivate var _depthTestMask:Bool;\n\tprivate var _destBlendFactor:Context3DBlendFactor;\n\tprivate var _program:Program3D;\n\tprivate var _registers = new Vector<Float> (MAX_NUM_REGISTERS * FLOATS_PER_REGISTER);\n\tprivate var _srcBlendFactor:Context3DBlendFactor;\n\tprivate var _viewportHeight:Int;\n\tprivate var _viewportOriginX:Int;\n\tprivate var _viewportOriginY:Int;\n\tprivate var _viewportWidth:Int;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tclearSettings ();\n\t\t\n\t}\n\t\n\t\n\tprivate function clearRegisters ():Void {\n\t\t\n\t\tvar numFloats = MAX_NUM_REGISTERS * FLOATS_PER_REGISTER;\n\t\t\n\t\tfor (c in 0...numFloats) {\n\t\t\t\n\t\t\t_registers [c] = -999999999.0;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function clearSettings ():Void {\n\t\t\n\t\t_srcBlendFactor = null;\n\t\t_destBlendFactor = null;\n\t\t_depthTestEnabled = false;\n\t\t_depthTestMask = false;\n\t\t_depthTestCompareMode = null;\n\t\t_program = null;\n\t\t_cullingMode = null;\n\t\t_activeTexture = -1;\n\t\t_activeVertexArray = -1;\n\t\t_viewportOriginX = -1;\n\t\t_viewportOriginY = -1;\n\t\t_viewportWidth = -1;\n\t\t_viewportHeight = -1;\n\t\t\n\t\tclearRegisters ();\n\t\t\n\t}\n\t\n\t\n\tpublic function updateActiveTextureSample (texture:Int):Bool {\n\t\t\n\t\tif (!disableCache && texture == _activeTexture) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\t_activeTexture = texture;\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic function updateActiveVertexArray (vertexArray:Int):Bool {\n\t\t\n\t\tif (!disableCache && vertexArray == _activeVertexArray) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\t_activeVertexArray = vertexArray;\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic function updateBlendDestFactor (factor:Context3DBlendFactor):Bool {\n\t\t\n\t\tif (!disableCache && factor == _destBlendFactor) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\t_destBlendFactor = factor;\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic function updateBlendSrcFactor (factor:Context3DBlendFactor):Bool {\n\t\t\n\t\tif (!disableCache && factor == _srcBlendFactor) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\t_srcBlendFactor = factor;\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic function updateCullingMode (cullMode:Context3DTriangleFace):Bool {\n\t\t\n\t\tif (!disableCache && cullMode == _cullingMode) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\t_cullingMode = cullMode;\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic function updateDepthCompareMode (mode:Context3DCompareMode):Bool {\n\t\t\n\t\tif (!disableCache && mode == _depthTestCompareMode) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\t_depthTestCompareMode = mode;\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic function updateDepthTestEnabled (test:Bool):Bool {\n\t\t\n\t\tif (!disableCache && test == _depthTestEnabled) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\t_depthTestEnabled = test;\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic function updateDepthTestMask (mask:Bool):Bool {\n\t\t\n\t\tif (!disableCache && mask == _depthTestMask) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\t_depthTestMask = mask;\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic function updateProgram3D (program3d:Program3D):Bool {\n\t\t\n\t\tif (!disableCache && program3d == _program) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\t_program = program3d;\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic function updateRegisters (mTemp:Vector<Float>, startRegister:Int, numRegisters:Int):Bool {\n\t\t\n\t\treturn true;\n\t\t\n\t\t/*Bool needToUpdate\t\t= false;\n\t\tInt  startFloat \t\t= startRegister * FLOATS_PER_REGISTER;\n\t\tInt  numFloat   \t\t= numRegisters  * FLOATS_PER_REGISTER;\n\t\tInt  inCounter \t\t\t= 0;\n\t\t\n\t\twhile (numFloat != 0)\n\t\t{\n\t\t\tif (_registers [startFloat] != mTemp [inCounter]) \n\t\t\t{\n\t\t\t\t_registers [startFloat] = mTemp [inCounter];\n\t\t\t\tneedToUpdate = true;\n\t\t\t}\n\t\t\t\n\t\t\t--numFloat;\n\t\t\t++startFloat;\n\t\t\t++inCounter;\n\t\t}\n\t\t\n\t\treturn needToUpdate;*/\n\t\t\n\t}\n\t\n\t\n\tpublic function updateViewport (originX:Int, originY:Int, width:Int, height:Int):Bool {\n\t\t\n\t\tif (!disableCache && _viewportOriginX == originX && _viewportOriginY == originY && _viewportWidth == width && _viewportHeight == height) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\t_viewportOriginX = originX;\n\t\t_viewportOriginY = originY;\n\t\t_viewportWidth = width;\n\t\t_viewportHeight = height;\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D;\n\n\nimport lime.graphics.opengl.GL;\nimport lime.graphics.GLRenderContext;\nimport openfl._internal.stage3D.atf.ATFGPUFormat;\nimport openfl.errors.IllegalOperationError;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\nclass GLCompressedTextureFormats {\n\n\n\tprivate var __formatMap = new Map<Int, Int>();\n\tprivate var __formatMapAlpha = new Map<Int, Int>();\n\n\n\tpublic function new( gl: GLRenderContext ) {\n\n\t\tcheckDXT (gl);\n\t\tcheckETC1 (gl);\n\t\tcheckPVRTC (gl);\n\n\t}\n\n\n\tpublic function checkDXT( gl: GLRenderContext ) {\n\t\t\n\t\t#if (js && html5)\n\t\tvar compressedExtension = gl.getExtension (\"WEBGL_compressed_texture_s3tc\");\n\t\t#else\n\t\tvar compressedExtension = gl.getExtension (\"EXT_texture_compression_s3tc\");\n\t\t#end\n\t\t\t\n\t\tif (compressedExtension != null) {\n\n\t\t\t__formatMap[ATFGPUFormat.DXT] = compressedExtension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t__formatMapAlpha[ATFGPUFormat.DXT] = compressedExtension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\t\t\t\n\t\t}\n\n\t}\n\n\n\tpublic function checkETC1( gl: GLRenderContext ) {\n\n\t\t#if (js && html5)\n\n\t\tvar compressedExtension = gl.getExtension (\"WEBGL_compressed_texture_etc1\");\n\t\tif (compressedExtension != null) {\n\n\t\t\t__formatMap[ATFGPUFormat.ETC1] = compressedExtension.COMPRESSED_RGB_ETC1_WEBGL;\n\t\t\t\n\t\t}\n\n\t\t#else\n\n\t\tvar compressedExtension = gl.getExtension (\"OES_compressed_ETC1_RGB8_texture\");\n\t\tif (compressedExtension != null) {\n\n\t\t\t__formatMap[ATFGPUFormat.ETC1] = compressedExtension.ETC1_RGB8_OES;\n\t\t\t\n\t\t}\n\n\t\t#end\n\n\t}\n\n\n\tpublic function checkPVRTC( gl: GLRenderContext ) {\n\n\t\t#if (js && html5)\n\t\t// WEBGL_compressed_texture_pvrtc is not available on iOS Safari\n\t\tvar compressedExtension = gl.getExtension (\"WEBKIT_WEBGL_compressed_texture_pvrtc\");\n\t\t#else\n\t\tvar compressedExtension = gl.getExtension (\"IMG_texture_compression_pvrtc\");\n\t\t#end\n\t\t\n\t\tif (compressedExtension != null) {\n\n\t\t\t__formatMap[ATFGPUFormat.PVRTC] = compressedExtension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t__formatMapAlpha[ATFGPUFormat.PVRTC] = compressedExtension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\n\t\t}\n\n\t}\n\n\n\tpublic function toTextureFormat( alpha:Bool, gpuFormat: ATFGPUFormat ):Int {\n\t\t\n\t\tif (alpha)\n\t\t\treturn __formatMap[gpuFormat];\n\t\telse\n\t\t\treturn __formatMapAlpha[gpuFormat];\n\t\n\t}\n}","package openfl._internal.stage3D;\n\n\nimport lime.graphics.opengl.GL;\nimport openfl.errors.IllegalOperationError;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass GLUtils {\n\t\n    private static var debug = false;\n\t\n    // Comment the following line if you want the GL Error check in release mode on device\n    //[Conditional(\"DEBUG\")]\n\t\n    public static function CheckGLError ():Void {\n        if (!debug) return;\n\n        var error = GL.getError ();\n\t\t\n        if (error != GL.NO_ERROR) {\n\t\t\t\n\t\t\tvar errorText = switch (error) {\n\t\t\t\tcase GL.NO_ERROR:\n\t\t\t\t\t\"GL_NO_ERROR\";\n\t\t\t\tcase GL.INVALID_ENUM:\n\t\t\t\t\t\"GL_INVALID_ENUM\";\n\t\t\t\tcase GL.INVALID_OPERATION:\n\t\t\t\t\t\"GL_INVALID_OPERATION\";\n\t\t\t\tcase GL.INVALID_FRAMEBUFFER_OPERATION:\n\t\t\t\t\t\"GL_INVALID_FRAMEBUFFER_OPERATION\";\n\t\t\t\tcase GL.INVALID_VALUE:\n\t\t\t\t\t\"GL_INVALID_VALUE\";\n\t\t\t\tcase GL.OUT_OF_MEMORY:\n\t\t\t\t\t\"GL_OUT_OF_MEMORY\";\n\t\t\t\tdefault:\n\t\t\t\t\tStd.string (error);\n\t\t\t};\n\t\t\t\n            throw new IllegalOperationError(\"Error calling openGL api. Error: \" + errorText + \"\\n\");\n\t\t\t\n        }\n\t\t\n    }\n\t\n}\n","package openfl._internal.stage3D;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass SamplerState {\n\t\n\t\n\tpublic var lodBias(default, set):Float;\n\tpublic var magFilter(default, set):Int;\n\tpublic var maxAniso(default, set):Float;\n\tpublic var minFilter(default, set):Int;\n\tpublic var wrapModeS(default, set):Int;\n\tpublic var wrapModeT(default, set):Int;\n\t\n\tpublic var centroid:Bool;\n\tpublic var ignoreSampler:Bool;\n\tpublic var mipmapGenerated:Bool;\n\t\n\tprivate var __samplerDirty:Bool;\n\t\n\t\n\tpublic function new (minFilter:Int, magFilter:Int, wrapModeS:Int, wrapModeT:Int, lodBias:Float = 0.0, maxAniso:Float = 0.0, ignoreSampler:Bool = false, centroid:Bool = false, mipmapGenerated:Bool = false) {\n\t\t\n\t\tthis.minFilter = minFilter;\n\t\tthis.magFilter = magFilter;\n\t\tthis.wrapModeS = wrapModeS;\n\t\tthis.wrapModeT = wrapModeT;\n\t\tthis.lodBias = lodBias;\n\t\tthis.maxAniso = maxAniso;\n\t\tthis.ignoreSampler = ignoreSampler;\n\t\tthis.centroid = centroid;\n\t\tthis.mipmapGenerated = mipmapGenerated;\n\t\t\n\t\t__samplerDirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (other:SamplerState):Void {\n\t\t\n\t\tif (other == null || other.ignoreSampler) return;\n\t\t\n\t\tthis.minFilter = other.minFilter;\n\t\tthis.magFilter = other.magFilter;\n\t\tthis.wrapModeS = other.wrapModeS;\n\t\tthis.wrapModeT = other.wrapModeT;\n\t\tthis.lodBias = other.lodBias;\n\t\tthis.maxAniso = other.maxAniso;\n\t\tthis.centroid = other.centroid;\n\t\tthis.mipmapGenerated = other.mipmapGenerated;\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (other:SamplerState):Bool {\n\t\t\n\t\tif (this == other) {\n\t\t\t\n\t\t\treturn !__samplerDirty;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (other == null) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\n\t\treturn (minFilter == other.minFilter && magFilter == other.magFilter && wrapModeS == other.wrapModeS && wrapModeT == other.wrapModeT && lodBias == other.lodBias && maxAniso == other.maxAniso && mipmapGenerated == other.mipmapGenerated);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function set_lodBias (value:Float):Float {\n\t\t\n\t\tif (lodBias != value) __samplerDirty = true;\n\t\treturn lodBias = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_magFilter (value:Int):Int {\n\t\t\n\t\tif (magFilter != value) __samplerDirty = true;\n\t\treturn magFilter = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_maxAniso (value:Float):Float {\n\t\t\n\t\tif (maxAniso != value) __samplerDirty = true;\n\t\treturn maxAniso = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_minFilter (value:Int):Int {\n\t\t\n\t\tif (minFilter != value) __samplerDirty = true;\n\t\treturn minFilter = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_wrapModeS (value:Int):Int {\n\t\t\n\t\tif (wrapModeS != value) __samplerDirty = true;\n\t\treturn wrapModeS = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_wrapModeT (value:Int):Int {\n\t\t\n\t\tif (wrapModeT != value) __samplerDirty = true;\n\t\treturn wrapModeT = value;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D.atf;\n\nimport haxe.io.Bytes;\nimport openfl.utils.ByteArray;\nimport openfl.errors.IllegalOperationError;\nimport openfl.display3D.Context3DTextureFormat;\n\ntypedef UploadCallback = UInt -> Int -> ATFGPUFormat -> Int -> Int -> Int -> lime.utils.DataPointer -> Void;\n\n/**\n\tThis class can read textures from Adobe Texture Format containers.\n\tCurrently only ATF block compressed textures without JPEG-XR+LZMA are supported. You can create such files via:\n\t`png2atf -n 0,0 -c d -i texture.png -o compressed_texture.atf`\n\n\tTo read a texture you need to perform these steps:\n\t- create a `new ATFReader()` instance\n\t- read the header with `readHeader()`\n\t- call `readTextures()` and a provide an upload callback\n\n\tThe ATF specification can be found here:\n\t<https://www.adobe.com/devnet/archive/flashruntimes/articles/atf-file-format.html>\n**/\nclass ATFReader {\n\n\tvar data: ByteArray;\n\n\tvar version = 0;\n\tvar cubeMap:Bool;\n\tvar width:Int;\n\tvar height:Int;\n\tvar mipCount:Int;\n\n\n\tpublic function new (data:ByteArray, byteArrayOffset:UInt) {\n\n\t\tdata.position = byteArrayOffset;\n\t\tvar signature:String = data.readUTFBytes (3);\n\t\tdata.position = byteArrayOffset;\n\n\t\tif (signature != \"ATF\") {\n\t\t\t\n\t\t\tthrow new IllegalOperationError (\"ATF signature not found\");\n\t\t\t\n\t\t}\n\n\t\tvar length = 0;\n\n\t\t// When the 6th byte is 0xff, we have one of the new formats\n\t\tif (data[byteArrayOffset+6] == 0xff) {\n\t\t\t\n\t\t\tversion = data[byteArrayOffset+7];\n\t\t\tdata.position = byteArrayOffset+8;\n\t\t\tlength = __readUInt32 (data);\n\t\t\n\t\t}\n\t\telse {\n\t\t\t\n\t\t\tversion = 0;\n\t\t\tdata.position = byteArrayOffset+3;\n\t\t\tlength = __readUInt24 (data);\n\t\t\n\t\t}\n\t\t\n\t\t\n\t\tif (cast ((byteArrayOffset + length), Int) > data.length) {\n\t\t\t\n\t\t\tthrow new IllegalOperationError (\"ATF length exceeds byte array length\");\n\t\t\t\n\t\t}\n\n\t\tthis.data = data;\n\n\t}\n\n\n\tpublic function readHeader (__width:Int, __height:Int, cubeMap:Bool):Bool {\n\n\t\tvar tdata = data.readUnsignedByte();\n\t\tvar type:ATFType = cast (tdata >> 7);\n\t\t\n\t\tif ( !cubeMap && (type != ATFType.NORMAL) ) {\n\t\t\t\n\t\t\tthrow new IllegalOperationError (\"ATF Cube map not expected\");\n\t\t\t\n\t\t}\n\t\t\n\t\tif ( cubeMap && (type != ATFType.CUBE_MAP) ) {\n\t\t\t\n\t\t\tthrow new IllegalOperationError (\"ATF Cube map expected\");\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.cubeMap = cubeMap;\n\t\t\n\t\tvar atfFormat:ATFFormat = cast (tdata & 0x7f);\n\t\t\n\t\t// Make sure it is one of the supported formats\n\t\tif (atfFormat != ATFFormat.RAW_COMPRESSED && atfFormat != ATFFormat.RAW_COMPRESSED_ALPHA) {\n\t\t\t\n\t\t\tthrow new IllegalOperationError(\"Only ATF block compressed textures without JPEG-XR+LZMA are supported\");\n\t\t\n\t\t}\n\t\t\n\t\t\n\t\twidth = (1 << cast data.readUnsignedByte ());\n\t\theight = (1 << cast data.readUnsignedByte ());\n\t\t\n\t\tif (width != __width || height != __height) {\n\t\t\t\n\t\t\tthrow new IllegalOperationError (\"ATF width and height dont match\");\n\t\t\t\n\t\t}\n\t\t\n\t\tmipCount = cast data.readUnsignedByte ();\n\t\t\n\t\treturn (atfFormat == openfl._internal.stage3D.atf.ATFFormat.RAW_COMPRESSED);\n\t\t\n\t}\n\t\n\t\n\tpublic function readTextures (uploadCallback:UploadCallback):Void {\n\n\t\t// DXT1/5, ETC1, PVRTC4, ETC2\n\t\t// ETC2 is available with ATF version 3 \n\t\tvar gpuFormats = (version < 3) ? 3 : 4;\n\t\tvar sideCount = cubeMap ? 6 : 1; // a cubemap has 6 sides\n\t\t\n\t\tfor (side in 0...sideCount) {\n\t\t\tfor (level in 0...mipCount) {\n\t\t\t\t\n\t\t\t\tfor (gpuFormat in 0...gpuFormats) {\n\t\t\t\t\t\n\t\t\t\t\tvar blockLength = (version == 0) ? __readUInt24 (data) : __readUInt32 (data);\n\t\t\t\t\t\n\t\t\t\t\tif ((data.position + blockLength) > data.length) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tthrow new IllegalOperationError(\"Block length exceeds ATF file length\");\n\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (blockLength > 0) {\n\t\t\t\t\t\n\t\t\t\t\t\tvar bytes:Bytes = Bytes.alloc(blockLength);\n\t\t\t\t\t\tdata.readBytes(bytes, 0, blockLength);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tuploadCallback(side, level, gpuFormat, width>>level, height>>level, blockLength, bytes);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n\tprivate function __readUInt24 (data:ByteArray):UInt {\n\t\t\n\t\tvar value:UInt;\n\t\tvalue = (data.readUnsignedByte () << 16);\n\t\tvalue |= (data.readUnsignedByte () << 8);\n\t\tvalue |= data.readUnsignedByte ();\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function __readUInt32 (data:ByteArray):UInt {\n\t\t\n\t\tvar value:UInt;\n\t\tvalue = (data.readUnsignedByte () << 24);\n\t\tvalue |= (data.readUnsignedByte () << 16);\n\t\tvalue |= (data.readUnsignedByte () << 8);\n\t\tvalue |= data.readUnsignedByte ();\n\t\treturn value;\n\t\t\n\t}\n}\n","package openfl._internal.stage3D.opengl;\n\n\nimport lime.graphics.GLRenderContext;\nimport lime.math.Rectangle in LimeRectangle;\nimport lime.math.Vector2;\nimport lime.utils.Float32Array;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.display3D.textures.CubeTexture;\nimport openfl.display3D.textures.RectangleTexture;\nimport openfl.display3D.textures.TextureBase;\nimport openfl.display3D.textures.Texture;\nimport openfl.display3D.Context3DBlendFactor;\nimport openfl.display3D.Context3DClearMask;\nimport openfl.display3D.Context3DCompareMode;\nimport openfl.display3D.Context3DMipFilter;\nimport openfl.display3D.Context3DProgramType;\nimport openfl.display3D.Context3DStencilAction;\nimport openfl.display3D.Context3DTextureFilter;\nimport openfl.display3D.Context3DTriangleFace;\nimport openfl.display3D.Context3DVertexBufferFormat;\nimport openfl.display3D.Context3DWrapMode;\nimport openfl.display3D.Context3D;\nimport openfl.display3D.IndexBuffer3D;\nimport openfl.display3D.Program3D;\nimport openfl.display3D.VertexBuffer3D;\nimport openfl.display.BitmapData;\nimport openfl.display.Stage3D;\nimport openfl.errors.Error;\nimport openfl.errors.IllegalOperationError;\nimport openfl.geom.Matrix3D;\nimport openfl.geom.Rectangle;\nimport openfl.utils.ByteArray;\nimport openfl.Vector;\n\n#if gl_stats\nimport openfl._internal.renderer.opengl.stats.GLStats;\nimport openfl._internal.renderer.opengl.stats.DrawCallContext;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.stage3D.Context3DStateCache)\n@:access(openfl._internal.stage3D.GLUtils)\n@:access(openfl.display3D.textures.TextureBase)\n@:access(openfl.display3D.Context3D)\n@:access(openfl.display3D.IndexBuffer3D)\n@:access(openfl.display3D.Program3D)\n@:access(openfl.display3D.VertexBuffer3D)\n@:access(openfl.display.Stage3D)\n\n\nclass GLContext3D {\n\t\n\t\n\tprivate static var context:Context3D;\n\tprivate static var gl:GLRenderContext;\n\t\n\t\n\tpublic static function create (context:Context3D) {\n\t\t\n\t\tvar gl = context.__renderSession.gl;\n\t\t\n\t\tcontext.__vertexConstants = new Float32Array (4 * Context3D.MAX_PROGRAM_REGISTERS);\n\t\tcontext.__fragmentConstants = new Float32Array (4 * Context3D.MAX_PROGRAM_REGISTERS);\n\t\t\n\t\tcontext.__positionScale = new Float32Array ([ 1.0, 1.0, 1.0, 1.0 ]);\n\t\tcontext.__samplerDirty = 0;\n\t\tcontext.__samplerTextures = new Vector<TextureBase> (Context3D.MAX_SAMPLERS);\n\t\tcontext.__samplerStates = [];\n\t\t\n\t\tfor (i in 0 ... Context3D.MAX_SAMPLERS) {\n\t\t\t\n\t\t\tcontext.__samplerStates[i] = new SamplerState (gl.LINEAR, gl.LINEAR, gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE);\n\t\t\t\n\t\t}\n\t\t\n\t\t#if (js && html5)\n\t\tcontext.maxBackBufferHeight = context.maxBackBufferWidth = gl.getParameter (gl.MAX_VIEWPORT_DIMS);\n\t\t#else\n\t\tcontext.maxBackBufferHeight = context.maxBackBufferWidth = 16384;\n\t\t#end\n\t\t\n\t\tcontext.__backBufferAntiAlias = 0;\n\t\tcontext.__backBufferEnableDepthAndStencil = true;\n\t\tcontext.__backBufferWantsBestResolution = false;\n\t\t\n\t\tcontext.__frameCount = 0;\n\t\tcontext.__rttDepthAndStencil = false;\n\t\tcontext.__samplerDirty = 0;\n\t\tcontext.__stencilCompareMode = Context3DCompareMode.ALWAYS;\n\t\tcontext.__stencilRef = 0;\n\t\tcontext.__stencilReadMask = 0xFF;\n\t\t\n\t\tvar anisoExtension:Dynamic = gl.getExtension (\"EXT_texture_filter_anisotropic\");\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tif (anisoExtension == null || !Reflect.hasField (anisoExtension, \"MAX_TEXTURE_MAX_ANISOTROPY_EXT\"))\n\t\t\tanisoExtension = gl.getExtension (\"MOZ_EXT_texture_filter_anisotropic\");\n\t\tif (anisoExtension == null || !Reflect.hasField (anisoExtension, \"MAX_TEXTURE_MAX_ANISOTROPY_EXT\"))\n\t\t\tanisoExtension = gl.getExtension (\"WEBKIT_EXT_texture_filter_anisotropic\");\n\t\t\n\t\tcontext.__supportsPackedDepthStencil = true;\n\t\tContext3D.DEPTH_STENCIL = gl.DEPTH_STENCIL;\n\t\t\n\t\t#else\n\t\t\n\t\tvar stencilExtension = gl.getExtension (\"OES_packed_depth_stencil\");\n\t\t\n\t\tif (stencilExtension != null) {\n\t\t\t\n\t\t\tcontext.__supportsPackedDepthStencil = true;\n\t\t\tContext3D.DEPTH_STENCIL = stencilExtension.DEPTH24_STENCIL8_OES;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tstencilExtension = gl.getExtension (\"EXT_packed_depth_stencil\");\n\t\t\t\n\t\t\tif (stencilExtension != null) {\n\t\t\t\t\n\t\t\t\tcontext.__supportsPackedDepthStencil = true;\n\t\t\t\tContext3D.DEPTH_STENCIL = stencilExtension.DEPTH24_STENCIL8_EXT;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\tcontext.__supportsAnisotropicFiltering = (anisoExtension != null);\n\t\t\n\t\tif (context.__supportsAnisotropicFiltering) {\n\t\t\t\n\t\t\tContext3D.TEXTURE_MAX_ANISOTROPY_EXT = anisoExtension.TEXTURE_MAX_ANISOTROPY_EXT;\n\t\t\t\n\t\t\tvar maxAnisotropy:Int = gl.getParameter (anisoExtension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n\t\t\tcontext.__maxAnisotropyTexture2D = maxAnisotropy;\n\t\t\tcontext.__maxAnisotropyTexture2D = maxAnisotropy;\n\t\t\t\n\t\t}\n\t\t\n\t\t// __stats = new Vector<Int> (Context3DTelemetry.length);\n\t\t// __statsCache = new Vector<Int> (Context3DTelemetry.length);\n\t\t\n\t\t#if telemetry\n\t\t//__spanPresent = new Telemetry.Span (\".rend.molehill.present\");\n\t\t//__valueFrame = new Telemetry.Value (\".rend.molehill.frame\");\n\t\t#end\n\t\t\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tvar vendor = gl.getParameter (gl.VENDOR);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tvar version = gl.getParameter (gl.VERSION);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tvar renderer = gl.getParameter (gl.RENDERER);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tvar glslVersion = gl.getParameter (gl.SHADING_LANGUAGE_VERSION);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tcontext.driverInfo = \"OpenGL\" +\n\t\t\t\t\t \" Vendor=\" + vendor +\n\t\t\t\t\t \" Version=\" + version +\n\t\t\t\t\t \" Renderer=\" + renderer +\n\t\t\t\t\t \" GLSL=\" + glslVersion;\n\t\t\n\t\t#if telemetry\n\t\t//Telemetry.Session.WriteValue (\".platform.3d.driverinfo\", driverInfo);\n\t\t#end\n\t\t\n\t\t// for (i in 0...__stats.length) {\n\t\t\t\n\t\t// \t__stats[i] = 0;\n\t\t\t\n\t\t// }\n\t\t\n\t\t// __stateCache.clearSettings ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function clear (context:Context3D, red:Float = 0, green:Float = 0, blue:Float = 0, alpha:Float = 1, depth:Float = 1, stencil:UInt = 0, mask:UInt = Context3DClearMask.ALL):Void {\n\t\t\n\t\tvar gl = context.__renderSession.gl;\n\t\tvar clearMask = 0;\n\t\t\n\t\tif (mask & Context3DClearMask.COLOR != 0) {\n\t\t\t\n\t\t\tclearMask |= gl.COLOR_BUFFER_BIT;\n\t\t\t\n\t\t\tgl.clearColor (red, green, blue, alpha);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (mask & Context3DClearMask.DEPTH != 0) {\n\t\t\t\n\t\t\tclearMask |= gl.DEPTH_BUFFER_BIT;\n\t\t\t\n\t\t\tgl.depthMask (true);\n\t\t\tgl.clearDepthf (depth);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (mask & Context3DClearMask.STENCIL != 0) {\n\t\t\t\n\t\t\tclearMask |= gl.STENCIL_BUFFER_BIT;\n\t\t\t\n\t\t\tgl.clearStencil (stencil);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.clear (clearMask);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function configureBackBuffer (context:Context3D, width:Int, height:Int, antiAlias:Int, enableDepthAndStencil:Bool = true, wantsBestResolution:Bool = false, wantsBestResolutionOnBrowserZoom:Bool = false):Void {\n\t\t\n\t\tGLContext3D.context = context;\n\t\tGLContext3D.gl = context.__renderSession.gl;\n\t\t\n\t\t__updateBackbufferViewport ();\n\t\t\n\t\tcontext.backBufferWidth = width;\n\t\tcontext.backBufferHeight = height;\n\t\t\n\t\tcontext.__backBufferAntiAlias = antiAlias;\n\t\tcontext.__backBufferEnableDepthAndStencil = enableDepthAndStencil;\n\t\tcontext.__backBufferWantsBestResolution = wantsBestResolution;\n\t\t\n\t\tContext3D.__stateCache.clearSettings ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function dispose (context:Context3D, recreate:Bool = true):Void {\n\t\t\n\t\t// TODO\n\t\t\n\t}\n\t\n\t\n\tpublic static function drawToBitmapData (context:Context3D, destination:BitmapData):Void {\n\t\t\n\t\tvar window = context.__stage3D.__stage.window;\n\t\t\n\t\tif (window != null) {\n\t\t\t\n\t\t\tvar image = window.renderer.readPixels ();\n\t\t\tvar heightOffset = image.height - context.backBufferHeight;\n\t\t\t\n\t\t\tdestination.image.copyPixels (image, new LimeRectangle (Std.int (context.__stage3D.x), Std.int (context.__stage3D.y + heightOffset), context.backBufferWidth, context.backBufferHeight), new Vector2 ());\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function drawTriangles (context:Context3D, indexBuffer:IndexBuffer3D, firstIndex:Int = 0, numTriangles:Int = -1):Void {\n\t\t\n\t\tif (context.__program == null) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tGLContext3D.context = context;\n\t\tGLContext3D.gl = context.__renderSession.gl;\n\t\t\n\t\t__flushSamplerState ();\n\t\tcontext.__program.__flush ();\n\t\t\n\t\tvar count = (numTriangles == -1) ? indexBuffer.__numIndices : (numTriangles * 3);\n\t\t\n\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer.__id);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.drawElements (gl.TRIANGLES, count, indexBuffer.__elementType, firstIndex);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\t#if gl_stats\n\t\t\tGLStats.incrementDrawCall (DrawCallContext.STAGE3D);\n\t\t#end\n\t\t// __statsIncrement (Context3DTelemetry.DRAW_CALLS);\n\t\t\n\t}\n\t\n\t\n\t\n\tpublic static function present (context:Context3D):Void {\n\t\t\n\t\t// __statsSendToTelemetry ();\n\t\t\n\t\t#if telemetry\n\t\t//__spanPresent.End ();\n\t\t//__spanPresent.Begin ();\n\t\t#end\n\t\t\n\t\t// __statsClear (Context3DTelemetry.DRAW_CALLS);\n\t\t\n\t\t// __frameCount++;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setBlendFactors (context:Context3D, sourceFactor:Context3DBlendFactor, destinationFactor:Context3DBlendFactor):Void {\n\t\t\n\t\tvar updateSrc = Context3D.__stateCache.updateBlendSrcFactor (sourceFactor);\n\t\tvar updateDest = Context3D.__stateCache.updateBlendDestFactor (destinationFactor);\n\t\t\n\t\tif (updateSrc || updateDest) {\n\t\t\t\n\t\t\tGLContext3D.context = context;\n\t\t\tGLContext3D.gl = context.__renderSession.gl;\n\t\t\t\n\t\t\t__updateBlendFactors ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function setColorMask (context:Context3D, red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {\n\t\t\n\t\tvar gl = context.__renderSession.gl;\n\t\t\n\t\tgl.colorMask (red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setCulling (context:Context3D, triangleFaceToCull:Context3DTriangleFace):Error {\n\t\t\n\t\tvar gl = context.__renderSession.gl;\n\t\t\n\t\tif (Context3D.__stateCache.updateCullingMode (triangleFaceToCull)) {\n\t\t\t\n\t\t\t// if (triangleFaceToCull == NONE) {\n\t\t\t\t\n\t\t\t// \tgl.disable (gl.CULL_FACE);\n\t\t\t\t\n\t\t\t// } else {\n\t\t\t\t\n\t\t\t// \tgl.enable (gl.CULL_FACE);\n\t\t\t// \tgl.cullFace (__getGLTriangleFace (triangleFaceToCull));\n\t\t\t\t\n\t\t\t// }\n\t\t\t\n\t\t\tswitch (triangleFaceToCull) {\n\t\t\t\t\n\t\t\t\tcase Context3DTriangleFace.NONE:\n\t\t\t\t\t\n\t\t\t\t\tgl.disable (gl.CULL_FACE);\n\t\t\t\t\n\t\t\t\tcase Context3DTriangleFace.BACK:\n\t\t\t\t\t\n\t\t\t\t\tgl.enable (gl.CULL_FACE);\n\t\t\t\t\tgl.cullFace (gl.FRONT);\n\t\t\t\t\n\t\t\t\tcase Context3DTriangleFace.FRONT:\n\t\t\t\t\t\n\t\t\t\t\tgl.enable (gl.CULL_FACE);\n\t\t\t\t\tgl.cullFace (gl.BACK);\n\t\t\t\t\n\t\t\t\tcase Context3DTriangleFace.FRONT_AND_BACK:\n\t\t\t\t\t\n\t\t\t\t\tgl.enable (gl.CULL_FACE);\n\t\t\t\t\tgl.cullFace (gl.FRONT_AND_BACK);\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\treturn new IllegalOperationError ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setDepthTest (context:Context3D, depthMask:Bool, passCompareMode:Context3DCompareMode):Void {\n\t\t\n\t\tvar gl = context.__renderSession.gl;\n\t\tvar depthTestEnabled = context.__backBufferEnableDepthAndStencil;\n\t\t\n\t\tif (Context3D.__stateCache.updateDepthTestEnabled (depthTestEnabled)) {\n\t\t\t\n\t\t\tif (depthTestEnabled) {\n\t\t\t\t\n\t\t\t\tgl.enable (gl.DEPTH_TEST);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl.disable (gl.DEPTH_TEST);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (Context3D.__stateCache.updateDepthTestMask (depthMask)) {\n\t\t\t\n\t\t\tgl.depthMask (depthMask);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (Context3D.__stateCache.updateDepthCompareMode (passCompareMode)) {\n\t\t\t\n\t\t\tswitch (passCompareMode) {\n\t\t\t\t\n\t\t\t\tcase Context3DCompareMode.ALWAYS: gl.depthFunc (gl.ALWAYS);\n\t\t\t\tcase Context3DCompareMode.EQUAL: gl.depthFunc (gl.EQUAL);\n\t\t\t\tcase Context3DCompareMode.GREATER: gl.depthFunc (gl.GREATER);\n\t\t\t\tcase Context3DCompareMode.GREATER_EQUAL: gl.depthFunc (gl.GEQUAL);\n\t\t\t\tcase Context3DCompareMode.LESS: gl.depthFunc (gl.LESS);\n\t\t\t\tcase Context3DCompareMode.LESS_EQUAL: gl.depthFunc (gl.LEQUAL);\n\t\t\t\tcase Context3DCompareMode.NEVER: gl.depthFunc (gl.NEVER);\n\t\t\t\tcase Context3DCompareMode.NOT_EQUAL: gl.depthFunc (gl.NOTEQUAL);\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\tthrow new IllegalOperationError ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function setEnableErrorChecking (value:Bool):Void {\n\t\t\n\t\tGLUtils.debug = value;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setProgram (context:Context3D, program:Program3D):Void {\n\t\t\n\t\tif (Context3D.__stateCache.updateProgram3D (program)) {\n\t\t\t\n\t\t\tprogram.__use ();\n\t\t\tprogram.__setPositionScale (context.__positionScale);\n\t\t\t\n\t\t\tcontext.__program = program;\n\t\t\t\n\t\t\tcontext.__samplerDirty |= context.__program.__samplerUsageMask;\n\t\t\t\n\t\t\tfor (i in 0...Context3D.MAX_SAMPLERS) {\n\t\t\t\t\n\t\t\t\tcontext.__samplerStates[i].copyFrom (context.__program.__getSamplerState (i));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function setProgramConstantsFromByteArray (context:Context3D, programType:Context3DProgramType, firstRegister:Int, numRegisters:Int, data:ByteArray, byteArrayOffset:UInt):Void {\n\t\t\n\t\tvar gl = context.__renderSession.gl;\n\t\t\n\t\tif (numRegisters == -1) {\n\t\t\t\n\t\t\tnumRegisters = ((data.length >> 2) - byteArrayOffset);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar isVertex = (programType == Context3DProgramType.VERTEX);\n\t\tvar dest = isVertex ? context.__vertexConstants : context.__fragmentConstants;\n\t\t\n\t\tvar floatData = Float32Array.fromBytes (data, 0, data.length);\n\t\tvar outOffset = firstRegister * 4;\n\t\tvar inOffset = Std.int (byteArrayOffset / 4);\n\t\t\n\t\tfor (i in 0...(numRegisters * 4)) {\n\t\t\t\n\t\t\tdest[outOffset + i] = floatData[inOffset + i];\n\t\t\t\n\t\t}\n\t\t\n\t\tif (context.__program != null) {\n\t\t\t\n\t\t\tcontext.__program.__markDirty (isVertex, firstRegister, numRegisters);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function setProgramConstantsFromMatrix (context:Context3D, programType:Context3DProgramType, firstRegister:Int, matrix:Matrix3D, transposedMatrix:Bool = false):Void {\n\t\t\n\t\tvar isVertex = (programType == Context3DProgramType.VERTEX);\n\t\tvar dest = isVertex ? context.__vertexConstants : context.__fragmentConstants;\n\t\tvar source = matrix.rawData;\n\t\tvar i = firstRegister * 4;\n\t\t\n\t\tif (transposedMatrix) {\n\t\t\t\n\t\t\tdest[i++] = source[0];\n\t\t\tdest[i++] = source[4];\n\t\t\tdest[i++] = source[8];\n\t\t\tdest[i++] = source[12];\n\t\t\t\n\t\t\tdest[i++] = source[1];\n\t\t\tdest[i++] = source[5];\n\t\t\tdest[i++] = source[9];\n\t\t\tdest[i++] = source[13];\n\t\t\t\n\t\t\tdest[i++] = source[2];\n\t\t\tdest[i++] = source[6];\n\t\t\tdest[i++] = source[10];\n\t\t\tdest[i++] = source[14];\n\t\t\t\n\t\t\tdest[i++] = source[3];\n\t\t\tdest[i++] = source[7];\n\t\t\tdest[i++] = source[11];\n\t\t\tdest[i++] = source[15];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tdest[i++] = source[0];\n\t\t\tdest[i++] = source[1];\n\t\t\tdest[i++] = source[2];\n\t\t\tdest[i++] = source[3];\n\t\t\t\n\t\t\tdest[i++] = source[4];\n\t\t\tdest[i++] = source[5];\n\t\t\tdest[i++] = source[6];\n\t\t\tdest[i++] = source[7];\n\t\t\t\n\t\t\tdest[i++] = source[8];\n\t\t\tdest[i++] = source[9];\n\t\t\tdest[i++] = source[10];\n\t\t\tdest[i++] = source[11];\n\t\t\t\n\t\t\tdest[i++] = source[12];\n\t\t\tdest[i++] = source[13];\n\t\t\tdest[i++] = source[14];\n\t\t\tdest[i++] = source[15];\n\t\t\t\n\t\t}\n\t\t\n\t\tif (context.__program != null) {\n\t\t\t\n\t\t\tcontext.__program.__markDirty (isVertex, firstRegister, 4);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function setProgramConstantsFromVector (context:Context3D, programType:Context3DProgramType, firstRegister:Int, data:Vector<Float>, numRegisters:Int = -1):Void {\n\t\t\n\t\tif (numRegisters == -1) {\n\t\t\t\n\t\t\tnumRegisters = (data.length >> 2);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar isVertex = (programType == VERTEX);\n\t\tvar dest = isVertex ? context.__vertexConstants : context.__fragmentConstants;\n\t\tvar source = data;\n\t\t\n\t\tvar sourceIndex = 0;\n\t\tvar destIndex = firstRegister * 4;\n\t\t\n\t\tfor (i in 0...numRegisters) {\n\t\t\t\n\t\t\tdest[destIndex++] = source[sourceIndex++];\n\t\t\tdest[destIndex++] = source[sourceIndex++];\n\t\t\tdest[destIndex++] = source[sourceIndex++];\n\t\t\tdest[destIndex++] = source[sourceIndex++];\n\t\t\t\n\t\t}\n\t\t\n\t\tif (context.__program != null) {\n\t\t\t\n\t\t\tcontext.__program.__markDirty (isVertex, firstRegister, numRegisters);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function setRenderToBackBuffer (context:Context3D):Void {\n\t\t\n\t\tvar gl = context.__renderSession.gl;\n\t\t\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, null);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.frontFace (gl.CCW);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tcontext.__renderToTexture = null;\n\t\tcontext.__scissorRectangle = null;\n\t\t__updateBackbufferViewport ();\n\t\t__updateScissorRectangle ();\n\t\t__updateDepthAndStencilState ();\n\t\t\n\t\tcontext.__positionScale[1] = 1.0;\n\t\t\n\t\tif (context.__program != null) {\n\t\t\t\n\t\t\tcontext.__program.__setPositionScale (context.__positionScale);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function setRenderToTexture (context:Context3D, texture:TextureBase, enableDepthAndStencil:Bool = false, antiAlias:Int = 0, surfaceSelector:Int = 0):Void {\n\t\t\n\t\tvar gl = context.__renderSession.gl;\n\t\t\n\t\tvar width = 0;\n\t\tvar height = 0;\n\t\t\n\t\tif (context.__framebuffer == null) {\n\t\t\t\n\t\t\tcontext.__framebuffer = gl.createFramebuffer ();\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, context.__framebuffer);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tif (Std.is (texture, Texture)) {\n\t\t\t\n\t\t\tvar texture2D:Texture = cast texture;\n\t\t\twidth = texture2D.__width;\n\t\t\theight = texture2D.__height;\n\t\t\t\n\t\t\tgl.framebufferTexture2D (gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture.__textureID, 0);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t} else if (Std.is (texture, RectangleTexture)) {\n\t\t\t\n\t\t\tvar rectTexture:RectangleTexture = cast texture;\n\t\t\twidth = rectTexture.__width;\n\t\t\theight = rectTexture.__height;\n\t\t\t\n\t\t\tgl.framebufferTexture2D (gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture.__textureID, 0);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t} else if (Std.is (texture, CubeTexture)) {\n\t\t\t\n\t\t\tvar cubeTexture:CubeTexture = cast texture;\n\t\t\twidth = cubeTexture.__size;\n\t\t\theight = cubeTexture.__size;\n\t\t\t\n\t\t\tfor (i in 0...6) {\n\t\t\t\t\n\t\t\t\tgl.framebufferTexture2D (gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, texture.__textureID, 0);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthrow new Error (\"Invalid texture\");\n\t\t\t\n\t\t}\n\t\t\n\t\tif (enableDepthAndStencil) {\n\t\t\t\n\t\t\tif (context.__supportsPackedDepthStencil) {\n\t\t\t\t\n\t\t\t\tif (context.__depthStencilRenderBuffer == null) {\n\t\t\t\t\t\n\t\t\t\t\tcontext.__depthStencilRenderBuffer = gl.createRenderbuffer ();\n\t\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl.bindRenderbuffer (gl.RENDERBUFFER, context.__depthStencilRenderBuffer);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\tgl.renderbufferStorage (gl.RENDERBUFFER, Context3D.DEPTH_STENCIL, width, height);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t\tgl.framebufferRenderbuffer (gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, context.__depthStencilRenderBuffer);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (context.__depthRenderBuffer == null) {\n\t\t\t\t\t\n\t\t\t\t\tcontext.__depthRenderBuffer = gl.createRenderbuffer ();\n\t\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (context.__stencilRenderBuffer == null) {\n\t\t\t\t\t\n\t\t\t\t\tcontext.__stencilRenderBuffer = gl.createRenderbuffer ();\n\t\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tgl.bindRenderbuffer (gl.RENDERBUFFER, context.__depthRenderBuffer);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\tgl.renderbufferStorage (gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\tgl.bindRenderbuffer (gl.RENDERBUFFER, context.__stencilRenderBuffer);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\tgl.renderbufferStorage (gl.RENDERBUFFER, gl.STENCIL_INDEX8, width, height);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t\tgl.framebufferRenderbuffer (gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, context.__depthRenderBuffer);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\tgl.framebufferRenderbuffer (gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.RENDERBUFFER, context.__stencilRenderBuffer);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.bindRenderbuffer (gl.RENDERBUFFER, null);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__setViewport (0, 0, width, height);\n\t\t\n\t\tif (context.__enableErrorChecking) {\n\t\t\t\n\t\t\tvar code = gl.checkFramebufferStatus (gl.FRAMEBUFFER);\n\t\t\t\n\t\t\tif (code != gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\t\n\t\t\t\ttrace (\"Error: Context3D.setRenderToTexture status:${code} width:${texture2D.__width} height:${texture2D.__height}\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tcontext.__positionScale[1] = -1.0;\n\t\t\n\t\tif (context.__program != null) {\n\t\t\t\n\t\t\tcontext.__program.__setPositionScale (context.__positionScale);\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.frontFace (gl.CW);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tcontext.__renderToTexture = texture;\n\t\tcontext.__scissorRectangle = null;\n\t\tcontext.__rttDepthAndStencil = enableDepthAndStencil;\n\t\t__updateScissorRectangle ();\n\t\t__updateDepthAndStencilState ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function setSamplerStateAt (context:Context3D, sampler:Int, wrap:Context3DWrapMode, filter:Context3DTextureFilter, mipfilter:Context3DMipFilter):Void {\n\t\t\n\t\tif (sampler < 0 || sampler > Context3D.MAX_SAMPLERS) {\n\t\t\t\n\t\t\tthrow new Error (\"sampler out of range\");\n\t\t\t\n\t\t}\n\t\t\n\t\tvar gl = context.__renderSession.gl;\n\t\tvar state = context.__samplerStates[sampler];\n\t\t\n\t\tswitch (wrap) {\n\t\t\t\n\t\t\tcase Context3DWrapMode.CLAMP:\n\t\t\t\t\n\t\t\t\tstate.wrapModeS = gl.CLAMP_TO_EDGE;\n\t\t\t\tstate.wrapModeT = gl.CLAMP_TO_EDGE;\n\t\t\t\n\t\t\tcase Context3DWrapMode.CLAMP_U_REPEAT_V:\n\t\t\t\t\n\t\t\t\tstate.wrapModeS = gl.CLAMP_TO_EDGE;\n\t\t\t\tstate.wrapModeT = gl.REPEAT;\n\t\t\t\n\t\t\tcase Context3DWrapMode.REPEAT:\n\t\t\t\t\n\t\t\t\tstate.wrapModeS = gl.REPEAT;\n\t\t\t\tstate.wrapModeT = gl.REPEAT;\n\t\t\t\n\t\t\tcase Context3DWrapMode.REPEAT_U_CLAMP_V:\n\t\t\t\t\n\t\t\t\tstate.wrapModeS = gl.REPEAT;\n\t\t\t\tstate.wrapModeT = gl.CLAMP_TO_EDGE;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tthrow new Error (\"wrap bad enum\");\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (filter) {\n\t\t\t\n\t\t\tcase Context3DTextureFilter.LINEAR:\n\t\t\t\t\n\t\t\t\tstate.magFilter = gl.LINEAR;\n\t\t\t\t\n\t\t\t\tif (context.__supportsAnisotropicFiltering) {\n\t\t\t\t\t\n\t\t\t\t\tstate.maxAniso = 1;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase Context3DTextureFilter.NEAREST:\n\t\t\t\t\n\t\t\t\tstate.magFilter = gl.NEAREST;\n\t\t\t\t\n\t\t\t\tif (context.__supportsAnisotropicFiltering) {\n\t\t\t\t\t\n\t\t\t\t\tstate.maxAniso = 1;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase Context3DTextureFilter.ANISOTROPIC2X:\n\t\t\t\t\n\t\t\t\tif (context.__supportsAnisotropicFiltering) {\n\t\t\t\t\t\n\t\t\t\t\tstate.maxAniso = (context.__maxAnisotropyTexture2D < 2 ? context.__maxAnisotropyTexture2D : 2);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase Context3DTextureFilter.ANISOTROPIC4X:\n\t\t\t\t\n\t\t\t\tif (context.__supportsAnisotropicFiltering) {\n\t\t\t\t\t\n\t\t\t\t\tstate.maxAniso = (context.__maxAnisotropyTexture2D < 4 ? context.__maxAnisotropyTexture2D : 4);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase Context3DTextureFilter.ANISOTROPIC8X:\n\t\t\t\t\n\t\t\t\tif (context.__supportsAnisotropicFiltering) {\n\t\t\t\t\t\n\t\t\t\t\tstate.maxAniso = (context.__maxAnisotropyTexture2D < 8 ? context.__maxAnisotropyTexture2D : 8);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\tcase Context3DTextureFilter.ANISOTROPIC16X:\n\t\t\t\t\n\t\t\t\tif (context.__supportsAnisotropicFiltering) {\n\t\t\t\t\t\n\t\t\t\t\tstate.maxAniso = (context.__maxAnisotropyTexture2D < 16 ? context.__maxAnisotropyTexture2D : 16);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tthrow new Error (\"filter bad enum\");\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (mipfilter) {\n\t\t\t\n\t\t\tcase Context3DMipFilter.MIPLINEAR:\n\t\t\t\t\n\t\t\t\tstate.minFilter = filter == Context3DTextureFilter.NEAREST ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR_MIPMAP_LINEAR;\n\t\t\t\n\t\t\tcase Context3DMipFilter.MIPNEAREST:\n\t\t\t\t\n\t\t\t\tstate.minFilter = filter == Context3DTextureFilter.NEAREST ? gl.NEAREST_MIPMAP_NEAREST : gl.LINEAR_MIPMAP_NEAREST;\n\t\t\t\n\t\t\tcase Context3DMipFilter.MIPNONE:\n\t\t\t\t\n\t\t\t\tstate.minFilter = filter == Context3DTextureFilter.NEAREST ? gl.NEAREST : gl.LINEAR;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tthrow new Error (\"mipfiter bad enum\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function setScissorRectangle (context:Context3D, rectangle:Rectangle):Void {\n\t\t\n\t\tGLContext3D.context = context;\n\t\tGLContext3D.gl = context.__renderSession.gl;\n\t\t\n\t\tcontext.__scissorRectangle = rectangle != null ? rectangle.clone () : null;\n\t\t__updateScissorRectangle ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function setStencilActions (context:Context3D, triangleFace:Context3DTriangleFace = FRONT_AND_BACK, compareMode:Context3DCompareMode = ALWAYS, actionOnBothPass:Context3DStencilAction = KEEP, actionOnDepthFail:Context3DStencilAction = KEEP, actionOnDepthPassStencilFail:Context3DStencilAction = KEEP):Void {\n\t\t\n\t\tGLContext3D.context = context;\n\t\tGLContext3D.gl = context.__renderSession.gl;\n\t\t\n\t\tcontext.__stencilCompareMode = compareMode;\n\t\tgl.stencilOpSeparate (__getGLTriangleFace (triangleFace), __getGLStencilAction (actionOnDepthPassStencilFail), __getGLStencilAction (actionOnDepthFail), __getGLStencilAction (actionOnBothPass));\n\t\tgl.stencilFunc (__getGLCompareMode (context.__stencilCompareMode), context.__stencilRef, context.__stencilReadMask);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setStencilReferenceValue (context:Context3D, referenceValue:UInt, readMask:UInt = 0xFF, writeMask:UInt = 0xFF):Void {\n\t\t\n\t\tGLContext3D.context = context;\n\t\tGLContext3D.gl = context.__renderSession.gl;\n\t\t\n\t\tcontext.__stencilReadMask = readMask;\n\t\tcontext.__stencilRef = referenceValue;\n\t\t\n\t\tgl.stencilFunc (__getGLCompareMode (context.__stencilCompareMode), context.__stencilRef, context.__stencilReadMask);\n\t\tgl.stencilMask (writeMask);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setTextureAt (context:Context3D, sampler:Int, texture:TextureBase):Void {\n\t\t\n\t\tif (context.__samplerTextures[sampler] != texture) {\n\t\t\t\n\t\t\tcontext.__samplerTextures[sampler] = texture;\n\t\t\tcontext.__samplerDirty |= (1 << sampler);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function setVertexBufferAt (context:Context3D, index:Int, buffer:VertexBuffer3D, bufferOffset:Int = 0, format:Context3DVertexBufferFormat = FLOAT_4):Void {\n\t\t\n\t\tvar gl = context.__renderSession.gl;\n\t\t\n\t\tif (buffer == null) {\n\t\t\t\n\t\t\tgl.disableVertexAttribArray (index);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, null);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.enableVertexAttribArray (index);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, buffer.__id);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tvar byteOffset = bufferOffset * 4;\n\t\t\n\t\tswitch (format) {\n\t\t\t\n\t\t\tcase BYTES_4:\n\t\t\t\t\n\t\t\t\tgl.vertexAttribPointer (index, 4, gl.UNSIGNED_BYTE, true, buffer.__stride, byteOffset);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\tcase FLOAT_4:\n\t\t\t\t\n\t\t\t\tgl.vertexAttribPointer (index, 4, gl.FLOAT, false, buffer.__stride, byteOffset);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\tcase FLOAT_3:\n\t\t\t\t\n\t\t\t\tgl.vertexAttribPointer (index, 3, gl.FLOAT, false, buffer.__stride, byteOffset);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\tcase FLOAT_2:\n\t\t\t\t\n\t\t\t\tgl.vertexAttribPointer (index, 2, gl.FLOAT, false, buffer.__stride, byteOffset);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\tcase FLOAT_1:\n\t\t\t\t\n\t\t\t\tgl.vertexAttribPointer (index, 1, gl.FLOAT, false, buffer.__stride, byteOffset);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tthrow new IllegalOperationError ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __flushSamplerState ():Void {\n\t\t\n\t\tvar sampler = 0;\n\t\t\n\t\twhile (context.__samplerDirty != 0) {\n\t\t\t\n\t\t\tif ((context.__samplerDirty & (1 << sampler)) != 0) {\n\t\t\t\t\n\t\t\t\tif (Context3D.__stateCache.updateActiveTextureSample (sampler)) {\n\t\t\t\t\t\n\t\t\t\t\tgl.activeTexture (gl.TEXTURE0 + sampler);\n\t\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar texture = context.__samplerTextures[sampler];\n\t\t\t\t\n\t\t\t\tif (texture != null) {\n\t\t\t\t\t\n\t\t\t\t\tvar target = texture.__textureTarget;\n\t\t\t\t\t\n\t\t\t\t\tgl.bindTexture (target, texture.__getTexture ());\n\t\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\t\n\t\t\t\t\ttexture.__setSamplerState (context.__samplerStates[sampler]);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tgl.bindTexture (gl.TEXTURE_2D, null);\n\t\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcontext.__samplerDirty &= ~(1 << sampler);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsampler++;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __getGLCompareMode (compareMode:Context3DCompareMode):Int {\n\t\t\n\t\treturn switch (compareMode) {\n\t\t\t\n\t\t\tcase ALWAYS: gl.ALWAYS;\n\t\t\tcase EQUAL: gl.EQUAL;\n\t\t\tcase GREATER: gl.GREATER;\n\t\t\tcase GREATER_EQUAL: gl.GEQUAL;\n\t\t\tcase LESS: gl.LESS;\n\t\t\tcase LESS_EQUAL: gl.LEQUAL; // TODO : wrong value\n\t\t\tcase NEVER: gl.NEVER;\n\t\t\tcase NOT_EQUAL: gl.NOTEQUAL;\n\t\t\tdefault: gl.EQUAL;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __getGLTriangleFace (triangleFace:Context3DTriangleFace):Int {\n\t\t\n\t\treturn switch (triangleFace) {\n\t\t\t\n\t\t\tcase FRONT: gl.FRONT;\n\t\t\tcase BACK: gl.BACK;\n\t\t\tcase FRONT_AND_BACK: gl.FRONT_AND_BACK;\n\t\t\tcase NONE: gl.NONE;\n\t\t\tdefault: gl.FRONT_AND_BACK;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __getGLStencilAction (stencilAction:Context3DStencilAction):Int {\n\t\t\n\t\treturn switch (stencilAction) {\n\t\t\t\n\t\t\tcase DECREMENT_SATURATE: gl.DECR;\n\t\t\tcase DECREMENT_WRAP: gl.DECR_WRAP;\n\t\t\tcase INCREMENT_SATURATE: gl.INCR;\n\t\t\tcase INCREMENT_WRAP: gl.INCR_WRAP;\n\t\t\tcase INVERT: gl.INVERT;\n\t\t\tcase KEEP: gl.KEEP;\n\t\t\tcase SET: gl.REPLACE;\n\t\t\tcase ZERO: gl.ZERO;\n\t\t\tdefault: gl.KEEP;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __hasGLExtension (name:String):Bool {\n\t\t\n\t\treturn (gl.getSupportedExtensions ().indexOf (name) != -1);\n\t\t\n\t}\n\t\n\t\n\tprivate static function __setViewport (originX:Int, originY:Int, width:Int, height:Int):Void {\n\t\t\n\t\tif (context.__renderToTexture != null) originY *= -1;\n\t\t\n\t\tif (Context3D.__stateCache.updateViewport (originX, originY, width, height)) {\n\t\t\t\n\t\t\tgl.viewport (originX, originY, width, height);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t// public function __statsAdd (stat:Int, value:Int):Int {\n\t\t\n\t// \t__stats[stat] += value;\n\t// \treturn __stats [stat];\n\t\t\n\t// }\n\t\n\t\n\t// public function __statsClear (stat:Int):Void {\n\t\t\n\t// \t__stats[stat] = 0;\n\t\t\n\t// }\n\t\n\t\n\t// public function __statsDecrement (stat:Int):Void {\n\t\t\n\t// \t__stats[stat] -= 1;\n\t\t\n\t// }\n\t\n\t\n\t// public function __statsIncrement (stat:Int):Void {\n\t\t\n\t// \t__stats[stat] += 1;\n\t\t\n\t// }\n\t\n\t\n\t// private function __statsSendToTelemetry ():Void {\n\t\t\n\t// \t#if telemetry\n\t\t/*if (!Telemetry.Session.Connected) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__statsValues == null) {\n\t\t\t\n\t\t\t__statsValues = new Array<Telemetry.Value> (Context3DTelemetry.length);\n\t\t\t\n\t\t\t// TODO: Should Context3DTelemetry have a toString()?\n\t\t\t\n\t\t\tvar name:String;\n\t\t\t\n\t\t\tfor (i in 0...Context3DTelemetry.length) {\n\t\t\t\t\n\t\t\t\tswitch (i) {\n\t\t\t\t\t\n\t\t\t\t\tcase Context3DTelemetry.DRAW_CALLS: name = \".3d.resource.drawCalls\";\n\t\t\t\t\tdefault: name = \".3d.resource.\" + i.toString ().toLowerCase ().replace ('_', '.');\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__statsValues[i] = new Telemetry.Value (name);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (i in 0...Context3DTelemetry.length) {\n\t\t\t\n\t\t\tif (__stats[i] != __statsCache[i]) {\n\t\t\t\t\n\t\t\t\t__statsValues[i].WriteValue (__stats[i]);\n\t\t\t\t__statsCache[i] = __stats[i];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__valueFrame.WriteValue (__frameCount);*/\n\t// \t#end\n\t\t\n\t// }\n\t\n\t\n\t// public function __statsSubtract (stat:Int, value:Int):Int {\n\t\t\n\t// \t__stats[stat] -= value;\n\t// \treturn __stats [stat];\n\t\t\n\t// }\n\t\n\t\n\tprivate static function __updateDepthAndStencilState ():Void {\n\t\t\n\t\tvar depthAndStencil = context.__renderToTexture != null ? context.__rttDepthAndStencil : context.__backBufferEnableDepthAndStencil;\n\t\t\n\t\tif (depthAndStencil) {\n\t\t\t\n\t\t\tgl.enable (gl.DEPTH_TEST);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\tgl.enable (gl.STENCIL_TEST);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tgl.disable (gl.DEPTH_TEST);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\tgl.disable (gl.STENCIL_TEST);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function __updateBlendFactorsTEMP (context:Context3D):Void {\n\t\t\n\t\tGLContext3D.context = context;\n\t\tGLContext3D.gl = context.__renderSession.gl;\n\t\t\n\t\t__updateBlendFactors ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function __updateBlendFactors ():Void {\n\t\t\n\t\tif (Context3D.__stateCache._srcBlendFactor == null || Context3D.__stateCache._destBlendFactor == null) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar src = gl.ONE;\n\t\tvar dest = gl.ZERO;\n\t\tswitch (Context3D.__stateCache._srcBlendFactor) {\n\t\t\t\n\t\t\tcase Context3DBlendFactor.ONE: src = gl.ONE;\n\t\t\tcase Context3DBlendFactor.ZERO: src = gl.ZERO;\n\t\t\tcase Context3DBlendFactor.SOURCE_ALPHA: src = gl.SRC_ALPHA;\n\t\t\tcase Context3DBlendFactor.DESTINATION_ALPHA: src = gl.DST_ALPHA;\n\t\t\tcase Context3DBlendFactor.DESTINATION_COLOR: src = gl.DST_COLOR;\n\t\t\tcase Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA: src = gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tcase Context3DBlendFactor.ONE_MINUS_DESTINATION_ALPHA: src = gl.ONE_MINUS_DST_ALPHA;\n\t\t\tcase Context3DBlendFactor.ONE_MINUS_DESTINATION_COLOR: src = gl.ONE_MINUS_DST_COLOR;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalOperationError ();\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (Context3D.__stateCache._destBlendFactor) {\n\t\t\t\n\t\t\tcase Context3DBlendFactor.ONE: dest = gl.ONE;\n\t\t\tcase Context3DBlendFactor.ZERO: dest = gl.ZERO;\n\t\t\tcase Context3DBlendFactor.SOURCE_ALPHA: dest = gl.SRC_ALPHA;\n\t\t\tcase Context3DBlendFactor.SOURCE_COLOR: dest = gl.SRC_COLOR;\n\t\t\tcase Context3DBlendFactor.DESTINATION_ALPHA: dest = gl.DST_ALPHA;\n\t\t\tcase Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA: dest = gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tcase Context3DBlendFactor.ONE_MINUS_SOURCE_COLOR: dest = gl.ONE_MINUS_SRC_COLOR;\n\t\t\tcase Context3DBlendFactor.ONE_MINUS_DESTINATION_ALPHA: dest = gl.ONE_MINUS_DST_ALPHA;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalOperationError ();\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.enable (gl.BLEND);\n\t\tGLUtils.CheckGLError ();\n\t\tgl.blendFunc (src, dest);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function __updateScissorRectangle ():Void {\n\t\t\n\t\tif (context.__scissorRectangle == null) {\n\t\t\t\n\t\t\tgl.disable (gl.SCISSOR_TEST);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.enable (gl.SCISSOR_TEST);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tvar height = 0;\n\t\tvar offsetX = 0;\n\t\tvar offsetY = 0;\n\t\t\n\t\tif (context.__renderToTexture != null) {\n\t\t\n\t\t\tif (Std.is (context.__renderToTexture, Texture)) {\n\t\t\t\n\t\t\t\tvar texture2D:Texture = cast context.__renderToTexture;\n\t\t\t\theight = texture2D.__height;\n\t\t\t\n\t\t\t} else if (Std.is (context.__renderToTexture, RectangleTexture)) {\n\t\t\t\t\n\t\t\t\tvar rectTexture:RectangleTexture = cast context.__renderToTexture;\n\t\t\t\theight = rectTexture.__height;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\theight = context.backBufferHeight;\n\t\t\toffsetX = Std.int (context.__stage3D.x);\n\t\t\toffsetY = Std.int (context.__stage3D.y);\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.scissor (Std.int (context.__scissorRectangle.x) + offsetX,\n\t\t\theight - Std.int (context.__scissorRectangle.y) - Std.int (context.__scissorRectangle.height) + offsetY,\n\t\t\tStd.int (context.__scissorRectangle.width),\n\t\t\tStd.int (context.__scissorRectangle.height)\n\t\t);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function __updateBackbufferViewportTEMP (context:Context3D):Void {\n\t\t\n\t\tGLContext3D.context = context;\n\t\tGLContext3D.gl = context.__renderSession.gl;\n\t\t\n\t\t__updateBackbufferViewport ();\n\t\t\n\t}\n\t\n\t\n\tprivate static function __updateBackbufferViewport ():Void {\n\t\t\n\t\tif (!Stage3D.__active) {\n\t\t\t\n\t\t\tStage3D.__active = true;\n\t\t\tcontext.__renderSession.renderer.clear ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (context.__renderToTexture == null && context.backBufferWidth > 0 && context.backBufferHeight > 0) {\n\t\t\t\n\t\t\t__setViewport (Std.int (context.__stage3D.x), Std.int (context.__stage3D.y), context.backBufferWidth, context.backBufferHeight);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D.opengl;\n\n\nimport lime.utils.ArrayBufferView;\nimport lime.utils.UInt8Array;\nimport lime.graphics.GLRenderContext;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.stage3D.atf.ATFReader;\nimport openfl._internal.stage3D.atf.ATFGPUFormat;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.display3D.textures.CubeTexture;\nimport openfl.display3D.Context3D;\nimport openfl.display.BitmapData;\nimport openfl.errors.IllegalOperationError;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.stage3D.SamplerState)\n@:access(openfl.display3D.textures.CubeTexture)\n@:access(openfl.display3D.Context3D)\n\n\nclass GLCubeTexture {\n\t\n\t\n\tpublic static function create (cubeTexture:CubeTexture, renderSession:RenderSession):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tcubeTexture.__textureTarget = gl.TEXTURE_CUBE_MAP;\n\t\tcubeTexture.__uploadedSides = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadCompressedTextureFromByteArray (cubeTexture:CubeTexture, renderSession:RenderSession, data:ByteArray, byteArrayOffset:UInt):Void {\n\t\t\n\t\tvar reader = new ATFReader(data, byteArrayOffset);\n\t\tvar alpha = reader.readHeader (cubeTexture.__size, cubeTexture.__size, true);\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tgl.bindTexture (cubeTexture.__textureTarget, cubeTexture.__textureID);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\treader.readTextures (function(side, level, gpuFormat, width, height, blockLength, bytes) {\n\t\t\t\n\t\t\tvar format = GLTextureBase.__compressedTextureFormats.toTextureFormat(alpha, gpuFormat);\n\t\t\tif (format == 0) return;\n\t\t\t\n\t\t\tvar target = __sideToTarget(gl, side);\n\t\t\t\n\t\t\tcubeTexture.__format = format;\n\t\t\t\n\t\t\tgl.compressedTexImage2D (target, level, cubeTexture.__format, width, height, 0, blockLength, bytes);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\t// __trackCompressedMemoryUsage (blockLength);\n\t\t\t\n\t\t});\n\n\t\tgl.bindTexture (cubeTexture.__textureTarget, null);\n\t\tGLUtils.CheckGLError ();\n\n\t}\n\t\n\t\n\tpublic static function uploadFromBitmapData (cubeTexture:CubeTexture, renderSession:RenderSession, source:BitmapData, side:UInt, miplevel:UInt = 0, generateMipmap:Bool = false):Void {\n\t\t\n\t\tvar size = cubeTexture.__size >> miplevel;\n\t\tif (size == 0) return;\n\t\t\n\t\t//if (source.width != size || source.height != size) {\n\t\t\t//\n\t\t\t//var copy = new BitmapData (size, size, true, 0);\n\t\t\t//copy.draw (source);\n\t\t\t//source = copy;\n\t\t\t//\n\t\t//}\n\t\t\n\t\tvar image = cubeTexture.__getImage (source);\n\t\t\n\t\tuploadFromTypedArray (cubeTexture, renderSession, image.data, side, miplevel);\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromByteArray (cubeTexture:CubeTexture, renderSession:RenderSession, data:ByteArray, byteArrayOffset:UInt, side:UInt, miplevel:UInt):Void {\n\t\t\n\t\t#if js\n\t\tif (byteArrayOffset == 0) {\n\t\t\t\n\t\t\tuploadFromTypedArray (cubeTexture, renderSession, @:privateAccess (data:ByteArrayData).b, side, miplevel);\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tuploadFromTypedArray (cubeTexture, renderSession, new UInt8Array (data.toArrayBuffer (), byteArrayOffset), side, miplevel);\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromTypedArray (cubeTexture:CubeTexture, renderSession:RenderSession, data:ArrayBufferView, side:UInt, miplevel:UInt):Void {\n\t\t\n\t\tif (data == null) return;\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tvar size = cubeTexture.__size >> miplevel;\n\t\tif (size == 0) return;\n\t\t\n\t\tvar target = __sideToTarget(gl, side);\n\t\t\n\t\tgl.bindTexture (gl.TEXTURE_CUBE_MAP, cubeTexture.__textureID);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.texImage2D (target, miplevel, cubeTexture.__internalFormat, size, size, 0, cubeTexture.__format, gl.UNSIGNED_BYTE, data);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.bindTexture (cubeTexture.__textureTarget, null);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tcubeTexture.__uploadedSides |= 1 << side;\n\t\t\n\t\t// var memUsage = (__size * __size) * 4;\n\t\t// __trackMemoryUsage (memUsage);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setSamplerState (cubeTexture:CubeTexture, renderSession:RenderSession, state:SamplerState) {\n\t\t\n\t\tif (!state.equals (cubeTexture.__samplerState)) {\n\t\t\t\n\t\t\tvar gl = renderSession.gl;\n\t\t\t\n\t\t\tif (state.minFilter != gl.NEAREST && state.minFilter != gl.LINEAR && !state.mipmapGenerated) {\n\t\t\t\t\n\t\t\t\tgl.generateMipmap (gl.TEXTURE_CUBE_MAP);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t\tstate.mipmapGenerated = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (state.maxAniso != 0.0) {\n\t\t\t\t\n\t\t\t\tgl.texParameterf (gl.TEXTURE_CUBE_MAP, Context3D.TEXTURE_MAX_ANISOTROPY_EXT, state.maxAniso);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tGLTextureBase.setSamplerState (cubeTexture, renderSession, state);\n\t\t\n\t}\n\t\n\t\n\tprivate static function __sideToTarget (gl:GLRenderContext, side:UInt) {\n\t\t\n\t\treturn switch (side) {\n\t\t\t\n\t\t\tcase 0: gl.TEXTURE_CUBE_MAP_NEGATIVE_X;\n\t\t\tcase 1: gl.TEXTURE_CUBE_MAP_POSITIVE_X;\n\t\t\tcase 2: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y;\n\t\t\tcase 3: gl.TEXTURE_CUBE_MAP_POSITIVE_Y;\n\t\t\tcase 4: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z;\n\t\t\tcase 5: gl.TEXTURE_CUBE_MAP_POSITIVE_Z;\n\t\t\tdefault: throw new IllegalOperationError ();\n\t\t\t\n\t\t}\n\n\t}\n\t\n\t\n}","package openfl._internal.stage3D.opengl;\n\n\nimport lime.graphics.opengl.WebGLContext;\nimport lime.utils.ArrayBufferView;\nimport lime.utils.Int16Array;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl.display3D.Context3DBufferUsage;\nimport openfl.display3D.IndexBuffer3D;\nimport openfl.utils.ByteArray;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.IndexBuffer3D)\n\n\nclass GLIndexBuffer3D {\n\t\n\t\n\tpublic static function create (indexBuffer:IndexBuffer3D, renderSession:RenderSession, bufferUsage:Context3DBufferUsage):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tindexBuffer.__elementType = gl.UNSIGNED_SHORT;\n\t\t\n\t\tindexBuffer.__id = gl.createBuffer ();\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tindexBuffer.__usage = (bufferUsage == Context3DBufferUsage.DYNAMIC_DRAW) ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\t\t\n\t\t// __context.__statsIncrement (Context3D.Context3DTelemetry.COUNT_INDEX_BUFFER);\n\t\t// __memoryUsage = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic static function dispose (indexBuffer:IndexBuffer3D, renderSession:RenderSession):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tgl.deleteBuffer (indexBuffer.__id);\n\t\t\n\t\t// __context.__statsDecrement(Context3D.Context3DTelemetry.COUNT_INDEX_BUFFER);\n\t\t// __context.__statsSubtract(Context3D.Context3DTelemetry.MEM_INDEX_BUFFER, __memoryUsage);\n\t\t// __memoryUsage = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromByteArray (indexBuffer:IndexBuffer3D, renderSession:RenderSession, data:ByteArray, byteArrayOffset:Int, startOffset:Int, count:Int):Void {\n\t\t\n\t\tvar offset = byteArrayOffset + startOffset * 2;\n\t\t\n\t\tuploadFromTypedArray (indexBuffer, renderSession, new Int16Array (data.toArrayBuffer (), offset, count));\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromTypedArray (indexBuffer:IndexBuffer3D, renderSession:RenderSession, data:ArrayBufferView):Void {\n\t\t\n\t\tif (data == null) return;\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tgl.bindBuffer (gl.ELEMENT_ARRAY_BUFFER, indexBuffer.__id);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\t#if (js && html5)\n\t\t(gl:WebGLContext).bufferData (gl.ELEMENT_ARRAY_BUFFER, data, indexBuffer.__usage);\n\t\t#else\n\t\tgl.bufferData (gl.ELEMENT_ARRAY_BUFFER, data.byteLength, data, indexBuffer.__usage);\n\t\t#end\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\t// if (data.byteLength != __memoryUsage) {\n\t\t\t\n\t\t// \t__context.__statsAdd (Context3D.Context3DTelemetry.MEM_INDEX_BUFFER, data.byteLength - __memoryUsage);\n\t\t// \t__memoryUsage = data.byteLength;\n\t\t\t\n\t\t// }\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromVector (indexBuffer:IndexBuffer3D, renderSession:RenderSession, data:Vector<UInt>, startOffset:Int, count:Int):Void {\n\t\t\n\t\t// TODO: Optimize more\n\t\t\n\t\tif (data == null) return;\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tvar length = startOffset + count;\n\t\tvar existingInt16Array = indexBuffer.__tempInt16Array;\n\t\t\n\t\tif (indexBuffer.__tempInt16Array == null || indexBuffer.__tempInt16Array.length < count) {\n\t\t\t\n\t\t\tindexBuffer.__tempInt16Array = new Int16Array (count);\n\t\t\t\n\t\t\tif (existingInt16Array != null) {\n\t\t\t\t\n\t\t\t\tindexBuffer.__tempInt16Array.set (existingInt16Array);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (i in startOffset...length) {\n\t\t\t\n\t\t\tindexBuffer.__tempInt16Array[i - startOffset] = data[i];\n\t\t\t\n\t\t}\n\t\t\n\t\tuploadFromTypedArray (indexBuffer, renderSession, indexBuffer.__tempInt16Array);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D.opengl;\n\n\nimport lime.graphics.opengl.GL;\nimport lime.graphics.GLRenderContext;\nimport lime.utils.BytePointer;\nimport lime.utils.Float32Array;\nimport lime.utils.Log;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.stage3D.AGALConverter;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.display3D.Context3D;\nimport openfl.display3D.Program3D;\nimport openfl.errors.Error;\nimport openfl.errors.IllegalOperationError;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.Context3D)\n@:access(openfl.display3D.Program3D)\n\n\nclass GLProgram3D {\n\t\n\t\n\tprivate static var program:Program3D;\n\tprivate static var renderSession:RenderSession;\n\t\n\t\n\tpublic static function dispose (program:Program3D, renderSession:RenderSession):Void {\n\t\t\n\t\tGLProgram3D.program = program;\n\t\tGLProgram3D.renderSession = renderSession;\n\t\t\n\t\t__deleteShaders ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function flushUniform (uniform:Uniform, gl:GLRenderContext):Void {\n\t\t\n\t\tvar index:Int = uniform.regIndex * 4;\n\t\tswitch (uniform.type) {\n\t\t\t\n\t\t\tcase GL.FLOAT_MAT2: gl.uniformMatrix2fv (uniform.location, uniform.size, false, __getUniformRegisters (uniform, index, uniform.size * 2 * 2));\n\t\t\tcase GL.FLOAT_MAT3: gl.uniformMatrix3fv (uniform.location, uniform.size, false, __getUniformRegisters (uniform, index, uniform.size * 3 * 3));\n\t\t\tcase GL.FLOAT_MAT4: gl.uniformMatrix4fv (uniform.location, uniform.size, false, __getUniformRegisters (uniform, index, uniform.size * 4 * 4));\n\t\t\tcase GL.FLOAT_VEC2: gl.uniform2fv (uniform.location, uniform.regCount, __getUniformRegisters (uniform, index, uniform.regCount * 2));\n\t\t\tcase GL.FLOAT_VEC3: gl.uniform3fv (uniform.location, uniform.regCount, __getUniformRegisters (uniform, index, uniform.regCount * 3));\n\t\t\tcase GL.FLOAT_VEC4: gl.uniform4fv (uniform.location, uniform.regCount, __getUniformRegisters (uniform, index, uniform.regCount * 4));\n\t\t\tdefault: gl.uniform4fv (uniform.location, uniform.regCount, __getUniformRegisters (uniform, index, uniform.regCount * 4));\n\t\t\t\n\t\t}\n\t\t\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function setPositionScale (program:Program3D, renderSession:RenderSession, positionScale:Float32Array):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\tgl.uniform4fv (program.__positionScale.location, 1, positionScale);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function upload (program:Program3D, renderSession:RenderSession, vertexProgram:ByteArray, fragmentProgram:ByteArray):Void {\n\t\t\n\t\tGLProgram3D.program = program;\n\t\tGLProgram3D.renderSession = renderSession;\n\t\t\n\t\t//var samplerStates = new Vector<SamplerState> (Context3D.MAX_SAMPLERS);\n\t\tvar samplerStates = new Array<SamplerState> ();\n\t\t\n\t\tvar glslVertex = AGALConverter.convertToGLSL (vertexProgram, null);\n\t\tvar glslFragment = AGALConverter.convertToGLSL (fragmentProgram, samplerStates);\n\t\t\n\t\t__uploadFromGLSL (glslVertex, glslFragment);\n\t\t\n\t\tfor (i in 0...samplerStates.length) {\n\t\t\t\n\t\t\tprogram.__samplerStates[i] = samplerStates[i];\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function use (program:Program3D, renderSession:RenderSession):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tgl.useProgram (program.__programID);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tprogram.__vertexUniformMap.markAllDirty ();\n\t\tprogram.__fragmentUniformMap.markAllDirty ();\n\t\t\n\t\tfor (sampler in program.__samplerUniforms) {\n\t\t\t\n\t\t\tif (sampler.regCount == 1) {\n\t\t\t\t\n\t\t\t\tgl.uniform1i (sampler.location, sampler.regIndex);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthrow new IllegalOperationError (\"!!! TODO: uniform location on webgl\");\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\t\tTODO: Figure out +i on Webgl.\n\t\t\t\t\t// sampler array?\n\t\t\t\t\tfor(i in 0...sampler.regCount) {\n\t\t\t\t\t\tgl.uniform1i(sampler.location + i, sampler.regIndex + i);\n\t\t\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (sampler in program.__alphaSamplerUniforms) {\n\t\t\t\n\t\t\tif (sampler.regCount == 1) {\n\t\t\t\t\n\t\t\t\tgl.uniform1i (sampler.location, sampler.regIndex);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthrow new IllegalOperationError (\"!!! TODO: uniform location on webgl\");\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\t\tTODO: Figure out +i on Webgl.\n\t\t\t\t\t// sampler array?\n\t\t\t\t\tfor(i in 0...sampler.regCount) {\n\t\t\t\t\t\tgl.uniform1i(sampler.location + i, sampler.regIndex + i);\n\t\t\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __buildUniformList ():Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tprogram.__uniforms.clear ();\n\t\tprogram.__samplerUniforms.clear ();\n\t\tprogram.__alphaSamplerUniforms.clear ();\n\t\t\n\t\tprogram.__samplerUsageMask = 0;\n\t\t\n\t\tvar numActive = 0;\n\t\tnumActive = gl.getProgramParameter (program.__programID, gl.ACTIVE_UNIFORMS);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tvar vertexUniforms = new List<Uniform> ();\n\t\tvar fragmentUniforms = new List<Uniform> ();\n\t\t\n\t\tfor (i in 0...numActive) {\n\t\t\t\n\t\t\tvar info = gl.getActiveUniform (program.__programID, i);\n\t\t\tvar name = info.name;\n\t\t\tvar size = info.size;\n\t\t\tvar uniformType = info.type;\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\tvar uniform = new Uniform (gl);\n\t\t\tuniform.name = name;\n\t\t\tuniform.size = size;\n\t\t\tuniform.type = uniformType;\n\t\t\t\n\t\t\tuniform.location = gl.getUniformLocation (program.__programID, uniform.name);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\tvar indexBracket = uniform.name.indexOf ('[');\n\t\t\t\n\t\t\tif (indexBracket >= 0) {\n\t\t\t\t\n\t\t\t\tuniform.name = uniform.name.substring (0, indexBracket);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (uniform.type) {\n\t\t\t\t\n\t\t\t\tcase GL.FLOAT_MAT2: uniform.regCount = 2;\n\t\t\t\tcase GL.FLOAT_MAT3: uniform.regCount = 3;\n\t\t\t\tcase GL.FLOAT_MAT4: uniform.regCount = 4;\n\t\t\t\tdefault: uniform.regCount = 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tuniform.regCount *= uniform.size;\n\t\t\t\n\t\t\tprogram.__uniforms.add (uniform);\n\t\t\t\n\t\t\tif (uniform.name == \"vcPositionScale\") {\n\t\t\t\t\n\t\t\t\tprogram.__positionScale = uniform;\n\t\t\t\t\n\t\t\t} else if (StringTools.startsWith (uniform.name, \"vc\")) {\n\t\t\t\t\n\t\t\t\tuniform.regIndex = Std.parseInt (uniform.name.substring (2));\n\t\t\t\tuniform.regData = program.__context.__vertexConstants;\n\t\t\t\tvertexUniforms.add (uniform);\n\t\t\t\t\n\t\t\t} else if (StringTools.startsWith (uniform.name, \"fc\")) {\n\t\t\t\t\n\t\t\t\tuniform.regIndex = Std.parseInt (uniform.name.substring (2));\n\t\t\t\tuniform.regData = program.__context.__fragmentConstants;\n\t\t\t\tfragmentUniforms.add (uniform);\n\t\t\t\t\n\t\t\t} else if (StringTools.startsWith (uniform.name, \"sampler\") && !StringTools.endsWith (uniform.name, \"_alpha\")) {\n\t\t\t\t\n\t\t\t\tuniform.regIndex = Std.parseInt (uniform.name.substring (7));\n\t\t\t\tprogram.__samplerUniforms.add (uniform);\n\t\t\t\t\n\t\t\t\tfor (reg in 0...uniform.regCount) {\n\t\t\t\t\t\n\t\t\t\t\tprogram.__samplerUsageMask |= (1 << (uniform.regIndex + reg));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (StringTools.startsWith (uniform.name, \"sampler\") && StringTools.endsWith (uniform.name, \"_alpha\")) {\n\t\t\t\t\n\t\t\t\tvar len = uniform.name.indexOf (\"_\") - 7;\n\t\t\t\tuniform.regIndex = Std.parseInt (uniform.name.substring (7, 7 + len)) + 4;\n\t\t\t\tprogram.__alphaSamplerUniforms.add (uniform);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (Log.level == LogLevel.VERBOSE) {\n\t\t\t\t\n\t\t\t\ttrace ('${i} name:${uniform.name} type:${uniform.type} size:${uniform.size} location:${uniform.location}');\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tprogram.__vertexUniformMap = new UniformMap (Lambda.array (vertexUniforms));\n\t\tprogram.__fragmentUniformMap = new UniformMap (Lambda.array (fragmentUniforms));\n\t\t\n\t}\n\t\n\t\n\tprivate static function __deleteShaders ():Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tif (program.__programID != null) {\n\t\t\t\n\t\t\t// this causes an exception EntryPoIntNotFound ..\n\t\t\t// gl.DeleteProgram (1, ref __programID  );\n\t\t\tprogram.__programID = null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (program.__vertexShaderID != null) {\n\t\t\t\n\t\t\tgl.deleteShader (program.__vertexShaderID);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\tprogram.__vertexShaderID = null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (program.__fragmentShaderID != null) {\n\t\t\t\n\t\t\tgl.deleteShader (program.__fragmentShaderID);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\tprogram.__fragmentShaderID = null;\n\t\t\t\n\t\t}\n\t\t\n\t\t// if (__memUsage != 0) {\n\t\t\t\n\t\t// \t__context.__statsDecrement (Context3D.Context3DTelemetry.COUNT_PROGRAM);\n\t\t// \t__context.__statsSubtract (Context3D.Context3DTelemetry.MEM_PROGRAM, __memUsage);\n\t\t// \t__memUsage = 0;\n\t\t\t\n\t\t// }\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tprivate static inline function __getUniformRegisters (uniform:Uniform, index:Int, size:Int):Float32Array {\n\t\t\n\t\treturn uniform.regData.subarray (index, index + size);\n\t\t\n\t}\n\t#else\n\tprivate static inline function __getUniformRegisters (uniform:Uniform, index:Int, size:Int):BytePointer {\n\t\t\n\t\tuniform.regDataPointer.set (uniform.regData, index * 4);\n\t\treturn uniform.regDataPointer;\n\t\t\n\t}\n\t#end\n\t\n\t\n\tprivate static function __uploadFromGLSL (vertexShaderSource:String, fragmentShaderSource:String):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\t__deleteShaders ();\n\t\t\n\t\tif (Log.level == LogLevel.VERBOSE) {\n\t\t\t\n\t\t\tLog.info (vertexShaderSource);\n\t\t\tLog.info (fragmentShaderSource);\n\t\t\t\n\t\t}\n\t\t\n\t\tprogram.__vertexSource = vertexShaderSource;\n\t\tprogram.__fragmentSource = fragmentShaderSource;\n\t\t\n\t\tprogram.__vertexShaderID = gl.createShader (gl.VERTEX_SHADER);\n\t\tgl.shaderSource (program.__vertexShaderID, vertexShaderSource);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.compileShader (program.__vertexShaderID);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tvar shaderCompiled = gl.getShaderParameter (program.__vertexShaderID, gl.COMPILE_STATUS);\n\t\t\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tif (shaderCompiled == 0) {\n\t\t\t\n\t\t\tvar vertexInfoLog = gl.getShaderInfoLog (program.__vertexShaderID);\n\t\t\t\n\t\t\tif (vertexInfoLog != null && vertexInfoLog.length != 0) {\n\t\t\t\t\n\t\t\t\ttrace ('vertex: ${vertexInfoLog}');\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthrow new Error (\"Error compiling vertex shader: \" + vertexInfoLog);\n\t\t\t\n\t\t}\n\t\t\n\t\tprogram.__fragmentShaderID = gl.createShader (gl.FRAGMENT_SHADER);\n\t\tgl.shaderSource (program.__fragmentShaderID, fragmentShaderSource);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.compileShader (program.__fragmentShaderID);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tvar fragmentCompiled = gl.getShaderParameter (program.__fragmentShaderID, gl.COMPILE_STATUS);\n\t\t\n\t\tif (fragmentCompiled == 0) {\n\t\t\t\n\t\t\tvar fragmentInfoLog = gl.getShaderInfoLog (program.__fragmentShaderID);\n\t\t\t\n\t\t\tif (fragmentInfoLog != null && fragmentInfoLog.length != 0) {\n\t\t\t\t\n\t\t\t\ttrace ('fragment: ${fragmentInfoLog}');\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthrow new Error (\"Error compiling fragment shader: \" + fragmentInfoLog);\n\t\t\t\n\t\t}\n\t\t\n\t\tprogram.__programID = gl.createProgram ();\n\t\tgl.attachShader (program.__programID, program.__vertexShaderID);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.attachShader (program.__programID, program.__fragmentShaderID);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tfor (i in 0...Context3D.MAX_ATTRIBUTES) {\n\t\t\t\n\t\t\tvar name = \"va\" + i;\n\t\t\t\n\t\t\tif (vertexShaderSource.indexOf (\" \" + name) != -1) {\n\t\t\t\t\n\t\t\t\tgl.bindAttribLocation (program.__programID, i, name);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.linkProgram (program.__programID);\n\t\t\n\t\tvar infoLog = gl.getProgramInfoLog (program.__programID);\n\t\t\n\t\tif (infoLog != null && infoLog.length != 0) {\n\t\t\t\n\t\t\ttrace ('program: ${infoLog}');\n\t\t\t\n\t\t}\n\t\t\n\t\t__buildUniformList ();\n\t\t\n\t\t// __memUsage = 1; // TODO, figure out a way to get this\n\t\t// __context.__statsIncrement (Context3D.Context3DTelemetry.COUNT_PROGRAM);\n\t\t// __context.__statsAdd (Context3D.Context3DTelemetry.MEM_PROGRAM, __memUsage);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D.opengl;\n\n\nimport lime.utils.ArrayBufferView;\nimport lime.utils.UInt8Array;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.display3D.textures.RectangleTexture;\nimport openfl.display3D.Context3D;\nimport openfl.display.BitmapData;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.stage3D.SamplerState)\n@:access(openfl.display3D.textures.RectangleTexture)\n@:access(openfl.display3D.Context3D)\n\n\nclass GLRectangleTexture {\n\t\n\t\n\tpublic static function create (rectangleTexture:RectangleTexture, renderSession:RenderSession):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\trectangleTexture.__textureTarget = gl.TEXTURE_2D;\n\t\tuploadFromTypedArray (rectangleTexture, renderSession, null);\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromBitmapData (rectangleTexture:RectangleTexture, renderSession:RenderSession, source:BitmapData):Void {\n\t\t\n\t\tif (source == null) return;\n\t\t\n\t\tvar image = rectangleTexture.__getImage (source);\n\t\t\n\t\tif (image == null) return;\n\t\t\n\t\tuploadFromTypedArray (rectangleTexture, renderSession, image.data);\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromByteArray (rectangleTexture:RectangleTexture, renderSession:RenderSession, data:ByteArray, byteArrayOffset:UInt):Void {\n\t\t\n\t\t#if js\n\t\tif (byteArrayOffset == 0) {\n\t\t\t\n\t\t\tuploadFromTypedArray (rectangleTexture, renderSession, @:privateAccess (data:ByteArrayData).b);\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tuploadFromTypedArray (rectangleTexture, renderSession, new UInt8Array (data.toArrayBuffer (), byteArrayOffset));\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromTypedArray (rectangleTexture:RectangleTexture, renderSession:RenderSession, data:ArrayBufferView):Void {\n\t\t\n\t\t//if (__format != Context3DTextureFormat.BGRA) {\n\t\t\t//\n\t\t\t//throw new IllegalOperationError ();\n\t\t\t//\n\t\t//}\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tgl.bindTexture (rectangleTexture.__textureTarget, rectangleTexture.__textureID);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.texImage2D (rectangleTexture.__textureTarget, 0, rectangleTexture.__internalFormat, rectangleTexture.__width, rectangleTexture.__height, 0, rectangleTexture.__format, gl.UNSIGNED_BYTE, data);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.bindTexture (rectangleTexture.__textureTarget, null);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\t// var memUsage = (__width * __height) * 4;\n\t\t// __trackMemoryUsage (memUsage);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setSamplerState (rectangleTexture:RectangleTexture, renderSession:RenderSession, state:SamplerState) {\n\t\t\n\t\tif (!state.equals (rectangleTexture.__samplerState)) {\n\t\t\t\n\t\t\tvar gl = renderSession.gl;\n\t\t\t\n\t\t\tif (state.maxAniso != 0.0) {\n\t\t\t\t\n\t\t\t\tgl.texParameterf (gl.TEXTURE_2D, Context3D.TEXTURE_MAX_ANISOTROPY_EXT, state.maxAniso);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tGLTextureBase.setSamplerState (rectangleTexture, renderSession, state);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D.opengl;\n\n\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl.display.Stage3D;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.stage3D.GLUtils)\n@:access(openfl.display3D.Context3D)\n@:access(openfl.display3D.Program3D)\n\n\nclass GLStage3D {\n\t\n\t\n\tpublic static inline function render (stage3D:Stage3D, renderSession:RenderSession):Void {\n\t\t\n\t\tif (stage3D.context3D != null) {\n\t\t\t\n\t\t\trenderSession.blendModeManager.setBlendMode (null);\n\t\t\t\n\t\t\tif (renderSession.shaderManager.currentShader != null) {\n\t\t\t\t\n\t\t\t\trenderSession.shaderManager.setShader (null);\n\t\t\t\t\n\t\t\t\tif (stage3D.context3D.__program != null) {\n\t\t\t\t\t\n\t\t\t\t\tstage3D.context3D.__program.__use ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (GLUtils.debug) {\n\t\t\t\n\t\t\trenderSession.gl.getError ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D.opengl;\n\n\nimport haxe.io.Bytes;\nimport lime.utils.ArrayBufferView;\nimport lime.utils.UInt8Array;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.stage3D.atf.ATFReader;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.display3D.textures.Texture;\nimport openfl.display3D.textures.TextureBase;\nimport openfl.display3D.Context3D;\nimport openfl.display.BitmapData;\nimport openfl.errors.IllegalOperationError;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.stage3D.SamplerState)\n@:access(openfl.display3D.textures.Texture)\n@:access(openfl.display3D.Context3D)\n\n\nclass GLTexture {\n\t\n\t\n\tpublic static function create (texture:Texture, renderSession:RenderSession):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\ttexture.__textureTarget = gl.TEXTURE_2D;\n\t\t\n\t\tgl.bindTexture (texture.__textureTarget, texture.__textureID);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.texImage2D (texture.__textureTarget, 0, texture.__internalFormat, texture.__width, texture.__height, 0, texture.__format, gl.UNSIGNED_BYTE, 0);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.bindTexture (texture.__textureTarget, null);\n\t\t\n\t\tuploadFromTypedArray (texture, renderSession, null);\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadCompressedTextureFromByteArray (texture:Texture, renderSession:RenderSession, data:ByteArray, byteArrayOffset:UInt):Void {\n\t\t\n\t\tvar reader = new ATFReader(data, byteArrayOffset);\n\t\tvar alpha = reader.readHeader (texture.__width, texture.__height, false);\n\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tgl.bindTexture (texture.__textureTarget, texture.__textureID);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\treader.readTextures (function(target, level, gpuFormat, width, height, blockLength, bytes) {\n\t\t\t\n\t\t\tvar format = GLTextureBase.__compressedTextureFormats.toTextureFormat(alpha, gpuFormat);\n\t\t\tif (format == 0) return;\n\t\t\t\n\t\t\ttexture.__format = format;\n\t\t\t\n\t\t\tgl.compressedTexImage2D (texture.__textureTarget, level, texture.__format, width, height, 0, blockLength, bytes);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\t// __trackCompressedMemoryUsage (blockLength);\n\t\t\t\n\t\t});\n\n\t\tgl.bindTexture (texture.__textureTarget, null);\n\t\tGLUtils.CheckGLError ();\n\n\t}\n\t\n\t\n\tpublic static function uploadFromBitmapData (texture:Texture, renderSession:RenderSession, source:BitmapData, miplevel:UInt, generateMipmap:Bool):Void {\n\t\t\n\t\t/* TODO\n\t\t\tif (LowMemoryMode) {\n\t\t\t\t// shrink bitmap data\n\t\t\t\tsource = source.shrinkToHalfResolution();\n\t\t\t\t// shrink our dimensions for upload\n\t\t\t\twidth = source.width;\n\t\t\t\theight = source.height;\n\t\t\t}\n\t\t\t*/\n\t\t\n\t\tif (source == null) return;\n\t\t\n\t\tvar width = texture.__width >> miplevel;\n\t\tvar height = texture.__height >> miplevel;\n\t\t\n\t\tif (width == 0 && height == 0) return;\n\t\t\n\t\tif (width == 0) width = 1;\n\t\tif (height == 0) height = 1;\n\t\t\n\t\tif (source.width != width || source.height != height) {\n\t\t\t\n\t\t\tvar copy = new BitmapData (width, height, true, 0);\n\t\t\tcopy.draw (source);\n\t\t\tsource = copy;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar image = texture.__getImage (source);\n\t\t\n\t\tuploadFromTypedArray (texture, renderSession, image.data, miplevel);\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromByteArray (texture:Texture, renderSession:RenderSession, data:ByteArray, byteArrayOffset:UInt, miplevel:UInt = 0):Void {\n\t\t\n\t\t#if js\n\t\tif (byteArrayOffset == 0) {\n\t\t\t\n\t\t\tuploadFromTypedArray (texture, renderSession, @:privateAccess (data:ByteArrayData).b, miplevel);\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tuploadFromTypedArray (texture, renderSession, new UInt8Array (data.toArrayBuffer (), byteArrayOffset), miplevel);\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromTypedArray (texture:Texture, renderSession:RenderSession, data:ArrayBufferView, miplevel:UInt = 0):Void {\n\t\t\n\t\tif (data == null) return;\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tvar width = texture.__width >> miplevel;\n\t\tvar height = texture.__height >> miplevel;\n\t\t\n\t\tif (width == 0 && height == 0) return;\n\t\t\n\t\tif (width == 0) width = 1;\n\t\tif (height == 0) height = 1;\n\t\t\n\t\tgl.bindTexture (texture.__textureTarget, texture.__textureID);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.texImage2D (texture.__textureTarget, miplevel, texture.__internalFormat, width, height, 0, texture.__format, gl.UNSIGNED_BYTE, data);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tgl.bindTexture (texture.__textureTarget, null);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\t// var memUsage = (width * height) * 4;\n\t\t// __trackMemoryUsage (memUsage);\n\t\t\n\t}\n\t\n\t\n\tpublic static function setSamplerState (texture:Texture, renderSession:RenderSession, state:SamplerState) {\n\t\t\n\t\tif (!state.equals (texture.__samplerState)) {\n\t\t\t\n\t\t\tvar gl = renderSession.gl;\n\t\t\t\n\t\t\tif (state.minFilter != gl.NEAREST && state.minFilter != gl.LINEAR && !state.mipmapGenerated) {\n\t\t\t\t\n\t\t\t\tgl.generateMipmap (gl.TEXTURE_2D);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t\tstate.mipmapGenerated = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (state.maxAniso != 0.0) {\n\t\t\t\t\n\t\t\t\tgl.texParameterf (gl.TEXTURE_2D, Context3D.TEXTURE_MAX_ANISOTROPY_EXT, state.maxAniso);\n\t\t\t\tGLUtils.CheckGLError ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tGLTextureBase.setSamplerState (texture, renderSession, state);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D.opengl;\n\n\nimport lime.graphics.utils.ImageCanvasUtil;\nimport lime.graphics.Image;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl._internal.stage3D.GLCompressedTextureFormats;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.display3D.textures.TextureBase;\nimport openfl.display.BitmapData;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.stage3D.SamplerState)\n@:access(openfl.display3D.textures.TextureBase)\n@:access(openfl.display.BitmapData)\n\n\nclass GLTextureBase {\n\t\n\t\n\tpublic static var __supportsBGRA:Null<Bool> = null;\n\tpublic static var __textureFormat:Int;\n\tpublic static var __textureInternalFormat:Int;\n\n\tpublic static var __compressedTextureFormats:Null<GLCompressedTextureFormats> = null;\n\t\n\t\n\tpublic static function create (textureBase:TextureBase, renderSession:RenderSession):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\ttextureBase.__textureID = gl.createTexture ();\n\t\ttextureBase.__textureContext = gl;\n\t\t\n\t\tif (__supportsBGRA == null) {\n\t\t\t\n\t\t\t__textureInternalFormat = gl.RGBA;\n\t\t\t\n\t\t\tvar bgraExtension = null;\n\t\t\t#if (!js || !html5)\n\t\t\tbgraExtension = gl.getExtension (\"EXT_bgra\");\n\t\t\tif (bgraExtension == null)\n\t\t\t\tbgraExtension = gl.getExtension (\"EXT_texture_format_BGRA8888\");\n\t\t\tif (bgraExtension == null)\n\t\t\t\tbgraExtension = gl.getExtension (\"APPLE_texture_format_BGRA8888\");\n\t\t\t#end\n\t\t\t\n\t\t\tif (bgraExtension != null) {\n\t\t\t\t\n\t\t\t\t__supportsBGRA = true;\n\t\t\t\t__textureFormat = bgraExtension.BGRA_EXT;\n\t\t\t\t\n\t\t\t\t#if (!ios && !tvos)\n\t\t\t\tif (gl.type == GLES) {\n\t\t\t\t\t\n\t\t\t\t\t__textureInternalFormat = bgraExtension.BGRA_EXT;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__supportsBGRA = false;\n\t\t\t\t__textureFormat = gl.RGBA;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tif (__compressedTextureFormats == null) {\n\n\t\t\t__compressedTextureFormats = new GLCompressedTextureFormats (gl);\n\t\t}\n\t\t\n\t\ttextureBase.__internalFormat = __textureInternalFormat;\n\t\ttextureBase.__format = __textureFormat;\n\t\t\n\t}\n\t\n\t\n\tpublic static function dispose (textureBase:TextureBase, renderSession:RenderSession):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tif (textureBase.__alphaTexture != null) {\n\t\t\t\n\t\t\ttextureBase.__alphaTexture.dispose ();\n\t\t\t\n\t\t}\n\t\t\n\t\tgl.deleteTexture (textureBase.__textureID);\n\t\t\n\t\t// if (__compressedMemoryUsage > 0) {\n\t\t\t\n\t\t// \t__context.__statsDecrement (Context3D.Context3DTelemetry.COUNT_TEXTURE_COMPRESSED);\n\t\t// \tvar currentCompressedMemory = __context.__statsSubtract (Context3D.Context3DTelemetry.MEM_TEXTURE_COMPRESSED, __compressedMemoryUsage);\n\t\t\t\n\t\t// \t#if debug\n\t\t// \tif (__outputTextureMemoryUsage) {\n\t\t\t\t\n\t\t// \t\ttrace (\" - Texture Compressed GPU Memory (-\" + __compressedMemoryUsage + \") - Current Compressed Memory : \" + currentCompressedMemory);\n\t\t\t\t\n\t\t// \t}\n\t\t// \t#end\n\t\t\t\n\t\t// \t__compressedMemoryUsage = 0;\n\t\t\t\n\t\t// }\n\t\t\n\t\t// if (__memoryUsage > 0) {\n\t\t\t\n\t\t// \t__context.__statsDecrement (Context3D.Context3DTelemetry.COUNT_TEXTURE);\n\t\t// \tvar currentMemory = __context.__statsSubtract (Context3D.Context3DTelemetry.MEM_TEXTURE, __memoryUsage);\n\t\t\t\n\t\t// \t#if debug\n\t\t// \tif (__outputTextureMemoryUsage) {\n\t\t\t\t\n\t\t// \t\ttrace (\" - Texture GPU Memory (-\" + __memoryUsage + \") - Current Memory : \" + currentMemory);\n\t\t\t\t\n\t\t// \t}\n\t\t// \t#end\n\t\t\t\n\t\t// \t__memoryUsage = 0;\n\t\t\t\n\t\t// }\n\t\t\n\t}\n\t\n\t\n\tpublic static function getImage (textureBase:TextureBase, renderSession:RenderSession, bitmapData:BitmapData):Image {\n\t\t\n\t\tvar image =\tbitmapData.image;\n\t\t\n\t\tif (!bitmapData.__isValid || image == null) {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if (js && html5)\n\t\tImageCanvasUtil.sync (image, false);\n\t\t#end\n\t\t\n\t\t#if (js && html5)\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tif (image.type != DATA && !image.premultiplied) {\n\t\t\t\n\t\t\tgl.pixelStorei (gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n\t\t\t\n\t\t} else if (!image.premultiplied && image.transparent) {\n\t\t\t\n\t\t\tgl.pixelStorei (gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\t\t\timage = image.clone ();\n\t\t\timage.premultiplied = true;\n\t\t\t\n\t\t}\n\t\t\n\t\t// TODO: Some way to support BGRA on WebGL?\n\t\t\n\t\tif (image.format != RGBA32) {\n\t\t\t\n\t\t\timage = image.clone ();\n\t\t\timage.format = RGBA32;\n\t\t\timage.buffer.premultiplied = true;\n\t\t\t#if openfl_power_of_two\n\t\t\timage.powerOfTwo = true;\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tif (#if openfl_power_of_two !image.powerOfTwo || #end (!image.premultiplied && image.transparent)) {\n\t\t\t\n\t\t\timage = image.clone ();\n\t\t\timage.premultiplied = true;\n\t\t\t#if openfl_power_of_two\n\t\t\timage.powerOfTwo = true;\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn image;\n\t\t\n\t}\n\t\n\t\n\tpublic static function setSamplerState (textureBase:TextureBase, renderSession:RenderSession, state:SamplerState):Void {\n\t\t\n\t\tif (!state.equals (textureBase.__samplerState)) {\n\t\t\t\n\t\t\tvar gl = renderSession.gl;\n\t\t\t\n\t\t\tgl.bindTexture (textureBase.__textureTarget, textureBase.__textureID);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\tgl.texParameteri (textureBase.__textureTarget, gl.TEXTURE_MIN_FILTER, state.minFilter);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\tgl.texParameteri (textureBase.__textureTarget, gl.TEXTURE_MAG_FILTER, state.magFilter);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\tgl.texParameteri (textureBase.__textureTarget, gl.TEXTURE_WRAP_S, state.wrapModeS);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\tgl.texParameteri (textureBase.__textureTarget, gl.TEXTURE_WRAP_T, state.wrapModeT);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\tif (state.lodBias != 0.0) {\n\t\t\t\t\n\t\t\t\t// TODO\n\t\t\t\t//throw new IllegalOperationError(\"Lod bias setting not supported yet\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\ttextureBase.__samplerState = state;\n\t\t\ttextureBase.__samplerState.__samplerDirty = false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D.opengl;\n\n\nimport haxe.io.Bytes;\nimport lime.graphics.opengl.WebGLContext;\nimport lime.utils.ArrayBufferView;\nimport lime.utils.Float32Array;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl.display3D.Context3DBufferUsage;\nimport openfl.display3D.VertexBuffer3D;\nimport openfl.utils.ByteArray;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.VertexBuffer3D)\n\n\nclass GLVertexBuffer3D {\n\t\n\t\n\tpublic static function create (vertexBuffer:VertexBuffer3D, renderSession:RenderSession, bufferUsage:Context3DBufferUsage) {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tvertexBuffer.__id = gl.createBuffer ();\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\tvertexBuffer.__stride = vertexBuffer.__vertexSize * 4;\n\t\t// __memoryUsage = 0;\n\t\t\n\t\tvertexBuffer.__usage = (bufferUsage == Context3DBufferUsage.DYNAMIC_DRAW) ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\t\t\n\t\t// __context.__statsIncrement (Context3D.Context3DTelemetry.COUNT_VERTEX_BUFFER);\n\t\t\n\t}\n\t\n\t\n\tpublic static function dispose (vertexBuffer:VertexBuffer3D, renderSession:RenderSession):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tgl.deleteBuffer (vertexBuffer.__id);\n\t\t\n\t\t// __context.__statsDecrement (Context3D.Context3DTelemetry.COUNT_VERTEX_BUFFER);\n\t\t// __context.__statsSubtract (Context3D.Context3DTelemetry.MEM_VERTEX_BUFFER, __memoryUsage);\n\t\t// __memoryUsage = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromByteArray (vertexBuffer:VertexBuffer3D, renderSession:RenderSession, data:ByteArray, byteArrayOffset:Int, startVertex:Int, numVertices:Int):Void {\n\t\t\n\t\tvar offset = byteArrayOffset + startVertex * vertexBuffer.__stride;\n\t\tvar length = numVertices * vertexBuffer.__vertexSize;\n\t\t\n\t\tuploadFromTypedArray (vertexBuffer, renderSession, new Float32Array (data, offset, length));\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromTypedArray (vertexBuffer:VertexBuffer3D, renderSession:RenderSession, data:ArrayBufferView):Void {\n\t\t\n\t\tif (data == null) return;\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, vertexBuffer.__id);\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\t#if (js && html5)\n\t\t(gl:WebGLContext).bufferData (gl.ARRAY_BUFFER, data, vertexBuffer.__usage);\n\t\t#else\n\t\tgl.bufferData (gl.ARRAY_BUFFER, data.byteLength, data, vertexBuffer.__usage);\n\t\t#end\n\t\tGLUtils.CheckGLError ();\n\t\t\n\t\t// if (data.byteLength != __memoryUsage) {\n\t\t\t\n\t\t// \t__context.__statsAdd (Context3D.Context3DTelemetry.MEM_VERTEX_BUFFER, data.byteLength - __memoryUsage);\n\t\t// \t__memoryUsage = data.byteLength;\n\t\t\t\n\t\t// }\n\t\t\n\t}\n\t\n\t\n\tpublic static function uploadFromVector (vertexBuffer:VertexBuffer3D, renderSession:RenderSession, data:Vector<Float>, startVertex:Int, numVertices:Int):Void {\n\t\t\n\t\tif (data == null) return;\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\t// TODO: Optimize more\n\t\t\n\t\tvar start = startVertex * vertexBuffer.__vertexSize;\n\t\tvar count = numVertices * vertexBuffer.__vertexSize;\n\t\tvar length = start + count;\n\t\t\n\t\tvar existingFloat32Array = vertexBuffer.__tempFloat32Array;\n\t\t\n\t\tif (vertexBuffer.__tempFloat32Array == null || vertexBuffer.__tempFloat32Array.length < count) {\n\t\t\t\n\t\t\tvertexBuffer.__tempFloat32Array = new Float32Array (count);\n\t\t\t\n\t\t\tif (existingFloat32Array != null) {\n\t\t\t\t\n\t\t\t\tvertexBuffer.__tempFloat32Array.set (existingFloat32Array);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (i in start...length) {\n\t\t\t\n\t\t\tvertexBuffer.__tempFloat32Array[i - start] = data[i];\n\t\t\t\n\t\t}\n\t\t\n\t\tuploadFromTypedArray (vertexBuffer, renderSession, vertexBuffer.__tempFloat32Array);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.stage3D.opengl;\n\n\nimport lime.graphics.opengl.GLTexture;\nimport lime.graphics.opengl.WebGLContext;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl.display3D.textures.VideoTexture;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.textures.VideoTexture)\n@:access(openfl.net.NetStream)\n\n\nclass GLVideoTexture {\n\t\n\t\n\tpublic static function create (videoTexture:VideoTexture, renderSession:RenderSession):Void {\n\t\t\n\t\tvar gl = renderSession.gl;\n\t\tvideoTexture.__textureTarget = gl.TEXTURE_2D;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getTexture (videoTexture:VideoTexture, renderSession:RenderSession):GLTexture {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tif (!videoTexture.__netStream.__video.paused) {\n\t\t\t\n\t\t\tvar gl = renderSession.gl;\n\t\t\t\n\t\t\tgl.bindTexture (videoTexture.__textureTarget, videoTexture.__textureID);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t\t(gl:WebGLContext).texImage2D (gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, videoTexture.__netStream.__video);\n\t\t\tGLUtils.CheckGLError ();\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn videoTexture.__textureID;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.swf;\n\n\nimport openfl.geom.Point;\nimport openfl.display.BitmapData;\nimport openfl.display.MovieClip;\nimport openfl.display.SimpleButton;\nimport openfl._internal.symbols.BitmapSymbol;\nimport openfl._internal.symbols.SpriteSymbol;\nimport openfl._internal.symbols.SWFSymbol;\nimport haxe.io.Bytes;\nimport haxe.Json;\nimport haxe.Serializer;\nimport haxe.Unserializer;\nimport openfl.Assets;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.symbols.SWFSymbol)\n\n\n@:keep class SWFLite {\n\t\n\t\n\tpublic static var instances = new Map<String, SWFLite> ();\n\t\n\tpublic var frameRate:Float;\n\tpublic var library:SWFLiteLibrary;\n\tpublic var root:SpriteSymbol;\n\tpublic var symbols:Map<Int, SWFSymbol>;\n\tpublic var frameSizeMinPixel:Point;\n\tpublic var frameSizeMaxPixel:Point;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsymbols = new Map <Int, SWFSymbol> ();\n\t\t\n\t\t// distinction of symbol by class name and characters by ID somewhere?\n\t\t\n\t}\n\t\n\t\n\tpublic function createButton (className:String):SimpleButton {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function createMovieClip (className:String = \"\"):MovieClip {\n\t\t\n\t\tif (className == \"\") {\n\t\t\t\n\t\t\treturn cast root.__createObject (this);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor (symbol in symbols) {\n\t\t\t\t\n\t\t\t\tif (symbol.className == className) {\n\t\t\t\t\t\n\t\t\t\t\tif (Std.is (symbol, SpriteSymbol)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn cast (symbol, SpriteSymbol).__createObject (this);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getBitmapData (className:String):BitmapData {\n\t\t\n\t\tfor (symbol in symbols) {\n\t\t\t\n\t\t\tif (symbol.className == className) {\n\t\t\t\t\n\t\t\t\tif (Std.is (symbol, BitmapSymbol)) {\n\t\t\t\t\t\n\t\t\t\t\tvar bitmap:BitmapSymbol = cast symbol;\n\t\t\t\t\treturn Assets.getBitmapData (bitmap.path);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function hasSymbol (className:String):Bool {\n\t\t\n\t\tfor (symbol in symbols) {\n\t\t\t\n\t\t\tif (symbol.className == className) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate static function resolveClass (name:String):Class<Dynamic> {\n\t\t\n\t\tvar value = Type.resolveClass (name);\n\t\t\n\t\t#if flash\n\t\t\n\t\tif (value == null) value = Type.resolveClass (StringTools.replace (name, \"openfl\", \"flash\"));\n\t\tif (value == null) value = Type.resolveClass (StringTools.replace (name, \"openfl._legacy\", \"flash\"));\n\t\tif (value == null) value = Type.resolveClass (StringTools.replace (name, \"openfl._v2\", \"flash\"));\n\t\t\n\t\t#elseif openfl_legacy\n\t\t\n\t\tif (value == null) value = Type.resolveClass (StringTools.replace (name, \"openfl\", \"openfl._legacy\"));\n\t\t\n\t\t#else\n\t\t\n\t\tif (value == null) value = Type.resolveClass (StringTools.replace (name, \"openfl._legacy\", \"openfl\"));\n\t\tif (value == null) value = Type.resolveClass (StringTools.replace (name, \"openfl._v2\", \"openfl\"));\n\t\t\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate static function resolveEnum (name:String):Enum<Dynamic> {\n\t\t\n\t\tvar value = Type.resolveEnum (name);\n\t\t\n\t\t#if flash\n\t\t\n\t\tif (value == null) value = Type.resolveEnum (StringTools.replace (name, \"openfl\", \"flash\"));\n\t\tif (value == null) value = Type.resolveEnum (StringTools.replace (name, \"openfl._legacy\", \"flash\"));\n\t\tif (value == null) value = Type.resolveEnum (StringTools.replace (name, \"openfl._v2\", \"flash\"));\n\t\tif (value == null) value = cast Type.resolveClass (name);\n\t\tif (value == null) value = cast Type.resolveClass (StringTools.replace (name, \"openfl\", \"flash\"));\n\t\tif (value == null) value = cast Type.resolveClass (StringTools.replace (name, \"openfl._legacy\", \"flash\"));\n\t\tif (value == null) value = cast Type.resolveClass (StringTools.replace (name, \"openfl._v2\", \"flash\"));\n\t\t\n\t\t#elseif openfl_legacy\n\t\t\n\t\tif (value == null) value = Type.resolveEnum (StringTools.replace (name, \"openfl\", \"openfl._legacy\"));\n\t\t\n\t\t#else\n\t\t\n\t\tif (value == null) value = Type.resolveEnum (StringTools.replace (name, \"openfl._legacy\", \"openfl\"));\n\t\tif (value == null) value = Type.resolveEnum (StringTools.replace (name, \"openfl._v2\", \"openfl\"));\n\t\t\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic function serialize ():String {\n\t\t\n\t\tvar serializer = new Serializer ();\n\t\tserializer.serialize (this);\n\t\treturn serializer.toString ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function unserialize (data:String):SWFLite {\n\t\t\n\t\tif (data == null) {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar unserializer = new Unserializer (data);\n\t\tunserializer.setResolver ({ resolveClass: resolveClass, resolveEnum: resolveEnum });\n\t\t\n\t\treturn cast unserializer.unserialize ();\n\t\t\n\t}\n\t\n\t\n}","package openfl.utils;\n\n\nimport lime.app.Future;\nimport lime.utils.AssetLibrary in LimeAssetLibrary;\nimport lime.utils.AssetManifest;\nimport openfl.display.MovieClip;\n\n\n@:dox(hide) class AssetLibrary extends LimeAssetLibrary {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:ByteArray, rootPath:String = null):AssetLibrary {\n\t\t\n\t\treturn cast fromManifest (AssetManifest.fromBytes (bytes, rootPath));\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String, rootPath:String = null):AssetLibrary {\n\t\t\n\t\treturn cast fromManifest (AssetManifest.fromFile (path, rootPath));\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromManifest (manifest:AssetManifest):#if java LimeAssetLibrary #else AssetLibrary #end {\n\t\t\n\t\tvar library = LimeAssetLibrary.fromManifest (manifest);\n\t\t\n\t\tif (library != null && Std.is (library, AssetLibrary)) {\n\t\t\t\n\t\t\treturn cast library;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getMovieClip (id:String):MovieClip {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromBytes (bytes:ByteArray, rootPath:String = null):#if java Future<LimeAssetLibrary> #else Future<AssetLibrary> #end {\n\t\t\n\t\treturn AssetManifest.loadFromBytes (bytes, rootPath).then (function (manifest) {\n\t\t\t\n\t\t\treturn loadFromManifest (manifest);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromFile (path:String, rootPath:String = null):#if java Future<LimeAssetLibrary> #else Future<AssetLibrary> #end {\n\t\t\n\t\treturn AssetManifest.loadFromFile (path, rootPath).then (function (manifest) {\n\t\t\t\n\t\t\treturn loadFromManifest (manifest);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromManifest (manifest:AssetManifest):#if java Future<LimeAssetLibrary> #else Future<AssetLibrary> #end {\n\t\t\n\t\tvar library:AssetLibrary = cast fromManifest (manifest);\n\t\t\n\t\tif (library != null && Std.is (library, AssetLibrary)) {\n\t\t\t\n\t\t\treturn library.load ().then (function (library) {\n\t\t\t\t\n\t\t\t\treturn Future.withValue (cast library);\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn cast Future.withError (\"Could not load asset manifest\");\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function loadMovieClip (id:String):Future<MovieClip> {\n\t\t\n\t\treturn new Future<MovieClip> (function () return getMovieClip (id));\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.swf;\n\n\nimport haxe.Unserializer;\nimport lime.app.Future;\nimport lime.app.Promise;\nimport lime.graphics.Image;\nimport lime.graphics.ImageChannel;\nimport lime.math.Vector2;\nimport lime.utils.AssetLibrary;\nimport lime.utils.AssetManifest;\nimport lime.utils.Assets in LimeAssets;\nimport openfl._internal.swf.SWFLite;\nimport openfl._internal.symbols.BitmapSymbol;\nimport openfl.display.BitmapData;\nimport openfl.display.Loader;\nimport openfl.display.MovieClip;\nimport openfl.events.Event;\nimport openfl.events.IOErrorEvent;\nimport openfl.media.Sound;\nimport openfl.net.URLLoader;\nimport openfl.net.URLRequest;\nimport openfl.text.Font;\nimport openfl.utils.Assets;\nimport openfl.utils.AssetLibrary;\nimport openfl.utils.AssetType;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:keep class SWFLiteLibrary extends AssetLibrary {\n\t\n\t\n\tprivate var alphaCheck:Map<String, Bool>;\n\tprivate var id:String;\n\tprivate var imageClassNames:Map<String, String>;\n\tprivate var preloading:Bool;\n\tprivate var rootPath:String;\n\tprivate var swf:SWFLite;\n\t\n\t\n\tpublic function new (id:String) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tthis.id = id;\n\t\t\n\t\talphaCheck = new Map ();\n\t\timageClassNames = new Map ();\n\t\t\n\t\t#if (ios || tvos)\n\t\trootPath = \"assets/\";\n\t\t#else\n\t\trootPath = \"\";\n\t\t#end\n\t\t\n\t\t// Hack to include filter classes, macro.include is not working properly\n\t\t\n\t\t//var filter = flash.filters.BlurFilter;\n\t\t//var filter = flash.filters.DropShadowFilter;\n\t\t//var filter = flash.filters.GlowFilter;\n\t\t\n\t}\n\t\n\t\n\tpublic override function exists (id:String, type:String):Bool {\n\t\t\n\t\tif (swf == null) return false;\n\t\t\n\t\tif (id == \"\" && type == (cast AssetType.MOVIE_CLIP)) {\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (type == (cast AssetType.IMAGE) || type == (cast AssetType.MOVIE_CLIP)) {\n\t\t\t\n\t\t\treturn (swf != null && swf.hasSymbol (id));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic override function getImage (id:String):Image {\n\t\t\n\t\tif (imageClassNames.exists (id)) {\n\t\t\t\n\t\t\tid = imageClassNames.get (id);\n\t\t\t\n\t\t}\n\t\t\n\t\t// TODO: Better system?\n\t\t\n\t\tif (!alphaCheck.exists (id)) {\n\t\t\t\n\t\t\tfor (symbol in swf.symbols) {\n\t\t\t\t\n\t\t\t\tif (Std.is (symbol, BitmapSymbol) && cast (symbol, BitmapSymbol).path == id) {\n\t\t\t\t\t\n\t\t\t\t\tvar bitmapSymbol:BitmapSymbol = cast symbol;\n\t\t\t\t\t\n\t\t\t\t\tif (bitmapSymbol.alpha != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar image = super.getImage (id);\n\t\t\t\t\t\tvar alpha = super.getImage (bitmapSymbol.alpha);\n\t\t\t\t\t\t\n\t\t\t\t\t\t__copyChannel (image, alpha);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcachedImages.set (id, image);\n\t\t\t\t\t\tcachedImages.remove (bitmapSymbol.alpha);\n\t\t\t\t\t\talphaCheck.set (id, true);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn image;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn super.getImage (id);\n\t\t\n\t}\n\t\n\t\n\tpublic override function getMovieClip (id:String):MovieClip {\n\t\tvar mc : MovieClip = (swf != null) ? swf.createMovieClip (id) : null;\n\t\tif(mc != null){\n\t\t\tmc.__enterFrame(0);\n\t\t}\n\t\treturn mc;\n\t\t\n\t}\n\t\n\t\n\tpublic override function isLocal (id:String, type:String):Bool {\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tpublic override function load ():Future<lime.utils.AssetLibrary> {\n\t\t\n\t\tif (id != null) {\n\t\t\t\n\t\t\tpreload.set (id, true);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar promise = new Promise<lime.utils.AssetLibrary> ();\n\t\tpreloading = true;\n\t\t\n\t\tvar onComplete = function (data) {\n\t\t\t\n\t\t\tcachedText.set (id, data);\n\t\t\t\n\t\t\tswf = SWFLite.unserialize (data);\n\t\t\tswf.library = this;\n\t\t\t\n\t\t\tvar bitmapSymbol:BitmapSymbol;\n\t\t\t\n\t\t\tfor (symbol in swf.symbols) {\n\t\t\t\t\n\t\t\t\tif (Std.is (symbol, BitmapSymbol)) {\n\t\t\t\t\t\n\t\t\t\t\tbitmapSymbol = cast symbol;\n\t\t\t\t\t\n\t\t\t\t\tif (bitmapSymbol.className != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\timageClassNames.set (bitmapSymbol.className, bitmapSymbol.path);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tSWFLite.instances.set (id, swf);\n\t\t\t\n\t\t\t__load ().onProgress (promise.progress).onError (promise.error).onComplete (function (_) {\n\t\t\t\t\n\t\t\t\tpreloading = false;\n\t\t\t\tpromise.complete (this);\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t}\n\t\t\n\t\tif (Assets.exists (id)) {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\tfor (id in paths.keys ()) {\n\t\t\t\t\n\t\t\t\tpreload.set (id, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t#end\n\t\t\t\n\t\t\tloadText (id).onError (promise.error).onComplete (onComplete);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor (id in paths.keys ()) {\n\t\t\t\t\n\t\t\t\tpreload.set (id, true);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar path = (rootPath != null && rootPath != \"\") ? rootPath + \"/\" + id : id;\n\t\t\t\n\t\t\tvar loader = new URLLoader ();\n\t\t\tloader.addEventListener (Event.COMPLETE, function (_) onComplete (loader.data));\n\t\t\tloader.addEventListener (IOErrorEvent.IO_ERROR, function (e) promise.error (e));\n\t\t\tloader.load (new URLRequest (path));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic override function loadImage (id:String):Future<Image> {\n\t\t\n\t\tif (imageClassNames.exists (id)) {\n\t\t\t\n\t\t\tid = imageClassNames.get (id);\n\t\t\t\n\t\t}\n\t\t\n\t\t// TODO: Better system?\n\t\t\n\t\tif (#if (swf_preload || swflite_preload) true #else !preloading #end && !alphaCheck.exists (id)) {\n\t\t\t\n\t\t\tfor (symbol in swf.symbols) {\n\t\t\t\t\n\t\t\t\tif (Std.is (symbol, BitmapSymbol) && cast (symbol, BitmapSymbol).path == id) {\n\t\t\t\t\t\n\t\t\t\t\tvar bitmapSymbol:BitmapSymbol = cast symbol;\n\t\t\t\t\t\n\t\t\t\t\tif (bitmapSymbol.alpha != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar promise = new Promise<Image> ();\n\t\t\t\t\t\t\n\t\t\t\t\t\t__loadImage (id).onError (promise.error).onComplete (function (image) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t__loadImage (bitmapSymbol.alpha).onError (promise.error).onComplete (function (alpha) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t__copyChannel (image, alpha);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcachedImages.set (id, image);\n\t\t\t\t\t\t\t\tcachedImages.remove (bitmapSymbol.alpha);\n\t\t\t\t\t\t\t\talphaCheck.set (id, true);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tpromise.complete (image);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn promise.future;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn super.loadImage (id);\n\t\t\n\t}\n\t\n\t\n\tpublic override function unload ():Void {\n\t\t\n\t\tif (swf == null) return;\n\t\t\n\t\tvar bitmap:BitmapSymbol;\n\t\t\n\t\tfor (symbol in swf.symbols) {\n\t\t\t\n\t\t\tif (Std.is (symbol, BitmapSymbol)) {\n\t\t\t\t\n\t\t\t\tbitmap = cast symbol;\n\t\t\t\tAssets.cache.removeBitmapData (bitmap.path);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __copyChannel (image:Image, alpha:Image):Void {\n\t\t\n\t\tif (alpha != null) {\n\t\t\t\n\t\t\timage.copyChannel (alpha, alpha.rect, new Vector2 (), ImageChannel.RED, ImageChannel.ALPHA);\n\t\t\t\n\t\t}\n\t\t\n\t\timage.buffer.premultiplied = true;\n\t\t\n\t\t#if !sys\n\t\timage.premultiplied = false;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __fromManifest (manifest:AssetManifest):Void {\n\t\t\n\t\trootPath = manifest.rootPath;\n\t\tsuper.__fromManifest (manifest);\n\t\t\n\t}\n\t\n\t\n\tprivate function __load ():Future<lime.utils.AssetLibrary> {\n\t\t\n\t\treturn super.load ();\n\t\t\n\t}\n\t\n\t\n\tprivate function __loadImage (id:String):Future<Image> {\n\t\t\n\t\treturn super.loadImage (id);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.symbols;\n\n\nimport openfl._internal.swf.SWFLite;\nimport openfl.display.DisplayObject;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:keepSub class SWFSymbol {\n\t\n\t\n\tpublic var className:String;\n\tpublic var id:Int;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function __createObject (swf:SWFLite):DisplayObject {\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.symbols;\n\n\nimport lime.graphics.ImageChannel;\nimport lime.math.Vector2;\nimport lime.Assets in LimeAssets;\nimport openfl._internal.swf.SWFLite;\nimport openfl.display.Bitmap;\nimport openfl.display.BitmapData;\nimport openfl.display.PixelSnapping;\nimport openfl.Assets;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass BitmapSymbol extends SWFSymbol {\n\t\n\t\n\tpublic var alpha:String;\n\tpublic var path:String;\n\tpublic var smooth:Null<Bool>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t}\n\t\n\t\n\tprivate override function __createObject (swf:SWFLite):Bitmap {\n\t\t\n\t\treturn new Bitmap (BitmapData.fromImage (swf.library.getImage (path)), PixelSnapping.AUTO, smooth != false);\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.symbols;\n\n\nimport openfl._internal.swf.SWFLite;\nimport openfl.display.SimpleButton;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.SimpleButton)\n\n\nclass ButtonSymbol extends SWFSymbol {\n\t\n\t\n\tpublic var downState:SpriteSymbol;\n\tpublic var hitState:SpriteSymbol;\n\tpublic var overState:SpriteSymbol;\n\tpublic var upState:SpriteSymbol;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t}\n\t\n\t\n\tprivate override function __createObject (swf:SWFLite):SimpleButton {\n\t\t\n\t\tvar simpleButton:SimpleButton = null;\n\t\t\n\t\tSimpleButton.__initSWF = swf;\n\t\tSimpleButton.__initSymbol = this;\n\t\t\n\t\tif (className != null) {\n\t\t\t\n\t\t\tvar symbolType = Type.resolveClass (className);\n\t\t\t\n\t\t\tif (symbolType != null) {\n\t\t\t\t\n\t\t\t\tsimpleButton = Type.createInstance (symbolType, []);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t//Log.warn (\"Could not resolve class \\\"\" + symbol.className + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (simpleButton == null) {\n\t\t\t\n\t\t\tsimpleButton = new SimpleButton ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn simpleButton;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.symbols;\n\n\nimport openfl._internal.swf.SWFLite;\nimport openfl.text.TextField;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.text.TextField)\n\n\nclass DynamicTextSymbol extends SWFSymbol {\n\t\n\t\n\tpublic var align:/*TextFormatAlign*/String;\n\tpublic var border:Bool;\n\tpublic var color:Null<Int>;\n\tpublic var fontHeight:Int;\n\tpublic var fontID:Int;\n\tpublic var fontName:String;\n\tpublic var height:Float;\n\tpublic var html:Bool;\n\tpublic var indent:Null<Int>;\n\tpublic var input:Bool;\n\tpublic var leading:Null<Int>;\n\tpublic var leftMargin:Null<Int>;\n\tpublic var multiline:Bool;\n\tpublic var password:Bool;\n\tpublic var rightMargin:Null<Int>;\n\tpublic var selectable:Bool;\n\tpublic var text:String;\n\tpublic var width:Float;\n\tpublic var wordWrap:Bool;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t}\n\t\n\t\n\tprivate override function __createObject (swf:SWFLite):TextField {\n\t\t\n\t\tvar textField = new TextField ();\n\t\ttextField.__fromSymbol (swf, this);\n\t\treturn textField;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.symbols;\n\n\nimport openfl._internal.swf.ShapeCommand;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass FontSymbol extends SWFSymbol {\n\t\n\t\n\tpublic var advances:Array<Int>;\n\tpublic var ascent:Int;\n\tpublic var bold:Bool;\n\tpublic var codes:Array<Int>;\n\tpublic var descent:Int;\n\tpublic var glyphs:Array<Array<ShapeCommand>>;\n\tpublic var italic:Bool;\n\tpublic var leading:Int;\n\tpublic var name:String;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.symbols;\n\n\nimport openfl._internal.swf.ShapeCommand;\nimport openfl._internal.swf.SWFLite;\nimport openfl.display.BitmapData;\nimport openfl.display.Shape;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.symbols.BitmapSymbol)\n\n\nclass ShapeSymbol extends SWFSymbol {\n\t\n\t\n\tpublic var commands:Array<ShapeCommand>;\n\tpublic var rendered:Shape;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t}\n\t\n\t\n\tprivate override function __createObject (swf:SWFLite):Shape {\n\t\t\n\t\tvar shape = new Shape ();\n\t\tvar graphics = shape.graphics;\n\t\t\n\t\tif (rendered != null) {\n\t\t\t\n\t\t\tgraphics.copyFrom (rendered.graphics);\n\t\t\treturn shape;\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (command in commands) {\n\t\t\t\n\t\t\tswitch (command) {\n\t\t\t\t\n\t\t\t\tcase BeginFill (color, alpha):\n\t\t\t\t\t\n\t\t\t\t\tgraphics.beginFill (color, alpha);\n\t\t\t\t\n\t\t\t\tcase BeginBitmapFill (bitmapID, matrix, repeat, smooth):\n\t\t\t\t\t\n\t\t\t\t\tvar bitmapSymbol:BitmapSymbol = cast swf.symbols.get (bitmapID);\n\t\t\t\t\tvar bitmap = swf.library.getImage (bitmapSymbol.path);\n\t\t\t\t\t\n\t\t\t\t\tif (bitmap != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tgraphics.beginBitmapFill (BitmapData.fromImage (bitmap), matrix, repeat, smooth);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase BeginGradientFill (fillType, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio):\n\t\t\t\t\t\n\t\t\t\t\tgraphics.beginGradientFill (fillType, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio);\n\t\t\t\t\n\t\t\t\tcase CurveTo (controlX, controlY, anchorX, anchorY):\n\t\t\t\t\t\n\t\t\t\t\tgraphics.curveTo (controlX, controlY, anchorX, anchorY);\n\t\t\t\t\n\t\t\t\tcase EndFill:\n\t\t\t\t\t\n\t\t\t\t\tgraphics.endFill ();\n\t\t\t\t\n\t\t\t\tcase LineStyle (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit):\n\t\t\t\t\t\n\t\t\t\t\tif (thickness != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tgraphics.lineStyle (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tgraphics.lineStyle ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase LineTo (x, y):\n\t\t\t\t\t\n\t\t\t\t\tgraphics.lineTo (x, y);\n\t\t\t\t\n\t\t\t\tcase MoveTo (x, y):\n\t\t\t\t\t\n\t\t\t\t\tgraphics.moveTo (x, y);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tcommands = null;\n\t\trendered = new Shape ();\n\t\trendered.graphics.copyFrom (shape.graphics);\n\t\t\n\t\treturn shape;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.symbols;\n\n\nimport haxe.Log;\nimport openfl._internal.swf.SWFLite;\nimport openfl._internal.timeline.Frame;\nimport openfl.display.MovieClip;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.MovieClip)\n\n\nclass SpriteSymbol extends SWFSymbol {\n\t\n\t\n\tpublic var baseClassName:String;\n\tpublic var frames:Array<Frame>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tframes = new Array<Frame> ();\n\t\t\n\t}\n\t\n\n\t@:access(openfl._internal.swf.SWFLiteLibrary.rootPath)\n\tprivate override function __createObject (swf:SWFLite):MovieClip {\n\t\t\n\t\t#if !macro\n\t\tMovieClip.__initSWF = swf;\n\t\tMovieClip.__initSymbol = this;\n\t\t#end\n\t\t\n\t\tvar symbolType = null;\n\t\t\n\t\tif (className != null) {\n\t\t\t\n\t\t\tsymbolType = Type.resolveClass (className);\n\t\t\t\n\t\t\tif (symbolType == null) {\n\t\t\t\t\n\t\t\t\t//Log.trace (\"Could not resolve class \\\"\" + className + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif (symbolType == null && baseClassName != null) {\n\t\t\t\n\t\t\tsymbolType = Type.resolveClass (baseClassName);\n\t\t\t\n\t\t\tif (symbolType == null) {\n\t\t\t\t\n\t\t\t\tLog.trace (\"SWF Symbol \\\"\"+ className +\"\\\" in library \\\"\"+ (swf.library.rootPath) +\"\\\" has baseClassname \\\"\" + baseClassName + \"\\\" but no class by that name has been defined.\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar movieClip:MovieClip = null;\n\t\t\n\t\tif (symbolType != null) {\n\t\t\t\n\t\t\tmovieClip = Type.createInstance (symbolType, []);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tmovieClip = new MovieClip ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn movieClip;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.symbols;\n\n\nimport openfl._internal.swf.SWFLite;\nimport openfl.geom.Matrix;\nimport openfl.text.StaticText;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.text.StaticText)\n\n\nclass StaticTextSymbol extends SWFSymbol {\n\t\n\t\n\tpublic var matrix:Matrix;\n\tpublic var records:Array<StaticTextRecord>;\n\tpublic var rendered:StaticText;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t}\n\t\n\t\n\tprivate override function __createObject (swf:SWFLite):StaticText {\n\t\t\n\t\tvar staticText = new StaticText ();\n\t\tvar graphics = staticText.__graphics;\n\t\t\n\t\tif (rendered != null) {\n\t\t\t\n\t\t\tstaticText.text = rendered.text;\n\t\t\tgraphics.copyFrom (rendered.__graphics);\n\t\t\treturn staticText;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar text = \"\";\n\t\t\n\t\tif (records != null) {\n\t\t\t\n\t\t\tvar font:FontSymbol = null;\n\t\t\tvar color = 0xFFFFFF;\n\t\t\tvar offsetX = matrix.tx;\n\t\t\tvar offsetY = matrix.ty;\n\t\t\t\n\t\t\tvar scale, index, code;\n\t\t\t\n\t\t\tfor (record in records) {\n\t\t\t\t\n\t\t\t\tif (record.fontID != null) font = cast swf.symbols.get (record.fontID);\n\t\t\t\tif (record.offsetX != null) offsetX = matrix.tx + record.offsetX * 0.05;\n\t\t\t\tif (record.offsetY != null) offsetY = matrix.ty + record.offsetY * 0.05;\n\t\t\t\tif (record.color != null) color = record.color;\n\t\t\t\t\n\t\t\t\tif (font != null) {\n\t\t\t\t\t\n\t\t\t\t\tscale = (record.fontHeight / 1024) * 0.05;\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...record.glyphs.length) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tindex = record.glyphs[i];\n\t\t\t\t\t\ttext += String.fromCharCode (font.codes[index]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (command in font.glyphs[index]) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tswitch (command) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase BeginFill (_, alpha):\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tgraphics.beginFill (color & 0xFFFFFF, ((color >> 24) & 0xFF) / 0xFF);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase CurveTo (controlX, controlY, anchorX, anchorY):\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tgraphics.curveTo (controlX * scale + offsetX, controlY * scale + offsetY, anchorX * scale + offsetX, anchorY * scale + offsetY);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase EndFill:\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tgraphics.endFill ();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase LineStyle (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit):\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (thickness != null) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tgraphics.lineStyle (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tgraphics.lineStyle ();\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase LineTo (x, y):\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tgraphics.lineTo (x * scale + offsetX, y * scale + offsetY);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcase MoveTo (x, y):\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tgraphics.moveTo (x * scale + offsetX, y * scale + offsetY);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\toffsetX += record.advances[i] * 0.05;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tstaticText.text = text;\n\t\t\n\t\trecords = null;\n\t\trendered = new StaticText ();\n\t\trendered.text = text;\n\t\trendered.__graphics.copyFrom (staticText.__graphics);\n\t\t\n\t\treturn staticText;\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:keep class StaticTextRecord {\n\t\n\t\n\tpublic var advances:Array<Int>;\n\tpublic var color:Null<Int>;\n\tpublic var fontHeight:Int;\n\tpublic var fontID:Null<Int>;\n\tpublic var glyphs:Array<Int>;\n\tpublic var offsetX:Null<Int>;\n\tpublic var offsetY:Null<Int>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.text;\n\n\nimport openfl.text.TextFormat;\n\n\nclass HTMLParser {\n\t\n\t\n\tprivate static var __regexAlign = ~/align=(\"([^\"]+)\"|'([^']+)')/i;\n\tprivate static var __regexBreakTag = ~/<br\\s*\\/?>/gi;\n\tprivate static var __regexBlockIndent = ~/blockindent=(\"([^\"]+)\"|'([^']+)')/i;\n\tprivate static var __regexColor = ~/color=(\"#([^\"]+)\"|'#([^']+)')/i;\n\tprivate static var __regexEntities = [ ~/&quot;/g, ~/&apos;/g, ~/&amp;/g, ~/&lt;/g, ~/&gt;/g, ~/&nbsp;/g ];\n\tprivate static var __regexFace = ~/face=(\"([^\"]+)\"|'([^']+)')/i;\n\tprivate static var __regexHTMLTag = ~/<.*?>/g;\n\tprivate static var __regexHref = ~/href=(\"([^\"]+)\"|'([^']+)')/i;\n\tprivate static var __regexIndent = ~/ indent=(\"([^\"]+)\"|'([^']+)')/i;\n\tprivate static var __regexLeading = ~/leading=(\"([^\"]+)\"|'([^']+)')/i;\n\tprivate static var __regexLeftMargin = ~/leftmargin=(\"([^\"]+)\"|'([^']+)')/i;\n\tprivate static var __regexRightMargin = ~/rightmargin=(\"([^\"]+)\"|'([^']+)')/i;\n\tprivate static var __regexSize = ~/size=(\"([^\"]+)\"|'([^']+)')/i;\n\tprivate static var __regexTabStops = ~/tabstops=(\"([^\"]+)\"|'([^']+)')/i;\n\t\n\t\n\tpublic static function parse (value:String, textFormat:TextFormat, textFormatRanges:Vector<TextFormatRange>) {\n\t\t\n\t\tvalue = __regexBreakTag.replace (value, \"\\n\");\n\t\tvalue = __regexEntities[0].replace (value, \"\\\"\");\n\t\tvalue = __regexEntities[1].replace (value, \"'\");\n\t\tvalue = __regexEntities[2].replace (value, \"&\");\n\t\tvalue = __regexEntities[5].replace (value, \" \");\n\t\t\n\t\t// crude solution\n\t\t\n\t\tvar segments = value.split (\"<\");\n\t\t\n\t\tif (segments.length == 1) {\n\t\t\t\n\t\t\tvalue = __regexHTMLTag.replace (value, \"\");\n\t\t\t\n\t\t\tif (textFormatRanges.length > 1) {\n\t\t\t\t\n\t\t\t\ttextFormatRanges.splice (1, textFormatRanges.length - 1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvalue = __regexEntities[3].replace (value, \"<\");\n\t\t\tvalue = __regexEntities[4].replace (value, \">\");\n\t\t\t\n\t\t\tvar range = textFormatRanges[0];\n\t\t\trange.format = textFormat;\n\t\t\trange.start = 0;\n\t\t\trange.end = value.length;\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttextFormatRanges.splice (0, textFormatRanges.length);\n\t\t\t\n\t\t\tvalue = \"\";\n\t\t\tvar segment;\n\t\t\t\n\t\t\tfor (i in 0...segments.length) {\n\t\t\t\t\n\t\t\t\tsegment = segments[i];\n\t\t\t\tsegment = __regexEntities[3].replace (segment, \"<\");\n\t\t\t\tsegment = __regexEntities[4].replace (segment, \">\");\n\t\t\t\tsegments[i] = segment;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar formatStack = [ textFormat.clone () ];\n\t\t\tvar sub:String;\n\t\t\tvar noLineBreak = false;\n\t\t\t\n\t\t\tfor (segment in segments) {\n\t\t\t\t\n\t\t\t\tif (segment == \"\") continue;\n\t\t\t\t\n\t\t\t\tvar isClosingTag = segment.substr (0, 1) == \"/\";\n\t\t\t\tvar tagEndIndex = segment.indexOf (\">\");\n\t\t\t\tvar start = tagEndIndex + 1;\n\t\t\t\tvar spaceIndex = segment.indexOf (\" \");\n\t\t\t\tvar tagName = segment.substring (isClosingTag ? 1 : 0, spaceIndex > -1 && spaceIndex < tagEndIndex ? spaceIndex : tagEndIndex);\n\t\t\t\tvar format:TextFormat;\n\t\t\t\t\n\t\t\t\tif (isClosingTag) {\n\t\t\t\t\t\n\t\t\t\t\tformatStack.pop ();\n\t\t\t\t\tformat = formatStack[formatStack.length - 1].clone ();\n\t\t\t\t\t\n\t\t\t\t\tif (tagName.toLowerCase () == \"p\" && textFormatRanges.length > 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// value += \"\\n\";\n\t\t\t\t\t\tnoLineBreak = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (start < segment.length) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tsub = segment.substr (start);\n\t\t\t\t\t\ttextFormatRanges.push (new TextFormatRange (format, value.length, value.length + sub.length));\n\t\t\t\t\t\tvalue += sub;\n\t\t\t\t\t\tnoLineBreak = false;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tformat = formatStack[formatStack.length - 1].clone ();\n\t\t\t\t\t\n\t\t\t\t\tif (tagEndIndex > -1) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch (tagName.toLowerCase ()) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase \"a\":\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (__regexHref.match (segment)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tformat.url = __getAttributeMatch (__regexHref);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase \"p\":\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (textFormatRanges.length > 0 && !noLineBreak) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvalue += \"\\n\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (__regexAlign.match (segment)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tformat.align = __getAttributeMatch (__regexAlign).toLowerCase ();\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase \"font\":\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (__regexFace.match (segment)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tformat.font = __getAttributeMatch (__regexFace);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (__regexColor.match (segment)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tformat.color = Std.parseInt (\"0x\" + __getAttributeMatch (__regexColor));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (__regexSize.match (segment)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar sizeAttr = __getAttributeMatch (__regexSize);\n\t\t\t\t\t\t\t\t\tvar firstChar = sizeAttr.charCodeAt (0);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (firstChar == \"+\".code || firstChar == \"-\".code) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tvar parentFormat = (formatStack.length >= 2) ? formatStack[formatStack.length - 2] : textFormat;\n\t\t\t\t\t\t\t\t\t\tformat.size = parentFormat.size + Std.parseInt (sizeAttr);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tformat.size = Std.parseInt (sizeAttr);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase \"b\":\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tformat.bold = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase \"u\":\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tformat.underline = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase \"i\", \"em\":\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tformat.italic = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase \"textformat\":\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (__regexBlockIndent.match (segment)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tformat.blockIndent = Std.parseInt (__getAttributeMatch (__regexBlockIndent));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (__regexIndent.match (segment)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tformat.indent = Std.parseInt (__getAttributeMatch (__regexIndent));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (__regexLeading.match (segment)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tformat.leading = Std.parseInt (__getAttributeMatch (__regexLeading));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (__regexLeftMargin.match (segment)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tformat.leftMargin = Std.parseInt (__getAttributeMatch (__regexLeftMargin));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (__regexRightMargin.match (segment)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tformat.rightMargin = Std.parseInt (__getAttributeMatch (__regexRightMargin));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (__regexTabStops.match (segment)) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar values = __getAttributeMatch (__regexTabStops).split (\" \");\n\t\t\t\t\t\t\t\t\tvar tabStops = [];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tfor (stop in values) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\ttabStops.push (Std.parseInt (stop));\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tformat.tabStops = tabStops;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tformatStack.push (format);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (start < segment.length) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsub = segment.substring (start);\n\t\t\t\t\t\t\ttextFormatRanges.push (new TextFormatRange (format, value.length, value.length + sub.length));\n\t\t\t\t\t\t\tvalue += sub;\n\t\t\t\t\t\t\tnoLineBreak = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\ttextFormatRanges.push (new TextFormatRange (format, value.length, value.length + segment.length));\n\t\t\t\t\t\tvalue += segment;\n\t\t\t\t\t\tnoLineBreak = false;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (textFormatRanges.length == 0) {\n\t\t\t\t\n\t\t\t\ttextFormatRanges.push (new TextFormatRange (formatStack[0], 0, 0));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __getAttributeMatch (regex:EReg):String {\n\t\t\n\t\treturn regex.matched (2) != null ? regex.matched (2) : regex.matched (3);\n\t\t\n\t}\n\t\n\t\n}\n","package openfl._internal.text;\n\n\nimport haxe.Timer;\nimport haxe.Utf8;\nimport lime.graphics.cairo.CairoFontFace;\nimport lime.graphics.opengl.GLTexture;\nimport lime.system.System;\nimport lime.text.GlyphPosition;\nimport lime.text.TextLayout;\nimport lime.text.UTF8String;\nimport openfl.Vector;\nimport openfl.events.Event;\nimport openfl.events.FocusEvent;\nimport openfl.events.MouseEvent;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.text.AntiAliasType;\nimport openfl.text.Font;\nimport openfl.text.GridFitType;\nimport openfl.text.TextField;\nimport openfl.text.TextFieldAutoSize;\nimport openfl.text.TextFieldType;\nimport openfl.text.TextFormat;\nimport openfl.text.TextFormatAlign;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\nimport js.Browser;\n#end\n\n#if sys\nimport haxe.io.Path;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.text.Font)\n@:access(openfl.text.TextField)\n@:access(openfl.text.TextFormat)\n\n\nclass TextEngine {\n\t\n\t\n\tprivate static inline var UTF8_TAB = 9;\n\tprivate static inline var UTF8_ENDLINE = 10;\n\tprivate static inline var UTF8_SPACE = 32;\n\tprivate static inline var UTF8_HYPHEN = 0x2D;\n\t\n\tprivate static var __defaultFonts = new Map<String, Font> ();\n\t\n\t#if (js && html5)\n\tprivate static var __canvas:CanvasElement;\n\tprivate static var __context:CanvasRenderingContext2D;\n\t#end\n\t\n\tpublic var antiAliasType:AntiAliasType;\n\tpublic var autoSize:TextFieldAutoSize;\n\tpublic var background:Bool;\n\tpublic var backgroundColor:Int;\n\tpublic var border:Bool;\n\tpublic var borderColor:Int;\n\tpublic var bottomScrollV (default, null):Int;\n\tpublic var bounds:Rectangle;\n\tpublic var caretIndex:Int;\n\tpublic var embedFonts:Bool;\n\tpublic var gridFitType:GridFitType;\n\tpublic var height:Float;\n\tpublic var layoutGroups:Vector<TextLayoutGroup>;\n\tpublic var lineAscents:Vector<Float>;\n\tpublic var lineBreaks:Vector<Int>;\n\tpublic var lineDescents:Vector<Float>;\n\tpublic var lineLeadings:Vector<Float>;\n\tpublic var lineHeights:Vector<Float>;\n\tpublic var lineWidths:Vector<Float>;\n\tpublic var maxChars:Int;\n\tpublic var maxScrollH (default, null):Int;\n\tpublic var maxScrollV (default, null):Int;\n\tpublic var multiline:Bool;\n\tpublic var numLines (default, null):Int;\n\tpublic var restrict (default, set):UTF8String;\n\tpublic var scrollH:Int;\n\tpublic var scrollV:Int;\n\tpublic var selectable:Bool;\n\tpublic var sharpness:Float;\n\tpublic var text (default, set):UTF8String;\n\tpublic var textHeight:Float;\n\tpublic var textFormatRanges:Vector<TextFormatRange>;\n\tpublic var textWidth:Float;\n\tpublic var type:TextFieldType;\n\tpublic var width:Float;\n\tpublic var wordWrap:Bool;\n\t\n\tprivate var textField:TextField;\n\t\n\t@:noCompletion private var __cursorTimer:Timer;\n\t@:noCompletion private var __hasFocus:Bool;\n\t@:noCompletion private var __isKeyDown:Bool;\n\t@:noCompletion private var __measuredHeight:Int;\n\t@:noCompletion private var __measuredWidth:Int;\n\t@:noCompletion private var __restrictRegexp:EReg;\n\t@:noCompletion private var __selectionStart:Int;\n\t@:noCompletion private var __showCursor:Bool;\n\t@:noCompletion private var __textFormat:TextFormat;\n\t@:noCompletion private var __textLayout:TextLayout;\n\t@:noCompletion private var __texture:GLTexture;\n\t//@:noCompletion private var __tileData:Map<Tilesheet, Array<Float>>;\n\t//@:noCompletion private var __tileDataLength:Map<Tilesheet, Int>;\n\t//@:noCompletion private var __tilesheets:Map<Tilesheet, Bool>;\n\tprivate var __useIntAdvances:Null<Bool>;\n\t\n\t@:noCompletion @:dox(hide) public var __cairoFont:CairoFontFace;\n\t@:noCompletion @:dox(hide) public var __font:Font;\n\t\n\t\n\tpublic function new (textField:TextField) {\n\t\t\n\t\tthis.textField = textField;\n\t\t\n\t\twidth = 100;\n\t\theight = 100;\n\t\ttext = \"\";\n\t\t\n\t\tbounds = new Rectangle (0, 0, 0, 0);\n\t\t\n\t\ttype = TextFieldType.DYNAMIC;\n\t\tautoSize = TextFieldAutoSize.NONE;\n\t\tembedFonts = false;\n\t\tselectable = true;\n\t\tborderColor = 0x000000;\n\t\tborder = false;\n\t\tbackgroundColor = 0xffffff;\n\t\tbackground = false;\n\t\tgridFitType = GridFitType.PIXEL;\n\t\tmaxChars = 0;\n\t\tmultiline = false;\n\t\tsharpness = 0;\n\t\tscrollH = 0;\n\t\tscrollV = 1;\n\t\twordWrap = false;\n\t\t\n\t\tlineAscents = new Vector ();\n\t\tlineBreaks = new Vector ();\n\t\tlineDescents = new Vector ();\n\t\tlineLeadings = new Vector ();\n\t\tlineHeights = new Vector ();\n\t\tlineWidths = new Vector ();\n\t\tlayoutGroups = new Vector ();\n\t\ttextFormatRanges = new Vector ();\n\t\t\n\t\t#if (js && html5)\n\t\t__canvas = cast Browser.document.createElement (\"canvas\");\n\t\t__context = __canvas.getContext (\"2d\");\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function createRestrictRegexp (restrict:String):EReg {\n\t\t\n\t\tvar declinedRange = ~/\\^(.-.|.)/gu;\n\t\tvar declined = '';\n\t\t\n\t\tvar accepted = declinedRange.map (restrict, function (ereg) {\n\t\t\t\n\t\t\tdeclined += ereg.matched (1);\n\t\t\treturn '';\n\t\t\t\n\t\t});\n\t\t\n\t\tvar testRegexpParts:Array<String> = [];\n\t\t\n\t\tif (accepted.length > 0) {\n\t\t\t\n\t\t\ttestRegexpParts.push ('[^$restrict]');\n\t\t\t\n\t\t}\n\t\t\n\t\tif (declined.length > 0) {\n\t\t\t\n\t\t\ttestRegexpParts.push ('[$declined]');\n\t\t\t\n\t\t}\n\t\t\n\t\treturn new EReg ('(${testRegexpParts.join('|')})', 'g');\n\t\t\n\t}\n\t\n\t\n\tprivate static function findFont (name:String):Font {\n\t\t\n\t\t#if (lime_cffi)\n\t\t\n\t\tfor (registeredFont in Font.__registeredFonts) {\n\t\t\t\n\t\t\tif (registeredFont == null) continue;\n\t\t\t\n\t\t\tif (registeredFont.fontName == name || (registeredFont.__fontPath != null && (registeredFont.__fontPath == name || registeredFont.__fontPathWithoutDirectory == name))) {\n\t\t\t\t\n\t\t\t\tif (registeredFont.__initialize ()) {\n\t\t\t\t\t\n\t\t\t\t\treturn registeredFont;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar font = Font.fromFile (name);\n\t\t\n\t\tif (font != null) {\n\t\t\t\n\t\t\tFont.__registeredFonts.push (font);\n\t\t\treturn font;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate static function findFontVariant (format:TextFormat):Font {\n\t\t\n\t\tvar fontName = format.font;\n\t\tvar bold = format.bold;\n\t\tvar italic = format.italic;\n\t\t\n\t\tvar fontNamePrefix = StringTools.replace (StringTools.replace (fontName, \" Normal\", \"\"), \" Regular\", \"\");\n\t\t\n\t\tif (bold && italic && Font.__fontByName.exists (fontNamePrefix + \" Bold Italic\")) {\n\t\t\t\n\t\t\treturn findFont (fontNamePrefix + \" Bold Italic\");\n\t\t\t\n\t\t} else if (bold && Font.__fontByName.exists (fontNamePrefix + \" Bold\")) {\n\t\t\t\n\t\t\treturn findFont (fontNamePrefix + \" Bold\");\n\t\t\t\n\t\t} else if (italic && Font.__fontByName.exists (fontNamePrefix + \" Italic\")) {\n\t\t\t\n\t\t\treturn findFont (fontNamePrefix + \" Italic\");\n\t\t\t\n\t\t}\n\t\t\n\t\treturn findFont (fontName);\n\t\t\n\t}\n\t\n\t\n\tprivate function getBounds ():Void {\n\t\t\n\t\tvar padding = border ? 1 : 0;\n\t\t\n\t\tbounds.width = width + padding;\n\t\tbounds.height = height + padding;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getFormatHeight (format:TextFormat):Float {\n\t\t\n\t\tvar ascent:Float, descent:Float, leading:Int;\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\t__context.font = getFont (format);\n\n\t\tif (format.__ascent != null) {\n\n\t\t\tascent = format.size * format.__ascent;\n\t\t\tdescent = format.size * format.__descent;\n\n\t\t} else {\n\t\t\t\n\t\t\tascent = format.size;\n\t\t\tdescent = format.size * 0.185;\n\t\t\t\n\t\t}\n\t\t\n\t\tleading = format.leading;\n\t\t\n\t\t#elseif (lime_cffi)\n\t\t\n\t\tvar font = getFontInstance (format);\n\t\t\n\t\tif (format.__ascent != null) {\n\n\t\t\tascent = format.size * format.__ascent;\n\t\t\tdescent = format.size * format.__descent;\n\n\t\t} else if (font != null) {\n\n\t\t\tascent = (font.ascender / font.unitsPerEM) * format.size;\n\t\t\tdescent = Math.abs ((font.descender / font.unitsPerEM) * format.size);\n\n\t\t} else {\n\t\t\t\n\t\t\tascent = format.size;\n\t\t\tdescent = format.size * 0.185;\n\t\t\t\n\t\t}\n\t\t\n\t\tleading = format.leading;\n\t\t\n\t\t#end\n\t\t\n\t\treturn ascent + descent + leading;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getFont (format:TextFormat):String {\n\t\t\n\t\tvar fontName = format.font;\n\t\tvar bold = format.bold;\n\t\tvar italic = format.italic;\n\t\t\n\t\tif (fontName == null) fontName = \"_serif\";\n\t\tvar fontNamePrefix = StringTools.replace (StringTools.replace (fontName, \" Normal\", \"\"), \" Regular\", \"\");\n\t\t\n\t\tif (bold && italic && Font.__fontByName.exists (fontNamePrefix + \" Bold Italic\")) {\n\t\t\t\n\t\t\tfontName = fontNamePrefix + \" Bold Italic\";\n\t\t\tbold = false;\n\t\t\titalic = false;\n\t\t\t\n\t\t} else if (bold && Font.__fontByName.exists (fontNamePrefix + \" Bold\")) {\n\t\t\t\n\t\t\tfontName = fontNamePrefix + \" Bold\";\n\t\t\tbold = false;\n\t\t\t\n\t\t} else if (italic && Font.__fontByName.exists (fontNamePrefix + \" Italic\")) {\n\t\t\t\n\t\t\tfontName = fontNamePrefix + \" Italic\";\n\t\t\titalic = false;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t// Prevent \"extra\" bold and italic fonts\n\t\t\t\n\t\t\tif (bold && (fontName.indexOf (\" Bold \") > -1 || StringTools.endsWith (fontName, \" Bold\"))) {\n\t\t\t\t\n\t\t\t\tbold = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (italic && (fontName.indexOf (\" Italic \") > -1 || StringTools.endsWith (fontName, \" Italic\"))) {\n\t\t\t\t\n\t\t\t\titalic = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar font = italic ? \"italic \" : \"normal \";\n\t\tfont += \"normal \";\n\t\tfont += bold ? \"bold \" : \"normal \";\n\t\tfont += format.size + \"px\";\n\t\tfont += \"/\" + (format.leading + format.size + 3) + \"px \";\n\t\t\n\t\tfont += \"\" + switch (fontName) {\n\t\t\t\n\t\t\tcase \"_sans\": \"sans-serif\";\n\t\t\tcase \"_serif\": \"serif\";\n\t\t\tcase \"_typewriter\": \"monospace\";\n\t\t\tdefault: \"'\" + ~/^[\\s'\"]+(.*)[\\s'\"]+$/.replace (fontName, '$1') + \"'\";\n\t\t\t\n\t\t}\n\t\t\n\t\treturn font;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getFontInstance (format:TextFormat):Font {\n\t\t\n\t\t#if (lime_cffi)\n\t\t\n\t\tvar instance = null;\n\t\tvar fontList = null;\n\t\t\n\t\tif (format != null && format.font != null) {\n\t\t\t\n\t\t\tif (__defaultFonts.exists (format.font)) {\n\t\t\t\t\n\t\t\t\treturn __defaultFonts.get (format.font);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tinstance = findFontVariant (format);\n\t\t\tif (instance != null) return instance;\n\t\t\t\n\t\t\tvar systemFontDirectory = System.fontsDirectory;\n\t\t\t\n\t\t\tswitch (format.font) {\n\t\t\t\t\n\t\t\t\tcase \"_sans\":\n\t\t\t\t\t\n\t\t\t\t\t#if windows\n\t\t\t\t\tif (format.bold) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (format.italic) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/arialbi.ttf\" ];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/arialbd.ttf\" ];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (format.italic) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/ariali.ttf\" ];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/arial.ttf\" ];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t#elseif (mac || ios || tvos)\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/Arial.ttf\", systemFontDirectory + \"/Helvetica.ttf\", systemFontDirectory + \"/Cache/Arial.ttf\", systemFontDirectory + \"/Cache/Helvetica.ttf\", systemFontDirectory + \"/Core/Arial.ttf\", systemFontDirectory + \"/Core/Helvetica.ttf\", systemFontDirectory + \"/CoreAddition/Arial.ttf\", systemFontDirectory + \"/CoreAddition/Helvetica.ttf\" ];\n\t\t\t\t\t#elseif linux\n\t\t\t\t\tfontList = [ new sys.io.Process('fc-match', ['sans', '-f%{file}']).stdout.readLine() ];\n\t\t\t\t\t#elseif android\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/DroidSans.ttf\" ];\n\t\t\t\t\t#elseif blackberry\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/arial.ttf\" ];\n\t\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tcase \"_serif\":\n\t\t\t\t\t\n\t\t\t\t\t// pass through\n\t\t\t\t\n\t\t\t\tcase \"_typewriter\":\n\t\t\t\t\t\n\t\t\t\t\t#if windows\n\t\t\t\t\tif (format.bold) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (format.italic) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/courbi.ttf\" ];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/courbd.ttf\" ];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (format.italic) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/couri.ttf\" ];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfontList = [ systemFontDirectory + \"/cour.ttf\" ];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t#elseif (mac || ios || tvos)\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/Courier New.ttf\", systemFontDirectory + \"/Courier.ttf\", systemFontDirectory + \"/Cache/Courier New.ttf\", systemFontDirectory + \"/Cache/Courier.ttf\", systemFontDirectory + \"/Core/Courier New.ttf\", systemFontDirectory + \"/Core/Courier.ttf\", systemFontDirectory + \"/CoreAddition/Courier New.ttf\", systemFontDirectory + \"/CoreAddition/Courier.ttf\" ];\n\t\t\t\t\t#elseif linux\n\t\t\t\t\tfontList = [ new sys.io.Process('fc-match', ['mono', '-f%{file}']).stdout.readLine() ];\n\t\t\t\t\t#elseif android\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/DroidSansMono.ttf\" ];\n\t\t\t\t\t#elseif blackberry\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/cour.ttf\" ];\n\t\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\tfontList = [ systemFontDirectory + \"/\" + format.font ];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#if lime_console\n\t\t\t\t\n\t\t\t\t// TODO(james4k): until we figure out our story for the above switch\n\t\t\t\t// statement, always load arial unless a file is specified.\n\t\t\t\tif (format == null\n\t\t\t\t\t|| StringTools.startsWith (format.font,  \"_\")\n\t\t\t\t\t|| format.font.indexOf(\".\") == -1\n\t\t\t\t) {\n\t\t\t\t\tfontList = [ \"arial.ttf\" ];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\tif (fontList != null) {\n\t\t\t\t\n\t\t\t\tfor (font in fontList) {\n\t\t\t\t\t\n\t\t\t\t\tinstance = findFont (font);\n\t\t\t\t\t\n\t\t\t\t\tif (instance != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__defaultFonts.set (format.font, instance);\n\t\t\t\t\t\treturn instance;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tinstance = findFont (\"_serif\");\n\t\t\tif (instance != null) return instance;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar systemFontDirectory = System.fontsDirectory;\n\t\t\n\t\t#if windows\n\t\tif (format.bold) {\n\t\t\t\n\t\t\tif (format.italic) {\n\t\t\t\t\n\t\t\t\tfontList = [ systemFontDirectory + \"/timesbi.ttf\" ];\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tfontList = [ systemFontDirectory + \"/timesbd.ttf\" ];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (format.italic) {\n\t\t\t\t\n\t\t\t\tfontList = [ systemFontDirectory + \"/timesi.ttf\" ];\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tfontList = [ systemFontDirectory + \"/times.ttf\" ];\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#elseif (mac || ios || tvos)\n\t\tfontList = [ systemFontDirectory + \"/Georgia.ttf\", systemFontDirectory + \"/Times.ttf\", systemFontDirectory + \"/Times New Roman.ttf\", systemFontDirectory + \"/Cache/Georgia.ttf\", systemFontDirectory + \"/Cache/Times.ttf\", systemFontDirectory + \"/Cache/Times New Roman.ttf\", systemFontDirectory + \"/Core/Georgia.ttf\", systemFontDirectory + \"/Core/Times.ttf\", systemFontDirectory + \"/Core/Times New Roman.ttf\", systemFontDirectory + \"/CoreAddition/Georgia.ttf\", systemFontDirectory + \"/CoreAddition/Times.ttf\", systemFontDirectory + \"/CoreAddition/Times New Roman.ttf\" ];\n\t\t#elseif linux\n\t\tfontList = [ new sys.io.Process('fc-match', ['serif', '-f%{file}']).stdout.readLine() ];\n\t\t#elseif android\n\t\tfontList = [ systemFontDirectory + \"/DroidSerif-Regular.ttf\", systemFontDirectory + \"/NotoSerif-Regular.ttf\" ];\n\t\t#elseif blackberry\n\t\tfontList = [ systemFontDirectory + \"/georgia.ttf\" ];\n\t\t#else\n\t\tfontList = [];\n\t\t#end\n\t\t\n\t\tfor (font in fontList) {\n\t\t\t\n\t\t\tinstance = findFont (font);\n\t\t\t\n\t\t\tif (instance != null) {\n\t\t\t\t\n\t\t\t\t__defaultFonts.set (format.font, instance);\n\t\t\t\treturn instance;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__defaultFonts.set (format.font, null);\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLine (index:Int):String {\n\t\t\n\t\tif (index < 0 || index > lineBreaks.length + 1) {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (lineBreaks.length == 0) {\n\t\t\t\n\t\t\treturn text;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn text.substring (index > 0 ? lineBreaks[index - 1] : 0, lineBreaks[index]);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getLineBreakIndex (startIndex:Int = 0):Int {\n\n\t\tvar br = text.indexOf (\"<br>\", startIndex);\n\t\tvar cr = text.indexOf (\"\\n\", startIndex);\n\t\tvar lf = text.indexOf (\"\\r\", startIndex);\n\t\t\n\t\tif (cr == -1 && br == -1) return lf;\n\t\tif (lf == -1 && br == -1) return cr;\n\t\tif (lf == -1 && cr == -1) return br;\n\n\t\tif (cr == -1) return Std.int (Math.min (br, lf));\n\t\tif (lf == -1) return Std.int (Math.min (br, cr));\n\t\tif (br == -1) return Std.int (Math.min (cr, lf));\n\n\t\treturn Std.int (Math.min (Math.min (cr, lf), br));\n\t\t\n\t}\n\t\n\t\n\tprivate function getLineMeasurements ():Void {\n\t\t\n\t\tlineAscents.length = 0;\n\t\tlineDescents.length = 0;\n\t\tlineLeadings.length = 0;\n\t\tlineHeights.length = 0;\n\t\tlineWidths.length = 0;\n\t\t\n\t\tvar currentLineAscent = 0.0;\n\t\tvar currentLineDescent = 0.0;\n\t\tvar currentLineLeading:Null<Int> = null;\n\t\tvar currentLineHeight = 0.0;\n\t\tvar currentLineWidth = 0.0;\n\t\tvar currentTextHeight = 0.0;\n\t\t\n\t\ttextWidth = 0;\n\t\ttextHeight = 0;\n\t\tnumLines = 1;\n\t\tbottomScrollV = 0;\n\t\tmaxScrollH = 0;\n\t\t\n\t\tfor (group in layoutGroups) {\n\t\t\t\n\t\t\twhile (group.lineIndex > numLines - 1) {\n\t\t\t\t\n\t\t\t\tlineAscents.push (currentLineAscent);\n\t\t\t\tlineDescents.push (currentLineDescent);\n\t\t\t\tlineLeadings.push (currentLineLeading != null ? currentLineLeading : 0);\n\t\t\t\tlineHeights.push (currentLineHeight);\n\t\t\t\tlineWidths.push (currentLineWidth);\n\t\t\t\t\n\t\t\t\tcurrentLineAscent = 0;\n\t\t\t\tcurrentLineDescent = 0;\n\t\t\t\tcurrentLineLeading = null;\n\t\t\t\tcurrentLineHeight = 0;\n\t\t\t\tcurrentLineWidth = 0;\n\t\t\t\t\n\t\t\t\tnumLines++;\n\t\t\t\t\n\t\t\t\tif (textHeight <= height - 2) {\n\t\t\t\t\t\n\t\t\t\t\tbottomScrollV++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcurrentLineAscent = Math.max (currentLineAscent, group.ascent);\n\t\t\tcurrentLineDescent = Math.max (currentLineDescent, group.descent);\n\t\t\t\n\t\t\tif (currentLineLeading == null) {\n\t\t\t\t\n\t\t\t\tcurrentLineLeading = group.leading;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcurrentLineLeading = Std.int (Math.max (currentLineLeading, group.leading));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcurrentLineHeight = Math.max (currentLineHeight, group.height);\n\t\t\tcurrentLineWidth = group.offsetX - 2 + group.width;\n\t\t\t\n\t\t\tif (currentLineWidth > textWidth) {\n\t\t\t\t\n\t\t\t\ttextWidth = currentLineWidth;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcurrentTextHeight = group.offsetY - 2 + group.ascent + group.descent;\n\t\t\t\n\t\t\tif (currentTextHeight > textHeight) {\n\t\t\t\t\n\t\t\t\ttextHeight = currentTextHeight;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tlineAscents.push (currentLineAscent);\n\t\tlineDescents.push (currentLineDescent);\n\t\tlineLeadings.push (currentLineLeading != null ? currentLineLeading : 0);\n\t\tlineHeights.push (currentLineHeight);\n\t\tlineWidths.push (currentLineWidth);\n\t\t\n\t\tif (numLines == 1) {\n\t\t\t\n\t\t\tbottomScrollV = 1;\n\t\t\t\n\t\t\tif (currentLineLeading > 0) {\n\t\t\t\t\n\t\t\t\ttextHeight += currentLineLeading;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (textHeight <= height - 2) {\n\t\t\t\n\t\t\tbottomScrollV++;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (autoSize != NONE) {\n\t\t\t\n\t\t\tswitch (autoSize) {\n\t\t\t\t\n\t\t\t\tcase LEFT, RIGHT, CENTER:\n\t\t\t\t\t\n\t\t\t\t\tif (!wordWrap /*&& (width < textWidth + 4)*/) {\n\t\t\t\t\t\t\n\t\t\t\t\t\twidth = textWidth + 4;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\theight = textHeight + 4;\n\t\t\t\t\tbottomScrollV = numLines;\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (textWidth > width - 4) {\n\t\t\t\n\t\t\tmaxScrollH = Std.int (textWidth - width + 4);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tmaxScrollH = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tmaxScrollV = numLines - bottomScrollV + 1;\n\t\t\n\t}\n\t\n\t\n\tprivate function getLayoutGroups ():Void {\n\t\t\n\t\tlayoutGroups.length = 0;\n\t\t\n\t\tif (text == null || text == \"\") return;\n\t\t\n\t\tvar rangeIndex = -1;\n\t\tvar formatRange:TextFormatRange = null;\n\t\tvar font = null;\n\t\t\n\t\tvar currentFormat = TextField.__defaultTextFormat.clone ();\n\t\t\n\t\tvar leading = 0;\n\t\tvar ascent = 0.0, maxAscent = 0.0;\n\t\tvar descent = 0.0;\n\t\t\n\t\tvar layoutGroup:TextLayoutGroup = null, positions = null;\n\t\tvar widthValue = 0.0, heightValue = 0.0, maxHeightValue = 0.0;\n\t\t\n\t\tvar previousSpaceIndex = -2; // -1 equals not found, -2 saves extra comparison in `breakIndex == previousSpaceIndex`\n\t\tvar spaceIndex = text.indexOf (\" \");\n\t\tvar breakIndex = getLineBreakIndex ();\n\t\t\n\t\tvar offsetX = 2.0;\n\t\tvar offsetY = 2.0;\n\t\tvar textIndex = 0;\n\t\tvar lineIndex = 0;\n\t\tvar lineFormat = null;\n\t\t\n\t\tinline function getPositions (text:UTF8String, startIndex:Int, endIndex:Int) {\n\t\t\t\n\t\t\t// TODO: optimize\n\t\t\t\n\t\t\tvar positions = [];\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\t\n\t\t\tif (__useIntAdvances == null) {\n\t\t\t\t\n\t\t\t\t__useIntAdvances = ~/Trident\\/7.0/.match (Browser.navigator.userAgent); // IE\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (__useIntAdvances) {\n\t\t\t\t\n\t\t\t\t// slower, but more accurate if browser returns Int measurements\n\t\t\t\t\n\t\t\t\tvar previousWidth = 0.0;\n\t\t\t\tvar width;\n\t\t\t\t\n\t\t\t\tfor (i in startIndex...endIndex) {\n\t\t\t\t\t\n\t\t\t\t\twidth = __context.measureText (text.substring (startIndex, i + 1)).width;\n\t\t\t\t\t\n\t\t\t\t\tpositions.push (width - previousWidth);\n\t\t\t\t\t\n\t\t\t\t\tpreviousWidth = width;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tfor (i in startIndex...endIndex) {\n\t\t\t\t\t\n\t\t\t\t\tvar advance;\n\t\t\t\t\t\n\t\t\t\t\tif (i < text.length-1) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Advance can be less for certain letter combinations, e.g. 'Yo' vs. 'Do'\n\t\t\t\t\t\tvar nextWidth = __context.measureText (text.charAt (i + 1)).width;\n\t\t\t\t\t\tvar twoWidths = __context.measureText (text.substr (i,  2)).width;\n\t\t\t\t\t\tadvance = twoWidths - nextWidth;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tadvance = __context.measureText (text.charAt (i)).width;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpositions.push (advance);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn positions;\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tif (__textLayout == null) {\n\t\t\t\t\n\t\t\t\t__textLayout = new TextLayout ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar width = 0.0;\n\t\t\t\n\t\t\t__textLayout.text = null;\n\t\t\t__textLayout.font = font;\n\t\t\t\n\t\t\tif (formatRange.format.size != null) {\n\t\t\t\t\n\t\t\t\t__textLayout.size = formatRange.format.size;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__textLayout.text = text.substring (startIndex, endIndex);\n\t\t\treturn __textLayout.positions;\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\tinline function getPositionsWidth (positions:#if (js && html5) Array<Float> #else Array<GlyphPosition> #end):Float {\n\t\t\t\n\t\t\tvar width = 0.0;\n\t\t\t\n\t\t\tfor (position in positions) {\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\twidth += position;\n\t\t\t\t#else\n\t\t\t\twidth += position.advance.x;\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn width;\n\t\t\t\n\t\t}\n\t\t\n\t\tinline function getTextWidth (text:String):Float {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\t\n\t\t\treturn __context.measureText (text).width;\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tif (__textLayout == null) {\n\t\t\t\t\n\t\t\t\t__textLayout = new TextLayout ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar width = 0.0;\n\t\t\t\n\t\t\t__textLayout.text = null;\n\t\t\t__textLayout.font = font;\n\t\t\t\n\t\t\tif (formatRange.format.size != null) {\n\t\t\t\t\n\t\t\t\t__textLayout.size = formatRange.format.size;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__textLayout.text = text;\n\t\t\t\n\t\t\tfor (position in __textLayout.positions) {\n\t\t\t\t\n\t\t\t\twidth += position.advance.x;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn width;\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\tinline function nextLayoutGroup (startIndex, endIndex):Void {\n\t\t\t\n\t\t\tif (layoutGroup == null || layoutGroup.startIndex != layoutGroup.endIndex) {\n\t\t\t\t\n\t\t\t\tlayoutGroup = new TextLayoutGroup (formatRange.format, startIndex, endIndex);\n\t\t\t\tlayoutGroups.push (layoutGroup);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tlayoutGroup.format = formatRange.format;\n\t\t\t\tlayoutGroup.startIndex = startIndex;\n\t\t\t\tlayoutGroup.endIndex = endIndex;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tinline function nextFormatRange ():Void {\n\t\t\t\n\t\t\tif (rangeIndex < textFormatRanges.length - 1) {\n\t\t\t\t\n\t\t\t\trangeIndex++;\n\t\t\t\tformatRange = textFormatRanges[rangeIndex];\n\t\t\t\tcurrentFormat.__merge (formatRange.format);\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\t\n\t\t\t\t__context.font = getFont (currentFormat);\n\t\t\t\t\n\t\t\t\tif (currentFormat.__ascent != null) {\n\t\t\t\t\t\n\t\t\t\t\tascent = currentFormat.size * currentFormat.__ascent;\n\t\t\t\t\tdescent = currentFormat.size * currentFormat.__descent;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tascent = currentFormat.size;\n\t\t\t\t\tdescent = currentFormat.size * 0.185;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tleading = currentFormat.leading;\n\t\t\t\t\n\t\t\t\theightValue = ascent + descent + leading;\n\t\t\t\t\n\t\t\t\t#elseif (lime_cffi)\n\t\t\t\t\n\t\t\t\tfont = getFontInstance (currentFormat);\n\t\t\t\t\n\t\t\t\tif (currentFormat.__ascent != null) {\n\t\t\t\t\t\n\t\t\t\t\tascent = currentFormat.size * currentFormat.__ascent;\n\t\t\t\t\tdescent = currentFormat.size * currentFormat.__descent;\n\t\t\t\t\t\n\t\t\t\t} else if (font != null) {\n\t\t\t\t\t\n\t\t\t\t\tascent = (font.ascender / font.unitsPerEM) * currentFormat.size;\n\t\t\t\t\tdescent = Math.abs ((font.descender / font.unitsPerEM) * currentFormat.size);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tascent = currentFormat.size;\n\t\t\t\t\tdescent = currentFormat.size * 0.185;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tleading = currentFormat.leading;\n\t\t\t\t\n\t\t\t\theightValue = ascent + descent + leading;\n\t\t\t\t\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (heightValue > maxHeightValue) {\n\t\t\t\t\n\t\t\t\tmaxHeightValue = heightValue;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (ascent > maxAscent) {\n\t\t\t\t\n\t\t\t\tmaxAscent = ascent;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tinline function alignBaseline ():Void {\n\t\t\t\n\t\t\t// since nextFormatRange may not have been called, have to update these manually\n\t\t\tif (ascent > maxAscent) {\n\t\t\t\t\n\t\t\t\tmaxAscent = ascent;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (heightValue > maxHeightValue) {\n\t\t\t\t\n\t\t\t\tmaxHeightValue = heightValue;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor (lg in layoutGroups) {\n\t\t\t\t\n\t\t\t\tif (lg.lineIndex < lineIndex) continue;\n\t\t\t\tif (lg.lineIndex > lineIndex) break;\n\t\t\t\t\n\t\t\t\tlg.ascent = maxAscent;\n\t\t\t\tlg.height = maxHeightValue;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\toffsetY += maxHeightValue;\n\t\t\t\n\t\t\tmaxAscent = 0.0;\n\t\t\tmaxHeightValue = 0.0;\n\t\t\t\n\t\t\t++lineIndex;\n\t\t\toffsetX = 2;\n\t\t\t\n\t\t}\n\t\t\n\t\tinline function breakLongWords (endIndex:Int):Void {\n\t\t\t\n\t\t\tvar tempWidth = getTextWidth (text.substring (textIndex, endIndex));\n\t\t\t\n\t\t\twhile (offsetX + tempWidth > width - 2) {\n\t\t\t\t\n\t\t\t\tvar i = 1;\n\t\t\t\t\n\t\t\t\twhile (textIndex + i < endIndex + 1) {\n\t\t\t\t\t\n\t\t\t\t\ttempWidth = getTextWidth (text.substr (textIndex, i));\n\t\t\t\t\t\n\t\t\t\t\tif (offsetX + tempWidth > width - 2) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ti--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ti++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (i == 0 && tempWidth > width - 4) {\n\t\t\t\t\t// if the textfield is smaller than a single character\n\t\t\t\t\t\n\t\t\t\t\ti = text.length;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (i == 0) {\n\t\t\t\t\t// if a single character in a new format made the line too long\n\t\t\t\t\t\n\t\t\t\t\toffsetX = 2;\n\t\t\t\t\toffsetY += layoutGroup.height;\n\t\t\t\t\t++lineIndex;\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t\tnextLayoutGroup (textIndex, textIndex + i);\n\t\t\t\t\tlayoutGroup.positions = getPositions (text, textIndex, textIndex + i);\n\t\t\t\t\tlayoutGroup.offsetX = offsetX;\n\t\t\t\t\tlayoutGroup.ascent = ascent;\n\t\t\t\t\tlayoutGroup.descent = descent;\n\t\t\t\t\tlayoutGroup.leading = leading;\n\t\t\t\t\tlayoutGroup.lineIndex = lineIndex;\n\t\t\t\t\tlayoutGroup.offsetY = offsetY;\n\t\t\t\t\tlayoutGroup.width = getPositionsWidth (layoutGroup.positions);\n\t\t\t\t\tlayoutGroup.height = heightValue;\n\t\t\t\t\t\n\t\t\t\t\tlayoutGroup = null;\n\t\t\t\t\t\n\t\t\t\t\talignBaseline ();\n\t\t\t\t\t\n\t\t\t\t\ttextIndex += i;\n\t\t\t\t\t\n\t\t\t\t\tpositions = getPositions (text, textIndex, endIndex);\n\t\t\t\t\twidthValue = getPositionsWidth (positions);\n\t\t\t\t\t\n\t\t\t\t\ttempWidth = widthValue;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tnextFormatRange ();\n\t\t\n\t\tlineFormat = formatRange.format;\n\t\tvar wrap;\n\t\tvar maxLoops = text.length + 1; // Do an extra iteration to ensure a LayoutGroup is created in case the last line is empty (multiline or trailing line break).\n\t\t\n\t\twhile (textIndex < maxLoops) {\n\t\t\t\n\t\t\tif ((breakIndex > -1) && (spaceIndex == -1 || breakIndex < spaceIndex) && (formatRange.end >= breakIndex)) {\n\t\t\t\t// if a line break is the next thing that needs to be dealt with\n\t\t\t\t\n\t\t\t\tif (textIndex <= breakIndex) {\n\t\t\t\t\t\n\t\t\t\t\tif (wordWrap && previousSpaceIndex <= textIndex && width >= 4) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreakLongWords (breakIndex);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnextLayoutGroup (textIndex, breakIndex);\n\t\t\t\t\t\n\t\t\t\t\tlayoutGroup.positions = getPositions (text, textIndex, breakIndex);\n\t\t\t\t\tlayoutGroup.offsetX = offsetX;\n\t\t\t\t\tlayoutGroup.ascent = ascent;\n\t\t\t\t\tlayoutGroup.descent = descent;\n\t\t\t\t\tlayoutGroup.leading = leading;\n\t\t\t\t\tlayoutGroup.lineIndex = lineIndex;\n\t\t\t\t\tlayoutGroup.offsetY = offsetY;\n\t\t\t\t\tlayoutGroup.width = getPositionsWidth (layoutGroup.positions);\n\t\t\t\t\tlayoutGroup.height = heightValue;\n\t\t\t\t\t\n\t\t\t\t\tlayoutGroup = null;\n\t\t\t\t\t\n\t\t\t\t} else if (layoutGroup != null && layoutGroup.startIndex != layoutGroup.endIndex) {\n\t\t\t\t\t\n\t\t\t\t\t// Trim the last space from the line width, for correct TextFormatAlign.RIGHT alignment\n\t\t\t\t\tif (layoutGroup.endIndex == spaceIndex) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlayoutGroup.width -= layoutGroup.getAdvance (layoutGroup.positions.length - 1);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlayoutGroup = null;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (formatRange.end == breakIndex) {\n\t\t\t\t\t\n\t\t\t\t\tnextFormatRange ();\n\t\t\t\t\tlineFormat = formatRange.format;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (breakIndex >= text.length - 1) {\n\t\t\t\t\t\n\t\t\t\t\t// Trailing line breaks do not add to textHeight (offsetY), but they do add to numLines (lineIndex)\n\t\t\t\t\toffsetY -= maxHeightValue;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\talignBaseline ();\n\t\t\t\t\n\t\t\t\ttextIndex = breakIndex + 1;\n\t\t\t\tbreakIndex = getLineBreakIndex (textIndex);\n\t\t\t\t\n\t\t\t} else if (formatRange.end >= spaceIndex && spaceIndex > -1 && textIndex < formatRange.end) {\n\t\t\t\t// if a space is the next thing that needs to be dealt with\n\t\t\t\t\n\t\t\t\tif (layoutGroup != null && layoutGroup.startIndex != layoutGroup.endIndex) {\n\t\t\t\t\t\n\t\t\t\t\tlayoutGroup = null;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\twrap = false;\n\t\t\t\t\n\t\t\t\twhile (true) {\n\t\t\t\t\t\n\t\t\t\t\tif (textIndex == formatRange.end) break;\n\t\t\t\t\t\n\t\t\t\t\tvar endIndex = -1;\n\t\t\t\t\t\n\t\t\t\t\tif (spaceIndex == -1) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tendIndex = breakIndex;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse {\n\t\t\t\t\t\t\n\t\t\t\t\t\tendIndex = spaceIndex + 1;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (breakIndex > -1 && breakIndex < endIndex) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tendIndex = breakIndex;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (endIndex == -1 || endIndex > formatRange.end) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tendIndex = formatRange.end;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpositions = getPositions (text, textIndex, endIndex);\n\t\t\t\t\twidthValue = getPositionsWidth (positions);\n\t\t\t\t\t\n\t\t\t\t\tif (lineFormat.align == JUSTIFY) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (positions.length > 0 && textIndex == previousSpaceIndex) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Trim left space of this word\n\t\t\t\t\t\t\ttextIndex++;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar spaceWidth = #if (js && html5) positions.shift () #else positions.shift ().advance.x #end;\n\t\t\t\t\t\t\twidthValue -= spaceWidth;\n\t\t\t\t\t\t\toffsetX += spaceWidth;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (positions.length > 0 && endIndex == spaceIndex+1) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Trim right space of this word\n\t\t\t\t\t\t\tendIndex--;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar spaceWidth = #if (js && html5) positions.pop () #else positions.pop ().advance.x #end;\n\t\t\t\t\t\t\twidthValue -= spaceWidth;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (wordWrap) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (offsetX + widthValue > width - 2) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twrap = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (positions.length > 0 && endIndex == spaceIndex + 1) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// if last letter is a space, avoid word wrap if possible\n\t\t\t\t\t\t\t\t// TODO: Handle multiple spaces\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar lastPosition = positions[positions.length - 1];\n\t\t\t\t\t\t\t\tvar spaceWidth = #if (js && html5) lastPosition #else lastPosition.advance.x #end;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (offsetX + widthValue - spaceWidth <= width - 2) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\twrap = false;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (wrap) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lineFormat.align != JUSTIFY && (layoutGroup != null || layoutGroups.length > 0)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar previous = layoutGroup;\n\t\t\t\t\t\t\tif (previous == null) {\n\t\t\t\t\t\t\t\tprevious = layoutGroups[layoutGroups.length - 1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// For correct selection rectangles and alignment, trim the trailing space of the previous line:\n\t\t\t\t\t\t\tprevious.width -= previous.getAdvance (previous.positions.length - 1);\n\t\t\t\t\t\t\tprevious.endIndex--;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar i = layoutGroups.length - 1;\n\t\t\t\t\t\tvar offsetCount = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlayoutGroup = layoutGroups[i];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (i > 0 && layoutGroup.startIndex > previousSpaceIndex) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\toffsetCount++;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (textIndex == previousSpaceIndex + 1) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\talignBaseline();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\toffsetX = 2;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (offsetCount > 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar bumpX = layoutGroups[layoutGroups.length - offsetCount].offsetX;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (i in (layoutGroups.length - offsetCount)...layoutGroups.length) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlayoutGroup = layoutGroups[i];\n\t\t\t\t\t\t\t\tlayoutGroup.offsetX -= bumpX;\n\t\t\t\t\t\t\t\tlayoutGroup.offsetY = offsetY;\n\t\t\t\t\t\t\t\tlayoutGroup.lineIndex = lineIndex;\n\t\t\t\t\t\t\t\toffsetX += layoutGroup.width;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (width >= 4) breakLongWords(endIndex);\n\t\t\t\t\t\t\n\t\t\t\t\t\tnextLayoutGroup (textIndex, endIndex);\n\t\t\t\t\t\t\n\t\t\t\t\t\tlayoutGroup.positions = positions;\n\t\t\t\t\t\tlayoutGroup.offsetX = offsetX;\n\t\t\t\t\t\tlayoutGroup.ascent = ascent;\n\t\t\t\t\t\tlayoutGroup.descent = descent;\n\t\t\t\t\t\tlayoutGroup.leading = leading;\n\t\t\t\t\t\tlayoutGroup.lineIndex = lineIndex;\n\t\t\t\t\t\tlayoutGroup.offsetY = offsetY;\n\t\t\t\t\t\tlayoutGroup.width = widthValue;\n\t\t\t\t\t\tlayoutGroup.height = heightValue;\n\t\t\t\t\t\t\n\t\t\t\t\t\toffsetX += widthValue;\n\t\t\t\t\t\t\n\t\t\t\t\t\ttextIndex = endIndex;\n\t\t\t\t\t\t\n\t\t\t\t\t\twrap = false;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (layoutGroup != null && textIndex == spaceIndex) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (lineFormat.align != JUSTIFY) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlayoutGroup.endIndex = spaceIndex;\n\t\t\t\t\t\t\t\tlayoutGroup.positions = layoutGroup.positions.concat (positions);\n\t\t\t\t\t\t\t\tlayoutGroup.width += widthValue;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else if (layoutGroup == null || lineFormat.align == JUSTIFY) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tnextLayoutGroup (textIndex, endIndex);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlayoutGroup.positions = positions;\n\t\t\t\t\t\t\tlayoutGroup.offsetX = offsetX;\n\t\t\t\t\t\t\tlayoutGroup.ascent = ascent;\n\t\t\t\t\t\t\tlayoutGroup.descent = descent;\n\t\t\t\t\t\t\tlayoutGroup.leading = leading;\n\t\t\t\t\t\t\tlayoutGroup.lineIndex = lineIndex;\n\t\t\t\t\t\t\tlayoutGroup.offsetY = offsetY;\n\t\t\t\t\t\t\tlayoutGroup.width = widthValue;\n\t\t\t\t\t\t\tlayoutGroup.height = heightValue;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlayoutGroup.endIndex = endIndex;\n\t\t\t\t\t\t\tlayoutGroup.positions = layoutGroup.positions.concat (positions);\n\t\t\t\t\t\t\tlayoutGroup.width += widthValue;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// If next char is newline, process it immediately and prevent useless extra layout groups\n\t\t\t\t\t\t\tif (breakIndex == endIndex) endIndex++;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\toffsetX += widthValue;\n\t\t\t\t\t\t\n\t\t\t\t\t\ttextIndex = endIndex;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar nextSpaceIndex = text.indexOf (\" \", textIndex);\n\t\t\t\t\t\n\t\t\t\t\tif (formatRange.end <= previousSpaceIndex) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlayoutGroup = null;\n\t\t\t\t\t\ttextIndex = formatRange.end;\n\t\t\t\t\t\tnextFormatRange ();\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Check if we can continue wrapping this line until the next line-break or end-of-String.\n\t\t\t\t\t\t// When `previousSpaceIndex == breakIndex`, the loop has finished growing layoutGroup.endIndex until the end of this line.\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (breakIndex == previousSpaceIndex) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlayoutGroup.endIndex = breakIndex;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (breakIndex - layoutGroup.startIndex - layoutGroup.positions.length < 0) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Newline has no size\n\t\t\t\t\t\t\t\tlayoutGroup.positions.push (#if (js && html5) 0.0 #else null #end);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttextIndex = breakIndex + 1;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tpreviousSpaceIndex = spaceIndex;\n\t\t\t\t\t\tspaceIndex = nextSpaceIndex;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif ((breakIndex > -1 && breakIndex <= textIndex && (spaceIndex > breakIndex || spaceIndex == -1)) || textIndex > text.length || spaceIndex > formatRange.end) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t// if there are no line breaks or spaces to deal with next, place remaining text in the format range\n\t\t\t\t\n\t\t\t\tif (textIndex > formatRange.end) {\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t} else if (textIndex < formatRange.end || textIndex == text.length) {\n\t\t\t\t\t\n\t\t\t\t\tif (wordWrap && width >= 4) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreakLongWords(formatRange.end);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpositions = getPositions (text, textIndex, formatRange.end);\n\t\t\t\t\twidthValue = getPositionsWidth (positions);\n\t\t\t\t\t\n\t\t\t\t\tnextLayoutGroup (textIndex, formatRange.end);\n\t\t\t\t\t\n\t\t\t\t\tlayoutGroup.positions = getPositions (text, textIndex, formatRange.end);\n\t\t\t\t\tlayoutGroup.offsetX = offsetX;\n\t\t\t\t\tlayoutGroup.ascent = ascent;\n\t\t\t\t\tlayoutGroup.descent = descent;\n\t\t\t\t\tlayoutGroup.leading = leading;\n\t\t\t\t\tlayoutGroup.lineIndex = lineIndex;\n\t\t\t\t\tlayoutGroup.offsetY = offsetY;\n\t\t\t\t\tlayoutGroup.width = getPositionsWidth (layoutGroup.positions);\n\t\t\t\t\tlayoutGroup.height = heightValue;\n\t\t\t\t\t\n\t\t\t\t\toffsetX += widthValue;\n\t\t\t\t\ttextIndex = formatRange.end;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnextFormatRange ();\n\t\t\t\t\n\t\t\t\tif (textIndex == formatRange.end) {\n\t\t\t\t\t\n\t\t\t\t\talignBaseline();\n\t\t\t\t\t\n\t\t\t\t\ttextIndex++;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#if openfl_trace_text_layout_groups\n\t\tfor (lg in layoutGroups) {\n\t\t\ttrace(\"LG\", lg.positions.length - (lg.endIndex - lg.startIndex), \"line:\" + lg.lineIndex, \"w:\" + lg.width, \"h:\" + lg.height, \"x:\" + Std.int(lg.offsetX), \"y:\" + Std.int(lg.offsetY), '\"${text.substring(lg.startIndex, lg.endIndex)}\"', lg.startIndex, lg.endIndex);\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function setTextAlignment ():Void {\n\t\t\n\t\tvar lineIndex = -1;\n\t\tvar offsetX = 0.0;\n\t\tvar totalWidth = this.width - 4;\n\t\tvar group, lineLength;\n\t\t\n\t\tfor (i in 0...layoutGroups.length) {\n\t\t\t\n\t\t\tgroup = layoutGroups[i];\n\t\t\t\n\t\t\tif (group.lineIndex != lineIndex) {\n\t\t\t\t\n\t\t\t\tlineIndex = group.lineIndex;\n\t\t\t\t\n\t\t\t\tswitch (group.format.align) {\n\t\t\t\t\t\n\t\t\t\t\tcase CENTER:\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lineWidths[lineIndex] < totalWidth) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\toffsetX = Math.round ((totalWidth - lineWidths[lineIndex]) / 2);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\toffsetX = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase RIGHT:\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lineWidths[lineIndex] < totalWidth) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\toffsetX = Math.round (totalWidth - lineWidths[lineIndex]);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\toffsetX = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcase JUSTIFY:\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lineWidths[lineIndex] < totalWidth) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlineLength = 1;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (j in (i + 1)...layoutGroups.length) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (layoutGroups[j].lineIndex == lineIndex) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (j == 0 || text.charCodeAt (layoutGroups[j].startIndex - 1) == \" \".code){\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tlineLength++;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (lineLength > 1) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tgroup = layoutGroups[i + lineLength - 1];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar endChar = text.charCodeAt (group.endIndex);\n\t\t\t\t\t\t\t\tif (group.endIndex < text.length && endChar != \"\\n\".code && endChar != \"\\r\".code) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\toffsetX = (totalWidth - lineWidths[lineIndex]) / (lineLength - 1);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar j = 0;\n\t\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (j > 1 && text.charCodeAt (layoutGroups[j].startIndex - 1) != \" \".code) {\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tlayoutGroups[i + j].offsetX += (offsetX * (j-1));\n\t\t\t\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tlayoutGroups[i + j].offsetX += (offsetX * j);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t} while (++j < lineLength);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\toffsetX = 0;\n\t\t\t\t\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t\n\t\t\t\t\t\toffsetX = 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (offsetX > 0) {\n\t\t\t\t\n\t\t\t\tgroup.offsetX += offsetX;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function update ():Void {\n\t\t\n\t\tif (text == null /*|| text == \"\"*/ || textFormatRanges.length == 0) {\n\t\t\t\n\t\t\tlineAscents.length = 0;\n\t\t\tlineBreaks.length = 0;\n\t\t\tlineDescents.length = 0;\n\t\t\tlineLeadings.length = 0;\n\t\t\tlineHeights.length = 0;\n\t\t\tlineWidths.length = 0;\n\t\t\tlayoutGroups.length = 0;\n\t\t\t\n\t\t\ttextWidth = 0;\n\t\t\ttextHeight = 0;\n\t\t\tnumLines = 1;\n\t\t\tmaxScrollH = 0;\n\t\t\tmaxScrollV = 1;\n\t\t\tbottomScrollV = 1;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tgetLayoutGroups ();\n\t\t\tgetLineMeasurements ();\n\t\t\tsetTextAlignment ();\n\t\t\t\n\t\t}\n\t\t\n\t\tgetBounds ();\n\t\t\n\t}\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function set_restrict (value:String):String {\n\t\t\n\t\tif (restrict == value) {\n\t\t\t\n\t\t\treturn restrict;\n\t\t\t\n\t\t}\n\t\t\n\t\trestrict = value;\n\t\t\n\t\tif (restrict == null || restrict.length == 0) {\n\t\t\t\n\t\t\t__restrictRegexp = null;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__restrictRegexp = createRestrictRegexp (value);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn restrict;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_text (value:String):String {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\treturn text = value;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__restrictRegexp != null) {\n\t\t\t\n\t\t\tvalue = __restrictRegexp.split (value).join ('');\n\t\t\t\n\t\t}\n\t\t\n\t\tif (maxChars > 0 && value.length > maxChars) {\n\t\t\t\n\t\t\tvalue = value.substr (0, maxChars);\n\t\t\t\n\t\t}\n\t\t\n\t\ttext = value;\n\t\t\n\t\treturn text;\n\t\t\n\t}\n\t\n\t\n}\n","package openfl._internal.text;\n\n\nimport openfl.text.TextFormat;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass TextFormatRange {\n\t\n\t\n\tpublic var end:Int;\n\tpublic var format:TextFormat;\n\tpublic var start:Int;\n\t\n\t\n\tpublic function new (format:TextFormat, start:Int, end:Int) {\n\t\t\n\t\tthis.format = format;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.text;\n\n\nimport lime.text.GlyphPosition;\nimport openfl.text.TextFormat;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n// TODO: Need to measure all characters (including whitespace) but include a value for non-whitespace characters separately (for sake of alignment and wrapping)\n\n\nclass TextLayoutGroup {\n\t\n\t\n\tpublic var ascent:Float;\n\tpublic var descent:Float;\n\tpublic var endIndex:Int;\n\tpublic var format:TextFormat;\n\tpublic var height:Float;\n\tpublic var leading:Int;\n\tpublic var lineIndex:Int;\n\tpublic var offsetX:Float;\n\tpublic var offsetY:Float;\n\t#if (js && html5)\n\tpublic var positions:Array<Float>; // TODO: Make consistent with native?\n\t#else\n\tpublic var positions:Array<GlyphPosition>;\n\t#end\n\tpublic var startIndex:Int;\n\tpublic var width:Float;\n\t\n\t\n\tpublic function new (format:TextFormat, startIndex:Int, endIndex:Int) {\n\t\t\n\t\tthis.format = format;\n\t\tthis.startIndex = startIndex;\n\t\tthis.endIndex = endIndex;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function getAdvance (index:Int):Float {\n\t\t\n\t\t#if (js && html5)\n\t\treturn positions[index];\n\t\t#else\n\t\treturn (index >= 0 && index < positions.length) ? positions[index].advance.x : 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.timeline;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:keep class Frame {\n\t\n\t\n\tpublic var labels:Array<String>;\n\tpublic var label:String;\n\tpublic var objects:Array<FrameObject>;\n\tpublic var script:Dynamic;\n\tpublic var scriptSource:String;\n\t//public var scriptType:FrameScriptType;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.timeline;\n\n\nimport openfl._internal.swf.FilterType;\nimport openfl.display.BlendMode;\nimport openfl.geom.ColorTransform;\nimport openfl.geom.Matrix;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass FrameObject {\n\t\n\t\n\tpublic var blendMode:BlendMode;\n\tpublic var cacheAsBitmap:Null<Bool>;\n\tpublic var clipDepth:Int;\n\tpublic var colorTransform:ColorTransform;\n\tpublic var depth:Int;\n\tpublic var filters:Array<FilterType>;\n\tpublic var id:Int;\t//Also matches the tag index of the PlaceObject tag that placed this object on the display list\n\tpublic var matrix:Matrix;\n\tpublic var name:String;\n\tpublic var symbol:Int;\n\tpublic var type:FrameObjectType;\n\tpublic var visible:Null<Bool>;\n    public var lastFrameObjectWithPlacementData:FrameObject;\n\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl._internal.utils;\n\n/**\nTitle:      Perlin noise\nVersion:    1.3\nAuthor:      Ron Valstar\nAuthor URI:    http://www.sjeiti.com/\nOriginal code port from http://mrl.nyu.edu/~perlin/noise/\nand some help from http://freespace.virgin.net/hugo.elias/models/m_perlin.htm\nAS3 optimizations by Mario Klingemann http://www.quasimondo.com\nHaxe port and optimization by Nicolas Cannasse http://haxe.org\n*/\nimport openfl.display.BitmapData;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\nclass PerlinNoise {\n\n  private static var P = [\n    151,160,137,91,90,15,131,13,201,95,\n    96,53,194,233,7,225,140,36,103,30,69,\n    142,8,99,37,240,21,10,23,190,6,148,\n    247,120,234,75,0,26,197,62,94,252,\n    219,203,117,35,11,32,57,177,33,88,\n    237,149,56,87,174,20,125,136,171,\n    168,68,175,74,165,71,134,139,48,27,\n    166,77,146,158,231,83,111,229,122,\n    60,211,133,230,220,105,92,41,55,46,\n    245,40,244,102,143,54,65,25,63,161,\n    1,216,80,73,209,76,132,187,208,89,\n    18,169,200,196,135,130,116,188,159,\n    86,164,100,109,198,173,186,3,64,52,\n    217,226,250,124,123,5,202,38,147,118,\n    126,255,82,85,212,207,206,59,227,47,\n    16,58,17,182,189,28,42,223,183,170,\n    213,119,248,152,2,44,154,163,70,221,\n    153,101,155,167,43,172,9,129,22,39,\n    253,19,98,108,110,79,113,224,232,\n    178,185,112,104,218,246,97,228,251,\n    34,242,193,238,210,144,12,191,179,\n    162,241,81,51,145,235,249,14,239,\n    107,49,192,214,31,181,199,106,157,\n    184,84,204,176,115,121,50,45,127,4,\n    150,254,138,236,205,93,222,114,67,29,\n    24,72,243,141,128,195,78,66,215,61,\n    156,180,151,160,137,91,90,15,131,13,\n    201,95,96,53,194,233,7,225,140,36,\n    103,30,69,142,8,99,37,240,21,10,23,\n    190,6,148,247,120,234,75,0,26,197,\n    62,94,252,219,203,117,35,11,32,57,\n    177,33,88,237,149,56,87,174,20,125,\n    136,171,168,68,175,74,165,71,134,139,\n    48,27,166,77,146,158,231,83,111,229,\n    122,60,211,133,230,220,105,92,41,55,\n    46,245,40,244,102,143,54,65,25,63,\n    161,1,216,80,73,209,76,132,187,208,\n    89,18,169,200,196,135,130,116,188,\n    159,86,164,100,109,198,173,186,3,64,\n    52,217,226,250,124,123,5,202,38,147,\n    118,126,255,82,85,212,207,206,59,\n    227,47,16,58,17,182,189,28,42,223,\n    183,170,213,119,248,152,2,44,154,\n    163,70,221,153,101,155,167,43,172,9,\n    129,22,39,253,19,98,108,110,79,113,\n    224,232,178,185,112,104,218,246,97,\n    228,251,34,242,193,238,210,144,12,\n    191,179,162,241,81,51,145,235,249,\n    14,239,107,49,192,214,31,181,199,\n    106,157,184,84,204,176,115,121,50,\n    45,127,4,150,254,138,236,205,93,\n    222,114,67,29,24,72,243,141,128,\n    195,78,66,215,61,156,180\n  ];\n\n  var octaves : Int;\n\n  var aOctFreq:Array<Float>; // frequency per octave\n  var aOctPers:Array<Float>; // persistence per octave\n  var fPersMax:Float;// 1 / max persistence\n\n  var iXoffset:Float;\n  var iYoffset:Float;\n  var iZoffset:Float;\n\n  var baseFactor:Float;\n\n  public function new( ?seed, ?octaves, ?falloff ) {\n    if( seed == null ) seed = 123;\n    if( falloff == null ) falloff = .5;\n    this.octaves = if( octaves == null ) 4 else octaves;\n    baseFactor = 1 / 64;\n    seedOffset(seed);\n    octFreqPers(falloff);\n  }\n\n  public function fill( bitmap:BitmapData, _x:Float, _y:Float, _z:Float, ?_ ):Void {\n\n    var baseX:Float;\n\n    baseX = _x * baseFactor + iXoffset;\n    _y = _y * baseFactor + iYoffset;\n    _z = _z * baseFactor + iZoffset;\n\n    var width:Int = bitmap.width;\n    var height:Int = bitmap.height;\n\n    var p = P;\n    var octaves = octaves;\n    var aOctFreq = aOctFreq;\n    var aOctPers = aOctPers;\n\n    for ( py in 0...height )\n    {\n      _x = baseX;\n\n      for ( px in 0...width )\n      {\n        var s = 0.;\n\n        for ( i in 0...octaves )\n        {\n          var fFreq = aOctFreq[i];\n          var fPers = aOctPers[i];\n\n          var x = _x * fFreq;\n          var y = _y * fFreq;\n          var z = _z * fFreq;\n\n          var xf = x - (x % 1);\n          var yf = y - (y % 1);\n          var zf = z - (z % 1);\n\n          var X = Std.int(xf) & 255;\n          var Y = Std.int(yf) & 255;\n          var Z = Std.int(zf) & 255;\n\n          x -= xf;\n          y -= yf;\n          z -= zf;\n\n          var u = x * x * x * (x * (x*6 - 15) + 10);\n          var v = y * y * y * (y * (y*6 - 15) + 10);\n          var w = z * z * z * (z * (z*6 - 15) + 10);\n\n          var A  = (p[X]) + Y;\n          var AA = (p[A]) + Z;\n          var AB = (p[A+1]) + Z;\n          var B  = (p[X+1]) + Y;\n          var BA = (p[B]) + Z;\n          var BB = (p[B+1]) + Z;\n\n          var x1 = x-1;\n          var y1 = y-1;\n          var z1 = z-1;\n\n          var hash = (p[BB+1]) & 15;\n          var g1 = ((hash&1) == 0 ? (hash<8 ? x1 : y1) : (hash<8 ? -x1 : -y1)) + ((hash&2) == 0 ? hash<4 ? y1 : ( hash==12 ? x1 : z1 ) : hash<4 ? -y1 : ( hash==14 ? -x1 : -z1 ));\n\n          hash = (p[AB+1]) & 15;\n          var g2 = ((hash&1) == 0 ? (hash<8 ? x  : y1) : (hash<8 ? -x  : -y1)) + ((hash&2) == 0 ? hash<4 ? y1 : ( hash==12 ? x  : z1 ) : hash<4 ? -y1 : ( hash==14 ? -x : -z1 ));\n\n          hash = (p[BA+1]) & 15;\n          var g3 = ((hash&1) == 0 ? (hash<8 ? x1 : y ) : (hash<8 ? -x1 : -y )) + ((hash&2) == 0 ? hash<4 ? y  : ( hash==12 ? x1 : z1 ) : hash<4 ? -y  : ( hash==14 ? -x1 : -z1 ));\n\n          hash = (p[AA+1]) & 15;\n          var g4 = ((hash&1) == 0 ? (hash<8 ? x  : y ) : (hash<8 ? -x  : -y )) + ((hash&2) == 0 ? hash<4 ? y  : ( hash==12 ? x  : z1 ) : hash<4 ? -y  : ( hash==14 ? -x  : -z1 ));\n\n          hash = (p[BB]) & 15;\n          var g5 = ((hash&1) == 0 ? (hash<8 ? x1 : y1) : (hash<8 ? -x1 : -y1)) + ((hash&2) == 0 ? hash<4 ? y1 : ( hash==12 ? x1 : z  ) : hash<4 ? -y1 : ( hash==14 ? -x1 : -z  ));\n\n          hash = (p[AB]) & 15;\n          var g6 = ((hash&1) == 0 ? (hash<8 ? x  : y1) : (hash<8 ? -x  : -y1)) + ((hash&2) == 0 ? hash<4 ? y1 : ( hash==12 ? x  : z  ) : hash<4 ? -y1 : ( hash==14 ? -x  : -z  ));\n\n          hash = (p[BA]) & 15;\n          var g7 = ((hash&1) == 0 ? (hash<8 ? x1 : y ) : (hash<8 ? -x1 : -y )) + ((hash&2) == 0 ? hash<4 ? y  : ( hash==12 ? x1 : z  ) : hash<4 ? -y  : ( hash==14 ? -x1 : -z  ));\n\n          hash = (p[AA]) & 15;\n          var g8 = ((hash&1) == 0 ? (hash<8 ? x  : y ) : (hash<8 ? -x  : -y )) + ((hash&2) == 0 ? hash<4 ? y  : ( hash==12 ? x  : z  ) : hash<4 ? -y  : ( hash==14 ? -x  : -z  ));\n\n          g2 += u * (g1 - g2);\n          g4 += u * (g3 - g4);\n          g6 += u * (g5 - g6);\n          g8 += u * (g7 - g8);\n\n          g4 += v * (g2 - g4);\n          g8 += v * (g6 - g8);\n\n          s += ( g8 + w * (g4 - g8)) * fPers;\n        }\n\n        var color = Std.int( ( s * fPersMax + 1 ) * 128 );\n\n        bitmap.setPixel32( px, py, 0xff000000 | color << 16 | color << 8 | color );\n\n        _x += baseFactor;\n      }\n\n      _y += baseFactor;\n    }\n  }\n\n  function octFreqPers( fPersistence ) {\n\n    var fFreq:Float, fPers:Float;\n\n    aOctFreq = [];\n    aOctPers = [];\n    fPersMax = 0;\n\n    for ( i in 0...octaves ) {\n      fFreq = Math.pow(2,i);\n      fPers = Math.pow(fPersistence,i);\n      fPersMax += fPers;\n      aOctFreq.push( fFreq );\n      aOctPers.push( fPers );\n    }\n\n    fPersMax = 1 / fPersMax;\n  }\n\n  function seedOffset( iSeed : Int ) {\n    iXoffset = iSeed = Std.int((iSeed * 16807.) % 2147483647);\n    iYoffset = iSeed = Std.int((iSeed * 16807.) % 2147483647);\n    iZoffset = iSeed = Std.int((iSeed * 16807.) % 2147483647);\n  }\n}","package openfl.display;\n\n\nimport lime.app.Application in LimeApplication;\nimport lime.app.Config;\nimport openfl._internal.Lib;\nimport openfl.display.MovieClip;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.LoaderInfo)\n\n\nclass Application extends LimeApplication {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tif (Lib.application == null) {\n\t\t\t\n\t\t\tLib.application = this;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function create (config:Config):Void {\n\t\t\n\t\tthis.config = config;\n\t\t\n\t\tbackend.create (config);\n\t\t\n\t\t#if (!flash && !macro)\n\t\tif (Lib.current == null) Lib.current = new MovieClip ();\n\t\tLib.current.__loaderInfo = LoaderInfo.create (null);\n\t\tLib.current.__loaderInfo.content = Lib.current;\n\t\t#end\n\t\t\n\t\tif (config != null) {\n\t\t\t\n\t\t\tif (Reflect.hasField (config, \"fps\")) {\n\t\t\t\t\n\t\t\t\tframeRate = config.fps;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (Reflect.hasField (config, \"windows\")) {\n\t\t\t\t\n\t\t\t\tfor (windowConfig in config.windows) {\n\t\t\t\t\t\n\t\t\t\t\tvar window = new Window (windowConfig);\n\t\t\t\t\tcreateWindow (window);\n\t\t\t\t\t\n\t\t\t\t\t#if (flash || html5)\n\t\t\t\t\tbreak;\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (preloader == null || preloader.complete) {\n\t\t\t\t\n\t\t\t\tonPreloadComplete ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport openfl._internal.renderer.cairo.CairoBitmap;\nimport openfl._internal.renderer.canvas.CanvasBitmap;\nimport openfl._internal.renderer.dom.DOMBitmap;\nimport openfl._internal.renderer.opengl.GLBitmap;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\n\n#if (js && html5)\nimport js.html.ImageElement;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.BitmapData)\n@:access(openfl.display.Graphics)\n@:access(openfl.geom.ColorTransform)\n@:access(openfl.geom.Rectangle)\n\n\nclass Bitmap extends DisplayObject implements IShaderDrawable {\n\t\n\t\n\tpublic var bitmapData (get, set):BitmapData;\n\tpublic var pixelSnapping:PixelSnapping;\n\t@:beta public var shader:Shader;\n\tpublic var smoothing:Bool;\n\t\n\t#if (js && html5)\n\tprivate var __image:ImageElement;\n\t#end\n\t\n\tprivate var __bitmapData:BitmapData;\n\tprivate var __imageVersion:Int;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperty (Bitmap.prototype, \"bitmapData\", { get: untyped __js__ (\"function () { return this.get_bitmapData (); }\"), set: untyped __js__ (\"function (v) { return this.set_bitmapData (v); }\") });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (bitmapData:BitmapData = null, pixelSnapping:PixelSnapping = null, smoothing:Bool = false) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__bitmapData = bitmapData;\n\t\tthis.pixelSnapping = pixelSnapping;\n\t\tthis.smoothing = smoothing;\n\t\t\n\t\tif (pixelSnapping == null) {\n\t\t\t\n\t\t\tthis.pixelSnapping = PixelSnapping.AUTO;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __enterFrame (deltaTime:Int):Void {\n\t\t\n\t\t#if (!js || !dom)\n\t\tif (__bitmapData != null && __bitmapData.image != null) {\n\t\t\t\n\t\t\tvar image = __bitmapData.image;\n\t\t\tif (__bitmapData.image.version != __imageVersion) {\n\t\t\t\t__setRenderDirty ();\n\t\t\t\t__imageVersion = image.version;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tif (__bitmapData != null) {\n\t\t\t\n\t\t\tvar bounds = Rectangle.__pool.get ();\n\t\t\tbounds.setTo (0, 0, __bitmapData.width, __bitmapData.height);\n\t\t\tbounds.__transform (bounds, matrix);\n\t\t\t\n\t\t\trect.__expand (bounds.x, bounds.y, bounds.width, bounds.height);\n\t\t\t\n\t\t\tRectangle.__pool.release (bounds);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\n\t\t\n\t\tif (!hitObject.visible || __isMask || __bitmapData == null) return false;\n\t\tif (mask != null && !mask.__hitTestMask (x, y)) return false;\n\t\t\n\t\t__getRenderTransform ();\n\t\t\n\t\tvar px = __renderTransform.__transformInverseX (x, y);\n\t\tvar py = __renderTransform.__transformInverseY (x, y);\n\t\t\n\t\tif (px > 0 && py > 0 && px <= __bitmapData.width && py <= __bitmapData.height) {\n\t\t\t\n\t\t\tif (__scrollRect != null && !__scrollRect.contains (px, py)) {\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (stack != null && !interactiveOnly) {\n\t\t\t\t\n\t\t\t\tstack.push (hitObject);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __hitTestMask (x:Float, y:Float):Bool {\n\t\t\n\t\tif (__bitmapData == null) return false;\n\t\t\n\t\t__getRenderTransform ();\n\t\t\n\t\tvar px = __renderTransform.__transformInverseX (x, y);\n\t\tvar py = __renderTransform.__transformInverseY (x, y);\n\t\t\n\t\tif (px > 0 && py > 0 && px <= __bitmapData.width && py <= __bitmapData.height) {\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCairo (renderSession:RenderSession):Void {\n\t\t\n\t\t#if lime_cairo\n\t\t__updateCacheBitmap (renderSession, !__worldColorTransform.__isDefault ());\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) {\n\t\t\t\n\t\t\tCairoBitmap.render (__cacheBitmap, renderSession);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tCairoBitmap.render (this, renderSession);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCairoMask (renderSession:RenderSession):Void {\n\t\t\n\t\trenderSession.cairo.rectangle (0, 0, width, height);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCanvas (renderSession:RenderSession):Void {\n\t\t\n\t\t__updateCacheBitmap (renderSession, !__worldColorTransform.__isDefault ());\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) {\n\t\t\t\n\t\t\tCanvasBitmap.render (__cacheBitmap, renderSession);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tCanvasBitmap.render (this, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCanvasMask (renderSession:RenderSession):Void {\n\t\t\n\t\trenderSession.context.rect (0, 0, width, height);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderDOM (renderSession:RenderSession):Void {\n\t\t\n\t\t#if dom\n\t\t__updateCacheBitmap (renderSession, !__worldColorTransform.__isDefault ());\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) {\n\t\t\t\n\t\t\t__renderDOMClear (renderSession);\n\t\t\t__cacheBitmap.stage = stage;\n\t\t\t\n\t\t\tDOMBitmap.render (__cacheBitmap, renderSession);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tDOMBitmap.render (this, renderSession);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderDOMClear (renderSession: RenderSession):Void {\n\t\t\n\t\t#if dom\n\t\tDOMBitmap.clear (this, renderSession);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderGL (renderSession:RenderSession):Void {\n\t\t\n\t\t__updateCacheBitmap (renderSession, false);\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) {\n\t\t\t\n\t\t\tGLBitmap.render (__cacheBitmap, renderSession);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tGLBitmap.render (this, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderGLMask (renderSession:RenderSession):Void {\n\t\t\n\t\t__updateCacheBitmap (renderSession, false);\n\t\t\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) {\n\t\t\t\n\t\t\tGLBitmap.renderMask (__cacheBitmap, renderSession);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tGLBitmap.renderMask (this, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __updateCacheBitmap (renderSession:RenderSession, force:Bool):Void {\n\t\t\n\t\tif (filters == null) return;\n\t\tsuper.__updateCacheBitmap (renderSession, force);\n\t\t\n\t}\n\t\n\t\n\tpublic override function __updateMask (maskGraphics:Graphics):Void {\n\t\t\n\t\tif (__bitmapData == null) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tmaskGraphics.__commands.overrideMatrix (this.__worldTransform);\n\t\tmaskGraphics.beginFill (0);\n\t\tmaskGraphics.drawRect (0, 0, __bitmapData.width, __bitmapData.height);\n\t\t\n\t\tif (maskGraphics.__bounds == null) {\n\t\t\t\n\t\t\tmaskGraphics.__bounds = new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__getBounds (maskGraphics.__bounds, @:privateAccess Matrix.__identity);\n\t\t\n\t\tsuper.__updateMask (maskGraphics);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_bitmapData ():BitmapData {\n\t\t\n\t\treturn __bitmapData;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_bitmapData (value:BitmapData):BitmapData {\n\t\t\n\t\t__bitmapData = value;\n\t\tsmoothing = false;\n\t\t\n\t\t__setRenderDirty ();\n\t\t\n\t\tif (__filters != null && __filters.length > 0) {\n\t\t\t\n\t\t\t//__updateFilters = true;\n\t\t\t\n\t\t}\n\t\t\n\t\t__imageVersion = -1;\n\t\t\n\t\treturn __bitmapData;\n\t\t\n\t}\n\t\n\t\n\tprivate override function get_height ():Float {\n\t\t\n\t\tif (__bitmapData != null) {\n\t\t\t\n\t\t\treturn __bitmapData.height * Math.abs (scaleY);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate override function set_height (value:Float):Float {\n\t\t\n\t\tif (__bitmapData != null) {\n\t\t\t\n\t\t\tif (value != __bitmapData.height) {\n\t\t\t\t\n\t\t\t\t__setRenderDirty ();\n\t\t\t\tscaleY = value / __bitmapData.height;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate override function get_width ():Float {\n\t\t\n\t\tif (__bitmapData != null) {\n\t\t\t\n\t\t\treturn __bitmapData.width * Math.abs (__scaleX);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate override function set_width (value:Float):Float {\n\t\t\n\t\tif (__bitmapData != null) {\n\t\t\t\n\t\t\tif (value != __bitmapData.width) {\n\t\t\t\t\n\t\t\t\t__setRenderDirty ();\n\t\t\t\tscaleX = value / __bitmapData.width;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport lime.app.Future;\nimport lime.app.Promise;\nimport lime.graphics.cairo.CairoExtend;\nimport lime.graphics.cairo.CairoFilter;\nimport lime.graphics.cairo.CairoImageSurface;\nimport lime.graphics.cairo.CairoPattern;\nimport lime.graphics.cairo.CairoSurface;\nimport lime.graphics.cairo.Cairo;\nimport lime.graphics.opengl.GLBuffer;\nimport lime.graphics.opengl.GLFramebuffer;\nimport lime.graphics.opengl.GLTexture;\nimport lime.graphics.opengl.GL;\nimport lime.graphics.opengl.WebGLContext;\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.Image;\nimport lime.graphics.ImageChannel;\nimport lime.graphics.ImageBuffer;\nimport lime.graphics.utils.ImageCanvasUtil;\nimport lime.math.color.ARGB;\nimport lime.math.ColorMatrix;\nimport lime.math.Rectangle in LimeRectangle;\nimport lime.math.Vector2;\nimport lime.utils.Float32Array;\nimport lime.utils.UInt8Array;\n// import openfl.Lib;\nimport openfl._internal.renderer.canvas.CanvasBlendModeManager;\nimport openfl._internal.renderer.canvas.CanvasMaskManager;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.renderer.opengl.GLMaskManager;\nimport openfl._internal.renderer.opengl.GLRenderer;\nimport openfl._internal.utils.PerlinNoise;\nimport openfl.display3D.textures.TextureBase;\nimport openfl.errors.Error;\nimport openfl.errors.IOError;\nimport openfl.errors.TypeError;\nimport openfl.filters.BitmapFilter;\nimport openfl.geom.ColorTransform;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.utils.ByteArray;\nimport openfl.Vector;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\nimport js.html.ImageData;\nimport js.html.ImageElement;\nimport js.html.Uint8ClampedArray;\nimport js.Browser;\n#end\n\n#if lime_cairo\nimport openfl._internal.renderer.cairo.CairoBlendModeManager;\nimport openfl._internal.renderer.cairo.CairoRenderer;\nimport openfl._internal.renderer.cairo.CairoMaskManager;\n#end\n\n#if gl_stats\nimport openfl._internal.renderer.opengl.stats.GLStats;\nimport openfl._internal.renderer.opengl.stats.DrawCallContext;\n#end\n\n@:access(lime.graphics.opengl.GL)\n@:access(lime.graphics.Image)\n@:access(lime.graphics.ImageBuffer)\n@:access(lime.math.Rectangle)\n@:access(openfl._internal.renderer.opengl.GLMaskManager)\n@:access(openfl._internal.renderer.opengl.GLRenderer)\n@:access(openfl.display3D.textures.TextureBase)\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.Graphics)\n@:access(openfl.filters.BitmapFilter)\n@:access(openfl.geom.ColorTransform)\n@:access(openfl.geom.Matrix)\n@:access(openfl.geom.Point)\n@:access(openfl.geom.Rectangle)\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:autoBuild(openfl._internal.macros.AssetsMacro.embedBitmap())\n\n\nclass BitmapData implements IBitmapDrawable {\n\t\n\t\n\tprivate static inline var __bufferStride = 26;\n\tprivate static var __supportsBGRA:Null<Bool> = null;\n\tprivate static var __tempVector:Vector2 = new Vector2 ();\n\tprivate static var __textureFormat:Int;\n\tprivate static var __textureInternalFormat:Int;\n\t\n\tpublic var height (default, null):Int;\n\tpublic var image (default, null):Image;\n\t@:beta public var readable (default, null):Bool;\n\tpublic var rect (default, null):Rectangle;\n\tpublic var transparent (default, null):Bool;\n\tpublic var width (default, null):Int;\n\t\n\tprivate var __blendMode:BlendMode;\n\tprivate var __buffer:GLBuffer;\n\tprivate var __bufferColorTransform:ColorTransform;\n\tprivate var __bufferContext:GLRenderContext;\n\tprivate var __bufferAlpha:Float;\n\tprivate var __bufferData:Float32Array;\n\tprivate var __framebuffer:GLFramebuffer;\n\tprivate var __framebufferContext:GLRenderContext;\n\tprivate var __isMask:Bool;\n\tprivate var __isValid:Bool;\n\tprivate var __renderable:Bool;\n\tprivate var __surface:CairoSurface;\n\tprivate var __texture:GLTexture;\n\tprivate var __textureContext:GLRenderContext;\n\tprivate var __textureVersion:Int;\n\tprivate var __transform:Matrix;\n\tprivate var __worldAlpha:Float;\n\tprivate var __worldColorTransform:ColorTransform;\n\tprivate var __worldTransform:Matrix;\n\t\n\t\n\tpublic function new (width:Int, height:Int, transparent:Bool = true, fillColor:UInt = 0xFFFFFFFF) {\n\t\t\n\t\tthis.transparent = transparent;\n\t\t\n\t\t#if (neko || (js && html5))\n\t\twidth = width == null ? 0 : width;\n\t\theight = height == null ? 0 : height;\n\t\t#end\n\t\t\n\t\twidth = width < 0 ? 0 : width;\n\t\theight = height < 0 ? 0 : height;\n\t\t\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\trect = new Rectangle (0, 0, width, height);\n\t\t\n\t\tif (width > 0 && height > 0) {\n\t\t\t\n\t\t\tif (transparent) {\n\t\t\t\t\n\t\t\t\tif ((fillColor & 0xFF000000) == 0) {\n\t\t\t\t\t\n\t\t\t\t\tfillColor = 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tfillColor = (0xFF << 24) | (fillColor & 0xFFFFFF);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfillColor = (fillColor << 8) | ((fillColor >> 24) & 0xFF);\n\t\t\t\n\t\t\t#if sys\n\t\t\tvar buffer = new ImageBuffer (new UInt8Array (width * height * 4), width, height);\n\t\t\tbuffer.format = BGRA32;\n\t\t\tbuffer.premultiplied = true;\n\t\t\t\n\t\t\timage = new Image (buffer, 0, 0, width, height);\n\t\t\t\n\t\t\tif (fillColor != 0) {\n\t\t\t\t\n\t\t\t\timage.fillRect (image.rect, fillColor);\n\t\t\t\t\n\t\t\t}\n\t\t\t//#elseif (js && html5)\n\t\t\t//var buffer = new ImageBuffer (null, width, height);\n\t\t\t//var canvas:CanvasElement = cast Browser.document.createElement (\"canvas\");\n\t\t\t//buffer.__srcCanvas = canvas;\n\t\t\t//buffer.__srcContext = canvas.getContext (\"2d\");\n\t\t\t//\n\t\t\t//image = new Image (buffer, 0, 0, width, height);\n\t\t\t//image.type = CANVAS;\n\t\t\t//\n\t\t\t//if (fillColor != 0) {\n\t\t\t\t//\n\t\t\t\t//image.fillRect (image.rect, fillColor);\n\t\t\t\t//\n\t\t\t//}\n\t\t\t#else\n\t\t\timage = new Image (null, 0, 0, width, height, fillColor);\n\t\t\t#end\n\t\t\t\n\t\t\timage.transparent = transparent;\n\t\t\t\n\t\t\t__isValid = true;\n\t\t\treadable = true;\n\t\t\t\n\t\t}\n\t\t\n\t\t__worldTransform = new Matrix ();\n\t\t__worldColorTransform = new ColorTransform ();\n\t\t__renderable = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function applyFilter (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, filter:BitmapFilter):Void {\n\t\t\n\t\tif (!readable || sourceBitmapData == null || !sourceBitmapData.readable) return;\n\t\t\n\t\tfilter.__applyFilter (this, sourceBitmapData, sourceRect, destPoint);\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():BitmapData {\n\t\t\n\t\tif (!__isValid) {\n\t\t\t\n\t\t\treturn new BitmapData (width, height, transparent, 0);\n\t\t\t\n\t\t} else if (!readable && image == null) {\n\t\t\t\n\t\t\tvar bitmapData = new BitmapData (0, 0, transparent, 0);\n\t\t\t\n\t\t\tbitmapData.width = width;\n\t\t\tbitmapData.height = height;\n\t\t\tbitmapData.rect.copyFrom (rect);\n\t\t\t\n\t\t\tbitmapData.__framebuffer = __framebuffer;\n\t\t\tbitmapData.__framebufferContext = __framebufferContext;\n\t\t\tbitmapData.__texture = __texture;\n\t\t\tbitmapData.__textureContext = __textureContext;\n\t\t\tbitmapData.__isValid = true;\n\t\t\t\n\t\t\treturn bitmapData;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn BitmapData.fromImage (image.clone (), transparent);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function colorTransform (rect:Rectangle, colorTransform:ColorTransform):Void {\n\t\t\n\t\tif (!readable) return;\n\t\t\n\t\timage.colorTransform (rect.__toLimeRectangle (), colorTransform.__toLimeColorMatrix ());\n\t\t\n\t}\n\t\n\t\n\tpublic function compare (otherBitmapData:BitmapData):Dynamic {\n\t\t\n\t\tif (otherBitmapData == this) {\n\t\t\t\n\t\t\treturn 0;\n\t\t\t\n\t\t} else if (otherBitmapData == null) {\n\t\t\t\n\t\t\treturn -1;\n\t\t\t\n\t\t} else if (readable == false || otherBitmapData.readable == false) {\n\t\t\t\n\t\t\treturn -2;\n\t\t\t\n\t\t} else if (width != otherBitmapData.width) {\n\t\t\t\n\t\t\treturn -3;\n\t\t\t\n\t\t} else if (height != otherBitmapData.height) {\n\t\t\t\n\t\t\treturn -4;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (image != null && otherBitmapData.image != null && image.format == otherBitmapData.image.format) {\n\t\t\t\n\t\t\tvar bytes = image.data;\n\t\t\tvar otherBytes = otherBitmapData.image.data;\n\t\t\tvar equal = true;\n\t\t\t\n\t\t\tfor (i in 0...bytes.length) {\n\t\t\t\t\n\t\t\t\tif (bytes[i] != otherBytes[i]) {\n\t\t\t\t\t\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (equal) {\n\t\t\t\t\n\t\t\t\treturn 0;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar bitmapData = null;\n\t\tvar foundDifference, pixel:ARGB, otherPixel:ARGB, comparePixel:ARGB, r, g, b, a;\n\t\t\n\t\tfor (y in 0...height) {\n\t\t\t\n\t\t\tfor (x in 0...width) {\n\t\t\t\t\n\t\t\t\tfoundDifference = false;\n\t\t\t\t\n\t\t\t\tpixel = getPixel32 (x, y);\n\t\t\t\totherPixel = otherBitmapData.getPixel32 (x, y);\n\t\t\t\tcomparePixel = 0;\n\t\t\t\t\n\t\t\t\tif (pixel != otherPixel) {\n\t\t\t\t\t\n\t\t\t\t\tr = pixel.r - otherPixel.r;\n\t\t\t\t\tg = pixel.g - otherPixel.g;\n\t\t\t\t\tb = pixel.b - otherPixel.b;\n\t\t\t\t\t\n\t\t\t\t\tif (r < 0) r *= -1;\n\t\t\t\t\tif (g < 0) g *= -1;\n\t\t\t\t\tif (b < 0) b *= -1;\n\t\t\t\t\t\n\t\t\t\t\tif (r == 0 && g == 0 && b == 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\ta = pixel.a - otherPixel.a;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (a != 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcomparePixel.r = 0xFF;\n\t\t\t\t\t\t\tcomparePixel.g = 0xFF;\n\t\t\t\t\t\t\tcomparePixel.b = 0xFF;\n\t\t\t\t\t\t\tcomparePixel.a = a;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfoundDifference = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcomparePixel.r = r;\n\t\t\t\t\t\tcomparePixel.g = g;\n\t\t\t\t\t\tcomparePixel.b = b;\n\t\t\t\t\t\tcomparePixel.a = 0xFF;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfoundDifference = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (foundDifference) {\n\t\t\t\t\t\n\t\t\t\t\tif (bitmapData == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tbitmapData = new BitmapData (width, height, transparent || otherBitmapData.transparent, 0x00000000);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbitmapData.setPixel32 (x, y, comparePixel);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (bitmapData == null) {\n\t\t\t\n\t\t\treturn 0;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn bitmapData;\n\t\t\n\t}\n\t\n\t\n\tpublic function copyChannel (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:BitmapDataChannel, destChannel:BitmapDataChannel):Void {\n\t\t\n\t\tif (!readable) return;\n\t\t\n\t\tvar sourceChannel = switch (sourceChannel) {\n\t\t\t\n\t\t\tcase 1: ImageChannel.RED;\n\t\t\tcase 2: ImageChannel.GREEN;\n\t\t\tcase 4: ImageChannel.BLUE;\n\t\t\tcase 8: ImageChannel.ALPHA;\n\t\t\tdefault: return;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar destChannel = switch (destChannel) {\n\t\t\t\n\t\t\tcase 1: ImageChannel.RED;\n\t\t\tcase 2: ImageChannel.GREEN;\n\t\t\tcase 4: ImageChannel.BLUE;\n\t\t\tcase 8: ImageChannel.ALPHA;\n\t\t\tdefault: return;\n\t\t\t\n\t\t}\n\t\t\n\t\timage.copyChannel (sourceBitmapData.image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), sourceChannel, destChannel);\n\t\t\n\t}\n\t\n\t\n\tpublic function copyPixels (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, alphaBitmapData:BitmapData = null, alphaPoint:Point = null, mergeAlpha:Bool = false):Void {\n\t\t\n\t\tif (!readable || sourceBitmapData == null) return;\n\t\t\n\t\tif (alphaPoint != null) {\n\t\t\t\n\t\t\t__tempVector.x = alphaPoint.x;\n\t\t\t__tempVector.y = alphaPoint.y;\n\t\t\t\n\t\t}\n\t\t\n\t\timage.copyPixels (sourceBitmapData.image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), alphaBitmapData != null ? alphaBitmapData.image : null, alphaPoint != null ? __tempVector : null, mergeAlpha);\n\t\t\n\t}\n\t\n\t\n\tpublic function dispose ():Void {\n\t\t\n\t\timage = null;\n\t\t\n\t\twidth = 0;\n\t\theight = 0;\n\t\trect = null;\n\t\t\n\t\t__isValid = false;\n\t\treadable = false;\n\t\t\n\t\t__surface = null;\n\t\t\n\t\t__buffer = null;\n\t\t__framebuffer = null;\n\t\t__framebufferContext = null;\n\t\t__texture = null;\n\t\t__textureContext = null;\n\t\t\n\t\t//if (__texture != null) {\n\t\t\t//\n\t\t\t//var renderer = @:privateAccess Lib.current.stage.__renderer;\n\t\t\t//\n\t\t\t//if(renderer != null) {\n\t\t\t\t//\n\t\t\t\t//var renderSession = @:privateAccess renderer.renderSession;\n\t\t\t\t//var gl = renderSession.gl;\n\t\t\t\t//\n\t\t\t\t//if (gl != null) {\n\t\t\t\t\t//\n\t\t\t\t\t//gl.deleteTexture (__texture);\n\t\t\t\t\t//__texture = null;\n\t\t\t\t\t//\n\t\t\t\t//}\n\t\t\t\t//\n\t\t\t//}\n\t\t\t//\n\t\t//}\n\t\t\n\t}\n\t\n\t\n\t@:beta public function disposeImage ():Void {\n\t\t\n\t\treadable = false;\n\t\t\n\t}\n\t\n\t\n\tpublic function draw (source:IBitmapDrawable, matrix:Matrix = null, colorTransform:ColorTransform = null, blendMode:BlendMode = null, clipRect:Rectangle = null, smoothing:Bool = false):Void {\n\t\t\n\t\tif (matrix == null) {\n\t\t\t\n\t\t\tmatrix = new Matrix ();\n\t\t\t\n\t\t\tif (source.__transform != null) {\n\t\t\t\t\n\t\t\t\tmatrix.copyFrom (source.__transform);\n\t\t\t\tmatrix.tx = 0;\n\t\t\t\tmatrix.ty = 0;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!readable /*|| !source.readable*/) {\n\t\t\t\n\t\t\tif (GL.context != null) {\n\t\t\t\t\n\t\t\t\tvar gl = GL.context;\n\t\t\t\t\n\t\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, __getFramebuffer (gl));\n\t\t\t\tgl.viewport (0, 0, width, height);\n\t\t\t\t\n\t\t\t\tvar renderer = new GLRenderer (null, gl, this);\n\t\t\t\t\n\t\t\t\tvar renderSession = renderer.renderSession;\n\t\t\t\trenderSession.clearRenderDirty = false;\n\t\t\t\trenderSession.shaderManager = cast (null, GLRenderer).renderSession.shaderManager;\n\t\t\t\t\n\t\t\t\tvar matrixCache = source.__worldTransform;\n\t\t\t\tsource.__updateTransforms (matrix);\n\t\t\t\tsource.__updateChildren (false);\n\t\t\t\tsource.__renderGL (renderer.renderSession);\n\t\t\t\tsource.__updateTransforms (matrixCache);\n\t\t\t\tsource.__updateChildren (true);\n\t\t\t\t\n\t\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, null);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\t\n\t\t\tif (colorTransform != null) {\n\t\t\t\t\n\t\t\t\tvar bounds = Rectangle.__pool.get ();\n\t\t\t\tvar boundsMatrix = Matrix.__pool.get ();\n\t\t\t\t\n\t\t\t\tsource.__getBounds (bounds, boundsMatrix);\n\t\t\t\t\n\t\t\t\tvar width:Int = Math.ceil (bounds.width);\n\t\t\t\tvar height:Int = Math.ceil (bounds.height);\n\t\t\t\t\n\t\t\t\tvar copy = new BitmapData (width, height, true, 0);\n\t\t\t\tcopy.draw (source);\n\t\t\t\tcopy.colorTransform (copy.rect, colorTransform);\n\t\t\t\tsource = copy;\n\t\t\t\t\n\t\t\t\tRectangle.__pool.release (bounds);\n\t\t\t\tMatrix.__pool.release (boundsMatrix);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tImageCanvasUtil.convertToCanvas (image);\n\t\t\t\n\t\t\tvar buffer = image.buffer;\n\t\t\t\n\t\t\tvar renderSession = new RenderSession ();\n\t\t\t// renderSession.lockTransform = true;\n\t\t\trenderSession.clearRenderDirty = false;\n\t\t\trenderSession.context = cast buffer.__srcContext;\n\t\t\trenderSession.allowSmoothing = smoothing;\n\t\t\t//renderSession.roundPixels = true;\n\t\t\trenderSession.maskManager = new CanvasMaskManager (renderSession);\n\t\t\trenderSession.blendModeManager = new CanvasBlendModeManager (renderSession);\n\t\t\trenderSession.blendModeManager.setBlendMode(blendMode);\n\t\t\t\n\t\t\tif (!smoothing) {\n\t\t\t\t\n\t\t\t\tuntyped (buffer.__srcContext).mozImageSmoothingEnabled = false;\n\t\t\t\t//untyped (buffer.__srcContext).webkitImageSmoothingEnabled = false;\n\t\t\t\tuntyped (buffer.__srcContext).msImageSmoothingEnabled = false;\n\t\t\t\tuntyped (buffer.__srcContext).imageSmoothingEnabled = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (clipRect != null) {\n\t\t\t\t\n\t\t\t\trenderSession.maskManager.pushRect (clipRect, new Matrix ());\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar matrixCache = source.__worldTransform;\n\t\t\tsource.__updateTransforms (matrix);\n\t\t\tsource.__updateChildren (false);\n\t\t\tsource.__renderCanvas (renderSession);\n\t\t\tsource.__updateTransforms (matrixCache);\n\t\t\tsource.__updateChildren (true);\n\t\t\t\n\t\t\tif (!smoothing) {\n\t\t\t\t\n\t\t\t\tuntyped (buffer.__srcContext).mozImageSmoothingEnabled = true;\n\t\t\t\t//untyped (buffer.__srcContext).webkitImageSmoothingEnabled = true;\n\t\t\t\tuntyped (buffer.__srcContext).msImageSmoothingEnabled = true;\n\t\t\t\tuntyped (buffer.__srcContext).imageSmoothingEnabled = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (clipRect != null) {\n\t\t\t\t\n\t\t\t\trenderSession.maskManager.popRect ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbuffer.__srcContext.setTransform (1, 0, 0, 1, 0, 0);\n\t\t\tbuffer.__srcImageData = null;\n\t\t\tbuffer.data = null;\n\t\t\t\n\t\t\timage.dirty = true;\n\t\t\timage.version++;\n\t\t\t\n\t\t\t#elseif lime_cairo\n\t\t\t\n\t\t\tif (source == this) {\n\t\t\t\t\n\t\t\t\tsource = clone ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (colorTransform != null) {\n\t\t\t\t\n\t\t\t\tvar bounds = Rectangle.__pool.get ();\n\t\t\t\tvar boundsMatrix = Matrix.__pool.get ();\n\t\t\t\t\n\t\t\t\tsource.__getBounds (bounds, boundsMatrix);\n\t\t\t\t\n\t\t\t\tvar width:Int = Math.ceil (bounds.width);\n\t\t\t\tvar height:Int = Math.ceil (bounds.height);\n\t\t\t\t\n\t\t\t\tvar copy = new BitmapData (width, height, true, 0);\n\t\t\t\tcopy.draw (source);\n\t\t\t\tcopy.colorTransform (copy.rect, colorTransform);\n\t\t\t\tsource = copy;\n\t\t\t\t\n\t\t\t\tRectangle.__pool.release (bounds);\n\t\t\t\tMatrix.__pool.release (boundsMatrix);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar surface = getSurface ();\n\t\t\tvar cairo = new Cairo (surface);\n\t\t\t\n\t\t\tif (!smoothing) {\n\t\t\t\t\n\t\t\t\tcairo.antialias = NONE;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar renderSession = new RenderSession ();\n\t\t\t// renderSession.lockTransform = true;\n\t\t\trenderSession.clearRenderDirty = false;\n\t\t\trenderSession.cairo = cairo;\n\t\t\trenderSession.allowSmoothing = smoothing;\n\t\t\t//renderSession.roundPixels = true;\n\t\t\trenderSession.maskManager = new CairoMaskManager (renderSession);\n\t\t\trenderSession.blendModeManager = new CairoBlendModeManager (renderSession);\n\t\t\trenderSession.blendModeManager.setBlendMode(blendMode);\n\t\t\t\n\t\t\tif (clipRect != null) {\n\t\t\t\t\n\t\t\t\trenderSession.maskManager.pushRect (clipRect, new Matrix ());\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar matrixCache = source.__worldTransform;\n\t\t\tsource.__updateTransforms (matrix);\n\t\t\tsource.__updateChildren (false);\n\t\t\tsource.__renderCairo (renderSession);\n\t\t\tsource.__updateTransforms (matrixCache);\n\t\t\tsource.__updateChildren (true);\n\t\t\t\n\t\t\tif (clipRect != null) {\n\t\t\t\t\n\t\t\t\trenderSession.maskManager.popRect ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsurface.flush ();\n\t\t\t\n\t\t\timage.dirty = true;\n\t\t\timage.version++;\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function drawWithQuality (source:IBitmapDrawable, matrix:Matrix = null, colorTransform:ColorTransform = null, blendMode:BlendMode = null, clipRect:Rectangle = null, smoothing:Bool = false, quality:StageQuality = null):Void {\n\t\t\n\t\tdraw (source, matrix, colorTransform, blendMode, clipRect, quality != LOW ? smoothing : false);\n\t\t\n\t}\n\t\n\t\n\tpublic function encode (rect:Rectangle, compressor:Dynamic, byteArray:ByteArray = null):ByteArray {\n\t\t\n\t\tif (!readable || rect == null) return byteArray = null;\n\t\tif (byteArray == null) byteArray = new ByteArray();\n\t\t\n\t\tvar image = this.image;\n\t\t\n\t\tif (!rect.equals (this.rect)) {\n\t\t\t\n\t\t\tvar matrix = Matrix.__pool.get ();\n\t\t\tmatrix.tx = Math.round (-rect.x);\n\t\t\tmatrix.ty = Math.round (-rect.y);\n\t\t\t\n\t\t\tvar bitmapData = new BitmapData (Math.ceil (rect.width), Math.ceil (rect.height), true, 0);\n\t\t\tbitmapData.draw (this, matrix);\n\t\t\t\n\t\t\timage = bitmapData.image;\n\t\t\t\n\t\t\tMatrix.__pool.release (matrix);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (Std.is (compressor, PNGEncoderOptions)) {\n\t\t\t\n\t\t\tbyteArray.writeBytes (ByteArray.fromBytes (image.encode (\"png\")));\n\t\t\treturn byteArray;\n\t\t\t\n\t\t} else if (Std.is (compressor, JPEGEncoderOptions)) {\n\t\t\t\n\t\t\tbyteArray.writeBytes (ByteArray.fromBytes (image.encode (\"jpg\", cast (compressor, JPEGEncoderOptions).quality)));\n\t\t\treturn byteArray;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn byteArray = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function fillRect (rect:Rectangle, color:Int):Void {\n\t\t\n\t\tif (rect == null) return;\n\t\t\n\t\tif (transparent && (color & 0xFF000000) == 0) {\n\t\t\t\n\t\t\tcolor = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (readable) {\n\t\t\t\n\t\t\timage.fillRect (rect.__toLimeRectangle (), color, ARGB32);\n\t\t\t\n\t\t} else if (__framebuffer != null) {\n\t\t\t\n\t\t\tvar gl = GL.context;\n\t\t\tvar color:ARGB = (color:ARGB);\n\t\t\tvar useScissor = !this.rect.equals (rect);\n\t\t\t\n\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, __framebuffer);\n\t\t\t\n\t\t\tif (useScissor) {\n\t\t\t\t\n\t\t\t\tgl.enable (gl.SCISSOR_TEST);\n\t\t\t\tgl.scissor (Math.round (rect.x), Math.round (rect.y), Math.round (rect.width), Math.round (rect.height));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.clearColor (color.r / 0xFF, color.g / 0xFF, color.b / 0xFF, color.a / 0xFF);\n\t\t\tgl.clear (gl.COLOR_BUFFER_BIT);\n\t\t\t\n\t\t\tif (useScissor) {\n\t\t\t\t\n\t\t\t\tgl.disable (gl.SCISSOR_TEST);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, null);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function floodFill (x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tif (!readable) return;\n\t\timage.floodFill (x, y, color, ARGB32);\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBase64 (base64:String, type:String):BitmapData {\n\t\t\n\t\tvar bitmapData = new BitmapData (0, 0, true, 0);\n\t\tbitmapData.__fromBase64 (base64, type);\n\t\treturn bitmapData;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:ByteArray, rawAlpha:ByteArray = null):BitmapData {\n\t\t\n\t\tvar bitmapData = new BitmapData (0, 0, true, 0);\n\t\tbitmapData.__fromBytes (bytes, rawAlpha);\n\t\treturn bitmapData;\n\t\t\n\t}\n\t\n\t\n\t#if (js && html5)\n\tpublic static function fromCanvas (canvas:CanvasElement, transparent:Bool = true):BitmapData {\n\t\t\n\t\tif (canvas == null) return null;\n\t\t\n\t\tvar bitmapData = new BitmapData (0, 0, transparent, 0);\n\t\tbitmapData.__fromImage (Image.fromCanvas (canvas));\n\t\tbitmapData.image.transparent = transparent;\n\t\treturn bitmapData;\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function fromFile (path:String):BitmapData {\n\t\t\n\t\tvar bitmapData = new BitmapData (0, 0, true, 0);\n\t\tbitmapData.__fromFile (path);\n\t\treturn bitmapData;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromImage (image:Image, transparent:Bool = true):BitmapData {\n\t\t\n\t\tif (image == null || image.buffer == null) return null;\n\t\t\n\t\tvar bitmapData = new BitmapData (0, 0, transparent, 0);\n\t\tbitmapData.__fromImage (image);\n\t\tbitmapData.image.transparent = transparent;\n\t\treturn bitmapData;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromTexture (texture:TextureBase):BitmapData {\n\t\t\n\t\tif (texture == null) return null;\n\t\t\n\t\tvar bitmapData = new BitmapData (texture.__width, texture.__height, true, 0);\n\t\tbitmapData.readable = false;\n\t\tbitmapData.__texture = texture.__textureID;\n\t\tbitmapData.__textureContext = texture.__textureContext;\n\t\tbitmapData.image = null;\n\t\treturn bitmapData;\n\t\t\n\t}\n\t\n\t\n\tpublic function generateFilterRect (sourceRect:Rectangle, filter:BitmapFilter):Rectangle {\n\t\t\n\t\treturn sourceRect.clone ();\n\t\t\n\t}\n\t\n\t\n\tpublic function getBuffer (gl:GLRenderContext, alpha:Float, colorTransform:ColorTransform):GLBuffer {\n\t\t\n\t\tif (__buffer == null || __bufferContext != gl) {\n\t\t\t\n\t\t\t#if openfl_power_of_two\n\t\t\t\n\t\t\tvar newWidth = 1;\n\t\t\tvar newHeight = 1;\n\t\t\t\n\t\t\twhile (newWidth < width) {\n\t\t\t\t\n\t\t\t\tnewWidth <<= 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\twhile (newHeight < height) {\n\t\t\t\t\n\t\t\t\tnewHeight <<= 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar uvWidth = width / newWidth;\n\t\t\tvar uvHeight = height / newHeight;\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tvar uvWidth = 1;\n\t\t\tvar uvHeight = 1;\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\t//__bufferData = new Float32Array ([\n\t\t\t\t//\n\t\t\t\t//width, height, 0, uvWidth, uvHeight, alpha, (color transform, color offset...)\n\t\t\t\t//0, height, 0, 0, uvHeight, alpha, (color transform, color offset...)\n\t\t\t\t//width, 0, 0, uvWidth, 0, alpha, (color transform, color offset...)\n\t\t\t\t//0, 0, 0, 0, 0, alpha, (color transform, color offset...)\n\t\t\t\t//\n\t\t\t\t//\n\t\t\t//]);\n\t\t\t\n\t\t\t//[ colorTransform.redMultiplier, 0, 0, 0, 0, colorTransform.greenMultiplier, 0, 0, 0, 0, colorTransform.blueMultiplier, 0, 0, 0, 0, colorTransform.alphaMultiplier ];\n\t\t\t//[ colorTransform.redOffset / 255, colorTransform.greenOffset / 255, colorTransform.blueOffset / 255, colorTransform.alphaOffset / 255 ]\n\t\t\t\n\t\t\t__bufferData = new Float32Array (__bufferStride * 4);\n\t\t\t\n\t\t\t__bufferData[0] = width;\n\t\t\t__bufferData[1] = height;\n\t\t\t__bufferData[3] = uvWidth;\n\t\t\t__bufferData[4] = uvHeight;\n\t\t\t__bufferData[__bufferStride + 1] = height;\n\t\t\t__bufferData[__bufferStride + 4] = uvHeight;\n\t\t\t__bufferData[__bufferStride * 2] = width;\n\t\t\t__bufferData[__bufferStride * 2 + 3] = uvWidth;\n\t\t\t\n\t\t\tfor (i in 0...4) {\n\t\t\t\t\n\t\t\t\t__bufferData[__bufferStride * i + 5] = alpha;\n\t\t\t\t\n\t\t\t\tif (colorTransform != null) {\n\t\t\t\t\t\n\t\t\t\t\t__bufferData[__bufferStride * i + 6] = colorTransform.redMultiplier;\n\t\t\t\t\t__bufferData[__bufferStride * i + 11] = colorTransform.greenMultiplier;\n\t\t\t\t\t__bufferData[__bufferStride * i + 16] = colorTransform.blueMultiplier;\n\t\t\t\t\t__bufferData[__bufferStride * i + 21] = colorTransform.alphaMultiplier;\n\t\t\t\t\t__bufferData[__bufferStride * i + 22] = colorTransform.redOffset / 255;\n\t\t\t\t\t__bufferData[__bufferStride * i + 23] = colorTransform.greenOffset / 255;\n\t\t\t\t\t__bufferData[__bufferStride * i + 24] = colorTransform.blueOffset / 255;\n\t\t\t\t\t__bufferData[__bufferStride * i + 25] = colorTransform.alphaOffset / 255;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t__bufferData[__bufferStride * i + 6] = 1;\n\t\t\t\t\t__bufferData[__bufferStride * i + 11] = 1;\n\t\t\t\t\t__bufferData[__bufferStride * i + 16] = 1;\n\t\t\t\t\t__bufferData[__bufferStride * i + 21] = 1;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__bufferAlpha = alpha;\n\t\t\t__bufferColorTransform = colorTransform != null ? colorTransform.__clone () : null;\n\t\t\t__bufferContext = gl;\n\t\t\t__buffer = gl.createBuffer ();\n\t\t\t\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, __buffer);\n\t\t\t#if (js && html5)\n\t\t\t(gl:WebGLContext).bufferData (gl.ARRAY_BUFFER, __bufferData, gl.STATIC_DRAW);\n\t\t\t#else\n\t\t\tgl.bufferData (gl.ARRAY_BUFFER, __bufferData.byteLength, __bufferData, gl.STATIC_DRAW);\n\t\t\t#end\n\t\t\t//gl.bindBuffer (gl.ARRAY_BUFFER, null);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (__bufferAlpha != alpha) {\n\t\t\t\t\n\t\t\t\tfor (i in 0...4) {\n\t\t\t\t\t\n\t\t\t\t\t__bufferData[__bufferStride * i + 5] = alpha;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__bufferAlpha = alpha;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif ((__bufferColorTransform == null && colorTransform != null) || (__bufferColorTransform != null && !__bufferColorTransform.__equals (colorTransform))) {\n\t\t\t\t\n\t\t\t\tif (colorTransform != null) {\n\t\t\t\t\t\n\t\t\t\t\tif (__bufferColorTransform == null) {\n\t\t\t\t\t\t__bufferColorTransform = colorTransform.__clone ();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t__bufferColorTransform.__copyFrom (colorTransform);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...4) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 6] = colorTransform.redMultiplier;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 11] = colorTransform.greenMultiplier;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 16] = colorTransform.blueMultiplier;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 21] = colorTransform.alphaMultiplier;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 22] = colorTransform.redOffset / 255;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 23] = colorTransform.greenOffset / 255;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 24] = colorTransform.blueOffset / 255;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 25] = colorTransform.alphaOffset / 255;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...4) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 6] = 1;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 11] = 1;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 16] = 1;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 21] = 1;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 22] = 0;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 23] = 0;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 24] = 0;\n\t\t\t\t\t\t__bufferData[__bufferStride * i + 25] = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.bindBuffer (gl.ARRAY_BUFFER, __buffer);\n\t\t\tgl.bufferData (gl.ARRAY_BUFFER, __bufferData.byteLength, __bufferData, gl.STATIC_DRAW);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __buffer;\n\t\t\n\t}\n\t\n\t\n\tpublic function getColorBoundsRect (mask:Int, color:Int, findColor:Bool = true):Rectangle {\n\t\t\n\t\tif (!readable) return new Rectangle (0, 0, width, height);\n\t\t\n\t\tif (!transparent || ((mask >> 24) & 0xFF) > 0) {\n\t\t\t\n\t\t\tvar color = (color:ARGB);\n\t\t\tif (color.a == 0) color = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar rect = image.getColorBoundsRect (mask, color, findColor, ARGB32);\n\t\treturn new Rectangle (rect.x, rect.y, rect.width, rect.height);\n\t\t\n\t}\n\t\n\t\n\tpublic function getPixel (x:Int, y:Int):Int {\n\t\t\n\t\tif (!readable) return 0;\n\t\treturn image.getPixel (x, y, ARGB32);\n\t\t\n\t}\n\t\n\t\n\tpublic function getPixel32 (x:Int, y:Int):Int {\n\t\t\n\t\tif (!readable) return 0;\n\t\treturn image.getPixel32 (x, y, ARGB32);\n\t\t\n\t}\n\t\n\t\n\tpublic function getPixels (rect:Rectangle):ByteArray {\n\t\t\n\t\tif (!readable) return null;\n\t\tif (rect == null) rect = this.rect;\n\t\tvar byteArray = ByteArray.fromBytes (image.getPixels (rect.__toLimeRectangle (), ARGB32));\n\t\t// TODO: System endian order\n\t\tbyteArray.endian = BIG_ENDIAN;\n\t\treturn byteArray;\n\t\t\n\t}\n\t\n\t\n\tpublic function getSurface ():CairoImageSurface {\n\t\t\n\t\tif (!readable) return null;\n\t\t\n\t\tif (__surface == null) {\n\t\t\t\n\t\t\t\n\t\t\t__surface = CairoImageSurface.fromImage (image);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __surface;\n\t\t\n\t}\n\t\n\t\n\tpublic function getTexture (gl:GLRenderContext):GLTexture {\n\t\t\n\t\tif (!__isValid) return null;\n\t\t\n\t\tif (__texture == null || __textureContext != gl) {\n\t\t\t\n\t\t\t__textureContext = gl;\n\t\t\t__texture = gl.createTexture ();\n\t\t\t\n\t\t\tgl.bindTexture (gl.TEXTURE_2D, __texture);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri (gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t__textureVersion = -1;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if (js && html5)\n\t\tImageCanvasUtil.sync (image, false);\n\t\t#end\n\t\t\n\t\tif (image != null && image.version != __textureVersion) {\n\t\t\t\n\t\t\tvar internalFormat, format;\n\t\t\t\n\t\t\tif (__surface != null) {\n\t\t\t\t\n\t\t\t\t__surface.flush ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (image.buffer.bitsPerPixel == 1) {\n\t\t\t\t\n\t\t\t\tinternalFormat = gl.ALPHA;\n\t\t\t\tformat = gl.ALPHA;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (__supportsBGRA == null) {\n\t\t\t\t\t\n\t\t\t\t\t__textureInternalFormat = gl.RGBA;\n\t\t\t\t\t\n\t\t\t\t\tvar bgraExtension = null;\n\t\t\t\t\t#if (!js || !html5)\n\t\t\t\t\tbgraExtension = gl.getExtension (\"EXT_bgra\");\n\t\t\t\t\tif (bgraExtension == null)\n\t\t\t\t\t\tbgraExtension = gl.getExtension (\"EXT_texture_format_BGRA8888\");\n\t\t\t\t\tif (bgraExtension == null)\n\t\t\t\t\t\tbgraExtension = gl.getExtension (\"APPLE_texture_format_BGRA8888\");\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\tif (bgraExtension != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__supportsBGRA = true;\n\t\t\t\t\t\t__textureFormat = bgraExtension.BGRA_EXT;\n\t\t\t\t\t\t\n\t\t\t\t\t\t#if (!ios && !tvos)\n\t\t\t\t\t\tif (gl.type == GLES) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t__textureInternalFormat = bgraExtension.BGRA_EXT;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t#end\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__supportsBGRA = false;\n\t\t\t\t\t\t__textureFormat = gl.RGBA;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinternalFormat = __textureInternalFormat;\n\t\t\t\tformat = __textureFormat;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.bindTexture (gl.TEXTURE_2D, __texture);\n\t\t\t\n\t\t\tvar textureImage = image;\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\t\n\t\t\tif (textureImage.type != DATA && !textureImage.premultiplied) {\n\t\t\t\t\n\t\t\t\tgl.pixelStorei (gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n\t\t\t\t\n\t\t\t} else if (!textureImage.premultiplied && textureImage.transparent) {\n\t\t\t\t\n\t\t\t\tgl.pixelStorei (gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n\t\t\t\t//gl.pixelStorei (gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\t\t\t\t//textureImage = textureImage.clone ();\n\t\t\t\t//textureImage.premultiplied = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// TODO: Some way to support BGRA on WebGL?\n\t\t\t\n\t\t\tif (!__supportsBGRA && textureImage.format != RGBA32) {\n\t\t\t\t\n\t\t\t\ttextureImage = textureImage.clone ();\n\t\t\t\ttextureImage.format = RGBA32;\n\t\t\t\t//textureImage.buffer.premultiplied = true;\n\t\t\t\t#if openfl_power_of_two\n\t\t\t\ttextureImage.powerOfTwo = true;\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (textureImage.type == DATA) {\n\t\t\t\t\n\t\t\t\tgl.texImage2D (gl.TEXTURE_2D, 0, internalFormat, textureImage.buffer.width, textureImage.buffer.height, 0, format, gl.UNSIGNED_BYTE, textureImage.data);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t(gl:WebGLContext).texImage2D (gl.TEXTURE_2D, 0, internalFormat, format, gl.UNSIGNED_BYTE, textureImage.src);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tif (#if openfl_power_of_two !textureImage.powerOfTwo || #end (!textureImage.premultiplied && textureImage.transparent)) {\n\t\t\t\t\n\t\t\t\ttextureImage = textureImage.clone ();\n\t\t\t\ttextureImage.premultiplied = true;\n\t\t\t\t#if openfl_power_of_two\n\t\t\t\ttextureImage.powerOfTwo = true;\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tgl.texImage2D (gl.TEXTURE_2D, 0, internalFormat, textureImage.buffer.width, textureImage.buffer.height, 0, format, gl.UNSIGNED_BYTE, textureImage.data);\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t\tgl.bindTexture (gl.TEXTURE_2D, null);\n\t\t\t__textureVersion = image.version;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!readable && image != null) {\n\t\t\t\n\t\t\t__surface = null;\n\t\t\timage = null;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __texture;\n\t\t\n\t}\n\t\n\t\n\tpublic function getVector (rect:Rectangle) {\n\t\t\n\t\tvar pixels = getPixels (rect);\n\t\tvar length = Std.int (pixels.length / 4);\n\t\tvar result = new Vector<UInt> (length, true);\n\t\t\n\t\tfor (i in 0...length) {\n\t\t\t\n\t\t\tresult[i] = pixels.readUnsignedInt ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\tpublic function histogram (hRect:Rectangle = null) {\n\t\t\n\t\tvar rect = hRect != null ? hRect : new Rectangle (0, 0, width, height);\n\t\tvar pixels = getPixels (rect);\n\t\tvar result = [for (i in 0...4) [for (j in 0...256) 0]];\n\t\t\n\t\tfor (i in 0...pixels.length) {\n\t\t\t\n\t\t\t++result[i % 4][pixels.readUnsignedByte ()];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\tpublic function hitTest (firstPoint:Point, firstAlphaThreshold:Int, secondObject:Dynamic, secondBitmapDataPoint:Point = null, secondAlphaThreshold:Int = 1):Bool {\n\t\t\n\t\tif (!readable) return false;\n\t\t\n\t\t#if !openfljs\n\t\tif (Std.is (secondObject, Bitmap)) {\n\t\t\t\n\t\t\tsecondObject = cast (secondObject, Bitmap).__bitmapData;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tif (Std.is (secondObject, Point)) {\n\t\t\t\n\t\t\tvar secondPoint:Point = cast secondObject;\n\t\t\t\n\t\t\tvar x = Std.int (secondPoint.x - firstPoint.x);\n\t\t\tvar y = Std.int (secondPoint.y - firstPoint.y);\n\t\t\t\n\t\t\tif (rect.contains (x, y)) {\n\t\t\t\t\n\t\t\t\tvar pixel = getPixel32 (x, y);\n\t\t\t\t\n\t\t\t\tif ((pixel >> 24) & 0xFF > firstAlphaThreshold) {\n\t\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (Std.is (secondObject, BitmapData)) {\n\t\t\t\n\t\t\tvar secondBitmapData:BitmapData = cast secondObject;\n\t\t\tvar x, y;\n\t\t\t\n\t\t\tif (secondBitmapDataPoint == null) {\n\t\t\t\t\n\t\t\t\tx = 0;\n\t\t\t\ty = 0;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tx = Std.int (secondBitmapDataPoint.x - firstPoint.x);\n\t\t\t\ty = Std.int (secondBitmapDataPoint.y - firstPoint.y);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (rect.contains (x, y)) {\n\t\t\t\t\n\t\t\t\tvar hitRect = Rectangle.__pool.get ();\n\t\t\t\thitRect.setTo (x, y, Math.min (secondBitmapData.width, width - x), Math.min (secondBitmapData.height, height - y));\n\t\t\t\t\n\t\t\t\tvar pixels = getPixels (hitRect);\n\t\t\t\t\n\t\t\t\thitRect.offset (-x, -y);\n\t\t\t\tvar testPixels = secondBitmapData.getPixels (hitRect);\n\t\t\t\t\n\t\t\t\tvar length = Std.int (hitRect.width * hitRect.height);\n\t\t\t\tvar pixel, testPixel;\n\t\t\t\t\n\t\t\t\tRectangle.__pool.release (hitRect);\n\t\t\t\t\n\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\n\t\t\t\t\tpixel = pixels.readUnsignedInt ();\n\t\t\t\t\ttestPixel = testPixels.readUnsignedInt ();\n\t\t\t\t\t\n\t\t\t\t\tif ((pixel >> 24) & 0xFF > firstAlphaThreshold && (testPixel >> 24) & 0xFF > secondAlphaThreshold) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (Std.is (secondObject, Rectangle)) {\n\t\t\t\n\t\t\tvar secondRectangle = Rectangle.__pool.get ();\n\t\t\tsecondRectangle.copyFrom (cast secondObject);\n\t\t\tsecondRectangle.offset (-firstPoint.x, -firstPoint.y);\n\t\t\tsecondRectangle.__contract (0, 0, width, height);\n\t\t\t\n\t\t\tif (secondRectangle.width > 0 && secondRectangle.height > 0) {\n\t\t\t\t\n\t\t\t\tvar pixels = getPixels (secondRectangle);\n\t\t\t\tvar length = Std.int (pixels.length / 4);\n\t\t\t\tvar pixel;\n\t\t\t\t\n\t\t\t\tfor (i in 0...length) {\n\t\t\t\t\t\n\t\t\t\t\tpixel = pixels.readUnsignedInt ();\n\t\t\t\t\t\n\t\t\t\t\tif ((pixel >> 24) & 0xFF > firstAlphaThreshold) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tRectangle.__pool.release (secondRectangle);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tRectangle.__pool.release (secondRectangle);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromBase64 (base64:String, type:String):Future<BitmapData> {\n\t\t\n\t\treturn Image.loadFromBase64 (base64, type).then (function (image) {\n\t\t\t\n\t\t\treturn Future.withValue (BitmapData.fromImage (image));\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromBytes (bytes:ByteArray, rawAlpha:ByteArray = null):Future<BitmapData> {\n\t\t\n\t\treturn Image.loadFromBytes (bytes).then (function (image) {\n\t\t\t\n\t\t\tvar bitmapData = BitmapData.fromImage (image);\n\t\t\t\n\t\t\tif (rawAlpha != null) {\n\t\t\t\t\n\t\t\t\tbitmapData.__applyAlpha (rawAlpha);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn Future.withValue (bitmapData);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromFile (path:String):Future<BitmapData> {\n\t\t\n\t\treturn Image.loadFromFile (path).then (function (image) {\n\t\t\t\n\t\t\treturn Future.withValue (BitmapData.fromImage (image));\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic function lock ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function merge (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redMultiplier:UInt, greenMultiplier:UInt, blueMultiplier:UInt, alphaMultiplier:UInt):Void {\n\t\t\n\t\tif (!readable || sourceBitmapData == null || !sourceBitmapData.readable || sourceRect == null || destPoint == null) return;\n\t\timage.merge (sourceBitmapData.image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier);\n\t\t\n\t}\n\t\n\t\n\tpublic function noise (randomSeed:Int, low:Int = 0, high:Int = 255, channelOptions:Int = 7, grayScale:Bool = false):Void {\n\t\t\n\t\tif (!readable) return;\n\t\t\n\t\t//Seeded Random Number Generator\n\t\tvar rand:Void->Int = {\n\t\t\tfunction func():Int \n\t\t\t{\t\n\t\t\t\trandomSeed = randomSeed * 1103515245 + 12345; \n\t\t\t\treturn Std.int(Math.abs(randomSeed / 65536)) % 32768; \n\t\t\t}\n\t\t};\n\t\trand();\n\t\t\n\t\t//Range of values to value to.\n\t\tvar range:Int = high - low;\n\t\tvar data:ByteArray = new ByteArray();\n\t\t\n\t\tvar redChannel:Bool = ((channelOptions & ( 1 << 0 )) >> 0) == 1;\n\t\tvar greenChannel:Bool = ((channelOptions & ( 1 << 1 )) >> 1) == 1;\n\t\tvar blueChannel:Bool = ((channelOptions & ( 1 << 2 )) >> 2) == 1;\n\t\tvar alphaChannel:Bool = ((channelOptions & ( 1 << 3 )) >> 3) == 1;\n\t\t\n\t\tfor (y in 0...height)\n\t\t{\n\t\t\tfor (x in 0...width)\n\t\t\t{\n\t\t\t\t//Default channel colours if all channel options are false.\n\t\t\t\tvar red:Int = 0;\n\t\t\t\tvar blue:Int = 0;\n\t\t\t\tvar green:Int = 0;\n\t\t\t\tvar alpha:Int = 255;\n\t\t\t\t\n\t\t\t\tif (grayScale)\n\t\t\t\t{\n\t\t\t\t\tred = green = blue = low + (rand() % range);\n\t\t\t\t\talpha = 255;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (redChannel) red = low + (rand() % range);\n\t\t\t\t\tif (greenChannel) green = low + (rand() % range);\n\t\t\t\t\tif (blueChannel) blue = low + (rand() % range);\n\t\t\t\t\tif (alphaChannel) alpha = low + (rand() % range);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar rgb:Int = alpha;\n\t\t\t\trgb = (rgb << 8) + red;\n\t\t\t\trgb = (rgb << 8) + green;\n\t\t\t\trgb = (rgb << 8) + blue;\n\t\t\t\t\n\t\t\t\tsetPixel32(x, y, rgb);\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function paletteMap (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redArray:Array<Int> = null, greenArray:Array<Int> = null, blueArray:Array<Int> = null, alphaArray:Array<Int> = null):Void {\n\t\t\n\t\tvar sw:Int = Std.int (sourceRect.width);\n\t\tvar sh:Int = Std.int (sourceRect.height);\n\t\t\n\t\tvar pixels = sourceBitmapData.getPixels (sourceRect);\n\t\t\n\t\tvar pixelValue:Int, r:Int, g:Int, b:Int, a:Int, color:Int;\n\t\t\n\t\tfor (i in 0...(sh * sw)) {\n\t\t\t\n\t\t\tpixelValue = pixels.readUnsignedInt();\n\t\t\t\n\t\t\ta = (alphaArray == null) ? pixelValue & 0xFF000000 : alphaArray[(pixelValue >> 24) & 0xFF];\n\t\t\tr = (redArray == null) ? pixelValue & 0x00FF0000 : redArray[(pixelValue >> 16) & 0xFF];\n\t\t\tg = (greenArray == null) ? pixelValue & 0x0000FF00 : greenArray[(pixelValue >> 8) & 0xFF];\n\t\t\tb = (blueArray == null) ? pixelValue & 0x000000FF : blueArray[(pixelValue) & 0xFF];\n\t\t\t\n\t\t\tcolor = a + r + g + b;\n\t\t\t\n\t\t\tpixels.position = i * 4;\n\t\t\tpixels.writeUnsignedInt(color);\n\t\t\t\n\t\t}\n\t\t\n\t\tpixels.position = 0;\n\t\tvar destRect = Rectangle.__pool.get ();\n\t\tdestRect.setTo (destPoint.x, destPoint.y, sw, sh);\n\t\tsetPixels (destRect, pixels);\n\t\tRectangle.__pool.release (destRect);\n\t\t\n\t}\n\t\n\t\n\tpublic function perlinNoise (baseX:Float, baseY:Float, numOctaves:UInt, randomSeed:Int, stitch:Bool, fractalNoise:Bool, channelOptions:UInt = 7, grayScale:Bool = false, offsets:Array<Point> = null):Void {\n\t\t\n\t\tif (!readable) return;\n\t\tvar noise = new PerlinNoise (randomSeed, numOctaves, 0.01);\n\t\tnoise.fill (this, baseX, baseY, 0);\n\t\t\n\t}\n\t\n\t\n\tpublic function scroll (x:Int, y:Int):Void {\n\t\t\n\t\tif (!readable) return;\n\t\timage.scroll (x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixel (x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tif (!readable) return;\n\t\timage.setPixel (x, y, color, ARGB32);\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixel32 (x:Int, y:Int, color:Int):Void {\n\t\t\n\t\tif (!readable) return;\n\t\timage.setPixel32 (x, y, color, ARGB32);\n\t\t\n\t}\n\t\n\t\n\tpublic function setPixels (rect:Rectangle, byteArray:ByteArray):Void {\n\t\t\n\t\tif (!readable || rect == null) return;\n\t\t\n\t\tvar length = (rect.width * rect.height * 4);\n\t\tif (byteArray.bytesAvailable < length) throw new Error (\"End of file was encountered.\", 2030);\n\t\t\n\t\timage.setPixels (rect.__toLimeRectangle (), byteArray, ARGB32, byteArray.endian);\n\t\t\n\t}\n\t\n\t\n\tpublic function setVector (rect:Rectangle, inputVector:Vector<UInt>) {\n\t\t\n\t\tvar byteArray = new ByteArray ();\n\t\tbyteArray.length = inputVector.length * 4;\n\t\t\n\t\tfor (color in inputVector) {\n\t\t\t\n\t\t\tbyteArray.writeUnsignedInt (color);\n\t\t\t\n\t\t}\n\t\t\n\t\tbyteArray.position = 0;\n\t\tsetPixels (rect, byteArray);\n\t\t\n\t}\n\t\n\t\n\tpublic function threshold (sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, operation:String, threshold:Int, color:Int = 0x00000000, mask:Int = 0xFFFFFFFF, copySource:Bool = false):Int {\n\t\t\n\t\tif (sourceBitmapData == null || sourceRect == null || destPoint == null || sourceRect.x > sourceBitmapData.width || sourceRect.y > sourceBitmapData.height || destPoint.x > width || destPoint.y > height) return 0;\n\t\t\n\t\treturn image.threshold (sourceBitmapData.image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), operation, threshold, color, mask, copySource, ARGB32);\n\t\t\n\t}\n\t\n\t\n\tpublic function unlock (changeRect:Rectangle = null):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function __applyAlpha (alpha:ByteArray):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tImageCanvasUtil.convertToCanvas (image);\n\t\tImageCanvasUtil.createImageData (image);\n\t\t#end\n\t\t\n\t\tvar data = image.buffer.data;\n\t\t\n\t\tfor (i in 0...alpha.length) {\n\t\t\t\n\t\t\tdata[i * 4 + 3] = alpha.readUnsignedByte ();\n\t\t\t\n\t\t}\n\t\t\n\t\timage.version++;\n\t\t\n\t}\n\t\n\t\n\tprivate function __draw (source:IBitmapDrawable, matrix:Matrix = null, colorTransform:ColorTransform = null, blendMode:BlendMode = null, clipRect:Rectangle = null, smoothing:Bool = false):Void {\n\t\t\n\t\tif (matrix == null) {\n\t\t\t\n\t\t\tmatrix = new Matrix ();\n\t\t\t\n\t\t\tif (source.__transform != null) {\n\t\t\t\t\n\t\t\t\tmatrix.copyFrom (source.__transform);\n\t\t\t\tmatrix.tx = 0;\n\t\t\t\tmatrix.ty = 0;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!readable /*|| !source.readable*/) {\n\t\t\t\n\t\t\tif (GL.context != null) {\n\t\t\t\t\n\t\t\t\tvar gl = GL.context;\n\t\t\t\t\n\t\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, __getFramebuffer (gl));\n\t\t\t\tgl.viewport (0, 0, width, height);\n\t\t\t\t\n\t\t\t\tvar renderer = new GLRenderer (null, gl, this);\n\t\t\t\t\n\t\t\t\tvar renderSession = renderer.renderSession;\n\t\t\t\trenderSession.clearRenderDirty = true;\n\t\t\t\trenderSession.shaderManager = cast (null, GLRenderer).renderSession.shaderManager;\n\t\t\t\t\n\t\t\t\tvar matrixCache = source.__worldTransform;\n\t\t\t\tsource.__updateTransforms (matrix);\n\t\t\t\tsource.__updateChildren (false);\n\t\t\t\tsource.__renderGL (renderer.renderSession);\n\t\t\t\tsource.__updateTransforms (matrixCache);\n\t\t\t\tsource.__updateChildren (true);\n\t\t\t\t\n\t\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, null);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\t\n\t\t\tif (colorTransform != null) {\n\t\t\t\t\n\t\t\t\tvar bounds = Rectangle.__pool.get ();\n\t\t\t\tvar boundsMatrix = Matrix.__pool.get ();\n\t\t\t\t\n\t\t\t\tsource.__getBounds (bounds, boundsMatrix);\n\t\t\t\t\n\t\t\t\tvar width:Int = Math.ceil (bounds.width);\n\t\t\t\tvar height:Int = Math.ceil (bounds.height);\n\t\t\t\t\n\t\t\t\tvar copy = new BitmapData (width, height, true, 0);\n\t\t\t\tcopy.draw (source);\n\t\t\t\tcopy.colorTransform (copy.rect, colorTransform);\n\t\t\t\tsource = copy;\n\t\t\t\t\n\t\t\t\tRectangle.__pool.release (bounds);\n\t\t\t\tMatrix.__pool.release (boundsMatrix);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tImageCanvasUtil.convertToCanvas (image);\n\t\t\t\n\t\t\tvar buffer = image.buffer;\n\t\t\t\n\t\t\tvar renderSession = new RenderSession ();\n\t\t\t// renderSession.lockTransform = true;\n\t\t\trenderSession.clearRenderDirty = true;\n\t\t\trenderSession.context = cast buffer.__srcContext;\n\t\t\trenderSession.allowSmoothing = smoothing;\n\t\t\t//renderSession.roundPixels = true;\n\t\t\trenderSession.maskManager = new CanvasMaskManager (renderSession);\n\t\t\trenderSession.blendModeManager = new CanvasBlendModeManager (renderSession);\n\t\t\t\n\t\t\tif (!smoothing) {\n\t\t\t\t\n\t\t\t\tuntyped (buffer.__srcContext).mozImageSmoothingEnabled = false;\n\t\t\t\t//untyped (buffer.__srcContext).webkitImageSmoothingEnabled = false;\n\t\t\t\tuntyped (buffer.__srcContext).msImageSmoothingEnabled = false;\n\t\t\t\tuntyped (buffer.__srcContext).imageSmoothingEnabled = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (clipRect != null) {\n\t\t\t\t\n\t\t\t\trenderSession.maskManager.pushRect (clipRect, new Matrix ());\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar matrixCache = source.__worldTransform;\n\t\t\tsource.__updateTransforms (matrix);\n\t\t\tsource.__updateChildren (false);\n\t\t\t\n\t\t\tvar cacheRenderable = source.__renderable;\n\t\t\tif (source.__isMask) {\n\t\t\t\t\n\t\t\t\tsource.__renderable = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar cacheAlpha = source.__worldAlpha;\n \t\t\tsource.__worldAlpha = 1;\n \t\t\t\n\t\t\tsource.__renderCanvas (renderSession);\n\t\t\tsource.__renderable = cacheRenderable;\n\t\t\tsource.__worldAlpha = cacheAlpha;\n\t\t\t\n\t\t\tsource.__updateTransforms (matrixCache);\n\t\t\tsource.__updateChildren (true);\n\t\t\t\n\t\t\tif (!smoothing) {\n\t\t\t\t\n\t\t\t\tuntyped (buffer.__srcContext).mozImageSmoothingEnabled = true;\n\t\t\t\t//untyped (buffer.__srcContext).webkitImageSmoothingEnabled = true;\n\t\t\t\tuntyped (buffer.__srcContext).msImageSmoothingEnabled = true;\n\t\t\t\tuntyped (buffer.__srcContext).imageSmoothingEnabled = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (clipRect != null) {\n\t\t\t\t\n\t\t\t\trenderSession.maskManager.popRect ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tbuffer.__srcContext.setTransform (1, 0, 0, 1, 0, 0);\n\t\t\tbuffer.__srcImageData = null;\n\t\t\tbuffer.data = null;\n\t\t\t\n\t\t\timage.dirty = true;\n\t\t\timage.version++;\n\t\t\t\n\t\t\t#elseif lime_cairo\n\t\t\t\n\t\t\tif (source == this) {\n\t\t\t\t\n\t\t\t\tsource = clone ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (colorTransform != null) {\n\t\t\t\t\n\t\t\t\tvar bounds = Rectangle.__pool.get ();\n\t\t\t\tvar boundsMatrix = Matrix.__pool.get ();\n\t\t\t\t\n\t\t\t\tsource.__getBounds (bounds, boundsMatrix);\n\t\t\t\t\n\t\t\t\tvar width:Int = Math.ceil (bounds.width);\n\t\t\t\tvar height:Int = Math.ceil (bounds.height);\n\t\t\t\t\n\t\t\t\tvar copy = new BitmapData (width, height, true, 0);\n\t\t\t\tcopy.draw (source);\n\t\t\t\tcopy.colorTransform (copy.rect, colorTransform);\n\t\t\t\tsource = copy;\n\t\t\t\t\n\t\t\t\tRectangle.__pool.release (bounds);\n\t\t\t\tMatrix.__pool.release (boundsMatrix);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar surface = getSurface ();\n\t\t\tvar cairo = new Cairo (surface);\n\t\t\t\n\t\t\tif (!smoothing) {\n\t\t\t\t\n\t\t\t\tcairo.antialias = NONE;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar renderSession = new RenderSession ();\n\t\t\t// renderSession.lockTransform = true;\n\t\t\trenderSession.clearRenderDirty = true;\n\t\t\trenderSession.cairo = cairo;\n\t\t\trenderSession.allowSmoothing = smoothing;\n\t\t\t//renderSession.roundPixels = true;\n\t\t\trenderSession.maskManager = new CairoMaskManager (renderSession);\n\t\t\trenderSession.blendModeManager = new CairoBlendModeManager (renderSession);\n\t\t\t\n\t\t\tif (clipRect != null) {\n\t\t\t\t\n\t\t\t\trenderSession.maskManager.pushRect (clipRect, new Matrix ());\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar matrixCache = source.__worldTransform;\n\t\t\tsource.__updateTransforms (matrix);\n\t\t\tsource.__updateChildren (false);\n\t\t\t\n\t\t\t// TODO: Force renderable using render session?\n\t\t\t\n\t\t\tvar cacheRenderable = source.__renderable;\n\t\t\tif (source.__isMask) {\n\t\t\t\t\n\t\t\t\tsource.__renderable = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar cacheAlpha = source.__worldAlpha;\n \t\t\tsource.__worldAlpha = 1;\n \t\t\t\n\t\t\tsource.__renderCairo (renderSession);\n\t\t\tsource.__renderable = cacheRenderable;\n\t\t\tsource.__worldAlpha = cacheAlpha;\n\t\t\t\n\t\t\tsource.__updateTransforms (matrixCache);\n\t\t\tsource.__updateChildren (true);\n\t\t\t\n\t\t\tif (clipRect != null) {\n\t\t\t\t\n\t\t\t\trenderSession.maskManager.popRect ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsurface.flush ();\n\t\t\t\n\t\t\timage.dirty = true;\n\t\t\timage.version++;\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __fromBase64 (base64:String, type:String):Void {\n\t\t\n\t\tvar image = Image.fromBase64 (base64, type);\n\t\t__fromImage (image);\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __fromBytes (bytes:ByteArray, rawAlpha:ByteArray = null):Void {\n\t\t\n\t\tvar image = Image.fromBytes (bytes);\n\t\t__fromImage (image);\n\t\t\n\t\tif (rawAlpha != null) {\n\t\t\t\n\t\t\t__applyAlpha (rawAlpha);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromFile (path:String):Void {\n\t\t\n\t\tvar image = Image.fromFile (path);\n\t\t__fromImage (image);\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromImage (image:Image):Void {\n\t\t\n\t\tif (image != null && image.buffer != null) {\n\t\t\t\n\t\t\tthis.image = image;\n\t\t\t\n\t\t\twidth = image.width;\n\t\t\theight = image.height;\n\t\t\trect = new Rectangle (0, 0, image.width, image.height);\n\t\t\t\n\t\t\t#if sys\n\t\t\timage.format = BGRA32;\n\t\t\timage.premultiplied = true;\n\t\t\t#end\n\t\t\t\n\t\t\treadable = true;\n\t\t\t__isValid = true;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __getBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tvar bounds = Rectangle.__pool.get ();\n\t\tthis.rect.__transform (bounds, matrix);\n\t\trect.__expand (bounds.x, bounds.y, bounds.width, bounds.height);\n\t\tRectangle.__pool.release (bounds);\n\t\t\n\t}\n\t\n\t\n\tprivate function __getFramebuffer (gl:GLRenderContext):GLFramebuffer {\n\t\t\n\t\tif (__framebuffer == null || __framebufferContext != gl) {\n\t\t\t\n\t\t\tgetTexture (gl);\n\t\t\t\n\t\t\t__framebufferContext = gl;\n\t\t\t__framebuffer = gl.createFramebuffer ();\n\t\t\t\n\t\t\tgl.bindFramebuffer (gl.FRAMEBUFFER, __framebuffer);\n\t\t\tgl.framebufferTexture2D (gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, __texture, 0);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __framebuffer;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __loadFromBase64 (base64:String, type:String):Future<BitmapData> {\n\t\t\n\t\treturn Image.loadFromBase64 (base64, type).then (function (image) {\n\t\t\t\n\t\t\t__fromImage (image);\n\t\t\treturn Future.withValue (this);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __loadFromBytes (bytes:ByteArray, rawAlpha:ByteArray = null):Future<BitmapData> {\n\t\t\n\t\treturn Image.loadFromBytes (bytes).then (function (image) {\n\t\t\t\n\t\t\t__fromImage (image);\n\t\t\t\n\t\t\tif (rawAlpha != null) {\n\t\t\t\t\n\t\t\t\t__applyAlpha (rawAlpha);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn Future.withValue (this);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tprivate function __loadFromFile (path:String):Future<BitmapData> {\n\t\t\n\t\treturn Image.loadFromFile (path).then (function (image) {\n\t\t\t\n\t\t\t__fromImage (image);\n\t\t\treturn Future.withValue (this);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderCairo (renderSession:RenderSession):Void {\n\t\t\n\t\t#if lime_cairo\n\t\tif (!readable) return;\n\t\t\n\t\tvar cairo = renderSession.cairo;\n\t\t\n\t\tif (__worldTransform == null) __worldTransform = new Matrix ();\n\t\t\n\t\tvar transform = __worldTransform;\n\t\t\n\t\tif (renderSession.roundPixels) {\n\t\t\t\n\t\t\tvar matrix = transform.__toMatrix3 ();\n\t\t\tmatrix.tx = Math.round (matrix.tx);\n\t\t\tmatrix.ty = Math.round (matrix.ty);\n\t\t\tcairo.matrix = matrix;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tcairo.matrix = transform.__toMatrix3 ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar surface = getSurface ();\n\t\t\n\t\tif (surface != null) {\n\t\t\t\n\t\t\tvar pattern = CairoPattern.createForSurface (surface);\n\t\t\t\n\t\t\tif (!renderSession.allowSmoothing || cairo.antialias == NONE) {\n\t\t\t\t\n\t\t\t\tpattern.filter = CairoFilter.NEAREST;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tpattern.filter = CairoFilter.GOOD;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcairo.source = pattern;\n\t\t\tcairo.paint ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderCairoMask (renderSession:RenderSession):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderCanvas (renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (!readable) return;\n\t\t\n\t\tif (image.type == DATA) {\n\t\t\t\n\t\t\tImageCanvasUtil.convertToCanvas (image);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar context = renderSession.context;\n\t\t\n\t\tif (__worldTransform == null) __worldTransform = new Matrix ();\n\t\t\n\t\tcontext.globalAlpha = 1;\n\t\tvar transform = __worldTransform;\n\t\t\n\t\tif (renderSession.roundPixels) {\n\t\t\t\n\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, Std.int (transform.tx), Std.int (transform.ty));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tcontext.setTransform (transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n\t\t\t\n\t\t}\n\t\t\n\t\tcontext.drawImage (image.src, 0, 0);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderCanvasMask (renderSession:RenderSession):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderGL (renderSession:RenderSession):Void {\n\t\t\n\t\tvar renderer:GLRenderer = cast renderSession.renderer;\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\trenderSession.blendModeManager.setBlendMode (NORMAL);\n\t\t\n\t\tvar shader = renderSession.shaderManager.defaultShader;\n\t\t\n\t\tshader.data.uImage0.input = this;\n\t\tshader.data.uImage0.smoothing = renderSession.allowSmoothing && (renderSession.upscaled);\n\t\tshader.data.uMatrix.value = renderer.getMatrix (__worldTransform);\n\t\t\n\t\trenderSession.shaderManager.setShader (shader);\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, getBuffer (gl, 1, __worldColorTransform));\n\t\tgl.vertexAttribPointer (shader.data.aPosition.index, 3, gl.FLOAT, false, 6 * Float32Array.BYTES_PER_ELEMENT, 0);\n\t\tgl.vertexAttribPointer (shader.data.aTexCoord.index, 2, gl.FLOAT, false, 6 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);\n\t\tgl.vertexAttribPointer (shader.data.aAlpha.index, 1, gl.FLOAT, false, 6 * Float32Array.BYTES_PER_ELEMENT, 5 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\n\t\tgl.drawArrays (gl.TRIANGLE_STRIP, 0, 4);\n\t\t\n\t\t#if gl_stats\n\t\t\tGLStats.incrementDrawCall (DrawCallContext.STAGE);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderGLMask (renderSession:RenderSession):Void {\n\t\t\n\t\tvar renderer:GLRenderer = cast renderSession.renderer;\n\t\tvar gl = renderSession.gl;\n\t\t\n\t\tvar shader = GLMaskManager.maskShader;\n\t\t\n\t\tshader.data.uImage0.input = this;\n\t\tshader.data.uImage0.smoothing = renderSession.allowSmoothing && (renderSession.upscaled);\n\t\tshader.data.uMatrix.value = renderer.getMatrix (__worldTransform);\n\t\t\n\t\trenderSession.shaderManager.setShader (shader);\n\t\t\n\t\tgl.bindBuffer (gl.ARRAY_BUFFER, getBuffer (gl, 1, __worldColorTransform));\n\t\tgl.vertexAttribPointer (shader.data.aPosition.index, 3, gl.FLOAT, false, 6 * Float32Array.BYTES_PER_ELEMENT, 0);\n\t\tgl.vertexAttribPointer (shader.data.aTexCoord.index, 2, gl.FLOAT, false, 6 * Float32Array.BYTES_PER_ELEMENT, 3 * Float32Array.BYTES_PER_ELEMENT);\n\t\t\n\t\tgl.drawArrays (gl.TRIANGLE_STRIP, 0, 4);\n\t\t\n\t\t#if gl_stats\n\t\t\tGLStats.incrementDrawCall (DrawCallContext.STAGE);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tfunction __resize (width:Int, height:Int) {\n\t\t\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.rect.width = width;\n\t\tthis.rect.height = height;\n\t\t\n\t}\n\t\n\t\n\tprivate function __sync ():Void {\n\t\t\n\t\t#if (js && html5)\n\t\tImageCanvasUtil.sync (image, false);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function __updateChildren (transformOnly:Bool):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function __updateMask (maskGraphics:Graphics):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function __updateTransforms (overrideTransform:Matrix = null):Void {\n\t\t\n\t\tif (overrideTransform == null) {\n\t\t\t\n\t\t\t__worldTransform.identity ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__worldTransform = overrideTransform;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n","package openfl.display;\n\n\n@:enum abstract BlendMode(Null<Int>) {\n\t\n\tpublic var ADD = 0;\n\tpublic var ALPHA = 1;\n\tpublic var DARKEN = 2;\n\tpublic var DIFFERENCE = 3;\n\tpublic var ERASE = 4;\n\tpublic var HARDLIGHT = 5;\n\tpublic var INVERT = 6;\n\tpublic var LAYER = 7;\n\tpublic var LIGHTEN = 8;\n\tpublic var MULTIPLY = 9;\n\tpublic var NORMAL = 10;\n\tpublic var OVERLAY = 11;\n\tpublic var SCREEN = 12;\n\tpublic var SHADER = 13;\n\tpublic var SUBTRACT = 14;\n\t\n\t@:from private static function fromString (value:String):BlendMode {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"add\": ADD;\n\t\t\tcase \"alpha\": ALPHA;\n\t\t\tcase \"darken\": DARKEN;\n\t\t\tcase \"difference\": DIFFERENCE;\n\t\t\tcase \"erase\": ERASE;\n\t\t\tcase \"hardlight\": HARDLIGHT;\n\t\t\tcase \"invert\": INVERT;\n\t\t\tcase \"layer\": LAYER;\n\t\t\tcase \"lighten\": LIGHTEN;\n\t\t\tcase \"multiply\": MULTIPLY;\n\t\t\tcase \"normal\": NORMAL;\n\t\t\tcase \"overlay\": OVERLAY;\n\t\t\tcase \"screen\": SCREEN;\n\t\t\tcase \"shader\": SHADER;\n\t\t\tcase \"subtract\": SUBTRACT;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase BlendMode.ADD: \"add\";\n\t\t\tcase BlendMode.ALPHA: \"alpha\";\n\t\t\tcase BlendMode.DARKEN: \"darken\";\n\t\t\tcase BlendMode.DIFFERENCE: \"difference\";\n\t\t\tcase BlendMode.ERASE: \"erase\";\n\t\t\tcase BlendMode.HARDLIGHT: \"hardlight\";\n\t\t\tcase BlendMode.INVERT: \"invert\";\n\t\t\tcase BlendMode.LAYER: \"layer\";\n\t\t\tcase BlendMode.LIGHTEN: \"lighten\";\n\t\t\tcase BlendMode.MULTIPLY: \"multiply\";\n\t\t\tcase BlendMode.NORMAL: \"normal\";\n\t\t\tcase BlendMode.OVERLAY: \"overlay\";\n\t\t\tcase BlendMode.SCREEN: \"screen\";\n\t\t\tcase BlendMode.SHADER: \"shader\";\n\t\t\tcase BlendMode.SUBTRACT: \"subtract\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\n@:enum abstract CapsStyle(Null<Int>) {\n\t\n\tpublic var NONE = 0;\n\tpublic var ROUND = 1;\n\tpublic var SQUARE = 2;\n\t\n\t@:from private static function fromString (value:String):CapsStyle {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"none\": NONE;\n\t\t\tcase \"round\": ROUND;\n\t\t\tcase \"square\": SQUARE;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase CapsStyle.NONE: \"none\";\n\t\t\tcase CapsStyle.ROUND: \"round\";\n\t\t\tcase CapsStyle.SQUARE: \"square\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\nimport openfl.events.EventDispatcher;\n\n\n@:final class FrameLabel extends EventDispatcher {\n\t\n\t\n\tpublic var frame (get, never):Int;\n\tpublic var name (get, never):String;\n\t\n\tprivate var __frame:Int;\n\tprivate var __name:String;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperty (FrameLabel.prototype, \"frame\", { get: untyped __js__ (\"function () { return this.get_frame (); }\") });\n\t\tuntyped Object.defineProperty (FrameLabel.prototype, \"name\", { get: untyped __js__ (\"function () { return this.get_name (); }\") });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (name:String, frame:Int) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__name = name;\n\t\t__frame = frame;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_frame ():Int { return __frame; }\n\tprivate function get_name ():String { return __name; }\n\t\n\t\n}","package openfl.display;\n\n\n@:enum abstract GradientType(Null<Int>) {\n\t\n\tpublic var LINEAR = 0;\n\tpublic var RADIAL = 1;\n\t\n\t@:from private static function fromString (value:String):GradientType {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"linear\": LINEAR;\n\t\t\tcase \"radial\": RADIAL;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase GradientType.LINEAR: \"linear\";\n\t\t\tcase GradientType.RADIAL: \"radial\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\nimport lime.graphics.cairo.Cairo;\nimport lime.graphics.Image;\nimport openfl._internal.renderer.cairo.CairoGraphics;\nimport openfl._internal.renderer.canvas.CanvasGraphics;\nimport openfl._internal.renderer.DrawCommandBuffer;\nimport openfl._internal.renderer.DrawCommandReader;\n//import openfl._internal.renderer.opengl.utils.RenderTexture;\nimport openfl.display.Shader;\nimport openfl.errors.ArgumentError;\nimport openfl.display.GraphicsPathCommand;\nimport openfl.display.GraphicsBitmapFill;\nimport openfl.display.GraphicsEndFill;\nimport openfl.display.GraphicsGradientFill;\nimport openfl.display.GraphicsPath;\nimport openfl.display.GraphicsSolidFill;\nimport openfl.display.GraphicsStroke;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.Vector;\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.CanvasRenderingContext2D;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.display.GraphicsPath)\n@:access(openfl.geom.Matrix)\n@:access(openfl.geom.Rectangle)\n\n\n@:final class Graphics {\n\t\n\t\n\tprivate static var maxTextureHeight:Null<Int> = null;\n\tprivate static var maxTextureWidth:Null<Int> = null;\n\t\n\tprivate var __bounds:Rectangle;\n\tprivate var __commands:DrawCommandBuffer;\n\tprivate var __dirty (default, set):Bool = true;\n\tprivate var __height:Int;\n\tprivate var __managed:Bool;\n\tprivate var __positionX:Float;\n\tprivate var __positionY:Float;\n\tprivate var __renderTransform:Matrix;\n\tprivate var __strokePadding:Float;\n\tprivate var __transformDirty:Bool;\n\tprivate var __visible:Bool;\n\t//private var __cachedTexture:RenderTexture;\n\tprivate var __owner:DisplayObject;\n\tprivate var __width:Int;\n\tprivate var __worldTransform:Matrix;\n\t\n\t#if (js && html5)\n\tprivate var __canvas:CanvasElement;\n\tprivate var __context:CanvasRenderingContext2D;\n\t#else\n\tprivate var __cairo:Cairo;\n\t#end\n\t\n\tprivate var __bitmap:BitmapData;\n\t\n\t\n\tprivate function new (owner:DisplayObject) {\n\t\t\n\t\t__owner = owner;\n\t\t\n\t\t__commands = new DrawCommandBuffer ();\n\t\t__strokePadding = 0;\n\t\t__positionX = 0;\n\t\t__positionY = 0;\n\t\t__renderTransform = new Matrix ();\n\t\t__worldTransform = new Matrix ();\n\t\t__width = 0;\n\t\t__height = 0;\n\t\t\n\t\t#if (js && html5)\n\t\tmoveTo (0, 0);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function beginBitmapFill (bitmap:BitmapData, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false) {\n\t\t\n\t\t__commands.beginBitmapFill (bitmap, matrix != null ? matrix.clone () : null, repeat, smooth);\n\t\t\n\t\t__visible = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function beginFill (color:Int = 0, alpha:Float = 1):Void {\n\t\t\n\t\t__commands.beginFill (color & 0xFFFFFF, alpha);\n\t\t\n\t\tif (alpha > 0) __visible = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function beginGradientFill (type:GradientType, colors:Array<Int>, alphas:Array<Float>, ratios:Array<Int>, matrix:Matrix = null, spreadMethod:SpreadMethod = SpreadMethod.PAD, interpolationMethod:InterpolationMethod = InterpolationMethod.RGB, focalPointRatio:Float = 0):Void {\n\t\t\n\t\t__commands.beginGradientFill (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio);\n\t\t\n\t\tfor (alpha in alphas) {\n\t\t\t\n\t\t\tif (alpha > 0) {\n\t\t\t\t\n\t\t\t\t__visible = true;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function clear ():Void {\n\t\t\n\t\t__commands.clear ();\n\t\t__strokePadding = 0;\n\t\t\n\t\tif (__bounds != null) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__transformDirty = true;\n\t\t\t__bounds = null;\n\t\t\t\n\t\t}\n\t\t\n\t\t__visible = false;\n\t\t\n\t\t#if (js && html5)\n\t\tmoveTo (0, 0);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceGraphics:Graphics):Void {\n\t\t\n\t\t__bounds = sourceGraphics.__bounds != null ? sourceGraphics.__bounds.clone () : null;\n\t\t__commands = sourceGraphics.__commands.copy ();\n\t\t__dirty = true;\n\t\t__strokePadding = sourceGraphics.__strokePadding;\n\t\t__positionX = sourceGraphics.__positionX;\n\t\t__positionY = sourceGraphics.__positionY;\n\t\t__transformDirty = true;\n\t\t__visible = sourceGraphics.__visible;\n\t\t\n\t}\n\t\n\t\n\tpublic function cubicCurveTo (controlX1:Float, controlY1:Float, controlX2:Float, controlY2:Float, anchorX:Float, anchorY:Float):Void {\n\t\t\n\t\t__inflateBounds (__positionX - __strokePadding, __positionY - __strokePadding);\n\t\t__inflateBounds (__positionX + __strokePadding, __positionY + __strokePadding);\n\t\t\n\t\tvar ix1, iy1, ix2, iy2;\n\t\t\n\t\tix1 = anchorX;\n\t\tix2 = anchorX;\n\t\t\n\t\tif (!(((controlX1 < anchorX && controlX1 > __positionX) || (controlX1 > anchorX && controlX1 < __positionX)) && ((controlX2 < anchorX && controlX2 > __positionX) || (controlX2 > anchorX && controlX2 < __positionX)))) {\n\t\t\t\n\t\t\tvar u = (2 * __positionX - 4 * controlX1 + 2 * controlX2);\n\t\t\tvar v = (controlX1 - __positionX);\n\t\t\tvar w = (-__positionX + 3 * controlX1 + anchorX - 3 * controlX2);\n\t\t\t\n\t\t\tvar t1 = (-u + Math.sqrt (u * u - 4 * v * w)) / (2 * w);\n\t\t\tvar t2 = (-u - Math.sqrt (u * u - 4 * v * w)) / (2 * w);\n\t\t\t\n\t\t\tif (t1 > 0 && t1 < 1) {\n\t\t\t\t\n\t\t\t\tix1 = __calculateBezierCubicPoint (t1, __positionX, controlX1, controlX2, anchorX);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (t2 > 0 && t2 < 1) {\n\t\t\t\t\n\t\t\t\tix2 = __calculateBezierCubicPoint (t2, __positionX, controlX1, controlX2, anchorX);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tiy1 = anchorY;\n\t\tiy2 = anchorY;\n\t\t\n\t\tif (!(((controlY1 < anchorY && controlY1 > __positionX) || (controlY1 > anchorY && controlY1 < __positionX)) && ((controlY2 < anchorY && controlY2 > __positionX) || (controlY2 > anchorY && controlY2 < __positionX)))) {\n\t\t\t\n\t\t\tvar u = (2 * __positionX - 4 * controlY1 + 2 * controlY2);\n\t\t\tvar v = (controlY1 - __positionX);\n\t\t\tvar w = (-__positionX + 3 * controlY1 + anchorY - 3 * controlY2);\n\t\t\t\n\t\t\tvar t1 = (-u + Math.sqrt (u * u - 4 * v * w)) / (2 * w);\n\t\t\tvar t2 = (-u - Math.sqrt (u * u - 4 * v * w)) / (2 * w);\n\t\t\t\n\t\t\tif (t1 > 0 && t1 < 1) {\n\t\t\t\t\n\t\t\t\tiy1 = __calculateBezierCubicPoint (t1, __positionX, controlY1, controlY2, anchorY);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (t2 > 0 && t2 < 1) {\n\t\t\t\t\n\t\t\t\tiy2 = __calculateBezierCubicPoint (t2, __positionX, controlY1, controlY2, anchorY);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__inflateBounds (ix1 - __strokePadding, iy1 - __strokePadding);\n\t\t__inflateBounds (ix1 + __strokePadding, iy1 + __strokePadding);\n\t\t__inflateBounds (ix2 - __strokePadding, iy2 - __strokePadding);\n\t\t__inflateBounds (ix2 + __strokePadding, iy2 + __strokePadding);\n\t\t\n\t\t__positionX = anchorX;\n\t\t__positionY = anchorY;\n\t\t\n\t\t__inflateBounds (__positionX - __strokePadding, __positionY - __strokePadding);\n\t\t__inflateBounds (__positionX + __strokePadding, __positionY + __strokePadding);\n\t\t\n\t\t__commands.cubicCurveTo (controlX1, controlY1, controlX2, controlY2, anchorX, anchorY);\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function curveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float):Void {\n\t\t\n\t\t__inflateBounds (__positionX - __strokePadding, __positionY - __strokePadding);\n\t\t__inflateBounds (__positionX + __strokePadding, __positionY + __strokePadding);\n\t\t\n\t\tvar ix, iy;\n\t\t\n\t\tif ((controlX < anchorX && controlX > __positionX) || (controlX > anchorX && controlX < __positionX)) {\n\t\t\t\n\t\t\tix = anchorX;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar tx = ((__positionX - controlX) / (__positionX - 2 * controlX + anchorX));\n\t\t\tix = __calculateBezierQuadPoint (tx, __positionX, controlX, anchorX);\n\t\t\t\n\t\t}\n\t\t\n\t\tif ((controlY < anchorY && controlY > __positionY) || (controlY > anchorY && controlY < __positionY)) {\n\t\t\t\n\t\t\tiy = anchorY;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar ty = ((__positionY - controlY) / (__positionY - (2 * controlY) + anchorY));\n\t\t\tiy = __calculateBezierQuadPoint (ty, __positionY, controlY, anchorY);\n\t\t\t\n\t\t}\n\t\t\n\t\t__inflateBounds (ix - __strokePadding, iy - __strokePadding);\n\t\t__inflateBounds (ix + __strokePadding, iy + __strokePadding);\n\t\t\n\t\t__positionX = anchorX;\n\t\t__positionY = anchorY;\n\t\t\n\t\t__commands.curveTo (controlX, controlY, anchorX, anchorY);\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function drawCircle (x:Float, y:Float, radius:Float):Void {\n\t\t\n\t\tif (radius <= 0) return;\n\t\t\n\t\t__inflateBounds (x - radius - __strokePadding, y - radius - __strokePadding);\n\t\t__inflateBounds (x + radius + __strokePadding, y + radius + __strokePadding);\n\t\t\n\t\t__commands.drawCircle (x, y, radius);\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function drawEllipse (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (width <= 0 || height <= 0) return;\n\t\t\n\t\t__inflateBounds (x - __strokePadding, y - __strokePadding);\n\t\t__inflateBounds (x + width + __strokePadding, y + height + __strokePadding);\n\t\t\n\t\t__commands.drawEllipse (x, y, width, height);\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function drawGraphicsData (graphicsData:Vector<IGraphicsData>):Void {\n\t\t\n\t\tvar fill:GraphicsSolidFill;\n\t\tvar bitmapFill:GraphicsBitmapFill;\n\t\tvar gradientFill:GraphicsGradientFill;\n\t\tvar stroke:GraphicsStroke;\n\t\tvar path:GraphicsPath;\n\t\tvar trianglePath:GraphicsTrianglePath;\n\t\t\n\t\tfor (graphics in graphicsData) {\n\t\t\t\n\t\t\tswitch (graphics.__graphicsDataType) {\n\t\t\t\t\n\t\t\t\tcase SOLID:\n\t\t\t\t\t\n\t\t\t\t\tfill = cast graphics;\n\t\t\t\t\tbeginFill (fill.color, fill.alpha);\n\t\t\t\t\n\t\t\t\tcase BITMAP:\n\t\t\t\t\t\n\t\t\t\t\tbitmapFill = cast graphics;\n\t\t\t\t\tbeginBitmapFill (bitmapFill.bitmapData, bitmapFill.matrix, bitmapFill.repeat, bitmapFill.smooth);\n\t\t\t\t\n\t\t\t\tcase GRADIENT:\n\t\t\t\t\t\n\t\t\t\t\tgradientFill = cast graphics;\n\t\t\t\t\tbeginGradientFill (gradientFill.type, gradientFill.colors, gradientFill.alphas, gradientFill.ratios, gradientFill.matrix, gradientFill.spreadMethod, gradientFill.interpolationMethod, gradientFill.focalPointRatio);\n\t\t\t\t\n\t\t\t\tcase STROKE:\n\t\t\t\t\t\n\t\t\t\t\tstroke = cast graphics;\n\t\t\t\t\t\n\t\t\t\t\tif (stroke.fill != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar thickness:Null<Float> = stroke.thickness;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (Math.isNaN (thickness)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthickness = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tswitch (stroke.fill.__graphicsFillType) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase SOLID_FILL:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfill = cast stroke.fill;\n\t\t\t\t\t\t\t\tlineStyle (thickness, fill.color, fill.alpha, stroke.pixelHinting, stroke.scaleMode, stroke.caps, stroke.joints, stroke.miterLimit);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase BITMAP_FILL:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tbitmapFill = cast stroke.fill;\n\t\t\t\t\t\t\t\tlineStyle (thickness, 0, 1, stroke.pixelHinting, stroke.scaleMode, stroke.caps, stroke.joints, stroke.miterLimit);\n\t\t\t\t\t\t\t\tlineBitmapStyle (bitmapFill.bitmapData, bitmapFill.matrix, bitmapFill.repeat, bitmapFill.smooth);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase GRADIENT_FILL:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tgradientFill = cast stroke.fill;\n\t\t\t\t\t\t\t\tlineStyle (thickness, 0, 1, stroke.pixelHinting, stroke.scaleMode, stroke.caps, stroke.joints, stroke.miterLimit);\n\t\t\t\t\t\t\t\tlineGradientStyle (gradientFill.type, gradientFill.colors, gradientFill.alphas, gradientFill.ratios, gradientFill.matrix, gradientFill.spreadMethod, gradientFill.interpolationMethod, gradientFill.focalPointRatio);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlineStyle ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase PATH:\n\t\t\t\t\t\n\t\t\t\t\tpath = cast graphics;\n\t\t\t\t\tdrawPath (path.commands, path.data, path.winding);\n\t\t\t\t\n\t\t\t\tcase TRIANGLE_PATH:\n\t\t\t\t\t\n\t\t\t\t\ttrianglePath = cast graphics;\n\t\t\t\t\tdrawTriangles (trianglePath.vertices, trianglePath.indices, trianglePath.uvtData, trianglePath.culling);\n\t\t\t\t\n\t\t\t\tcase END:\n\t\t\t\t\t\n\t\t\t\t\tendFill ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function drawPath (commands:Vector<Int>, data:Vector<Float>, winding:GraphicsPathWinding = GraphicsPathWinding.EVEN_ODD):Void {\n\t\t\n\t\tvar dataIndex = 0;\n\t\t\n\t\tif (winding == GraphicsPathWinding.NON_ZERO) __commands.windingNonZero ();\n\t\t\n\t\tfor (command in commands) {\n\t\t\t\n\t\t\tswitch (command) {\n\t\t\t\t\n\t\t\t\tcase GraphicsPathCommand.MOVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tmoveTo (data[dataIndex], data[dataIndex + 1]);\n\t\t\t\t\tdataIndex += 2;\n\t\t\t\t\t\n\t\t\t\tcase GraphicsPathCommand.LINE_TO:\n\t\t\t\t\t\n\t\t\t\t\tlineTo (data[dataIndex], data[dataIndex + 1]);\n\t\t\t\t\tdataIndex += 2;\n\t\t\t\t\n\t\t\t\tcase GraphicsPathCommand.WIDE_MOVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tmoveTo (data[dataIndex + 2], data[dataIndex + 3]); break;\n\t\t\t\t\tdataIndex += 4;\n\t\t\t\t\n\t\t\t\tcase GraphicsPathCommand.WIDE_LINE_TO:\n\t\t\t\t\t\n\t\t\t\t\tlineTo (data[dataIndex + 2], data[dataIndex + 3]); break;\n\t\t\t\t\tdataIndex += 4;\n\t\t\t\t\t\n\t\t\t\tcase GraphicsPathCommand.CURVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tcurveTo (data[dataIndex], data[dataIndex + 1], data[dataIndex + 2], data[dataIndex + 3]);\n\t\t\t\t\tdataIndex += 4;\n\t\t\t\t\t\n\t\t\t\tcase GraphicsPathCommand.CUBIC_CURVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tcubicCurveTo (data[dataIndex], data[dataIndex + 1], data[dataIndex + 2], data[dataIndex + 3], data[dataIndex + 4], data[dataIndex + 5]);\n\t\t\t\t\tdataIndex += 6;\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// TODO: Reset to EVEN_ODD after current path is filled?\n\t\t//if (winding == GraphicsPathWinding.NON_ZERO) __commands.windingEvenOdd ();\n\t\t\n\t}\n\t\n\t\n\tpublic function drawRect (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (width <= 0 || height <= 0) return;\n\t\t\n\t\t__inflateBounds (x - __strokePadding, y - __strokePadding);\n\t\t__inflateBounds (x + width + __strokePadding, y + height + __strokePadding);\n\t\t\n\t\t__commands.drawRect (x, y, width, height);\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function drawRoundRect (x:Float, y:Float, width:Float, height:Float, ellipseWidth:Float, ellipseHeight:Null<Float> = null):Void {\n\t\t\n\t\tif (width <= 0 || height <= 0) return;\n\t\t\n\t\t__inflateBounds (x - __strokePadding, y - __strokePadding);\n\t\t__inflateBounds (x + width + __strokePadding, y + height + __strokePadding);\n\t\t\n\t\t__commands.drawRoundRect (x, y, width, height, ellipseWidth, ellipseHeight);\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function drawRoundRectComplex (x:Float, y:Float, width:Float, height:Float, topLeftRadius:Float, topRightRadius:Float, bottomLeftRadius:Float, bottomRightRadius:Float):Void {\n\t\t\n\t\tif (width <= 0 || height <= 0) return;\n\t\t\n\t\t__inflateBounds (x - __strokePadding, y - __strokePadding);\n\t\t__inflateBounds (x + width + __strokePadding, y + height + __strokePadding);\n\t\t\n\t\tvar xw = x + width;\n\t\tvar yh = y + height;\n\t\tvar minSize = width < height ? width * 2 : height * 2;\n\t\ttopLeftRadius = topLeftRadius < minSize ? topLeftRadius : minSize;\n\t\ttopRightRadius = topRightRadius < minSize ? topRightRadius : minSize;\n\t\tbottomLeftRadius = bottomLeftRadius < minSize ? bottomLeftRadius : minSize;\n\t\tbottomRightRadius = bottomRightRadius < minSize ? bottomRightRadius : minSize;\n\t\t\n\t\tvar anchor = (1 - Math.sin (45 * (Math.PI / 180)));\n\t\tvar control = (1 - Math.tan (22.5 * (Math.PI / 180)));\n\t\t\n\t\tvar a = bottomRightRadius * anchor;\n\t\tvar s = bottomRightRadius * control;\n\t\tmoveTo (xw, yh - bottomRightRadius);\n\t\tcurveTo (xw, yh - s, xw - a, yh - a);\n\t\tcurveTo (xw - s, yh, xw - bottomRightRadius, yh);\n\t\t\n\t\ta = bottomLeftRadius * anchor;\n\t\ts = bottomLeftRadius * control;\n\t\tlineTo (x + bottomLeftRadius, yh);\n\t\tcurveTo (x + s, yh, x + a, yh - a);\n\t\tcurveTo (x, yh - s, x, yh - bottomLeftRadius);\n\t\t\n\t\ta = topLeftRadius * anchor;\n\t\ts = topLeftRadius * control;\n\t\tlineTo (x, y + topLeftRadius);\n\t\tcurveTo (x, y + s, x + a, y + a);\n\t\tcurveTo (x + s, y, x + topLeftRadius, y);\n\t\t\n\t\ta = topRightRadius * anchor;\n\t\ts = topRightRadius * control;\n\t\tlineTo (xw - topRightRadius, y);\n\t\tcurveTo (xw - s, y, xw - a, y + a);\n\t\tcurveTo (xw, y + s, xw, y + topRightRadius);\n\t\tlineTo (xw, yh - bottomRightRadius);\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function drawTriangles (vertices:Vector<Float>, indices:Vector<Int> = null, uvtData:Vector<Float> = null, culling:TriangleCulling = TriangleCulling.NONE):Void {\n\t\t\n\t\tif (vertices == null) return;\n\t\t\n\t\tvar vlen = Std.int (vertices.length / 2);\n\t\t\n\t\tif (culling == null) {\n\t\t\t\n\t\t\tculling = NONE;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (indices == null) {\n\t\t\t\n\t\t\tif (vlen % 3 != 0) {\n\t\t\t\t\n\t\t\t\tthrow new ArgumentError (\"Not enough vertices to close a triangle.\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tindices = new Vector<Int> ();\n\t\t\t\n\t\t\tfor (i in 0...vlen) {\n\t\t\t\t\n\t\t\t\tindices.push (i);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__inflateBounds (0, 0);\n\t\t\n\t\tvar tmpx = Math.NEGATIVE_INFINITY;\n\t\tvar tmpy = Math.NEGATIVE_INFINITY;\n\t\tvar maxX = Math.NEGATIVE_INFINITY;\n\t\tvar maxY = Math.NEGATIVE_INFINITY;\n\t\t\n\t\tfor (i in 0...vlen) {\n\t\t\t\n\t\t\ttmpx = vertices[i * 2];\n\t\t\ttmpy = vertices[i * 2 + 1];\n\t\t\tif (maxX < tmpx) maxX = tmpx;\n\t\t\tif (maxY < tmpy) maxY = tmpy;\n\t\t\t\n\t\t}\n\t\t\n\t\t__inflateBounds (maxX, maxY);\n\t\t__commands.drawTriangles (vertices, indices, uvtData, culling);\n\t\t\n\t\t__dirty = true;\n\t\t__visible = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function endFill ():Void {\n\t\t\n\t\t__commands.endFill();\n\t\t\n\t}\n\t\n\t\n\tpublic function lineBitmapStyle (bitmap:BitmapData, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false):Void {\n\t\t\n\t\t__commands.lineBitmapStyle (bitmap, matrix != null ? matrix.clone () : null, repeat, smooth);\n\t\t\n\t}\n\t\n\t\n\tpublic function lineGradientStyle (type:GradientType, colors:Array<Int>, alphas:Array<Float>, ratios:Array<Int>, matrix:Matrix = null, spreadMethod:SpreadMethod = SpreadMethod.PAD, interpolationMethod:InterpolationMethod = InterpolationMethod.RGB, focalPointRatio:Float = 0):Void {\n\t\t\n\t\t__commands.lineGradientStyle (type, colors, alphas, ratios, matrix, spreadMethod, interpolationMethod, focalPointRatio);\n\t\t\n\t}\n\t\n\t\n\tpublic function lineStyle (thickness:Null<Float> = null, color:Int = 0, alpha:Float = 1, pixelHinting:Bool = false, scaleMode:LineScaleMode = LineScaleMode.NORMAL, caps:CapsStyle = null, joints:JointStyle = null, miterLimit:Float = 3):Void {\n\t\t\n\t\tif (thickness != null) {\n\t\t\t\n\t\t\tif (joints == JointStyle.MITER) {\n\t\t\t\t\n\t\t\t\tif (thickness > __strokePadding) __strokePadding = thickness;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (thickness / 2 > __strokePadding) __strokePadding = thickness / 2;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__commands.lineStyle (thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit);\n\t\t\n\t\tif (thickness != null) __visible = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function lineTo (x:Float, y:Float):Void {\n\t\t\n\t\tif (!Math.isFinite(x) || !Math.isFinite(y)) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\t// TODO: Should we consider the origin instead, instead of inflating in all directions?\n\t\t\n\t\t__inflateBounds (__positionX - __strokePadding, __positionY - __strokePadding);\n\t\t__inflateBounds (__positionX + __strokePadding, __positionY + __strokePadding);\n\t\t\n\t\t__positionX = x;\n\t\t__positionY = y;\n\t\t\n\t\t__inflateBounds (__positionX - __strokePadding, __positionY - __strokePadding);\n\t\t__inflateBounds (__positionX + __strokePadding * 2, __positionY + __strokePadding);\n\t\t\n\t\t__commands.lineTo (x, y);\n\t\t\n\t\t__dirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function moveTo (x:Float, y:Float):Void {\n\t\t\n\t\t__positionX = x;\n\t\t__positionY = y;\n\t\t\n\t\t__commands.moveTo (x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic function readGraphicsData (recurse:Bool = true):Vector<IGraphicsData> {\n\t\t\n\t\tvar graphicsData = new Vector<IGraphicsData> ();\n\t\t__owner.__readGraphicsData (graphicsData, recurse);\n\t\treturn graphicsData;\n\t\t\n\t}\n\t\n\t\n\tprivate function __calculateBezierCubicPoint (t:Float, p1:Float, p2:Float, p3:Float, p4:Float):Float {\n\t\t\n\t\tvar iT = 1 - t;\n\t\treturn p1 * (iT * iT * iT) + 3 * p2 * t * (iT * iT) + 3 * p3 * iT * (t * t) + p4 * (t * t * t);\n\t\t\n\t}\n\t\n\t\n\tprivate function __calculateBezierQuadPoint (t:Float, p1:Float, p2:Float, p3:Float):Float {\n\t\t\n\t\tvar iT = 1 - t;\n\t\treturn iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n\t\t\n\t}\n\t\n\t\n\tprivate function __cleanup ():Void {\n\t\t\n\t\tif (__bounds != null) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__transformDirty = true;\n\t\t\t\n\t\t}\n\t\t\n\t\t__bitmap = null;\n\t\t\n\t\t#if (js && html5)\n\t\t__canvas = null;\n\t\t__context = null;\n\t\t#else\n\t\t__cairo = null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __getBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tif (__bounds == null) return;\n\t\t\n\t\tvar bounds = Rectangle.__pool.get ();\n\t\t__bounds.__transform (bounds, matrix);\n\t\trect.__expand (bounds.x, bounds.y, bounds.width, bounds.height);\n\t\tRectangle.__pool.release (bounds);\n\t\t\n\t}\n\t\n\t\n\tprivate function __hitTest (x:Float, y:Float, shapeFlag:Bool, matrix:Matrix):Bool {\n\t\t\n\t\tif (__bounds == null) return false;\n\t\t\n\t\tvar px = matrix.__transformInverseX (x, y);\n\t\tvar py = matrix.__transformInverseY (x, y);\n\t\t\n\t\tif (px > __bounds.x && py > __bounds.y && __bounds.contains (px, py)) {\n\t\t\t\n\t\t\tif (shapeFlag) {\n\t\t\t\t\n\t\t\t\t#if (js && html5)\n\t\t\t\treturn CanvasGraphics.hitTest (this, px, py);\n\t\t\t\t#elseif (lime_cffi)\n\t\t\t\treturn CairoGraphics.hitTest (this, px, py);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate function __inflateBounds (x:Float, y:Float):Void {\n\t\t\n\t\tif (__bounds == null) {\n\t\t\t\n\t\t\t__bounds = new Rectangle (x, y, 0, 0);\n\t\t\t__transformDirty = true;\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (x < __bounds.x) {\n\t\t\t\n\t\t\t__bounds.width += __bounds.x - x;\n\t\t\t__bounds.x = x;\n\t\t\t__transformDirty = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (y < __bounds.y) {\n\t\t\t\n\t\t\t__bounds.height += __bounds.y - y;\n\t\t\t__bounds.y = y;\n\t\t\t__transformDirty = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (x > __bounds.x + __bounds.width) {\n\t\t\t\n\t\t\t__bounds.width = x - __bounds.x;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (y > __bounds.y + __bounds.height) {\n\t\t\t\n\t\t\t__bounds.height = y - __bounds.y;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __readGraphicsData (graphicsData:Vector<IGraphicsData>):Void {\n\t\t\n\t\tvar data = new DrawCommandReader (__commands);\n\t\tvar path = null, stroke;\n\t\t\n\t\tfor (type in __commands.types) {\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase CUBIC_CURVE_TO, CURVE_TO, LINE_TO, MOVE_TO, DRAW_CIRCLE, DRAW_ELLIPSE, DRAW_RECT, DRAW_ROUND_RECT:\n\t\t\t\t\t\n\t\t\t\t\tif (path == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tpath = new GraphicsPath ();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\tif (path != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tgraphicsData.push (path);\n\t\t\t\t\t\tpath = null;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tswitch (type) {\n\t\t\t\t\n\t\t\t\tcase CUBIC_CURVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readCubicCurveTo ();\n\t\t\t\t\tpath.cubicCurveTo (c.controlX1, c.controlY1, c.controlX2, c.controlY2, c.anchorX, c.anchorY);\n\t\t\t\t\n\t\t\t\tcase CURVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readCurveTo ();\n\t\t\t\t\tpath.curveTo (c.controlX, c.controlY, c.anchorX, c.anchorY);\n\t\t\t\t\n\t\t\t\tcase LINE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineTo ();\n\t\t\t\t\tpath.lineTo (c.x, c.y);\n\t\t\t\t\t\n\t\t\t\tcase MOVE_TO:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readMoveTo ();\n\t\t\t\t\tpath.moveTo (c.x, c.y);\n\t\t\t\t\n\t\t\t\tcase DRAW_CIRCLE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawCircle ();\n\t\t\t\t\tpath.__drawCircle (c.x, c.y, c.radius);\n\t\t\t\t\n\t\t\t\tcase DRAW_ELLIPSE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawEllipse ();\n\t\t\t\t\tpath.__drawEllipse (c.x, c.y, c.width, c.height);\n\t\t\t\t\n\t\t\t\tcase DRAW_RECT:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawRect ();\n\t\t\t\t\tpath.__drawRect (c.x, c.y, c.width, c.height);\n\t\t\t\t\n\t\t\t\tcase DRAW_ROUND_RECT:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readDrawRoundRect ();\n\t\t\t\t\tpath.__drawRoundRect (c.x, c.y, c.width, c.height, c.ellipseWidth, c.ellipseHeight != null ? c.ellipseHeight : c.ellipseWidth);\n\t\t\t\t\n\t\t\t\tcase LINE_GRADIENT_STYLE:\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineGradientStyle ();\n\t\t\t\t\t//stroke = new GraphicsStroke (c.thickness, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\n\t\t\t\t\t//stroke.fill = new GraphicsGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio);\n\t\t\t\t\t//graphicsData.push (stroke);\n\t\t\t\t\n\t\t\t\tcase LINE_BITMAP_STYLE:\n\t\t\t\t\t\n\t\t\t\t\t// TODO\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineBitmapStyle ();\n\t\t\t\t\tpath = null;\n\t\t\t\t\t//stroke = new GraphicsStroke (c.thickness, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\n\t\t\t\t\t//stroke.fill = new GraphicsBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth);\n\t\t\t\t\t//graphicsData.push (stroke);\n\t\t\t\t\n\t\t\t\tcase LINE_STYLE:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readLineStyle ();\n\t\t\t\t\tstroke = new GraphicsStroke (c.thickness, c.pixelHinting, c.scaleMode, c.caps, c.joints, c.miterLimit);\n\t\t\t\t\tstroke.fill = new GraphicsSolidFill (c.color, c.alpha);\n\t\t\t\t\tgraphicsData.push (stroke);\n\t\t\t\t\n\t\t\t\tcase END_FILL:\n\t\t\t\t\t\n\t\t\t\t\tdata.readEndFill ();\n\t\t\t\t\tgraphicsData.push (new GraphicsEndFill ());\n\t\t\t\t\n\t\t\t\tcase BEGIN_BITMAP_FILL:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readBeginBitmapFill ();\n\t\t\t\t\tgraphicsData.push (new GraphicsBitmapFill (c.bitmap, c.matrix, c.repeat, c.smooth));\n\t\t\t\t\n\t\t\t\tcase BEGIN_FILL:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readBeginFill ();\n\t\t\t\t\tgraphicsData.push (new GraphicsSolidFill (c.color, 1));\n\t\t\t\t\n\t\t\t\tcase BEGIN_GRADIENT_FILL:\n\t\t\t\t\t\n\t\t\t\t\tvar c = data.readBeginGradientFill ();\n\t\t\t\t\tgraphicsData.push (new GraphicsGradientFill (c.type, c.colors, c.alphas, c.ratios, c.matrix, c.spreadMethod, c.interpolationMethod, c.focalPointRatio));\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\tdata.skip (type);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (path != null) {\n\t\t\t\n\t\t\tgraphicsData.push (path);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __update ():Void {\n\t\t\n\t\tif (__bounds == null || __bounds.width <= 0 || __bounds.height <= 0) return;\n\t\t\n\t\tvar parentTransform = __owner.__renderTransform;\n\t\tvar scaleX = 1.0, scaleY = 1.0;\n\t\t\n\t\tif (parentTransform != null) {\n\t\t\t\n\t\t\tif (parentTransform.b == 0) {\n\t\t\t\t\n\t\t\t\tscaleX = Math.abs (parentTransform.a);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tscaleX = Math.sqrt (parentTransform.a * parentTransform.a + parentTransform.b * parentTransform.b);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (parentTransform.c == 0) {\n\t\t\t\t\n\t\t\t\tscaleY = Math.abs (parentTransform.d);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tscaleY = Math.sqrt (parentTransform.c * parentTransform.c + parentTransform.d * parentTransform.d);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if openfl_disable_graphics_upscaling\n\t\tif (scaleX > 1) scaleX = 1;\n\t\tif (scaleY > 1) scaleY = 1;\n\t\t#end\n\t\t\n\t\tvar width = __bounds.width * scaleX;\n\t\tvar height = __bounds.height * scaleY;\n\t\t\n\t\tif (width < 1 || height < 1) {\n\t\t\t\n\t\t\tif (__width >= 1 || __height >= 1) __dirty = true;\n\t\t\t__width  = 0;\n\t\t\t__height = 0;\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (maxTextureWidth != null && width > maxTextureWidth) {\n\t\t\t\n\t\t\twidth = maxTextureWidth;\n\t\t\tscaleX = maxTextureWidth / __bounds.width;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (maxTextureWidth != null && height > maxTextureHeight) {\n\t\t\t\n\t\t\theight = maxTextureHeight;\n\t\t\tscaleY = maxTextureHeight / __bounds.height;\n\t\t\t\n\t\t}\n\t\t\n\t\t__renderTransform.a = width  / __bounds.width;\n\t\t__renderTransform.d = height / __bounds.height;\n\t\tvar inverseA = (1 / __renderTransform.a);\n\t\tvar inverseD = (1 / __renderTransform.d);\n\t\t\n\t\t// Inlined & simplified `__worldTransform.concat (parentTransform)` below:\n\t\t__worldTransform.a = inverseA * parentTransform.a;\n\t\t__worldTransform.b = inverseA * parentTransform.b;\n\t\t__worldTransform.c = inverseD * parentTransform.c;\n\t\t__worldTransform.d = inverseD * parentTransform.d;\n\t\t\n\t\tvar x = __bounds.x;\n\t\tvar y = __bounds.y;\n\t\tvar tx = x * parentTransform.a + y * parentTransform.c + parentTransform.tx;\n\t\tvar ty = x * parentTransform.b + y * parentTransform.d + parentTransform.ty;\n\t\t\n\t\t// Floor the world position for crisp graphics rendering\n\t\t__worldTransform.tx = Math.ffloor (tx);\n\t\t__worldTransform.ty = Math.ffloor (ty);\n\t\t\n\t\t// Offset the rendering with the subpixel offset removed by Math.floor above\n\t\t__renderTransform.tx = __worldTransform.__transformInverseX (tx, ty);\n\t\t__renderTransform.ty = __worldTransform.__transformInverseY (tx, ty);\n\t\t\n\t\t// Calculate the size to contain the graphics and the extra subpixel\n\t\tvar newWidth  = Math.ceil(width  + __renderTransform.tx);\n\t\tvar newHeight = Math.ceil(height + __renderTransform.ty);\n\t\t\n\t\t// Mark dirty if render size changed\n\t\tif (newWidth != __width || newHeight != __height) {\n\t\t\t\n\t\t\t#if !openfl_disable_graphics_upscaling\n\t\t\t__dirty = true;\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\t__width  = newWidth;\n\t\t__height = newHeight;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function set___dirty (value:Bool):Bool {\n\t\t\n\t\tif (value && __owner != null) {\n\t\t\t\n\t\t\t@:privateAccess __owner.__setRenderDirty();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __dirty = value;\n\t\t\n\t}\n\t\n\t\n}\n","package openfl.display;\n\n\nimport openfl._internal.Lib;\nimport openfl.display.IGraphicsData;\nimport openfl.display.IGraphicsFill;\nimport openfl.geom.Matrix;\n\n\n@:final class GraphicsBitmapFill implements IGraphicsData implements IGraphicsFill {\n\t\n\t\n\tpublic var bitmapData:BitmapData;\n\tpublic var matrix:Matrix;\n\tpublic var repeat:Bool;\n\tpublic var smooth:Bool;\n\t\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\n\tpublic var __graphicsFillType (default, null):GraphicsFillType;\n\t\n\t\n\tpublic function new (bitmapData:BitmapData = null, matrix:Matrix = null, repeat:Bool = true, smooth:Bool = false) {\n\t\t\n\t\tthis.bitmapData = bitmapData;\n\t\tthis.matrix = matrix;\n\t\tthis.repeat = repeat;\n\t\tthis.smooth = smooth;\n\t\t\n\t\tthis.__graphicsDataType = BITMAP;\n\t\tthis.__graphicsFillType = BITMAP_FILL;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport openfl.display.IGraphicsData;\nimport openfl.display.IGraphicsFill;\n\n\n@:final class GraphicsEndFill implements IGraphicsData implements IGraphicsFill {\n\t\n\t\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\n\tpublic var __graphicsFillType (default, null):GraphicsFillType;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tthis.__graphicsDataType = END;\n\t\tthis.__graphicsFillType = END_FILL;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport openfl.display.IGraphicsData;\nimport openfl.display.IGraphicsFill;\nimport openfl.geom.Matrix;\n\n\n@:final class GraphicsGradientFill implements IGraphicsData implements IGraphicsFill {\n\t\n\t\n\tpublic var alphas:Array<Float>;\n\tpublic var colors:Array<Int>;\n\tpublic var focalPointRatio:Float;\n\tpublic var interpolationMethod:InterpolationMethod;\n\tpublic var matrix:Matrix;\n\tpublic var ratios:Array<Int>;\n\tpublic var spreadMethod:SpreadMethod;\n\tpublic var type:GradientType;\n\t\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\n\tpublic var __graphicsFillType (default, null):GraphicsFillType;\n\t\n\t\n\tpublic function new (type:GradientType = null, colors:Array<Int> = null, alphas:Array<Float> = null, ratios:Array<Int> = null, matrix:Matrix = null, spreadMethod:SpreadMethod = null, interpolationMethod:InterpolationMethod = null, focalPointRatio:Float = 0) {\n\t\t\n\t\tif (type == null) {\n\t\t\t\n\t\t\ttype = GradientType.LINEAR;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (spreadMethod == null) {\n\t\t\t\n\t\t\tspreadMethod = SpreadMethod.PAD;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (interpolationMethod == null) {\n\t\t\t\n\t\t\tinterpolationMethod = InterpolationMethod.RGB;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.type = type;\n\t\tthis.colors = colors;\n\t\tthis.alphas = alphas;\n\t\tthis.ratios = ratios;\n\t\tthis.matrix = matrix;\n\t\tthis.spreadMethod = spreadMethod;\n\t\tthis.interpolationMethod = interpolationMethod;\n\t\tthis.focalPointRatio = focalPointRatio;\n\t\tthis.__graphicsDataType = GRADIENT;\n\t\tthis.__graphicsFillType = GRADIENT_FILL;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport openfl.display.IGraphicsData;\nimport openfl.Vector;\n\n\n@:final class GraphicsPath implements IGraphicsData implements IGraphicsPath {\n\t\n\t\n\tprivate static var SIN45 = 0.70710678118654752440084436210485;\n\tprivate static var TAN22 = 0.4142135623730950488016887242097;\n\t\n\tpublic var commands:Vector<Int>;\n\tpublic var data:Vector<Float>;\n\tpublic var winding:GraphicsPathWinding;\n\t\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\n\t\n\t\n\tpublic function new (commands:Vector<Int> = null, data:Vector<Float> = null, winding:GraphicsPathWinding = GraphicsPathWinding.EVEN_ODD) {\n\t\t\n\t\tthis.commands = commands;\n\t\tthis.data = data;\n\t\tthis.winding = winding;\n\t\tthis.__graphicsDataType = PATH;\n\t\t\n\t}\n\t\n\t\n\tpublic function cubicCurveTo (controlX1:Float, controlY1:Float, controlX2:Float, controlY2:Float, anchorX:Float, anchorY:Float):Void {\n\t\t\n\t\tif (commands == null) commands = new Vector ();\n\t\tif (data == null) data = new Vector ();\n\t\t\n\t\tcommands.push (GraphicsPathCommand.CUBIC_CURVE_TO);\n\t\tdata.push (controlX1);\n\t\tdata.push (controlY1);\n\t\tdata.push (controlX2);\n\t\tdata.push (controlY2);\n\t\tdata.push (anchorX);\n\t\tdata.push (anchorY);\n\t\t\n\t}\n\t\n\t\n\tpublic function curveTo (controlX:Float, controlY:Float, anchorX:Float, anchorY:Float):Void {\n\t\t\n\t\tif (commands == null) commands = new Vector ();\n\t\tif (data == null) data = new Vector ();\n\t\t\n\t\tcommands.push (GraphicsPathCommand.CURVE_TO);\n\t\tdata.push (controlX);\n\t\tdata.push (controlY);\n\t\tdata.push (anchorX);\n\t\tdata.push (anchorY);\n\t\t\n\t}\n\t\n\t\n\tpublic function lineTo (x:Float, y:Float):Void {\n\t\t\n\t\tif (commands == null) commands = new Vector ();\n\t\tif (data == null) data = new Vector ();\n\t\t\n\t\tcommands.push (GraphicsPathCommand.LINE_TO);\n\t\tdata.push (x);\n\t\tdata.push (y);\n\t\t\n\t}\n\t\n\t\n\tpublic function moveTo (x:Float, y:Float):Void {\n\t\t\n\t\tif (commands == null) commands = new Vector ();\n\t\tif (data == null) data = new Vector ();\n\t\t\n\t\tcommands.push (GraphicsPathCommand.MOVE_TO);\n\t\tdata.push (x);\n\t\tdata.push (y);\n\t\t\n\t}\n\t\n\t\n\tpublic function wideLineTo (x:Float, y:Float):Void {\n\t\t\n\t\tif (commands == null) commands = new Vector ();\n\t\tif (data == null) data = new Vector ();\n\t\t\n\t\tcommands.push (GraphicsPathCommand.LINE_TO);\n\t\tdata.push (x);\n\t\tdata.push (y);\n\t\t\n\t}\n\t\n\t\n\tpublic function wideMoveTo (x:Float, y:Float):Void {\n\t\t\n\t\tif (commands == null) commands = new Vector ();\n\t\tif (data == null) data = new Vector ();\n\t\t\n\t\tcommands.push (GraphicsPathCommand.MOVE_TO);\n\t\tdata.push (x);\n\t\tdata.push (y);\n\t\t\n\t}\n\t\n\t\n\tprivate function __drawCircle (x:Float, y:Float, radius:Float):Void {\n\t\t\n\t\t__drawRoundRect (x - radius, y - radius, radius * 2, radius * 2, radius * 2, radius * 2);\n\t\t\n\t}\n\t\n\t\n\tprivate function __drawEllipse (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\t__drawRoundRect (x, y, width, height, width, height);\n\t\t\n\t}\n\t\n\t\n\tprivate function __drawRect (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tmoveTo (x, y);\n\t\tlineTo (x + width, y);\n\t\tlineTo (x + width, y + height);\n\t\tlineTo (x, y + height);\n\t\tlineTo (x, y);\n\t\t\n\t}\n\t\n\t\n\tprivate function __drawRoundRect (x:Float, y:Float, width:Float, height:Float, ellipseWidth:Float, ellipseHeight:Float):Void {\n\t\t\n\t\tellipseWidth *= 0.5;\n\t\tellipseHeight *= 0.5;\n\t\t\n\t\tif (ellipseWidth > width / 2) ellipseWidth = width / 2;\n\t\tif (ellipseHeight > height / 2) ellipseHeight = height / 2;\n\t\t\n\t\tvar xe = x + width,\n\t\tye = y + height,\n\t\tcx1 = -ellipseWidth + (ellipseWidth * SIN45),\n\t\tcx2 = -ellipseWidth + (ellipseWidth * TAN22),\n\t\tcy1 = -ellipseHeight + (ellipseHeight * SIN45),\n\t\tcy2 = -ellipseHeight + (ellipseHeight * TAN22);\n\t\t\n\t\tmoveTo (xe, ye - ellipseHeight);\n\t\tcurveTo (xe, ye + cy2, xe + cx1, ye + cy1);\n\t\tcurveTo (xe + cx2, ye, xe - ellipseWidth, ye);\n\t\tlineTo (x + ellipseWidth, ye);\n\t\tcurveTo (x - cx2, ye, x - cx1, ye + cy1);\n\t\tcurveTo (x, ye + cy2, x, ye - ellipseHeight);\n\t\tlineTo (x, y + ellipseHeight);\n\t\tcurveTo (x, y - cy2, x - cx1, y - cy1);\n\t\tcurveTo (x - cx2, y, x + ellipseWidth, y);\n\t\tlineTo (xe - ellipseWidth, y);\n\t\tcurveTo (xe + cx2, y, xe + cx1, y - cy1);\n\t\tcurveTo (xe, y - cy2, xe, y + ellipseHeight);\n\t\tlineTo (xe, ye - ellipseHeight);\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\n@:enum abstract GraphicsPathWinding(Null<Int>) {\n\t\n\tpublic var EVEN_ODD = 0;\n\tpublic var NON_ZERO = 1;\n\t\n\t@:from private static function fromString (value:String):GraphicsPathWinding {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"evenOdd\": EVEN_ODD;\n\t\t\tcase \"nonZero\": NON_ZERO;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase GraphicsPathWinding.EVEN_ODD: \"evenOdd\";\n\t\t\tcase GraphicsPathWinding.NON_ZERO: \"nonZero\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\nimport openfl.display.IGraphicsData;\nimport openfl.display.IGraphicsFill;\n\n\n@:final class GraphicsSolidFill implements IGraphicsData implements IGraphicsFill {\n\t\n\t\n\tpublic var alpha:Float;\n\tpublic var color:UInt;\n\t\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\n\tpublic var __graphicsFillType (default, null):GraphicsFillType;\n\t\n\t\n\tpublic function new (color:UInt = 0, alpha:Float = 1) {\n\t\t\n\t\tthis.alpha = alpha;\n\t\tthis.color = color;\n\t\tthis.__graphicsDataType = SOLID;\n\t\tthis.__graphicsFillType = SOLID_FILL;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport openfl.display.IGraphicsData;\n\n\n@:final class GraphicsStroke implements IGraphicsData implements IGraphicsStroke {\n\t\n\t\n\tpublic var caps:CapsStyle;\n\tpublic var fill:IGraphicsFill;\n\tpublic var joints:JointStyle;\n\tpublic var miterLimit:Float;\n\tpublic var pixelHinting:Bool;\n\tpublic var scaleMode:LineScaleMode;\n\tpublic var thickness:Float;\n\t\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\n\t\n\t\n\tpublic function new (thickness:Null<Float> = null, pixelHinting:Bool = false, scaleMode:LineScaleMode = LineScaleMode.NORMAL, caps:CapsStyle = CapsStyle.NONE, joints:JointStyle = JointStyle.ROUND, miterLimit:Float = 3, fill:IGraphicsFill = null) {\n\t\t\n\t\tif (thickness == null) thickness = Math.NaN;\n\t\t\n\t\tthis.caps = caps;\n\t\tthis.fill = fill;\n\t\tthis.joints = joints;\n\t\tthis.miterLimit = miterLimit;\n\t\tthis.pixelHinting = pixelHinting;\n\t\tthis.scaleMode = scaleMode;\n\t\tthis.thickness = thickness;\n\t\tthis.__graphicsDataType = STROKE;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport openfl.display.IGraphicsData;\nimport openfl.Vector;\n\n\n@:final class GraphicsTrianglePath implements IGraphicsData implements IGraphicsPath {\n\t\n\t\n\tpublic var culling:TriangleCulling;\n\tpublic var indices:Vector<Int>;\n\tpublic var uvtData:Vector<Float>;\n\tpublic var vertices:Vector<Float>;\n\t\n\tpublic var __graphicsDataType (default, null):GraphicsDataType;\n\t\n\t\n\tpublic function new (vertices:Vector<Float> = null, indices:Vector<Int> = null, uvtData:Vector<Float> = null, culling:TriangleCulling = NONE) {\n\t\t\n\t\tthis.vertices = vertices;\n\t\tthis.indices = indices;\n\t\tthis.uvtData = uvtData;\n\t\tthis.culling = culling;\n\t\t__graphicsDataType = TRIANGLE_PATH;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\n@:enum abstract InterpolationMethod(Null<Int>) {\n\t\n\tpublic var LINEAR_RGB = 0;\n\tpublic var RGB = 1;\n\t\n\t@:from private static function fromString (value:String):InterpolationMethod {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"linearRGB\": LINEAR_RGB;\n\t\t\tcase \"rgb\": RGB;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase InterpolationMethod.LINEAR_RGB: \"linearRGB\";\n\t\t\tcase InterpolationMethod.RGB: \"rgb\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\n@:final class JPEGEncoderOptions {\n\t\n\t\n\tpublic var quality:Int;\n\t\n\t\n\tpublic function new (quality:Int = 80) {\n\t\t\n\t\tthis.quality = quality;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\n@:enum abstract JointStyle(Null<Int>) {\n\t\n\tpublic var BEVEL = 0;\n\tpublic var MITER = 1;\n\tpublic var ROUND = 2;\n\t\n\t@:from private static function fromString (value:String):JointStyle {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"bevel\": BEVEL;\n\t\t\tcase \"miter\": MITER;\n\t\t\tcase \"round\": ROUND;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase JointStyle.BEVEL: \"bevel\";\n\t\t\tcase JointStyle.MITER: \"miter\";\n\t\t\tcase JointStyle.ROUND: \"round\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\n@:enum abstract LineScaleMode(Null<Int>) {\n\t\n\tpublic var HORIZONTAL = 0;\n\tpublic var NONE = 1;\n\tpublic var NORMAL = 2;\n\tpublic var VERTICAL = 3;\n\t\n\t@:from private static function fromString (value:String):LineScaleMode {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"horizontal\": HORIZONTAL;\n\t\t\tcase \"none\": NONE;\n\t\t\tcase \"normal\": NORMAL;\n\t\t\tcase \"vertical\": VERTICAL;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase LineScaleMode.HORIZONTAL: \"horizontal\";\n\t\t\tcase LineScaleMode.NONE: \"none\";\n\t\t\tcase LineScaleMode.NORMAL: \"normal\";\n\t\t\tcase LineScaleMode.VERTICAL: \"vertical\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\nimport haxe.io.Path;\nimport lime.utils.AssetLibrary in LimeAssetLibrary;\nimport lime.utils.AssetManifest;\nimport openfl._internal.swf.SWFLiteLibrary;\nimport openfl.events.Event;\nimport openfl.events.IOErrorEvent;\nimport openfl.events.ProgressEvent;\nimport openfl.events.UncaughtErrorEvents;\nimport openfl.net.URLLoader;\nimport openfl.net.URLLoaderDataFormat;\nimport openfl.net.URLRequest;\nimport openfl.net.URLRequestMethod;\nimport openfl.system.LoaderContext;\nimport openfl.utils.Assets;\nimport openfl.utils.AssetLibrary;\nimport openfl.utils.ByteArray;\n\n#if (js && html5)\nimport js.html.ScriptElement;\nimport js.Browser;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.LoaderInfo)\n@:access(openfl.events.Event)\n\n\nclass Loader extends DisplayObjectContainer {\n\t\n\t\n\tpublic var content (default, null):DisplayObject;\n\tpublic var contentLoaderInfo (default, null):LoaderInfo;\n\tpublic var uncaughtErrorEvents (default, null):UncaughtErrorEvents;\n\t\n\tprivate var __library:AssetLibrary;\n\tprivate var __path:String;\n\tprivate var __unloaded:Bool;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tcontentLoaderInfo = LoaderInfo.create (this);\n\t\tuncaughtErrorEvents = contentLoaderInfo.uncaughtErrorEvents;\n\t\t\n\t}\n\t\n\t\n\tpublic function close ():Void {\n\t\t\n\t\topenfl._internal.Lib.notImplemented ();\n\t\t\n\t}\n\t\n\t\n\tpublic function load (request:URLRequest, context:LoaderContext = null):Void {\n\t\t\n\t\tcontentLoaderInfo.loaderURL = Lib.current.loaderInfo.url;\n\t\tcontentLoaderInfo.url = request.url;\n\t\t__unloaded = false;\n\t\t\n\t\tif (request.contentType == null || request.contentType == \"\") {\n\t\t\t\n\t\t\tvar extension = \"\";\n\t\t\t__path = request.url;\n\t\t\t\n\t\t\tvar queryIndex = __path.indexOf ('?');\n\t\t\tif (queryIndex > -1) {\n\t\t\t\t\n\t\t\t\t__path = __path.substring (0, queryIndex);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\twhile (StringTools.endsWith (__path, \"/\")) {\n\t\t\t\t\n\t\t\t\t__path = __path.substring (0, __path.length - 1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (StringTools.endsWith (__path, \".bundle\")) {\n\t\t\t\t\n\t\t\t\t__path += \"/library.json\";\n\t\t\t\t\n\t\t\t\tif (queryIndex > -1) {\n\t\t\t\t\t\n\t\t\t\t\trequest.url = __path + request.url.substring (queryIndex);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\trequest.url = __path;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar extIndex = __path.lastIndexOf ('.');\n\t\t\tif (extIndex > -1) {\n\t\t\t\t\n\t\t\t\textension = __path.substring (extIndex + 1);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcontentLoaderInfo.contentType = switch (extension) {\n\t\t\t\t\n\t\t\t\tcase \"json\": \"application/json\";\n\t\t\t\tcase \"swf\": \"application/x-shockwave-flash\";\n\t\t\t\tcase \"jpg\", \"jpeg\": \"image/jpeg\";\n\t\t\t\tcase \"png\": \"image/png\";\n\t\t\t\tcase \"gif\": \"image/gif\";\n\t\t\t\tcase \"js\": \"application/javascript\";\n\t\t\t\tdefault: \"application/x-www-form-urlencoded\"; /*throw \"Unrecognized file \" + request.url;*/\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tcontentLoaderInfo.contentType = request.contentType;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if (js && html5)\n\t\tif (contentLoaderInfo.contentType.indexOf (\"image/\") > -1 && request.method == URLRequestMethod.GET && (request.requestHeaders == null || request.requestHeaders.length == 0) && request.userAgent == null) {\n\t\t\t\n\t\t\tBitmapData.loadFromFile (request.url).onComplete (BitmapData_onLoad).onError (BitmapData_onError).onProgress (BitmapData_onProgress);\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tvar loader = new URLLoader ();\n\t\tloader.dataFormat = URLLoaderDataFormat.BINARY;\n\t\t\n\t\tif (contentLoaderInfo.contentType.indexOf (\"/json\") > -1 || contentLoaderInfo.contentType.indexOf (\"/javascript\") > -1 || contentLoaderInfo.contentType.indexOf (\"/ecmascript\") > -1) {\n\t\t\t\n\t\t\tloader.dataFormat = TEXT;\n\t\t\t\n\t\t}\n\t\t\n\t\tloader.addEventListener (Event.COMPLETE, loader_onComplete);\n\t\tloader.addEventListener (IOErrorEvent.IO_ERROR, loader_onError);\n\t\tloader.addEventListener (ProgressEvent.PROGRESS, loader_onProgress);\n\t\tloader.load (request);\n\t\t\n\t}\n\t\n\t\n\tpublic function loadBytes (buffer:ByteArray, context:LoaderContext = null):Void {\n\t\t\n\t\tBitmapData.loadFromBytes (buffer).onComplete (BitmapData_onLoad).onError (BitmapData_onError);\n\t\t\n\t}\n\t\n\t\n\tpublic function unload ():Void {\n\t\t\n\t\tif (!__unloaded) {\n\t\t\t\n\t\t\twhile (numChildren > 0) {\n\t\t\t\t\n\t\t\t\tremoveChildAt (0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (__library != null) {\n\t\t\t\t\n\t\t\t\tAssets.unloadLibrary (contentLoaderInfo.url);\n\t\t\t\t__library = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcontent = null;\n\t\t\tcontentLoaderInfo.url = null;\n\t\t\tcontentLoaderInfo.contentType = null;\n\t\t\tcontentLoaderInfo.content = null;\n\t\t\tcontentLoaderInfo.bytesLoaded = 0;\n\t\t\tcontentLoaderInfo.bytesTotal = 0;\n\t\t\tcontentLoaderInfo.width = 0;\n\t\t\tcontentLoaderInfo.height = 0;\n\t\t\t__unloaded = true;\n\t\t\t\n\t\t\tcontentLoaderInfo.dispatchEvent (new Event (Event.UNLOAD));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function unloadAndStop (gc:Bool = true):Void {\n\t\t\n\t\tif (content != null) {\n\t\t\t\n\t\t\tcontent.__stopAllMovieClips ();\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (i in 0...numChildren) {\n\t\t\t\n\t\t\tgetChildAt (i).__stopAllMovieClips ();\n\t\t\t\n\t\t}\n\t\t\n\t\tunload ();\n\t\t\n\t\tif (gc) {\n\t\t\t\n\t\t\t#if cpp\n\t\t\tcpp.vm.Gc.run (false);\n\t\t\t#elseif neko\n\t\t\tneko.vm.Gc.run (false);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\n\tpublic function setContent(c:DisplayObject):Void {\n\t\tcontent = c;\n\t\taddChild(c);\n\t}\n\t\n\tprivate function __dispatchError (text:String):Void {\n\t\t\n\t\tvar event = new IOErrorEvent (IOErrorEvent.IO_ERROR);\n\t\tevent.text = text;\n\t\tcontentLoaderInfo.dispatchEvent (event);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function BitmapData_onError (error:Dynamic):Void {\n\t\t\n\t\t// TODO: Dispatch HTTPStatusEvent\n\t\t\n\t\t__dispatchError (Std.string (error));\n\t\t\n\t}\n\t\n\t\n\tprivate function BitmapData_onLoad (bitmapData:BitmapData):Void {\n\t\t\n\t\t// TODO: Dispatch HTTPStatusEvent\n\t\t\n\t\tcontent = new Bitmap (bitmapData);\n\t\tcontentLoaderInfo.content = content;\n\t\taddChild (content);\n\t\t\n\t\tcontentLoaderInfo.dispatchEvent (new Event (Event.COMPLETE));\n\t\t\n\t}\n\t\n\t\n\tprivate function BitmapData_onProgress (bytesLoaded:Int, bytesTotal:Int):Void {\n\t\t\n\t\tvar event = new ProgressEvent (ProgressEvent.PROGRESS);\n\t\tevent.bytesLoaded = bytesLoaded;\n\t\tevent.bytesTotal = bytesTotal;\n\t\tcontentLoaderInfo.dispatchEvent (event);\n\t\t\n\t}\n\t\n\t\n\tprivate function loader_onComplete (event:Event):Void {\n\t\t\n\t\t// TODO: Dispatch HTTPStatusEvent\n\t\t\n\t\tvar loader:URLLoader = cast event.target;\n\t\t\n\t\tif (contentLoaderInfo.contentType != null && contentLoaderInfo.contentType.indexOf (\"/json\") > -1) {\n\t\t\t\n\t\t\tvar manifest = AssetManifest.parse (loader.data, Path.directory (__path));\n\t\t\t\n\t\t\tif (manifest == null) {\n\t\t\t\t\n\t\t\t\t__dispatchError (\"Cannot parse asset manifest\");\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar library = LimeAssetLibrary.fromManifest (manifest);\n\t\t\t\n\t\t\tif (library == null) {\n\t\t\t\t\n\t\t\t\t__dispatchError (\"Cannot open library\");\n\t\t\t\treturn;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (Std.is (library, AssetLibrary)) {\n\t\t\t\t\n\t\t\t\tlibrary.load ().onComplete (function (_) {\n\t\t\t\t\t\n\t\t\t\t\t__library = cast library;\n\t\t\t\t\tAssets.registerLibrary (contentLoaderInfo.url, __library);\n\t\t\t\t\t\n\t\t\t\t\tif (manifest.name != null && !Assets.hasLibrary (manifest.name)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tAssets.registerLibrary (manifest.name, __library);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcontent = __library.getMovieClip (\"\");\n\t\t\t\t\tcontentLoaderInfo.content = content;\n\t\t\t\t\taddChild (content);\n\t\t\t\t\t\n\t\t\t\t\tcontentLoaderInfo.dispatchEvent (new Event (Event.COMPLETE));\n\t\t\t\t\t\n\t\t\t\t}).onError (function (e) {\n\t\t\t\t\t\n\t\t\t\t\t__dispatchError (e);\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (contentLoaderInfo.contentType != null && (contentLoaderInfo.contentType.indexOf (\"/javascript\") > -1 || contentLoaderInfo.contentType.indexOf (\"/ecmascript\") > -1)) {\n\t\t\t\n\t\t\tcontent = new Sprite ();\n\t\t\tcontentLoaderInfo.content = content;\n\t\t\taddChild (content);\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\t//var script:ScriptElement = cast Browser.document.createElement (\"script\");\n\t\t\t//script.innerHTML = loader.data;\n\t\t\t//Browser.document.head.appendChild (script);\n\t\t\t\n\t\t\tuntyped __js__ (\"eval\") ('(function () {' + loader.data + '})()');\n\t\t\t#end\n\t\t\t\n\t\t\tcontentLoaderInfo.dispatchEvent (new Event (Event.COMPLETE));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tBitmapData.loadFromBytes (loader.data).onComplete (BitmapData_onLoad).onError (BitmapData_onError);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function loader_onError (event:IOErrorEvent):Void {\n\t\t\n\t\t// TODO: Dispatch HTTPStatusEvent\n\t\t\n\t\tevent.target = contentLoaderInfo;\n\t\tcontentLoaderInfo.dispatchEvent (event);\n\t\t\n\t}\n\t\n\t\n\tprivate function loader_onProgress (event:ProgressEvent):Void {\n\t\t\n\t\tevent.target = contentLoaderInfo;\n\t\tcontentLoaderInfo.dispatchEvent (event);\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport openfl.events.EventDispatcher;\nimport openfl.events.Event;\nimport openfl.events.ProgressEvent;\nimport openfl.events.UncaughtErrorEvents;\nimport openfl.system.ApplicationDomain;\nimport openfl.utils.ByteArray;\n\n#if (js && html5)\nimport js.Browser;\n#end\n\n\nclass LoaderInfo extends EventDispatcher {\n\t\n\t\n\tprivate static var __rootURL = #if (js && html5) Browser.document.URL #else \"\" #end;\n\t\n\tpublic var applicationDomain (default, null):ApplicationDomain;\n\tpublic var bytes (default, null):ByteArray;\n\tpublic var bytesLoaded (default, null):Int;\n\tpublic var bytesTotal (default, null):Int;\n\tpublic var childAllowsParent (default, null):Bool;\n\tpublic var content (default, null):DisplayObject;\n\tpublic var contentType (default, null):String;\n\tpublic var frameRate (default, null):Float;\n\tpublic var height (default, null):Int;\n\tpublic var loader (default, null):Loader;\n\tpublic var loaderURL (default, null):String;\n\tpublic var parameters (default, null):Dynamic<String>;\n\tpublic var parentAllowsChild (default, null):Bool;\n\tpublic var sameDomain (default, null):Bool;\n\tpublic var sharedEvents (default, null):EventDispatcher;\n\tpublic var uncaughtErrorEvents (default, null):UncaughtErrorEvents;\n\tpublic var url (default, null):String;\n\tpublic var width (default, null):Int;\n\t//static function getLoaderInfoByDefinition(object : Dynamic) : LoaderInfo;\n\t\n\tprivate var __completed:Bool;\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tapplicationDomain = ApplicationDomain.currentDomain;\n\t\tbytesLoaded = 0;\n\t\tbytesTotal = 0;\n\t\tchildAllowsParent = true;\n\t\tparameters = {};\n\t\t\n\t}\n\t\n\t\n\tpublic static function create (loader:Loader):LoaderInfo {\n\t\t\n\t\tvar loaderInfo = new LoaderInfo ();\n\t\tloaderInfo.uncaughtErrorEvents = new UncaughtErrorEvents ();\n\t\t\n\t\tif (loader != null) {\n\t\t\t\n\t\t\tloaderInfo.loader = loader;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tloaderInfo.url = __rootURL;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn loaderInfo;\n\t\t\n\t}\n\t\n\t\n\tprivate function __complete ():Void {\n\t\t\n\t\tif (!__completed) {\n\t\t\t\n\t\t\tif (bytesLoaded < bytesTotal) {\n\t\t\t\t\n\t\t\t\tbytesLoaded = bytesTotal;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__update (bytesLoaded, bytesTotal);\n\t\t\t__completed = true;\n\t\t\t\n\t\t\tdispatchEvent (new Event (Event.COMPLETE));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __update (bytesLoaded:Int, bytesTotal:Int):Void {\n\t\t\n\t\tthis.bytesLoaded = bytesLoaded;\n\t\tthis.bytesTotal = bytesTotal;\n\t\t\n\t\tdispatchEvent (new ProgressEvent (ProgressEvent.PROGRESS, false, false, bytesLoaded, bytesTotal));\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport lime.utils.Log;\nimport openfl._internal.swf.SWFLite;\nimport openfl._internal.symbols.BitmapSymbol;\nimport openfl._internal.symbols.ButtonSymbol;\nimport openfl._internal.symbols.DynamicTextSymbol;\nimport openfl._internal.symbols.FontSymbol;\nimport openfl._internal.symbols.ShapeSymbol;\nimport openfl._internal.symbols.SpriteSymbol;\nimport openfl._internal.symbols.StaticTextSymbol;\nimport openfl._internal.symbols.SWFSymbol;\nimport openfl._internal.timeline.Frame;\nimport openfl._internal.timeline.FrameObject;\nimport openfl._internal.timeline.FrameObjectType;\nimport openfl.errors.ArgumentError;\nimport openfl.events.Event;\nimport openfl.filters.*;\nimport openfl.text.TextField;\n\n#if hscript\nimport hscript.Interp;\nimport hscript.Parser;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.symbols.SWFSymbol)\n\n\nclass MovieClip extends Sprite #if openfl_dynamic implements Dynamic<DisplayObjectContainer> #end {\n\t\n\t\n\tprivate static var __initSWF:SWFLite;\n\tprivate static var __initSymbol:SpriteSymbol;\n\t\n\tpublic var currentFrame (get, never):Int;\n\tpublic var currentFrameLabel (get, never):String;\n\tpublic var currentLabel (get, never):String;\n\tpublic var currentLabels (get, never):Array<FrameLabel>;\n\tpublic var enabled:Bool;\n\tpublic var framesLoaded (get, never):Int;\n\tpublic var isPlaying (get, never):Bool;\n\tpublic var totalFrames (get, never):Int;\n\n\tprivate var __cachedChildrenFrameSymbolInstacesDisplayObjects:Array<DisplayObject>;\n\tprivate var __cachedManuallyAddedDisplayObjects:Array<DisplayObject>;\n\tprivate var __activeInstances:Array<FrameSymbolInstance>;\n\tprivate var __activeInstancesByFrameObjectID:Map<Int, FrameSymbolInstance>;\n\tprivate var __lastInstancesByFrameObjectID:Map<Int, FrameSymbolInstance>;\n\tprivate var __currentFrame:Int;\n\tprivate var __currentFrameLabel:String;\n\tprivate var __currentLabel:String;\n\tprivate var __currentLabels:Array<FrameLabel>;\n\tprivate var __frameScripts:Map<Int, Void->Void>;\n\tprivate var __frameTime:Int;\n\tprivate var __lastFrameUpdate:Int;\n\tprivate var __playing:Bool;\n\tprivate var __swf:SWFLite;\n\tprivate var __symbol:SpriteSymbol;\n\tprivate var __timeElapsed:Int;\n\tprivate var __totalFrames:Int;\n\tprivate var __isInstanceFieldsSetup:Bool;\n\t\n\t\n\t#if (js && html5)\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (MovieClip.prototype, {\n\t\t\t\"currentFrame\": { get: untyped __js__ (\"function () { return this.get_currentFrame (); }\") },\n\t\t\t\"currentFrameLabel\": { get: untyped __js__ (\"function () { return this.get_currentFrameLabel (); }\") },\n\t\t\t\"currentLabel\": { get: untyped __js__ (\"function () { return this.get_currentLabel (); }\") },\n\t\t\t\"currentLabels\": { get: untyped __js__ (\"function () { return this.get_currentLabels (); }\") },\n\t\t\t\"framesLoaded\": { get: untyped __js__ (\"function () { return this.get_framesLoaded (); }\") },\n\t\t\t\"isPlaying\": { get: untyped __js__ (\"function () { return this.get_isPlaying (); }\") },\n\t\t\t\"totalFrames\": { get: untyped __js__ (\"function () { return this.get_totalFrames (); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t__cachedManuallyAddedDisplayObjects = new Array();\n\t\t__cachedChildrenFrameSymbolInstacesDisplayObjects = new Array();\n\t\t__currentFrame = 1;\n\t\t__currentLabels = [];\n\t\t__totalFrames = 0;\n\t\t__isInstanceFieldsSetup = false;\n\t\tenabled = true;\n\t\t\n\t\tif (__initSymbol != null) {\n\t\t\t\n\t\t\t__swf = __initSWF;\n\t\t\t__symbol = __initSymbol;\n\t\t\t\n\t\t\t__initSWF = null;\n\t\t\t__initSymbol = null;\n\t\t\t\n\t\t\t__fromSymbol (__swf, __symbol);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function addFrameScript (index:Int, method:Void->Void):Void {\n\t\t\n\t\tif (index < 0) return;\n\t\tvar frame = index + 1;\n\t\t\n\t\tif (method != null) {\n\t\t\t\n\t\t\tif (__frameScripts == null) {\n\t\t\t\t\n\t\t\t\t__frameScripts = new Map ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__frameScripts.set (frame, method);\n\t\t\t\n\t\t} else if (__frameScripts != null) {\n\t\t\t\n\t\t\t__frameScripts.remove (frame);\n\t\t\t\n\t\t}\n\n\t}\n\n\tprivate override function __initializeSelf() : Void{\n\t\tif (__lastFrameUpdate == -2){\n\t\t\t__enterFrame(0);\n\t\t}\n\t}\n\n\tpublic function gotoAndPlay (frame:Dynamic, scene:String = null):Void {\n\n\t\tplay ();\n\t\t__goto (__resolveFrameReference (frame));\n\n\t}\n\n\n\tpublic function gotoAndStop (frame:Dynamic, scene:String = null):Void {\n\n\t\tstop ();\n\t\t__goto (__resolveFrameReference (frame));\n\t}\n\n\n\tpublic function nextFrame ():Void {\n\n\t\t__goto (__currentFrame + 1);\n\t\tstop ();\n\n\t}\n\n\n\tpublic function play ():Void {\n\n\t\tif (__symbol == null || __playing || __totalFrames < 2) return;\n\n\t\t__playing = true;\n\n\t\t#if (!swflite_parent_fps && !swf_parent_fps)\n\t\t__frameTime = Std.int (1000 / __swf.frameRate);\n\t\t__timeElapsed = 0;\n\t\t#end\n\n\t}\n\n\n\tpublic function prevFrame ():Void {\n\n\t\tstop ();\n\t\t__goto (__currentFrame - 1);\n\n\t}\n\n\n\tpublic function stop ():Void {\n\n\t\t__playing = false;\n\n\t}\n\n\tprivate override function __addChildAtInternal(child:DisplayObject, index:Int):DisplayObject{\n\t\tvar addedChild : DisplayObject = super.__addChildAtInternal(child, index);\n\n\t\t__cacheChild(addedChild);\n\n\t\treturn addedChild;\n\t}\n\n\n\tpublic function __cacheChild(child:DisplayObject){\n\t\tif(child != null) {\n\t\t\tvar cached : Bool = false;\n\t\t\tif(__cachedChildrenFrameSymbolInstacesDisplayObjects.indexOf(child) >= 0 || __cachedManuallyAddedDisplayObjects.indexOf(child) >= 0) {\n\t\t\t\tcached = true;\n\t\t\t}\n\t\t\telse if(__activeInstances != null) {\n\t\t\t\tfor (instance in __activeInstances) {\n\t\t\t\t\tif (instance.displayObject == child) {\n\t\t\t\t\t\tcached = true;\n\t\t\t\t\t\t__cachedChildrenFrameSymbolInstacesDisplayObjects.push(child);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!cached){\n\t\t\t\t__cachedManuallyAddedDisplayObjects.push(child);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic override function removeChild (child:DisplayObject):DisplayObject {\n\t\tif (child != null && child.parent == this) {\n\t\t\t__cachedManuallyAddedDisplayObjects.remove(child);\n\t\t}\n\t\treturn super.removeChild(child);\n\t}\n\n\tpublic override function __enterFrame (deltaTime:Int):Void {\n\n\t\tif (__symbol == null) {\n\t\t\tsuper.__enterFrame (deltaTime);\n\t\t\treturn;\n\t\t}\n\t\tvar nextFrame : Int = -1;\n\t\tvar shouldRunTotalFramesScripts : Bool = false;\n\t\tvar startFrame : Int = __currentFrame;\n\t\tif(__playing){\n\n\t\t\tnextFrame = __getNextFrame (deltaTime);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// stopped, just build frameobjects (and run script if any) at the current frame\n\t\t\tnextFrame = __currentFrame;\n\t\t}\n\n\t\tvar updateToFrame : Int = startFrame;\n\n\t\tvar runInitScript : Bool = false;\n\t\tif (__lastFrameUpdate == -2){\n\t\t\trunInitScript = true;\n\t\t}\n\t\twhile(updateToFrame != nextFrame || __lastFrameUpdate < 0) {\n\t\t\tvar shouldRunScriptAtFrame = false;\n\t\t\tif(__playing){\n\t\t\t\tif (__frameScripts != null){\n\t\t\t\t\t// if we looped around\n\t\t\t\t\tif (nextFrame < updateToFrame) {\n\t\t\t\t\t\t// scan for any framescripts on keyframes to run after our current starting point (stored in updateToFrame) before we restart at the beginning\n\t\t\t\t\t\tfor(key in __frameScripts.keys()) {\n\t\t\t\t\t\t\tif (key > updateToFrame){\n\t\t\t\t\t\t\t\t// found one, let's run this framescript\n\t\t\t\t\t\t\t\tshouldRunScriptAtFrame = true;\n\t\t\t\t\t\t\t\tupdateToFrame = key;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!shouldRunScriptAtFrame) {\n\t\t\t\t\t\t\t// there were none, so restart at the beginning (at 0 just in case nextFrame is 1)\n\t\t\t\t\t\t\tupdateToFrame = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!shouldRunScriptAtFrame) {\n\t\t\t\t\t\t// we did not loop or we restarted at the beginning, so find the next keyframe\n\t\t\t\t\t\tfor(key in __frameScripts.keys()) {\n\t\t\t\t\t\t\tif (key > updateToFrame && key <= nextFrame){\n\t\t\t\t\t\t\t\t// found one, let's run this framescript\n\t\t\t\t\t\t\t\tshouldRunScriptAtFrame = true;\n\t\t\t\t\t\t\t\tupdateToFrame = key;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (runInitScript)\n\t\t\t{\n\t\t\t\tshouldRunScriptAtFrame = true;\n\t\t\t\tupdateToFrame = 1;\n\t\t\t}\n\n\t\t\tif (!shouldRunScriptAtFrame) {\n\t\t\t\t// no keyframes to run, so we're done, jump to the end\n\t\t\t\tupdateToFrame = nextFrame;\n\t\t\t}\n\n\t\t\t__currentFrame = updateToFrame;\n\n\t\t\t__updateFrameObjectsAndChildren();\n\n\t\t\tvar runScriptOverride = false;\n\t\t\tif(runInitScript){\n\t\t\t\trunInitScript = false;\n\t\t\t\t__setupInstanceFields();\n\t\t\t\tif(__frameScripts != null && updateToFrame == 1 && __frameScripts.exists(1))\t{\n\t\t\t\t\trunScriptOverride = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((shouldRunScriptAtFrame && __playing) || runScriptOverride) {\n\n\t\t\t\tvar currentFrameBeforeScript = __currentFrame;\n\t\t\t\tvar script = __frameScripts.get (updateToFrame);\n\t\t\t\tscript ();\n\t\t\t\tif (__currentFrame != currentFrameBeforeScript || !__playing) {\n\n\t\t\t\t\tsuper.__enterFrame (deltaTime);\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(runInitScript){\n\t\t\trunInitScript = false;\n\t\t\t__setupInstanceFields();\n\t\t}\n\t\tsuper.__enterFrame (deltaTime);\n\t}\n\n\tprivate function __updateFrameObjectsAndChildren()\t{\n\n\t\tif (__currentFrame == __lastFrameUpdate)\n\t\t\treturn;\n\n\t\t__updateFrameLabel ();\n\n\t\tvar loopedSinceLastFrameUpdate:Bool = ( __lastFrameUpdate > __currentFrame );\n\n\t\tvar currentInstancesByFrameObjectID : Map<Int, FrameSymbolInstance> = null;\n\t\tif(!loopedSinceLastFrameUpdate && __lastFrameUpdate >= 0 &&  __lastInstancesByFrameObjectID != null) {\n\t\t\tcurrentInstancesByFrameObjectID = __lastInstancesByFrameObjectID;\n\t\t}\n\t\telse {\n\t\t\tcurrentInstancesByFrameObjectID = new Map<Int, FrameSymbolInstance> ();\n\t\t}\n\n\t\tvar frame:Int;\n\t\tvar frameData:Frame;\n\t\tvar instance:FrameSymbolInstance;\n\n\t\tvar updateFrameStart:Int = (loopedSinceLastFrameUpdate || __lastFrameUpdate < 0)? 0 : __lastFrameUpdate;\n\t\tfor (i in updateFrameStart...__currentFrame) {\n\n\t\t\tframe = i + 1;\n\t\t\tframeData = __symbol.frames[i];\n\n\t\t\tif (frameData.objects == null) continue;\n\n\t\t\tfor (frameObject in frameData.objects) {\n\n\t\t\t\tswitch (frameObject.type) {\n\n\t\t\t\t\tcase CREATE:\n\n\t\t\t\t\t\tinstance = __activeInstancesByFrameObjectID.get (frameObject.id);\n\n\t\t\t\t\t\tif (instance != null) {\n\n\t\t\t\t\t\t\tcurrentInstancesByFrameObjectID.set (frameObject.id, instance);\n\t\t\t\t\t\t\t__updateDisplayObject (instance.displayObject, frameObject);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\tcase UPDATE:\n\n\t\t\t\t\t\tinstance = currentInstancesByFrameObjectID.get (frameObject.id);\n\n\t\t\t\t\t\tif (instance != null && instance.displayObject != null) {\n\n\t\t\t\t\t\t\t__updateDisplayObject (instance.displayObject, frameObject);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\tcase DESTROY:\n\n\t\t\t\t\t\tcurrentInstancesByFrameObjectID.remove (frameObject.id);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// TODO: Less garbage?\n\n\t\tvar currentInstances = new Array<FrameSymbolInstance> ();\n\t\tvar currentMasks = new Array<FrameSymbolInstance> ();\n\n\t\tfor (instance in currentInstancesByFrameObjectID) {\n\n\t\t\tif (currentInstances.indexOf (instance) == -1) {\n\n\t\t\t\tif (instance.clipDepth > 0) {\n\n\t\t\t\t\tcurrentMasks.push (instance);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentInstances.push (instance);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t__lastInstancesByFrameObjectID = currentInstancesByFrameObjectID;\n\n\n\t\tcurrentInstances.sort (__sortDepths);\n\n\t\tvar existingChild:DisplayObject;\n\t\tvar targetDepth:Int;\n\t\tvar targetChild:DisplayObject;\n\t\tvar child:DisplayObject;\n\t\tvar maskApplied:Bool;\n\n\t\tvar length:Int = currentInstances.length;\n\t\tvar currentInstancesIndex = 0;\n\t\tvar childrenIndex = 0;\n\n\t\t// first remove anything that doesn't exist now\n\t\twhile (childrenIndex < __children.length) {\n\t\t\tchild = __children[childrenIndex];\n\n\t\t\tif(child != null){\n\t\t\t\tif(__cachedManuallyAddedDisplayObjects.indexOf(child) >= 0){\n\t\t\t\t\t//keep manually added child where it is at\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar shouldRemove = true;\n\t\t\t\t\tfor(instance in currentInstances){\n\t\t\t\t\t\tif(child == instance.displayObject){\n\t\t\t\t\t\t\tshouldRemove = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(shouldRemove && child != null){\n\t\t\t\t\t\tremoveChild(child);\n\t\t\t\t\t\tif( !loopedSinceLastFrameUpdate ) {\n\t\t\t\t\t\t\t__children.insert(childrenIndex, null);//insert placeholder null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tchildrenIndex++;\n\t\t}\n\n\t\tcurrentInstancesIndex = 0;\n\t\tchildrenIndex = 0;\n\n\t\t// then leave the manually added dynamic objects where they are, while adding anything new from the frame\n\t\twhile (currentInstancesIndex < length) {\n\n\t\t\texistingChild = childrenIndex >= __children.length ? null : __children[childrenIndex];\n\t\t\tinstance = currentInstances[currentInstancesIndex];\n\n\t\t\ttargetDepth = instance.depth;\n\t\t\ttargetChild = instance.displayObject;\n\n\t\t\tif (existingChild != targetChild) {\n\t\t\t\tif(existingChild != null && __cachedManuallyAddedDisplayObjects.indexOf(existingChild) >= 0){ //keep manually added child where it is at\n\t\t\t\t\tcurrentInstancesIndex--;\n\t\t\t\t\tchild = existingChild;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tchild = targetChild;\n\t\t\t\t\tif(existingChild == null && childrenIndex < __children.length)\n\t\t\t\t\t{\n\t\t\t\t\t\t__children.splice(childrenIndex, 1);//remove placeholder null\n\t\t\t\t\t}\n\t\t\t\t\t__addChildAtInternal (targetChild, childrenIndex); //add child at will remove another instance of the same object, so we know it is in the right spot and not duplicated\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tchild = existingChild;\n\n\t\t\t}\n\n\t\t\tmaskApplied = false;\n\n\t\t\tfor (mask in currentMasks) {\n\n\t\t\t\tif (targetDepth > mask.depth && targetDepth <= mask.clipDepth) {\n\n\t\t\t\t\tchild.mask = mask.displayObject;\n\t\t\t\t\tmaskApplied = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (currentMasks.length > 0 && !maskApplied && child.mask != null) {\n\n\t\t\t\tchild.mask = null;\n\n\t\t\t}\n\t\t\tchildrenIndex++;\n\t\t\tcurrentInstancesIndex++;\n\t\t}\n\t\t//remove any left over null children\n\t\tchildrenIndex = 0;\n\t\twhile(childrenIndex < __children.length){  // rely on haxe to javascript not caching length variable in while loop\n\t\t\tif(__children[childrenIndex] == null) {\n\t\t\t\t__children.splice(childrenIndex,1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildrenIndex++;\n\t\t\t}\n\t\t}\n\n\t\t__lastFrameUpdate = __currentFrame;\n\t}\n\n\t@:access(openfl._internal.swf.SWFLiteLibrary.rootPath)\n\tprivate function __fromSymbol (swf:SWFLite, symbol:SpriteSymbol):Void {\n\n\t\tif (__activeInstancesByFrameObjectID != null) return;\n\n\t\t__swf = swf;\n\t\t__symbol = symbol;\n\n\t\t__activeInstances = [];\n\t\t__activeInstancesByFrameObjectID = new Map ();\n\t\t__currentFrame = 1;\n\t\t__lastFrameUpdate = -2;\n\t\t__totalFrames = __symbol.frames.length;\n\n\t\tvar frame:Int;\n\t\tvar frameData:Frame;\n\n\t\t#if hscript\n\t\tvar parser = null;\n\t\t#end\n\n\t\tfor (i in 0...__symbol.frames.length) {\n\n\t\t\tframe = i + 1;\n\t\t\tframeData = __symbol.frames[i];\n\n\t\t\tvar labelSingle : String = frameData.label;\n\t\t\tvar addLabel : Bool = (labelSingle != null);\n\t\t\tif (frameData.labels != null) {\n\n\t\t\t\tfor (label in frameData.labels) {\n\n\t\t\t\t\taddLabel = addLabel && label != labelSingle;\n\t\t\t\t\t__currentLabels.push (new FrameLabel (label, i + 1));\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (addLabel) {\n\n\t\t\t\t__currentLabels.push (new FrameLabel (labelSingle, i + 1));\n\n\t\t\t}\n\n\t\t\tif (frameData.script != null) {\n\n\t\t\t\tif (__frameScripts == null) {\n\n\t\t\t\t\t__frameScripts = new Map ();\n\n\t\t\t\t}\n\n\t\t\t\t__frameScripts.set (frame, frameData.script);\n\n\t\t\t} else if (frameData.scriptSource != null) {\n\n\t\t\t\tif (__frameScripts == null) {\n\n\t\t\t\t\t__frameScripts = new Map ();\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\t#if hscript\n\n\t\t\t\t\tif (parser == null) {\n\n\t\t\t\t\t\tparser = new Parser ();\n\t\t\t\t\t\tparser.allowTypes = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar program = parser.parseString (frameData.scriptSource);\n\t\t\t\t\tvar interp = new Interp ();\n\t\t\t\t\tinterp.variables.set (\"this\", this);\n\n\t\t\t\t\tvar script = function () {\n\n\t\t\t\t\t\tinterp.execute (program);\n\n\t\t\t\t\t};\n\n\t\t\t\t\t__frameScripts.set (frame, script);\n\n\t\t\t\t\t#elseif js\n\n\t\t\t\t\tvar script = untyped __js__('eval({0})', \"(function(){\" + frameData.scriptSource + \"})\");\n\t\t\t\t\tvar wrapper = function () {\n\n\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\tscript.call (this);\n\n\t\t\t\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\t\t\tvar p: DisplayObjectContainer = this;\n\t\t\t\t\t\t\tvar name: Array<String> = new Array();\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tname.push(p.__name);\n\t\t\t\t\t\t\t} while (null != (p = p.parent));\n\t\t\t\t\t\t\tname.reverse();\n\t\t\t\t\t\t\tvar r = \"(empty __swf)\";\n\t\t\t\t\t\t\tif(this.__swf != null) r = this.__swf.library.rootPath;\n\t\t\t\t\t\t\ttrace (\"Error evaluating frame script\\n\" +\n\t\t\t\t\t\t\t\t\"swf: \"+ r +\"\\n\" +\n\t\t\t\t\t\t\t\t\"symbol path: \"+ name.join('.') +\"\\n\" +\n\t\t\t\t\t\t\t\te + \"\\n\" +\n\t\t\t\t\t\t\t\thaxe.CallStack.exceptionStack ().map (function (a) { return untyped a[2]; }).join (\"\\n\") + \"\\n\" +\n\t\t\t\t\t\t\t\te.stack + \"\\n\" + untyped script.toString ());\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t__frameScripts.set (frame, wrapper);\n\n\t\t\t\t\t#end\n\n\t\t\t\t} catch (e:Dynamic) {\n\n\t\t\t\t\tvar p: DisplayObjectContainer = this;\n\t\t\t\t\tvar name: Array<String> = new Array();\n\t\t\t\t\tdo {\n\t\t\t\t\t\tname.push(p.__name);\n\t\t\t\t\t} while (null != (p = p.parent));\n\t\t\t\t\tname.reverse();\n\t\t\t\t\tvar r = \"(empty __swf)\";\n\t\t\t\t\tif(this.__swf != null) r = this.__swf.library.rootPath;\n\t\t\t\t\tLog.warn (\"Unable to evaluate frame script source\\n\" +\n\t\t\t\t\t\t\"swf: \"+ r +\"\\n\" +\n\t\t\t\t\t\t\"symbol path: \"+ name.join('.') +\"\\n\" +\n\t\t\t\t\t\t\"symbol: \"+ (__symbol.className == null ? \"null \" : \"\\\"\" + __symbol.className + \"\\\"\") + \"\\n\" +\n\t\t\t\t\t\t\"frame: \" + frame + \"\\n\" +\n\t\t\t\t\t\tframeData.scriptSource);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar frame:Int;\n\t\tvar frameData:Frame;\n\t\tvar instance:FrameSymbolInstance;\n\t\tvar duplicate:Bool;\n\t\tvar symbol:SWFSymbol;\n\t\tvar displayObject:DisplayObject;\n\t\tvar lastObjectToHavePlacementData:FrameObject = null;\n\n\t\t// TODO: Create later?\n\n\t\tfor (i in 0...__totalFrames) {\n\n\t\t\tframe = i + 1;\n\t\t\tframeData = __symbol.frames[i];\n\n\t\t\tif (frameData.objects == null) continue;\n\n\t\t\tfor (frameObject in frameData.objects) {\n\n\t\t\t\tif (frameObject.type == FrameObjectType.CREATE) {\n\n\t\t\t\t\tif (__activeInstancesByFrameObjectID.exists (frameObject.id)) {\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tinstance = null;\n\t\t\t\t\t\tduplicate = false;\n\n\t\t\t\t\t\tif(frameData.objects.length <= 2)\t//for create and destroy\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(frameObject.name != null || frameObject.matrix != null || frameObject.colorTransform != null || frameObject.filters != null) {\n\t\t\t\t\t\t\t\tlastObjectToHavePlacementData = frameObject.lastFrameObjectWithPlacementData = frameObject;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(lastObjectToHavePlacementData != null)\n\t\t\t\t\t\t\t\tframeObject.lastFrameObjectWithPlacementData = lastObjectToHavePlacementData;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (activeInstance in __activeInstances) {\n\n\t\t\t\t\t\t\tif (activeInstance.displayObject != null && activeInstance.characterID == frameObject.symbol && activeInstance.depth == frameObject.depth) {\n\n\t\t\t\t\t\t\t\t// TODO: Fix duplicates in exporter\n\t\t\t\t\t\t\t\tinstance = activeInstance;\n\t\t\t\t\t\t\t\tduplicate = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (instance == null) {\n\n\t\t\t\t\t\tsymbol = __swf.symbols.get (frameObject.symbol);\n\n\t\t\t\t\t\tif (symbol != null) {\n\n\t\t\t\t\t\t\tdisplayObject = symbol.__createObject (__swf);\n\n\t\t\t\t\t\t\tif (displayObject != null) {\n\n\t\t\t\t\t\t\t\tdisplayObject.parent = this;\n\t\t\t\t\t\t\t\tdisplayObject.stage = stage;\n\t\t\t\t\t\t\t\tinstance = new FrameSymbolInstance (frame, frameObject.id, frameObject.symbol, frameObject.depth, displayObject, frameObject.clipDepth);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (instance != null) {\n\n\t\t\t\t\t\t__activeInstancesByFrameObjectID.set (frameObject.id, instance);\n\n\t\t\t\t\t\tif (!duplicate) {\n\n\t\t\t\t\t\t\t__activeInstances.push (instance);\n\t\t\t\t\t\t\t__updateDisplayObject (instance.displayObject, frameObject);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}/* else if (frameObject.type == FrameObjectType.UPDATE) {\n\n\t\t\t\t\tinstance = null;\n\n\t\t\t\t\tif (__activeInstancesByFrameObjectID.exists (frameObject.id)) {\n\n\t\t\t\t\t\tinstance = __activeInstancesByFrameObjectID.get (frameObject.id);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (instance != null && instance.displayObject != null) {\n\n\t\t\t\t\t\t__updateDisplayObject (instance.displayObject, frameObject);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if (frameObject.type == FrameObjectType.DESTROY) {\n\n\t\t\t\t\t// TODO: the following never evalutates because SWFLiteExporter\n\t\t\t\t\t//   always orders DESTROY after CREATE, losing the original order\n\t\t\t\t\t//   they were saved as in the .swf, and because SWFLiteExporter\n\t\t\t\t\t//   duplicates two frameObjectIds for the same characterId\n\t\t\t\t\t//   and depth sometimes.\n\t\t\t\t\t//if (!indexCachedFrameObjectEntryById.exists (frameObject.id)) {\n\t\t\t\t\t//\n\t\t\t\t\t//\tthrow \"Tried to remove a DisplayObject child that hasn't been CREATED yet.\";\n\t\t\t\t\t//\n\t\t\t\t\t//}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow \"Unrecognized FrameObject.type \"+ frameObject.type;\n\n\t\t\t\t}*/\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (__totalFrames > 1) {\n\n\t\t\tplay ();\n\n\t\t}\n\n\t\t__updateFrameObjectsAndChildren();//frame scripts are not called here because they get attached after the constructor is completed.\n\t\t//but this call is still needed to initialize the frame objects/children so that dynamic fields refer to the right object in the event there are multiple of the same name.\n\n\t\t__currentFrame = 1;\n\t\t__lastFrameUpdate = -2;\n\t}\n\n\tprivate function __setupInstanceFields() {\n\t\t#if !openfl_dynamic\n\t\tif(!__isInstanceFieldsSetup){\n\t\t\t__isInstanceFieldsSetup = true;\n\t\t\tfor (field in Type.getInstanceFields (Type.getClass (this))) {\n\n\t\t\t\tfor (child in __children) {\n\n\t\t\t\t\tif (child.name == field) {\n\n\t\t\t\t\t\tReflect.setField (this, field, child);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#end\n\t}\n\n\tprivate function __getNextFrame (deltaTime:Int):Int {\n\n\t\t#if (!swflite_parent_fps && !swf_parent_fps)\n\n\t\t__timeElapsed += deltaTime;\n\t\tvar nextFrame = __currentFrame < 0 ? 0 : __currentFrame + Math.floor (__timeElapsed / __frameTime);\n\t\tif (nextFrame < 1) nextFrame = 1;\n\t\tif (nextFrame > __totalFrames) nextFrame = Math.floor ((nextFrame - 1) % __totalFrames) + 1;\n\t\t__timeElapsed = (__timeElapsed % __frameTime);\n\n\t\t#else\n\n\t\tvar nextFrame = __currentFrame + 1;\n\t\tif (nextFrame > __totalFrames) nextFrame = 1;\n\n\t\t#end\n\n\t\treturn nextFrame;\n\n\t}\n\n\n\tprivate function __goto (frame:Int) {\n\n\t\tif (__symbol == null) return;\n\n\t\tif (frame < 1) frame = 1;\n\t\telse if (frame > __totalFrames) frame = __totalFrames;\n\n\t\tif(__lastFrameUpdate == -2)\n\t\t{\n\t\t\t__enterFrame(0);\n\t\t}\n\n\n\t\tif(__currentFrame != frame)\n\t\t{\n\t\t\t__currentFrame = frame;\n\t\t\t__lastFrameUpdate = -1;\n\t\t\t//updating objects to this frame starting from scratch\n\t\t\t__updateFrameObjectsAndChildren();\n\n\t\t\t//check if there is a framescript and run it for this frame\n\t\t\tif(__frameScripts != null && __frameScripts.exists(frame)) {\n\t\t\t\tvar script = __frameScripts.get (frame);\n\t\t\t\tscript ();\n\t\t\t}\n\t\t}\n\t\tsuper.__enterFrame (0);\n\t}\n\t\n\t@:access(openfl._internal.swf.SWFLiteLibrary.rootPath)\n\tprivate function __resolveFrameReference (frame:Dynamic):Int {\n\t\t\n\t\tif (Std.is (frame, Int)) {\n\t\t\t\n\t\t\treturn cast frame;\n\t\t\t\n\t\t} else if (Std.is (frame, String)) {\n\t\t\t\n\t\t\tvar label:String = cast frame;\n\t\t\t\n\t\t\tfor (frameLabel in __currentLabels) {\n\t\t\t\t\n\t\t\t\tif (frameLabel.name == label) {\n\t\t\t\t\t\n\t\t\t\t\treturn frameLabel.frame;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar p: DisplayObjectContainer = this;\n\t\t\tvar name: Array<String> = new Array();\n\t\t\tdo {\n\t\t\t\tname.push(p.__name);\n\t\t\t} while (null != (p = p.parent));\n\t\t\tname.reverse();\n\t\t\tvar r = \"(empty __swf)\";\n\t\t\tif(this.__swf != null) r = this.__swf.library.rootPath;\n\t\t\tLog.warn (\"Error #2109: Frame label \" + label + \" not found in scene.\\n\" +\n\t\t\t\t\"swf: \"+ r +\"\\n\" +\n\t\t\t\t\"symbol path: \"+ name.join('.') +\"\\n\" +\n\t\t\t\t\"symbol: \"+ (__symbol.className == null ? \"null \" : \"\\\"\" + __symbol.className + \"\\\"\") + \"\\n\" +\n\t\t\t\t\"frame: \" + frame);\n\t\t\treturn 1;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthrow \"Invalid type for frame \" + Type.getClassName (frame);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __sortDepths (a:FrameSymbolInstance, b:FrameSymbolInstance):Int {\n\t\t\n\t\treturn a.depth - b.depth;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __stopAllMovieClips ():Void {\n\t\t\n\t\tsuper.__stopAllMovieClips ();\n\t\tstop ();\n\t\t\n\t}\n\t\n\t\n\tprivate function __updateDisplayObject (displayObject:DisplayObject, frameObject:FrameObject):Void {\n\t\t\n\t\tif (displayObject == null) return;\n\n\t\tvar currFrameObject = frameObject.lastFrameObjectWithPlacementData != null?frameObject.lastFrameObjectWithPlacementData:frameObject;\n\t\t\n\t\tif (currFrameObject.name != null) {\n\t\t\t\n\t\t\tdisplayObject.name = currFrameObject.name;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (currFrameObject.matrix != null) {\n\t\t\t\n\t\t\tdisplayObject.transform.matrix = currFrameObject.matrix;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (currFrameObject.colorTransform != null) {\n\t\t\t\n\t\t\tdisplayObject.transform.colorTransform = currFrameObject.colorTransform;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (currFrameObject.filters != null) {\n\t\t\t\n\t\t\tvar filters:Array<BitmapFilter> = [];\n\t\t\t\n\t\t\tfor (filter in currFrameObject.filters) {\n\t\t\t\t\n\t\t\t\tswitch (filter) {\n\t\t\t\t\t\n\t\t\t\t\tcase BlurFilter (blurX, blurY, quality):\n\t\t\t\t\t\t\n\t\t\t\t\t\tfilters.push (new BlurFilter (blurX, blurY, quality));\n\t\t\t\t\t\n\t\t\t\t\tcase ColorMatrixFilter (matrix):\n\t\t\t\t\t\t\n\t\t\t\t\t\tfilters.push (new ColorMatrixFilter (matrix));\n\t\t\t\t\t\n\t\t\t\t\tcase DropShadowFilter (distance, angle, color, alpha, blurX, blurY, strength, quality, inner, knockout, hideObject):\n\t\t\t\t\t\t\n\t\t\t\t\t\tfilters.push (new DropShadowFilter (distance, angle, color, alpha, blurX, blurY, strength, quality, inner, knockout, hideObject));\n\t\t\t\t\t\n\t\t\t\t\tcase GlowFilter (color, alpha, blurX, blurY, strength, quality, inner, knockout):\n\t\t\t\t\t\t\n\t\t\t\t\t\tfilters.push (new GlowFilter (color, alpha, blurX, blurY, strength, quality, inner, knockout));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tdisplayObject.filters = filters;\n\t\t\t\n\t\t} else {\n\n\t\t\tdisplayObject.filters = null;\n\n\t\t}\n\t\t\n\t\tif (currFrameObject.visible != null) {\n\t\t\t\n\t\t\tdisplayObject.visible = currFrameObject.visible;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (currFrameObject.blendMode != null) {\n\t\t\t\n\t\t\tdisplayObject.blendMode = currFrameObject.blendMode;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (currFrameObject.cacheAsBitmap != null) {\n\t\t\t\n\t\t\t//displayObject.cacheAsBitmap = currFrameObject.cacheAsBitmap;\n\t\t\t\n\t\t}\n\t\t\n\t\t#if (openfl_dynamic || openfl_dynamic_fields_only)\n\t\tReflect.setField (this, displayObject.name, displayObject);\n\t\t#end\n\t\t\n\t}\n\t\n\n\tprivate function __updateFrameLabel ():Void {\n\n\t\t// NOTE: in flash, the first label on the timeline is the current one\n\t\tvar labels : Array<String> = __symbol.frames[__currentFrame - 1].labels;\n\t\t__currentFrameLabel = labels != null && labels.length > 0 ? labels[0] : __symbol.frames[__currentFrame - 1].label;\n\t\t\n\t\tif (__currentFrameLabel != null) {\n\t\t\t\n\t\t\t__currentLabel = __currentFrameLabel;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__currentLabel = null;\n\t\t\t\n\t\t\tfor (label in __currentLabels) {\n\t\t\t\t\n\t\t\t\tif (label.frame < __currentFrame) {\n\t\t\t\t\t\n\t\t\t\t\t__currentLabel = label.name;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_currentFrame ():Int { return __currentFrame; }\n\tprivate function get_currentFrameLabel ():String { return __currentFrameLabel; }\n\tprivate function get_currentLabel ():String { return __currentLabel; }\n\tprivate function get_currentLabels ():Array<FrameLabel> { return __currentLabels; }\n\tprivate function get_framesLoaded ():Int { return __totalFrames; }\n\tprivate function get_isPlaying ():Bool { return __playing; }\n\tprivate function get_totalFrames ():Int { return __totalFrames; }\n\tprivate override function get_width():Float\n\t{\n\t\tif(__swf != null && __swf.frameSizeMaxPixel != null && this.__symbol == __swf.root)\n\t\t{\n\t\t\tvar thisWidth = super.width;\n\t\t\tvar frameSizeWidth = __swf.frameSizeMaxPixel.x - __swf.frameSizeMinPixel.x;\n\t\t\tif(frameSizeWidth > thisWidth)\n\t\t\t\treturn frameSizeWidth;\n\t\t\telse\n\t\t\t\treturn thisWidth;\n\t\t}\n\t\telse\n\t\t\treturn super.width;\n\t}\n\n\tprivate override function get_height():Float\n\t{\n\t\tif(__swf != null && __swf.frameSizeMaxPixel != null && this.__symbol == __swf.root)\n\t\t{\n\t\t\tvar thisHeight = super.height;\n\t\t\tvar frameSizeHeight = __swf.frameSizeMaxPixel.y - __swf.frameSizeMinPixel.y;\n\t\t\tif(frameSizeHeight > thisHeight)\n\t\t\t\treturn frameSizeHeight;\n\t\t\telse\n\t\t\t\treturn thisHeight;\n\t\t}\n\t\telse\n\t\t\treturn super.height;\n\t}\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\nprivate class FrameSymbolInstance {\n\t\n\t\n\tpublic var characterID:Int;\n\tpublic var clipDepth:Int;\n\tpublic var depth:Int;\n\tpublic var displayObject:DisplayObject;\n\tpublic var initFrame:Int;\n\tpublic var initFrameObjectID:Int; // TODO: Multiple frame object IDs may refer to the same instance\n\t\n\t\n\tpublic function new (initFrame:Int, initFrameObjectID:Int, characterID:Int, depth:Int, displayObject:DisplayObject, clipDepth:Int) {\n\n\t\tthis.initFrame = initFrame;\n\t\tthis.initFrameObjectID = initFrameObjectID;\n\t\tthis.characterID = characterID;\n\t\tthis.depth = depth;\n\t\tthis.displayObject = displayObject;\n\t\tthis.clipDepth = clipDepth;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:final class PNGEncoderOptions {\n\t\n\t\n\tpublic var fastCompression:Bool;\n\t\n\t\n\tpublic function new (fastCompression:Bool = false) {\n\t\t\n\t\tthis.fastCompression = fastCompression;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\n@:enum abstract PixelSnapping(Null<Int>) {\n\t\n\tpublic var ALWAYS = 0;\n\tpublic var AUTO = 1;\n\tpublic var NEVER = 2;\n\t\n\t@:from private static function fromString (value:String):PixelSnapping {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"always\": ALWAYS;\n\t\t\tcase \"auto\": AUTO;\n\t\t\tcase \"never\": NEVER;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase PixelSnapping.ALWAYS: \"always\";\n\t\t\tcase PixelSnapping.AUTO: \"auto\";\n\t\t\tcase PixelSnapping.NEVER: \"never\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\nimport lime.app.Config;\nimport lime.app.Preloader in LimePreloader;\nimport lime.utils.AssetType;\nimport openfl.display.Sprite;\nimport openfl.events.Event;\nimport openfl.events.ProgressEvent;\nimport openfl.Lib;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.LoaderInfo)\n\n\nclass Preloader extends LimePreloader {\n\t\n\t\n\tprivate var display:Sprite;\n\tprivate var ready:Bool;\n\t\n\t\n\tpublic function new (display:Sprite = null) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tthis.display = display;\n\t\t\n\t\tif (display != null) {\n\t\t\t\n\t\t\tdisplay.addEventListener (Event.UNLOAD, display_onUnload);\n\t\t\tLib.current.addChild (display);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function start ():Void {\n\t\t\n\t\tif (simulateProgress) return;\n\t\t\n\t\tready = true;\n\t\t\n\t\t#if !flash\n\t\tLib.current.loaderInfo.__complete ();\n\t\t#end\n\t\t\n\t\tif (display != null) {\n\t\t\t\n\t\t\tvar complete = new Event (Event.COMPLETE, true, true);\n\t\t\tdisplay.dispatchEvent (complete);\n\t\t\t\n\t\t\tif (!complete.isDefaultPrevented ()) {\n\t\t\t\t\n\t\t\t\tdisplay.dispatchEvent (new Event (Event.UNLOAD));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tsuper.start ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function update (loaded:Int, total:Int):Void {\n\t\t\n\t\t#if !flash\n\t\tLib.current.loaderInfo.__update (loaded, total);\n\t\t#end\n\t\t\n\t\tif (display != null) {\n\t\t\t\n\t\t\tdisplay.dispatchEvent (new ProgressEvent (ProgressEvent.PROGRESS, true, true, loaded, total));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function display_onUnload (event:Event):Void {\n\t\t\n\t\tif (display != null) {\n\t\t\t\n\t\t\tdisplay.removeEventListener (Event.UNLOAD, display_onUnload);\n\t\t\t\n\t\t\tif (display.parent == Lib.current) {\n\t\t\t\t\n\t\t\t\tLib.current.removeChild (display);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tLib.current.stage.focus = null;\n\t\t\tdisplay = null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (ready && !simulateProgress) {\n\t\t\t\n\t\t\tsuper.start ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:dox(hide) class DefaultPreloader extends Sprite {\n\t\n\t\n\tprivate var endAnimation:Int;\n\tprivate var outline:Sprite;\n\tprivate var progress:Sprite;\n\tprivate var startAnimation:Int;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tvar backgroundColor = getBackgroundColor ();\n\t\tvar r = backgroundColor >> 16 & 0xFF;\n\t\tvar g = backgroundColor >> 8  & 0xFF;\n\t\tvar b = backgroundColor & 0xFF;\n\t\tvar perceivedLuminosity = (0.299 * r + 0.587 * g + 0.114 * b);\n\t\tvar color = 0x000000;\n\t\t\n\t\tif (perceivedLuminosity < 70) {\n\t\t\t\n\t\t\tcolor = 0xFFFFFF;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar x = 30;\n\t\tvar height = 7;\n\t\tvar y = getHeight () / 2 - height / 2;\n\t\tvar width = getWidth () - x * 2;\n\t\t\n\t\tvar padding = 2;\n\t\t\n\t\toutline = new Sprite ();\n\t\toutline.graphics.beginFill (color, 0.07);\n\t\toutline.graphics.drawRect (0, 0, width, height);\n\t\toutline.x = x;\n\t\toutline.y = y;\n\t\toutline.alpha = 0;\n\t\taddChild (outline);\n\t\t\n\t\tprogress = new Sprite ();\n\t\tprogress.graphics.beginFill (color, 0.35);\n\t\tprogress.graphics.drawRect (0, 0, width - padding * 2, height - padding * 2);\n\t\tprogress.x = x + padding;\n\t\tprogress.y = y + padding;\n\t\tprogress.scaleX = 0;\n\t\tprogress.alpha = 0;\n\t\taddChild (progress);\n\t\t\n\t\tstartAnimation = Lib.getTimer () + 100;\n\t\tendAnimation = startAnimation + 1000;\n\t\t\n\t\taddEventListener (Event.ADDED_TO_STAGE, this_onAddedToStage);\n\t\t\n\t}\n\t\n\t\n\tpublic function getBackgroundColor ():Int {\n\t\t\n\t\treturn Lib.current.stage.window.config.background;\n\t\t\n\t}\n\t\n\t\n\tpublic function getHeight ():Float {\n\t\t\n\t\tvar height = Lib.current.stage.window.config.height;\n\t\t\n\t\tif (height > 0) {\n\t\t\t\n\t\t\treturn height;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn Lib.current.stage.stageHeight;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getWidth ():Float {\n\t\t\n\t\tvar width = Lib.current.stage.window.config.width;\n\t\t\n\t\tif (width > 0) {\n\t\t\t\n\t\t\treturn width;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn Lib.current.stage.stageWidth;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:keep public function onInit ():Void {\n\t\t\n\t\taddEventListener (Event.ENTER_FRAME, this_onEnterFrame);\n\t\t\n\t}\n\t\n\t\n\t@:keep public function onLoaded ():Void {\n\t\t\n\t\tremoveEventListener (Event.ENTER_FRAME, this_onEnterFrame);\n\t\t\n\t\tdispatchEvent (new Event (Event.UNLOAD));\n\t\t\n\t}\n\t\n\t\n\t@:keep public function onUpdate (bytesLoaded:Int, bytesTotal:Int):Void {\n\t\t\n\t\tvar percentLoaded = 0.0;\n\t\t\n\t\tif (bytesTotal > 0) {\n\t\t\t\n\t\t\tpercentLoaded = bytesLoaded / bytesTotal;\n\t\t\t\n\t\t\tif (percentLoaded > 1) {\n\t\t\t\t\n\t\t\t\tpercentLoaded = 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tprogress.scaleX = percentLoaded;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function this_onAddedToStage (event:Event):Void {\n\t\t\n\t\tremoveEventListener (Event.ADDED_TO_STAGE, this_onAddedToStage);\n\t\t\n\t\tonInit ();\n\t\tonUpdate (loaderInfo.bytesLoaded, loaderInfo.bytesTotal);\n\t\t\n\t\taddEventListener (ProgressEvent.PROGRESS, this_onProgress);\n\t\taddEventListener (Event.COMPLETE, this_onComplete);\n\t\t\n\t}\n\t\n\t\n\tprivate function this_onComplete (event:Event):Void {\n\t\t\n\t\tevent.preventDefault ();\n\t\t\n\t\tremoveEventListener (ProgressEvent.PROGRESS, this_onProgress);\n\t\tremoveEventListener (Event.COMPLETE, this_onComplete);\n\t\t\n\t\tonLoaded ();\n\t\t\n\t}\n\t\n\t\n\tprivate function this_onEnterFrame (event:Event):Void {\n\t\t\n\t\tvar elapsed = Lib.getTimer () - startAnimation;\n\t\tvar total = endAnimation - startAnimation;\n\t\t\n\t\tvar percent = elapsed / total;\n\t\t\n\t\tif (percent < 0) percent = 0;\n\t\tif (percent > 1) percent = 1;\n\t\t\n\t\toutline.alpha = percent;\n\t\tprogress.alpha = percent;\n\t\t\n\t}\n\t\n\t\n\tprivate function this_onProgress (event:ProgressEvent):Void {\n\t\t\n\t\tonUpdate (Std.int (event.bytesLoaded), Std.int (event.bytesTotal));\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n#if ((!cs && !java) || display) @:final #end\n\n\nclass ShaderData implements Dynamic {\n\t\n\t\n\tpublic var aAlpha:ShaderParameter<Float>;\n\tpublic var aPosition:ShaderParameter<Float>;\n\tpublic var aTexCoord:ShaderParameter<Float>;\n\tpublic var uImage0:ShaderInput<BitmapData>;\n\tpublic var uMatrix:ShaderParameter<Float>;\n\t\n\t\n\tpublic function new (byteArray:ByteArray) {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n#if !js @:generic #end\n\n\n@:final class ShaderInput<T> /*implements Dynamic*/ {\n\t\n\t\n\tpublic var channels (default, null):Int;\n\tpublic var height:Int;\n\tpublic var index (default, null):Dynamic;\n\tpublic var input:T;\n\t@:noCompletion public var name:String;\n\tpublic var smoothing:Bool;\n\tpublic var width:Int;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tchannels = 0;\n\t\theight = 0;\n\t\tindex = 0;\n\t\twidth = 0;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n#if !js @:generic #end\n\n\n@:final class ShaderParameter<T> /*implements Dynamic*/ {\n\t\n\t\n\tpublic var index (default, null):Dynamic;\n\t@:noCompletion public var name:String;\n\tpublic var type (default, null):ShaderParameterType;\n\tpublic var value:Array<T>;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tindex = 0;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\n@:enum abstract ShaderParameterType(Null<Int>) {\n\t\n\tpublic var BOOL = 0;\n\tpublic var BOOL2 = 1;\n\tpublic var BOOL3 = 2;\n\tpublic var BOOL4 = 3;\n\tpublic var FLOAT = 4;\n\tpublic var FLOAT2 = 5;\n\tpublic var FLOAT3 = 6;\n\tpublic var FLOAT4 = 7;\n\tpublic var INT = 8;\n\tpublic var INT2 = 9;\n\tpublic var INT3 = 10;\n\tpublic var INT4 = 11;\n\tpublic var MATRIX2X2 = 12;\n\tpublic var MATRIX2X3 = 13;\n\tpublic var MATRIX2X4 = 14;\n\tpublic var MATRIX3X2 = 15;\n\tpublic var MATRIX3X3 = 16;\n\tpublic var MATRIX3X4 = 17;\n\tpublic var MATRIX4X2 = 18;\n\tpublic var MATRIX4X3 = 19;\n\tpublic var MATRIX4X4 = 20;\n\t\n\t@:from private static function fromString (value:String):ShaderParameterType {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"bool\": BOOL;\n\t\t\tcase \"bool2\": BOOL2;\n\t\t\tcase \"bool3\": BOOL2;\n\t\t\tcase \"bool4\": BOOL2;\n\t\t\tcase \"float\": FLOAT;\n\t\t\tcase \"float2\": FLOAT2;\n\t\t\tcase \"float3\": FLOAT3;\n\t\t\tcase \"float4\": FLOAT4;\n\t\t\tcase \"int\": INT;\n\t\t\tcase \"int2\": INT2;\n\t\t\tcase \"int3\": INT3;\n\t\t\tcase \"int4\": INT4;\n\t\t\tcase \"matrix2x2\": MATRIX2X2;\n\t\t\tcase \"matrix2x3\": MATRIX2X3;\n\t\t\tcase \"matrix2x4\": MATRIX2X4;\n\t\t\tcase \"matrix3x2\": MATRIX3X2;\n\t\t\tcase \"matrix3x3\": MATRIX3X3;\n\t\t\tcase \"matrix3x4\": MATRIX3X4;\n\t\t\tcase \"matrix4x2\": MATRIX4X2;\n\t\t\tcase \"matrix4x3\": MATRIX4X3;\n\t\t\tcase \"matrix4x4\": MATRIX4X4;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase ShaderParameterType.BOOL: \"bool\";\n\t\t\tcase ShaderParameterType.BOOL2: \"bool2\";\n\t\t\tcase ShaderParameterType.BOOL3: \"bool3\";\n\t\t\tcase ShaderParameterType.BOOL4: \"bool4\";\n\t\t\tcase ShaderParameterType.FLOAT: \"float\";\n\t\t\tcase ShaderParameterType.FLOAT2: \"float2\";\n\t\t\tcase ShaderParameterType.FLOAT3: \"float3\";\n\t\t\tcase ShaderParameterType.FLOAT4: \"float4\";\n\t\t\tcase ShaderParameterType.INT: \"int\";\n\t\t\tcase ShaderParameterType.INT2: \"int2\";\n\t\t\tcase ShaderParameterType.INT3: \"int3\";\n\t\t\tcase ShaderParameterType.INT4: \"int4\";\n\t\t\tcase ShaderParameterType.MATRIX2X2: \"matrix2x2\";\n\t\t\tcase ShaderParameterType.MATRIX2X3: \"matrix2x3\";\n\t\t\tcase ShaderParameterType.MATRIX2X4: \"matrix2x4\";\n\t\t\tcase ShaderParameterType.MATRIX3X2: \"matrix3x2\";\n\t\t\tcase ShaderParameterType.MATRIX3X3: \"matrix3x3\";\n\t\t\tcase ShaderParameterType.MATRIX3X4: \"matrix3x4\";\n\t\t\tcase ShaderParameterType.MATRIX4X2: \"matrix4x2\";\n\t\t\tcase ShaderParameterType.MATRIX4X3: \"matrix4x3\";\n\t\t\tcase ShaderParameterType.MATRIX4X4: \"matrix4x4\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\n@:enum abstract ShaderPrecision(Null<Int>) {\n\t\n\tpublic var FAST = 0;\n\tpublic var FULL = 1;\n\t\n\t@:from private static function fromString (value:String):ShaderPrecision {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"fast\": FAST;\n\t\t\tcase \"full\": FULL;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase ShaderPrecision.FULL: \"full\";\n\t\t\tcase ShaderPrecision.FAST: \"fast\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.Graphics)\n\n\nclass Shape extends DisplayObject implements IShaderDrawable {\n\t\n\t\n\tpublic var graphics (get, never):Graphics;\n\t@:beta public var shader:Shader;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperty (Shape.prototype, \"graphics\", { get: untyped __js__ (\"function () { return this.get_graphics (); }\") });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_graphics ():Graphics {\n\t\t\n\t\tif (__graphics == null) {\n\t\t\t\n\t\t\t__graphics = new Graphics (this);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __graphics;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\nimport lime.ui.MouseCursor;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.swf.SWFLite;\nimport openfl._internal.symbols.ButtonSymbol;\nimport openfl.display.DisplayObject;\nimport openfl.display.InteractiveObject;\nimport openfl.geom.Matrix;\nimport openfl.geom.Rectangle;\nimport openfl.events.MouseEvent;\nimport openfl.media.SoundTransform;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.symbols.SWFSymbol)\n@:access(openfl.display.MovieClip)\n@:access(openfl.geom.Matrix)\n@:access(openfl.geom.Rectangle)\n\n\nclass SimpleButton extends InteractiveObject {\n\t\n\t\n\tprivate static var __initSWF:SWFLite;\n\tprivate static var __initSymbol:ButtonSymbol;\n\t\n\tpublic var downState (get, set):DisplayObject;\n\tpublic var enabled:Bool;\n\tpublic var hitTestState (get, set):DisplayObject;\n\tpublic var overState (get, set):DisplayObject;\n\tpublic var soundTransform (get, set):SoundTransform;\n\tpublic var trackAsMenu:Bool;\n\tpublic var upState (get, set):DisplayObject;\n\tpublic var useHandCursor:Bool;\n\t\n\tprivate var __currentState (default, set):DisplayObject;\n\tprivate var __downState:DisplayObject;\n\tprivate var __hitTestState:DisplayObject;\n\tprivate var __ignoreEvent:Bool;\n\tprivate var __overState:DisplayObject;\n\tprivate var __previousStates:Vector<DisplayObject>;\n\tprivate var __soundTransform:SoundTransform;\n\tprivate var __symbol:ButtonSymbol;\n\tprivate var __upState:DisplayObject;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (SimpleButton.prototype, {\n\t\t\t\"downState\": { get: untyped __js__ (\"function () { return this.get_downState (); }\"), set: untyped __js__ (\"function (v) { return this.set_downState (v); }\") },\n\t\t\t\"hitTestState\": { get: untyped __js__ (\"function () { return this.get_hitTestState (); }\"), set: untyped __js__ (\"function (v) { return this.set_hitTestState (v); }\") },\n\t\t\t\"overState\": { get: untyped __js__ (\"function () { return this.get_overState (); }\"), set: untyped __js__ (\"function (v) { return this.set_overState (v); }\") },\n\t\t\t\"soundTransform\": { get: untyped __js__ (\"function () { return this.get_soundTransform (); }\"), set: untyped __js__ (\"function (v) { return this.set_soundTransform (v); }\") },\n\t\t\t\"upState\": { get: untyped __js__ (\"function () { return this.get_upState (); }\"), set: untyped __js__ (\"function (v) { return this.set_upState (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (upState:DisplayObject = null, overState:DisplayObject = null, downState:DisplayObject = null, hitTestState:DisplayObject = null) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tenabled = true;\n\t\ttrackAsMenu = false;\n\t\tuseHandCursor = true;\n\t\t\n\t\t__upState = (upState != null) ? upState : new DisplayObject ();\n\t\t__overState = overState;\n\t\t__downState = downState;\n\t\t__hitTestState = (hitTestState != null) ? hitTestState : new DisplayObject ();\n\t\t\n\t\taddEventListener (MouseEvent.MOUSE_DOWN, __this_onMouseDown);\n\t\taddEventListener (MouseEvent.MOUSE_OUT, __this_onMouseOut);\n\t\taddEventListener (MouseEvent.MOUSE_OVER, __this_onMouseOver);\n\t\taddEventListener (MouseEvent.MOUSE_UP, __this_onMouseUp);\n\t\t\n\t\t__tabEnabled = true;\n\t\t__currentState = __upState;\n\t\t\n\t\tif (__initSymbol != null) {\n\t\t\t\n\t\t\tvar swf = __initSWF;\n\t\t\t__symbol = __initSymbol;\n\t\t\t\n\t\t\t__initSWF = null;\n\t\t\t__initSymbol = null;\n\t\t\t\n\t\t\t__fromSymbol (swf, __symbol);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromSymbol (swf:SWFLite, symbol:ButtonSymbol):Void {\n\t\t\n\t\t__symbol = symbol;\n\t\t\n\t\tif (symbol.downState != null) {\n\t\t\t\n\t\t\tdownState = symbol.downState.__createObject (swf);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (symbol.hitState != null) {\n\t\t\t\n\t\t\thitTestState = symbol.hitState.__createObject (swf);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (symbol.overState != null) {\n\t\t\t\n\t\t\toverState = symbol.overState.__createObject (swf);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (symbol.upState != null) {\n\t\t\t\n\t\t\tupState = symbol.upState.__createObject (swf);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tsuper.__getBounds (rect, matrix);\n\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\t__updateTransforms (matrix);\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t\t__currentState.__getBounds (rect, __currentState.__worldTransform);\n\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\t__updateTransforms ();\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getRenderBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\tif (__scrollRect != null) {\n\t\t\t\n\t\t\tsuper.__getRenderBounds (rect, matrix);\n\t\t\treturn;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tsuper.__getBounds (rect, matrix);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\t__updateTransforms (matrix);\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t\t__currentState.__getRenderBounds (rect, __currentState.__worldTransform);\n\t\t\n\t\tif (matrix != null) {\n\t\t\t\n\t\t\t__updateTransforms ();\n\t\t\t__updateChildren (true);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getCursor ():MouseCursor {\n\t\t\n\t\treturn (useHandCursor && !__ignoreEvent) ? POINTER : null;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\n\t\t\n\t\tvar hitTest = false;\n\t\t\n\t\tif (hitTestState != null) {\n\t\t\t\n\t\t\tif (hitTestState.__hitTest (x, y, shapeFlag, stack, interactiveOnly, hitObject)) {\n\t\t\t\t\n\t\t\t\tif (stack != null) {\n\t\t\t\t\t\n\t\t\t\t\tif (stack.length == 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tstack[0] = hitObject;\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tstack[stack.length - 1] = hitObject;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\thitTest = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else if (__currentState != null) {\n\t\t\t\n\t\t\tif (!hitObject.visible || __isMask || (interactiveOnly && !mouseEnabled)) return false;\n\t\t\tif (mask != null && !mask.__hitTestMask (x, y)) return false;\n\t\t\t\n\t\t\tif (__currentState.__hitTest (x, y, shapeFlag, stack, interactiveOnly, hitObject)) {\n\t\t\t\t\n\t\t\t\thitTest = interactiveOnly;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t// TODO: Better fix?\n\t\t// (this is caused by the \"hitObject\" logic in hit testing)\n\t\t\n\t\tif (stack != null) {\n\t\t\t\n\t\t\twhile (stack.length > 1 && stack[stack.length - 1] == stack[stack.length - 2]) {\n\t\t\t\t\n\t\t\t\tstack.pop ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn hitTest;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __hitTestMask (x:Float, y:Float):Bool {\n\t\t\n\t\tvar hitTest = false;\n\t\t\n\t\tif (__currentState.__hitTestMask (x, y)) {\n\t\t\t\n\t\t\thitTest = true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn hitTest;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCairo (renderSession:RenderSession):Void {\n\t\t\n\t\tif (!__renderable || __worldAlpha <= 0 || __currentState == null) return;\n\t\t\n\t\trenderSession.maskManager.pushObject (this);\n\t\t__currentState.__renderCairo (renderSession);\n\t\trenderSession.maskManager.popObject (this);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCairoMask (renderSession:RenderSession):Void {\n\t\t\n\t\t__currentState.__renderCairoMask (renderSession);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCanvas (renderSession:RenderSession):Void {\n\t\t\n\t\tif (!__renderable || __worldAlpha <= 0 || __currentState == null) return;\n\t\t\n\t\t#if !neko\n\t\t\n\t\trenderSession.maskManager.pushObject (this);\n\t\t__currentState.__renderCanvas (renderSession);\n\t\trenderSession.maskManager.popObject (this);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCanvasMask (renderSession:RenderSession):Void {\n\t\t\n\t\tvar bounds = Rectangle.__pool.get ();\n\t\t__getLocalBounds (bounds);\n\t\t\n\t\trenderSession.context.rect (0, 0, bounds.width, bounds.height);\n\t\t\n\t\tRectangle.__pool.release (bounds);\n\t\t__currentState.__renderCanvasMask (renderSession);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderDOM (renderSession:RenderSession):Void {\n\t\t\n\t\t#if !neko\n\t\t\n\t\trenderSession.maskManager.pushObject (this);\n\t\t\n\t\tfor (previousState in __previousStates) {\n\t\t\t\n\t\t\tpreviousState.__renderDOM (renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\t__previousStates.length = 0;\n\t\t\n\t\tif (__currentState != null) {\n\n\t\t\tif (__currentState.stage != stage) {\n\t\t\t\t__currentState.__setStageReference(stage);\n\t\t\t}\n\n\t\t\t__currentState.__renderDOM (renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\trenderSession.maskManager.popObject (this);\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderGL (renderSession:RenderSession):Void {\n\t\t\n\t\tif (!__renderable || __worldAlpha <= 0 || __currentState == null) return;\n\t\t\n\t\trenderSession.maskManager.pushObject (this);\n\t\t__currentState.__renderGL (renderSession);\n\t\trenderSession.maskManager.popObject (this);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderGLMask (renderSession:RenderSession):Void {\n\t\t\n\t\tif (__currentState == null) return;\n\t\t\n\t\t__currentState.__renderGLMask (renderSession);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __setStageReference (stage:Stage):Void {\n\t\t\n\t\tsuper.__setStageReference (stage);\n\t\t\n\t\tif (__currentState != null) {\n\t\t\t\n\t\t\t__currentState.__setStageReference (stage);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (hitTestState != null && hitTestState != __currentState) {\n\t\t\t\n\t\t\thitTestState.__setStageReference (stage);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __setTransformDirty ():Void {\n\t\t\n\t\tsuper.__setTransformDirty ();\n\t\t\n\t\tif (__currentState != null) {\n\t\t\t\n\t\t\t__currentState.__setTransformDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (hitTestState != null && hitTestState != __currentState) {\n\t\t\t\n\t\t\thitTestState.__setTransformDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function __update (transformOnly:Bool, updateChildren:Bool, ?maskGraphics:Graphics = null):Void {\n\t\t\n\t\tsuper.__update (transformOnly, updateChildren, maskGraphics);\n\t\t\n\t\tif (updateChildren) {\n\t\t\t\n\t\t\tif (__currentState != null) {\n\t\t\t\t\n\t\t\t\t__currentState.__update (transformOnly, true, maskGraphics);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (hitTestState != null && hitTestState != __currentState) {\n\t\t\t\t\n\t\t\t\thitTestState.__update (transformOnly, true, maskGraphics);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function __updateChildren (transformOnly:Bool):Void {\n\t\t\n\t\tsuper.__updateChildren (transformOnly);\n\t\t\n\t\tif (__currentState != null) {\n\t\t\t\n\t\t\t__currentState.__updateChildren (transformOnly);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (hitTestState != null && hitTestState != __currentState) {\n\t\t\t\n\t\t\thitTestState.__updateChildren (transformOnly);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function __updateTransforms (overrideTransform:Matrix = null):Void {\n\t\t\n\t\tsuper.__updateTransforms (overrideTransform);\n\t\t\n\t\tif (__currentState != null) {\n\t\t\t\n\t\t\t__currentState.__updateTransforms ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (hitTestState != null && hitTestState != __currentState) {\n\t\t\t\n\t\t\thitTestState.__updateTransforms ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_downState ():DisplayObject {\n\t\t\n\t\treturn __downState;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_downState (downState:DisplayObject):DisplayObject {\n\t\t\n\t\tif (__downState != null && __currentState == __downState) {\n\t\t\t\n\t\t\t__currentState = __downState;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __downState = downState;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_hitTestState ():DisplayObject {\n\t\t\n\t\treturn __hitTestState;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_hitTestState (hitTestState:DisplayObject):DisplayObject {\n\t\t\n\t\tif (__hitTestState != null && __hitTestState != hitTestState) {\n\t\t\t\n\t\t\tif (__hitTestState != downState && __hitTestState != upState && __hitTestState != overState) {\n\t\t\t\t\n\t\t\t\t__hitTestState.__renderParent = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (hitTestState != null) {\n\t\t\t\n\t\t\thitTestState.__renderParent = this;\n\t\t\thitTestState.__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __hitTestState = hitTestState;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_overState ():DisplayObject {\n\t\t\n\t\treturn __overState;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_overState (overState:DisplayObject):DisplayObject {\n\t\t\n\t\tif (__overState != null && __currentState == __overState) {\n\t\t\t\n\t\t\t__currentState = overState;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __overState = overState;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_soundTransform ():SoundTransform {\n\t\t\n\t\tif (__soundTransform == null) {\n\t\t\t\n\t\t\t__soundTransform = new SoundTransform ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn new SoundTransform (__soundTransform.volume, __soundTransform.pan);\n\t\t\n\t}\n\t\n\t\n\tprivate function set_soundTransform (value:SoundTransform):SoundTransform {\n\t\t\n\t\t__soundTransform = new SoundTransform (value.volume, value.pan);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_upState ():DisplayObject {\n\t\t\n\t\treturn __upState;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_upState (upState:DisplayObject):DisplayObject {\n\t\t\n\t\tif (__upState != null && __currentState == __upState) {\n\t\t\t\n\t\t\t__currentState = upState;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __upState = upState;\n\t\t\n\t}\n\t\n\t\n\tprivate function set___currentState (value:DisplayObject):DisplayObject {\n\t\t\n\t\tif (__currentState != null && __currentState != hitTestState) {\n\t\t\t\n\t\t\t__currentState.__renderParent = null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (value != null && value.parent != null) {\n\t\t\t\n\t\t\tvalue.parent.removeChild (value);\n\t\t\t\n\t\t}\n\t\t\n\t\t#if (js && html5 && dom)\n\t\tif (__previousStates == null) {\n\t\t\t\n\t\t\t__previousStates = new Vector<DisplayObject> ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tif (value != __currentState) {\n\t\t\t\n\t\t\t#if (js && html5 && dom)\n\t\t\tif (__currentState != null) {\n\t\t\t\t\n\t\t\t\t__currentState.__setStageReference (null);\n\t\t\t\t__previousStates.push (__currentState);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar index = __previousStates.indexOf (value);\n\t\t\t\n\t\t\tif (index > -1) {\n\t\t\t\t\n\t\t\t\t__previousStates.splice (index, 1);\n\t\t\t\t\n\t\t\t}\n\t\t\t#end\n\t\t\t\n\t\t\tif (value != null) {\n\t\t\t\t\n\t\t\t\tvalue.__renderParent = this;\n\t\t\t\tvalue.__setRenderDirty ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__currentState = value;\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function __this_onMouseDown (event:MouseEvent):Void {\n\t\t\n\t\t__currentState = downState;\n\t\t\n\t}\n\t\n\t\n\tprivate function __this_onMouseOut (event:MouseEvent):Void {\n\t\t\n\t\t__ignoreEvent = false;\n\t\t\n\t\tif (upState != __currentState) {\n\t\t\t\n\t\t\t__currentState = upState;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __this_onMouseOver (event:MouseEvent):Void {\n\t\t\n\t\tif (event.buttonDown) {\n\t\t\t\n\t\t\t__ignoreEvent = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (overState != __currentState && overState != null && !__ignoreEvent) {\n\t\t\t\n\t\t\t__currentState = overState;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __this_onMouseUp (event:MouseEvent):Void {\n\t\t\n\t\t__ignoreEvent = false;\n\t\t\n\t\tif (overState != null) {\n\t\t\t\n\t\t\t__currentState = overState;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__currentState = upState;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\n@:enum abstract SpreadMethod(Null<Int>) {\n\t\n\tpublic var PAD = 0;\n\tpublic var REFLECT = 1;\n\tpublic var REPEAT = 2;\n\t\n\t@:from private static function fromString (value:String):SpreadMethod {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"pad\": PAD;\n\t\t\tcase \"reflect\": REFLECT;\n\t\t\tcase \"repeat\": REPEAT;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase SpreadMethod.PAD: \"pad\";\n\t\t\tcase SpreadMethod.REFLECT: \"reflect\";\n\t\t\tcase SpreadMethod.REPEAT: \"repeat\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\nimport haxe.CallStack;\nimport haxe.EnumFlags;\nimport lime.app.Application;\nimport lime.app.IModule;\nimport lime.app.Preloader;\nimport lime.graphics.opengl.GL;\nimport lime.graphics.opengl.GLProgram;\nimport lime.graphics.opengl.GLUniformLocation;\nimport lime.graphics.CanvasRenderContext;\nimport lime.graphics.ConsoleRenderContext;\nimport lime.graphics.DOMRenderContext;\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.RenderContext;\nimport lime.graphics.Renderer;\nimport lime.math.Matrix4;\nimport lime.system.System;\nimport lime.ui.Touch;\nimport lime.ui.Gamepad;\nimport lime.ui.GamepadAxis;\nimport lime.ui.GamepadButton;\nimport lime.ui.Joystick;\nimport lime.ui.JoystickHatPosition;\nimport lime.ui.KeyCode;\nimport lime.ui.KeyModifier;\nimport lime.ui.Mouse in LimeMouse;\nimport lime.ui.Window;\nimport lime.utils.GLUtils;\nimport lime.utils.Log;\nimport openfl._internal.renderer.AbstractRenderer;\nimport openfl._internal.renderer.cairo.CairoRenderer;\nimport openfl._internal.renderer.canvas.CanvasRenderer;\nimport openfl._internal.renderer.console.ConsoleRenderer;\nimport openfl._internal.renderer.dom.DOMRenderer;\nimport openfl._internal.renderer.opengl.GLRenderer;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.TouchData;\nimport openfl.display.DisplayObjectContainer;\nimport openfl.errors.Error;\nimport openfl.events.Event;\nimport openfl.events.EventPhase;\nimport openfl.events.FocusEvent;\nimport openfl.events.FullScreenEvent;\nimport openfl.events.KeyboardEvent;\nimport openfl.events.MouseEvent;\nimport openfl.events.TextEvent;\nimport openfl.events.TouchEvent;\nimport openfl.events.UncaughtErrorEvent;\nimport openfl.geom.Matrix;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\nimport openfl.geom.Transform;\nimport openfl.text.TextField;\nimport openfl.ui.GameInput;\nimport openfl.ui.Keyboard;\nimport openfl.ui.KeyLocation;\nimport openfl.ui.Mouse;\nimport openfl.ui.MouseCursor;\n\n#if hxtelemetry\nimport openfl.profiler.Telemetry;\n#end\n\n#if gl_stats\nimport openfl._internal.renderer.opengl.stats.GLStats;\n#end\n\n#if (js && html5)\nimport js.html.CanvasElement;\nimport js.html.DivElement;\nimport js.html.Element;\nimport js.Browser;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl._internal.renderer.AbstractRenderer)\n@:access(openfl.display.Sprite)\n@:access(openfl.display.Stage3D)\n@:access(openfl.events.Event)\n@:access(openfl.geom.Point)\n@:access(openfl.ui.GameInput)\n@:access(openfl.ui.Keyboard)\n@:access(openfl.ui.Mouse)\n\n\nclass Stage extends DisplayObjectContainer implements IModule {\n\t\n\t\n\tpublic var align:StageAlign;\n\tpublic var allowsFullScreen (default, null):Bool;\n\tpublic var allowsFullScreenInteractive (default, null):Bool;\n\tpublic var application (default, null):Application;\n\tpublic var color (get, set):Int;\n\tpublic var contentsScaleFactor (get, never):Float;\n\tpublic var displayState (get, set):StageDisplayState;\n\tpublic var focus (get, set):InteractiveObject;\n\tpublic var frameRate (get, set):Float;\n\tpublic var fullScreenHeight (get, never):UInt;\n\tpublic var fullScreenWidth (get, never):UInt;\n\tpublic var quality:StageQuality;\n\tpublic var scaleMode:StageScaleMode;\n\tpublic var showDefaultContextMenu:Bool;\n\tpublic var softKeyboardRect:Rectangle;\n\tpublic var stage3Ds (default, null):Vector<Stage3D>;\n\tpublic var stageFocusRect:Bool;\n\tpublic var stageHeight (default, null):Int;\n\tpublic var stageWidth (default, null):Int;\n\tpublic var window (default, null):Window;\n\t\n\tprivate var __cacheFocus:InteractiveObject;\n\tprivate var __clearBeforeRender:Bool;\n\tprivate var __color:Int;\n\tprivate var __colorSplit:Array<Float>;\n\tprivate var __colorString:String;\n\tprivate var __contentsScaleFactor:Float;\n\tprivate var __deltaTime:Int;\n\tprivate var __dirty:Bool;\n\tprivate var __displayMatrix:Matrix;\n\tprivate var __displayState:StageDisplayState;\n\tprivate var __dragBounds:Rectangle;\n\tprivate var __dragObject:Sprite;\n\tprivate var __dragOffsetX:Float;\n\tprivate var __dragOffsetY:Float;\n\tprivate var __focus:InteractiveObject;\n\tprivate var __fullscreen:Bool;\n\tprivate var __invalidated:Bool;\n\tprivate var __lastClickTime:Int;\n\tprivate var __logicalWidth:Int;\n\tprivate var __logicalHeight:Int;\n\tprivate var __macKeyboard:Bool;\n\tprivate var __mouseDownLeft:InteractiveObject;\n\tprivate var __mouseDownMiddle:InteractiveObject;\n\tprivate var __mouseDownRight:InteractiveObject;\n\tprivate var __mouseOverTarget:InteractiveObject;\n\tprivate var __mouseX:Float;\n\tprivate var __mouseY:Float;\n\tprivate var __primaryTouch:Touch;\n\tprivate var __renderer:AbstractRenderer;\n\tprivate var __rendering:Bool;\n\tprivate var __rollOutStack:Array<DisplayObject>;\n\tprivate var __stack:Array<DisplayObject>;\n\tprivate var __touchData:Map<Int, TouchData>;\n\tprivate var __transparent:Bool;\n\tprivate var __wasDirty:Bool;\n\tprivate var __wasFullscreen:Bool;\n\n\tpublic static var frameID:UInt = 1;\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (Stage.prototype, {\n\t\t\t\"color\": { get: untyped __js__ (\"function () { return this.get_color (); }\"), set: untyped __js__ (\"function (v) { return this.set_color (v); }\") },\n\t\t\t\"contentsScaleFactor\": { get: untyped __js__ (\"function () { return this.get_contentsScaleFactor (); }\") },\n\t\t\t\"displayState\": { get: untyped __js__ (\"function () { return this.get_displayState (); }\"), set: untyped __js__ (\"function (v) { return this.set_displayState (v); }\") },\n\t\t\t\"focus\": { get: untyped __js__ (\"function () { return this.get_focus (); }\"), set: untyped __js__ (\"function (v) { return this.set_focus (v); }\") },\n\t\t\t\"frameRate\": { get: untyped __js__ (\"function () { return this.get_frameRate (); }\"), set: untyped __js__ (\"function (v) { return this.set_frameRate (v); }\") },\n\t\t\t\"fullScreenHeight\": { get: untyped __js__ (\"function () { return this.get_fullScreenHeight (); }\") },\n\t\t\t\"fullScreenWidth\": { get: untyped __js__ (\"function () { return this.get_fullScreenWidth (); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\tpublic function new (window:Window, color:Null<Int> = null) {\n\t\t\n\t\t#if hxtelemetry\n\t\tTelemetry.__initialize ();\n\t\t#end\n\t\t\n\t\tsuper ();\n\t\t\n\t\tthis.application = window.application;\n\t\tthis.window = window;\n\t\t\n\t\tif (color == null) {\n\t\t\t\n\t\t\t__transparent = true;\n\t\t\tthis.color = 0x000000;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis.color = color;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.name = null;\n\t\t\n\t\t__contentsScaleFactor = window.scale;\n\t\t__deltaTime = 0;\n\t\t__displayState = NORMAL;\n\t\t__mouseX = 0;\n\t\t__mouseY = 0;\n\t\t__lastClickTime = 0;\n\t\t__logicalWidth = 0;\n\t\t__logicalHeight = 0;\n\t\t__displayMatrix = new Matrix ();\n\t\t__renderDirty = true;\n\t\t__wasFullscreen = window.fullscreen;\n\t\t\n\t\tstage3Ds = new Vector ();\n\t\tstage3Ds.push (new Stage3D ());\n\t\t\n\t\t__resize ();\n\t\t\n\t\tthis.stage = this;\n\t\t\n\t\talign = StageAlign.TOP_LEFT;\n\t\t#if html5\n\t\tallowsFullScreen = false;\n\t\tallowsFullScreenInteractive = false;\n\t\t#else\n\t\tallowsFullScreen = true;\n\t\tallowsFullScreenInteractive = true;\n\t\t#end\n\t\tquality = StageQuality.HIGH;\n\t\tscaleMode = StageScaleMode.NO_SCALE;\n\t\tshowDefaultContextMenu = true;\n\t\tsoftKeyboardRect = new Rectangle ();\n\t\tstageFocusRect = true;\n\t\t\n\t\t#if mac\n\t\t__macKeyboard = true;\n\t\t#elseif (js && html5)\n\t\t__macKeyboard = untyped __js__ (\"/AppleWebKit/.test (navigator.userAgent) && /Mobile\\\\/\\\\w+/.test (navigator.userAgent) || /Mac/.test (navigator.platform)\");\n\t\t#end\n\t\t\n\t\t__clearBeforeRender = true;\n\t\t__stack = [];\n\t\t__rollOutStack = [];\n\t\t__touchData = new Map<Int, TouchData>();\n\t\t\n\t\tif (Lib.current.stage == null) {\n\t\t\t\n\t\t\tstage.addChild (Lib.current);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function addRenderer (renderer:Renderer):Void {\n\t\t\n\t\trenderer.onRender.add (render.bind (renderer));\n\t\trenderer.onContextLost.add (onRenderContextLost.bind (renderer));\n\t\trenderer.onContextRestored.add (onRenderContextRestored.bind (renderer));\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function addWindow (window:Window):Void {\n\t\t\n\t\tif (this.window != window) return;\n\t\t\n\t\twindow.onActivate.add (onWindowActivate.bind (window));\n\t\twindow.onClose.add (onWindowClose.bind (window), false, -9000);\n\t\twindow.onCreate.add (onWindowCreate.bind (window));\n\t\twindow.onDeactivate.add (onWindowDeactivate.bind (window));\n\t\twindow.onDropFile.add (onWindowDropFile.bind (window));\n\t\twindow.onEnter.add (onWindowEnter.bind (window));\n\t\twindow.onFocusIn.add (onWindowFocusIn.bind (window));\n\t\twindow.onFocusOut.add (onWindowFocusOut.bind (window));\n\t\twindow.onFullscreen.add (onWindowFullscreen.bind (window));\n\t\twindow.onKeyDown.add (onKeyDown.bind (window));\n\t\twindow.onKeyUp.add (onKeyUp.bind (window));\n\t\twindow.onLeave.add (onWindowLeave.bind (window));\n\t\twindow.onMinimize.add (onWindowMinimize.bind (window));\n\t\twindow.onMouseDown.add (onMouseDown.bind (window));\n\t\twindow.onMouseMove.add (onMouseMove.bind (window));\n\t\twindow.onMouseMoveRelative.add (onMouseMoveRelative.bind (window));\n\t\twindow.onMouseUp.add (onMouseUp.bind (window));\n\t\twindow.onMouseWheel.add (onMouseWheel.bind (window));\n\t\twindow.onMove.add (onWindowMove.bind (window));\n\t\twindow.onResize.add (onWindowResize.bind (window));\n\t\twindow.onRestore.add (onWindowRestore.bind (window));\n\t\twindow.onTextEdit.add (onTextEdit.bind (window));\n\t\twindow.onTextInput.add (onTextInput.bind (window));\n\t\t\n\t\tif (window.id > -1) {\n\t\t\t\n\t\t\tonWindowCreate (window);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function registerModule (application:Application):Void {\n\t\t\n\t\tapplication.onExit.add (onModuleExit, false, 0);\n\t\tapplication.onUpdate.add (update);\n\t\t\n\t\tfor (gamepad in Gamepad.devices) {\n\t\t\t\n\t\t\t__onGamepadConnect (gamepad);\n\t\t\t\n\t\t}\n\t\t\n\t\tGamepad.onConnect.add (__onGamepadConnect);\n\t\tTouch.onStart.add (onTouchStart);\n\t\tTouch.onMove.add (onTouchMove);\n\t\tTouch.onEnd.add (onTouchEnd);\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion public function removeRenderer (renderer:Renderer):Void { }\n\t@:noCompletion public function removeWindow (window:Window):Void { }\n\t@:noCompletion public function setPreloader (preloader:Preloader):Void { }\n\t\n\t\n\t@:noCompletion public function unregisterModule (application:Application):Void {\n\t\t\n\t\tapplication.onExit.remove (onModuleExit);\n\t\tapplication.onUpdate.remove (update);\n\t\t\n\t\tGamepad.onConnect.remove (__onGamepadConnect);\n\t\tTouch.onStart.remove (onTouchStart);\n\t\tTouch.onMove.remove (onTouchMove);\n\t\tTouch.onEnd.remove (onTouchEnd);\n\t\t\n\t}\n\t\n\t\n\tpublic function invalidate ():Void {\n\t\t\n\t\t__invalidated = true;\n\t\t\n\t}\n\t\n\t\n\tpublic override function localToGlobal (pos:Point):Point {\n\t\t\n\t\treturn pos.clone ();\n\t\t\n\t}\n\t\n\t\n\tpublic function onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void {\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tGameInput.__onGamepadAxisMove (gamepad, axis, value);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void {\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tGameInput.__onGamepadButtonDown (gamepad, button);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void {\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tGameInput.__onGamepadButtonUp (gamepad, button);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onGamepadConnect (gamepad:Gamepad):Void {\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tGameInput.__onGamepadConnect (gamepad);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onGamepadDisconnect (gamepad:Gamepad):Void {\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tGameInput.__onGamepadDisconnect (gamepad);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onJoystickAxisMove (joystick:Joystick, axis:Int, value:Float):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function onJoystickButtonDown (joystick:Joystick, button:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function onJoystickButtonUp (joystick:Joystick, button:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function onJoystickConnect (joystick:Joystick):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function onJoystickDisconnect (joystick:Joystick):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function onJoystickHatMove (joystick:Joystick, hat:Int, position:JoystickHatPosition):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function onJoystickTrackballMove (joystick:Joystick, trackball:Int, value:Float):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function onKeyDown (window:Window, keyCode:KeyCode, modifier:KeyModifier):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t__onKey (KeyboardEvent.KEY_DOWN, keyCode, modifier);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onKeyUp (window:Window, keyCode:KeyCode, modifier:KeyModifier):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t__onKey (KeyboardEvent.KEY_UP, keyCode, modifier);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onModuleExit (code:Int):Void {\n\t\t\n\t\tif (window != null) {\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\t__broadcastEvent (new Event (Event.DEACTIVATE));\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\n\t\t\t\t__handleError (e);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onMouseDown (window:Window, x:Float, y:Float, button:Int):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tvar type = switch (button) {\n\t\t\t\t\n\t\t\t\tcase 1: MouseEvent.MIDDLE_MOUSE_DOWN;\n\t\t\t\tcase 2: MouseEvent.RIGHT_MOUSE_DOWN;\n\t\t\t\tdefault: MouseEvent.MOUSE_DOWN;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__onMouse (type, Std.int (x * window.scale), Std.int (y * window.scale), button);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onMouseMove (window:Window, x:Float, y:Float):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t__onMouse (MouseEvent.MOUSE_MOVE, Std.int (x * window.scale), Std.int (y * window.scale), 0);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onMouseMoveRelative (window:Window, x:Float, y:Float):Void {\n\t\t\n\t\t//if (this.window == null || this.window != window) return;\n\t\t\n\t}\n\t\n\t\n\tpublic function onMouseUp (window:Window, x:Float, y:Float, button:Int):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tvar type = switch (button) {\n\t\t\t\t\n\t\t\t\tcase 1: MouseEvent.MIDDLE_MOUSE_UP;\n\t\t\t\tcase 2: MouseEvent.RIGHT_MOUSE_UP;\n\t\t\t\tdefault: MouseEvent.MOUSE_UP;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__onMouse (type, Std.int (x * window.scale), Std.int (y * window.scale), button);\n\t\t\t\n\t\t\tif (!showDefaultContextMenu && button == 2) {\n\t\t\t\t\n\t\t\t\twindow.onMouseUp.cancel ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onMouseWheel (window:Window, deltaX:Float, deltaY:Float):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t__onMouseWheel (Std.int (deltaX * window.scale), Std.int (deltaY * window.scale));\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onPreloadComplete ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function onPreloadProgress (loaded:Int, total:Int):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function onRenderContextLost (renderer:Renderer):Void {\n\t\t\n\t\t__renderer = null;\n\t\t\n\t}\n\t\n\t\n\tpublic function onRenderContextRestored (renderer:Renderer, context:RenderContext):Void {\n\t\t\n\t\t__createRenderer ();\n\t\t\n\t}\n\t\n\t\n\tpublic function onTextEdit (window:Window, text:String, start:Int, length:Int):Void {\n\t\t\n\t\t//if (this.window == null || this.window != window) return;\n\t\t\n\t}\n\t\n\t\n\tpublic function onTextInput (window:Window, text:String):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tvar stack = new Array <DisplayObject> ();\n\t\t\t\n\t\t\tif (__focus == null) {\n\t\t\t\t\n\t\t\t\t__getInteractive (stack);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__focus.__getInteractive (stack);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar event = new TextEvent (TextEvent.TEXT_INPUT, true, false, text);\n\t\t\tif (stack.length > 0) {\n\t\t\t\t\n\t\t\t\tstack.reverse ();\n\t\t\t\t__dispatchStack (event, stack);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__dispatchEvent (event);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onTouchMove (touch:Touch):Void {\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t__onTouch (TouchEvent.TOUCH_MOVE, touch);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onTouchEnd (touch:Touch):Void {\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tif (__primaryTouch == touch) {\n\t\t\t\t\n\t\t\t\t__primaryTouch = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__onTouch (TouchEvent.TOUCH_END, touch);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onTouchStart (touch:Touch):Void {\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tif (__primaryTouch == null) {\n\t\t\t\t\n\t\t\t\t__primaryTouch = touch;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__onTouch (TouchEvent.TOUCH_BEGIN, touch);\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowActivate (window:Window):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\t//try {\n\t\t\t//\n\t\t\t//__broadcastEvent (new Event (Event.ACTIVATE));\n\t\t\t//\n\t\t//} catch (e:Dynamic) {\n\t\t\t//\n\t\t\t//__handleError (e);\n\t\t\t//\n\t\t//}\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowClose (window:Window):Void {\n\t\t\n\t\tif (this.window == window) {\n\t\t\t\n\t\t\tthis.window = null;\n\t\t\t\n\t\t}\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t__primaryTouch = null;\n\t\t\t__broadcastEvent (new Event (Event.DEACTIVATE));\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowCreate (window:Window):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tif (window.renderer != null) {\n\t\t\t\t\n\t\t\t\t__createRenderer ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowDeactivate (window:Window):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\t//try {\n\t\t\t//\n\t\t\t//__primaryTouch = null;\n\t\t\t//__broadcastEvent (new Event (Event.DEACTIVATE));\n\t\t\t//\n\t\t//} catch (e:Dynamic) {\n\t\t\t//\n\t\t\t//__handleError (e);\n\t\t\t//\n\t\t//}\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowDropFile (window:Window, file:String):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowEnter (window:Window):Void {\n\t\t\n\t\t//if (this.window == null || this.window != window) return;\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowFocusIn (window:Window):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t__renderDirty = true;\n\t\t\t__broadcastEvent (new Event (Event.ACTIVATE));\n\t\t\t\n\t\t\tfocus = __cacheFocus;\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowFocusOut (window:Window):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t__primaryTouch = null;\n\t\t\t__broadcastEvent (new Event (Event.DEACTIVATE));\n\t\t\t\n\t\t\tvar currentFocus = focus;\n\t\t\tfocus = null;\n\t\t\t__cacheFocus = currentFocus;\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowFullscreen (window:Window):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t__resize ();\n\t\t\t\n\t\t\tif (!__wasFullscreen) {\n\t\t\t\t\n\t\t\t\t__wasFullscreen = true;\n\t\t\t\tif (__displayState == NORMAL) __displayState = FULL_SCREEN_INTERACTIVE;\n\t\t\t\t__dispatchEvent (new FullScreenEvent (FullScreenEvent.FULL_SCREEN, false, false, false, true));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowLeave (window:Window):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t__dispatchEvent (new Event (Event.MOUSE_LEAVE));\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowMinimize (window:Window):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\t//try {\n\t\t\t//\n\t\t\t//__primaryTouch = null;\n\t\t\t//__broadcastEvent (new Event (Event.DEACTIVATE));\n\t\t\t//\n\t\t//} catch (e:Dynamic) {\n\t\t\t//\n\t\t\t//__handleError (e);\n\t\t\t//\n\t\t//}\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowMove (window:Window, x:Float, y:Float):Void {\n\t\t\n\t\t//if (this.window == null || this.window != window) return;\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowResize (window:Window, width:Int, height:Int):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\t__renderDirty = true;\n\t\t\t__resize ();\n\t\t\t\n\t\t\tif (__wasFullscreen && !window.fullscreen) {\n\t\t\t\t\n\t\t\t\t__wasFullscreen = false;\n\t\t\t\t__displayState = NORMAL;\n\t\t\t\t__dispatchEvent (new FullScreenEvent (FullScreenEvent.FULL_SCREEN, false, false, true, true));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function onWindowRestore (window:Window):Void {\n\t\t\n\t\tif (this.window == null || this.window != window) return;\n\t\t\n\t\t//try {\n\t\t\t//\n\t\t\t//__broadcastEvent (new Event (Event.ACTIVATE));\n\t\t\t//\n\t\t//} catch (e:Dynamic) {\n\t\t\t//\n\t\t\t//__handleError (e);\n\t\t\t//\n\t\t//}\n\t\t\n\t}\n\t\n\t\n\tpublic function render (renderer:Renderer):Void {\n\t\t\n\t\tif (renderer.window == null || renderer.window != window) return;\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tif (__rendering) return;\n\t\t\t__rendering = true;\n\t\t\t\n\t\t\t#if hxtelemetry\n\t\t\tTelemetry.__advanceFrame ();\n\t\t\t#end\n\t\t\t\n\t\t\t#if gl_stats\n\t\t\t\tGLStats.resetDrawCalls();\n\t\t\t#end\n\t\t\t\n\t\t\tif (__renderer != null && (Stage3D.__active || stage3Ds[0].__contextRequested)) {\n\t\t\t\t\n\t\t\t\t__renderer.clear ();\n\t\t\t\t__renderer.renderStage3D ();\n\t\t\t\t__renderDirty = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__broadcastEvent (new Event (Event.ENTER_FRAME));\n\t\t\t__broadcastEvent (new Event (Event.FRAME_CONSTRUCTED));\n\t\t\t__broadcastEvent (new Event (Event.EXIT_FRAME));\n\t\t\t\n\t\t\tif (__invalidated) {\n\t\t\t\t\n\t\t\t\t__invalidated = false;\n\t\t\t\t__broadcastEvent (new Event (Event.RENDER));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#if hxtelemetry\n\t\t\tvar stack = Telemetry.__unwindStack ();\n\t\t\tTelemetry.__startTiming (TelemetryCommandName.RENDER);\n\t\t\t#end\n\t\t\t\n\t\t\t__renderable = true;\n\t\t\t\n\t\t\t__enterFrame (__deltaTime);\n\t\t\t__deltaTime = 0;\n\t\t\t__update (false, true);\n\t\t\t\n\t\t\tif (__renderer != null #if !openfl_always_render && __renderDirty #end) {\n\t\t\t\t\n\t\t\t\tif (!Stage3D.__active) {\n\t\t\t\t\t\n\t\t\t\t\t__renderer.clear ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (renderer.type == CAIRO) {\n\t\t\t\t\t\n\t\t\t\t\tswitch (renderer.context) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase CAIRO (cairo):\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t#if lime_cairo\n\t\t\t\t\t\t\tcast (__renderer, CairoRenderer).cairo = cairo;\n\t\t\t\t\t\t\t@:privateAccess (__renderer.renderSession).cairo = cairo;\n\t\t\t\t\t\t\t#end\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__renderer.render ();\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\trenderer.onRender.cancel ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#if hxtelemetry\n\t\t\tTelemetry.__endTiming (TelemetryCommandName.RENDER);\n\t\t\tTelemetry.__rewindStack (stack);\n\t\t\t#end\n\t\t\t\n\t\t\t__rendering = false;\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\t__handleError (e);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function update (deltaTime:Int):Void {\n\t\t\n\t\t__deltaTime = deltaTime;\n\t\t\n\t}\n\t\n\t\n\tprivate function __broadcastEvent (event:Event):Void {\n\t\t\n\t\tif (DisplayObject.__broadcastEvents.exists (event.type)) {\n\t\t\t\n\t\t\tvar dispatchers = DisplayObject.__broadcastEvents.get (event.type);\n\t\t\t\n\t\t\tfor (dispatcher in dispatchers) {\n\t\t\t\t\n\t\t\t\tdispatcher.__dispatch (event);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __createRenderer ():Void {\n\t\t\n\t\tswitch (window.renderer.context) {\n\t\t\t\n\t\t\tcase OPENGL (gl):\n\t\t\t\t\n\t\t\t\t#if (!disable_cffi && (!html5 || !canvas))\n\t\t\t\t__renderer = new GLRenderer (this, gl);\n\t\t\t\t#end\n\t\t\t\n\t\t\tcase CANVAS (context):\n\t\t\t\t\n\t\t\t\t__renderer = new CanvasRenderer (this, context);\n\t\t\t\n\t\t\tcase DOM (element):\n\t\t\t\t\n\t\t\t\t#if dom\n\t\t\t\t__renderer = new DOMRenderer (this, element);\n\t\t\t\t#end\n\t\t\t\n\t\t\tcase CAIRO (cairo):\n\t\t\t\t\n\t\t\t\t#if lime_cairo\n\t\t\t\t__renderer = new CairoRenderer (this, cairo);\n\t\t\t\t#end\n\t\t\t\n\t\t\tcase CONSOLE (ctx):\n\t\t\t\t\n\t\t\t\t#if lime_console\n\t\t\t\t__renderer = new ConsoleRenderer (this, ctx);\n\t\t\t\t#end\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __drag (mouse:Point):Void {\n\t\t\n\t\tvar parent = __dragObject.parent;\n\t\tif (parent != null) {\n\t\t\t\n\t\t\tparent.__getWorldTransform ().__transformInversePoint (mouse);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar x = mouse.x + __dragOffsetX;\n\t\tvar y = mouse.y + __dragOffsetY;\n\t\t\n\t\tif (__dragBounds != null) {\n\t\t\t\n\t\t\tif (x < __dragBounds.x) {\n\t\t\t\t\n\t\t\t\tx = __dragBounds.x;\n\t\t\t\t\n\t\t\t} else if (x > __dragBounds.right) {\n\t\t\t\t\n\t\t\t\tx = __dragBounds.right;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (y < __dragBounds.y) {\n\t\t\t\t\n\t\t\t\ty = __dragBounds.y;\n\t\t\t\t\n\t\t\t} else if (y > __dragBounds.bottom) {\n\t\t\t\t\n\t\t\t\ty = __dragBounds.bottom;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__dragObject.x = x;\n\t\t__dragObject.y = y;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getInteractive (stack:Array<DisplayObject>):Bool {\n\t\t\n\t\tif (stack != null) {\n\t\t\t\n\t\t\tstack.push (this);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn true;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __globalToLocal (global:Point, local:Point):Point {\n\t\t\n\t\tif (global != local) {\n\t\t\t\n\t\t\tlocal.copyFrom (global);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn local;\n\t\t\n\t}\n\t\n\t\n\tprivate function __handleError (e:Dynamic):Void {\n\t\t\n\t\tvar event = new UncaughtErrorEvent (UncaughtErrorEvent.UNCAUGHT_ERROR, true, true, e);\n\t\tLib.current.__loaderInfo.uncaughtErrorEvents.dispatchEvent (event);\n\t\t\n\t\tif (!event.__preventDefault) {\n\t\t\t\n\t\t\t#if mobile\n\t\t\tLog.println (CallStack.toString (CallStack.exceptionStack ()));\n\t\t\tLog.println (Std.string (e));\n\t\t\t#end\n\t\t\t\n\t\t\t#if cpp\n\t\t\tuntyped __cpp__ (\"throw e\");\n\t\t\t#elseif neko\n\t\t\tneko.Lib.rethrow (e);\n\t\t\t#elseif js\n\t\t\ttry {\n\t\t\t\tvar exc = @:privateAccess haxe.CallStack.lastException;\n\t\t\t\tif (exc != null && Reflect.hasField (exc, \"stack\") && exc.stack != null && exc.stack != \"\") {\n\t\t\t\t\tuntyped __js__ (\"console.log\") (exc.stack);\n\t\t\t\t\te.stack = exc.stack;\n\t\t\t\t} else {\n\t\t\t\t\tvar msg = CallStack.toString (CallStack.callStack ());\n\t\t\t\t\tuntyped __js__ (\"console.log\") (msg);\n\t\t\t\t}\n\t\t\t} catch (e2:Dynamic) {}\n\t\t\tuntyped __js__ (\"throw e\");\n\t\t\t#elseif cs\n\t\t\tthrow e;\n\t\t\t//cs.Lib.rethrow (e);\n\t\t\t#else\n\t\t\tthrow e;\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n\tprivate function __onKey (type:String, keyCode:KeyCode, modifier:KeyModifier):Void {\n\t\t\n\t\tMouseEvent.__altKey = modifier.altKey;\n\t\tMouseEvent.__commandKey = modifier.metaKey;\n\t\tMouseEvent.__ctrlKey = modifier.ctrlKey;\n\t\tMouseEvent.__shiftKey = modifier.shiftKey;\n\t\t\n\t\tvar stack = new Array <DisplayObject> ();\n\t\t\n\t\tif (__focus == null) {\n\t\t\t\n\t\t\t__getInteractive (stack);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__focus.__getInteractive (stack);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (stack.length > 0) {\n\t\t\t\n\t\t\tvar keyLocation = Keyboard.__getKeyLocation (keyCode);\n\t\t\tvar keyCode = Keyboard.__convertKeyCode (keyCode);\n\t\t\tvar charCode = Keyboard.__getCharCode (keyCode, modifier.shiftKey);\n\t\t\t\n\t\t\t// Flash Player events are not cancelable, should we make only some events (like APP_CONTROL_BACK) cancelable?\n\t\t\t\n\t\t\tvar event = new KeyboardEvent (type, true, true, charCode, keyCode, keyLocation, __macKeyboard ? modifier.ctrlKey || modifier.metaKey : modifier.ctrlKey, modifier.altKey, modifier.shiftKey, modifier.ctrlKey, modifier.metaKey);\n\t\t\t\n\t\t\tstack.reverse ();\n\t\t\t__dispatchStack (event, stack);\n\t\t\t\n\t\t\tif (event.__preventDefault) {\n\t\t\t\t\n\t\t\t\tif (type == KeyboardEvent.KEY_DOWN) {\n\t\t\t\t\t\n\t\t\t\t\twindow.onKeyDown.cancel ();\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\twindow.onKeyUp.cancel ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __onGamepadConnect (gamepad:Gamepad):Void {\n\t\t\n\t\tonGamepadConnect (gamepad);\n\t\t\n\t\tgamepad.onAxisMove.add (onGamepadAxisMove.bind (gamepad));\n\t\tgamepad.onButtonDown.add (onGamepadButtonDown.bind (gamepad));\n\t\tgamepad.onButtonUp.add (onGamepadButtonUp.bind (gamepad));\n\t\tgamepad.onDisconnect.add (onGamepadDisconnect.bind (gamepad));\n\t\t\n\t}\n\t\n\t\n\tprivate function __onMouse (type:String, x:Float, y:Float, button:Int):Void {\n\t\t\n\t\tif (button > 2) return;\n\t\t\n\t\tvar targetPoint = Point.__pool.get ();\n\t\ttargetPoint.setTo (x, y);\n\t\t__displayMatrix.__transformInversePoint (targetPoint);\n\t\t\n\t\t__mouseX = targetPoint.x;\n\t\t__mouseY = targetPoint.y;\n\t\t\n\t\tvar stack = [];\n\t\tvar target:InteractiveObject = null;\n\t\t\n\t\tif (__hitTest (__mouseX, __mouseY, true, stack, true, this)) {\n\t\t\t\n\t\t\ttarget = cast stack[stack.length - 1];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttarget = this;\n\t\t\tstack = [ this ];\n\t\t\t\n\t\t}\n\t\t\n\t\tif (target == null) target = this;\n\t\t\n\t\tvar clickType = null;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase MouseEvent.MOUSE_DOWN:\n\t\t\t\t\n\t\t\t\tif (target.__allowMouseFocus ()) {\n\t\t\t\t\t\n\t\t\t\t\tfocus = target;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tfocus = null;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__mouseDownLeft = target;\n\t\t\t\tMouseEvent.__buttonDown = true;\n\t\t\t\n\t\t\tcase MouseEvent.MIDDLE_MOUSE_DOWN:\n\t\t\t\t\n\t\t\t\t__mouseDownMiddle = target;\n\t\t\t\n\t\t\tcase MouseEvent.RIGHT_MOUSE_DOWN:\n\t\t\t\t\n\t\t\t\t__mouseDownRight = target;\n\t\t\t\n\t\t\tcase MouseEvent.MOUSE_UP:\n\t\t\t\t\n\t\t\t\tif (__mouseDownLeft != null) {\n\t\t\t\t\t\n\t\t\t\t\tMouseEvent.__buttonDown = false;\n\t\t\t\t\t\n\t\t\t\t\tif (__mouseX < 0 || __mouseY < 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__dispatchEvent (MouseEvent.__create (MouseEvent.RELEASE_OUTSIDE, 1, __mouseX, __mouseY, new Point (__mouseX, __mouseY), this));\n\t\t\t\t\t\t\n\t\t\t\t\t} else if (__mouseDownLeft == target) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tclickType = MouseEvent.CLICK;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t__mouseDownLeft = null;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase MouseEvent.MIDDLE_MOUSE_UP:\n\t\t\t\t\n\t\t\t\tif (__mouseDownMiddle == target) {\n\t\t\t\t\t\n\t\t\t\t\tclickType = MouseEvent.MIDDLE_CLICK;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__mouseDownMiddle = null;\n\t\t\t\n\t\t\tcase MouseEvent.RIGHT_MOUSE_UP:\n\t\t\t\t\n\t\t\t\tif (__mouseDownRight == target) {\n\t\t\t\t\t\n\t\t\t\t\tclickType = MouseEvent.RIGHT_CLICK;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__mouseDownRight = null;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\tvar localPoint = Point.__pool.get ();\n\t\t\n\t\t__dispatchStack (MouseEvent.__create (type, button, __mouseX, __mouseY, target.__globalToLocal (targetPoint, localPoint), target), stack);\n\t\t\n\t\tif (clickType != null) {\n\t\t\t\n\t\t\t__dispatchStack (MouseEvent.__create (clickType, button, __mouseX, __mouseY, target.__globalToLocal (targetPoint, localPoint), target), stack);\n\t\t\t\n\t\t\tif (type == MouseEvent.MOUSE_UP && cast (target, openfl.display.InteractiveObject).doubleClickEnabled) {\n\t\t\t\t\n\t\t\t\tvar currentTime = Lib.getTimer ();\n\t\t\t\tif (currentTime - __lastClickTime < 500) {\n\t\t\t\t\t\n\t\t\t\t\t__dispatchStack (MouseEvent.__create (MouseEvent.DOUBLE_CLICK, button, __mouseX, __mouseY, target.__globalToLocal (targetPoint, localPoint), target), stack);\n\t\t\t\t\t__lastClickTime = 0;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t__lastClickTime = currentTime;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (Mouse.__cursor == MouseCursor.AUTO) {\n\t\t\t\n\t\t\tvar cursor = null;\n\t\t\t\n\t\t\tif (__mouseDownLeft != null) {\n\t\t\t\t\n\t\t\t\tcursor = __mouseDownLeft.__getCursor ();\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tfor (target in stack) {\n\t\t\t\t\t\n\t\t\t\t\tcursor = target.__getCursor ();\n\t\t\t\t\t\n\t\t\t\t\tif (cursor != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tLimeMouse.cursor = cursor;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (cursor == null) {\n\t\t\t\t\n\t\t\t\tLimeMouse.cursor = ARROW;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar event;\n\t\t\n\t\tif (target != __mouseOverTarget) {\n\t\t\t\n\t\t\tif (__mouseOverTarget != null) {\n\t\t\t\t\n\t\t\t\tevent = MouseEvent.__create (MouseEvent.MOUSE_OUT, button, __mouseX, __mouseY, __mouseOverTarget.__globalToLocal (targetPoint, localPoint), cast __mouseOverTarget);\n\t\t\t\t__mouseOverTarget.__dispatchEvent (event);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (target in __rollOutStack) {\n\t\t\t\n\t\t\tif (stack.indexOf (target) == -1) {\n\t\t\t\t\n\t\t\t\t__rollOutStack.remove (target);\n\t\t\t\t\n\t\t\t\tevent = MouseEvent.__create (MouseEvent.ROLL_OUT, button, __mouseX, __mouseY, __mouseOverTarget.__globalToLocal (targetPoint, localPoint), cast __mouseOverTarget);\n\t\t\t\tevent.bubbles = false;\n\t\t\t\ttarget.__dispatchEvent (event);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (target in stack) {\n\t\t\t\n\t\t\tif (__rollOutStack.indexOf (target) == -1 && __mouseOverTarget != null) {\n\t\t\t\t\n\t\t\t\tif (target.hasEventListener (MouseEvent.ROLL_OVER)) {\n\t\t\t\t\t\n\t\t\t\t\tevent = MouseEvent.__create (MouseEvent.ROLL_OVER, button, __mouseX, __mouseY, __mouseOverTarget.__globalToLocal (targetPoint, localPoint), cast target);\n\t\t\t\t\tevent.bubbles = false;\n\t\t\t\t\ttarget.__dispatchEvent (event);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (target.hasEventListener (MouseEvent.ROLL_OUT)) {\n\t\t\t\t\t\n\t\t\t\t\t__rollOutStack.push (target);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (target != __mouseOverTarget) {\n\t\t\t\n\t\t\tif (target != null) {\n\t\t\t\t\n\t\t\t\tevent = MouseEvent.__create (MouseEvent.MOUSE_OVER, button, __mouseX, __mouseY, target.__globalToLocal (targetPoint, localPoint), cast target);\n\t\t\t\tevent.bubbles = true;\n\t\t\t\ttarget.__dispatchEvent (event);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__mouseOverTarget = target;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__dragObject != null) {\n\t\t\t\n\t\t\t__drag (targetPoint);\n\t\t\t\n\t\t\tvar dropTarget = null;\n\t\t\t\n\t\t\tif (__mouseOverTarget == __dragObject) {\n\t\t\t\t\n\t\t\t\tvar cacheMouseEnabled = __dragObject.mouseEnabled;\n\t\t\t\tvar cacheMouseChildren = __dragObject.mouseChildren;\n\t\t\t\t\n\t\t\t\t__dragObject.mouseEnabled = false;\n\t\t\t\t__dragObject.mouseChildren = false;\n\t\t\t\t\n\t\t\t\tvar stack = [];\n\t\t\t\t\n\t\t\t\tif (__hitTest (__mouseX, __mouseY, true, stack, true, this)) {\n\t\t\t\t\t\n\t\t\t\t\tdropTarget = stack[stack.length - 1];\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__dragObject.mouseEnabled = cacheMouseEnabled;\n\t\t\t\t__dragObject.mouseChildren = cacheMouseChildren;\n\t\t\t\t\n\t\t\t} else if (__mouseOverTarget != this) {\n\t\t\t\t\n\t\t\t\tdropTarget = __mouseOverTarget;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__dragObject.dropTarget = dropTarget;\n\t\t\t\n\t\t}\n\t\t\n\t\tPoint.__pool.release (targetPoint);\n\t\tPoint.__pool.release (localPoint);\n\t\t\n\t}\n\t\n\t\n\tprivate function __onMouseWheel (deltaX:Float, deltaY:Float):Void {\n\t\t\n\t\tvar x = __mouseX;\n\t\tvar y = __mouseY;\n\t\t\n\t\tvar stack = [];\n\t\tvar target:InteractiveObject = null;\n\t\t\n\t\tif (__hitTest (__mouseX, __mouseY, true, stack, true, this)) {\n\t\t\t\n\t\t\ttarget = cast stack[stack.length - 1];\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttarget = this;\n\t\t\tstack = [ this ];\n\t\t\t\n\t\t}\n\t\t\n\t\tif (target == null) target = this;\n\t\tvar targetPoint = Point.__pool.get ();\n\t\ttargetPoint.setTo (x, y);\n\t\t__displayMatrix.__transformInversePoint (targetPoint);\n\t\tvar delta = Std.int (deltaY);\n\t\t\n\t\t__dispatchStack (MouseEvent.__create (MouseEvent.MOUSE_WHEEL, 0, __mouseX, __mouseY, target.__globalToLocal (targetPoint, targetPoint), target, delta), stack);\n\t\t\n\t\tPoint.__pool.release (targetPoint);\n\t\t\n\t}\n\t\n\t\n\tprivate function __onTouch (type:String, touch:Touch):Void {\n\t\t\n\t\tvar targetPoint = Point.__pool.get ();\n\t\ttargetPoint.setTo (Math.round (touch.x * window.width * window.scale), Math.round (touch.y * window.height * window.scale));\n\t\t__displayMatrix.__transformInversePoint (targetPoint);\n\t\t\n\t\tvar touchX = targetPoint.x;\n\t\tvar touchY = targetPoint.y;\n\t\t\n\t\tvar stack = [];\n\t\tvar target:InteractiveObject = null;\n\t\t\n\t\tif (__hitTest (touchX, touchY, false, stack, true, this)) {\n\t\t\t\n\t\t\ttarget = cast stack[stack.length - 1];\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\t\n\t\t\ttarget = this;\n\t\t\tstack = [ this ];\n\t\t\t\n\t\t}\n\t\t\n\t\tif (target == null) target = this;\n\t\t\n\t\tvar touchId:Int = touch.id;\n\t\tvar touchData:TouchData = null;\n\t\t\n\t\tif (__touchData.exists (touchId)) {\n\t\t\t\n\t\t\ttouchData = __touchData.get (touchId);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttouchData = TouchData.__pool.get ();\n\t\t\ttouchData.reset ();\n\t\t\ttouchData.touch = touch;\n\t\t\t__touchData.set (touchId, touchData);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar touchType = null;\n\t\tvar releaseTouchData:Bool = false;\n\t\t\n\t\tswitch (type) {\n\t\t\t\n\t\t\tcase TouchEvent.TOUCH_BEGIN:\n\t\t\t\n\t\t\t\ttouchData.touchDownTarget = target;\n\t\t\t\n\t\t\tcase TouchEvent.TOUCH_END:\n\t\t\t\t\n\t\t\t\tif (touchData.touchDownTarget == target) {\n\t\t\t\t\t\n\t\t\t\t\ttouchType = TouchEvent.TOUCH_TAP;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttouchData.touchDownTarget = null;\n\t\t\t\treleaseTouchData = true;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\tvar localPoint = Point.__pool.get ();\n\t\tvar isPrimaryTouchPoint:Bool = (__primaryTouch == touch);\n\t\tvar touchEvent = TouchEvent.__create (type, null, touchX, touchY, target.__globalToLocal (targetPoint, localPoint), cast target);\n\t\ttouchEvent.touchPointID = touchId;\n\t\ttouchEvent.isPrimaryTouchPoint = isPrimaryTouchPoint;\n\t\t\n\t\t__dispatchStack (touchEvent, stack);\n\t\t\n\t\tif (touchType != null) {\n\t\t\t\n\t\t\ttouchEvent = TouchEvent.__create (touchType, null, touchX, touchY, target.__globalToLocal (targetPoint, localPoint), cast target);\n\t\t\ttouchEvent.touchPointID = touchId;\n\t\t\ttouchEvent.isPrimaryTouchPoint = isPrimaryTouchPoint;\n\t\t\t\n\t\t\t__dispatchStack (touchEvent, stack);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar touchOverTarget = touchData.touchOverTarget;\n\t\t\n\t\tif (target != touchOverTarget && touchOverTarget != null) {\n\t\t\t\n\t\t\ttouchEvent = TouchEvent.__create (TouchEvent.TOUCH_OUT, null, touchX, touchY, touchOverTarget.__globalToLocal (targetPoint, localPoint), cast touchOverTarget);\n\t\t\ttouchEvent.touchPointID = touchId;\n\t\t\ttouchEvent.isPrimaryTouchPoint = isPrimaryTouchPoint;\n\t\t\t\n\t\t\ttouchOverTarget.__dispatchEvent (touchEvent);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar touchOutStack = touchData.rollOutStack;\n\t\t\n\t\tfor (target in touchOutStack) {\n\t\t\t\n\t\t\tif (stack.indexOf (target) == -1) {\n\t\t\t\t\n\t\t\t\ttouchOutStack.remove (target);\n\t\t\t\t\n\t\t\t\ttouchEvent = TouchEvent.__create (TouchEvent.TOUCH_ROLL_OUT, null, touchX, touchY, touchOverTarget.__globalToLocal (targetPoint, localPoint), cast touchOverTarget);\n\t\t\t\ttouchEvent.touchPointID = touchId;\n\t\t\t\ttouchEvent.isPrimaryTouchPoint = isPrimaryTouchPoint;\n\t\t\t\ttouchEvent.bubbles = false;\n\t\t\t\t\n\t\t\t\ttarget.__dispatchEvent (touchEvent);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (target in stack) {\n\t\t\t\n\t\t\tif (touchOutStack.indexOf (target) == -1) {\n\t\t\t\t\n\t\t\t\tif (target.hasEventListener (TouchEvent.TOUCH_ROLL_OVER)) {\n\t\t\t\t\t\n\t\t\t\t\ttouchEvent = TouchEvent.__create (TouchEvent.TOUCH_ROLL_OVER, null, touchX, touchY, touchOverTarget.__globalToLocal (targetPoint, localPoint), cast target);\n\t\t\t\t\ttouchEvent.touchPointID = touchId;\n\t\t\t\t\ttouchEvent.isPrimaryTouchPoint = isPrimaryTouchPoint;\n\t\t\t\t\ttouchEvent.bubbles = false;\n\t\t\t\t\t\n\t\t\t\t\ttarget.__dispatchEvent (touchEvent);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (target.hasEventListener (TouchEvent.TOUCH_ROLL_OUT)) {\n\t\t\t\t\t\n\t\t\t\t\ttouchOutStack.push (target);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (target != touchOverTarget) {\n\t\t\t\n\t\t\tif (target != null) {\n\t\t\t\t\n\t\t\t\ttouchEvent = TouchEvent.__create (TouchEvent.TOUCH_OVER, null, touchX, touchY, target.__globalToLocal (targetPoint, localPoint), cast target);\n\t\t\t\ttouchEvent.touchPointID = touchId;\n\t\t\t\ttouchEvent.isPrimaryTouchPoint = isPrimaryTouchPoint;\n\t\t\t\ttouchEvent.bubbles = true;\n\t\t\t\t\n\t\t\t\ttarget.__dispatchEvent (touchEvent);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\ttouchData.touchOverTarget = target;\n\t\t\t\n\t\t}\n\t\t\n\t\tPoint.__pool.release (targetPoint);\n\t\tPoint.__pool.release (localPoint);\n\t\t\n\t\tif (releaseTouchData) {\n\t\t\t\n\t\t\t__touchData.remove (touchId);\n\t\t\ttouchData.reset ();\n\t\t\tTouchData.__pool.release (touchData);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __resize ():Void {\n\t\t\n\t\tvar cacheWidth = stageWidth;\n\t\tvar cacheHeight = stageHeight;\n\t\t\n\t\tvar windowWidth = Std.int (window.width * window.scale);\n\t\tvar windowHeight = Std.int (window.height * window.scale);\n\t\t\n\t\t#if (js && html5)\n\t\t__logicalWidth = windowWidth;\n\t\t__logicalHeight = windowHeight;\n\t\t#end\n\t\t\n\t\t__displayMatrix.identity ();\n\t\t\n\t\tif (__logicalWidth == 0 && __logicalHeight == 0) {\n\t\t\t\n\t\t\tstageWidth = windowWidth;\n\t\t\tstageHeight = windowHeight;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tstageWidth = __logicalWidth;\n\t\t\tstageHeight = __logicalHeight;\n\t\t\t\n\t\t\tvar scaleX = windowWidth / stageWidth;\n\t\t\tvar scaleY = windowHeight / stageHeight;\n\t\t\tvar targetScale = Math.min (scaleX, scaleY);\n\t\t\t\n\t\t\tvar offsetX = Math.round ((windowWidth - (stageWidth * targetScale)) / 2);\n\t\t\tvar offsetY = Math.round ((windowHeight - (stageHeight * targetScale)) / 2);\n\t\t\t\n\t\t\t__displayMatrix.scale (targetScale, targetScale);\n\t\t\t__displayMatrix.translate (offsetX, offsetY);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (stage3D in stage3Ds) {\n\t\t\t\n\t\t\tstage3D.__resize (stageWidth, stageHeight);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__renderer != null) {\n\t\t\t\n\t\t\t__renderer.resize (windowWidth, windowHeight);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (stageWidth != cacheWidth || stageHeight != cacheHeight) {\n\t\t\t\n\t\t\t__dispatchEvent (new Event (Event.RESIZE));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __setLogicalSize (width:Int, height:Int):Void {\n\t\t\n\t\t__logicalWidth = width;\n\t\t__logicalHeight = height;\n\t\t\n\t\t__resize ();\n\t\t\n\t}\n\t\n\t\n\tprivate function __startDrag (sprite:Sprite, lockCenter:Bool, bounds:Rectangle):Void {\n\t\t\n\t\t__dragBounds = (bounds == null) ? null : bounds.clone ();\n\t\t__dragObject = sprite;\n\t\t\n\t\tif (__dragObject != null) {\n\t\t\t\n\t\t\tif (lockCenter) {\n\t\t\t\t\n\t\t\t\t__dragOffsetX = 0;\n\t\t\t\t__dragOffsetY = 0;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvar mouse = Point.__pool.get ();\n\t\t\t\tmouse.setTo (mouseX, mouseY);\n\t\t\t\tvar parent = __dragObject.parent;\n\t\t\t\t\n\t\t\t\tif (parent != null) {\n\t\t\t\t\t\n\t\t\t\t\tparent.__getWorldTransform ().__transformInversePoint (mouse);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__dragOffsetX = __dragObject.x - mouse.x;\n\t\t\t\t__dragOffsetY = __dragObject.y - mouse.y;\n\t\t\t\tPoint.__pool.release (mouse);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __stopDrag (sprite:Sprite):Void {\n\t\t\n\t\t__dragBounds = null;\n\t\t__dragObject = null;\n\t\t\n\t}\n\t\n\t\n\tpublic override function __update (transformOnly:Bool, updateChildren:Bool, maskGraphics:Graphics = null):Void {\n\t\t\n\t\tif (transformOnly) {\n\t\t\t\n\t\t\tif (__transformDirty) {\n\t\t\t\t\n\t\t\t\tsuper.__update (true, updateChildren, maskGraphics);\n\t\t\t\t\n\t\t\t\tif (updateChildren) {\n\t\t\t\t\t\n\t\t\t\t\t__transformDirty = false;\n\t\t\t\t\t//__dirty = true;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (__transformDirty || __renderDirty) {\n\t\t\t\t\n\t\t\t\tsuper.__update (false, updateChildren, maskGraphics);\n\t\t\t\t\n\t\t\t\tif (updateChildren) {\n\t\t\t\t\t\n\t\t\t\t\t#if dom\n\t\t\t\t\t__wasDirty = true;\n\t\t\t\t\t#end\n\t\t\t\t\t\n\t\t\t\t\t//__dirty = false;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} #if dom else if (__wasDirty) {\n\t\t\t\t\n\t\t\t\t// If we were dirty last time, we need at least one more\n\t\t\t\t// update in order to clear \"changed\" properties\n\t\t\t\t\n\t\t\t\tsuper.__update (false, updateChildren, maskGraphics);\n\t\t\t\t\n\t\t\t\tif (updateChildren) {\n\t\t\t\t\t\n\t\t\t\t\t__wasDirty = false;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} #end\n\t\t\t\n\t\t}\n\n\t\tframeID++;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_color ():Int {\n\t\t\n\t\treturn __color;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_color (value:Int):Int {\n\t\t\n\t\tvar r = (value & 0xFF0000) >>> 16;\n\t\tvar g = (value & 0x00FF00) >>> 8;\n\t\tvar b = (value & 0x0000FF);\n\t\t\n\t\t__colorSplit = [ r / 0xFF, g / 0xFF, b / 0xFF ];\n\t\t__colorString = \"#\" + StringTools.hex (value & 0xFFFFFF, 6);\n\t\t\n\t\treturn __color = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_contentsScaleFactor ():Float {\n\t\t\n\t\treturn __contentsScaleFactor;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_displayState ():StageDisplayState {\n\t\t\n\t\treturn __displayState;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_displayState (value:StageDisplayState):StageDisplayState {\n\t\t\n\t\tif (window != null) {\n\t\t\t\n\t\t\tswitch (value) {\n\t\t\t\t\n\t\t\t\tcase NORMAL:\n\t\t\t\t\t\n\t\t\t\t\tif (window.fullscreen) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t//window.minimized = false;\n\t\t\t\t\t\twindow.fullscreen = false;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\t\n\t\t\t\t\tif (!window.fullscreen) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t//window.minimized = false;\n\t\t\t\t\t\twindow.fullscreen = true;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __displayState = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_focus ():InteractiveObject {\n\t\t\n\t\treturn __focus;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_focus (value:InteractiveObject):InteractiveObject {\n\t\t\n\t\tif (value != __focus) {\n\t\t\t\n\t\t\tvar oldFocus = __focus;\n\t\t\t__focus = value;\n\t\t\t__cacheFocus = value;\n\t\t\t\n\t\t\tif (oldFocus != null) {\n\t\t\t\t\n\t\t\t\tvar event = new FocusEvent (FocusEvent.FOCUS_OUT, true, false, __focus, false, 0);\n\t\t\t\tvar stack = new Array <DisplayObject> ();\n\t\t\t\toldFocus.__getInteractive (stack);\n\t\t\t\tstack.reverse ();\n\t\t\t\t__dispatchStack (event, stack);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (__focus != null) {\n\t\t\t\t\n\t\t\t\tvar event = new FocusEvent (FocusEvent.FOCUS_IN, true, false, oldFocus, false, 0);\n\t\t\t\tvar stack = new Array <DisplayObject> ();\n\t\t\t\tvalue.__getInteractive (stack);\n\t\t\t\tstack.reverse ();\n\t\t\t\t__dispatchStack (event, stack);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __focus;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_frameRate ():Float {\n\t\t\n\t\tif (application != null) {\n\t\t\t\n\t\t\treturn application.frameRate;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_frameRate (value:Float):Float {\n\t\t\n\t\tif (application != null) {\n\t\t\t\n\t\t\treturn application.frameRate = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_fullScreenHeight ():UInt {\n\t\t\n\t\treturn window.display.currentMode.height;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_fullScreenWidth ():UInt {\n\t\t\n\t\treturn window.display.currentMode.width;\n\t\t\n\t}\n\t\n\t\n\tprivate override function set_height (value:Float):Float {\n\t\t\n\t\treturn this.height;\n\t\t\n\t}\n\t\n\t\n\tprivate override function get_mouseX ():Float {\n\t\t\n\t\treturn __mouseX;\n\t\t\n\t}\n\t\n\t\n\tprivate override function get_mouseY ():Float {\n\t\t\n\t\treturn __mouseY;\n\t\t\n\t}\n\t\n\t\n\tprivate override function set_rotation (value:Float):Float {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate override function set_scaleX (value:Float):Float {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate override function set_scaleY (value:Float):Float {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate override function set_transform (value:Transform):Transform {\n\t\t\n\t\treturn this.transform;\n\t\t\n\t}\n\t\n\t\n\tprivate override function set_width (value:Float):Float {\n\t\t\n\t\treturn this.width;\n\t\t\n\t}\n\t\n\t\n\tprivate override function set_x (value:Float):Float {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate override function set_y (value:Float):Float {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n}\n","package openfl.display;\n\n\nimport haxe.Timer;\nimport lime.graphics.opengl.GL;\nimport lime.graphics.GLRenderContext;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.stage3D.opengl.GLStage3D;\nimport openfl.display3D.Context3D;\nimport openfl.display3D.Context3DBlendFactor;\nimport openfl.display3D.Context3DProfile;\nimport openfl.display3D.Context3DRenderMode;\nimport openfl.events.ErrorEvent;\nimport openfl.events.Event;\nimport openfl.events.EventDispatcher;\nimport openfl.Vector;\n\n#if (js && html5)\nimport js.html.webgl.RenderingContext;\nimport js.html.CanvasElement;\nimport js.html.CSSStyleDeclaration;\nimport js.Browser;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(lime.graphics.opengl.GL)\n@:access(lime._backend.html5.HTML5GLRenderContext)\n@:access(lime._backend.native.NativeGLRenderContext)\n@:access(openfl.display3D.Context3D)\n\n\nclass Stage3D extends EventDispatcher {\n\t\n\t\n\tprivate static var __active:Bool;\n\t\n\tpublic var context3D (default, null):Context3D;\n\tpublic var visible:Bool;\n\tpublic var x (get, set):Float;\n\tpublic var y (get, set):Float;\n\t\n\tprivate var __contextRequested:Bool;\n\tprivate var __stage:Stage;\n\tprivate var __x:Float;\n\tprivate var __y:Float;\n\t\n\t#if (js && html5)\n\tprivate var __canvas:CanvasElement;\n\tprivate var __renderContext:GLRenderContext;\n\tprivate var __style:CSSStyleDeclaration;\n\tprivate var __webgl:RenderingContext;\n\t#end\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (Stage3D.prototype, {\n\t\t\t\"x\": { get: untyped __js__ (\"function () { return this.get_x (); }\"), set: untyped __js__ (\"function (v) { return this.set_x (v); }\") },\n\t\t\t\"y\": { get: untyped __js__ (\"function () { return this.get_y (); }\"), set: untyped __js__ (\"function (v) { return this.set_y (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__x = 0;\n\t\t__y = 0;\n\t\t\n\t\tvisible = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function requestContext3D (context3DRenderMode:Context3DRenderMode = AUTO, profile:Context3DProfile = BASELINE):Void {\n\t\t\n\t\t__contextRequested = true;\n\t\t\n\t\tif (context3D != null) {\n\t\t\t\n\t\t\tTimer.delay (__dispatchCreate, 1);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function requestContext3DMatchingProfiles (profiles:Vector<Context3DProfile>):Void {\n\t\t\n\t\trequestContext3D ();\n\t\t\n\t}\n\t\n\t\n\tprivate function __createContext (stage:Stage, renderSession:RenderSession):Void {\n\t\t\n\t\t__stage = stage;\n\t\t\n\t\tif (renderSession.gl != null) {\n\t\t\t\n\t\t\tcontext3D = new Context3D (this, renderSession);\n\t\t\t__dispatchCreate ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\t__canvas = cast Browser.document.createElement (\"canvas\");\n\t\t\t__canvas.width = stage.stageWidth;\n\t\t\t__canvas.height = stage.stageHeight;\n\t\t\t\n\t\t\tvar window = stage.window;\n\t\t\tvar transparentBackground = Reflect.hasField (window.config, \"background\") && window.config.background == null;\n\t\t\tvar colorDepth = Reflect.hasField (window.config, \"colorDepth\") ? window.config.colorDepth : 16;\n\t\t\t\n\t\t\tvar options = {\n\t\t\t\t\n\t\t\t\talpha: (transparentBackground || colorDepth > 16) ? true : false,\n\t\t\t\tantialias: Reflect.hasField (window.config, \"antialiasing\") ? window.config.antialiasing > 0 : false,\n\t\t\t\tdepth: Reflect.hasField (window.config, \"depthBuffer\") ? window.config.depthBuffer : true,\n\t\t\t\tpremultipliedAlpha: true,\n\t\t\t\tstencil: Reflect.hasField (window.config, \"stencilBuffer\") ? window.config.stencilBuffer : false,\n\t\t\t\tpreserveDrawingBuffer: false\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\t__webgl = cast __canvas.getContextWebGL (options);\n\t\t\t\n\t\t\tif (__webgl != null) {\n\t\t\t\t\n\t\t\t\t#if webgl_debug\n\t\t\t\t__webgl = untyped WebGLDebugUtils.makeDebugContext (__webgl);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\t// TODO: Need to handle renderSession/context better\n\t\t\t\t\n\t\t\t\t__renderContext = new GLRenderContext (cast __webgl);\n\t\t\t\tGL.context = __renderContext;\n\t\t\t\t\n\t\t\t\tcontext3D = new Context3D (this, renderSession);\n\t\t\t\t\n\t\t\t\trenderSession.element.appendChild (__canvas);\n\t\t\t\t\n\t\t\t\t__style = __canvas.style;\n\t\t\t\t__style.setProperty (\"position\", \"absolute\", null);\n\t\t\t\t__style.setProperty (\"top\", \"0\", null);\n\t\t\t\t__style.setProperty (\"left\", \"0\", null);\n\t\t\t\t__style.setProperty (renderSession.transformOriginProperty, \"0 0 0\", null);\n\t\t\t\t__style.setProperty (\"z-index\", \"-1\", null);\n\t\t\t\t\n\t\t\t\t__dispatchCreate ();\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__dispatchError ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __dispatchError ():Void {\n\t\t\n\t\t__contextRequested = false;\n\t\tdispatchEvent (new ErrorEvent (ErrorEvent.ERROR, false, false, \"Context3D not available\"));\n\t\t\n\t}\n\t\n\t\n\tprivate function __dispatchCreate ():Void {\n\t\t\n\t\tif (__contextRequested) {\n\t\t\t\n\t\t\t__contextRequested = false;\n\t\t\tdispatchEvent (new Event (Event.CONTEXT3D_CREATE));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderCairo (stage:Stage, renderSession:RenderSession):Void {\n\t\t\n\t\tif (!visible) return;\n\t\t\n\t\tif (__contextRequested) {\n\t\t\t\n\t\t\t__dispatchError ();\n\t\t\t__contextRequested = false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderCanvas (stage:Stage, renderSession:RenderSession):Void {\n\t\t\n\t\tif (!visible) return;\n\t\t\n\t\tif (__contextRequested) {\n\t\t\t\n\t\t\t__dispatchError ();\n\t\t\t__contextRequested = false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderDOM (stage:Stage, renderSession:RenderSession):Void {\n\t\t\n\t\tif (!visible) return;\n\t\t\n\t\tif (__contextRequested && context3D == null) {\n\t\t\t\n\t\t\t__createContext (stage, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (context3D != null) {\n\t\t\t\n\t\t\t#if (js && html5)\n\t\t\tGL.context = __renderContext;\n\t\t\t#end\n\t\t\t\n\t\t\t__resetContext3DStates ();\n\t\t\t//DOMStage3D.render (this, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __renderGL (stage:Stage, renderSession:RenderSession):Void {\n\t\t\n\t\tif (!visible) return;\n\t\t\n\t\tif (__contextRequested && context3D == null) {\n\t\t\t\n\t\t\t__createContext (stage, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (context3D != null) {\n\t\t\t\n\t\t\t__resetContext3DStates ();\n\t\t\tGLStage3D.render (this, renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function __resize (width:Int, height:Int):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (__canvas != null) {\n\t\t\t\n\t\t\t__canvas.width = width;\n\t\t\t__canvas.height = height;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __resetContext3DStates ():Void {\n\t\t\n\t\t// TODO: Better blend mode fix\n\t\tcontext3D.__updateBlendFactors ();\n\t\t// TODO: Better viewport fix\n\t\tcontext3D.__updateBackbufferViewport ();\n\t\t\n\t}\n\t\n\t\n\tprivate function get_x ():Float {\n\t\t\n\t\treturn __x;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_x (value:Float):Float {\n\t\t\n\t\tif (__x == value) return value;\n\t\t\n\t\t__x = value;\n\t\t\n\t\tif (context3D != null) {\n\t\t\t\n\t\t\tcontext3D.__updateBackbufferViewport ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_y ():Float {\n\t\t\n\t\treturn __y;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_y (value:Float):Float {\n\t\t\n\t\tif (__y == value) return value;\n\t\t\n\t\t__y = value;\n\t\t\n\t\tif (context3D != null) {\n\t\t\t\n\t\t\tcontext3D.__updateBackbufferViewport ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package openfl.display;\n\n\n@:enum abstract StageAlign(Null<Int>) {\n\t\n\tpublic var BOTTOM = 0;\n\tpublic var BOTTOM_LEFT = 1;\n\tpublic var BOTTOM_RIGHT = 2;\n\tpublic var LEFT = 3;\n\tpublic var RIGHT = 4;\n\tpublic var TOP = 5;\n\tpublic var TOP_LEFT = 6;\n\tpublic var TOP_RIGHT = 7;\n\t\n\t@:from private static function fromString (value:String):StageAlign {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"bottom\": BOTTOM;\n\t\t\tcase \"bottomLeft\": BOTTOM_LEFT;\n\t\t\tcase \"bottomRight\": BOTTOM_RIGHT;\n\t\t\tcase \"left\": LEFT;\n\t\t\tcase \"right\": RIGHT;\n\t\t\tcase \"top\": TOP;\n\t\t\tcase \"topLeft\": TOP_LEFT;\n\t\t\tcase \"topRight\": TOP_RIGHT;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase StageAlign.BOTTOM: \"bottom\";\n\t\t\tcase StageAlign.BOTTOM_LEFT: \"bottomLeft\";\n\t\t\tcase StageAlign.BOTTOM_RIGHT: \"bottomRight\";\n\t\t\tcase StageAlign.LEFT: \"left\";\n\t\t\tcase StageAlign.RIGHT: \"right\";\n\t\t\tcase StageAlign.TOP: \"top\";\n\t\t\tcase StageAlign.TOP_LEFT: \"topLeft\";\n\t\t\tcase StageAlign.TOP_RIGHT: \"topRight\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\n@:enum abstract StageDisplayState(Null<Int>) {\n\t\n\tpublic var FULL_SCREEN = 0;\n\tpublic var FULL_SCREEN_INTERACTIVE = 1;\n\tpublic var NORMAL = 2;\n\t\n\t@:from private static function fromString (value:String):StageDisplayState {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"fullScreen\": FULL_SCREEN;\n\t\t\tcase \"fullScreenInteractive\": FULL_SCREEN_INTERACTIVE;\n\t\t\tcase \"normal\": NORMAL;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase StageDisplayState.FULL_SCREEN: \"fullScreen\";\n\t\t\tcase StageDisplayState.FULL_SCREEN_INTERACTIVE: \"fullScreenInteractive\";\n\t\t\tcase StageDisplayState.NORMAL: \"normal\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\n@:enum abstract StageQuality(Null<Int>) {\n\t\n\tpublic var BEST = 0;\n\tpublic var HIGH = 1;\n\tpublic var LOW = 2;\n\tpublic var MEDIUM = 3;\n\t\n\t@:from private static function fromString (value:String):StageQuality {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"best\": BEST;\n\t\t\tcase \"high\": HIGH;\n\t\t\tcase \"low\": LOW;\n\t\t\tcase \"medium\": MEDIUM;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase StageQuality.BEST: \"best\";\n\t\t\tcase StageQuality.HIGH: \"high\";\n\t\t\tcase StageQuality.LOW: \"low\";\n\t\t\tcase StageQuality.MEDIUM: \"medium\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\n@:enum abstract StageScaleMode(Null<Int>) {\n\t\n\tpublic var EXACT_FIT = 0;\n\tpublic var NO_BORDER = 1;\n\tpublic var NO_SCALE = 2;\n\tpublic var SHOW_ALL = 3;\n\t\n\t@:from private static function fromString (value:String):StageScaleMode {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"exactFit\": EXACT_FIT;\n\t\t\tcase \"noBorder\": NO_BORDER;\n\t\t\tcase \"noScale\": NO_SCALE;\n\t\t\tcase \"showAll\": SHOW_ALL;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase StageScaleMode.EXACT_FIT: \"exactFit\";\n\t\t\tcase StageScaleMode.NO_BORDER: \"noBorder\";\n\t\t\tcase StageScaleMode.NO_SCALE: \"noScale\";\n\t\t\tcase StageScaleMode.SHOW_ALL: \"showAll\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\n@:enum abstract TriangleCulling(Null<Int>) {\n\t\n\tpublic var NEGATIVE = 0;\n\tpublic var NONE = 1;\n\tpublic var POSITIVE = 2;\n\t\n\t@:from private static function fromString (value:String):TriangleCulling {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"negative\": NEGATIVE;\n\t\t\tcase \"none\": NONE;\n\t\t\tcase \"positive\": POSITIVE;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase TriangleCulling.NEGATIVE: \"negative\";\n\t\t\tcase TriangleCulling.NONE: \"none\";\n\t\t\tcase TriangleCulling.POSITIVE: \"positive\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.display;\n\n\nimport lime.app.Application;\nimport lime.app.Config;\nimport lime.ui.Window in LimeWindow;\nimport openfl._internal.Lib;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.LoaderInfo)\n@:access(openfl.display.Stage)\n\n\nclass Window extends LimeWindow {\n\t\n\t\n\tpublic function new (config:WindowConfig = null) {\n\t\t\n\t\tsuper (config);\n\t\t\n\t}\n\t\n\t\n\tpublic override function create (application:Application):Void {\n\t\t\n\t\tsuper.create (application);\n\t\t\n\t\t#if (!flash && !macro)\n\t\t\n\t\tstage = new Stage (this, Reflect.hasField (config, \"background\") ? config.background : 0xFFFFFF);\n\t\t\n\t\tif (Reflect.hasField (config, \"parameters\")) {\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tstage.loaderInfo.parameters = config.parameters;\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) {}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (Reflect.hasField (config, \"resizable\") && !config.resizable) {\n\t\t\t\n\t\t\tstage.__setLogicalSize (config.width, config.height);\n\t\t\t\n\t\t}\n\t\t\n\t\tapplication.addModule (stage);\n\t\t\n\t\t#else\n\t\t\n\t\tstage = Lib.current.stage;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}","package openfl.display3D;\n\n\nimport lime.graphics.opengl.GLFramebuffer;\nimport lime.graphics.opengl.GLRenderbuffer;\nimport lime.utils.Float32Array;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.stage3D.opengl.GLContext3D;\nimport openfl._internal.stage3D.Context3DStateCache;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.display3D.textures.CubeTexture;\nimport openfl.display3D.textures.RectangleTexture;\nimport openfl.display3D.textures.TextureBase;\nimport openfl.display3D.textures.Texture;\nimport openfl.display3D.textures.VideoTexture;\nimport openfl.display.BitmapData;\nimport openfl.display.Stage3D;\nimport openfl.errors.Error;\nimport openfl.errors.IllegalOperationError;\nimport openfl.events.EventDispatcher;\nimport openfl.geom.Matrix3D;\nimport openfl.geom.Rectangle;\nimport openfl.utils.ByteArray;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.textures.CubeTexture)\n@:access(openfl.display3D.textures.RectangleTexture)\n@:access(openfl.display3D.textures.Texture)\n@:access(openfl.display3D.textures.VideoTexture)\n@:access(openfl.display3D.IndexBuffer3D)\n@:access(openfl.display3D.Program3D)\n@:access(openfl.display3D.VertexBuffer3D)\n\n\n@:final class Context3D extends EventDispatcher {\n\t\n\t\n\tpublic static var supportsVideoTexture (default, null):Bool = #if (js && html5) true #else false #end;\n\t\n\tprivate static inline var MAX_SAMPLERS = 8;\n\tprivate static inline var MAX_ATTRIBUTES = 16;\n\tprivate static inline var MAX_PROGRAM_REGISTERS = 128;\n\t\n\tprivate static var TEXTURE_MAX_ANISOTROPY_EXT:Int = 0;\n\tprivate static var DEPTH_STENCIL:Int = 0;\n\t\n\tprivate static var __stateCache:Context3DStateCache = new Context3DStateCache ();\n\t\n\tpublic var backBufferHeight (default, null):Int = 0;\n\tpublic var backBufferWidth (default, null):Int = 0;\n\tpublic var driverInfo (default, null):String = \"OpenGL (Direct blitting)\";\n\tpublic var enableErrorChecking (get, set):Bool;\n\tpublic var maxBackBufferHeight (default, null):Int;\n\tpublic var maxBackBufferWidth (default, null):Int;\n\tpublic var profile (default, null):Context3DProfile = BASELINE;\n\tpublic var totalGPUMemory (default, null):Int = 0;\n\t\n\tprivate var __backBufferAntiAlias:Int;\n\tprivate var __backBufferEnableDepthAndStencil:Bool;\n\tprivate var __backBufferWantsBestResolution:Bool;\n\tprivate var __depthRenderBuffer:GLRenderbuffer;\n\tprivate var __depthStencilRenderBuffer:GLRenderbuffer;\n\tprivate var __enableErrorChecking:Bool;\n\tprivate var __fragmentConstants:Float32Array;\n\tprivate var __framebuffer:GLFramebuffer;\n\tprivate var __frameCount:Int;\n\tprivate var __maxAnisotropyCubeTexture:Int;\n\tprivate var __maxAnisotropyTexture2D:Int;\n\tprivate var __positionScale:Float32Array;\n\tprivate var __program:Program3D;\n\tprivate var __renderSession:RenderSession;\n\tprivate var __renderToTexture:TextureBase;\n\tprivate var __rttDepthAndStencil:Bool;\n\tprivate var __samplerDirty:Int;\n\tprivate var __samplerTextures:Vector<TextureBase>;\n\tprivate var __samplerStates:Array<SamplerState>;\n\tprivate var __scissorRectangle:Rectangle;\n\tprivate var __stage3D:Stage3D;\n\tprivate var __stats:Vector<Int>;\n\tprivate var __statsCache:Vector<Int>;\n\tprivate var __stencilCompareMode:Context3DCompareMode;\n\tprivate var __stencilRef:Int;\n\tprivate var __stencilReadMask:Int;\n\tprivate var __stencilRenderBuffer:GLRenderbuffer;\n\tprivate var __supportsAnisotropicFiltering:Bool;\n\tprivate var __supportsPackedDepthStencil:Bool;\n\tprivate var __vertexConstants:Float32Array;\n\t\n\t#if telemetry\n\t//private var __spanPresent:Telemetry.Span;\n\t//private var __statsValues:Array<Telemetry.Value>;\n\t//private var __valueFrame:Telemetry.Value;\n\t#end\n\t\n\t\n\tprivate function new (stage3D:Stage3D, renderSession:RenderSession) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__stage3D = stage3D;\n\t\t__renderSession = renderSession;\n\t\t\n\t\tGLContext3D.create (this);\n\t\t\n\t}\n\t\n\t\n\tpublic function clear (red:Float = 0, green:Float = 0, blue:Float = 0, alpha:Float = 1, depth:Float = 1, stencil:UInt = 0, mask:UInt = Context3DClearMask.ALL):Void {\n\t\t\n\t\tGLContext3D.clear (this, red, green, blue, alpha, depth, stencil, mask);\n\t\t\n\t}\n\t\n\t\n\tpublic function configureBackBuffer (width:Int, height:Int, antiAlias:Int, enableDepthAndStencil:Bool = true, wantsBestResolution:Bool = false, wantsBestResolutionOnBrowserZoom:Bool = false):Void {\n\t\t\n\t\tGLContext3D.configureBackBuffer (this, width, height, antiAlias, enableDepthAndStencil, wantsBestResolution, wantsBestResolutionOnBrowserZoom);\n\t\t\n\t}\n\t\n\t\n\tpublic function createCubeTexture (size:Int, format:Context3DTextureFormat, optimizeForRenderToTexture:Bool, streamingLevels:Int = 0):CubeTexture {\n\t\t\n\t\treturn new CubeTexture (this, size, format, optimizeForRenderToTexture, streamingLevels);\n\t\t\n\t}\n\t\n\t\n\tpublic function createIndexBuffer (numIndices:Int, bufferUsage:Context3DBufferUsage = STATIC_DRAW):IndexBuffer3D {\n\t\t\n\t\treturn new IndexBuffer3D (this, numIndices, bufferUsage);\n\t\t\n\t}\n\t\n\t\n\tpublic function createProgram ():Program3D {\n\t\t\n\t\treturn new Program3D (this);\n\t\t\n\t}\n\t\n\t\n\tpublic function createRectangleTexture (width:Int, height:Int, format:Context3DTextureFormat, optimizeForRenderToTexture:Bool):RectangleTexture {\n\t\t\n\t\treturn new RectangleTexture (this, width, height, format, optimizeForRenderToTexture);\n\t\t\n\t}\n\t\n\t\n\tpublic function createTexture (width:Int, height:Int, format:Context3DTextureFormat, optimizeForRenderToTexture:Bool, streamingLevels:Int = 0):Texture {\n\t\t\n\t\treturn new Texture (this, width, height, format, optimizeForRenderToTexture, streamingLevels);\n\t\t\n\t}\n\t\n\t\n\tpublic function createVertexBuffer (numVertices:Int, data32PerVertex:Int, bufferUsage:Context3DBufferUsage = STATIC_DRAW):VertexBuffer3D {\n\t\t\n\t\treturn new VertexBuffer3D (this, numVertices, data32PerVertex, bufferUsage);\n\t\t\n\t}\n\t\n\t\n\tpublic function createVideoTexture ():VideoTexture {\n\t\t\n\t\t#if (js && html5)\n\t\treturn new VideoTexture (this);\n\t\t#else\n\t\tthrow new Error (\"Video textures are not supported on this platform\");\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function dispose (recreate:Bool = true):Void {\n\t\t\n\t\tGLContext3D.dispose (this, recreate);\n\t\t\n\t}\n\t\n\t\n\tpublic function drawToBitmapData (destination:BitmapData):Void {\n\t\t\n\t\tif (destination == null) return;\n\t\t\n\t\tGLContext3D.drawToBitmapData (this, destination);\n\t\t\n\t}\n\t\n\t\n\tpublic function drawTriangles (indexBuffer:IndexBuffer3D, firstIndex:Int = 0, numTriangles:Int = -1):Void {\n\t\t\n\t\tif (__program == null) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tGLContext3D.drawTriangles (this, indexBuffer, firstIndex, numTriangles);\n\t\t\n\t}\n\t\n\t\n\t\n\tpublic function present ():Void {\n\t\t\n\t\tGLContext3D.present (this);\n\t\t\n\t}\n\t\n\t\n\tpublic function setBlendFactors (sourceFactor:Context3DBlendFactor, destinationFactor:Context3DBlendFactor):Void {\n\t\t\n\t\tGLContext3D.setBlendFactors (this, sourceFactor, destinationFactor);\n\t\t\n\t}\n\t\n\t\n\tpublic function setColorMask (red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {\n\t\t\n\t\tGLContext3D.setColorMask (this, red, green, blue, alpha);\n\t\t\n\t}\n\t\n\t\n\tpublic function setCulling (triangleFaceToCull:Context3DTriangleFace):Void {\n\t\t\n\t\tGLContext3D.setCulling (this, triangleFaceToCull);\n\t\t\n\t}\n\t\n\t\n\tpublic function setDepthTest (depthMask:Bool, passCompareMode:Context3DCompareMode):Void {\n\t\t\n\t\tGLContext3D.setDepthTest (this, depthMask, passCompareMode);\n\t\t\n\t}\n\t\n\t\n\tpublic function setProgram (program:Program3D):Void {\n\t\t\n\t\tif (program == null) {\n\t\t\t\n\t\t\tthrow new IllegalOperationError ();\n\t\t\t\n\t\t}\n\t\t\n\t\tGLContext3D.setProgram (this, program);\n\t\t\n\t}\n\t\n\t\n\tpublic function setProgramConstantsFromByteArray (programType:Context3DProgramType, firstRegister:Int, numRegisters:Int, data:ByteArray, byteArrayOffset:UInt):Void {\n\t\t\n\t\tif (numRegisters == 0) return;\n\t\t\n\t\tGLContext3D.setProgramConstantsFromByteArray (this, programType, firstRegister, numRegisters, data, byteArrayOffset);\n\t\t\n\t}\n\t\n\t\n\tpublic function setProgramConstantsFromMatrix (programType:Context3DProgramType, firstRegister:Int, matrix:Matrix3D, transposedMatrix:Bool = false):Void {\n\t\t\n\t\tGLContext3D.setProgramConstantsFromMatrix (this, programType, firstRegister, matrix, transposedMatrix);\n\t\t\n\t}\n\t\n\t\n\tpublic function setProgramConstantsFromVector (programType:Context3DProgramType, firstRegister:Int, data:Vector<Float>, numRegisters:Int = -1):Void {\n\t\t\n\t\tif (numRegisters == 0) return;\n\t\t\n\t\tGLContext3D.setProgramConstantsFromVector (this, programType, firstRegister, data, numRegisters);\n\t\t\n\t}\n\t\n\t\n\tpublic function setRenderToBackBuffer ():Void {\n\t\t\n\t\tGLContext3D.setRenderToBackBuffer (this);\n\t\t\n\t}\n\t\n\t\n\tpublic function setRenderToTexture (texture:TextureBase, enableDepthAndStencil:Bool = false, antiAlias:Int = 0, surfaceSelector:Int = 0):Void {\n\t\t\n\t\tGLContext3D.setRenderToTexture (this, texture, enableDepthAndStencil, antiAlias, surfaceSelector);\n\t\t\n\t}\n\t\n\t\n\tpublic function setSamplerStateAt (sampler:Int, wrap:Context3DWrapMode, filter:Context3DTextureFilter, mipfilter:Context3DMipFilter):Void {\n\t\t\n\t\tGLContext3D.setSamplerStateAt (this, sampler, wrap, filter, mipfilter);\n\t\t\n\t}\n\t\n\t\n\tpublic function setScissorRectangle (rectangle:Rectangle):Void {\n\t\t\n\t\tGLContext3D.setScissorRectangle (this, rectangle);\n\t\t\n\t}\n\t\n\t\n\tpublic function setStencilActions (triangleFace:Context3DTriangleFace = FRONT_AND_BACK, compareMode:Context3DCompareMode = ALWAYS, actionOnBothPass:Context3DStencilAction = KEEP, actionOnDepthFail:Context3DStencilAction = KEEP, actionOnDepthPassStencilFail:Context3DStencilAction = KEEP):Void {\n\t\t\n\t\tGLContext3D.setStencilActions (this, triangleFace, compareMode, actionOnBothPass, actionOnDepthFail, actionOnDepthPassStencilFail);\n\t\t\n\t}\n\t\n\t\n\tpublic function setStencilReferenceValue (referenceValue:UInt, readMask:UInt = 0xFF, writeMask:UInt = 0xFF):Void {\n\t\t\n\t\tGLContext3D.setStencilReferenceValue (this, referenceValue, readMask, writeMask);\n\t\t\n\t}\n\t\n\t\n\tpublic function setTextureAt (sampler:Int, texture:TextureBase):Void {\n\t\t\n\t\tGLContext3D.setTextureAt (this, sampler, texture);\n\t\t\n\t}\n\t\n\t\n\tpublic function setVertexBufferAt (index:Int, buffer:VertexBuffer3D, bufferOffset:Int = 0, format:Context3DVertexBufferFormat = FLOAT_4):Void {\n\t\t\n\t\tGLContext3D.setVertexBufferAt (this, index, buffer, bufferOffset, format);\n\t\t\n\t}\n\t\n\t\n\tprivate function __updateBackbufferViewport ():Void {\n\t\t\n\t\tGLContext3D.__updateBackbufferViewportTEMP (this);\n\t\t\n\t}\n\t\n\t\n\tprivate function __updateBlendFactors ():Void {\n\t\t\n\t\tGLContext3D.__updateBlendFactorsTEMP (this);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_enableErrorChecking ():Bool {\n\t\t\n\t\treturn __enableErrorChecking;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_enableErrorChecking (value:Bool):Bool {\n\t\t\n\t\tGLContext3D.setEnableErrorChecking (value);\n\t\treturn __enableErrorChecking = value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n@:enum abstract Context3DTelemetry(Int) to Int {\n\t\n\tpublic var DRAW_CALLS = 0;\n\tpublic var COUNT_INDEX_BUFFER = 1;\n\tpublic var COUNT_VERTEX_BUFFER = 2;\n\tpublic var COUNT_TEXTURE = 3;\n\tpublic var COUNT_TEXTURE_COMPRESSED = 4;\n\tpublic var COUNT_PROGRAM = 5;\n\tpublic var MEM_INDEX_BUFFER = 6;\n\tpublic var MEM_VERTEX_BUFFER = 7;\n\tpublic var MEM_TEXTURE = 8;\n\tpublic var MEM_TEXTURE_COMPRESSED = 9;\n\tpublic var MEM_PROGRAM = 10;\n\t\n\tpublic static inline var length = 11;\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DBlendFactor(Null<Int>) {\n\t\n\tpublic var DESTINATION_ALPHA = 0;\n\tpublic var DESTINATION_COLOR = 1;\n\tpublic var ONE = 2;\n\tpublic var ONE_MINUS_DESTINATION_ALPHA = 3;\n\tpublic var ONE_MINUS_DESTINATION_COLOR = 4;\n\tpublic var ONE_MINUS_SOURCE_ALPHA = 5;\n\tpublic var ONE_MINUS_SOURCE_COLOR = 6;\n\tpublic var SOURCE_ALPHA = 7;\n\tpublic var SOURCE_COLOR = 8;\n\tpublic var ZERO = 9;\n\t\n\t@:from private static function fromString (value:String):Context3DBlendFactor {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"destinationAlpha\": DESTINATION_ALPHA;\n\t\t\tcase \"destinationColor\": DESTINATION_COLOR;\n\t\t\tcase \"one\": ONE;\n\t\t\tcase \"oneMinusDestinationAlpha\": ONE_MINUS_DESTINATION_ALPHA;\n\t\t\tcase \"oneMinusDestinationColor\": ONE_MINUS_DESTINATION_COLOR;\n\t\t\tcase \"oneMinusSourceAlpha\": ONE_MINUS_SOURCE_ALPHA;\n\t\t\tcase \"oneMinusSourceColor\": ONE_MINUS_SOURCE_COLOR;\n\t\t\tcase \"sourceAlpha\": SOURCE_ALPHA;\n\t\t\tcase \"sourceColor\": SOURCE_COLOR;\n\t\t\tcase \"zero\": ZERO;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DBlendFactor.DESTINATION_ALPHA: \"destinationAlpha\";\n\t\t\tcase Context3DBlendFactor.DESTINATION_COLOR: \"destinationColor\";\n\t\t\tcase Context3DBlendFactor.ONE: \"one\";\n\t\t\tcase Context3DBlendFactor.ONE_MINUS_DESTINATION_ALPHA: \"oneMinusDestinationAlpha\";\n\t\t\tcase Context3DBlendFactor.ONE_MINUS_DESTINATION_COLOR: \"oneMinusDestinationColor\";\n\t\t\tcase Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA: \"oneMinusSourceAlpha\";\n\t\t\tcase Context3DBlendFactor.ONE_MINUS_SOURCE_COLOR: \"oneMinusSourceColor\";\n\t\t\tcase Context3DBlendFactor.SOURCE_ALPHA: \"sourceAlpha\";\n\t\t\tcase Context3DBlendFactor.SOURCE_COLOR: \"sourceColor\";\n\t\t\tcase Context3DBlendFactor.ZERO: \"zero\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DBlendFactor, b:Context3DBlendFactor):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DBlendFactor, b:Context3DBlendFactor):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DBufferUsage(Null<Int>) {\n\t\n\tpublic var DYNAMIC_DRAW = 0;\n\tpublic var STATIC_DRAW = 1;\n\t\n\t@:from private static function fromString (value:String):Context3DBufferUsage {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"dynamicDraw\": DYNAMIC_DRAW;\n\t\t\tcase \"staticDraw\": STATIC_DRAW;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DBufferUsage.DYNAMIC_DRAW: \"dynamicDraw\";\n\t\t\tcase Context3DBufferUsage.STATIC_DRAW: \"staticDraw\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DBufferUsage, b:Context3DBufferUsage):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DBufferUsage, b:Context3DBufferUsage):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DCompareMode(Null<Int>) {\n\t\n\tpublic var ALWAYS = 0;\n\tpublic var EQUAL = 1;\n\tpublic var GREATER = 2;\n\tpublic var GREATER_EQUAL = 3;\n\tpublic var LESS = 4;\n\tpublic var LESS_EQUAL = 5;\n\tpublic var NEVER = 6;\n\tpublic var NOT_EQUAL = 7;\n\t\n\t@:from private static function fromString (value:String):Context3DCompareMode {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"always\": ALWAYS;\n\t\t\tcase \"equal\": EQUAL;\n\t\t\tcase \"greater\": GREATER;\n\t\t\tcase \"greaterEqual\": GREATER_EQUAL;\n\t\t\tcase \"less\": LESS;\n\t\t\tcase \"lessEqual\": LESS_EQUAL;\n\t\t\tcase \"never\": NEVER;\n\t\t\tcase \"notEqual\": NOT_EQUAL;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DCompareMode.ALWAYS: \"always\";\n\t\t\tcase Context3DCompareMode.EQUAL: \"equal\";\n\t\t\tcase Context3DCompareMode.GREATER: \"greater\";\n\t\t\tcase Context3DCompareMode.GREATER_EQUAL: \"greaterEqual\";\n\t\t\tcase Context3DCompareMode.LESS: \"less\";\n\t\t\tcase Context3DCompareMode.LESS_EQUAL: \"lessEqual\";\n\t\t\tcase Context3DCompareMode.NEVER: \"never\";\n\t\t\tcase Context3DCompareMode.NOT_EQUAL: \"notEqual\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DCompareMode, b:Context3DCompareMode):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DCompareMode, b:Context3DCompareMode):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DMipFilter(Null<Int>) {\n\t\n\tpublic var MIPLINEAR = 0;\n\tpublic var MIPNEAREST = 1;\n\tpublic var MIPNONE = 2;\n\t\n\t@:from private static function fromString (value:String):Context3DMipFilter {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"miplinear\": MIPLINEAR;\n\t\t\tcase \"mipnearest\": MIPNEAREST;\n\t\t\tcase \"mipnone\": MIPNONE;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DMipFilter.MIPLINEAR: \"miplinear\";\n\t\t\tcase Context3DMipFilter.MIPNEAREST: \"mipnearest\";\n\t\t\tcase Context3DMipFilter.MIPNONE: \"mipnone\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DMipFilter, b:Context3DMipFilter):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DMipFilter, b:Context3DMipFilter):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\n\n\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DProfile(Null<Int>) {\n\t\n\tpublic var BASELINE = 0;\n\tpublic var BASELINE_CONSTRAINED = 1;\n\tpublic var BASELINE_EXTENDED = 2;\n\tpublic var STANDARD = 3;\n\tpublic var STANDARD_CONSTRAINED = 4;\n\tpublic var STANDARD_EXTENDED = 5;\n\t\n\t@:from private static function fromString (value:String):Context3DProfile {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"baseline\": BASELINE;\n\t\t\tcase \"baselineConstrained\": BASELINE_CONSTRAINED;\n\t\t\tcase \"baselineExtended\": BASELINE_EXTENDED;\n\t\t\tcase \"standard\": STANDARD;\n\t\t\tcase \"standardConstrained\": STANDARD_CONSTRAINED;\n\t\t\tcase \"standardExtended\": STANDARD_EXTENDED;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DProfile.BASELINE: \"baseline\";\n\t\t\tcase Context3DProfile.BASELINE_CONSTRAINED: \"baselineConstrained\";\n\t\t\tcase Context3DProfile.BASELINE_EXTENDED: \"baselineExtended\";\n\t\t\tcase Context3DProfile.STANDARD: \"standard\";\n\t\t\tcase Context3DProfile.STANDARD_CONSTRAINED: \"standardConstrained\";\n\t\t\tcase Context3DProfile.STANDARD_EXTENDED: \"standardExtended\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DProfile, b:Context3DProfile):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DProfile, b:Context3DProfile):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DProgramType(Null<Int>) {\n\t\n\tpublic var FRAGMENT = 0;\n\tpublic var VERTEX = 1;\n\t\n\t@:from private static function fromString (value:String):Context3DProgramType {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"fragment\": FRAGMENT;\n\t\t\tcase \"vertex\": VERTEX;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DProgramType.FRAGMENT: \"fragment\";\n\t\t\tcase Context3DProgramType.VERTEX: \"vertex\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DProgramType, b:Context3DProgramType):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DProgramType, b:Context3DProgramType):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DRenderMode(Null<Int>) {\n\t\n\tpublic var AUTO = 0;\n\tpublic var SOFTWARE = 1;\n\t\n\t@:from private static function fromString (value:String):Context3DRenderMode {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"auto\": AUTO;\n\t\t\tcase \"software\": SOFTWARE;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DRenderMode.AUTO: \"auto\";\n\t\t\tcase Context3DRenderMode.SOFTWARE: \"software\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DRenderMode, b:Context3DRenderMode):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DRenderMode, b:Context3DRenderMode):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DStencilAction(Null<Int>) {\n\t\n\tpublic var DECREMENT_SATURATE = 0;\n\tpublic var DECREMENT_WRAP = 1;\n\tpublic var INCREMENT_SATURATE = 2;\n\tpublic var INCREMENT_WRAP = 3;\n\tpublic var INVERT = 4;\n\tpublic var KEEP = 5;\n\tpublic var SET = 6;\n\tpublic var ZERO = 7;\n\t\n\t@:from private static function fromString (value:String):Context3DStencilAction {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"decrementSaturate\": DECREMENT_SATURATE;\n\t\t\tcase \"decrementWrap\": DECREMENT_WRAP;\n\t\t\tcase \"incrementSaturate\": INCREMENT_SATURATE;\n\t\t\tcase \"incrementWrap\": INCREMENT_WRAP;\n\t\t\tcase \"invert\": INVERT;\n\t\t\tcase \"keep\": KEEP;\n\t\t\tcase \"set\": SET;\n\t\t\tcase \"zero\": ZERO;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DStencilAction.DECREMENT_SATURATE: \"decrementSaturate\";\n\t\t\tcase Context3DStencilAction.DECREMENT_WRAP: \"decrementWrap\";\n\t\t\tcase Context3DStencilAction.INCREMENT_SATURATE: \"incrementSaturate\";\n\t\t\tcase Context3DStencilAction.INCREMENT_WRAP: \"incrementWrap\";\n\t\t\tcase Context3DStencilAction.INVERT: \"invert\";\n\t\t\tcase Context3DStencilAction.KEEP: \"keep\";\n\t\t\tcase Context3DStencilAction.SET: \"set\";\n\t\t\tcase Context3DStencilAction.ZERO: \"zero\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DStencilAction, b:Context3DStencilAction):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DStencilAction, b:Context3DStencilAction):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DTextureFilter(Null<Int>) {\n\t\n\tpublic var ANISOTROPIC16X = 0;\n\tpublic var ANISOTROPIC2X = 1;\n\tpublic var ANISOTROPIC4X = 2;\n\tpublic var ANISOTROPIC8X = 3;\n\tpublic var LINEAR = 4;\n\tpublic var NEAREST = 5;\n\t\n\t@:from private static function fromString (value:String):Context3DTextureFilter {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"anisotropic16x\": ANISOTROPIC16X;\n\t\t\tcase \"anisotropic2x\": ANISOTROPIC2X;\n\t\t\tcase \"anisotropic4x\": ANISOTROPIC4X;\n\t\t\tcase \"anisotropic8x\": ANISOTROPIC8X;\n\t\t\tcase \"linear\": LINEAR;\n\t\t\tcase \"nearest\": NEAREST;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DTextureFilter.ANISOTROPIC16X: \"anisotropic16x\";\n\t\t\tcase Context3DTextureFilter.ANISOTROPIC2X: \"anisotropic2x\";\n\t\t\tcase Context3DTextureFilter.ANISOTROPIC4X: \"anisotropic4x\";\n\t\t\tcase Context3DTextureFilter.ANISOTROPIC8X: \"anisotropic8x\";\n\t\t\tcase Context3DTextureFilter.LINEAR: \"linear\";\n\t\t\tcase Context3DTextureFilter.NEAREST: \"nearest\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DTextureFilter, b:Context3DTextureFilter):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DTextureFilter, b:Context3DTextureFilter):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DTextureFormat(Null<Int>) {\n\t\n\tpublic var BGR_PACKED = 0;\n\tpublic var BGRA = 1;\n\tpublic var BGRA_PACKED = 2;\n\tpublic var COMPRESSED = 3;\n\tpublic var COMPRESSED_ALPHA = 4;\n\tpublic var RGBA_HALF_FLOAT = 5;\n\t\n\t@:from private static function fromString (value:String):Context3DTextureFormat {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"bgrPacked565\": BGR_PACKED;\n\t\t\tcase \"bgra\": BGRA;\n\t\t\tcase \"bgraPacked4444\": BGRA_PACKED;\n\t\t\tcase \"compressed\": COMPRESSED;\n\t\t\tcase \"compressedAlpha\": COMPRESSED_ALPHA;\n\t\t\tcase \"rgbaHalfFloat\": RGBA_HALF_FLOAT;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DTextureFormat.BGR_PACKED: \"bgrPacked565\";\n\t\t\tcase Context3DTextureFormat.BGRA: \"bgra\";\n\t\t\tcase Context3DTextureFormat.BGRA_PACKED: \"bgraPacked4444\";\n\t\t\tcase Context3DTextureFormat.COMPRESSED: \"compressed\";\n\t\t\tcase Context3DTextureFormat.COMPRESSED_ALPHA: \"compressedAlpha\";\n\t\t\tcase Context3DTextureFormat.RGBA_HALF_FLOAT: \"rgbaHalfFloat\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DTextureFormat, b:Context3DTextureFormat):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DTextureFormat, b:Context3DTextureFormat):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DTriangleFace(Null<Int>) {\n\t\n\tpublic var BACK = 0;\n\tpublic var FRONT = 1;\n\tpublic var FRONT_AND_BACK = 2;\n\tpublic var NONE = 3;\n\t\n\t@:from private static function fromString (value:String):Context3DTriangleFace {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"back\": BACK;\n\t\t\tcase \"front\": FRONT;\n\t\t\tcase \"frontAndBack\": FRONT_AND_BACK;\n\t\t\tcase \"none\": NONE;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DTriangleFace.BACK: \"back\";\n\t\t\tcase Context3DTriangleFace.FRONT: \"front\";\n\t\t\tcase Context3DTriangleFace.FRONT_AND_BACK: \"frontAndBack\";\n\t\t\tcase Context3DTriangleFace.NONE: \"none\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DTriangleFace, b:Context3DTriangleFace):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DTriangleFace, b:Context3DTriangleFace):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DVertexBufferFormat(Null<Int>) {\n\t\n\tpublic var BYTES_4 = 0;\n\tpublic var FLOAT_1 = 1;\n\tpublic var FLOAT_2 = 2;\n\tpublic var FLOAT_3 = 3;\n\tpublic var FLOAT_4 = 4;\n\t\n\t@:from private static function fromString (value:String):Context3DVertexBufferFormat {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"bytes4\": BYTES_4;\n\t\t\tcase \"float1\": FLOAT_1;\n\t\t\tcase \"float2\": FLOAT_2;\n\t\t\tcase \"float3\": FLOAT_3;\n\t\t\tcase \"float4\": FLOAT_4;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DVertexBufferFormat.BYTES_4: \"bytes4\";\n\t\t\tcase Context3DVertexBufferFormat.FLOAT_1: \"float1\";\n\t\t\tcase Context3DVertexBufferFormat.FLOAT_2: \"float2\";\n\t\t\tcase Context3DVertexBufferFormat.FLOAT_3: \"float3\";\n\t\t\tcase Context3DVertexBufferFormat.FLOAT_4: \"float4\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DVertexBufferFormat, b:Context3DVertexBufferFormat):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DVertexBufferFormat, b:Context3DVertexBufferFormat):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\nimport openfl._internal.utils.NullUtils;\n\n\n@:enum abstract Context3DWrapMode(Null<Int>) {\n\t\n\tpublic var CLAMP = 0;\n\tpublic var CLAMP_U_REPEAT_V = 1;\n\tpublic var REPEAT = 2;\n\tpublic var REPEAT_U_CLAMP_V = 3;\n\t\n\t@:from private static function fromString (value:String):Context3DWrapMode {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"clamp\": CLAMP;\n\t\t\tcase \"clamp_u_repeat_y\": CLAMP_U_REPEAT_V;\n\t\t\tcase \"repeat\": REPEAT;\n\t\t\tcase \"repeat_u_clamp_y\": REPEAT_U_CLAMP_V;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Context3DWrapMode.CLAMP: \"clamp\";\n\t\t\tcase Context3DWrapMode.CLAMP_U_REPEAT_V: \"clamp_u_repeat_y\";\n\t\t\tcase Context3DWrapMode.REPEAT: \"repeat\";\n\t\t\tcase Context3DWrapMode.REPEAT_U_CLAMP_V: \"repeat_u_clamp_y\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t#if cs\n\t@:noCompletion @:op(A == B) private static function equals (a:Context3DWrapMode, b:Context3DWrapMode):Bool {\n\t\t\n\t\treturn NullUtils.valueEquals (a, b, Int);\n\t\t\n\t}\n\t#end\n\t\n\t#if cs\n\t@:noCompletion @:op(A != B) private static function notEquals (a:Context3DWrapMode, b:Context3DWrapMode):Bool {\n\t\t\n\t\treturn !equals (a, b);\n\t\t\n\t}\n\t#end\n\t\n}","package openfl.display3D;\n\n\nimport lime.graphics.opengl.GLBuffer;\nimport lime.utils.ArrayBufferView;\nimport lime.utils.Int16Array;\nimport openfl._internal.stage3D.opengl.GLIndexBuffer3D;\nimport openfl.utils.ByteArray;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.Context3D)\n\n\n@:final class IndexBuffer3D {\n\t\n\t\n\tprivate var __context:Context3D;\n\tprivate var __elementType:Int;\n\tprivate var __id:GLBuffer;\n\tprivate var __memoryUsage:Int;\n\tprivate var __numIndices:Int;\n\tprivate var __tempInt16Array:Int16Array;\n\tprivate var __usage:Int;\n\t\n\t\n\tprivate function new (context3D:Context3D, numIndices:Int, bufferUsage:Context3DBufferUsage) {\n\t\t\n\t\t__context = context3D;\n\t\t__numIndices = numIndices;\n\t\t\n\t\tGLIndexBuffer3D.create (this, __context.__renderSession, bufferUsage);\n\t\t\n\t}\n\t\n\t\n\tpublic function dispose ():Void {\n\t\t\n\t\tGLIndexBuffer3D.dispose (this, __context.__renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromByteArray (data:ByteArray, byteArrayOffset:Int, startOffset:Int, count:Int):Void {\n\t\t\n\t\tGLIndexBuffer3D.uploadFromByteArray (this, __context.__renderSession, data, byteArrayOffset, startOffset, count);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromTypedArray (data:ArrayBufferView, byteLength: Int = -1):Void {\n\t\t\n\t\tGLIndexBuffer3D.uploadFromTypedArray (this, __context.__renderSession, data);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromVector (data:Vector<UInt>, startOffset:Int, count:Int):Void {\n\t\t\n\t\tGLIndexBuffer3D.uploadFromVector (this, __context.__renderSession, data, startOffset, count);\n\t\t\n\t}\n\t\n\t\n}","package openfl.display3D;\n\n\nimport lime.graphics.opengl.GLProgram;\nimport lime.graphics.opengl.GLShader;\nimport lime.graphics.opengl.GLUniformLocation;\nimport lime.graphics.GLRenderContext;\nimport lime.utils.BytePointer;\nimport lime.utils.Float32Array;\nimport openfl._internal.stage3D.opengl.GLProgram3D;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.utils.ByteArray;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.Context3D)\n\n\n@:final class Program3D {\n\t\n\t\n\tprivate var __alphaSamplerUniforms:List<Uniform>;\n\tprivate var __context:Context3D;\n\tprivate var __fragmentShaderID:GLShader;\n\tprivate var __fragmentSource:String;\n\tprivate var __fragmentUniformMap:UniformMap;\n\tprivate var __memUsage:Int;\n\tprivate var __positionScale:Uniform;\n\tprivate var __programID:GLProgram;\n\tprivate var __samplerStates:Vector<SamplerState>;\n\tprivate var __samplerUniforms:List<Uniform>;\n\tprivate var __samplerUsageMask:Int;\n\tprivate var __uniforms:List<Uniform>;\n\tprivate var __vertexShaderID:GLShader;\n\tprivate var __vertexSource:String;\n\tprivate var __vertexUniformMap:UniformMap;\n\t\n\t\n\tprivate function new (context3D:Context3D) {\n\t\t\n\t\t__context = context3D;\n\t\t\n\t\t__memUsage = 0;\n\t\t__samplerUsageMask = 0;\n\t\t\n\t\t__uniforms = new List<Uniform> ();\n\t\t__samplerUniforms = new List<Uniform> ();\n\t\t__alphaSamplerUniforms = new List<Uniform> ();\n\t\t\n\t\t__samplerStates = new Vector<SamplerState> (Context3D.MAX_SAMPLERS);\n\t\t\n\t}\n\t\n\t\n\tpublic function dispose ():Void {\n\t\t\n\t\tGLProgram3D.dispose (this, __context.__renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic function upload (vertexProgram:ByteArray, fragmentProgram:ByteArray):Void {\n\t\t\n\t\tGLProgram3D.upload (this, __context.__renderSession, vertexProgram, fragmentProgram);\n\t\t\n\t}\n\t\n\t\n\tprivate function __flush ():Void {\n\t\t\n\t\t__vertexUniformMap.flush ();\n\t\t__fragmentUniformMap.flush ();\n\t\t\n\t}\n\t\n\t\n\tprivate function __getSamplerState (sampler:Int):SamplerState {\n\t\t\n\t\treturn __samplerStates[sampler];\n\t\t\n\t}\n\t\n\t\n\tprivate function __markDirty (isVertex:Bool, index:Int, count:Int):Void {\n\t\t\n\t\tif (isVertex) {\n\t\t\t\n\t\t\t__vertexUniformMap.markDirty (index, count);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__fragmentUniformMap.markDirty (index, count);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __setPositionScale (positionScale:Float32Array):Void {\n\t\t\n\t\tif (__positionScale != null) {\n\t\t\t\n\t\t\tGLProgram3D.setPositionScale (this, __context.__renderSession, positionScale);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function __setSamplerState (sampler:Int, state:SamplerState):Void {\n\t\t\n\t\t__samplerStates[sampler] = state;\n\t\t\n\t}\n\t\n\t\n\tprivate function __use ():Void {\n\t\t\n\t\tGLProgram3D.use (this, __context.__renderSession);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:dox(hide) @:noCompletion class Uniform {\n\t\n\t\n\tpublic var name:String;\n\tpublic var location:GLUniformLocation;\n\tpublic var type:Int;\n\tpublic var size:Int;\n\tpublic var regData:Float32Array;\n\tpublic var regIndex:Int;\n\tpublic var regCount:Int;\n\tpublic var isDirty:Bool;\n\t\n\tpublic var gl:GLRenderContext;\n\tpublic var regDataPointer:BytePointer;\n\t\n\t\n\tpublic function new (gl:GLRenderContext) {\n\t\t\n\t\tthis.gl = gl;\n\t\t\n\t\tisDirty = true;\n\t\tregDataPointer = new BytePointer ();\n\t\t\n\t}\n\t\n\t\n\tpublic function flush ():Void {\n\t\t\n\t\tGLProgram3D.flushUniform (this, gl);\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:dox(hide) @:noCompletion class UniformMap {\n\t\n\t\n\t// TODO: it would be better to use a bitmask with a dirty bit per uniform, but not super important now\n\t\n\tprivate var __allDirty:Bool;\n\tprivate var __anyDirty:Bool;\n\tprivate var __registerLookup:Vector<Uniform>;\n\tprivate var __uniforms:Array<Uniform>;\n\t\n\t\n\tpublic function new (list:Array<Uniform>) {\n\t\t\n\t\t__uniforms = list;\n\t\t\n\t\t__uniforms.sort (function (a, b):Int {\n\t\t\t\n\t\t\treturn Reflect.compare (a.regIndex, b.regIndex);\n\t\t\t\n\t\t});\n\t\t\n\t\tvar total = 0;\n\t\t\n\t\tfor (uniform in __uniforms) {\n\t\t\t\n\t\t\tif (uniform.regIndex + uniform.regCount > total) {\n\t\t\t\t\n\t\t\t\ttotal = uniform.regIndex + uniform.regCount;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__registerLookup = new Vector<Uniform> (total);\n\t\t\n\t\tfor (uniform in __uniforms) {\n\t\t\t\n\t\t\tfor (i in 0...uniform.regCount) {\n\t\t\t\t\n\t\t\t\t__registerLookup[uniform.regIndex + i] = uniform;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__anyDirty = __allDirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function flush ():Void {\n\t\t\n\t\tif (__anyDirty) {\n\t\t\t\n\t\t\tfor (uniform in __uniforms) {\n\t\t\t\t\n\t\t\t\tif (__allDirty || uniform.isDirty) {\n\t\t\t\t\t\n\t\t\t\t\tuniform.flush ();\n\t\t\t\t\tuniform.isDirty = false;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__anyDirty = __allDirty = false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function markAllDirty ():Void {\n\t\t\n\t\t__allDirty = true;\n\t\t__anyDirty = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function markDirty (start:Int, count:Int):Void {\n\t\t\n\t\tif (__allDirty) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar end = start + count;\n\t\t\n\t\tif (end > __registerLookup.length) {\n\t\t\t\n\t\t\tend = __registerLookup.length;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar index = start;\n\t\t\n\t\twhile (index < end) {\n\t\t\t\n\t\t\tvar uniform = __registerLookup[index];\n\t\t\t\n\t\t\tif (uniform != null) {\n\t\t\t\t\n\t\t\t\tuniform.isDirty = true;\n\t\t\t\t__anyDirty = true;\n\t\t\t\t\n\t\t\t\tindex = uniform.regIndex + uniform.regCount;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tindex ++;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl.display3D;\n\n\nimport haxe.io.Bytes;\nimport lime.graphics.opengl.GL;\nimport lime.graphics.opengl.GLBuffer;\nimport lime.utils.ArrayBufferView;\nimport lime.utils.Float32Array;\nimport openfl._internal.stage3D.opengl.GLVertexBuffer3D;\nimport openfl.utils.ByteArray;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.Context3D)\n\n\nclass VertexBuffer3D {\n\t\n\t\n\tprivate var __context:Context3D;\n\tprivate var __data:Vector<Float>;\n\tprivate var __id:GLBuffer;\n\tprivate var __memoryUsage:Int;\n\tprivate var __numVertices:Int;\n\tprivate var __stride:Int;\n\tprivate var __tempFloat32Array:Float32Array;\n\tprivate var __usage:Int;\n\tprivate var __vertexSize:Int;\n\t\n\t\n\tprivate function new (context3D:Context3D, numVertices:Int, dataPerVertex:Int, bufferUsage:String) {\n\t\t\n\t\t__context = context3D;\n\t\t__numVertices = numVertices;\n\t\t__vertexSize = dataPerVertex;\n\t\t\n\t\tGLVertexBuffer3D.create (this, __context.__renderSession, bufferUsage);\n\t\t\n\t}\n\t\n\t\n\tpublic function dispose ():Void {\n\t\t\n\t\tGLVertexBuffer3D.dispose (this, __context.__renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromByteArray (data:ByteArray, byteArrayOffset:Int, startVertex:Int, numVertices:Int):Void {\n\t\t\n\t\tGLVertexBuffer3D.uploadFromByteArray (this, __context.__renderSession, data, byteArrayOffset, startVertex, numVertices);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromTypedArray (data:ArrayBufferView, byteLength: Int = -1):Void {\n\t\t\n\t\tGLVertexBuffer3D.uploadFromTypedArray (this, __context.__renderSession, data);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromVector (data:Vector<Float>, startVertex:Int, numVertices:Int):Void {\n\t\t\n\t\tGLVertexBuffer3D.uploadFromVector (this, __context.__renderSession, data, startVertex, numVertices);\n\t\t\n\t}\n\t\n\t\n}","package openfl.display3D.textures;\n\n\nimport lime.graphics.GLRenderContext;\nimport lime.graphics.Image;\nimport lime.graphics.opengl.GLTexture;\nimport openfl._internal.stage3D.opengl.GLTextureBase;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.display.BitmapData;\nimport openfl.events.EventDispatcher;\nimport openfl.errors.IllegalOperationError;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.Context3D)\n\n\nclass TextureBase extends EventDispatcher {\n\t\n\t\n\tprivate var __alphaTexture:Texture;\n\t// private var __compressedMemoryUsage:Int;\n\tprivate var __context:Context3D;\n\tprivate var __format:Int;\n\tprivate var __height:Int;\n\tprivate var __internalFormat:Int;\n\t// private var __memoryUsage:Int;\n\tprivate var __optimizeForRenderToTexture:Bool;\n\t// private var __outputTextureMemoryUsage:Bool = false;\n\tprivate var __samplerState:SamplerState;\n\tprivate var __streamingLevels:Int;\n\tprivate var __textureContext:GLRenderContext;\n\tprivate var __textureID:GLTexture;\n\tprivate var __textureTarget:Int;\n\tprivate var __width:Int;\n\t\n\t\n\tprivate function new (context:Context3D) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__context = context;\n\t\t//__textureTarget = target;\n\t\t\n\t\tGLTextureBase.create (this, __context.__renderSession);\n\t\t\n\t\t// __memoryUsage = 0;\n\t\t// __compressedMemoryUsage = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function dispose ():Void {\n\t\t\n\t\tGLTextureBase.dispose (this, __context.__renderSession);\n\t\t\n\t}\n\t\n\t\n\tprivate function __getImage (bitmapData:BitmapData):Image {\n\t\t\n\t\treturn GLTextureBase.getImage (this, __context.__renderSession, bitmapData);\n\t\t\n\t}\n\t\n\t\n\tprivate function __getTexture ():GLTexture {\n\t\t\n\t\treturn __textureID;\n\t\t\n\t}\n\t\n\t\n\tprivate function __setSamplerState (state:SamplerState):Void {\n\t\t\n\t\tGLTextureBase.setSamplerState (this, __context.__renderSession, state);\n\t\t\n\t}\n\t\n\t\n\t// private function __trackCompressedMemoryUsage (memory:Int):Void {\n\t\t\n\t// \tif (__compressedMemoryUsage == 0) {\n\t\t\t\n\t// \t\t__context.__statsIncrement (Context3D.Context3DTelemetry.COUNT_TEXTURE_COMPRESSED);\n\t\t\t\n\t// \t}\n\t\t\n\t// \t__compressedMemoryUsage += memory;\n\t// \tvar currentCompressedMemory = __context.__statsAdd (Context3D.Context3DTelemetry.MEM_TEXTURE_COMPRESSED, memory);\n\t\t\n\t// \t#if debug\n\t// \tif (__outputTextureMemoryUsage) {\n\t\t\t\n\t// \t\ttrace (\" + Texture Compressed GPU Memory (+\" + memory + \") - Current Compressed Memory : \" + currentCompressedMemory);\n\t\t\t\n\t// \t}\n\t// \t#end\n\t\t\n\t// \t__trackMemoryUsage (memory);\n\t\t\n\t// }\n\t\n\t\n\t// private function __trackMemoryUsage (memory:Int):Void {\n\t\t\n\t// \tif (__memoryUsage == 0) {\n\t\t\t\n\t// \t\t__context.__statsIncrement (Context3D.Context3DTelemetry.COUNT_TEXTURE);\n\t\t\t\n\t// \t}\n\t\t\n\t// \t__memoryUsage += memory;\n\t// \tvar currentMemory = __context.__statsAdd (Context3D.Context3DTelemetry.MEM_TEXTURE, memory);\n\t\t\n\t// \t#if debug\n\t// \tif (__outputTextureMemoryUsage) {\n\t\t\t\n\t// \t\ttrace (\" + Texture GPU Memory (+\" + memory + \") - Current Memory : \" + currentMemory);\n\t\t\t\n\t// \t}\n\t// \t#end\n\t\t\n\t// }\n\t\n\t\n}","package openfl.display3D.textures;\n\n\nimport haxe.Timer;\nimport lime.utils.ArrayBufferView;\nimport openfl._internal.stage3D.opengl.GLCubeTexture;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.display.BitmapData;\nimport openfl.events.Event;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.Context3D)\n\n\n@:final class CubeTexture extends TextureBase {\n\t\n\t\n\tprivate var __size:Int;\n\tprivate var __uploadedSides:Int;\n\t\n\t\n\tprivate function new (context:Context3D, size:Int, format:Context3DTextureFormat, optimizeForRenderToTexture:Bool, streamingLevels:Int) {\n\t\t\n\t\tsuper (context);\n\t\t\n\t\t__size = size;\n\t\t//__format = format;\n\t\t__optimizeForRenderToTexture = optimizeForRenderToTexture;\n\t\t__streamingLevels = streamingLevels;\n\t\t\n\t\tGLCubeTexture.create (this, __context.__renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadCompressedTextureFromByteArray (data:ByteArray, byteArrayOffset:UInt, async:Bool = false):Void {\n\t\t\n\t\tif (!async) {\n\t\t\t\n\t\t\tGLCubeTexture.uploadCompressedTextureFromByteArray (this, __context.__renderSession, data, byteArrayOffset);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tTimer.delay (function () {\n\t\t\t\t\n\t\t\t\tGLCubeTexture.uploadCompressedTextureFromByteArray (this, __context.__renderSession, data, byteArrayOffset);\n\t\t\t\tdispatchEvent (new Event (Event.TEXTURE_READY));\n\t\t\t\t\n\t\t\t}, 1);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromBitmapData (source:BitmapData, side:UInt, miplevel:UInt = 0, generateMipmap:Bool = false):Void {\n\t\t\n\t\tif (source == null) return;\n\t\tGLCubeTexture.uploadFromBitmapData (this, __context.__renderSession, source, side, miplevel, generateMipmap);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromByteArray (data:ByteArray, byteArrayOffset:UInt, side:UInt, miplevel:UInt = 0):Void {\n\t\t\n\t\tGLCubeTexture.uploadFromByteArray (this, __context.__renderSession, data, byteArrayOffset, side, miplevel);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromTypedArray (data:ArrayBufferView, side:UInt, miplevel:UInt = 0):Void {\n\t\t\n\t\tif (data == null) return;\n\t\tGLCubeTexture.uploadFromTypedArray (this, __context.__renderSession, data, side, miplevel);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __setSamplerState (state:SamplerState) {\n\t\t\n\t\tGLCubeTexture.setSamplerState (this, __context.__renderSession, state);\n\t\t\n\t}\n\t\n\t\n}","package openfl.display3D.textures;\n\n\nimport lime.utils.ArrayBufferView;\nimport openfl._internal.stage3D.opengl.GLRectangleTexture;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.display.BitmapData;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.Context3D)\n\n\n@:final class RectangleTexture extends TextureBase {\n\t\n\t\n\tprivate function new (context:Context3D, width:Int, height:Int, format:String, optimizeForRenderToTexture:Bool) {\n\t\t\n\t\tsuper (context);\n\t\t\n\t\t__width = width;\n\t\t__height = height;\n\t\t//__format = format;\n\t\t__optimizeForRenderToTexture = optimizeForRenderToTexture;\n\t\t\n\t\tGLRectangleTexture.create (this, __context.__renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromBitmapData (source:BitmapData):Void {\n\t\t\n\t\tGLRectangleTexture.uploadFromBitmapData (this, __context.__renderSession, source);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromByteArray (data:ByteArray, byteArrayOffset:UInt):Void {\n\t\t\n\t\tGLRectangleTexture.uploadFromByteArray (this, __context.__renderSession, data, byteArrayOffset);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromTypedArray (data:ArrayBufferView):Void {\n\t\t\n\t\tGLRectangleTexture.uploadFromTypedArray (this, __context.__renderSession, data);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __setSamplerState (state:SamplerState) {\n\t\t\n\t\tGLRectangleTexture.setSamplerState (this, __context.__renderSession, state);\n\t\t\n\t}\n\t\n\t\n}","package openfl.display3D.textures;\n\n\nimport haxe.Timer;\nimport lime.graphics.opengl.GL;\nimport lime.utils.ArrayBufferView;\nimport openfl._internal.stage3D.opengl.GLTexture;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl._internal.stage3D.SamplerState;\nimport openfl.display.BitmapData;\nimport openfl.events.Event;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.Context3D)\n\n\n@:final class Texture extends TextureBase {\n\t\n\t\n\tprivate static var __lowMemoryMode:Bool = false;\n\t\n\t\n\tprivate function new (context:Context3D, width:Int, height:Int, format:Context3DTextureFormat, optimizeForRenderToTexture:Bool, streamingLevels:Int) {\n\t\t\n\t\tsuper (context);\n\t\t\n\t\t__width = width;\n\t\t__height = height;\n\t\t//__format = format;\n\t\t__optimizeForRenderToTexture = optimizeForRenderToTexture;\n\t\t__streamingLevels = streamingLevels;\n\t\t\n\t\tGLTexture.create (this, __context.__renderSession);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadCompressedTextureFromByteArray (data:ByteArray, byteArrayOffset:UInt, async:Bool = false):Void {\n\t\t\n\t\tif (!async) {\n\t\t\t\n\t\t\tGLTexture.uploadCompressedTextureFromByteArray (this, __context.__renderSession, data, byteArrayOffset);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tTimer.delay (function () {\n\t\t\t\t\n\t\t\t\tGLTexture.uploadCompressedTextureFromByteArray (this, __context.__renderSession, data, byteArrayOffset);\n\t\t\t\tdispatchEvent (new Event (Event.TEXTURE_READY));\n\t\t\t\t\n\t\t\t}, 1);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromBitmapData (source:BitmapData, miplevel:UInt = 0, generateMipmap:Bool = false):Void {\n\t\t\n\t\tGLTexture.uploadFromBitmapData (this, __context.__renderSession, source, miplevel, generateMipmap);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromByteArray (data:ByteArray, byteArrayOffset:UInt, miplevel:UInt = 0):Void {\n\t\t\n\t\tGLTexture.uploadFromByteArray (this, __context.__renderSession, data, byteArrayOffset, miplevel);\n\t\t\n\t}\n\t\n\t\n\tpublic function uploadFromTypedArray (data:ArrayBufferView, miplevel:UInt = 0):Void {\n\t\t\n\t\tGLTexture.uploadFromTypedArray (this, __context.__renderSession, data, miplevel);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __setSamplerState (state:SamplerState) {\n\t\t\n\t\tGLTexture.setSamplerState (this, __context.__renderSession, state);\n\t\t\n\t}\n\t\n\t\n}","package openfl.display3D.textures;\n\n\nimport haxe.Timer;\nimport lime.graphics.opengl.GLTexture;\nimport openfl._internal.stage3D.opengl.GLVideoTexture;\nimport openfl._internal.stage3D.GLUtils;\nimport openfl.events.Event;\nimport openfl.net.NetStream;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display3D.Context3D)\n@:access(openfl.net.NetStream)\n\n\n@:final class VideoTexture extends TextureBase {\n\t\n\t\n\tpublic var videoHeight (default, null):Int;\n\tpublic var videoWidth (default, null):Int;\n\t\n\tprivate var __netStream:NetStream;\n\t\n\t\n\tprivate function new (context:Context3D) {\n\t\t\n\t\tsuper (context);\n\t\t\n\t\tGLVideoTexture.create (this, __context.__renderSession);\n\t\t\n\t}\n\t\n\t\n\t//public function attachCamera (theCamera:Camera):Void {}\n\t\n\t\n\tpublic function attachNetStream (netStream:NetStream):Void {\n\t\t\n\t\t__netStream = netStream;\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tif (__netStream.__video.readyState == 4) {\n\t\t\t\n\t\t\tTimer.delay (function () {\n\t\t\t\t\n\t\t\t\t__textureReady ();\n\t\t\t\t\n\t\t\t}, 0);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__netStream.__video.addEventListener (\"canplay\", function (_) {\n\t\t\t\t\n\t\t\t\t__textureReady ();\n\t\t\t\t\n\t\t\t}, false);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getTexture ():GLTexture {\n\t\t\n\t\treturn GLVideoTexture.getTexture (this, __context.__renderSession);\n\t\t\n\t}\n\t\n\t\n\tprivate function __textureReady ():Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tvideoWidth = __netStream.__video.videoWidth;\n\t\tvideoHeight = __netStream.__video.videoHeight;\n\t\t\n\t\t#end\n\t\t\n\t\tdispatchEvent (new Event (Event.TEXTURE_READY));\n\t\t\n\t}\n\t\n\t\n}","package openfl.errors;\n\n\nimport haxe.CallStack;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Error #if openfl_dynamic implements Dynamic #end {\n\t\n\t\n\tprivate static inline var DEFAULT_TO_STRING = \"Error\";\n\t\n\tpublic var errorID (default, null):Int;\n\tpublic var message:String;\n\tpublic var name:String;\n\t\n\t\n\tpublic function new (message:String = \"\", id:Int = 0) {\n\t\t\n\t\tthis.message = message;\n\t\tthis.errorID = id;\n\t\tname = \"Error\";\n\t\t\n\t}\n\t\n\t\n\tpublic function getStackTrace ():String {\n\t\t\n\t\treturn CallStack.toString (CallStack.exceptionStack ());\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\tif (message != null) {\n\t\t\t\n\t\t\treturn message;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn DEFAULT_TO_STRING;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl.errors;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass ArgumentError extends Error {\n\t\n\t\n\tpublic function new (message:String = \"\") {\n\t\t\n\t\tsuper (message);\n\t\t\n\t\tname = \"ArgumentError\";\n\t\t\n\t}\n\t\n\t\n}","package openfl.errors;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass IOError extends Error {\n\t\n\t\n\tpublic function new (message:String = \"\") {\n\t\t\n\t\tsuper (message);\n\t\t\n\t\tname = \"IOError\";\n\t\t\n\t}\n\t\n\t\n}","package openfl.errors;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass EOFError extends IOError {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper (\"End of file was encountered\");\n\t\t\n\t\tname = \"EOFError\";\n\t\terrorID = 2030;\n\t\t\n\t}\n\t\n\t\n}","package openfl.errors;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass IllegalOperationError extends Error {\n\t\n\t\n\tpublic function new (message:String = \"\") {\n\t\t\n\t\tsuper (message, 0);\n\t\t\n\t\tname = \"IllegalOperationError\";\n\t\t\n\t}\n\t\n\t\n}","package openfl.errors;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass RangeError extends Error {\n\t\n\t\n\tpublic function new (message:String = \"\") {\n\t\t\n\t\tsuper (message, 0);\n\t\t\n\t\tname = \"RangeError\";\n\t\t\n\t}\n\t\n\t\n}","package openfl.errors;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass TypeError extends Error {\n\t\n\t\n\tpublic function new (message:String = \"\") {\n\t\t\n\t\tsuper (message, 0);\n\t\t\n\t\tname = \"TypeError\";\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nimport openfl.display.InteractiveObject;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Event {\n\t\n\t\n\tpublic static inline var ACTIVATE = \"activate\";\n\tpublic static inline var ADDED = \"added\";\n\tpublic static inline var ADDED_TO_STAGE = \"addedToStage\";\n\tpublic static inline var CANCEL = \"cancel\";\n\tpublic static inline var CHANGE = \"change\";\n\tpublic static inline var CLEAR = \"clear\";\n\tpublic static inline var CLOSE = \"close\";\n\tpublic static inline var COMPLETE = \"complete\";\n\tpublic static inline var CONNECT = \"connect\";\n\tpublic static inline var CONTEXT3D_CREATE = \"context3DCreate\";\n\tpublic static inline var COPY = \"copy\";\n\tpublic static inline var CUT = \"cut\";\n\tpublic static inline var DEACTIVATE = \"deactivate\";\n\tpublic static inline var ENTER_FRAME = \"enterFrame\";\n\tpublic static inline var EXIT_FRAME = \"exitFrame\";\n\tpublic static inline var FRAME_CONSTRUCTED = \"frameConstructed\";\n\tpublic static inline var FRAME_LABEL = \"frameLabel\";\n\tpublic static inline var FULLSCREEN = \"fullScreen\";\n\tpublic static inline var ID3 = \"id3\";\n\tpublic static inline var INIT = \"init\";\n\tpublic static inline var MOUSE_LEAVE = \"mouseLeave\";\n\tpublic static inline var OPEN = \"open\";\n\tpublic static inline var PASTE = \"paste\";\n\tpublic static inline var REMOVED = \"removed\";\n\tpublic static inline var REMOVED_FROM_STAGE = \"removedFromStage\";\n\tpublic static inline var RENDER = \"render\";\n\tpublic static inline var RESIZE = \"resize\";\n\tpublic static inline var SCROLL = \"scroll\";\n\tpublic static inline var SELECT = \"select\";\n\tpublic static inline var SELECT_ALL = \"selectAll\";\n\tpublic static inline var SOUND_COMPLETE = \"soundComplete\";\n\tpublic static inline var TAB_CHILDREN_CHANGE = \"tabChildrenChange\";\n\tpublic static inline var TAB_ENABLED_CHANGE = \"tabEnabledChange\";\n\tpublic static inline var TAB_INDEX_CHANGE = \"tabIndexChange\";\n\tpublic static inline var TEXTURE_READY = \"textureReady\";\n\tpublic static inline var UNLOAD = \"unload\";\n\t\n\tpublic var bubbles (default, null):Bool;\n\tpublic var cancelable (default, null):Bool;\n\tpublic var currentTarget (default, null):IEventDispatcher;\n\tpublic var eventPhase (default, null):EventPhase;\n\tpublic var target (default, null):IEventDispatcher;\n\tpublic var type (default, null):String;\n\t\n\tprivate var __isCanceled:Bool;\n\tprivate var __isCanceledNow:Bool;\n\tprivate var __preventDefault:Bool;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false) {\n\t\t\n\t\tthis.type = type;\n\t\tthis.bubbles = bubbles;\n\t\tthis.cancelable = cancelable;\n\t\teventPhase = EventPhase.AT_TARGET;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Event {\n\t\t\n\t\tvar event = new Event (type, bubbles, cancelable);\n\t\tevent.eventPhase = eventPhase;\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic function formatToString (className:String, ?p1:String, ?p2:String, ?p3:String, ?p4:String, ?p5:String):String {\n\t\t\n\t\tvar parameters = [];\n\t\tif (p1 != null) parameters.push (p1);\n\t\tif (p2 != null) parameters.push (p2);\n\t\tif (p3 != null) parameters.push (p3);\n\t\tif (p4 != null) parameters.push (p4);\n\t\tif (p5 != null) parameters.push (p5);\n\t\t\n\t\treturn Reflect.callMethod (this, __formatToString, [ className, parameters ]);\n\t\t\n\t}\n\t\n\t\n\tpublic function isDefaultPrevented ():Bool {\n\t\t\n\t\treturn __preventDefault;\n\t\t\n\t}\n\t\n\t\n\tpublic function preventDefault ():Void {\n\t\t\n\t\tif (cancelable) {\n\t\t\t\n\t\t\t__preventDefault = true;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function stopImmediatePropagation ():Void {\n\t\t\n\t\t__isCanceled = true;\n\t\t__isCanceledNow = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function stopPropagation ():Void {\n\t\t\n\t\t__isCanceled = true;\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn __formatToString (\"Event\",  [ \"type\", \"bubbles\", \"cancelable\" ]);\n\t\t\n\t}\n\t\n\t\n\tprivate function __formatToString (className:String, parameters:Array<String>):String {\n\t\t\n\t\t// TODO: Make this a macro function, and handle at compile-time, with rest parameters?\n\t\t\n\t\tvar output = '[$className';\n\t\tvar arg:Dynamic = null;\n\t\t\n\t\tfor (param in parameters) {\n\t\t\t\n\t\t\targ = Reflect.field (this, param);\n\t\t\t\n\t\t\tif (Std.is (arg, String)) {\n\t\t\t\t\n\t\t\t\toutput += ' $param=\"$arg\"';\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\toutput += ' $param=$arg';\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\toutput += \"]\";\n\t\treturn output;\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nclass ActivityEvent extends Event {\n\t\n\t\n\tpublic static inline var ACTIVITY = \"activity\";\n\t\n\tpublic var activating:Bool;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, activating:Bool = false) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.activating = activating;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new ActivityEvent (type, bubbles, cancelable, activating);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"ActivityEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"activating\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nclass TextEvent extends Event {\n\t\n\t\n\tpublic static inline var LINK = \"link\";\n\tpublic static inline var TEXT_INPUT = \"textInput\";\n\t\n\tpublic var text:String;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = \"\") {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.text = text;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new TextEvent (type, bubbles, cancelable, text);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"TextEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"text\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nclass ErrorEvent extends TextEvent {\n\t\n\t\n\tpublic static inline var ERROR = \"error\";\n\t\n\tpublic var errorID (default, null):Int;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = \"\", id:Int = 0):Void {\n\t\t\n\t\tsuper (type, bubbles, cancelable, text);\n\t\terrorID = id;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new ErrorEvent (type, bubbles, cancelable, text, errorID);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"ErrorEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"text\", \"errorID\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nimport openfl.display.InteractiveObject;\n\n\nclass FocusEvent extends Event {\n\t\n\t\n\tpublic static inline var FOCUS_IN = \"focusIn\";\n\tpublic static inline var FOCUS_OUT = \"focusOut\";\n\tpublic static inline var KEY_FOCUS_CHANGE = \"keyFocusChange\";\n\tpublic static inline var MOUSE_FOCUS_CHANGE = \"mouseFocusChange\";\n\t\n\tpublic var keyCode:Int;\n\tpublic var relatedObject:InteractiveObject;\n\tpublic var shiftKey:Bool;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, relatedObject:InteractiveObject = null, shiftKey:Bool = false, keyCode:Int = 0) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.keyCode = keyCode;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.relatedObject = relatedObject;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new FocusEvent (type, bubbles, cancelable, relatedObject, shiftKey, keyCode);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"FocusEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"relatedObject\", \"shiftKey\", \"keyCode\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nclass FullScreenEvent extends ActivityEvent {\n\t\n\t\n\tpublic static inline var FULL_SCREEN = \"fullScreen\";\n\tpublic static inline var FULL_SCREEN_INTERACTIVE_ACCEPTED = \"fullScreenInteractiveAccepted\";\n\t\n\tpublic var fullScreen:Bool;\n\tpublic var interactive:Bool;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, fullScreen:Bool = false, interactive:Bool = false) {\n\t\t\n\t\t// TODO: What is the \"activating\" value supposed to be?\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.fullScreen = fullScreen;\n\t\tthis.interactive = interactive;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new FullScreenEvent (type, bubbles, cancelable, fullScreen, interactive);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"FullscreenEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"fullscreen\", \"interactive\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nimport openfl.ui.GameInputDevice;\n\n\n@:final class GameInputEvent extends Event {\n\t\n\t\n\tpublic static inline var DEVICE_ADDED = \"deviceAdded\";\n\tpublic static inline var DEVICE_REMOVED = \"deviceRemoved\";\n\tpublic static inline var DEVICE_UNUSABLE = \"deviceUnusable\";\n\t\n\tpublic var device (default, null):GameInputDevice;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = false, device:GameInputDevice = null) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.device = device;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new GameInputEvent (type, bubbles, cancelable, device);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"GameInputEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"device\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nimport openfl.net.URLRequestHeader;\n\n\nclass HTTPStatusEvent extends Event {\n\t\n\t\n\tpublic static inline var HTTP_RESPONSE_STATUS = \"httpResponseStatus\";\n\tpublic static inline var HTTP_STATUS = \"httpStatus\";\n\t\n\tpublic var redirected:Bool;\n\tpublic var responseHeaders:Array<URLRequestHeader>;\n\tpublic var responseURL:String;\n\tpublic var status (default, null):Int;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, status:Int = 0, redirected:Bool = false):Void {\n\t\t\n\t\tthis.status = status;\n\t\tthis.redirected = redirected;\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new HTTPStatusEvent (type, bubbles, status, redirected);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"HTTPStatusEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"status\", \"redirected\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nclass IOErrorEvent extends ErrorEvent {\n\t\n\t\n\tpublic static inline var IO_ERROR = \"ioError\";\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = false, text:String = \"\", id:Int = 0) {\n\t\t\n\t\tsuper (type, bubbles, cancelable, text, id);\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new IOErrorEvent (type, bubbles, cancelable, text, errorID);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"IOErrorEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"text\", \"errorID\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nimport openfl.ui.KeyLocation;\n\n\nclass KeyboardEvent extends Event {\n\t\n\t\n\tpublic static inline var KEY_DOWN = \"keyDown\";\n\tpublic static inline var KEY_UP = \"keyUp\";\n\t\n\tpublic var altKey:Bool;\n\tpublic var charCode:Int;\n\tpublic var ctrlKey:Bool;\n\tpublic var commandKey:Bool;\n\tpublic var controlKey:Bool;\n\tpublic var keyCode:Int;\n\tpublic var keyLocation:KeyLocation;\n\tpublic var shiftKey:Bool;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, charCodeValue:Int = 0, keyCodeValue:Int = 0, keyLocationValue:KeyLocation = null, ctrlKeyValue:Bool = false, altKeyValue:Bool = false, shiftKeyValue:Bool = false, controlKeyValue:Bool = false, commandKeyValue:Bool = false) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tcharCode = charCodeValue;\n\t\tkeyCode = keyCodeValue;\n\t\tkeyLocation = keyLocationValue != null ? keyLocationValue : KeyLocation.STANDARD;\n\t\tctrlKey = ctrlKeyValue;\n\t\taltKey = altKeyValue;\n\t\tshiftKey = shiftKeyValue;\n\t\tcontrolKey = controlKeyValue;\n\t\tcommandKey = commandKeyValue;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new KeyboardEvent (type, bubbles, cancelable, charCode, keyCode, keyLocation, ctrlKey, altKey, shiftKey, controlKey, commandKey);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"KeyboardEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"charCode\", \"keyCode\", \"keyLocation\", \"ctrlKey\", \"altKey\", \"shiftKey\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nimport openfl.display.InteractiveObject;\nimport openfl.geom.Point;\n\n\nclass MouseEvent extends Event {\n\t\n\t\n\tpublic static inline var CLICK = \"click\";\n\tpublic static inline var DOUBLE_CLICK = \"doubleClick\";\n\tpublic static inline var MIDDLE_CLICK = \"middleClick\";\n\tpublic static inline var MIDDLE_MOUSE_DOWN = \"middleMouseDown\";\n\tpublic static inline var MIDDLE_MOUSE_UP = \"middleMouseUp\";\n\tpublic static inline var MOUSE_DOWN = \"mouseDown\";\n\tpublic static inline var MOUSE_MOVE = \"mouseMove\";\n\tpublic static inline var MOUSE_OUT = \"mouseOut\";\n\tpublic static inline var MOUSE_OVER = \"mouseOver\";\n\tpublic static inline var MOUSE_UP = \"mouseUp\";\n\tpublic static inline var MOUSE_WHEEL = \"mouseWheel\";\n\tpublic static inline var RELEASE_OUTSIDE = \"releaseOutside\";\n\tpublic static inline var RIGHT_CLICK = \"rightClick\";\n\tpublic static inline var RIGHT_MOUSE_DOWN = \"rightMouseDown\";\n\tpublic static inline var RIGHT_MOUSE_UP = \"rightMouseUp\";\n\tpublic static inline var ROLL_OUT = \"rollOut\";\n\tpublic static inline var ROLL_OVER = \"rollOver\";\n\t\n\tprivate static var __altKey:Bool;\n\tprivate static var __buttonDown:Bool;\n\tprivate static var __commandKey:Bool;\n\tprivate static var __ctrlKey:Bool;\n\tprivate static var __shiftKey:Bool;\n\t\n\tpublic var altKey:Bool;\n\tpublic var buttonDown:Bool;\n\tpublic var commandKey:Bool;\n\tpublic var clickCount:Int;\n\tpublic var ctrlKey:Bool;\n\tpublic var delta:Int;\n\tpublic var isRelatedObjectInaccessible:Bool;\n\tpublic var localX:Float;\n\tpublic var localY:Float;\n\tpublic var relatedObject:InteractiveObject;\n\tpublic var shiftKey:Bool;\n\tpublic var stageX:Float;\n\tpublic var stageY:Float;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = false, localX:Float = 0, localY:Float = 0, relatedObject:InteractiveObject = null, ctrlKey:Bool = false, altKey:Bool = false, shiftKey:Bool = false, buttonDown:Bool = false, delta:Int = 0, commandKey:Bool = false, clickCount:Int = 0) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.bubbles = bubbles;\n\t\tthis.relatedObject = relatedObject;\n\t\tthis.delta = delta;\n\t\tthis.localX = localX;\n\t\tthis.localY = localY;\n\t\tthis.buttonDown = buttonDown;\n\t\tthis.commandKey = commandKey;\n\t\tthis.clickCount = clickCount;\n\t\t\n\t\tisRelatedObjectInaccessible = false;\n\t\tstageX = Math.NaN;\n\t\tstageY = Math.NaN;\n\t\t\n\t}\n\t\n\t\n\tpublic static function __create (type:String, button:Int, stageX:Float, stageY:Float, local:Point, target:InteractiveObject, delta:Int = 0):MouseEvent {\n\t\t\n\t\tvar event = new MouseEvent (type, true, false, local.x, local.y, null, __ctrlKey, __altKey, __shiftKey, __buttonDown, delta, __commandKey);\n\t\tevent.stageX = stageX;\n\t\tevent.stageY = stageY;\n\t\tevent.target = target;\n\t\t\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new MouseEvent (type, bubbles, cancelable, localX, localY, relatedObject, ctrlKey, altKey, shiftKey, buttonDown, delta, commandKey, clickCount);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"MouseEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"localX\", \"localY\", \"relatedObject\", \"ctrlKey\", \"altKey\", \"shiftKey\", \"buttonDown\", \"delta\" ]);\n\t\t\n\t}\n\t\n\t\n\tpublic function updateAfterEvent ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nclass NetStatusEvent extends Event {\n\t\n\t\n\tpublic static inline var NET_STATUS = \"netStatus\";\n\t\n\tpublic var info:Dynamic;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, info:Dynamic = null):Void {\n\t\t\n\t\tthis.info = info;\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new NetStatusEvent (type, bubbles, cancelable, info);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"NetStatusEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"info\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nclass ProgressEvent extends Event {\n\t\n\t\n\tpublic static inline var PROGRESS = \"progress\";\n\tpublic static inline var SOCKET_DATA = \"socketData\";\n\t\n\tpublic var bytesLoaded:Float;\n\tpublic var bytesTotal:Float;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, bytesLoaded:Float = 0, bytesTotal:Float = 0) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.bytesLoaded = bytesLoaded;\n\t\tthis.bytesTotal = bytesTotal;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new ProgressEvent (type, bubbles, cancelable, bytesLoaded, bytesTotal);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"ProgressEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"bytesLoaded\", \"bytesTotal\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nclass SecurityErrorEvent extends ErrorEvent {\n\t\n\t\n\tpublic static inline var SECURITY_ERROR = \"securityError\";\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = false, cancelable:Bool = false, text:String = \"\", id:Int = 0) {\n\t\t\n\t\tsuper (type, bubbles, cancelable, text, id);\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new SecurityErrorEvent (type, bubbles, cancelable, text, errorID);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"SecurityErrorEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"text\", \"errorID\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nimport openfl.display.InteractiveObject;\nimport openfl.geom.Point;\nimport openfl.utils.ByteArray;\n\n\nclass TouchEvent extends Event {\n\t\n\t\n\tpublic static inline var TOUCH_BEGIN = \"touchBegin\";\n\tpublic static inline var TOUCH_END = \"touchEnd\";\n\tpublic static inline var TOUCH_MOVE = \"touchMove\";\n\tpublic static inline var TOUCH_OUT = \"touchOut\";\n\tpublic static inline var TOUCH_OVER = \"touchOver\";\n\tpublic static inline var TOUCH_ROLL_OUT = \"touchRollOut\";\n\tpublic static inline var TOUCH_ROLL_OVER = \"touchRollOver\";\n\tpublic static inline var TOUCH_TAP = \"touchTap\";\n\t\n\tpublic var altKey:Bool;\n\tpublic var commandKey:Bool;\n\tpublic var controlKey:Bool;\n\tpublic var ctrlKey:Bool;\n\tpublic var delta:Int;\n\tpublic var isPrimaryTouchPoint:Bool;\n\tpublic var localX:Float;\n\tpublic var localY:Float;\n\tpublic var pressure:Float;\n\tpublic var relatedObject:InteractiveObject;\n\tpublic var shiftKey:Bool;\n\tpublic var sizeX:Float;\n\tpublic var sizeY:Float;\n\tpublic var stageX:Float;\n\tpublic var stageY:Float;\n\tpublic var touchPointID:Int;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = false, touchPointID:Int = 0, isPrimaryTouchPoint:Bool = false, localX:Float = 0, localY:Float = 0, sizeX:Float = 0, sizeY:Float = 0, pressure:Float = 0, relatedObject:InteractiveObject = null, ctrlKey:Bool = false, altKey:Bool = false, shiftKey:Bool = false, commandKey:Bool = false, controlKey:Bool = false, timestamp:Float = 0, touchIntent:String = null, samples:ByteArray = null, isTouchPointCanceled:Bool = false) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.touchPointID = touchPointID;\n\t\tthis.isPrimaryTouchPoint = isPrimaryTouchPoint;\n\t\tthis.localX = localX;\n\t\tthis.localY = localY;\n\t\tthis.sizeX = sizeX;\n\t\tthis.sizeY = sizeY;\n\t\tthis.pressure = pressure;\n\t\tthis.relatedObject = relatedObject;\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.altKey = altKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.commandKey = commandKey;\n\t\tthis.controlKey = controlKey;\n\t\t\n\t\tstageX = Math.NaN;\n\t\tstageY = Math.NaN;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new TouchEvent (type, bubbles, cancelable, touchPointID, isPrimaryTouchPoint, localX, localY, sizeX, sizeY, pressure, relatedObject, ctrlKey, altKey, shiftKey, commandKey, controlKey);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"TouchEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"touchPointID\", \"isPrimaryTouchPoint\", \"localX\", \"localY\", \"sizeX\", \"sizeY\", \"pressure\", \"relatedObject\", \"ctrlKey\", \"altKey\", \"shiftKey\", \"commandKey\", \"controlKey\" ]);\n\t\t\n\t}\n\t\n\t\n\tpublic function updateAfterEvent ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic static function __create (type:String, /*event:lime.ui.TouchEvent,*/ touch:Dynamic /*js.html.Touch*/, stageX:Float, stageY:Float, local:Point, target:InteractiveObject):TouchEvent {\n\t\t\n\t\tvar evt = new TouchEvent (type, true, false, 0, true, local.x, local.y, 1, 1, 1);\n\t\tevt.stageX = stageX;\n\t\tevt.stageY = stageY;\n\t\tevt.target = target;\n\t\t\n\t\treturn evt;\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nclass UncaughtErrorEvent extends ErrorEvent {\n\t\n\t\n\tpublic static inline var UNCAUGHT_ERROR = \"uncaughtError\";\n\t\n\tpublic var error (default, null):Dynamic;\n\t\n\t\n\tpublic function new (type:String, bubbles:Bool = true, cancelable:Bool = true, error:Dynamic = null) {\n\t\t\n\t\tsuper (type, bubbles, cancelable);\n\t\t\n\t\tthis.error = error;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():Event {\n\t\t\n\t\tvar event = new UncaughtErrorEvent (type, bubbles, cancelable, error);\n\t\tevent.target = target;\n\t\tevent.currentTarget = currentTarget;\n\t\tevent.eventPhase = eventPhase;\n\t\treturn event;\n\t\t\n\t}\n\t\n\t\n\tpublic override function toString ():String {\n\t\t\n\t\treturn __formatToString (\"UncaughtErrorEvent\",  [ \"type\", \"bubbles\", \"cancelable\", \"error\" ]);\n\t\t\n\t}\n\t\n\t\n}","package openfl.events;\n\n\nclass UncaughtErrorEvents extends EventDispatcher {\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t}\n\t\n\t\n}","package openfl.external;\n\n\nimport openfl._internal.Lib;\n\n@:access(openfl.display.Stage)\n@:access(lime.ui.Window)\n\n\n@:final class ExternalInterface {\n\t\n\t\n\tpublic static var available (default, null) = #if (js && html5) true #else false #end;\n\tpublic static var marshallExceptions = false;\n\tpublic static var objectID (default, null):String;\n\t\n\t\n\tpublic static function addCallback (functionName:String, closure:Dynamic):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (Lib.application.window.backend.element != null) {\n\t\t\t\n\t\t\tuntyped Lib.application.window.backend.element[functionName] = closure;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function call (functionName:String, ?p1:Dynamic, ?p2:Dynamic, ?p3:Dynamic, ?p4:Dynamic, ?p5:Dynamic):Dynamic {\n\t\t\n\t\t#if (js && html5)\n\t\tvar callResponse:Dynamic = null;\n\t\t\n\t\tif (!~/^\\(.+\\)$/.match(functionName)) {\n\t\t\tvar thisArg = functionName.split('.').slice(0, -1).join('.');\n\t\t\tif (thisArg.length > 0) {\n\t\t\t\tfunctionName += '.bind(${thisArg})';\n\t\t\t}\n\t\t}\n\n\t\t// Flash does not throw an error or attempt to execute\n\t\t// if the function does not exist.\n\t\tvar fn:Dynamic;\n\t\ttry {\n\n\t\t\tfn = js.Lib.eval (functionName);\n\n\t\t} catch (e:Dynamic) {\n\n\t\t\treturn null;\n\n\t\t}\n\t\tif (Type.ValueType.TFunction != Type.typeof(fn)) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif (p1 == null) {\n\t\t\t\n\t\t\tcallResponse = fn ();\n\t\t\t\n\t\t} else if (p2 == null) {\n\t\t\t\n\t\t\tcallResponse = fn (p1);\n\t\t\t\n\t\t} else if (p3 == null) {\n\t\t\t\n\t\t\tcallResponse = fn (p1, p2);\n\t\t\t\n\t\t} else if (p4 == null) {\n\t\t\t\n\t\t\tcallResponse = fn (p1, p2, p3);\n\t\t\t\n\t\t} else if (p5 == null) {\n\t\t\t\n\t\t\tcallResponse = fn (p1, p2, p3, p4);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tcallResponse = fn (p1, p2, p3, p4, p5);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn callResponse;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n}\n","package openfl.filters;\n\n\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.BitmapData;\nimport openfl.display.DisplayObject;\nimport openfl.display.Shader;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\n\n\nclass BitmapFilter {\n\t\n\t\n\tprivate var __bottomExtension:Int;\n\tprivate var __leftExtension:Int;\n\tprivate var __needSecondBitmapData:Bool;\n\tprivate var __numShaderPasses:Int;\n\tprivate var __preserveObject:Bool;\n\tprivate var __renderDirty:Bool;\n\tprivate var __rightExtension:Int;\n\tprivate var __topExtension:Int;\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\t__bottomExtension = 0;\n\t\t__leftExtension = 0;\n\t\t__needSecondBitmapData = true;\n\t\t__numShaderPasses = 0;\n\t\t__preserveObject = false;\n\t\t__rightExtension = 0;\n\t\t__topExtension = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():BitmapFilter {\n\t\t\n\t\treturn new BitmapFilter ();\n\t\t\n\t}\n\t\n\t\n\tprivate function __applyFilter (bitmapData:BitmapData, sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point):BitmapData {\n\t\t\n\t\treturn sourceBitmapData;\n\t\t\n\t}\n\t\n\t\n\tprivate function __initShader (renderSession:RenderSession, pass:Int):Shader {\n\t\t\n\t\treturn renderSession.shaderManager.defaultShader;\n\t\t\n\t}\n\t\n\t\n}","package openfl.filters;\n\n\nimport lime.graphics.utils.ImageDataUtil;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.BitmapData;\nimport openfl.display.DisplayObject;\nimport openfl.display.Shader;\nimport openfl.filters.BitmapFilter;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\n\n@:access(openfl.geom.Point)\n@:access(openfl.geom.Rectangle)\n\n\n@:final class BlurFilter extends BitmapFilter {\n\t\n\t\n\t//private static var __blurShader = new BlurShader ();\n\t\n\tpublic var blurX (get, set):Float;\n\tpublic var blurY (get, set):Float;\n\tpublic var quality (get, set):Int;\n\t\n\tprivate var __blurX:Float;\n\tprivate var __blurY:Float;\n\tprivate var __horizontalPasses:Int;\n\tprivate var __quality:Int;\n\tprivate var __verticalPasses:Int;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (BlurFilter.prototype, {\n\t\t\t\"blurX\": { get: untyped __js__ (\"function () { return this.get_blurX (); }\"), set: untyped __js__ (\"function (v) { return this.set_blurX (v); }\") },\n\t\t\t\"blurY\": { get: untyped __js__ (\"function () { return this.get_blurY (); }\"), set: untyped __js__ (\"function (v) { return this.set_blurY (v); }\") },\n\t\t\t\"quality\": { get: untyped __js__ (\"function () { return this.get_quality (); }\"), set: untyped __js__ (\"function (v) { return this.set_quality (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (blurX:Float = 4, blurY:Float = 4, quality:Int = 1) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__blurX = blurX;\n\t\t__blurY = blurY;\n\t\t__quality = quality;\n\t\t\n\t\t__needSecondBitmapData = true;\n\t\t__preserveObject = false;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():BitmapFilter {\n\t\t\n\t\treturn new BlurFilter (__blurX, __blurY, __quality);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __applyFilter (bitmapData:BitmapData, sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point):BitmapData {\n\t\t\n\t\tvar finalImage = ImageDataUtil.gaussianBlur (bitmapData.image, sourceBitmapData.image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), __blurX, __blurY, __quality);\n\t\tif (finalImage == bitmapData.image) return bitmapData;\n\t\treturn sourceBitmapData;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __initShader (renderSession:RenderSession, pass:Int):Shader {\n\t\t\n\t\t// var data = __blurShader.data;\n\t\t\n\t\t// if (pass <= horizontalPasses) {\n\t\t\t\n\t\t// \tvar scale = Math.pow (0.5, pass >> 1);\n\t\t// \tdata.uRadius.value[0] = blurX * scale;\n\t\t// \tdata.uRadius.value[1] = 0;\n\t\t\t\n\t\t// } else {\n\t\t\t\n\t\t// \tvar scale = Math.pow (0.5, (pass - horizontalPasses) >> 1);\n\t\t// \tdata.uRadius.value[0] = 0;\n\t\t// \tdata.uRadius.value[1] = blurY * scale;\n\t\t\t\n\t\t// }\n\t\t\n\t\t// return __blurShader;\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_blurX ():Float {\n\t\t\n\t\treturn __blurX;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_blurX (value:Float):Float {\n\t\t\n\t\tif (value != __blurX) {\n\t\t\t__blurX = value;\n\t\t\t__renderDirty = true;\n\t\t\t__leftExtension = (value > 0 ? Math.ceil (value) : 0);\n\t\t\t__rightExtension = __leftExtension;\n\t\t}\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_blurY ():Float {\n\t\t\n\t\treturn __blurY;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_blurY (value:Float):Float {\n\t\t\n\t\tif (value != __blurY) {\n\t\t\t__blurY = value;\n\t\t\t__renderDirty = true;\n\t\t\t__topExtension = (value > 0 ? Math.ceil (value) : 0);\n\t\t\t__bottomExtension = __topExtension;\n\t\t}\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_quality ():Int {\n\t\t\n\t\treturn __quality;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_quality (value:Int):Int {\n\t\t\n\t\t// TODO: Quality effect with fewer passes?\n\t\t\n\t\t__horizontalPasses = (__blurX <= 0) ? 0 : Math.round (__blurX * (value / 4)) + 1;\n\t\t__verticalPasses = (__blurY <= 0) ? 0 : Math.round (__blurY * (value / 4)) + 1;\n\t\t\n\t\t__numShaderPasses = __horizontalPasses + __verticalPasses;\n\t\t\n\t\tif (value != __quality) __renderDirty = true;\n\t\treturn __quality = value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nprivate class BlurShader extends Shader {\n\t\n\t\n\t@:glFragmentSource( \n\t\t\n\t\t\"varying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\tuniform sampler2D uImage0;\n\t\t\n\t\tvarying vec2 vBlurCoords[7];\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 sum = vec4(0.0);\n\t\t\tsum += texture2D(uImage0, vBlurCoords[0]) * 0.00443;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[1]) * 0.05399;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[2]) * 0.24197;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[3]) * 0.39894;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[4]) * 0.24197;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[5]) * 0.05399;\n\t\t\tsum += texture2D(uImage0, vBlurCoords[6]) * 0.00443;\n\t\t\t\n\t\t\tgl_FragColor = sum;\n\t\t\t\n\t\t}\"\n\t\t\n\t)\n\t\n\t\n\t@:glVertexSource(\n\t\t\n\t\t\"attribute float aAlpha;\n\t\tattribute vec4 aPosition;\n\t\tattribute vec2 aTexCoord;\n\t\tvarying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\t\n\t\tuniform mat4 uMatrix;\n\t\t\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vBlurCoords[7];\n\t\tuniform vec2 uTextureSize;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvAlpha = aAlpha;\n\t\t\tvTexCoord = aTexCoord;\n\t\t\tgl_Position = uMatrix * aPosition;\n\t\t\t\n\t\t\tvec2 r = uRadius / uTextureSize;\n\t\t\tvBlurCoords[0] = aTexCoord - r * 1.0;\n\t\t\tvBlurCoords[1] = aTexCoord - r * 0.75;\n\t\t\tvBlurCoords[2] = aTexCoord - r * 0.5;\n\t\t\tvBlurCoords[3] = aTexCoord;\n\t\t\tvBlurCoords[4] = aTexCoord + r * 0.5;\n\t\t\tvBlurCoords[5] = aTexCoord + r * 0.75;\n\t\t\tvBlurCoords[6] = aTexCoord + r * 1.0;\n\t\t\t\n\t\t}\"\n\t\t\n\t)\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t#if !macro\n\t\tdata.uRadius.value = [ 0, 0 ];\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __update ():Void {\n\t\t\n\t\tdata.uTextureSize.value = [ data.uImage0.input.width, data.uImage0.input.height ];\n\t\t\n\t\tsuper.__update ();\n\t\t\n\t}\n\t\n\t\n}","package openfl.filters;\n\n\nimport lime.graphics.utils.ImageCanvasUtil;\nimport lime.math.color.RGBA;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.BitmapData;\nimport openfl.display.Shader;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\n\n\n@:final class ColorMatrixFilter extends BitmapFilter {\n\t\n\t\n\t//private static var __colorMatrixShader = new ColorMatrixShader ();\n\t\n\tpublic var matrix (get, set):Array<Float>;\n\t\n\tprivate var __matrix:Array<Float>;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (ColorMatrixFilter.prototype, {\n\t\t\t\"matrix\": { get: untyped __js__ (\"function () { return this.get_matrix (); }\"), set: untyped __js__ (\"function (v) { return this.set_matrix (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (matrix:Array<Float> = null) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__matrix = matrix;\n\t\t\n\t\t// __numShaderPasses = 1;\n\t\t__numShaderPasses = 0;\n\t\t__needSecondBitmapData = false;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():BitmapFilter {\n\t\t\n\t\treturn new ColorMatrixFilter (__matrix);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __applyFilter (destBitmapData:BitmapData, sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point):BitmapData {\n\t\t\n\t\tvar sourceImage = sourceBitmapData.image; \n\t\tvar image = destBitmapData.image;\n\t\t\n\t\t#if (js && html5)\n\t\tImageCanvasUtil.convertToData (sourceImage);\n\t\tImageCanvasUtil.convertToData (image);\n\t\t#end\n\t\t\n\t\tvar sourceData = sourceImage.data;\n\t\tvar destData = image.data;\n\t\t\n\t\tvar offsetX = Std.int (destPoint.x - sourceRect.x);\n\t\tvar offsetY = Std.int (destPoint.y - sourceRect.y);\n\t\tvar sourceStride = sourceBitmapData.width * 4;\n\t\tvar destStride = destBitmapData.width * 4;\n\t\t\n\t\tvar sourceFormat = sourceImage.buffer.format;\n\t\tvar destFormat = image.buffer.format;\n\t\tvar sourcePremultiplied = sourceImage.buffer.premultiplied;\n\t\tvar destPremultiplied = image.buffer.premultiplied;\n\t\t\n\t\tvar sourcePixel:RGBA, destPixel:RGBA = 0;\n\t\tvar sourceOffset:Int, destOffset:Int;\n\t\t\n\t\tfor (row in Std.int (sourceRect.y)...Std.int (sourceRect.height)) {\n\t\t\t\n\t\t\tfor (column in Std.int (sourceRect.x)...Std.int (sourceRect.width)) {\n\t\t\t\t\n\t\t\t\tsourceOffset = (row * sourceStride) + (column * 4);\n\t\t\t\tdestOffset = ((row + offsetX) * destStride) + ((column + offsetY) * 4);\n\t\t\t\t\n\t\t\t\tsourcePixel.readUInt8 (sourceData, sourceOffset, sourceFormat, sourcePremultiplied);\n\t\t\t\t\n\t\t\t\tif (sourcePixel.a == 0) {\n\t\t\t\t\t\n\t\t\t\t\tdestPixel = 0;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tdestPixel.r = Std.int (Math.min ((__matrix[0] * sourcePixel.r) + (__matrix[1] * sourcePixel.g) + (__matrix[2] * sourcePixel.b) + (__matrix[3] * sourcePixel.a) + __matrix[4], 255));\n\t\t\t\t\tdestPixel.g = Std.int (Math.min ((__matrix[5] * sourcePixel.r) + (__matrix[6] * sourcePixel.g) + (__matrix[7] * sourcePixel.b) + (__matrix[8] * sourcePixel.a) + __matrix[9], 255));\n\t\t\t\t\tdestPixel.b = Std.int (Math.min ((__matrix[10] * sourcePixel.r) + (__matrix[11] * sourcePixel.g) + (__matrix[12] * sourcePixel.b) + (__matrix[13] * sourcePixel.a) + __matrix[14], 255));\n\t\t\t\t\tdestPixel.a = Std.int (Math.min ((__matrix[15] * sourcePixel.r) + (__matrix[16] * sourcePixel.g) + (__matrix[17] * sourcePixel.b) + (__matrix[18] * sourcePixel.a) + __matrix[19], 255));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdestPixel.writeUInt8 (destData, destOffset, destFormat, destPremultiplied);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tdestBitmapData.image.dirty = true;\n\t\treturn destBitmapData;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __initShader (renderSession:RenderSession, pass:Int):Shader {\n\t\t\n\t\treturn null;\n\t\t//__colorMatrixShader.init (matrix);\n\t\t//return __colorMatrixShader;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_matrix ():Array<Float> {\n\t\t\n\t\treturn __matrix;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_matrix (value:Array<Float>):Array<Float> {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\tvalue = [ 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0 ];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __matrix = value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nprivate class ColorMatrixShader extends Shader {\n\t\n\t\n\t@:glFragmentSource( \n\t\t\n\t\t\"varying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\tuniform sampler2D uImage0;\n\t\t\n\t\tuniform mat4 uMultipliers;\n\t\tuniform vec4 uOffsets;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 color = texture2D (uImage0, vTexCoord);\n\t\t\t\n\t\t\tif (color.a == 0.0) {\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\t\t\t\tcolor = uOffsets + color * uMultipliers;\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * vAlpha, color.a * vAlpha);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\"\n\t\t\n\t)\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t#if !macro\n\t\tdata.uMultipliers.value = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ];\n\t\tdata.uOffsets.value = [ 0, 0, 0, 0 ];\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function init (matrix:Array<Float>):Void {\n\t\t\n\t\tvar multipliers = data.uMultipliers.value;\n\t\tvar offsets = data.uOffsets.value;\n\t\t\n\t\tmultipliers[0] = matrix[0];\n\t\tmultipliers[1] = matrix[1];\n\t\tmultipliers[2] = matrix[2];\n\t\tmultipliers[3] = matrix[3];\n\t\tmultipliers[4] = matrix[5];\n\t\tmultipliers[5] = matrix[6];\n\t\tmultipliers[6] = matrix[7];\n\t\tmultipliers[7] = matrix[8];\n\t\tmultipliers[8] = matrix[10];\n\t\tmultipliers[9] = matrix[11];\n\t\tmultipliers[10] = matrix[12];\n\t\tmultipliers[11] = matrix[13];\n\t\tmultipliers[12] = matrix[15];\n\t\tmultipliers[13] = matrix[16];\n\t\tmultipliers[14] = matrix[17];\n\t\tmultipliers[15] = matrix[18];\n\t\t\n\t\toffsets[0] = matrix[4] / 255.0;\n\t\toffsets[1] = matrix[9] / 255.0;\n\t\toffsets[2] = matrix[14] / 255.0;\n\t\toffsets[3] = matrix[19] / 255.0;\n\t\t\n\t}\n\t\n\t\n}","package openfl.filters;\n\n\nimport lime.graphics.utils.ImageDataUtil;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.BitmapData;\nimport openfl.display.Shader;\nimport openfl.geom.ColorTransform;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\n\n@:access(openfl.geom.Point)\n@:access(openfl.geom.Rectangle)\n\n\n@:final class DropShadowFilter extends BitmapFilter {\n\t\n\t\n\tpublic var alpha (get, set):Float;\n\tpublic var angle (get, set):Float;\n\tpublic var blurX (get, set):Float;\n\tpublic var blurY (get, set):Float;\n\tpublic var color (get, set):Int;\n\tpublic var distance (get, set):Float;\n\tpublic var hideObject (get, set):Bool;\n\tpublic var inner (get, set):Bool;\n\tpublic var knockout (get, set):Bool;\n\tpublic var quality (get, set):Int;\n\tpublic var strength (get, set):Float;\n\t\n\tprivate var __alpha:Float;\n\tprivate var __angle:Float;\n\tprivate var __blurX:Float;\n\tprivate var __blurY:Float;\n\tprivate var __color:Int;\n\tprivate var __distance:Float;\n\tprivate var __hideObject:Bool;\n\tprivate var __inner:Bool;\n\tprivate var __knockout:Bool;\n\tprivate var __offsetX:Float;\n\tprivate var __offsetY:Float;\n\tprivate var __quality:Int;\n\tprivate var __strength:Float;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (DropShadowFilter.prototype, {\n\t\t\t\"alpha\": { get: untyped __js__ (\"function () { return this.get_alpha (); }\"), set: untyped __js__ (\"function (v) { return this.set_alpha (v); }\") },\n\t\t\t\"angle\": { get: untyped __js__ (\"function () { return this.get_angle (); }\"), set: untyped __js__ (\"function (v) { return this.set_angle (v); }\") },\n\t\t\t\"blurX\": { get: untyped __js__ (\"function () { return this.get_blurX (); }\"), set: untyped __js__ (\"function (v) { return this.set_blurX (v); }\") },\n\t\t\t\"blurY\": { get: untyped __js__ (\"function () { return this.get_blurY (); }\"), set: untyped __js__ (\"function (v) { return this.set_blurY (v); }\") },\n\t\t\t\"color\": { get: untyped __js__ (\"function () { return this.get_color (); }\"), set: untyped __js__ (\"function (v) { return this.set_color (v); }\") },\n\t\t\t\"distance\": { get: untyped __js__ (\"function () { return this.get_distance (); }\"), set: untyped __js__ (\"function (v) { return this.set_distance (v); }\") },\n\t\t\t\"hideObject\": { get: untyped __js__ (\"function () { return this.get_hideObject (); }\"), set: untyped __js__ (\"function (v) { return this.set_hideObject (v); }\") },\n\t\t\t\"inner\": { get: untyped __js__ (\"function () { return this.get_inner (); }\"), set: untyped __js__ (\"function (v) { return this.set_inner (v); }\") },\n\t\t\t\"knockout\": { get: untyped __js__ (\"function () { return this.get_knockout (); }\"), set: untyped __js__ (\"function (v) { return this.set_knockout (v); }\") },\n\t\t\t\"quality\": { get: untyped __js__ (\"function () { return this.get_quality (); }\"), set: untyped __js__ (\"function (v) { return this.set_quality (v); }\") },\n\t\t\t\"strength\": { get: untyped __js__ (\"function () { return this.get_strength (); }\"), set: untyped __js__ (\"function (v) { return this.set_strength (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (distance:Float = 4, angle:Float = 45, color:Int = 0, alpha:Float = 1, blurX:Float = 4, blurY:Float = 4, strength:Float = 1, quality:Int = 1, inner:Bool = false, knockout:Bool = false, hideObject:Bool = false) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__offsetX = 0;\n\t\t__offsetY = 0;\n\t\t\n\t\t__distance = distance;\n\t\t__angle = angle;\n\t\t__color = color;\n\t\t__alpha = alpha;\n\t\t__blurX = blurX;\n\t\t__blurY = blurY;\n\t\t__strength = strength;\n\t\t__quality = quality;\n\t\t__inner = inner;\n\t\t__knockout = knockout;\n\t\t__hideObject = hideObject;\n\t\t\n\t\t__updateSize ();\n\t\t\n\t\t__needSecondBitmapData = true;\n\t\t__preserveObject = !__hideObject;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():BitmapFilter {\n\t\t\n\t\treturn new DropShadowFilter (__distance, __angle, __color, __alpha, __blurX, __blurY, __strength, __quality, __inner, __knockout, __hideObject);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __applyFilter (bitmapData:BitmapData, sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point):BitmapData {\n\t\t\n\t\t// TODO: Support knockout, inner\n\t\t\n\t\tvar a = (__color >> 24) & 0xFF;\n\t\tvar r = (__color >> 16) & 0xFF;\n\t\tvar g = (__color >> 8) & 0xFF;\n\t\tvar b = __color & 0xFF;\n\t\tsourceBitmapData.colorTransform (sourceBitmapData.rect, new ColorTransform (0, 0, 0, 1, r, g, b, a));\n\t\t\n\t\tdestPoint.x += __offsetX;\n\t\tdestPoint.y += __offsetY;\n\t\t\n\t\tvar finalImage = ImageDataUtil.gaussianBlur (bitmapData.image, sourceBitmapData.image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), __blurX, __blurY, __quality, __strength);\n\t\t\n\t\tif (finalImage == bitmapData.image) return bitmapData;\n\t\treturn sourceBitmapData;\n\t\t\n\t}\n\t\n\t\n\tprivate function __updateSize ():Void {\n\t\t\n\t\t__offsetX = Std.int (__distance * Math.cos (__angle * Math.PI / 180));\n\t\t__offsetY = Std.int (__distance * Math.sin (__angle * Math.PI / 180));\n\t\t__topExtension = Math.ceil ((__offsetY < 0 ? -__offsetY : 0) + __blurY);\n\t\t__bottomExtension = Math.ceil ((__offsetY > 0 ? __offsetY : 0) + __blurY);\n\t\t__leftExtension = Math.ceil ((__offsetX < 0 ? -__offsetX : 0) + __blurX);\n\t\t__rightExtension = Math.ceil ((__offsetX > 0 ? __offsetX : 0) + __blurX);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_alpha ():Float {\n\t\t\n\t\treturn __alpha;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_alpha (value:Float):Float {\n\t\t\n\t\tif (value != __alpha) __renderDirty = true;\n\t\treturn __alpha = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_angle ():Float {\n\t\t\n\t\treturn __angle;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_angle (value:Float):Float {\n\t\t\n\t\tif (value != __angle) {\n\t\t\t__angle = value;\n\t\t\t__renderDirty = true;\n\t\t\t__updateSize ();\n\t\t}\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_blurX ():Float {\n\t\t\n\t\treturn __blurX;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_blurX (value:Float):Float {\n\t\t\n\t\tif (value != __blurX) {\n\t\t\t__blurX = value;\n\t\t\t__renderDirty = true;\n\t\t\t__updateSize ();\n\t\t}\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_blurY ():Float {\n\t\t\n\t\treturn __blurY;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_blurY (value:Float):Float {\n\t\t\n\t\tif (value != __blurY) {\n\t\t\t__blurY = value;\n\t\t\t__renderDirty = true;\n\t\t\t__updateSize ();\n\t\t}\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_color ():Int {\n\t\t\n\t\treturn __color;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_color (value:Int):Int {\n\t\t\n\t\tif (value != __color) __renderDirty = true;\n\t\treturn __color = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_distance ():Float {\n\t\t\n\t\treturn __distance;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_distance (value:Float):Float {\n\t\t\n\t\tif (value != __distance) {\n\t\t\t__distance = value;\n\t\t\t__renderDirty = true;\n\t\t\t__updateSize ();\n\t\t}\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_hideObject ():Bool {\n\t\t\n\t\treturn __hideObject;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_hideObject (value:Bool):Bool {\n\t\t\n\t\tif (value != __hideObject) {\n\t\t\t__renderDirty = true;\n\t\t\t__preserveObject = !value;\n\t\t}\n\t\treturn __hideObject = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_inner ():Bool {\n\t\t\n\t\treturn __inner;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_inner (value:Bool):Bool {\n\t\t\n\t\tif (value != __inner) __renderDirty = true;\n\t\treturn __inner = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_knockout ():Bool {\n\t\t\n\t\treturn __knockout;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_knockout (value:Bool):Bool {\n\t\t\n\t\tif (value != __knockout) __renderDirty = true;\n\t\treturn __knockout = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_quality ():Int {\n\t\t\n\t\treturn __quality;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_quality (value:Int):Int {\n\t\t\n\t\tif (value != __quality) __renderDirty = true;\n\t\treturn __quality = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_strength ():Float {\n\t\t\n\t\treturn __strength;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_strength (value:Float):Float {\n\t\t\n\t\tif (value != __strength) __renderDirty = true;\n\t\treturn __strength = value;\n\t\t\n\t}\n\t\n\t\n}","package openfl.filters;\n\n\nimport lime.graphics.utils.ImageDataUtil;\nimport openfl._internal.renderer.RenderSession;\nimport openfl.display.BitmapData;\nimport openfl.display.Shader;\nimport openfl.geom.ColorTransform;\nimport openfl.geom.Point;\nimport openfl.geom.Rectangle;\n\n@:access(openfl.geom.Point)\n@:access(openfl.geom.Rectangle)\n\n\n@:final class GlowFilter extends BitmapFilter {\n\t\n\t\n\t//private static var __glowShader = new GlowShader ();\n\t\n\tpublic var alpha (get, set):Float;\n\tpublic var blurX (get, set):Float;\n\tpublic var blurY (get, set):Float;\n\tpublic var color (get, set):Int;\n\tpublic var inner (get, set):Bool;\n\tpublic var knockout (get, set):Bool;\n\tpublic var quality (get, set):Int;\n\tpublic var strength (get, set):Float;\n\t\n\tprivate var __alpha:Float;\n\tprivate var __blurX:Float;\n\tprivate var __blurY:Float;\n\tprivate var __color:Int;\n\tprivate var __horizontalPasses:Int;\n\tprivate var __inner:Bool;\n\tprivate var __knockout:Bool;\n\tprivate var __quality:Int;\n\tprivate var __strength:Float;\n\tprivate var __verticalPasses:Int;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (GlowFilter.prototype, {\n\t\t\t\"alpha\": { get: untyped __js__ (\"function () { return this.get_alpha (); }\"), set: untyped __js__ (\"function (v) { return this.set_alpha (v); }\") },\n\t\t\t\"blurX\": { get: untyped __js__ (\"function () { return this.get_blurX (); }\"), set: untyped __js__ (\"function (v) { return this.set_blurX (v); }\") },\n\t\t\t\"blurY\": { get: untyped __js__ (\"function () { return this.get_blurY (); }\"), set: untyped __js__ (\"function (v) { return this.set_blurY (v); }\") },\n\t\t\t\"color\": { get: untyped __js__ (\"function () { return this.get_color (); }\"), set: untyped __js__ (\"function (v) { return this.set_color (v); }\") },\n\t\t\t\"inner\": { get: untyped __js__ (\"function () { return this.get_inner (); }\"), set: untyped __js__ (\"function (v) { return this.set_inner (v); }\") },\n\t\t\t\"knockout\": { get: untyped __js__ (\"function () { return this.get_knockout (); }\"), set: untyped __js__ (\"function (v) { return this.set_knockout (v); }\") },\n\t\t\t\"quality\": { get: untyped __js__ (\"function () { return this.get_quality (); }\"), set: untyped __js__ (\"function (v) { return this.set_quality (v); }\") },\n\t\t\t\"strength\": { get: untyped __js__ (\"function () { return this.get_strength (); }\"), set: untyped __js__ (\"function (v) { return this.set_strength (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (color:Int = 0xFF0000, alpha:Float = 1, blurX:Float = 6, blurY:Float = 6, strength:Float = 2, quality:Int = 1, inner:Bool = false, knockout:Bool = false) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__color = color;\n\t\t__alpha = alpha;\n\t\t__blurX = blurX;\n\t\t__blurY = blurY;\n\t\t__strength = strength;\n\t\t__quality = quality;\n\t\t__inner = inner;\n\t\t__knockout = knockout;\n\t\t\n\t\t__needSecondBitmapData = true;\n\t\t__preserveObject = true;\n\t\t\n\t}\n\t\n\t\n\tpublic override function clone ():BitmapFilter {\n\t\t\n\t\treturn new GlowFilter (__color, __alpha, __blurX, __blurY, __strength, __quality, __inner, __knockout);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __applyFilter (bitmapData:BitmapData, sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point):BitmapData {\n\t\t\n\t\t// TODO: Support knockout, inner\n\t\t\n\t\tvar r = (__color >> 16) & 0xFF;\n\t\tvar g = (__color >> 8) & 0xFF;\n\t\tvar b = __color & 0xFF;\n\t\tsourceBitmapData.colorTransform (sourceBitmapData.rect, new ColorTransform (0, 0, 0, 1, r, g, b, __alpha * 0xFF));\n\t\t\n\t\tvar finalImage = ImageDataUtil.gaussianBlur (bitmapData.image, sourceBitmapData.image, sourceRect.__toLimeRectangle (), destPoint.__toLimeVector2 (), __blurX, __blurY, __quality, __strength);\n\t\t\n\t\tif (finalImage == bitmapData.image) return bitmapData;\n\t\treturn sourceBitmapData;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __initShader (renderSession:RenderSession, pass:Int):Shader {\n\t\t\n\t\t// var data = __glowShader.data;\n\t\t\n\t\t// if (pass <= horizontalPasses) {\n\t\t\t\n\t\t// \tvar scale = Math.pow (0.5, pass >> 1);\n\t\t// \tdata.uRadius.value[0] = blurX * scale;\n\t\t// \tdata.uRadius.value[1] = 0;\n\t\t\t\n\t\t// } else {\n\t\t\t\n\t\t// \tvar scale = Math.pow (0.5, (pass - horizontalPasses) >> 1);\n\t\t// \tdata.uRadius.value[0] = 0;\n\t\t// \tdata.uRadius.value[1] = blurY * scale;\n\t\t\t\n\t\t// }\n\t\t\n\t\t// data.uColor.value[0] = ((color >> 16) & 0xFF) / 255;\n\t\t// data.uColor.value[1] = ((color >> 8) & 0xFF) / 255;\n\t\t// data.uColor.value[2] = (color & 0xFF) / 255;\n\t\t// data.uColor.value[3] = alpha;\n\t\t\n\t\t// return __glowShader;\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_alpha ():Float {\n\t\t\n\t\treturn __alpha;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_alpha (value:Float):Float {\n\t\t\n\t\tif (value != __alpha) __renderDirty = true;\n\t\treturn __alpha = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_blurX ():Float {\n\t\t\n\t\treturn __blurX;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_blurX (value:Float):Float {\n\t\t\n\t\tif (value != __blurX) {\n\t\t\t__blurX = value;\n\t\t\t__renderDirty = true;\n\t\t\t__leftExtension = (value > 0 ? Math.ceil (value) : 0);\n\t\t\t__rightExtension = __leftExtension;\n\t\t}\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_blurY ():Float {\n\t\t\n\t\treturn __blurY;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_blurY (value:Float):Float {\n\t\t\n\t\tif (value != __blurY) {\n\t\t\t__blurY = value;\n\t\t\t__renderDirty = true;\n\t\t\t__topExtension = (value > 0 ? Math.ceil (value) : 0);\n\t\t\t__bottomExtension = __topExtension;\n\t\t}\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_color ():Int {\n\t\t\n\t\treturn __color;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_color (value:Int):Int {\n\t\t\n\t\tif (value != __color) __renderDirty = true;\n\t\treturn __color = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_inner ():Bool {\n\t\t\n\t\treturn __inner;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_inner (value:Bool):Bool {\n\t\t\n\t\tif (value != __inner) __renderDirty = true;\n\t\treturn __inner = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_knockout ():Bool {\n\t\t\n\t\treturn __knockout;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_knockout (value:Bool):Bool {\n\t\t\n\t\tif (value != __knockout) __renderDirty = true;\n\t\treturn __knockout = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_quality ():Int {\n\t\t\n\t\treturn __quality;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_quality (value:Int):Int {\n\t\t\n\t\t// TODO: Quality effect with fewer passes?\n\t\t\n\t\t__horizontalPasses = (__blurX <= 0) ? 0 : Math.round (__blurX * (value / 4)) + 1;\n\t\t__verticalPasses = (__blurY <= 0) ? 0 : Math.round (__blurY * (value / 4)) + 1;\n\t\t\n\t\t__numShaderPasses = __horizontalPasses + __verticalPasses;\n\t\t\n\t\tif (value != __quality) __renderDirty = true;\n\t\treturn __quality = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_strength ():Float {\n\t\t\n\t\treturn __strength;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_strength (value:Float):Float {\n\t\t\n\t\tif (value != __strength) __renderDirty = true;\n\t\treturn __strength = value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nprivate class GlowShader extends Shader {\n\t\n\t\n\t@:glFragmentSource( \n\t\t\n\t\t\"varying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\tuniform sampler2D uImage0;\n\t\t\n\t\tuniform vec4 uColor;\n\t\t\n\t\tvarying vec2 vBlurCoords[7];\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tfloat a = 0.0;\n\t\t\ta += texture2D(uImage0, vBlurCoords[0]).a * 0.00443;\n\t\t\ta += texture2D(uImage0, vBlurCoords[1]).a * 0.05399;\n\t\t\ta += texture2D(uImage0, vBlurCoords[2]).a * 0.24197;\n\t\t\ta += texture2D(uImage0, vBlurCoords[3]).a * 0.39894;\n\t\t\ta += texture2D(uImage0, vBlurCoords[4]).a * 0.24197;\n\t\t\ta += texture2D(uImage0, vBlurCoords[5]).a * 0.05399;\n\t\t\ta += texture2D(uImage0, vBlurCoords[6]).a * 0.00443;\n\t\t\ta *= uColor.a;\n\t\t\t\n\t\t\tgl_FragColor = vec4(uColor.rgb * a, a);\n\t\t\t\n\t\t}\"\n\t\t\n\t)\n\t\n\t\n\t@:glVertexSource(\n\t\t\n\t\t\"attribute float aAlpha;\n\t\tattribute vec4 aPosition;\n\t\tattribute vec2 aTexCoord;\n\t\tvarying float vAlpha;\n\t\tvarying vec2 vTexCoord;\n\t\t\n\t\tuniform mat4 uMatrix;\n\t\t\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vBlurCoords[7];\n\t\tuniform vec2 uTextureSize;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvAlpha = aAlpha;\n\t\t\tvTexCoord = aTexCoord;\n\t\t\tgl_Position = uMatrix * aPosition;\n\t\t\t\n\t\t\tvec2 r = uRadius / uTextureSize;\n\t\t\tvBlurCoords[0] = aTexCoord - r * 1.0;\n\t\t\tvBlurCoords[1] = aTexCoord - r * 0.75;\n\t\t\tvBlurCoords[2] = aTexCoord - r * 0.5;\n\t\t\tvBlurCoords[3] = aTexCoord;\n\t\t\tvBlurCoords[4] = aTexCoord + r * 0.5;\n\t\t\tvBlurCoords[5] = aTexCoord + r * 0.75;\n\t\t\tvBlurCoords[6] = aTexCoord + r * 1.0;\n\t\t\t\n\t\t}\"\n\t\t\n\t)\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t#if !macro\n\t\tdata.uRadius.value = [ 0, 0 ];\n\t\tdata.uColor.value = [ 0, 0, 0, 0 ];\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __update ():Void {\n\t\t\n\t\tdata.uTextureSize.value = [ data.uImage0.input.width, data.uImage0.input.height ];\n\t\t\n\t\tsuper.__update ();\n\t\t\n\t}\n\t\n\t\n}","package openfl.geom;\n\n\nimport lime.math.ColorMatrix;\nimport lime.utils.Float32Array;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass ColorTransform {\n\t\n\t\n\tprivate static var __limeColorMatrix:Float32Array;\n\t\n\tpublic var alphaMultiplier:Float;\n\tpublic var alphaOffset:Float;\n\tpublic var blueMultiplier:Float;\n\tpublic var blueOffset:Float;\n\tpublic var color (get, set):Int;\n\tpublic var greenMultiplier:Float;\n\tpublic var greenOffset:Float;\n\tpublic var redMultiplier:Float;\n\tpublic var redOffset:Float;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperty (ColorTransform.prototype, \"color\", { get: untyped __js__ (\"function () { return this.get_color (); }\"), set: untyped __js__ (\"function (v) { return this.set_color (v); }\") });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (redMultiplier:Float = 1, greenMultiplier:Float = 1, blueMultiplier:Float = 1, alphaMultiplier:Float = 1, redOffset:Float = 0, greenOffset:Float = 0, blueOffset:Float = 0, alphaOffset:Float = 0):Void {\n\t\t\n\t\tthis.redMultiplier = redMultiplier;\n\t\tthis.greenMultiplier = greenMultiplier;\n\t\tthis.blueMultiplier = blueMultiplier;\n\t\tthis.alphaMultiplier = alphaMultiplier;\n\t\tthis.redOffset = redOffset;\n\t\tthis.greenOffset = greenOffset;\n\t\tthis.blueOffset = blueOffset;\n\t\tthis.alphaOffset = alphaOffset;\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (second:ColorTransform):Void {\n\t\t\n\t\tredMultiplier *= second.redMultiplier;   \n\t\tgreenMultiplier *= second.greenMultiplier;\n\t\tblueMultiplier *= second.blueMultiplier;\n\t\talphaMultiplier *= second.alphaMultiplier;\n\t\t\n\t\tredOffset = second.redMultiplier * redOffset + second.redOffset;\n\t\tgreenOffset = second.greenMultiplier * greenOffset + second.greenOffset;\n\t\tblueOffset = second.blueMultiplier * blueOffset + second.blueOffset;\n\t\talphaOffset = second.alphaMultiplier * alphaOffset + second.alphaOffset;\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn '(redMultiplier=$redMultiplier, greenMultiplier=$greenMultiplier, blueMultiplier=$blueMultiplier, alphaMultiplier=$alphaMultiplier, redOffset=$redOffset, greenOffset=$greenOffset, blueOffset=$blueOffset, alphaOffset=$alphaOffset)';\n\t\t\n\t}\n\t\n\t\n\tprivate function __clone ():ColorTransform {\n\t\t\n\t\treturn new ColorTransform (redMultiplier, greenMultiplier, blueMultiplier, alphaMultiplier, redOffset, greenOffset, blueOffset, alphaOffset);\n\t\t\n\t}\n\t\n\t\n\tprivate function __copyFrom (ct:ColorTransform):Void {\n\t\t\n\t\tredMultiplier = ct.redMultiplier;\n\t\tgreenMultiplier = ct.greenMultiplier;\n\t\tblueMultiplier = ct.blueMultiplier;\n\t\talphaMultiplier = ct.alphaMultiplier;\n\t\t\n\t\tredOffset = ct.redOffset;\n\t\tgreenOffset = ct.greenOffset;\n\t\tblueOffset = ct.blueOffset;\n\t\talphaOffset = ct.alphaOffset;\n\t\t\n\t}\n\t\n\t\n\tprivate function __combine (ct:ColorTransform):Void {\n\t\t\n\t\tredMultiplier *= ct.redMultiplier;\n\t\tgreenMultiplier *= ct.greenMultiplier;\n\t\tblueMultiplier *= ct.blueMultiplier;\n\t\talphaMultiplier *= ct.alphaMultiplier;\n\t\t\n\t\tredOffset += ct.redOffset;\n\t\tgreenOffset += ct.greenOffset;\n\t\tblueOffset += ct.blueOffset;\n\t\talphaOffset += ct.alphaOffset;\n\t\t\n\t}\n\t\n\t\n\tprivate function __identity ():Void {\n\t\t\n\t\tredMultiplier = 1;\n\t\tgreenMultiplier = 1;\n\t\tblueMultiplier = 1;\n\t\talphaMultiplier = 1;\n\t\tredOffset = 0;\n\t\tgreenOffset = 0;\n\t\tblueOffset = 0;\n\t\talphaOffset = 0;\n\t\t\n\t}\n\t\n\t\n\tprivate function __equals (ct:ColorTransform, ?skipAlphaMultiplier:Bool = false):Bool {\n\t\t\n\t\treturn (ct != null && redMultiplier == ct.redMultiplier && greenMultiplier == ct.greenMultiplier && blueMultiplier == ct.blueMultiplier && (skipAlphaMultiplier || alphaMultiplier == ct.alphaMultiplier) && redOffset == ct.redOffset && greenOffset == ct.greenOffset && blueOffset == ct.blueOffset && alphaOffset == ct.alphaOffset);\n\t\t\n\t}\n\t\n\t\n\tprivate function __isDefault ():Bool {\n\t\t\n\t\treturn (redMultiplier == 1 && greenMultiplier == 1 && blueMultiplier == 1 && alphaMultiplier == 1 && redOffset == 0 && greenOffset == 0 && blueOffset == 0 && alphaOffset == 0);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_color ():Int {\n\t\t\n\t\treturn ((Std.int (redOffset) << 16) | (Std.int (greenOffset) << 8) | Std.int (blueOffset));\n\t\t\n\t}\n\t\n\t\n\tprivate function set_color (value:Int):Int {\n\t\t\n\t\tredOffset = (value >> 16) & 0xFF;\n\t\tgreenOffset = (value >> 8) & 0xFF;\n\t\tblueOffset = value & 0xFF;\n\t\t\n\t\tredMultiplier = 0;\n\t\tgreenMultiplier = 0;\n\t\tblueMultiplier = 0;\n\t\t\n\t\treturn color;\n\t\t\n\t}\n\t\n\t\n\tprivate function __toLimeColorMatrix ():ColorMatrix {\n\t\t\n\t\tif (__limeColorMatrix == null) {\n\t\t\t\n\t\t\t__limeColorMatrix = new Float32Array (20);\n\t\t\t\n\t\t}\n\t\t\n\t\t__limeColorMatrix[0] = redMultiplier;\n\t\t__limeColorMatrix[4] = redOffset / 255;\n\t\t__limeColorMatrix[6] = greenMultiplier;\n\t\t__limeColorMatrix[9] = greenOffset / 255;\n\t\t__limeColorMatrix[12] = blueMultiplier;\n\t\t__limeColorMatrix[14] = blueOffset / 255;\n\t\t__limeColorMatrix[18] = alphaMultiplier;\n\t\t__limeColorMatrix[19] = alphaOffset / 255;\n\t\t\n\t\treturn __limeColorMatrix;\n\t\t\n\t}\n\t\n\t\n}","package openfl.geom;\n\n\nimport lime.math.Matrix3;\nimport lime.utils.Float32Array;\nimport lime.utils.ObjectPool;\nimport openfl.geom.Point;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Matrix {\n\t\n\t\n\tprivate static var __identity = new Matrix ();\n\tprivate static var __matrix3 = new Matrix3 ();\n\tprivate static var __pool = new ObjectPool<Matrix> (function () return new Matrix (), function (m) m.identity ());\n\t\n\tpublic var a:Float;\n\tpublic var b:Float;\n\tpublic var c:Float;\n\tpublic var d:Float;\n\tpublic var tx:Float;\n\tpublic var ty:Float;\n\t\n\tprivate var __array:Float32Array;\n\t\n\t\n\tpublic function new (a:Float = 1, b:Float = 0, c:Float = 0, d:Float = 1, tx:Float = 0, ty:Float = 0) {\n\t\t\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Matrix {\n\t\t\n\t\treturn new Matrix (a, b, c, d, tx, ty);\n\t\t\n\t}\n\t\n\t\n\tpublic function concat (m:Matrix):Void {\n\t\t\n\t\tvar a1 = a * m.a + b * m.c;\n\t\tb = a * m.b + b * m.d;\n\t\ta = a1;\n\t\t\n\t\tvar c1 = c * m.a + d * m.c;\n\t\td = c * m.b + d * m.d;\n\t\tc = c1;\n\t\t\n\t\tvar tx1 = tx * m.a + ty * m.c + m.tx;\n\t\tty = tx * m.b + ty * m.d + m.ty;\n\t\ttx = tx1;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnFrom (column:Int, vector3D:Vector3D):Void {\n\t\t\n\t\tif (column > 2) {\n\t\t\t\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (column == 0) {\n\t\t\t\n\t\t\ta = vector3D.x;\n\t\t\tc = vector3D.y;\n\t\t\t\n\t\t}else if (column == 1) {\n\t\t\t\n\t\t\tb = vector3D.x;\n\t\t\td = vector3D.y;\n\t\t\t\n\t\t}else {\n\t\t\t\n\t\t\ttx = vector3D.x;\n\t\t\tty = vector3D.y;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnTo (column:Int, vector3D:Vector3D):Void {\n\t\t\n\t\tif (column > 2) {\n\t\t\t\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (column == 0) {\n\t\t\t\n\t\t\tvector3D.x = a;\n\t\t\tvector3D.y = c;\n\t\t\tvector3D.z = 0;\n\t\t\t\n\t\t} else if (column == 1) {\n\t\t\t\n\t\t\tvector3D.x = b;\n\t\t\tvector3D.y = d;\n\t\t\tvector3D.z = 0;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvector3D.x = tx;\n\t\t\tvector3D.y = ty;\n\t\t\tvector3D.z = 1;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceMatrix:Matrix):Void {\n\t\t\n\t\ta = sourceMatrix.a;\n\t\tb = sourceMatrix.b;\n\t\tc = sourceMatrix.c;\n\t\td = sourceMatrix.d;\n\t\ttx = sourceMatrix.tx;\n\t\tty = sourceMatrix.ty;\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowFrom (row:Int, vector3D:Vector3D):Void {\n\t\t\n\t\tif (row > 2) {\n\t\t\t\n\t\t\tthrow \"Row \" + row + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (row == 0) {\n\t\t\t\n\t\t\ta = vector3D.x;\n\t\t\tc = vector3D.y;\n\t\t\t\n\t\t} else if (row == 1) {\n\t\t\t\n\t\t\tb = vector3D.x;\n\t\t\td = vector3D.y;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttx = vector3D.x;\n\t\t\tty = vector3D.y;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowTo (row:Int, vector3D:Vector3D):Void {\n\t\t\n\t\tif (row > 2) {\n\t\t\t\n\t\t\tthrow \"Row \" + row + \" out of bounds (2)\";\n\t\t\t\n\t\t} else if (row == 0) {\n\t\t\t\n\t\t\tvector3D.x = a;\n\t\t\tvector3D.y = b;\n\t\t\tvector3D.z = tx;\n\t\t\t\n\t\t} else if (row == 1) {\n\t\t\t\n\t\t\tvector3D.x = c;\n\t\t\tvector3D.y = d;\n\t\t\tvector3D.z = ty;\n\t\t\t\n\t\t}else {\n\t\t\t\n\t\t\tvector3D.setTo (0, 0, 1);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function createBox (scaleX:Float, scaleY:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {\n\t\t\n\t\t//identity ();\n\t\t//rotate (rotation);\n\t\t//scale (scaleX, scaleY);\n\t\t//translate (tx, ty);\n\t\t\n\t\tif (rotation != 0) {\n\t\t\t\n\t\t\tvar cos = Math.cos (rotation);\n\t\t\tvar sin = Math.sin (rotation);\n\t\t\t\n\t\t\ta = cos * scaleX;\n\t\t\tb = sin * scaleY;\n\t\t\tc = -sin * scaleX;\n\t\t\td = cos * scaleY;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ta = scaleX;\n\t\t\tb = 0;\n\t\t\tc = 0;\n\t\t\td = scaleY;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\t\n\t}\n\t\n\t\n\tpublic function createGradientBox (width:Float, height:Float, rotation:Float = 0, tx:Float = 0, ty:Float = 0):Void {\n\t\t\n\t\ta = width / 1638.4;\n\t\td = height / 1638.4;\n\t\t\n\t\t// rotation is clockwise\n\t\tif (rotation != 0) {\n\t\t\t\n\t\t\tvar cos = Math.cos (rotation);\n\t\t\tvar sin = Math.sin (rotation);\n\t\t\t\n\t\t\tb = sin * d;\n\t\t\tc = -sin * a;\n\t\t\ta *= cos;\n\t\t\td *= cos;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tb = 0;\n\t\t\tc = 0;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.tx = tx + width / 2;\n\t\tthis.ty = ty + height / 2;\n\t\t\n\t}\n\t\n\t\n\tpublic function deltaTransformPoint (point:Point):Point {\n\t\t\n\t\treturn new Point (point.x * a + point.y * c, point.x * b + point.y * d);\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (matrix):Bool {\n\t\t\n\t\treturn (matrix != null && tx == matrix.tx && ty == matrix.ty && a == matrix.a && b == matrix.b && c == matrix.c && d == matrix.d);\n\t\t\n\t}\n\t\n\t\n\tpublic function identity ():Void {\n\t\t\n\t\ta = 1;\n\t\tb = 0;\n\t\tc = 0;\n\t\td = 1;\n\t\ttx = 0;\n\t\tty = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function invert ():Matrix {\n\t\t\n\t\tvar norm = a * d - b * c;\n\t\t\n\t\tif (norm == 0) {\n\t\t\t\n\t\t\ta = b = c = d = 0;\n\t\t\ttx = -tx;\n\t\t\tty = -ty;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tnorm = 1.0 / norm;\n\t\t\tvar a1 = d * norm;\n\t\t\td = a * norm;\n\t\t\ta = a1;\n\t\t\tb *= -norm;\n\t\t\tc *= -norm;\n\t\t\t\n\t\t\tvar tx1 = - a * tx - c * ty;\n\t\t\tty = - b * tx - d * ty;\n\t\t\ttx = tx1;\n\t\t\t\n\t\t}\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\tpublic function rotate (theta:Float):Void {\n\t\t\n\t\t/*\n\t\t   Rotate object \"after\" other transforms\n\t\t\t\n\t\t   [  a  b   0 ][  ma mb  0 ]\n\t\t   [  c  d   0 ][  mc md  0 ]\n\t\t   [  tx ty  1 ][  mtx mty 1 ]\n\t\t\t\n\t\t   ma = md = cos\n\t\t   mb = sin\n\t\t   mc = -sin\n\t\t   mtx = my = 0\n\t\t\t\n\t\t */\n\t\t\n\t\tvar cos = Math.cos (theta);\n\t\tvar sin = Math.sin (theta);\n\t\t\n\t\tvar a1 = a * cos - b * sin;\n\t\tb = a * sin + b * cos;\n\t\ta = a1;\n\t\t\n\t\tvar c1 = c * cos - d * sin;\n\t\td = c * sin + d * cos;\n\t\tc = c1;\n\t\t\n\t\tvar tx1 = tx * cos - ty * sin;\n\t\tty = tx * sin + ty * cos;\n\t\ttx = tx1;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tpublic function scale (sx:Float, sy:Float):Void {\n\t\t\n\t\t/*\n\t\t\t\n\t\t   Scale object \"after\" other transforms\n\t\t\t\n\t\t   [  a  b   0 ][  sx  0   0 ]\n\t\t   [  c  d   0 ][  0   sy  0 ]\n\t\t   [  tx ty  1 ][  0   0   1 ]\n\t\t */\n\t\t\n\t\ta *= sx;\n\t\tb *= sy;\n\t\tc *= sx;\n\t\td *= sy;\n\t\ttx *= sx;\n\t\tty *= sy;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tprivate function setRotation (theta:Float, scale:Float = 1):Void {\n\t\t\n\t\ta = Math.cos (theta) * scale;\n\t\tc = Math.sin (theta) * scale;\n\t\tb = -c;\n\t\td = a;\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n\tpublic function setTo (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):Void {\n\t\t\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function to3DString (roundPixels:Bool = false):String {\n\t\t\n\t\tif (roundPixels) {\n\t\t\t\n\t\t\treturn 'matrix3d($a, $b, 0, 0, $c, $d, 0, 0, 0, 0, 1, 0, ${Std.int (tx)}, ${Std.int (ty)}, 0, 1)';\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn 'matrix3d($a, $b, 0, 0, $c, $d, 0, 0, 0, 0, 1, 0, $tx, $ty, 0, 1)';\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toMozString () {\n\t\t\n\t\treturn 'matrix($a, $b, $c, $d, ${tx}px, ${ty}px)';\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn 'matrix($a, $b, $c, $d, $tx, $ty)';\n\t\t\n\t}\n\t\n\t\n\tpublic function transformPoint (pos:Point):Point {\n\t\t\n\t\treturn new Point (__transformX (pos.x, pos.y), __transformY (pos.x, pos.y));\n\t\t\n\t}\n\t\n\t\n\tpublic function translate (dx:Float, dy:Float):Void {\n\t\t\n\t\ttx += dx;\n\t\tty += dy;\n\t\t\n\t}\n\t\n\t\n\tprivate function toArray (transpose:Bool = false):Float32Array {\n\t\t\n\t\tif (__array == null) {\n\t\t\t\n\t\t\t__array = new Float32Array (9);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (transpose) {\n\t\t\t\n\t\t\t__array[0] = a;\n\t\t\t__array[1] = b;\n\t\t\t__array[2] = 0;\n\t\t\t__array[3] = c;\n\t\t\t__array[4] = d;\n\t\t\t__array[5] = 0;\n\t\t\t__array[6] = tx;\n\t\t\t__array[7] = ty;\n\t\t\t__array[8] = 1;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__array[0] = a;\n\t\t\t__array[1] = c;\n\t\t\t__array[2] = tx;\n\t\t\t__array[3] = b;\n\t\t\t__array[4] = d;\n\t\t\t__array[5] = ty;\n\t\t\t__array[6] = 0;\n\t\t\t__array[7] = 0;\n\t\t\t__array[8] = 1;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __array;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __cleanValues ():Void {\n\t\t\n\t\ta = Math.round (a * 1000) / 1000;\n\t\tb = Math.round (b * 1000) / 1000;\n\t\tc = Math.round (c * 1000) / 1000;\n\t\td = Math.round (d * 1000) / 1000;\n\t\ttx = Math.round (tx * 10) / 10;\n\t\tty = Math.round (ty * 10) / 10;\n\t\t\n\t}\n\t\n\t\n\tprivate function __toMatrix3 ():Matrix3 {\n\t\t\n\t\t__matrix3.setTo (a, b, c, d, tx, ty);\n\t\treturn __matrix3;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __transformInversePoint (point:Point):Void {\n\t\t\n\t\tvar norm = a * d - b * c;\n\t\t\n\t\tif (norm == 0) {\n\t\t\t\n\t\t\tpoint.x = -tx;\n\t\t\tpoint.y = -ty;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar px = (1.0 / norm) * (c * (ty - point.y) + d * (point.x - tx));\n\t\t\tpoint.y = (1.0 / norm) * ( a * (point.y - ty) + b * (tx - point.x) );\n\t\t\tpoint.x = px;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __transformInverseX (px:Float, py:Float):Float {\n\t\t\n\t\tvar norm = a * d - b * c;\n\t\t\n\t\tif (norm == 0) {\n\t\t\t\n\t\t\treturn -tx;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn (1.0 / norm) * (c * (ty - py) + d * (px - tx));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __transformInverseY (px:Float, py:Float):Float {\n\t\t\n\t\tvar norm = a * d - b * c;\n\t\t\n\t\tif (norm == 0) {\n\t\t\t\n\t\t\treturn -ty;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn (1.0 / norm) * (a * (py - ty) + b * (tx - px));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __transformPoint (point:Point):Void {\n\t\t\n\t\tvar px = point.x;\n\t\tvar py = point.y;\n\t\t\n\t\tpoint.x = __transformX (px, py);\n\t\tpoint.y = __transformY (px, py);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __transformX (px:Float, py:Float):Float {\n\t\t\n\t\treturn px * a + py * c + tx;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __transformY (px:Float, py:Float):Float {\n\t\t\n\t\treturn px * b + py * d + ty;\n\t\t\n\t}\n\t\n\t\n\tpublic inline function __translateTransformed (px:Float, py:Float):Void {\n\t\t\n\t\ttx = __transformX (px, py);\n\t\tty = __transformY (px, py);\n\t\t\n\t\t//__cleanValues ();\n\t\t\n\t}\n\t\n\t\n}","package openfl.geom;\n\n\nimport openfl.geom.Orientation3D;\nimport openfl.geom.Vector3D;\nimport openfl.errors.Error;\nimport openfl.Vector;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Matrix3D {\n\t\n\t\n\tpublic var determinant (get, never):Float;\n\tpublic var position (get, set):Vector3D;\n\tpublic var rawData:Vector<Float>;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (Matrix3D.prototype, {\n\t\t\t\"determinant\": { get: untyped __js__ (\"function () { return this.get_determinant (); }\"), set: untyped __js__ (\"function (v) { return this.set_determinant (v); }\") },\n\t\t\t\"position\": { get: untyped __js__ (\"function () { return this.get_position (); }\"), set: untyped __js__ (\"function (v) { return this.set_position (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (v:Vector<Float> = null) {\n\t\t\n\t\tif (v != null && v.length == 16) {\n\t\t\t\n\t\t\trawData = v.concat ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\trawData = Vector.ofArray ([ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ]);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function append (lhs:Matrix3D):Void {\n\t\t\n\t\tvar m111:Float = this.rawData[0], m121:Float = this.rawData[4], m131:Float = this.rawData[8], m141:Float = this.rawData[12],\n\t\t\tm112:Float = this.rawData[1], m122:Float = this.rawData[5], m132:Float = this.rawData[9], m142:Float = this.rawData[13],\n\t\t\tm113:Float = this.rawData[2], m123:Float = this.rawData[6], m133:Float = this.rawData[10], m143:Float = this.rawData[14],\n\t\t\tm114:Float = this.rawData[3], m124:Float = this.rawData[7], m134:Float = this.rawData[11], m144:Float = this.rawData[15],\n\t\t\tm211:Float = lhs.rawData[0], m221:Float = lhs.rawData[4], m231:Float = lhs.rawData[8], m241:Float = lhs.rawData[12],\n\t\t\tm212:Float = lhs.rawData[1], m222:Float = lhs.rawData[5], m232:Float = lhs.rawData[9], m242:Float = lhs.rawData[13],\n\t\t\tm213:Float = lhs.rawData[2], m223:Float = lhs.rawData[6], m233:Float = lhs.rawData[10], m243:Float = lhs.rawData[14],\n\t\t\tm214:Float = lhs.rawData[3], m224:Float = lhs.rawData[7], m234:Float = lhs.rawData[11], m244:Float = lhs.rawData[15];\n\t\t\n\t\trawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\n\t\trawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\n\t\trawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\n\t\trawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\n\t\t\n\t\trawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\n\t\trawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\n\t\trawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\n\t\trawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\n\t\t\n\t\trawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\n\t\trawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\n\t\trawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\n\t\trawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\n\t\t\n\t\trawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\n\t\trawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\n\t\trawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\n\t\trawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\n\t\t\n\t}\n\t\n\t\n\tpublic function appendRotation (degrees:Float, axis:Vector3D, pivotPoint:Vector3D = null):Void {\n\t\t\n\t\tvar tx:Float, ty:Float, tz:Float;\n\t\ttx = ty = tz = 0;\n\t\t\n\t\tif (pivotPoint != null) {\n\t\t\ttx = pivotPoint.x;\n\t\t\tty = pivotPoint.y;\n\t\t\ttz = pivotPoint.z;\n\t\t}\n\t\tvar radian = degrees * Math.PI/180;\n\t\tvar cos = Math.cos(radian);\n\t\tvar sin = Math.sin(radian);\n\t\tvar x = axis.x;\n\t\tvar y = axis.y;\n\t\tvar z = axis.z;\n\t\tvar x2 = x * x;\n\t\tvar y2 = y * y;\n\t\tvar z2 = z * z;\n\t\tvar ls = x2 + y2 + z2;\n\t\tif (ls != 0) {\n\t\t\tvar l = Math.sqrt(ls);\n\t\t\tx /= l;\n\t\t\ty /= l;\n\t\t\tz /= l;\n\t\t\tx2 /= ls;\n\t\t\ty2 /= ls;\n\t\t\tz2 /= ls;\n\t\t}\n\t\tvar ccos = 1 - cos;\n\t\tvar m = new Matrix3D();\n\t\tvar d = m.rawData;\n\t\td[0]  = x2 + (y2 + z2) * cos;\n\t\td[1]  = x * y * ccos + z * sin;\n\t\td[2]  = x * z * ccos - y * sin;\n\t\td[4]  = x * y * ccos - z * sin;\n\t\td[5]  = y2 + (x2 + z2) * cos;\n\t\td[6]  = y * z * ccos + x * sin;\n\t\td[8]  = x * z * ccos + y * sin;\n\t\td[9]  = y * z * ccos - x * sin;\n\t\td[10] = z2 + (x2 + y2) * cos;\n\t\td[12] = (tx * (y2 + z2) - x * (ty * y + tz * z)) * ccos + (ty * z - tz * y) * sin;\n\t\td[13] = (ty * (x2 + z2) - y * (tx * x + tz * z)) * ccos + (tz * x - tx * z) * sin;\n\t\td[14] = (tz * (x2 + y2) - z * (tx * x + ty * y)) * ccos + (tx * y - ty * x) * sin;\n\t\tthis.append(m);\n\t\t\n\t}\n\t\n\t\n\tpublic function appendScale (xScale:Float, yScale:Float, zScale:Float):Void {\n\t\t\n\t\tthis.append (new Matrix3D (Vector.ofArray ([ xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0 ])));\n\t\t\n\t}\n\t\n\t\n\tpublic function appendTranslation (x:Float, y:Float, z:Float):Void {\n\t\t\n\t\trawData[12] += x;\n\t\trawData[13] += y;\n\t\trawData[14] += z;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Matrix3D {\n\t\t\n\t\treturn new Matrix3D (this.rawData.copy ());\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnFrom (column:Int, vector3D:Vector3D):Void {\n\t\t\n\t\tswitch (column) {\n\t\t\t\n\t\t\tcase 0:\n\t\t\t\t\n\t\t\t\trawData[0] = vector3D.x;\n\t\t\t\trawData[1] = vector3D.y;\n\t\t\t\trawData[2] = vector3D.z;\n\t\t\t\trawData[3] = vector3D.w;\n\t\t\t\n\t\t\tcase 1:\n\t\t\t\t\n\t\t\t\trawData[4] = vector3D.x;\n\t\t\t\trawData[5] = vector3D.y;\n\t\t\t\trawData[6] = vector3D.z;\n\t\t\t\trawData[7] = vector3D.w;\n\t\t\t\n\t\t\tcase 2:\n\t\t\t\t\n\t\t\t\trawData[8] = vector3D.x;\n\t\t\t\trawData[9] = vector3D.y;\n\t\t\t\trawData[10] = vector3D.z;\n\t\t\t\trawData[11] = vector3D.w;\n\t\t\t\n\t\t\tcase 3:\n\t\t\t\t\n\t\t\t\trawData[12] = vector3D.x;\n\t\t\t\trawData[13] = vector3D.y;\n\t\t\t\trawData[14] = vector3D.z;\n\t\t\t\trawData[15] = vector3D.w;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyColumnTo (column:Int, vector3D:Vector3D):Void {\n\t\t\n\t\tswitch (column) {\n\t\t\t\n\t\t\tcase 0:\n\t\t\t\t\n\t\t\t\tvector3D.x = rawData[0];\n\t\t\t\tvector3D.y = rawData[1];\n\t\t\t\tvector3D.z = rawData[2];\n\t\t\t\tvector3D.w = rawData[3];\n\t\t\t\n\t\t\tcase 1:\n\t\t\t\t\n\t\t\t\tvector3D.x = rawData[4];\n\t\t\t\tvector3D.y = rawData[5];\n\t\t\t\tvector3D.z = rawData[6];\n\t\t\t\tvector3D.w = rawData[7];\n\t\t\t\n\t\t\tcase 2:\n\t\t\t\t\n\t\t\t\tvector3D.x = rawData[8];\n\t\t\t\tvector3D.y = rawData[9];\n\t\t\t\tvector3D.z = rawData[10];\n\t\t\t\tvector3D.w = rawData[11];\n\t\t\t\n\t\t\tcase 3:\n\t\t\t\t\n\t\t\t\tvector3D.x = rawData[12];\n\t\t\t\tvector3D.y = rawData[13];\n\t\t\t\tvector3D.z = rawData[14];\n\t\t\t\tvector3D.w = rawData[15];\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (other:Matrix3D):Void {\n\t\t\n\t\trawData = other.rawData.copy ();\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRawDataFrom (vector:Vector<Float>, index:UInt = 0, transpose:Bool = false):Void {\n\t\t\n\t\tif (transpose) {\n\t\t\t\n\t\t\tthis.transpose ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar length = vector.length - index;\n\t\t\n\t\tfor (i in 0...length) {\n\t\t\t\n\t\t\trawData[i] = vector[i + index];\n\t\t\t\n\t\t}\n\t\t\n\t\tif (transpose) {\n\t\t\t\n\t\t\tthis.transpose ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRawDataTo (vector:Vector<Float>, index:UInt = 0, transpose:Bool = false):Void {\n\t\t\n\t\tif (transpose) {\n\t\t\t\n\t\t\tthis.transpose ();\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (i in 0...rawData.length) {\n\t\t\t\n\t\t\tvector[i + index] = rawData[i];\n\t\t\t\n\t\t}\n\t\t\n\t\tif (transpose) {\n\t\t\t\n\t\t\tthis.transpose ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowFrom (row:UInt, vector3D:Vector3D):Void {\n\t\t\n\t\tswitch (row) {\n\t\t\t\n\t\t\tcase 0:\n\t\t\t\t\n\t\t\t\trawData[0] = vector3D.x;\n\t\t\t\trawData[4] = vector3D.y;\n\t\t\t\trawData[8] = vector3D.z;\n\t\t\t\trawData[12] = vector3D.w;\n\t\t\t\n\t\t\tcase 1:\n\t\t\t\t\n\t\t\t\trawData[1] = vector3D.x;\n\t\t\t\trawData[5] = vector3D.y;\n\t\t\t\trawData[9] = vector3D.z;\n\t\t\t\trawData[13] = vector3D.w;\n\t\t\t\n\t\t\tcase 2:\n\t\t\t\t\n\t\t\t\trawData[2] = vector3D.x;\n\t\t\t\trawData[6] = vector3D.y;\n\t\t\t\trawData[10] = vector3D.z;\n\t\t\t\trawData[14] = vector3D.w;\n\t\t\t\n\t\t\tcase 3:\n\t\t\t\t\n\t\t\t\trawData[3] = vector3D.x;\n\t\t\t\trawData[7] = vector3D.y;\n\t\t\t\trawData[11] = vector3D.z;\n\t\t\t\trawData[15] = vector3D.w;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyRowTo (row:Int, vector3D:Vector3D):Void {\n\t\t\n\t\tswitch (row) {\n\t\t\t\n\t\t\tcase 0:\n\t\t\t\t\n\t\t\t\tvector3D.x = rawData[0];\n\t\t\t\tvector3D.y = rawData[4];\n\t\t\t\tvector3D.z = rawData[8];\n\t\t\t\tvector3D.w = rawData[12];\n\t\t\t\n\t\t\tcase 1:\n\t\t\t\t\n\t\t\t\tvector3D.x = rawData[1];\n\t\t\t\tvector3D.y = rawData[5];\n\t\t\t\tvector3D.z = rawData[9];\n\t\t\t\tvector3D.w = rawData[13];\n\t\t\t\n\t\t\tcase 2:\n\t\t\t\t\n\t\t\t\tvector3D.x = rawData[2];\n\t\t\t\tvector3D.y = rawData[6];\n\t\t\t\tvector3D.z = rawData[10];\n\t\t\t\tvector3D.w = rawData[14];\n\t\t\t\n\t\t\tcase 3:\n\t\t\t\t\n\t\t\t\tvector3D.x = rawData[3];\n\t\t\t\tvector3D.y = rawData[7];\n\t\t\t\tvector3D.z = rawData[11];\n\t\t\t\tvector3D.w = rawData[15];\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyToMatrix3D (other:Matrix3D):Void {\n\t\t\n\t\tother.rawData = rawData.copy ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function create2D (x:Float, y:Float, scale:Float = 1, rotation:Float = 0):Matrix3D {\n\t\t\n\t\tvar theta = rotation * Math.PI / 180.0;\n\t\tvar c = Math.cos (theta);\n\t\tvar s = Math.sin (theta);\n\t\t\n\t\treturn new Matrix3D (Vector.ofArray ([ c * scale, -s * scale, 0, 0, s * scale, c * scale, 0, 0, 0, 0, 1, 0, x, y, 0, 1 ]));\n\t\t\n\t}\n\t\n\t\n\tpublic static function createABCD (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):Matrix3D {\n\t\t\n\t\treturn new Matrix3D (Vector.ofArray ([ a, b, 0, 0, c, d, 0, 0, 0, 0, 1, 0, tx, ty, 0, 1 ]));\n\t\t\n\t}\n\t\n\t\n\tpublic static function createOrtho (x0:Float, x1:Float, y0:Float, y1:Float, zNear:Float, zFar:Float):Matrix3D {\n\t\t\n\t\tvar sx = 1.0 / (x1 - x0);\n\t\tvar sy = 1.0 / (y1 - y0);\n\t\tvar sz = 1.0 / (zFar - zNear);\n\t\t\n\t\treturn new Matrix3D (Vector.ofArray ([ 2.0 * sx, 0, 0, 0, 0, 2.0 * sy, 0, 0, 0, 0, -2.0 * sz, 0, -(x0 + x1) * sx, -(y0 + y1) * sy, -(zNear + zFar) * sz, 1 ]));\n\t\t\n\t}\n\t\n\t\n\tpublic function decompose (?orientationStyle:Orientation3D):Vector<Vector3D> {\n\t\t\n\t\tif (orientationStyle == null) {\n\t\t\t\n\t\t\torientationStyle = Orientation3D.EULER_ANGLES;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar vec = new Vector<Vector3D> ();\n\t\tvar m = clone ();\n\t\tvar mr = m.rawData.copy ();\n\t\t\n\t\tvar pos = new Vector3D (mr[12], mr[13], mr[14]);\n\t\tmr[12] = 0;\n\t\tmr[13] = 0;\n\t\tmr[14] = 0;\n\t\t\n\t\tvar scale = new Vector3D ();\n\t\t\n\t\tscale.x = Math.sqrt(mr[0] * mr[0] + mr[1] * mr[1] + mr[2] * mr[2]);\n\t\tscale.y = Math.sqrt(mr[4] * mr[4] + mr[5] * mr[5] + mr[6] * mr[6]);\n\t\tscale.z = Math.sqrt(mr[8] * mr[8] + mr[9] * mr[9] + mr[10] * mr[10]);\n\t\t\n\t\tif (mr[0] * (mr[5] * mr[10] - mr[6] * mr[9]) - mr[1] * (mr[4] * mr[10] - mr[6] * mr[8]) + mr[2] * (mr[4] * mr[9] - mr[5] * mr[8]) < 0) {\n\t\t\t\n\t\t\tscale.z = -scale.z;\n\t\t\t\n\t\t}\n\t\t\n\t\tmr[0] /= scale.x;\n\t\tmr[1] /= scale.x;\n\t\tmr[2] /= scale.x;\n\t\tmr[4] /= scale.y;\n\t\tmr[5] /= scale.y;\n\t\tmr[6] /= scale.y;\n\t\tmr[8] /= scale.z;\n\t\tmr[9] /= scale.z;\n\t\tmr[10] /= scale.z;\n\t\t\n\t\tvar rot = new Vector3D ();\n\t\t\n\t\tswitch (orientationStyle) {\n\t\t\t\n\t\t\tcase Orientation3D.AXIS_ANGLE:\n\t\t\t\t\n\t\t\t\trot.w = Math.acos ((mr[0] + mr[5] + mr[10] - 1) / 2);\n\t\t\t\t\n\t\t\t\tvar len = Math.sqrt ((mr[6] - mr[9]) * (mr[6] - mr[9]) + (mr[8] - mr[2]) * (mr[8] - mr[2]) + (mr[1] - mr[4]) * (mr[1] - mr[4]));\n\t\t\t\t\n\t\t\t\tif (len != 0) {\n\t\t\t\t\t\n\t\t\t\t\trot.x = (mr[6] - mr[9]) / len;\n\t\t\t\t\trot.y = (mr[8] - mr[2]) / len;\n\t\t\t\t\trot.z = (mr[1] - mr[4]) / len;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\trot.x = rot.y = rot.z = 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase Orientation3D.QUATERNION:\n\t\t\t\t\n\t\t\t\tvar tr = mr[0] + mr[5] + mr[10];\n\t\t\t\t\n\t\t\t\tif (tr > 0) {\n\t\t\t\t\t\n\t\t\t\t\trot.w = Math.sqrt (1 + tr) / 2;\n\t\t\t\t\t\n\t\t\t\t\trot.x = (mr[6] - mr[9]) / (4 * rot.w);\n\t\t\t\t\trot.y = (mr[8] - mr[2]) / (4 * rot.w);\n\t\t\t\t\trot.z = (mr[1] - mr[4]) / (4 * rot.w);\n\t\t\t\t\t\n\t\t\t\t} else if ((mr[0] > mr[5]) && (mr[0] > mr[10])) {\n\t\t\t\t\t\n\t\t\t\t\trot.x = Math.sqrt (1 + mr[0] - mr[5] - mr[10]) / 2;\n\t\t\t\t\t\n\t\t\t\t\trot.w = (mr[6] - mr[9]) / (4 * rot.x);\n\t\t\t\t\trot.y = (mr[1] + mr[4]) / (4 * rot.x);\n\t\t\t\t\trot.z = (mr[8] + mr[2]) / (4 * rot.x);\n\t\t\t\t\t\n\t\t\t\t} else if (mr[5] > mr[10]) {\n\t\t\t\t\t\n\t\t\t\t\trot.y = Math.sqrt (1 + mr[5] - mr[0] - mr[10]) / 2;\n\t\t\t\t\t\n\t\t\t\t\trot.x = (mr[1] + mr[4]) / (4 * rot.y);\n\t\t\t\t\trot.w = (mr[8] - mr[2]) / (4 * rot.y);\n\t\t\t\t\trot.z = (mr[6] + mr[9]) / (4 * rot.y);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\trot.z = Math.sqrt (1 + mr[10] - mr[0] - mr[5]) / 2;\n\t\t\t\t\t\n\t\t\t\t\trot.x = (mr[8] + mr[2]) / (4 * rot.z);\n\t\t\t\t\trot.y = (mr[6] + mr[9]) / (4 * rot.z);\n\t\t\t\t\trot.w = (mr[1] - mr[4]) / (4 * rot.z);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\t\t\t\t\n\t\t\t\trot.y = Math.asin (-mr[2]);\n\t\t\t\t\n\t\t\t\tif (mr[2] != 1 && mr[2] != -1) {\n\t\t\t\t\t\n\t\t\t\t\trot.x = Math.atan2 (mr[6], mr[10]);\n\t\t\t\t\trot.z = Math.atan2 (mr[1], mr[0]);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\trot.z = 0;\n\t\t\t\t\trot.x = Math.atan2 (mr[4], mr[5]);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvec.push (pos);\n\t\tvec.push (rot);\n\t\tvec.push (scale);\n\t\t\n\t\treturn vec;\n\t\t\n\t}\n\t\n\t\n\tpublic function deltaTransformVector (v:Vector3D):Vector3D {\n\t\t\n\t\tvar x:Float = v.x, y:Float = v.y, z:Float = v.z;\n\t\t\n\t\treturn new Vector3D ((x * rawData[0] + y * rawData[4] + z * rawData[8] + rawData[3]), (x * rawData[1] + y * rawData[5] + z * rawData[9] + rawData[7]), (x * rawData[2] + y * rawData[6] + z * rawData[10] + rawData[11]), 0);\n\t\t\n\t}\n\t\n\t\n\tpublic function identity ():Void {\n\t\t\n\t\trawData = Vector.ofArray ([ 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0 ]);\n\t\t\n\t}\n\t\n\t\n\tpublic static function interpolate (thisMat:Matrix3D, toMat:Matrix3D, percent:Float):Matrix3D {\n\t\t\n\t\tvar m = new Matrix3D ();\n\t\t\n\t\tfor (i in 0...16) {\n\t\t\t\n\t\t\tm.rawData[i] = thisMat.rawData[i] + (toMat.rawData[i] - thisMat.rawData[i]) * percent;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn m;\n\t\t\n\t}\n\t\n\t\n\tpublic function interpolateTo (toMat:Matrix3D, percent:Float):Void {\n\t\t\n\t\tfor (i in 0...16) {\n\t\t\t\n\t\t\trawData[i] = rawData[i] + (toMat.rawData[i] - rawData[i]) * percent;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function invert ():Bool {\n\t\t\n\t\tvar d = determinant;\n\t\tvar invertable = Math.abs (d) > 0.00000000001;\n\t\t\n\t\tif (invertable) {\n\t\t\t\n\t\t\td = 1 / d;\n\t\t\t\n\t\t\tvar m11:Float = rawData[0]; var m21:Float = rawData[4]; var m31:Float = rawData[8]; var m41:Float = rawData[12];\n\t\t\tvar m12:Float = rawData[1]; var m22:Float = rawData[5]; var m32:Float = rawData[9]; var m42:Float = rawData[13];\n\t\t\tvar m13:Float = rawData[2]; var m23:Float = rawData[6]; var m33:Float = rawData[10]; var m43:Float = rawData[14];\n\t\t\tvar m14:Float = rawData[3]; var m24:Float = rawData[7]; var m34:Float = rawData[11]; var m44:Float = rawData[15];\n\t\t\t\n\t\t\trawData[0] = d * (m22 * (m33 * m44 - m43 * m34) - m32 * (m23 * m44 - m43 * m24) + m42 * (m23 * m34 - m33 * m24));\n\t\t\trawData[1] = -d * (m12 * (m33 * m44 - m43 * m34) - m32 * (m13 * m44 - m43 * m14) + m42 * (m13 * m34 - m33 * m14));\n\t\t\trawData[2] = d * (m12 * (m23 * m44 - m43 * m24) - m22 * (m13 * m44 - m43 * m14) + m42 * (m13 * m24 - m23 * m14));\n\t\t\trawData[3] = -d * (m12 * (m23 * m34 - m33 * m24) - m22 * (m13 * m34 - m33 * m14) + m32 * (m13 * m24 - m23 * m14));\n\t\t\trawData[4] = -d * (m21 * (m33 * m44 - m43 * m34) - m31 * (m23 * m44 - m43 * m24) + m41 * (m23 * m34 - m33 * m24));\n\t\t\trawData[5] = d * (m11 * (m33 * m44 - m43 * m34) - m31 * (m13 * m44 - m43 * m14) + m41 * (m13 * m34 - m33 * m14));\n\t\t\trawData[6] = -d * (m11 * (m23 * m44 - m43 * m24) - m21 * (m13 * m44 - m43 * m14) + m41 * (m13 * m24 - m23 * m14));\n\t\t\trawData[7] = d * (m11 * (m23 * m34 - m33 * m24) - m21 * (m13 * m34 - m33 * m14) + m31 * (m13 * m24 - m23 * m14));\n\t\t\trawData[8] = d * (m21 * (m32 * m44 - m42 * m34) - m31 * (m22 * m44 - m42 * m24) + m41 * (m22 * m34 - m32 * m24));\n\t\t\trawData[9] = -d * (m11 * (m32 * m44 - m42 * m34) - m31 * (m12 * m44 - m42 * m14) + m41 * (m12 * m34 - m32 * m14));\n\t\t\trawData[10] = d * (m11 * (m22 * m44 - m42 * m24) - m21 * (m12 * m44 - m42 * m14) + m41 * (m12 * m24 - m22 * m14));\n\t\t\trawData[11] = -d * (m11 * (m22 * m34 - m32 * m24) - m21 * (m12 * m34 - m32 * m14) + m31 * (m12 * m24 - m22 * m14));\n\t\t\trawData[12] = -d * (m21 * (m32 * m43 - m42 * m33) - m31 * (m22 * m43 - m42 * m23) + m41 * (m22 * m33 - m32 * m23));\n\t\t\trawData[13] = d * (m11 * (m32 * m43 - m42 * m33) - m31 * (m12 * m43 - m42 * m13) + m41 * (m12 * m33 - m32 * m13));\n\t\t\trawData[14] = -d * (m11 * (m22 * m43 - m42 * m23) - m21 * (m12 * m43 - m42 * m13) + m41 * (m12 * m23 - m22 * m13));\n\t\t\trawData[15] = d * (m11 * (m22 * m33 - m32 * m23) - m21 * (m12 * m33 - m32 * m13) + m31 * (m12 * m23 - m22 * m13));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn invertable;\n\t\t\n\t}\n\t\n\t\n\tpublic function pointAt (pos:Vector3D, at:Vector3D = null, up:Vector3D = null):Void {\n\t\t\n\t\tif (at == null) {\n\t\t\t\n\t\t\tat = new Vector3D (0, 0, -1);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (up == null) {\n\t\t\t\n\t\t\tup = new Vector3D (0, -1, 0);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar dir = at.subtract (pos);\n\t\tvar vup = up.clone ();\n\t\tvar right:Vector3D;\n\t\t\n\t\tdir.normalize ();\n\t\tvup.normalize ();\n\t\t\n\t\tvar dir2 = dir.clone ();\n\t\tdir2.scaleBy (vup.dotProduct (dir));\n\t\t\n\t\tvup = vup.subtract (dir2);\n\t\t\n\t\tif (vup.length > 0) {\n\t\t\t\n\t\t\tvup.normalize ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (dir.x != 0) {\n\t\t\t\t\n\t\t\t\tvup = new Vector3D (-dir.y, dir.x, 0);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tvup = new Vector3D (1, 0, 0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tright = vup.crossProduct (dir);\n\t\tright.normalize ();\n\t\t\n\t\trawData[0] = right.x;\n\t\trawData[4] = right.y;\n\t\trawData[8] = right.z;\n\t\trawData[12] = 0.0;\n\t\trawData[1] = vup.x;\n\t\trawData[5] = vup.y;\n\t\trawData[9] = vup.z;\n\t\trawData[13] = 0.0;\n\t\trawData[2] = dir.x;\n\t\trawData[6] = dir.y;\n\t\trawData[10] = dir.z;\n\t\trawData[14] = 0.0;\n\t\trawData[3] = pos.x;\n\t\trawData[7] = pos.y;\n\t\trawData[11] = pos.z;\n\t\trawData[15] = 1.0;\n\t\t\n\t}\n\t\n\t\n\tpublic function prepend (rhs:Matrix3D):Void {\n\t\t\n\t\tvar m111:Float = rhs.rawData[0], m121:Float = rhs.rawData[4], m131:Float = rhs.rawData[8], m141:Float = rhs.rawData[12],\n\t\t\tm112:Float = rhs.rawData[1], m122:Float = rhs.rawData[5], m132:Float = rhs.rawData[9], m142:Float = rhs.rawData[13],\n\t\t\tm113:Float = rhs.rawData[2], m123:Float = rhs.rawData[6], m133:Float = rhs.rawData[10], m143:Float = rhs.rawData[14],\n\t\t\tm114:Float = rhs.rawData[3], m124:Float = rhs.rawData[7], m134:Float = rhs.rawData[11], m144:Float = rhs.rawData[15],\n\t\t\tm211:Float = this.rawData[0], m221:Float = this.rawData[4], m231:Float = this.rawData[8], m241:Float = this.rawData[12],\n\t\t\tm212:Float = this.rawData[1], m222:Float = this.rawData[5], m232:Float = this.rawData[9], m242:Float = this.rawData[13],\n\t\t\tm213:Float = this.rawData[2], m223:Float = this.rawData[6], m233:Float = this.rawData[10], m243:Float = this.rawData[14],\n\t\t\tm214:Float = this.rawData[3], m224:Float = this.rawData[7], m234:Float = this.rawData[11], m244:Float = this.rawData[15];\n\t\t\n\t\trawData[0] = m111 * m211 + m112 * m221 + m113 * m231 + m114 * m241;\n\t\trawData[1] = m111 * m212 + m112 * m222 + m113 * m232 + m114 * m242;\n\t\trawData[2] = m111 * m213 + m112 * m223 + m113 * m233 + m114 * m243;\n\t\trawData[3] = m111 * m214 + m112 * m224 + m113 * m234 + m114 * m244;\n\t\t\n\t\trawData[4] = m121 * m211 + m122 * m221 + m123 * m231 + m124 * m241;\n\t\trawData[5] = m121 * m212 + m122 * m222 + m123 * m232 + m124 * m242;\n\t\trawData[6] = m121 * m213 + m122 * m223 + m123 * m233 + m124 * m243;\n\t\trawData[7] = m121 * m214 + m122 * m224 + m123 * m234 + m124 * m244;\n\t\t\n\t\trawData[8] = m131 * m211 + m132 * m221 + m133 * m231 + m134 * m241;\n\t\trawData[9] = m131 * m212 + m132 * m222 + m133 * m232 + m134 * m242;\n\t\trawData[10] = m131 * m213 + m132 * m223 + m133 * m233 + m134 * m243;\n\t\trawData[11] = m131 * m214 + m132 * m224 + m133 * m234 + m134 * m244;\n\t\t\n\t\trawData[12] = m141 * m211 + m142 * m221 + m143 * m231 + m144 * m241;\n\t\trawData[13] = m141 * m212 + m142 * m222 + m143 * m232 + m144 * m242;\n\t\trawData[14] = m141 * m213 + m142 * m223 + m143 * m233 + m144 * m243;\n\t\trawData[15] = m141 * m214 + m142 * m224 + m143 * m234 + m144 * m244;\n\t\t\n\t}\n\t\n\t\n\tpublic function prependRotation (degrees:Float, axis:Vector3D, pivotPoint:Vector3D = null):Void {\n\t\t\n\t\tvar tx:Float, ty:Float, tz:Float;\n\t\ttx = ty = tz = 0;\n\t\tif ( pivotPoint != null ) {\n\t\t\ttx = pivotPoint.x;\n\t\t\tty = pivotPoint.y;\n\t\t\ttz = pivotPoint.z;\n\t\t}\n\t\tvar radian = degrees *  Math.PI/180;\n\t\tvar cos = Math.cos(radian);\n\t\tvar sin = Math.sin(radian);\n\t\tvar x = axis.x;\n\t\tvar y = axis.y;\n\t\tvar z = axis.z;\n\t\tvar x2 = x * x;\n\t\tvar y2 = y * y;\n\t\tvar z2 = z * z;\n\t\tvar ls = x2 + y2 + z2;\n\t\tif (ls != 0) {\n\t\t\tvar l = Math.sqrt(ls);\n\t\t\tx /= l;\n\t\t\ty /= l;\n\t\t\tz /= l;\n\t\t\tx2 /= ls;\n\t\t\ty2 /= ls;\n\t\t\tz2 /= ls;\n\t\t}\n\t\tvar ccos = 1 - cos;\n\t\tvar m = new Matrix3D();\n\t\tvar d = m.rawData;\n\t\td[0]  = x2 + (y2 + z2) * cos;\n\t\td[1]  = x * y * ccos + z * sin;\n\t\td[2]  = x * z * ccos - y * sin;\n\t\td[4]  = x * y * ccos - z * sin;\n\t\td[5]  = y2 + (x2 + z2) * cos;\n\t\td[6]  = y * z * ccos + x * sin;\n\t\td[8]  = x * z * ccos + y * sin;\n\t\td[9]  = y * z * ccos - x * sin;\n\t\td[10] = z2 + (x2 + y2) * cos;\n\t\td[12] = (tx * (y2 + z2) - x * (ty * y + tz * z)) * ccos + (ty * z - tz * y) * sin;\n\t\td[13] = (ty * (x2 + z2) - y * (tx * x + tz * z)) * ccos + (tz * x - tx * z) * sin;\n\t\td[14] = (tz * (x2 + y2) - z * (tx * x + ty * y)) * ccos + (tx * y - ty * x) * sin;\n\t\t\n\t\tthis.prepend (m);\n\t\t\n\t}\n\t\n\t\n\tpublic function prependScale (xScale:Float, yScale:Float, zScale:Float):Void {\n\t\t\n\t\tthis.prepend (new Matrix3D (Vector.ofArray ([xScale, 0.0, 0.0, 0.0, 0.0, yScale, 0.0, 0.0, 0.0, 0.0, zScale, 0.0, 0.0, 0.0, 0.0, 1.0])));\n\t\t\n\t}\n\t\n\t\n\tpublic function prependTranslation (x:Float, y:Float, z:Float):Void {\n\t\t\n\t\tvar m = new Matrix3D ();\n\t\tm.position = new Vector3D (x, y, z);\n\t\tthis.prepend (m);\n\t\t\n\t}\n\t\n\t\n\tpublic function recompose (components:Vector<Vector3D>, ?orientationStyle:Orientation3D):Bool {\n\t\t\n\t\tif (components.length < 3 || components[2].x == 0 || components[2].y == 0 || components[2].z == 0) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t  \n\t\tif (orientationStyle == null) {\n\t\t\t\n\t\t\torientationStyle = Orientation3D.EULER_ANGLES;\n\t\t\t\n\t\t}\n\t\t\n\t\tidentity ();\n\t\t\n\t\tvar scale = [];\n\t\tscale[0] = scale[1] = scale[2] = components[2].x;\n\t\tscale[4] = scale[5] = scale[6] = components[2].y;\n\t\tscale[8] = scale[9] = scale[10] = components[2].z;\n\t\t\n\t\tswitch (orientationStyle) {\n\t\t\t\n\t\t\tcase Orientation3D.EULER_ANGLES:\n\t\t\t\t\n\t\t\t\tvar cx = Math.cos (components[1].x);\n\t\t\t\tvar cy = Math.cos (components[1].y);\n\t\t\t\tvar cz = Math.cos (components[1].z);\n\t\t\t\tvar sx = Math.sin (components[1].x);\n\t\t\t\tvar sy = Math.sin (components[1].y);\n\t\t\t\tvar sz = Math.sin (components[1].z);\n\t\t\t\t\n\t\t\t\trawData[0] = cy * cz * scale[0];\n\t\t\t\trawData[1] = cy * sz * scale[1];\n\t\t\t\trawData[2] = - sy * scale[2];\n\t\t\t\trawData[3] = 0;\n\t\t\t\trawData[4] = (sx * sy * cz - cx * sz) * scale[4];\n\t\t\t\trawData[5] = (sx * sy * sz + cx * cz) * scale[5];\n\t\t\t\trawData[6] = sx * cy * scale[6];\n\t\t\t\trawData[7] = 0;\n\t\t\t\trawData[8] = (cx * sy * cz + sx * sz) * scale[8];\n\t\t\t\trawData[9] = (cx * sy * sz - sx * cz) * scale[9];\n\t\t\t\trawData[10] = cx * cy * scale[10];\n\t\t\t\trawData[11] = 0;\n\t\t\t\trawData[12] = components[0].x;\n\t\t\t\trawData[13] = components[0].y;\n\t\t\t\trawData[14] = components[0].z;\n\t\t\t\trawData[15] = 1;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tvar x = components[1].x;\n\t\t\t\tvar y = components[1].y;\n\t\t\t\tvar z = components[1].z;\n\t\t\t\tvar w = components[1].w;\n\t\t\t\t\n\t\t\t\tif (orientationStyle == Orientation3D.AXIS_ANGLE) {\n\t\t\t\t\t\n\t\t\t\t\tx *= Math.sin (w / 2);\n\t\t\t\t\ty *= Math.sin (w / 2);\n\t\t\t\t\tz *= Math.sin (w / 2);\n\t\t\t\t\tw = Math.cos (w / 2);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trawData[0] = (1 - 2 * y * y - 2 * z * z) * scale[0];\n\t\t\t\trawData[1] = (2 * x * y + 2 * w * z) * scale[1];\n\t\t\t\trawData[2] = (2 * x * z - 2 * w * y) * scale[2];\n\t\t\t\trawData[3] = 0;\n\t\t\t\trawData[4] = (2 * x * y - 2 * w * z) * scale[4];\n\t\t\t\trawData[5] = (1 - 2 * x * x - 2 * z * z) * scale[5];\n\t\t\t\trawData[6] = (2 * y * z + 2 * w * x) * scale[6];\n\t\t\t\trawData[7] = 0;\n\t\t\t\trawData[8] = (2 * x * z + 2 * w * y) * scale[8];\n\t\t\t\trawData[9] = (2 * y * z - 2 * w * x) * scale[9];\n\t\t\t\trawData[10] = (1 - 2 * x * x - 2 * y * y) * scale[10];\n\t\t\t\trawData[11] = 0;\n\t\t\t\trawData[12] = components[0].x;\n\t\t\t\trawData[13] = components[0].y;\n\t\t\t\trawData[14] = components[0].z;\n\t\t\t\trawData[15] = 1;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (components[2].x == 0) {\n\t\t\t\n\t\t\trawData[0] = 1e-15;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (components[2].y == 0) {\n\t\t\t\n\t\t\trawData[5] = 1e-15;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (components[2].z == 0) {\n\t\t\t\n\t\t\trawData[10] = 1e-15;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn !(components[2].x == 0 || components[2].y == 0 || components[2].y == 0);\n\t\t\n\t}\n\t\n\t\n\tpublic function transformVector (v:Vector3D):Vector3D {\n\t\t\n\t\tvar x = v.x;\n\t\tvar y = v.y;\n\t\tvar z = v.z;\n\t\t\n\t\treturn new Vector3D ((x * rawData[0] + y * rawData[4] + z * rawData[8] + rawData[12]), (x * rawData[1] + y * rawData[5] + z * rawData[9] + rawData[13]), (x * rawData[2] + y * rawData[6] + z * rawData[10] + rawData[14]), (x * rawData[3] + y * rawData[7] + z * rawData[11] + rawData[15]));\n\t\t\n\t}\n\t\n\t\n\tpublic function transformVectors (vin:Vector<Float>, vout:Vector<Float>):Void {\n\t\t\n\t\tvar i = 0;\n\t\tvar x, y, z;\n\t\t\n\t\twhile (i + 3 <= vin.length) {\n\t\t\t\n\t\t\tx = vin[i];\n\t\t\ty = vin[i + 1];\n\t\t\tz = vin[i + 2];\n\t\t\t\n\t\t\tvout[i] = x * rawData[0] + y * rawData[4] + z * rawData[8] + rawData[12];\n\t\t\tvout[i + 1] = x * rawData[1] + y * rawData[5] + z * rawData[9] + rawData[13];\n\t\t\tvout[i + 2] = x * rawData[2] + y * rawData[6] + z * rawData[10] + rawData[14];\n\t\t\t\n\t\t\ti += 3;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function transpose ():Void {\n\t\t\n\t\tvar oRawData = rawData.copy ();\n\t\trawData[1] = oRawData[4];\n\t\trawData[2] = oRawData[8];\n\t\trawData[3] = oRawData[12];\n\t\trawData[4] = oRawData[1];\n\t\trawData[6] = oRawData[9];\n\t\trawData[7] = oRawData[13];\n\t\trawData[8] = oRawData[2];\n\t\trawData[9] = oRawData[6];\n\t\trawData[11] = oRawData[14];\n\t\trawData[12] = oRawData[3];\n\t\trawData[13] = oRawData[7];\n\t\trawData[14] = oRawData[11];\n\t\t\n\t}\n\t\n\t\n\tprivate static function __getAxisRotation (x:Float, y:Float, z:Float, degrees:Float):Matrix3D {\n\t\t\n\t\tvar m = new Matrix3D ();\n\t\t\n\t\tvar a1 = new Vector3D (x, y, z);\n\t\tvar rad = -degrees * (Math.PI / 180);\n\t\tvar c = Math.cos (rad);\n\t\tvar s = Math.sin (rad);\n\t\tvar t = 1.0 - c;\n\t\t\n\t\tm.rawData[0] = c + a1.x * a1.x * t;\n\t\tm.rawData[5] = c + a1.y * a1.y * t;\n\t\tm.rawData[10] = c + a1.z * a1.z * t;\n\t\t\n\t\tvar tmp1 = a1.x * a1.y * t;\n\t\tvar tmp2 = a1.z * s;\n\t\tm.rawData[4] = tmp1 + tmp2;\n\t\tm.rawData[1] = tmp1 - tmp2;\n\t\ttmp1 = a1.x * a1.z * t;\n\t\ttmp2 = a1.y * s;\n\t\tm.rawData[8] = tmp1 - tmp2;\n\t\tm.rawData[2] = tmp1 + tmp2;\n\t\ttmp1 = a1.y * a1.z * t;\n\t\ttmp2 = a1.x*s;\n\t\tm.rawData[9] = tmp1 + tmp2;\n\t\tm.rawData[6] = tmp1 - tmp2;\n\t\t\n\t\treturn m;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tpublic function get_determinant ():Float {\n\t\t\n\t\treturn 1 * ((rawData[0] * rawData[5] - rawData[4] * rawData[1]) * (rawData[10] * rawData[15] - rawData[14] * rawData[11]) \n\t\t\t- (rawData[0] * rawData[9] - rawData[8] * rawData[1]) * (rawData[6] * rawData[15] - rawData[14] * rawData[7])\n\t\t\t+ (rawData[0] * rawData[13] - rawData[12] * rawData[1]) * (rawData[6] * rawData[11] - rawData[10] * rawData[7])\n\t\t\t+ (rawData[4] * rawData[9] - rawData[8] * rawData[5]) * (rawData[2] * rawData[15] - rawData[14] * rawData[3])\n\t\t\t- (rawData[4] * rawData[13] - rawData[12] * rawData[5]) * (rawData[2] * rawData[11] - rawData[10] * rawData[3])\n\t\t\t+ (rawData[8] * rawData[13] - rawData[12] * rawData[9]) * (rawData[2] * rawData[7] - rawData[6] * rawData[3]));\n\t\n\t}\n\t\n\t\n\tpublic function get_position ():Vector3D {\n\t\t\n\t\treturn new Vector3D (rawData[12], rawData[13], rawData[14]);\n\t\t\n\t}\n\t\n\t\n\tpublic function set_position (val:Vector3D):Vector3D {\n\t\t\n\t\trawData[12] = val.x;\n\t\trawData[13] = val.y;\n\t\trawData[14] = val.z;\n\t\treturn val;\n\t\t\n\t}\n\t\n\t\n}","package openfl.geom;\n\n\n@:enum abstract Orientation3D(Null<Int>) {\n\t\n\tpublic var AXIS_ANGLE = 0;\n\tpublic var EULER_ANGLES = 1;\n\tpublic var QUATERNION = 2;\n\t\n\t@:from private static function fromString (value:String):Orientation3D {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"axisAngle\": AXIS_ANGLE;\n\t\t\tcase \"eulerAngles\": EULER_ANGLES;\n\t\t\tcase \"quaternion\": QUATERNION;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Orientation3D.AXIS_ANGLE: \"axisAngle\";\n\t\t\tcase Orientation3D.EULER_ANGLES: \"eulerAngles\";\n\t\t\tcase Orientation3D.QUATERNION: \"quaternion\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.geom;\n\n\nimport lime.math.Vector2;\nimport lime.utils.ObjectPool;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Point {\n\t\n\t\n\tprivate static var __limeVector2:Vector2;\n\tprivate static var __pool = new ObjectPool<Point> (function () return new Point (), function (p) p.setTo (0, 0));\n\t\n\tpublic var length (get, never):Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperty (Point.prototype, \"length\", { get: untyped __js__ (\"function () { return this.get_length (); }\") });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (x:Float = 0, y:Float = 0) {\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\t\n\t}\n\t\n\t\n\tpublic function add (v:Point):Point {\n\t\t\n\t\treturn new Point (v.x + x, v.y + y);\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Point {\n\t\t\n\t\treturn new Point (x, y);\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourcePoint:Point):Void {\n\t\t\n\t\tx = sourcePoint.x;\n\t\ty = sourcePoint.y;\n\t\t\n\t}\n\t\n\t\n\tpublic static function distance (pt1:Point, pt2:Point):Float {\n\t\t\n\t\tvar dx = pt1.x - pt2.x;\n\t\tvar dy = pt1.y - pt2.y;\n\t\treturn Math.sqrt (dx * dx + dy * dy);\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (toCompare:Point):Bool {\n\t\t\n\t\treturn toCompare != null && toCompare.x == x && toCompare.y == y;\n\t\t\n\t}\n\t\n\t\n\tpublic static function interpolate (pt1:Point, pt2:Point, f:Float):Point {\n\t\t\n\t\treturn new Point (pt2.x + f * (pt1.x - pt2.x), pt2.y + f * (pt1.y - pt2.y));\n\t\t\n\t}\n\t\n\t\n\tpublic function normalize (thickness:Float):Void {\n\t\t\n\t\tif (x == 0 && y == 0) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar norm = thickness / Math.sqrt (x * x + y * y);\n\t\t\tx *= norm;\n\t\t\ty *= norm;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function offset (dx:Float, dy:Float):Void {\n\t\t\n\t\tx += dx;\n\t\ty += dy;\n\t\t\n\t}\n\t\n\t\n\tpublic static function polar (len:Float, angle:Float):Point {\n\t\t\n\t\treturn new Point (len * Math.cos (angle), len * Math.sin (angle));\n\t\t\n\t}\n\t\n\t\n\tpublic function setTo (xa:Float, ya:Float):Void {\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t}\n\t\n\t\n\tpublic function subtract (v:Point):Point {\n\t\t\n\t\treturn new Point (x - v.x, y - v.y);\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn '(x=$x, y=$y)';\n\t\t\n\t}\n\t\n\t\n\tprivate function __toLimeVector2 ():Vector2 {\n\t\t\n\t\tif (__limeVector2 == null) {\n\t\t\t\n\t\t\t__limeVector2 = new Vector2 ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__limeVector2.setTo (x, y);\n\t\treturn __limeVector2;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_length ():Float {\n\t\t\n\t\treturn Math.sqrt (x * x + y * y);\n\t\t\n\t}\n\t\n\t\n}","package openfl.geom;\n\n\nimport lime.math.Rectangle in LimeRectangle;\nimport lime.utils.ObjectPool;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Rectangle {\n\t\n\t\n\tprivate static var __limeRectangle:LimeRectangle;\n\tprivate static var __pool = new ObjectPool<Rectangle> (function () return new Rectangle (), function (r) r.setTo (0, 0, 0, 0));\n\t\n\tpublic var bottom (get, set):Float;\n\tpublic var bottomRight (get, set):Point;\n\tpublic var height:Float;\n\tpublic var left (get, set):Float;\n\tpublic var right (get, set):Float;\n\tpublic var size (get, set):Point;\n\tpublic var top (get, set):Float;\n\tpublic var topLeft (get, set):Point;\n\tpublic var width:Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (Rectangle.prototype, {\n\t\t\t\"bottom\": { get: untyped __js__ (\"function () { return this.get_bottom (); }\"), set: untyped __js__ (\"function (v) { return this.set_bottom (v); }\") },\n\t\t\t\"bottomRight\": { get: untyped __js__ (\"function () { return this.get_bottomRight (); }\"), set: untyped __js__ (\"function (v) { return this.set_bottomRight (v); }\") },\n\t\t\t\"left\": { get: untyped __js__ (\"function () { return this.get_left (); }\"), set: untyped __js__ (\"function (v) { return this.set_left (v); }\") },\n\t\t\t\"right\": { get: untyped __js__ (\"function () { return this.get_right (); }\"), set: untyped __js__ (\"function (v) { return this.set_right (v); }\") },\n\t\t\t\"size\": { get: untyped __js__ (\"function () { return this.get_size (); }\"), set: untyped __js__ (\"function (v) { return this.set_size (v); }\") },\n\t\t\t\"top\": { get: untyped __js__ (\"function () { return this.get_top (); }\"), set: untyped __js__ (\"function (v) { return this.set_top (v); }\") },\n\t\t\t\"topLeft\": { get: untyped __js__ (\"function () { return this.get_topLeft (); }\"), set: untyped __js__ (\"function (v) { return this.set_topLeft (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (x:Float = 0, y:Float = 0, width:Float = 0, height:Float = 0):Void {\n\t\t\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Rectangle {\n\t\t\n\t\treturn new Rectangle (x, y, width, height);\n\t\t\n\t}\n\t\n\t\n\tpublic function contains (x:Float, y:Float):Bool {\n\t\t\n\t\treturn x >= this.x && y >= this.y && x < right && y < bottom;\n\t\t\n\t}\n\t\n\t\n\tpublic function containsPoint (point:Point):Bool {\n\t\t\n\t\treturn contains (point.x, point.y);\n\t\t\n\t}\n\t\n\t\n\tpublic function containsRect (rect:Rectangle):Bool {\n\t\t\n\t\tif (rect.width <= 0 || rect.height <= 0) {\n\t\t\t\n\t\t\treturn rect.x > x && rect.y > y && rect.right < right && rect.bottom < bottom;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn rect.x >= x && rect.y >= y && rect.right <= right && rect.bottom <= bottom;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceRect:Rectangle):Void {\n\t\t\n\t\tx = sourceRect.x;\n\t\ty = sourceRect.y;\n\t\twidth = sourceRect.width;\n\t\theight = sourceRect.height;\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (toCompare:Rectangle):Bool {\n\t\t\n\t\tif (toCompare == this) return true;\n\t\telse return toCompare != null && x == toCompare.x && y == toCompare.y && width == toCompare.width && height == toCompare.height;\n\t\t\n\t}\n\t\n\t\n\tpublic function inflate (dx:Float, dy:Float):Void {\n\t\t\n\t\tx -= dx; width += dx * 2;\n\t\ty -= dy; height += dy * 2;\n\t\t\n\t}\n\t\n\t\n\tpublic function inflatePoint (point:Point):Void {\n\t\t\n\t\tinflate (point.x, point.y);\n\t\t\n\t}\n\t\n\t\n\tpublic function intersection (toIntersect:Rectangle):Rectangle {\n\t\t\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\n\t\t\n\t\tif (x1 <= x0) {\n\t\t\t\n\t\t\treturn new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\n\t\t\n\t\tif (y1 <= y0) {\n\t\t\t\n\t\t\treturn new Rectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\n\t\t\n\t}\n\t\n\t\n\tpublic function intersects (toIntersect:Rectangle):Bool {\n\t\t\n\t\tvar x0 = x < toIntersect.x ? toIntersect.x : x;\n\t\tvar x1 = right > toIntersect.right ? toIntersect.right : right;\n\t\t\n\t\tif (x1 <= x0) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar y0 = y < toIntersect.y ? toIntersect.y : y;\n\t\tvar y1 = bottom > toIntersect.bottom ? toIntersect.bottom : bottom;\n\t\t\n\t\treturn y1 > y0;\n\t\t\n\t}\n\t\n\t\n\tpublic function isEmpty ():Bool {\n\t\t\n\t\treturn (width <= 0 || height <= 0);\n\t\t\n\t}\n\t\n\t\n\tpublic function offset (dx:Float, dy:Float):Void {\n\t\t\n\t\tx += dx;\n\t\ty += dy;\n\t\t\n\t}\n\t\n\t\n\tpublic function offsetPoint (point:Point):Void {\n\t\t\n\t\tx += point.x;\n\t\ty += point.y;\n\t\t\n\t}\n\t\n\t\n\tpublic function setEmpty ():Void {\n\t\t\n\t\tx = y = width = height = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function setTo (xa:Float, ya:Float, widtha:Float, heighta:Float):Void {\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t\twidth = widtha;\n\t\theight = heighta;\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn '(x=$x, y=$y, width=$width, height=$height)';\n\t\t\n\t}\n\t\n\t\n\tpublic function union (toUnion:Rectangle):Rectangle {\n\t\t\n\t\tif (width == 0 || height == 0) {\n\t\t\t\n\t\t\treturn toUnion.clone ();\n\t\t\t\n\t\t} else if (toUnion.width == 0 || toUnion.height == 0) {\n\t\t\t\n\t\t\treturn clone ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar x0 = x > toUnion.x ? toUnion.x : x;\n\t\tvar x1 = right < toUnion.right ? toUnion.right : right;\n\t\tvar y0 = y > toUnion.y ? toUnion.y : y;\n\t\tvar y1 = bottom < toUnion.bottom ? toUnion.bottom : bottom;\n\t\t\n\t\treturn new Rectangle (x0, y0, x1 - x0, y1 - y0);\n\t\t\n\t}\n\t\n\t\n\tpublic function __contract (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (this.width == 0 && this.height == 0) {\n\t\t\t\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar offsetX = 0.0;\n\t\tvar offsetY = 0.0;\n\t\tvar offsetRight = 0.0;\n\t\tvar offsetBottom = 0.0;\n\t\t\n\t\tif (this.x < x) offsetX = x - this.x;\n\t\tif (this.y < y) offsetY = y - this.y;\n\t\tif (this.right > x + width) offsetRight = (x + width) - this.right;\n\t\tif (this.bottom > y + height) offsetBottom = (y + height) - this.bottom;\n\t\t\n\t\tthis.x += offsetX;\n\t\tthis.y += offsetY;\n\t\tthis.width += offsetRight - offsetX;\n\t\tthis.height += offsetBottom - offsetY;\n\t\t\n\t}\n\t\n\t\n\tpublic function __expand (x:Float, y:Float, width:Float, height:Float):Void {\n\t\t\n\t\tif (this.width == 0 && this.height == 0) {\n\t\t\t\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar cacheRight = right;\n\t\tvar cacheBottom = bottom;\n\t\t\n\t\tif (this.x > x)\n\t\t{\n\t\t\tthis.x = x;\n\t\t\tthis.width = cacheRight - x;\n\t\t}\n\t\tif (this.y > y)\n\t\t{\n\t\t\tthis.y = y;\n\t\t\tthis.height = cacheBottom - y;\n\t\t}\n\t\tif (cacheRight < x + width) this.width = x + width - this.x;\n\t\tif (cacheBottom < y + height) this.height = y + height - this.y;\n\t\t\n\t}\n\t\n\t\n\tprivate function __toLimeRectangle ():LimeRectangle {\n\t\t\n\t\tif (__limeRectangle == null) {\n\t\t\t\n\t\t\t__limeRectangle = new LimeRectangle ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__limeRectangle.setTo (x, y, width, height);\n\t\treturn __limeRectangle;\n\t\t\n\t}\n\t\n\t\n\tprivate function __transform (rect:Rectangle, m:Matrix):Void {\n\t\t\n\t\tvar tx0 = m.a * x + m.c * y;\n\t\tvar tx1 = tx0;\n\t\tvar ty0 = m.b * x + m.d * y;\n\t\tvar ty1 = ty0;\n\t\t\n\t\tvar tx = m.a * (x + width) + m.c * y;\n\t\tvar ty = m.b * (x + width) + m.d * y;\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\ttx = m.a * (x + width) + m.c * (y + height);\n\t\tty = m.b * (x + width) + m.d * (y + height);\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\ttx = m.a * x + m.c * (y + height);\n\t\tty = m.b * x + m.d * (y + height);\n\t\t\n\t\tif (tx < tx0) tx0 = tx;\n\t\tif (ty < ty0) ty0 = ty;\n\t\tif (tx > tx1) tx1 = tx;\n\t\tif (ty > ty1) ty1 = ty;\n\t\t\n\t\trect.setTo (tx0 + m.tx, ty0 + m.ty, tx1 - tx0, ty1 - ty0);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_bottom ():Float { return y + height; }\n\tprivate function set_bottom (b:Float):Float { height = b - y; return b; }\n\tprivate function get_bottomRight ():Point { return new Point (x + width, y + height); }\n\tprivate function set_bottomRight (p:Point):Point { width = p.x - x; height = p.y - y; return p.clone (); }\n\tprivate function get_left ():Float { return x; }\n\tprivate function set_left (l:Float):Float { width -= l - x; x = l; return l; }\n\tprivate function get_right ():Float { return x + width; }\n\tprivate function set_right (r:Float):Float { width = r - x; return r; }\n\tprivate function get_size ():Point { return new Point (width, height); }\n\tprivate function set_size (p:Point):Point { width = p.x; height = p.y; return p.clone (); }\n\tprivate function get_top ():Float { return y; }\n\tprivate function set_top (t:Float):Float { height -= t - y; y = t; return t; }\n\tprivate function get_topLeft ():Point { return new Point (x, y); }\n\tprivate function set_topLeft (p:Point):Point { x = p.x; y = p.y; return p.clone (); }\n\t\n\t\n}","package openfl.geom;\n\n\nimport openfl.display.DisplayObject;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.DisplayObject)\n@:access(openfl.geom.ColorTransform)\n\n\nclass Transform {\n\t\n\t\n\tpublic var colorTransform (get, set):ColorTransform;\n\tpublic var concatenatedColorTransform (default, null):ColorTransform;\n\tpublic var concatenatedMatrix (get, never):Matrix;\n\tpublic var matrix (get, set):Matrix;\n\tpublic var matrix3D (get, set):Matrix3D;\n\tpublic var pixelBounds (default, null):Rectangle;\n\t\n\tprivate var __colorTransform:ColorTransform;\n\tprivate var __displayObject:DisplayObject;\n\tprivate var __hasMatrix:Bool;\n\tprivate var __hasMatrix3D:Bool;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (Transform.prototype, {\n\t\t\t\"colorTransform\": { get: untyped __js__ (\"function () { return this.get_colorTransform (); }\"), set: untyped __js__ (\"function (v) { return this.set_colorTransform (v); }\") },\n\t\t\t\"concatenatedMatrix\": { get: untyped __js__ (\"function () { return this.get_concatenatedMatrix (); }\"), set: untyped __js__ (\"function (v) { return this.set_concatenatedMatrix (v); }\") },\n\t\t\t\"matrix\": { get: untyped __js__ (\"function () { return this.get_matrix (); }\"), set: untyped __js__ (\"function (v) { return this.set_matrix (v); }\") },\n\t\t\t\"matrix3D\": { get: untyped __js__ (\"function () { return this.get_matrix3D (); }\"), set: untyped __js__ (\"function (v) { return this.set_matrix3D (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (displayObject:DisplayObject) {\n\t\t\n\t\t__colorTransform = new ColorTransform ();\n\t\tconcatenatedColorTransform = new ColorTransform ();\n\t\tpixelBounds = new Rectangle ();\n\t\t\n\t\t__displayObject = displayObject;\n\t\t__hasMatrix = true;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_colorTransform ():ColorTransform {\n\t\t\n\t\treturn __colorTransform;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_colorTransform (value:ColorTransform):ColorTransform {\n\t\t\n\t\tif (!__colorTransform.__equals (value)) {\n\t\t\t\n\t\t\t__colorTransform = value;\n\t\t\t\n\t\t\tif (value != null) {\n\t\t\t\t\n\t\t\t\t__displayObject.alpha = value.alphaMultiplier;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__displayObject.__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __colorTransform;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_concatenatedMatrix ():Matrix {\n\t\t\n\t\tif (__hasMatrix) {\n\t\t\t\n\t\t\treturn __displayObject.__getWorldTransform ().clone ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_matrix ():Matrix {\n\t\t\n\t\tif (__hasMatrix) {\n\t\t\t\n\t\t\treturn __displayObject.__transform.clone ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_matrix (value:Matrix):Matrix {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\t__hasMatrix = false;\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\t__hasMatrix = true;\n\t\t__hasMatrix3D = false;\n\t\t\n\t\tif (__displayObject != null) {\n\t\t\t\n\t\t\t__setTransform (value.a, value.b, value.c, value.d, value.tx, value.ty);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_matrix3D ():Matrix3D {\n\t\t\n\t\tif (__hasMatrix3D) {\n\t\t\t\n\t\t\tvar matrix = __displayObject.__transform;\n\t\t\treturn new Matrix3D (Vector.ofArray ([ matrix.a, matrix.b, 0.0, 0.0, matrix.c, matrix.d, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, matrix.tx, matrix.ty, 0.0, 1.0 ]));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_matrix3D (value:Matrix3D):Matrix3D {\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\t__hasMatrix3D = false;\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\t__hasMatrix = false;\n\t\t__hasMatrix3D = true;\n\t\t\n\t\t__setTransform (value.rawData[0], value.rawData[1], value.rawData[5], value.rawData[6], value.rawData[12], value.rawData[13]);\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function __setTransform (a:Float, b:Float, c:Float, d:Float, tx:Float, ty:Float):Void {\n\t\t\n\t\tif (__displayObject != null) {\n\t\t\t\n\t\t\tvar scaleX = 0.0;\n\t\t\tvar scaleY = 0.0;\n\t\t\t\n\t\t\tif (b == 0) {\n\t\t\t\t\n\t\t\t\tscaleX = a;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tscaleX = Math.sqrt (a * a + b * b);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (c == 0) {\n\t\t\t\t\n\t\t\t\tscaleY = a;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tscaleY = Math.sqrt (c * c + d * d);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__displayObject.__scaleX = scaleX;\n\t\t\t__displayObject.__scaleY = scaleY;\n\t\t\t\n\t\t\tvar rotation = (180 / Math.PI) * Math.atan2 (d, c) - 90;\n\t\t\t\n\t\t\tif (rotation != __displayObject.__rotation) {\n\t\t\t\t\n\t\t\t\t__displayObject.__rotation = rotation;\n\t\t\t\tvar radians = rotation * (Math.PI / 180);\n\t\t\t\t__displayObject.__rotationSine = Math.sin (radians);\n\t\t\t\t__displayObject.__rotationCosine = Math.cos (radians);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__displayObject.__transform.a = a;\n\t\t\t__displayObject.__transform.b = b;\n\t\t\t__displayObject.__transform.c = c;\n\t\t\t__displayObject.__transform.d = d;\n\t\t\t__displayObject.__transform.tx = tx;\n\t\t\t__displayObject.__transform.ty = ty;\n\t\t\t\n\t\t\t__displayObject.__setTransformDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl.geom;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Vector3D {\n\t\n\t\n\tpublic static var X_AXIS (get, never):Vector3D;\n\tpublic static var Y_AXIS (get, never):Vector3D;\n\tpublic static var Z_AXIS (get, never):Vector3D;\n\t\n\tpublic var length (get, never):Float;\n\tpublic var lengthSquared (get, never):Float;\n\tpublic var w:Float;\n\tpublic var x:Float;\n\tpublic var y:Float;\n\tpublic var z:Float;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (Vector3D, {\n\t\t\t\"X_AXIS\": { get: function () { return Vector3D.get_X_AXIS (); } },\n\t\t\t\"Y_AXIS\": { get: function () { return Vector3D.get_Y_AXIS (); } },\n\t\t\t\"Z_AXIS\": { get: function () { return Vector3D.get_Z_AXIS (); } }\n\t\t});\n\t\t\n\t\tuntyped Object.defineProperties (Vector3D.prototype, {\n\t\t\t\"length\": { get: untyped __js__ (\"function () { return this.get_length (); }\") },\n\t\t\t\"lengthSquared\": { get: untyped __js__ (\"function () { return this.get_lengthSquared (); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (x:Float = 0, y:Float = 0, z:Float = 0, w:Float = 0) {\n\t\t\n\t\tthis.w = w;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\t\n\t}\n\t\n\t\n\tpublic function add (a:Vector3D):Vector3D {\n\t\t\n\t\treturn new Vector3D (this.x + a.x, this.y + a.y, this.z + a.z);\n\t\t\n\t}\n\t\n\t\n\tpublic static function angleBetween (a:Vector3D, b:Vector3D):Float {\n\t\t\n\t\tvar la = a.length;\n\t\tvar lb = b.length;\n\t\tvar dot = a.dotProduct (b);\n\t\t\n\t\tif (la != 0) {\n\t\t\t\n\t\t\tdot /= la;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (lb != 0) {\n\t\t\t\n\t\t\tdot /= lb;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn Math.acos (dot);\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():Vector3D {\n\t\t\n\t\treturn new Vector3D (x, y, z, w);\n\t\t\n\t}\n\t\n\t\n\tpublic function copyFrom (sourceVector3D:Vector3D):Void {\n\t\t\n\t\tx = sourceVector3D.x;\n\t\ty = sourceVector3D.y;\n\t\tz = sourceVector3D.z;\n\t\t\n\t}\n\t\n\t\n\tpublic function crossProduct (a:Vector3D):Vector3D {\n\t\t\n\t\treturn new Vector3D (y * a.z - z * a.y, z * a.x - x * a.z, x * a.y - y * a.x, 1);\n\t\t\n\t}\n\t\n\t\n\tpublic function decrementBy (a:Vector3D):Void {\n\t\t\n\t\tx -= a.x;\n\t\ty -= a.y;\n\t\tz -= a.z;\n\t\t\n\t}\n\t\n\t\n\tpublic static function distance (pt1:Vector3D, pt2:Vector3D):Float {\n\t\t\n\t\tvar x:Float = pt2.x - pt1.x;\n\t\tvar y:Float = pt2.y - pt1.y;\n\t\tvar z:Float = pt2.z - pt1.z;\n\t\t\n\t\treturn Math.sqrt (x * x + y * y + z * z);\n\t\t\n\t}\n\t\n\t\n\tpublic function dotProduct (a:Vector3D):Float {\n\t\t\n\t\treturn x * a.x + y * a.y + z * a.z;\n\t\t\n\t}\n\t\n\t\n\tpublic function equals (toCompare:Vector3D, allFour:Bool = false):Bool {\n\t\t\n\t\treturn x == toCompare.x && y == toCompare.y && z == toCompare.z && (!allFour || w == toCompare.w);\n\t\t\n\t}\n\t\n\t\n\tpublic function incrementBy (a:Vector3D):Void {\n\t\t\n\t\tx += a.x;\n\t\ty += a.y;\n\t\tz += a.z;\n\t\t\n\t}\n\t\n\t\n\tpublic function nearEquals (toCompare:Vector3D, tolerance:Float, ?allFour:Bool = false):Bool {\n\t\t\n\t\treturn Math.abs (x - toCompare.x) < tolerance && Math.abs (y - toCompare.y) < tolerance && Math.abs (z - toCompare.z) < tolerance && (!allFour || Math.abs (w - toCompare.w) < tolerance);\n\t\t\n\t}\n\t\n\t\n\tpublic function negate ():Void {\n\t\t\n\t\tx *= -1;\n\t\ty *= -1;\n\t\tz *= -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function normalize ():Float {\n\t\t\n\t\tvar l = length;\n\t\t\n\t\tif (l != 0) {\n\t\t\t\n\t\t\tx /= l;\n\t\t\ty /= l;\n\t\t\tz /= l;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn l;\n\t\t\n\t}\n\t\n\t\n\tpublic function project ():Void {\n\t\t\n\t\tx /= w;\n\t\ty /= w;\n\t\tz /= w;\n\t\t\n\t}\n\t\n\t\n\tpublic function scaleBy (s:Float):Void {\n\t\t\n\t\tx *= s;\n\t\ty *= s;\n\t\tz *= s;\n\t\t\n\t}\n\t\n\t\n\tpublic function setTo (xa:Float, ya:Float, za:Float):Void {\n\t\t\n\t\tx = xa;\n\t\ty = ya;\n\t\tz = za;\n\t\t\n\t}\n\t\n\t\n\tpublic function subtract (a:Vector3D):Vector3D {\n\t\t\n\t\treturn new Vector3D (x - a.x, y - a.y, z - a.z);\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\treturn 'Vector3D($x, $y, $z)';\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_length ():Float {\n\t\t\n\t\treturn Math.sqrt (x * x + y * y + z * z);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_lengthSquared ():Float {\n\t\t\n\t\treturn x * x + y * y + z * z;\n\t\t\n\t}\n\t\n\t\n\tprivate inline static function get_X_AXIS ():Vector3D {\n\t\t\n\t\treturn new Vector3D (1, 0, 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline static function get_Y_AXIS ():Vector3D {\n\t\t\n\t\treturn new Vector3D (0, 1, 0);\n\t\t\n\t}\n\t\n\t\n\tprivate inline static function get_Z_AXIS ():Vector3D {\n\t\t\n\t\treturn new Vector3D (0, 0, 1);\n\t\t\n\t}\n\t\n\t\n}","package openfl.media;\n\n\n@:final class ID3Info {\n\t\n\t\n\tpublic var album:String;\n\tpublic var artist:String;\n\tpublic var comment:String;\n\tpublic var genre:String;\n\tpublic var songName:String;\n\tpublic var track:String;\n\tpublic var year:String;\n\t\n\t\n\tpublic function new ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl.media;\n\n\nimport haxe.io.Path;\nimport lime.app.Future;\nimport lime.app.Preloader;\nimport lime.media.AudioBuffer;\nimport lime.media.AudioSource;\nimport lime.utils.UInt8Array;\nimport openfl.events.Event;\nimport openfl.events.EventDispatcher;\nimport openfl.events.IOErrorEvent;\nimport openfl.net.URLRequest;\nimport openfl.utils.ByteArray;\n\n@:access(lime.utils.AssetLibrary)\n@:access(openfl.media.SoundMixer)\n\n@:autoBuild(openfl._internal.macros.AssetsMacro.embedSound())\n\n\nclass Sound extends EventDispatcher {\n\t\n\t\n\tpublic var bytesLoaded (default, null):Int;\n\tpublic var bytesTotal (default, null):Int;\n\tpublic var id3 (get, never):ID3Info;\n\tpublic var isBuffering (default, null):Bool;\n\tpublic var length (get, never):Float;\n\tpublic var url (default, null):String;\n\tpublic var spriteKey (default, default):String;\n\t\n\tprivate var __buffer:AudioBuffer;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (Sound.prototype, {\n\t\t\t\"id3\": { get: untyped __js__ (\"function () { return this.get_id3 (); }\") },\n\t\t\t\"length\": { get: untyped __js__ (\"function () { return this.get_length (); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\n\tpublic function new (stream:URLRequest = null, context:SoundLoaderContext = null) {\n\t\t\n\t\tsuper (this);\n\t\t\n\t\tbytesLoaded = 0;\n\t\tbytesTotal = 0;\n\t\tisBuffering = false;\n\t\turl = null;\n\t\t\n\t\tif (stream != null) {\n\t\t\t\n\t\t\tload (stream, context);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\n\tpublic function close ():Void {\n\t\t\n\t\tif (__buffer != null) {\n\t\t\t\n\t\t\t__buffer.dispose ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\n\t\n\tpublic static function fromAudioBuffer (buffer:AudioBuffer):Sound {\n\t\t\n\t\tvar sound = new Sound ();\n\t\tsound.__buffer = buffer;\n\t\treturn sound;\n\t\t\n\t}\n\t\n\tpublic static function fromFile (path:String):Sound {\n\t\t\n\t\treturn fromAudioBuffer (AudioBuffer.fromFile (path));\n\t\t\n\t}\n\t\n\tpublic function triggerLoadEvent():Void {\n\t\t\tAudioBuffer_onURLLoad (this.__buffer);\n  }\n\n\tpublic function load (stream:URLRequest, context:SoundLoaderContext = null):Void {\n\t\t\n\t\turl = stream.url;\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tvar defaultLibrary = lime.utils.Assets.getLibrary (\"default\"); // TODO: Improve this\n\t\t\n\t\tif (defaultLibrary != null && defaultLibrary.cachedAudioBuffers.exists (url)) {\n\t\t\t\n\t\t\tAudioBuffer_onURLLoad (defaultLibrary.cachedAudioBuffers.get (url));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tAudioBuffer.loadFromFile (url).onComplete (AudioBuffer_onURLLoad).onError (function (_) AudioBuffer_onURLLoad (null));\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\tAudioBuffer.loadFromFile (url).onComplete (AudioBuffer_onURLLoad).onError (function (_) AudioBuffer_onURLLoad (null));\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function loadCompressedDataFromByteArray (bytes:ByteArray, bytesLength:Int):Void {\n\t\t\n\t\tif (bytes == null || bytesLength <= 0) {\n\t\t\t\n\t\t\tdispatchEvent (new IOErrorEvent (IOErrorEvent.IO_ERROR));\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (bytes.length > bytesLength) {\n\t\t\t\n\t\t\tvar copy = new ByteArray (bytesLength);\n\t\t\tcopy.writeBytes (bytes, 0, bytesLength);\n\t\t\tbytes = copy;\n\t\t\t\n\t\t}\n\t\t\n\t\t__buffer = AudioBuffer.fromBytes (bytes);\n\t\t\n\t\tif (__buffer == null) {\n\t\t\t\n\t\t\tdispatchEvent (new IOErrorEvent (IOErrorEvent.IO_ERROR));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tdispatchEvent (new Event (Event.COMPLETE));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromFile (path:String):Future<Sound> {\n\t\t\n\t\treturn AudioBuffer.loadFromFile (path).then (function (audioBuffer) {\n\t\t\t\n\t\t\treturn Future.withValue (fromAudioBuffer (audioBuffer));\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromFiles (paths:Array<String>):Future<Sound> {\n\t\t\n\t\treturn AudioBuffer.loadFromFiles (paths).then (function (audioBuffer) {\n\t\t\t\n\t\t\treturn Future.withValue (fromAudioBuffer (audioBuffer));\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic function loadPCMFromByteArray (bytes:ByteArray, samples:Int, format:String = \"float\", stereo:Bool = true, sampleRate:Float = 44100):Void {\n\t\t\n\t\tif (bytes == null) {\n\t\t\t\n\t\t\tdispatchEvent (new IOErrorEvent (IOErrorEvent.IO_ERROR));\n\t\t\treturn;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar audioBuffer = new AudioBuffer ();\n\t\taudioBuffer.bitsPerSample = format == \"float\" ? 32 : 16; // \"short\"\n\t\taudioBuffer.channels = stereo ? 2 : 1;\n\t\taudioBuffer.data = new UInt8Array (bytes);\n\t\taudioBuffer.sampleRate = Std.int (sampleRate);\n\t\t\n\t\t__buffer = audioBuffer;\n\t\t\n\t\tdispatchEvent (new Event (Event.COMPLETE));\n\t\t\n\t}\n\t\n\t\n\tpublic function play (startTime:Float = 0.0, loops:Int = 0, sndTransform:SoundTransform = null):SoundChannel {\n\t\t\n\t\tif (SoundMixer.__soundChannels.length >= SoundMixer.MAX_ACTIVE_CHANNELS) {\n\t\t\t\n\t\t\treturn null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (sndTransform == null) {\n\t\t\t\n\t\t\tsndTransform = new SoundTransform ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tsndTransform = sndTransform.clone ();\n\t\t\t\n\t\t}\n\t\t\n\t\tvar pan = SoundMixer.__soundTransform.pan + sndTransform.pan;\n\t\t\n\t\tif (pan > 1) pan = 1;\n\t\tif (pan < -1) pan = -1;\n\t\t\n\t\tvar volume = SoundMixer.__soundTransform.volume * sndTransform.volume;\n\t\t\n\t\tvar source = new AudioSource (__buffer);\n\t\tsource.offset = Std.int (startTime);\n\t\tif (loops > 1) source.loops = loops - 1;\n\t\t\n\t\tsource.gain = volume;\n\t\t\n\t\tvar position = source.position;\n\t\tposition.x = pan;\n\t\tposition.z = -1 * Math.sqrt (1 - Math.pow (pan, 2));\n\t\tsource.position = position;\n\t\t\n\t\treturn new SoundChannel (source, sndTransform, this.spriteKey);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_id3 ():ID3Info {\n\t\t\n\t\treturn new ID3Info ();\n\t\t\n\t}\n\t\n\t\n\tprivate function get_length ():Int {\n\t\t\n\t\tif (__buffer != null) {\n\t\t\t\n\t\t\t#if (js && html5 && howlerjs)\n\t\t\t\n\t\t\treturn Std.int(__buffer.src.duration() * 1000);\n\t\t\t\n\t\t\t#else\n\t\t\t\n\t\t\tvar samples = (__buffer.data.length * 8) / (__buffer.channels * __buffer.bitsPerSample);\n\t\t\treturn Std.int (samples / __buffer.sampleRate * 1000);\n\t\t\t\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function AudioBuffer_onURLLoad (buffer:AudioBuffer):Void {\n\t\t\n\t\tif (buffer == null) {\n\t\t\t\n\t\t\tdispatchEvent (new IOErrorEvent (IOErrorEvent.IO_ERROR));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__buffer = buffer;\n\t\t\tdispatchEvent (new Event (Event.COMPLETE));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}\n","package openfl.media;\n\n\nimport lime.media.AudioSource;\nimport openfl.events.Event;\nimport openfl.events.EventDispatcher;\nimport openfl.media.Sound;\n\n@:access(openfl.media.SoundMixer)\n\n\n@:final @:keep class SoundChannel extends EventDispatcher {\n\t\n\t\n\tpublic var leftPeak (default, null):Float;\n\tpublic var position (get, set):Float;\n\tpublic var rightPeak (default, null):Float;\n\tpublic var soundTransform (get, set):SoundTransform;\n\t\n\tprivate var __isValid:Bool;\n\tprivate var __soundTransform:SoundTransform;\n\tprivate var __source:AudioSource;\n\tprivate var __spriteKey:String;\n\t\n\n\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (SoundChannel.prototype, {\n\t\t\t\"position\": { get: untyped __js__ (\"function () { return this.get_position (); }\"), set: untyped __js__ (\"function (v) { return this.set_position (v); }\") },\n\t\t\t\"soundTransform\": { get: untyped __js__ (\"function () { return this.get_soundTransform (); }\"), set: untyped __js__ (\"function (v) { return this.set_soundTransform (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\n\tprivate function new (source:AudioSource = null, soundTransform:SoundTransform = null, ?spriteKey:String):Void {\n\t\tsuper (this);\n\t\t\n\t\tleftPeak = 1;\n\t\trightPeak = 1;\n\t\t\n\t\tif (soundTransform != null) {\n\t\t\t\n\t\t\t__soundTransform = soundTransform;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__soundTransform = new SoundTransform ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif (spriteKey != null)\n\t\t{\n\t\t\t__spriteKey = spriteKey;\n\t\t}\n\t\tif (source != null) {\n\t\t\t\n\t\t\t__source = source;\n\t\t\t__source.onComplete.add (source_onComplete);\n\t\t\t__isValid = true;\n\t\t\t\n\t\t\t#if howlerjs\n\t\t\t__source.play (spriteKey);\n\t\t\t#else\n\t\t\t__source.play ();\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\tSoundMixer.__registerSoundChannel (this);\n\t\t\n\t}\n\t\n\t\n\tpublic function stop ():Void {\n\t\t\n\t\tSoundMixer.__unregisterSoundChannel (this);\n\t\t\n\t\tif (!__isValid) return;\n\t\t\n\t\t__source.stop ();\n\t\t__dispose ();\n\t\t\n\t}\n\t\n\t\n\tprivate function __dispose ():Void {\n\t\t\n\t\tif (!__isValid) return;\n\t\t\n\t\t__source.onComplete.remove (source_onComplete);\n\t\t__source.dispose ();\n\t\t__isValid = false;\n\t\t\n\t}\n\t\n\t\n\tprivate function __updateTransform ():Void {\n\t\t\n\t\tthis.soundTransform = soundTransform;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_position ():Float {\n\t\t\n\t\tif (!__isValid) return 0;\n\t\t\n\t\treturn __source.currentTime + __source.offset;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_position (value:Float):Float {\n\t\t\n\t\tif (!__isValid) return 0;\n\t\t\n\t\t__source.currentTime = Std.int (value) - __source.offset;\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_soundTransform ():SoundTransform {\n\t\t\n\t\treturn __soundTransform.clone ();\n\t\t\n\t}\n\t\n\t\n\tprivate function set_soundTransform (value:SoundTransform):SoundTransform {\n\t\t\n\t\tif (value != null) {\n\t\t\t\n\t\t\t__soundTransform.pan = value.pan;\n\t\t\t__soundTransform.volume = value.volume;\n\t\t\t\n\t\t\tvar pan = SoundMixer.__soundTransform.pan + __soundTransform.pan;\n\t\t\t\n\t\t\tif (pan < -1) pan = -1;\n\t\t\tif (pan > 1) pan = 1;\n\t\t\t\n\t\t\tvar volume = SoundMixer.__soundTransform.volume * __soundTransform.volume;\n\t\t\t\n\t\t\tif (__isValid) {\n\t\t\t\t\n\t\t\t\t__source.gain = volume;\n\t\t\t\t\n\t\t\t\tvar position = __source.position;\n\t\t\t\tposition.x = pan;\n\t\t\t\tposition.z = -1 * Math.sqrt (1 - Math.pow (pan, 2));\n\t\t\t\t__source.position = position;\n\t\t\t\t\n\t\t\t\treturn value;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function source_onComplete ():Void {\n\t\t\n\t\tSoundMixer.__unregisterSoundChannel (this);\n\t\t\n\t\t__dispose ();\n\t\tdispatchEvent (new Event (Event.SOUND_COMPLETE));\n\t\t\n\t}\n\t\n\t\n}\n","package openfl.media;\n\n\nclass SoundLoaderContext {\n\t\n\t\n\tpublic var bufferTime:Float;\n\tpublic var checkPolicyFile:Bool;\n\t\n\t\n\tpublic function new (bufferTime:Float = 1000, checkPolicyFile:Bool = false) {\n\t\t\n\t\tthis.bufferTime = bufferTime;\n\t\tthis.checkPolicyFile = checkPolicyFile;\n\t\t\n\t}\n\t\n\t\n}","package openfl.media;\n\n\n@:final class SoundTransform {\n\t\n\t\n\tpublic var leftToLeft:Float;\n\tpublic var leftToRight:Float;\n\tpublic var pan:Float;\n\tpublic var rightToLeft:Float;\n\tpublic var rightToRight:Float;\n\tpublic var volume:Float;\n\t\n\t\n\tpublic function new (vol:Float = 1, panning:Float = 0) {\n\t\t\n\t\tvolume = vol;\n\t\tpan = panning;\n\t\tleftToLeft = 0;\n\t\tleftToRight = 0;\n\t\trightToLeft = 0;\n\t\trightToRight = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():SoundTransform {\n\t\t\n\t\treturn new SoundTransform (volume, pan);\n\t\t\n\t}\n\t\n\t\n}","package openfl.media;\n\n\n@:access(openfl.media.SoundChannel)\n\n\n@:final class SoundMixer {\n\t\n\t\n\tprivate static inline var MAX_ACTIVE_CHANNELS = 32;\n\t\n\tpublic static var bufferTime:Int;\n\tpublic static var soundTransform (get, set):SoundTransform;\n\t\n\tprivate static var __soundChannels = new Array<SoundChannel> ();\n\tprivate static var __soundTransform = #if mute_sound new SoundTransform (0) #else new SoundTransform () #end;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperty (SoundMixer, \"soundTransform\", { get: function () { return SoundMixer.get_soundTransform (); }, set: function (value) { return SoundMixer.set_soundTransform (value); } });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function areSoundsInaccessible ():Bool {\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tpublic static function stopAll ():Void {\n\t\t\n\t\tfor (channel in __soundChannels) {\n\t\t\t\n\t\t\tchannel.stop ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __registerSoundChannel (soundChannel:SoundChannel):Void {\n\t\t\n\t\t__soundChannels.push (soundChannel);\n\t\t\n\t}\n\t\n\t\n\tprivate static function __unregisterSoundChannel (soundChannel:SoundChannel):Void {\n\t\t\n\t\t__soundChannels.remove (soundChannel);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate static function get_soundTransform ():SoundTransform {\n\t\t\n\t\treturn __soundTransform;\n\t\t\n\t}\n\t\n\t\n\tprivate static function set_soundTransform (value:SoundTransform):SoundTransform {\n\t\t\n\t\t__soundTransform = value.clone ();\n\t\t\n\t\tfor (channel in __soundChannels) {\n\t\t\t\n\t\t\tchannel.__updateTransform ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}","package openfl.net;\n\n\nimport openfl.events.EventDispatcher;\nimport openfl.events.NetStatusEvent;\n\n\nclass NetConnection extends EventDispatcher {\n\t\n\t\n\tpublic static inline var CONNECT_SUCCESS:String = \"NetConnection.Connect.Success\";\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t}\n\t\n\t\n\tpublic function connect (command:String, ?_, ?_, ?_, ?_, ?_):Void {\n\t\t\n\t\tif (command != null) {\n\t\t\t\n\t\t\tthrow \"Error: Can only connect in \\\"HTTP streaming\\\" mode\";\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.dispatchEvent (new NetStatusEvent (NetStatusEvent.NET_STATUS, false, true, { code: NetConnection.CONNECT_SUCCESS }));\n\t\t\n\t}\n\t\n\t\n}\n","package openfl.net;\n\n\nimport haxe.Timer;\nimport openfl.events.Event;\nimport openfl.events.EventDispatcher;\nimport openfl.events.NetStatusEvent;\nimport openfl.media.SoundTransform;\n\n#if (js && html5)\nimport js.html.VideoElement;\nimport js.Browser;\n#end\n\n\nclass NetStream extends EventDispatcher {\n\t\n\t\n\tpublic var audioCodec (default, null):Int;\n\tpublic var bufferLength (default, null):Float;\n\tpublic var bufferTime:Float;\n\tpublic var bytesLoaded (default, null):Int;\n\tpublic var bytesTotal (default, null):Int;\n\tpublic var checkPolicyFile:Bool;\n\tpublic var client:Dynamic;\n\tpublic var currentFPS (default, null):Float;\n\tpublic var decodedFrames (default, null):Int;\n\tpublic var liveDelay (default, null):Float;\n\tpublic var objectEncoding (default, null):Int;\n\tpublic var soundTransform:SoundTransform;\n\tpublic var speed (get, set):Float;\n\tpublic var time (default, null):Float;\n\tpublic var videoCode (default, null):Int;\n\tpublic var loadPercentage (get, null):Float;\n\t\n\tprivate var __connection:NetConnection;\n\tprivate var __timer:Timer;\n\t\n\t#if (js && html5)\n\tprivate var __video (default, null):VideoElement;\n\t#end\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperty (NetStream.prototype, \"speed\", { get: untyped __js__ (\"function () { return this.get_speed (); }\"), set: untyped __js__ (\"function (v) { return this.set_speed (v); }\") });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (connection:NetConnection, peerID:String = null):Void {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__connection = connection;\n\t\t\n\t\t#if (js && html5)\n\t\t__video = cast Browser.document.createElement (\"video\");\n\n\t\t__video.setAttribute(\"playsinline\", \"\");\n\t\t__video.setAttribute(\"webkit-playsinline\", \"\");\n\n\t\t__video.addEventListener (\"error\", video_onError, false);\n\t\t__video.addEventListener (\"waiting\", video_onWaiting, false);\n\t\t__video.addEventListener (\"ended\", video_onEnd, false);\n\t\t__video.addEventListener (\"pause\", video_onPause, false);\n\t\t__video.addEventListener (\"seeking\", video_onSeeking, false);\n\t\t__video.addEventListener (\"playing\", video_onPlaying, false);\n\t\t__video.addEventListener (\"timeupdate\", video_onTimeUpdate, false);\n\t\t__video.addEventListener (\"loadstart\", video_onLoadStart, false);\n\t\t__video.addEventListener (\"stalled\", video_onStalled, false);\n\t\t__video.addEventListener (\"durationchanged\", video_onDurationChanged, false);\n\t\t__video.addEventListener (\"canplay\", video_onCanPlay, false);\n\t\t__video.addEventListener (\"canplaythrough\", video_onCanPlayThrough, false);\n\t\t__video.addEventListener (\"loadedmetadata\", video_onLoadMetaData, false);\n\t\t__video.addEventListener (\"progress\", video_onProgress, false);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function close ():Void {\n\t\t\n\t\t#if (js && html5)\n\t\t__video.pause ();\n\t\t__video.src = \"\";\n\t\ttime = 0;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function pause ():Void {\n\t\t\n\t\t#if (js && html5)\n\t\t__video.pause ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function play (url:String, ?_, ?_, ?_, ?_, ?_):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t__video.src = url;\n\t\t__video.play ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function requestVideoStatus ():Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (__timer == null) {\n\t\t\t\n\t\t\t__timer = new Timer (1);\n\t\t\t\n\t\t}\n\t\t\n\t\t__timer.run = function () {\n\t\t\t\n\t\t\tif (__video.paused) {\n\t\t\t\t\n\t\t\t\t__playStatus (\"NetStream.Play.pause\");\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__playStatus (\"NetStream.Play.playing\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__timer.stop ();\n\t\t\t\n\t\t};\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function resume ():Void {\n\t\t\n\t\t#if (js && html5)\n\t\t__video.play ();\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function seek (time:Float):Void {\n\t\t\n\t\t#if (js && html5)\n\t\t\n\t\tif (time < 0) {\n\t\t\t\n\t\t\ttime = 0;\n\t\t\t\n\t\t} else if (time > __video.duration) {\n\t\t\t\n\t\t\ttime = __video.duration;\n\t\t\t\n\t\t}\n\t\t\n\t\t__video.currentTime = time;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic function togglePause ():Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (__video.paused) {\n\t\t\t\n\t\t\t__video.play ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__video.pause ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function __playStatus (code:String):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (client != null) {\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tvar handler = client.onPlayStatus;\n\t\t\t\thandler ({ \n\t\t\t\t\t\n\t\t\t\t\tcode: code,\n\t\t\t\t\tduration: __video.duration,\n\t\t\t\t\tposition: __video.currentTime,\n\t\t\t\t\tspeed: __video.playbackRate,\n\t\t\t\t\tstart: untyped __video.startTime\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) {}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function video_onCanPlay (event:Dynamic):Void {\n\t\t\n\t\t__playStatus (\"NetStream.Play.canplay\");\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onCanPlayThrough (event:Dynamic):Void {\n\t\t\n\t\t__playStatus (\"NetStream.Play.canplaythrough\");\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onDurationChanged (event:Dynamic):Void {\n\t\t\n\t\t__playStatus (\"NetStream.Play.durationchanged\");\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onEnd (event:Dynamic):Void {\n\t\t\n\t\t__connection.dispatchEvent (new NetStatusEvent (NetStatusEvent.NET_STATUS, false, false, { code : \"NetStream.Play.Stop\" } ));\n\t\t__playStatus (\"NetStream.Play.Complete\");\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onError (event:Dynamic):Void {\n\t\t\n\t\t__connection.dispatchEvent (new NetStatusEvent (NetStatusEvent.NET_STATUS, false, false, { code : \"NetStream.Play.Stop\" } ));\n\t\t__playStatus (\"NetStream.Play.error\");\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onLoadMetaData (event:Dynamic):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (client != null) {\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tvar handler = client.onMetaData;\n\t\t\t\thandler ({\n\t\t\t\t\t\n\t\t\t\t\twidth: __video.videoWidth,\n\t\t\t\t\theight: __video.videoHeight,\n\t\t\t\t\tduration: __video.duration\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t} catch (e:Dynamic) {}\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onLoadStart (event:Dynamic):Void {\n\t\t\n\t\t__playStatus (\"NetStream.Play.loadstart\");\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onPause (event:Dynamic):Void {\n\t\t\n\t\t__playStatus (\"NetStream.Play.pause\");\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onPlaying (event:Dynamic):Void {\n\t\t\n\t\t__connection.dispatchEvent (new NetStatusEvent (NetStatusEvent.NET_STATUS, false, false, { code : \"NetStream.Play.Start\" } ));\n\t\t__playStatus (\"NetStream.Play.playing\");\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onSeeking (event:Dynamic):Void {\n\t\t\n\t\t__playStatus (\"NetStream.Play.seeking\");\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onStalled (event:Dynamic):Void {\n\t\t\n\t\t__playStatus (\"NetStream.Play.stalled\");\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onTimeUpdate (event:Dynamic):Void {\n\t\t\n\t\t#if (js && html5)\n\t\ttime = __video.currentTime;\n\t\t#end\n\t\t\n\t\t__playStatus (\"NetStream.Play.timeupdate\");\n\t\t\n\t}\n\t\n\t\n\tprivate function video_onWaiting (event:Dynamic):Void {\n\t\t\n\t\t__playStatus (\"NetStream.Play.waiting\");\n\t\t\n\t}\n\n\n\tprivate function video_onProgress (event:Dynamic):Void {\n\n\t\t__playStatus (\"NetStream.Play.progress\");\n\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_speed ():Float {\n\t\t\n\t\t#if (js && html5)\n\t\treturn __video.playbackRate;\n\t\t#else\n\t\treturn 1;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate function set_speed (value:Float):Float {\n\t\t\n\t\t#if (js && html5)\n\t\treturn __video.playbackRate = value;\n\t\t#else\n\t\treturn value;\n\t\t#end\n\t\t\n\t}\n\n\tprivate function get_loadPercentage ():Float {\n\t\t#if (js && html5)\n\t\tvar bf = __video.buffered;\n\t\tif(bf.length > 0) {\n\t\tvar range = 0;\n\t\tvar time = __video.currentTime;\n\t\twhile(!(bf.start(range) <= time && time <= bf.end(range))) {\n        \trange += 1;\n    \t}\n    \tvar loadStartPercentage = bf.start(range) / __video.duration;\n    \tvar loadEndPercentage = bf.end(range) / __video.duration;\n    \treturn loadEndPercentage - loadStartPercentage;\n    \t}\n    \telse\n    \treturn 0;\n\t\t#else\n\t\treturn 0;\n\t\t#end\n\t}\n\t\n\t\n}\n","package openfl.net;\n\n\n@:enum abstract URLLoaderDataFormat(Null<Int>) {\n\t\n\tpublic var BINARY = 0;\n\tpublic var TEXT = 1;\n\tpublic var VARIABLES = 2;\n\t\n\t@:from private static function fromString (value:String):URLLoaderDataFormat {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"binary\": BINARY;\n\t\t\tcase \"text\": TEXT;\n\t\t\tcase \"variables\": VARIABLES;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase URLLoaderDataFormat.BINARY: \"binary\";\n\t\t\tcase URLLoaderDataFormat.TEXT: \"text\";\n\t\t\tcase URLLoaderDataFormat.VARIABLES: \"variables\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.net;\n\nimport haxe.macro.Compiler;\n\n@:final class URLRequest {\n\t\n\t\n\tpublic var contentType:String;\n\tpublic var data:Dynamic;\n\tpublic var followRedirects:Bool;\n\tpublic var idleTimeout:Float;\n\tpublic var manageCookies:Bool;\n\tpublic var method:String;\n\tpublic var requestHeaders:Array<URLRequestHeader>;\n\tpublic var url:String;\n\tpublic var userAgent:String;\n\t\n\t\n\tpublic function new (url:String = null) {\n\t\t\n\t\tif (url != null) {\n\t\t\t\n\t\t\tthis.url = url;\n\t\t\t\n\t\t}\n\t\t\n\t\tcontentType = null; // \"application/x-www-form-urlencoded\";\n\t\tfollowRedirects = URLRequestDefaults.followRedirects;\n\t\tidleTimeout = URLRequestDefaults.idleTimeout > 0 ? URLRequestDefaults.idleTimeout : #if lime_default_timeout Std.parseInt (Compiler.getDefine (\"lime-default-timeout\")) #else 30000 #end;\n\t\tmanageCookies = URLRequestDefaults.manageCookies;\n\t\tmethod = URLRequestMethod.GET;\n\t\trequestHeaders = [];\n\t\tuserAgent = URLRequestDefaults.userAgent;\n\t\t\n\t}\n\t\n\t\n}\n","package openfl.net;\n\n\n@:final class URLRequestHeader {\n\t\n\t\n\tpublic var name:String;\n\tpublic var value:String;\n\t\n\t\n\tpublic function new (name:String = \"\", value:String = \"\") {\n\t\t\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t\t\n\t}\n\t\n\t\n}","package openfl.net;\n\n\nclass URLVariables implements Dynamic {\n\t\n\t\n\tpublic function new (source:String = null) {\n\t\t\n\t\tif (source != null) {\n\t\t\t\n\t\t\tdecode (source);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function decode (source:String):Void {\n\t\t\n\t\tvar fields = Reflect.fields (this);\n\t\t\n\t\tfor (f in fields) {\n\t\t\t\n\t\t\tReflect.deleteField (this, f);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar fields = source.split (\";\").join (\"&\").split (\"&\");\n\t\t\n\t\tfor (f in fields) {\n\t\t\t\n\t\t\tvar eq = f.indexOf (\"=\");\n\t\t\t\n\t\t\tif (eq > 0) {\n\t\t\t\t\n\t\t\t\tReflect.setField (this, StringTools.urlDecode (f.substr(0, eq)), StringTools.urlDecode (f.substr(eq + 1)));\n\t\t\t\t\n\t\t\t} else if (eq != 0) {\n\t\t\t\t\n\t\t\t\tReflect.setField (this, StringTools.urlDecode (f), \"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function toString ():String {\n\t\t\n\t\tvar result = new Array<String> ();\n\t\tvar fields = Reflect.fields (this);\n\t\t\n\t\tfor (f in fields) {\n\t\t\t\n\t\t\tresult.push (StringTools.urlEncode (f) + \"=\" + StringTools.urlEncode (Reflect.field (this, f)));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn result.join (\"&\");\n\t\t\n\t}\n\t\n\t\n}","package openfl.system;\n\n\nimport openfl.utils.Object;\n\n\n@:final class ApplicationDomain {\n\t\n\t\n\tpublic static var currentDomain (default, null) = new ApplicationDomain (null);\n\t\n\tpublic var parentDomain (default, null):ApplicationDomain;\n\t\n\t\n\tpublic function new (parentDomain:ApplicationDomain = null) {\n\t\t\n\t\tif (parentDomain != null) {\n\t\t\t\n\t\t\tthis.parentDomain = parentDomain;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthis.parentDomain = currentDomain;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getDefinition (name:String):Class<Dynamic> {\n\t\t\n\t\treturn Type.resolveClass (name);\n\t\t\n\t}\n\t\n\t\n\tpublic function hasDefinition (name:String):Bool {\n\t\t\n\t\treturn (Type.resolveClass (name) != null);\n\t\t\n\t}\n\t\n\t\n}","package openfl.system;\n\n\nclass LoaderContext {\n\t\n\t\n\tpublic var allowCodeImport:Bool;\n\tpublic var allowLoadBytesCodeExecution:Bool;\n\tpublic var applicationDomain:ApplicationDomain;\n\tpublic var checkPolicyFile:Bool;\n\tpublic var securityDomain:SecurityDomain;\n\t\n\t\n\tpublic function new (checkPolicyFile:Bool = false, applicationDomain:ApplicationDomain = null, securityDomain:SecurityDomain = null):Void {\n\t\t\n\t\tthis.checkPolicyFile = checkPolicyFile;\n\t\tthis.securityDomain = securityDomain;\n\t\tthis.applicationDomain = applicationDomain;\n\t\t\n\t\tallowCodeImport = true;\n\t\tallowLoadBytesCodeExecution = true;\n\t\t\n\t}\n\t\n\t\n}","package openfl.system;\n\n\nclass Security {\n\t\n\t\n\tpublic static inline var LOCAL_TRUSTED = \"localTrusted\";\n\tpublic static inline var LOCAL_WITH_FILE = \"localWithFile\";\n\tpublic static inline var LOCAL_WITH_NETWORK = \"localWithNetwork\";\n\tpublic static inline var REMOTE = \"remote\";\n\t\n\tpublic static var disableAVM1Loading:Bool;\n\tpublic static var exactSettings:Bool;\n\tpublic static var sandboxType (default, null):String;\n\t\n\t\n\tpublic static function allowDomain (?p1:Dynamic, ?p2:Dynamic, ?p3:Dynamic, ?p4:Dynamic, ?p5:Dynamic):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic static function allowInsecureDomain (?p1:Dynamic, ?p2:Dynamic, ?p3:Dynamic, ?p4:Dynamic, ?p5:Dynamic):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadPolicyFile (url:String):Void {\n\t\t\n\t\t//var res = haxe.Http.requestUrl( url );\n\t\t\n\t}\n\t\n\t\n}","package openfl.system;\n\n\nclass SecurityDomain {\n\t\n\t\n\tpublic static var currentDomain (default, null) = new SecurityDomain ();\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n}","package openfl.text;\n\n\n@:enum abstract AntiAliasType(Null<Int>) {\n\t\n\tpublic var ADVANCED = 0;\n\tpublic var NORMAL = 1;\n\t\n\t@:from private static function fromString (value:String):AntiAliasType {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"advanced\": ADVANCED;\n\t\t\tcase \"normal\": NORMAL;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase AntiAliasType.ADVANCED: \"advanced\";\n\t\t\tcase AntiAliasType.NORMAL: \"normal\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.text;\n\n\nimport lime.text.Font in LimeFont;\nimport openfl.utils.Assets;\nimport openfl.utils.ByteArray;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass Font extends LimeFont {\n\t\n\t\n\tpublic var fontName (get, set):String;\n\tpublic var fontStyle:FontStyle;\n\tpublic var fontType:FontType;\n\t\n\tprivate static var __fontByName = new Map<String, Font> ();\n\tprivate static var __registeredFonts = new Array<Font> ();\n\t\n\tprivate var __initialized:Bool;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperty (Font.prototype, \"fontName\", { get: untyped __js__ (\"function () { return this.get_fontName (); }\"), set: untyped __js__ (\"function (v) { return this.set_fontName (v); }\") });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (name:String = null) {\n\t\t\n\t\tsuper (name);\n\t\t\n\t}\n\t\n\t\n\tpublic static function enumerateFonts (enumerateDeviceFonts:Bool = false):Array<Font> {\n\t\t\n\t\treturn __registeredFonts;\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:ByteArray):Font {\n\t\t\n\t\tvar font = new Font ();\n\t\tfont.__fromBytes (bytes);\n\t\t\n\t\t#if lime_cffi\n\t\treturn (font.src != null) ? font : null;\n\t\t#else\n\t\treturn font;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String):Font {\n\t\t\n\t\tvar font = new Font ();\n\t\tfont.__fromFile (path);\n\t\t\n\t\t#if lime_cffi\n\t\treturn (font.src != null) ? font : null;\n\t\t#else\n\t\treturn font;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function registerFont (font:Class<Dynamic>) {\n\t\t\n\t\tvar instance = cast (Type.createInstance (font, []), Font);\n\t\t\n\t\tif (instance != null) {\n\t\t\t\n\t\t\t/*if (Reflect.hasField (font, \"resourceName\")) {\n\t\t\t\t\n\t\t\t\tinstance.fontName = __ofResource (Reflect.field (font, \"resourceName\"));\n\t\t\t\t\n\t\t\t}*/\n\t\t\t\n\t\t\t__registeredFonts.push (instance);\n\t\t\t__fontByName[instance.name] = instance;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __fromLimeFont (value:LimeFont):Font {\n\t\t\n\t\tvar font = new Font ();\n\t\tfont.name = value.name;\n\t\tfont.src = value.src;\n\t\treturn font;\n\t\t\n\t}\n\t\n\t\n\tprivate function __initialize ():Bool {\n\t\t\n\t\t#if native\n\t\tif (!__initialized) {\n\t\t\t\n\t\t\tif (src != null) {\n\t\t\t\t\n\t\t\t\t__initialized = true;\n\t\t\t\t\n\t\t\t} #if (lime >= \"5.9.0\") else if (src == null && __fontID != null && Assets.isLocal (__fontID)) {\n\t\t\t\t\n\t\t\t\t__fromBytes (Assets.getBytes (__fontID));\n\t\t\t\t__initialized = true;\n\t\t\t\t\n\t\t\t} #end\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\treturn __initialized;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate inline function get_fontName ():String {\n\t\t\n\t\treturn name;\n\t\t\n\t}\n\t\n\t\n\tprivate inline function set_fontName (value:String):String {\n\t\t\n\t\treturn name = value;\n\t\t\n\t}\n\t\n\t\n}","package openfl.text;\n\n\n@:enum abstract FontStyle(Null<Int>) {\n\t\n\tpublic var BOLD = 0;\n\tpublic var BOLD_ITALIC = 1;\n\tpublic var ITALIC = 2;\n\tpublic var REGULAR = 3;\n\t\n\t@:from private static function fromString (value:String):FontStyle {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"bold\": BOLD;\n\t\t\tcase \"boldItalic\": BOLD_ITALIC;\n\t\t\tcase \"italic\": ITALIC;\n\t\t\tcase \"regular\": REGULAR;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase FontStyle.BOLD: \"bold\";\n\t\t\tcase FontStyle.BOLD_ITALIC: \"boldItalic\";\n\t\t\tcase FontStyle.ITALIC: \"italic\";\n\t\t\tcase FontStyle.REGULAR: \"regular\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.text;\n\n\n@:enum abstract FontType(Null<Int>) {\n\t\n\tpublic var DEVICE = 0;\n\tpublic var EMBEDDED = 1;\n\tpublic var EMBEDDED_CFF = 2;\n\t\n\t@:from private static function fromString (value:String):FontType {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"device\": DEVICE;\n\t\t\tcase \"embedded\": EMBEDDED;\n\t\t\tcase \"embeddedCFF\": EMBEDDED_CFF;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase FontType.DEVICE: \"device\";\n\t\t\tcase FontType.EMBEDDED: \"embedded\";\n\t\t\tcase FontType.EMBEDDED_CFF: \"embeddedCFF\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.text;\n\n\n@:enum abstract GridFitType(Null<Int>) {\n\t\n\tpublic var NONE = 0;\n\tpublic var PIXEL = 1;\n\tpublic var SUBPIXEL = 2;\n\t\n\t@:from private static function fromString (value:String):GridFitType {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"none\": NONE;\n\t\t\tcase \"pixel\": PIXEL;\n\t\t\tcase \"subpixel\": SUBPIXEL;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase GridFitType.NONE: \"none\";\n\t\t\tcase GridFitType.PIXEL: \"pixel\";\n\t\t\tcase GridFitType.SUBPIXEL: \"subpixel\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.text;\n\n\nimport openfl.display.DisplayObject;\nimport openfl.display.Graphics;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.Graphics)\n\n\nclass StaticText extends DisplayObject {\n\t\n\t\n\tpublic var text (default, null):String;\n\t\n\t\n\tprivate function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__graphics = new Graphics (this);\n\t\t\n\t}\n\t\n\t\n}","package openfl.text;\n\n\nimport haxe.Timer;\nimport lime.system.Clipboard;\nimport lime.text.UTF8String;\nimport lime.ui.KeyCode;\nimport lime.ui.KeyModifier;\nimport lime.ui.MouseCursor;\nimport lime.utils.Log;\nimport openfl._internal.renderer.cairo.CairoTextField;\nimport openfl._internal.renderer.canvas.CanvasTextField;\nimport openfl._internal.renderer.dom.DOMBitmap;\nimport openfl._internal.renderer.dom.DOMTextField;\nimport openfl._internal.renderer.opengl.GLRenderer;\nimport openfl._internal.renderer.RenderSession;\nimport openfl._internal.swf.SWFLite;\nimport openfl._internal.symbols.DynamicTextSymbol;\nimport openfl._internal.symbols.FontSymbol;\nimport openfl._internal.text.HTMLParser;\nimport openfl._internal.text.TextEngine;\nimport openfl._internal.text.TextFormatRange;\nimport openfl._internal.text.TextLayoutGroup;\nimport openfl.display.DisplayObject;\nimport openfl.display.Graphics;\nimport openfl.display.InteractiveObject;\nimport openfl.display.IShaderDrawable;\nimport openfl.display.Shader;\nimport openfl.events.Event;\nimport openfl.events.FocusEvent;\nimport openfl.events.KeyboardEvent;\nimport openfl.events.MouseEvent;\nimport openfl.events.TextEvent;\nimport openfl.filters.GlowFilter;\nimport openfl.geom.Matrix;\nimport openfl.geom.Rectangle;\nimport openfl.net.URLRequest;\nimport openfl.ui.Keyboard;\nimport openfl.Lib;\n\n#if (js && html5)\nimport js.html.DivElement;\n#end\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n@:access(openfl.display.Graphics)\n@:access(openfl.geom.ColorTransform)\n@:access(openfl.geom.Rectangle)\n@:access(openfl._internal.text.TextEngine)\n@:access(openfl.text.TextFormat)\n\n\nclass TextField extends InteractiveObject implements IShaderDrawable {\n\t\n\t\n\tprivate static var __defaultTextFormat:TextFormat;\n\n\tpublic var antiAliasType (get, set):AntiAliasType;\n\tpublic var autoSize (get, set):TextFieldAutoSize;\n\tpublic var background (get, set):Bool;\n\tpublic var backgroundColor (get, set):Int;\n\tpublic var border (get, set):Bool;\n\tpublic var borderColor (get, set):Int;\n\tpublic var bottomScrollV (get, never):Int;\n\tpublic var caretIndex (get, never):Int;\n\tpublic var defaultTextFormat (get, set):TextFormat;\n\tpublic var displayAsPassword (get, set):Bool;\n\tpublic var embedFonts (get, set):Bool;\n\tpublic var gridFitType (get, set):GridFitType;\n\tpublic var htmlText (get, set):UTF8String;\n\tpublic var length (get, never):Int;\n\tpublic var maxChars (get, set):Int;\n\tpublic var maxScrollH (get, never):Int;\n\tpublic var maxScrollV (get, never):Int;\n\tpublic var mouseWheelEnabled (get, set):Bool;\n\tpublic var multiline (get, set):Bool;\n\tpublic var numLines (get, never):Int;\n\tpublic var restrict (get, set):UTF8String;\n\tpublic var scrollH (get, set):Int;\n\tpublic var scrollV (get, set):Int;\n\tpublic var selectable (get, set):Bool;\n\tpublic var selectionBeginIndex (get, never):Int;\n\tpublic var selectionEndIndex (get, never):Int;\n\t@:beta public var shader:Shader;\n\tpublic var sharpness (get, set):Float;\n\tpublic var text (get, set):UTF8String;\n\tpublic var textColor (get, set):Int;\n\tpublic var textHeight (get, never):Float;\n\tpublic var textWidth (get, never):Float;\n\tpublic var type (get, set):TextFieldType;\n\tpublic var wordWrap (get, set):Bool;\n\t\n\tprivate var __bounds:Rectangle;\n\tprivate var __caretIndex:Int;\n\tprivate var __cursorTimer:Timer;\n\tprivate var __dirty:Bool;\n\tprivate var __displayAsPassword:Bool;\n\tprivate var __inputEnabled:Bool;\n\tprivate var __isHTML:Bool;\n\tprivate var __layoutDirty:Bool;\n\tprivate var __mouseWheelEnabled:Bool;\n\tprivate var __offsetX:Float;\n\tprivate var __offsetY:Float;\n\tprivate var __selectionIndex:Int;\n\tprivate var __showCursor:Bool;\n\tprivate var __symbol:DynamicTextSymbol;\n\tprivate var __text:UTF8String;\n\tprivate var __htmlText:UTF8String;\n\tprivate var __textEngine:TextEngine;\n\tprivate var __textFormat:TextFormat;\n\t\n\t#if (js && html5)\n\tprivate var __div:DivElement;\n\t#end\n\t\n\t#if dom\n\tprivate var __renderedOnCanvasWhileOnDOM:Bool = false;\n\tprivate var __rawHtmlText:String;\n\tprivate var __forceCachedBitmapUpdate:Bool = false;\n\t#end\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (TextField.prototype, {\n\t\t\t\"antiAliasType\": { get: untyped __js__ (\"function () { return this.get_antiAliasType (); }\"), set: untyped __js__ (\"function (v) { return this.set_antiAliasType (v); }\") },\n\t\t\t\"autoSize\": { get: untyped __js__ (\"function () { return this.get_autoSize (); }\"), set: untyped __js__ (\"function (v) { return this.set_autoSize (v); }\") },\n\t\t\t\"background\": { get: untyped __js__ (\"function () { return this.get_background (); }\"), set: untyped __js__ (\"function (v) { return this.set_background (v); }\") },\n\t\t\t\"backgroundColor\": { get: untyped __js__ (\"function () { return this.get_backgroundColor (); }\"), set: untyped __js__ (\"function (v) { return this.set_backgroundColor (v); }\") },\n\t\t\t\"border\": { get: untyped __js__ (\"function () { return this.get_border (); }\"), set: untyped __js__ (\"function (v) { return this.set_border (v); }\") },\n\t\t\t\"borderColor\": { get: untyped __js__ (\"function () { return this.get_borderColor (); }\"), set: untyped __js__ (\"function (v) { return this.set_borderColor (v); }\") },\n\t\t\t\"bottomScrollV\": { get: untyped __js__ (\"function () { return this.get_bottomScrollV (); }\") },\n\t\t\t\"defaultTextFormat\": { get: untyped __js__ (\"function () { return this.get_defaultTextFormat (); }\"), set: untyped __js__ (\"function (v) { return this.set_defaultTextFormat (v); }\") },\n\t\t\t\"displayAsPassword\": { get: untyped __js__ (\"function () { return this.get_displayAsPassword (); }\"), set: untyped __js__ (\"function (v) { return this.set_displayAsPassword (v); }\") },\n\t\t\t\"embedFonts\": { get: untyped __js__ (\"function () { return this.get_embedFonts (); }\"), set: untyped __js__ (\"function (v) { return this.set_embedFonts (v); }\") },\n\t\t\t\"gridFitType\": { get: untyped __js__ (\"function () { return this.get_gridFitType (); }\"), set: untyped __js__ (\"function (v) { return this.set_gridFitType (v); }\") },\n\t\t\t\"htmlText\": { get: untyped __js__ (\"function () { return this.get_htmlText (); }\"), set: untyped __js__ (\"function (v) { return this.set_htmlText (v); }\") },\n\t\t\t\"length\": { get: untyped __js__ (\"function () { return this.get_length (); }\") },\n\t\t\t\"maxChars\": { get: untyped __js__ (\"function () { return this.get_maxChars (); }\"), set: untyped __js__ (\"function (v) { return this.set_maxChars (v); }\") },\n\t\t\t\"maxScrollH\": { get: untyped __js__ (\"function () { return this.get_maxScrollH (); }\") },\n\t\t\t\"maxScrollV\": { get: untyped __js__ (\"function () { return this.get_maxScrollV (); }\") },\n\t\t\t\"mouseWheelEnabled\": { get: untyped __js__ (\"function () { return this.get_mouseWheelEnabled (); }\"), set: untyped __js__ (\"function (v) { return this.set_mouseWheelEnabled (v); }\") },\n\t\t\t\"multiline\": { get: untyped __js__ (\"function () { return this.get_multiline (); }\"), set: untyped __js__ (\"function (v) { return this.set_multiline (v); }\") },\n\t\t\t\"numLines\": { get: untyped __js__ (\"function () { return this.get_numLines (); }\") },\n\t\t\t\"restrict\": { get: untyped __js__ (\"function () { return this.get_restrict (); }\"), set: untyped __js__ (\"function (v) { return this.set_restrict (v); }\") },\n\t\t\t\"scrollH\": { get: untyped __js__ (\"function () { return this.get_scrollH (); }\"), set: untyped __js__ (\"function (v) { return this.set_scrollH (v); }\") },\n\t\t\t\"scrollV\": { get: untyped __js__ (\"function () { return this.get_scrollV (); }\"), set: untyped __js__ (\"function (v) { return this.set_scrollV (v); }\") },\n\t\t\t\"selectable\": { get: untyped __js__ (\"function () { return this.get_selectable (); }\"), set: untyped __js__ (\"function (v) { return this.set_selectable (v); }\") },\n\t\t\t\"selectionBeginIndex\": { get: untyped __js__ (\"function () { return this.get_selectionBeginIndex (); }\") },\n\t\t\t\"selectionEndIndex\": { get: untyped __js__ (\"function () { return this.get_selectionEndIndex (); }\") },\n\t\t\t\"sharpness\": { get: untyped __js__ (\"function () { return this.get_sharpness (); }\"), set: untyped __js__ (\"function (v) { return this.set_sharpness (v); }\") },\n\t\t\t\"text\": { get: untyped __js__ (\"function () { return this.get_text (); }\"), set: untyped __js__ (\"function (v) { return this.set_text (v); }\") },\n\t\t\t\"textColor\": { get: untyped __js__ (\"function () { return this.get_textColor (); }\"), set: untyped __js__ (\"function (v) { return this.set_textColor (v); }\") },\n\t\t\t\"textHeight\": { get: untyped __js__ (\"function () { return this.get_textHeight (); }\") },\n\t\t\t\"textWidth\": { get: untyped __js__ (\"function () { return this.get_textWidth (); }\") },\n\t\t\t\"type\": { get: untyped __js__ (\"function () { return this.get_type (); }\"), set: untyped __js__ (\"function (v) { return this.set_type (v); }\") },\n\t\t\t\"wordWrap\": { get: untyped __js__ (\"function () { return this.get_wordWrap (); }\"), set: untyped __js__ (\"function (v) { return this.set_wordWrap (v); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__caretIndex = -1;\n\t\t__displayAsPassword = false;\n\t\t__graphics = new Graphics (this);\n\t\t__textEngine = new TextEngine (this);\n\t\t__layoutDirty = true;\n\t\t__offsetX = 0;\n\t\t__offsetY = 0;\n\t\t__mouseWheelEnabled = true;\n\t\t__text = \"\";\n\t\t\n\t\tif (__defaultTextFormat == null) {\n\t\t\t\n\t\t\t__defaultTextFormat = new TextFormat (\"Times New Roman\", 12, 0x000000, false, false, false, \"\", \"\", TextFormatAlign.LEFT, 0, 0, 0, 0);\n\t\t\t__defaultTextFormat.blockIndent = 0;\n\t\t\t__defaultTextFormat.bullet = false;\n\t\t\t__defaultTextFormat.letterSpacing = 0;\n\t\t\t__defaultTextFormat.kerning = false;\n\t\t\t\n\t\t}\n\t\t\n\t\t__textFormat = __defaultTextFormat.clone ();\n\t\t__textEngine.textFormatRanges.push (new TextFormatRange (__textFormat, 0, 0));\n\t\t\n\t\taddEventListener (MouseEvent.MOUSE_DOWN, this_onMouseDown);\n\t\taddEventListener (FocusEvent.FOCUS_IN, this_onFocusIn);\n\t\taddEventListener (FocusEvent.FOCUS_OUT, this_onFocusOut);\n\t\taddEventListener (KeyboardEvent.KEY_DOWN, this_onKeyDown);\n\t\t\n\t}\n\t\n\t\n\tpublic function appendText (text:String):Void {\n\t\t\n\t\tif (text == null || text == \"\") return;\n\t\t\n\t\t__dirty = true;\n\t\t__layoutDirty = true;\n\t\t__setRenderDirty ();\n\t\t\n\t\t__updateText (__text + text);\n\t\t\n\t\t__textEngine.textFormatRanges[__textEngine.textFormatRanges.length - 1].end = __text.length;\n\t\t__updateScrollH ();\n\t\t\n\t}\n\t\n\t\n\tpublic function getCharBoundaries (charIndex:Int):Rectangle {\n\t\t\n\t\tif (charIndex < 0 || charIndex > __text.length - 1) return null;\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tfor (group in __textEngine.layoutGroups) {\n\t\t\t\n\t\t\tif (charIndex >= group.startIndex && charIndex <= group.endIndex) {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t\tvar x = group.offsetX;\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...(charIndex - group.startIndex)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tx += group.getAdvance (i);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// TODO: Is this actually right for combining characters?\n\t\t\t\t\tvar lastPosition = group.getAdvance (charIndex - group.startIndex);\n\t\t\t\t\t\n\t\t\t\t\treturn new Rectangle (x, group.offsetY, lastPosition, group.ascent + group.descent);\n\t\t\t\t\t\n\t\t\t\t} catch (e:Dynamic) {}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function getCharIndexAtPoint (x:Float, y:Float):Int {\n\t\t\n\t\tif (x <= 2 || x > width + 4 || y <= 0 || y > height + 4) return -1;\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tx += scrollH;\n\t\t\n\t\tfor (i in 0...scrollV - 1) {\n\t\t\t\n\t\t\ty += __textEngine.lineHeights[i];\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (group in __textEngine.layoutGroups) {\n\t\t\t\n\t\t\tif (y >= group.offsetY && y <= group.offsetY + group.height) {\n\t\t\t\t\n\t\t\t\tif (x >= group.offsetX && x <= group.offsetX + group.width) {\n\t\t\t\t\t\n\t\t\t\t\tvar advance = 0.0;\n\t\t\t\t\t\n\t\t\t\t\tfor (i in 0...group.positions.length) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tadvance += group.getAdvance (i);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (x <= group.offsetX + advance) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn group.startIndex + i;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn group.endIndex;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function getFirstCharInParagraph (charIndex:Int):Int {\n\t\t\n\t\tif (charIndex < 0 || charIndex > __text.length - 1) return 0;\n\t\t\n\t\tvar index = __textEngine.getLineBreakIndex ();\n\t\tvar startIndex = 0;\n\t\t\n\t\twhile (index > -1) {\n\t\t\t\n\t\t\tif (index <= charIndex) {\n\t\t\t\t\n\t\t\t\tstartIndex = index + 1;\n\t\t\t\t\n\t\t\t} else if (index > charIndex) {\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tindex = __textEngine.getLineBreakIndex (index + 1);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn startIndex;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLineIndexAtPoint (x:Float, y:Float):Int {\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tif (x <= 2 || x > width + 4 || y <= 0 || y > height + 4) return -1;\n\t\t\n\t\tfor (i in 0...scrollV - 1) {\n\t\t\t\n\t\t\ty += __textEngine.lineHeights[i];\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (group in __textEngine.layoutGroups) {\n\t\t\t\n\t\t\tif (y >= group.offsetY && y <= group.offsetY + group.height) {\n\t\t\t\t\n\t\t\t\treturn group.lineIndex;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLineIndexOfChar (charIndex:Int):Int {\n\t\t\n\t\tif (charIndex < 0 || charIndex > __text.length) return -1;\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tfor (group in __textEngine.layoutGroups) {\n\t\t\t\n\t\t\tif (group.startIndex <= charIndex && group.endIndex >= charIndex) {\n\t\t\t\t\n\t\t\t\treturn group.lineIndex;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLineLength (lineIndex:Int):Int {\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tif (lineIndex < 0 || lineIndex > __textEngine.numLines - 1) return 0;\n\t\t\n\t\tvar startIndex = -1;\n\t\tvar endIndex = -1;\n\t\t\n\t\tfor (group in __textEngine.layoutGroups) {\n\t\t\t\n\t\t\tif (group.lineIndex == lineIndex) {\n\t\t\t\t\n\t\t\t\tif (startIndex == -1) startIndex = group.startIndex;\n\t\t\t\t\n\t\t\t} else if (group.lineIndex == lineIndex + 1) {\n\t\t\t\t\n\t\t\t\tendIndex = group.startIndex;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (endIndex == -1) endIndex = __text.length;\n\t\treturn endIndex - startIndex;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLineMetrics (lineIndex:Int):TextLineMetrics {\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tvar ascender = __textEngine.lineAscents[lineIndex];\n\t\tvar descender = __textEngine.lineDescents[lineIndex];\n\t\tvar leading = __textEngine.lineLeadings[lineIndex];\n\t\tvar lineHeight = __textEngine.lineHeights[lineIndex];\n\t\tvar lineWidth = __textEngine.lineWidths[lineIndex];\n\t\t\n\t\t// TODO: Handle START and END based on language (don't assume LTR)\n\t\t\n\t\tvar margin = switch (__textFormat.align) {\n\t\t\t\n\t\t\tcase LEFT, JUSTIFY, START: 2;\n\t\t\tcase RIGHT, END: (__textEngine.width - lineWidth) - 2;\n\t\t\tcase CENTER: (__textEngine.width - lineWidth) / 2;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn new TextLineMetrics (margin, lineWidth, lineHeight, ascender, descender, leading); \n\t\t\n\t}\n\t\n\t\n\tpublic function getLineOffset (lineIndex:Int):Int {\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tif (lineIndex < 0 || lineIndex > __textEngine.numLines - 1) return -1;\n\t\t\n\t\tfor (group in __textEngine.layoutGroups) {\n\t\t\t\n\t\t\tif (group.lineIndex == lineIndex) {\n\t\t\t\t\n\t\t\t\treturn group.startIndex;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getLineText (lineIndex:Int):String {\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tif (lineIndex < 0 || lineIndex > __textEngine.numLines - 1) return null;\n\t\t\n\t\tvar startIndex = -1;\n\t\tvar endIndex = -1;\n\t\t\n\t\tfor (group in __textEngine.layoutGroups) {\n\t\t\t\n\t\t\tif (group.lineIndex == lineIndex) {\n\t\t\t\t\n\t\t\t\tif (startIndex == -1) startIndex = group.startIndex;\n\t\t\t\t\n\t\t\t} else if (group.lineIndex == lineIndex + 1) {\n\t\t\t\t\n\t\t\t\tendIndex = group.startIndex;\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (endIndex == -1) endIndex = __text.length;\n\t\t\n\t\treturn __textEngine.text.substring (startIndex, endIndex);\n\t\t\n\t}\n\t\n\t\n\tpublic function getParagraphLength (charIndex:Int):Int {\n\t\t\n\t\tif (charIndex < 0 || charIndex > __text.length - 1) return 0;\n\t\t\n\t\tvar startIndex = getFirstCharInParagraph (charIndex);\n\t\tvar endIndex = __textEngine.getLineBreakIndex (charIndex) + 1;\n\t\t\n\t\tif (endIndex == 0) endIndex = __text.length;\n\t\treturn endIndex - startIndex;\n\t\t\n\t}\n\t\n\t\n\tpublic function getTextFormat (beginIndex:Int = 0, endIndex:Int = 0):TextFormat {\n\t\t\n\t\tvar format = null;\n\t\t\n\t\tfor (group in __textEngine.textFormatRanges) {\n\t\t\t\n\t\t\tif ((group.start <= beginIndex && group.end >= beginIndex) || (group.start <= endIndex && group.end >= endIndex)) {\n\t\t\t\t\n\t\t\t\tif (format == null) {\n\t\t\t\t\t\n\t\t\t\t\tformat = group.format.clone ();\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (group.format.font != format.font) format.font = null;\n\t\t\t\t\tif (group.format.size != format.size) format.size = null;\n\t\t\t\t\tif (group.format.color != format.color) format.color = null;\n\t\t\t\t\tif (group.format.bold != format.bold) format.bold = null;\n\t\t\t\t\tif (group.format.italic != format.italic) format.italic = null;\n\t\t\t\t\tif (group.format.underline != format.underline) format.underline = null;\n\t\t\t\t\tif (group.format.url != format.url) format.url = null;\n\t\t\t\t\tif (group.format.target != format.target) format.target = null;\n\t\t\t\t\tif (group.format.align != format.align) format.align = null;\n\t\t\t\t\tif (group.format.leftMargin != format.leftMargin) format.leftMargin = null;\n\t\t\t\t\tif (group.format.rightMargin != format.rightMargin) format.rightMargin = null;\n\t\t\t\t\tif (group.format.indent != format.indent) format.indent = null;\n\t\t\t\t\tif (group.format.leading != format.leading) format.leading = null;\n\t\t\t\t\tif (group.format.blockIndent != format.blockIndent) format.blockIndent = null;\n\t\t\t\t\tif (group.format.bullet != format.bullet) format.bullet = null;\n\t\t\t\t\tif (group.format.kerning != format.kerning) format.kerning = null;\n\t\t\t\t\tif (group.format.letterSpacing != format.letterSpacing) format.letterSpacing = null;\n\t\t\t\t\tif (group.format.tabStops != format.tabStops) format.tabStops = null;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn format;\n\t\t\n\t}\n\t\n\t\n\tpublic function replaceSelectedText (value:String):Void {\n\t\t\n\t\tif (value == \"\" && __selectionIndex == __caretIndex) return;\n\t\t\n\t\tvar startIndex = __caretIndex < __selectionIndex ? __caretIndex : __selectionIndex;\n\t\tvar endIndex = __caretIndex > __selectionIndex ? __caretIndex : __selectionIndex;\n\t\t\n\t\tif (startIndex == endIndex && __textEngine.maxChars > 0 && __text.length == __textEngine.maxChars) return;\n\t\t\n\t\tif (startIndex > __text.length) startIndex = __text.length;\n\t\tif (endIndex > __text.length) endIndex = __text.length;\n\t\tif (endIndex < startIndex) {\n\t\t\t\n\t\t\tvar cache = endIndex;\n\t\t\tendIndex = startIndex;\n\t\t\tstartIndex = cache;\n\t\t\t\n\t\t}\n\t\tif (startIndex < 0) startIndex = 0;\n\t\t\n\t\treplaceText (startIndex, endIndex, value);\n\t\t\n\t\tvar i = startIndex + cast (value, UTF8String).length;\n\t\tif (i > __text.length) i = __text.length;\n\t\t\n\t\tsetSelection (i, i);\n\t\t\n\t}\n\t\n\t\n\tpublic function replaceText (beginIndex:Int, endIndex:Int, newText:String):Void {\n\t\t\n\t\tif (endIndex < beginIndex || beginIndex < 0 || endIndex > __text.length || newText == null) return;\n\t\t\n\t\t__updateText (__text.substring (0, beginIndex) + newText + __text.substring (endIndex));\n\t\tif (endIndex > __text.length) endIndex = __text.length;\n\t\t\n\t\tvar offset = newText.length - (endIndex - beginIndex);\n\t\t\n\t\tvar i = 0;\n\t\tvar range;\n\t\t\n\t\twhile (i < __textEngine.textFormatRanges.length) {\n\t\t\t\n\t\t\trange = __textEngine.textFormatRanges[i];\n\t\t\t\n\t\t\tif (range.start <= beginIndex && range.end >= endIndex) {\n\t\t\t\t\n\t\t\t\trange.end += offset;\n\t\t\t\ti++;\n\t\t\t\t\n\t\t\t} else if (range.start >= beginIndex && range.end <= endIndex) {\n\t\t\t\t\n\t\t\t\tif (i > 0) {\n\t\t\t\t\t\n\t\t\t\t\t__textEngine.textFormatRanges.splice (i, 1);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\trange.start = 0;\n\t\t\t\t\trange.end = beginIndex + newText.length;\n\t\t\t\t\ti++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toffset -= (range.end - range.start);\n\t\t\t\t\n\t\t\t} else if (range.start > beginIndex && range.start <= endIndex) {\n\t\t\t\t\n\t\t\t\trange.start += offset;\n\t\t\t\ti++;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ti++;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t__updateScrollH ();\n\t\t\n\t\t__dirty = true;\n\t\t__layoutDirty = true;\n\t\t__setRenderDirty ();\n\t\t\n\t}\n\t\n\t\n\tpublic function setSelection (beginIndex:Int, endIndex:Int) {\n\t\t\n\t\t__selectionIndex = beginIndex;\n\t\t__caretIndex = endIndex;\n\t\t__stopCursorTimer ();\n\t\t__startCursorTimer ();\n\n\t}\n\t\n\t\n\tpublic function setTextFormat (format:TextFormat, beginIndex:Int = 0, endIndex:Int = 0):Void {\n\t\t\n\t\tvar max = text.length;\n\t\tvar range;\n\t\t\n\t\tif (beginIndex < 0) beginIndex = 0;\n\t\tif (endIndex < 0) endIndex = 0;\n\t\t\n\t\tif (endIndex == 0) {\n\t\t\t\n\t\t\tif (beginIndex == 0) {\n\t\t\t\t\n\t\t\t\tendIndex = max;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tendIndex = beginIndex + 1;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (endIndex < beginIndex) return;\n\t\t\n\t\tif (beginIndex == 0 && endIndex >= max) {\n\n\t\t\t// set text format for the whole textfield\n\n\t\t\t__textFormat.__merge (format);\n\t\t\t\n\t\t\tfor (i in 0...__textEngine.textFormatRanges.length) {\n\n\t\t\t\trange = __textEngine.textFormatRanges[i];\n\t\t\t\trange.format.__merge (__textFormat);\n\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar index = __textEngine.textFormatRanges.length;\n\t\t\tvar searchIndex;\n\n\t\t\twhile (index > 0) {\n\t\t\t\t\n\t\t\t\tindex--;\n\t\t\t\trange = __textEngine.textFormatRanges[index];\n\t\t\t\t\n\t\t\t\tif (range.start == beginIndex && range.end == endIndex) {\n\n\t\t\t\t\t// the new incoming text format range matches an existing range exactly, just replace it\n\n\t\t\t\t\trange.format = __defaultTextFormat.clone ();\n\t\t\t\t\trange.format.__merge (format);\n\t\t\t\t\treturn;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (range.start >= beginIndex && range.end <= endIndex) {\n\n\t\t\t\t\t// the new incoming text format range completely encompasses this existing range, let's remove it\n\n\t\t\t\t\tsearchIndex = __textEngine.textFormatRanges.indexOf (range);\n\t\t\t\t\t\n\t\t\t\t\tif (searchIndex > -1) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__textEngine.textFormatRanges.splice (searchIndex, 1);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar prevRange = null, nextRange = null;\n\n\t\t\t// find the ranges before and after the new incoming range\n\n\t\t\tif (beginIndex > 0) {\n\n\t\t\t\tfor (i in 0...__textEngine.textFormatRanges.length) {\n\n\t\t\t\t\trange = __textEngine.textFormatRanges[i];\n\t\t\t\t\t\n\t\t\t\t\tif (range.end >= beginIndex) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tprevRange = range;\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (endIndex < max) {\n\n\t\t\t\tvar ni = __textEngine.textFormatRanges.length;\n\n\t\t\t\twhile( --ni >= 0 ) {\n\n\t\t\t\t\trange = __textEngine.textFormatRanges[ni];\n\n\t\t\t\t\tif (range.start <= endIndex) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tnextRange = range;\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (nextRange == prevRange) {\n\n\t\t\t\t// the new incoming text format range is completely within this existing range, let's divide it up\n\n\t\t\t\tnextRange = new TextFormatRange (nextRange.format.clone (), nextRange.start, nextRange.end);\n\t\t\t\t__textEngine.textFormatRanges.push (nextRange);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (prevRange != null) {\n\t\t\t\t\n\t\t\t\tprevRange.end = beginIndex;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (nextRange != null) {\n\t\t\t\t\n\t\t\t\tnextRange.start = endIndex;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar textFormat = __defaultTextFormat.clone ();\n\t\t\ttextFormat.__merge (format);\n\t\t\t\n\t\t\t__textEngine.textFormatRanges.push (new TextFormatRange (textFormat, beginIndex, endIndex));\n\t\t\t\n\t\t\t__textEngine.textFormatRanges.sort (function (a:TextFormatRange, b:TextFormatRange):Int {\n\t\t\t\t\n\t\t\t\tif (a.start < b.start || a.end < b.end) {\n\t\t\t\t\t\n\t\t\t\t\treturn -1;\n\t\t\t\t\t\n\t\t\t\t} else if (a.start > b.start || a.end > b.end) {\n\t\t\t\t\t\n\t\t\t\t\treturn 1;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn 0;\n\t\t\t\t\n\t\t\t});\n\t\t\t\n\t\t}\n\t\t\n\t\t__dirty = true;\n\t\t__layoutDirty = true;\n\t\t__setRenderDirty ();\n\t\t\n\t}\n\t\n\t\n\tprivate override function __allowMouseFocus ():Bool {\n\t\t\n\t\treturn __textEngine.type == INPUT || tabEnabled || selectable;\n\t\t\n\t}\n\t\n\t\n\tprivate function __caretBeginningOfLine ():Void {\n\t\t\n\t\tif (__selectionIndex == __caretIndex || __caretIndex < __selectionIndex) {\n\t\t\t\n\t\t\t__caretIndex = getLineOffset (getLineIndexOfChar (__caretIndex));\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__selectionIndex = getLineOffset (getLineIndexOfChar (__selectionIndex));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __caretEndOfLine ():Void {\n\t\t\n\t\tvar lineIndex;\n\t\t\n\t\tif (__selectionIndex == __caretIndex) {\n\t\t\t\n\t\t\tlineIndex = getLineIndexOfChar (__caretIndex);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tlineIndex = getLineIndexOfChar (Std.int (Math.max (__caretIndex, __selectionIndex)));\n\t\t\t\n\t\t}\n\t\t\n\t\tif (lineIndex < __textEngine.numLines - 1) {\n\t\t\t\n\t\t\t__caretIndex = getLineOffset (lineIndex + 1) - 1;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__caretIndex = __text.length;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __caretNextCharacter ():Void {\n\t\t\n\t\tif (__caretIndex < __text.length) {\n\t\t\t\n\t\t\t__caretIndex++;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __caretNextLine (lineIndex:Null<Int> = null, caretIndex:Null<Int> = null):Void {\n\t\t\n\t\tif (lineIndex == null) {\n\t\t\t\n\t\t\tlineIndex = getLineIndexOfChar (__caretIndex);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (lineIndex < __textEngine.numLines - 1) {\n\t\t\t\n\t\t\tif (caretIndex == null) {\n\t\t\t\t\n\t\t\t\tcaretIndex = __caretIndex;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__caretIndex = __getCharIndexOnDifferentLine (caretIndex, lineIndex + 1);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__caretIndex = __text.length;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __caretPreviousCharacter ():Void {\n\t\t\n\t\tif (__caretIndex > 0) {\n\t\t\t\n\t\t\t__caretIndex--;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __caretPreviousLine (lineIndex:Null<Int> = null, caretIndex:Null<Int> = null):Void {\n\t\t\n\t\tif (lineIndex == null) {\n\t\t\t\n\t\t\tlineIndex = getLineIndexOfChar (__caretIndex);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (lineIndex > 0) {\n\t\t\t\n\t\t\tif (caretIndex == null) {\n\t\t\t\t\n\t\t\t\tcaretIndex = __caretIndex;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__caretIndex = __getCharIndexOnDifferentLine (caretIndex, lineIndex - 1);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t__caretIndex = 0;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __disableInput ():Void {\n\t\t\n\t\tif (__inputEnabled && stage != null) {\n\t\t\t\n\t\t\tstage.window.enableTextEvents = false;\n\t\t\tstage.window.onTextInput.remove (window_onTextInput);\n\t\t\tstage.window.onKeyDown.remove (window_onKeyDown);\n\t\t\t\n\t\t\t__inputEnabled = false;\n\t\t\t__stopCursorTimer ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __dispatch (event:Event):Bool {\n\t\t\n\t\tif (event.eventPhase == AT_TARGET && event.type == MouseEvent.MOUSE_UP) {\n\t\t\t\n\t\t\tvar event:MouseEvent = cast event;\n\t\t\tvar group = __getGroup (mouseX, mouseY, true);\n\t\t\t\n\t\t\tif (group != null) {\n\t\t\t\t\n\t\t\t\tvar url = group.format.url;\n\t\t\t\t\n\t\t\t\tif (url != null && url != \"\") {\n\t\t\t\t\t\n\t\t\t\t\tif (StringTools.startsWith (url, \"event:\")) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdispatchEvent (new TextEvent (TextEvent.LINK, false, false, url.substr (6)));\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tLib.getURL (new URLRequest (url));\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn super.__dispatch (event);\n\t\t\n\t}\n\t\n\t\n\tprivate function __enableInput ():Void {\n\t\t\n\t\tif (stage != null) {\n\t\t\t\n\t\t\tstage.window.enableTextEvents = true;\n\t\t\t\n\t\t\tif (!__inputEnabled) {\n\t\t\t\t\n\t\t\t\tstage.window.enableTextEvents = true;\n\t\t\t\t\n\t\t\t\tif (!stage.window.onTextInput.has (window_onTextInput)) {\n\t\t\t\t\t\n\t\t\t\t\tstage.window.onTextInput.add (window_onTextInput);\n\t\t\t\t\tstage.window.onKeyDown.add (window_onKeyDown);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__inputEnabled = true;\n\t\t\t\t__startCursorTimer ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromSymbol (swf:SWFLite, symbol:DynamicTextSymbol):Void {\n\t\t\n\t\t__symbol = symbol;\n\t\t\n\t\twidth = symbol.width;\n\t\theight = symbol.height;\n\t\t\n\t\t__offsetX = symbol.x;\n\t\t__offsetY = symbol.y;\n\t\t\n\t\tmultiline = symbol.multiline;\n\t\twordWrap = symbol.wordWrap;\n\t\tdisplayAsPassword = symbol.password;\n\t\t\n\t\tif (symbol.border) {\n\t\t\t\n\t\t\tborder = true;\n\t\t\tbackground = true;\n\t\t\t\n\t\t}\n\t\t\n\t\tselectable = symbol.selectable;\n\t\t\n\t\tif (symbol.input) {\n\t\t\t\n\t\t\ttype = INPUT;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar format = new TextFormat ();\n\t\tif (symbol.color != null) format.color = (symbol.color & 0x00FFFFFF);\n\t\tformat.size = Math.round (symbol.fontHeight / 20);\n\t\t\n\t\tvar font:FontSymbol = cast swf.symbols.get (symbol.fontID);\n\t\t\n\t\tif (font != null) {\n\t\t\t\n\t\t\t// TODO: Bold and italic are handled in the font already\n\t\t\t// Setting this can cause \"extra\" bold in HTML5\n\t\t\t\n\t\t\t//format.bold = font.bold;\n\t\t\t//format.italic = font.italic;\n\t\t\t//format.leading = Std.int (font.leading / 20 + (format.size * 0.2) #if flash + 2 #end);\n\t\t\t//embedFonts = true;\n\t\t\t\n\t\t\tformat.__ascent = ((font.ascent / 20) / 1024);\n\t\t\tformat.__descent = ((font.descent / 20) / 1024);\n\t\t\t\n\t\t}\n\t\t\n\t\tformat.font = symbol.fontName;\n\n\t\tvar found = false;\n\t\t\n\t\tswitch (format.font) {\n\t\t\t\n\t\t\tcase \"_sans\", \"_serif\", \"_typewriter\", \"\", null:\n\t\t\t\t\n\t\t\t\tfound = true;\n\t\t\t\n\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tfor (font in Font.enumerateFonts ()) {\n\n\t\t\t\t\tif (font.fontName == format.font) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!found) {\n\t\t\t// perform inexact font match\n\t\t\t// enables shared font class names to match human-friendly names\n\n\t\t\tvar alpha = ~/[^a-zA-Z]+/g;\n\t\t\tvar sanitizedSymbolFontName = alpha.replace (symbol.fontName, \"\").toLowerCase ();\n\t\t\t\n\t\t\tfor (font in Font.enumerateFonts ()) {\n\n\t\t\t\tif (alpha.replace (font.fontName, \"\").substr (0, symbol.fontName.length).toLowerCase() == sanitizedSymbolFontName) {\n\t\t\t\t\t\n\t\t\t\t\tformat.font = font.fontName;\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (found) {\n\t\t\t\n\t\t\tembedFonts = true;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\ttrace (\"Could not find required font \\\"\" + format.font + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\tif (symbol.align != null) {\n\t\t\t\n\t\t\tif (symbol.align == \"center\") format.align = TextFormatAlign.CENTER;\n\t\t\telse if (symbol.align == \"right\") format.align = TextFormatAlign.RIGHT;\n\t\t\telse if (symbol.align == \"justify\") format.align = TextFormatAlign.JUSTIFY;\n\t\t\t\n\t\t\tformat.leftMargin = Std.int (symbol.leftMargin / 20);\n\t\t\tformat.rightMargin = Std.int (symbol.rightMargin / 20);\n\t\t\tformat.indent = Std.int (symbol.indent / 20);\n\t\t\tformat.leading = Std.int (symbol.leading / 20);\n\t\t\t\n\t\t}\n\t\t\n\t\tdefaultTextFormat = format;\n\t\t\n\t\tif (symbol.text != null) {\n\t\t\t\n\t\t\tif (symbol.html) {\n\t\t\t\t\n\t\t\t\thtmlText = symbol.text;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\ttext = symbol.text;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t//autoSize = (tag.autoSize) ? TextFieldAutoSize.LEFT : TextFieldAutoSize.NONE;\n\t\t\n\t}\n\n\t\n\tprivate inline function __getAdvance (position):Float {\n\t\t\n\t\t#if (js && html5)\n\t\treturn position;\n\t\t#else\n\t\treturn position.advance.x;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getBounds (rect:Rectangle, matrix:Matrix):Void {\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tvar bounds = Rectangle.__pool.get ();\n\t\tbounds.copyFrom (__textEngine.bounds);\n\t\tbounds.x += __offsetX;\n\t\tbounds.y += __offsetY;\n\t\tbounds.__transform (bounds, matrix);\n\t\t\n\t\trect.__expand (bounds.x, bounds.y, bounds.width, bounds.height);\n\t\t\n\t\tRectangle.__pool.release (bounds);\n\t\t\n\t}\n\t\n\t\n\tprivate function __getCharIndexOnDifferentLine (charIndex:Int, lineIndex:Int):Int {\n\t\t\n\t\tif (charIndex < 0 || charIndex > __text.length) return -1;\n\t\tif (lineIndex < 0 || lineIndex > __textEngine.numLines - 1) return -1;\n\t\t\n\t\tvar x:Null<Float> = null, y:Null<Float> = null;\n\t\t\n\t\tfor (group in __textEngine.layoutGroups) {\n\t\t\t\n\t\t\tif (charIndex >= group.startIndex && charIndex <= group.endIndex) {\n\t\t\t\t\n\t\t\t\tx = group.offsetX;\n\t\t\t\t\n\t\t\t\tfor (i in 0...(charIndex - group.startIndex)) {\n\t\t\t\t\t\n\t\t\t\t\tx += group.getAdvance (i);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (y != null) return __getPosition (x, y);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (group.lineIndex == lineIndex) {\n\t\t\t\t\n\t\t\t\ty = group.offsetY + group.height / 2;\n\t\t\t\t\n\t\t\t\tif (x != null) return __getPosition (x, y);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn -1;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __getCursor ():MouseCursor {\n\t\t\n\t\tvar group = __getGroup (mouseX, mouseY, true);\n\t\t\n\t\tif (group != null && group.format.url != \"\") {\n\t\t\t\n\t\t\treturn POINTER;\n\t\t\t\n\t\t} else if (__textEngine.selectable) {\n\t\t\t\n\t\t\treturn TEXT;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate function __getGroup (x:Float, y:Float, precise = false):TextLayoutGroup {\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tx += scrollH;\n\t\t\n\t\tfor (i in 0...scrollV - 1) {\n\t\t\t\n\t\t\ty += __textEngine.lineHeights[i];\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!precise && y > __textEngine.textHeight) y = __textEngine.textHeight;\n\t\t\n\t\tvar firstGroup = true;\n\t\tvar group, nextGroup;\n\t\t\n\t\tfor (i in 0...__textEngine.layoutGroups.length) {\n\t\t\t\n\t\t\tgroup = __textEngine.layoutGroups[i];\n\t\t\t\n\t\t\tif (i < __textEngine.layoutGroups.length - 1) {\n\t\t\t\t\n\t\t\t\tnextGroup = __textEngine.layoutGroups[i + 1];\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tnextGroup = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (firstGroup) {\n\t\t\t\t\n\t\t\t\tif (y < group.offsetY) y = group.offsetY;\n\t\t\t\tif (x < group.offsetX) x = group.offsetX;\n\t\t\t\tfirstGroup = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif ((y >= group.offsetY && y <= group.offsetY + group.height) || (!precise && nextGroup == null)) {\n\t\t\t\t\n\t\t\t\tif ((x >= group.offsetX && x <= group.offsetX + group.width) || (!precise && (nextGroup == null || nextGroup.lineIndex != group.lineIndex))) {\n\t\t\t\t\t\n\t\t\t\t\treturn group;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate function __getPosition (x:Float, y:Float):Int {\n\t\t\n\t\tvar group = __getGroup (x, y);\n\t\t\n\t\tif (group == null) {\n\t\t\t\n\t\t\treturn __text.length;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar advance = 0.0;\n\t\t\n\t\tfor (i in 0...group.positions.length) {\n\t\t\t\n\t\t\tadvance += group.getAdvance (i);\n\t\t\t\n\t\t\tif (x <= group.offsetX + advance) {\n\t\t\t\t\n\t\t\t\tif (x <= group.offsetX + (advance - group.getAdvance (i)) + (group.getAdvance (i) / 2)) {\n\t\t\t\t\t\n\t\t\t\t\treturn group.startIndex + i;\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn (group.startIndex + i < group.endIndex) ? group.startIndex + i + 1 : group.endIndex;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn group.endIndex;\n\t}\n\t\n\t\n\tprivate override function __hitTest (x:Float, y:Float, shapeFlag:Bool, stack:Array<DisplayObject>, interactiveOnly:Bool, hitObject:DisplayObject):Bool {\n\t\t\n\t\tif (!hitObject.visible || __isMask || (interactiveOnly && !mouseEnabled)) return false;\n\t\tif (mask != null && !mask.__hitTestMask (x, y)) return false;\n\t\t\n\t\t__getRenderTransform ();\n\t\t__updateLayout ();\n\t\t\n\t\tvar px = __renderTransform.__transformInverseX (x, y);\n\t\tvar py = __renderTransform.__transformInverseY (x, y);\n\t\t\n\t\tif (__textEngine.bounds.contains (px, py)) {\n\t\t\t\n\t\t\tif (stack != null) {\n\t\t\t\t\n\t\t\t\tstack.push (hitObject);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __hitTestMask (x:Float, y:Float):Bool {\n\t\t\n\t\t__getRenderTransform ();\n\t\t__updateLayout ();\n\t\t\n\t\tvar px = __renderTransform.__transformInverseX (x, y);\n\t\tvar py = __renderTransform.__transformInverseY (x, y);\n\t\t\n\t\tif (__textEngine.bounds.contains (px, py)) {\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCairo (renderSession:RenderSession):Void {\n\t\t\n\t\t#if lime_cairo\n\t\tCairoTextField.render (this, renderSession, __worldTransform);\n\t\tsuper.__renderCairo (renderSession);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderCanvas (renderSession:RenderSession):Void {\n\t\t\n\t\t// TODO: Better DOM workaround on cacheAsBitmap\n\t\t\n\t\t#if (js && html5 && dom)\n\t\tif (!__renderedOnCanvasWhileOnDOM) {\n\t\t\t\n\t\t\t__renderedOnCanvasWhileOnDOM = true;\n\t\t\t\n\t\t\tif (type == TextFieldType.INPUT) {\n\t\t\t\t\n\t\t\t\treplaceText (0, __text.length, __text);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (__isHTML) {\n\t\t\t\t\n\t\t\t\t__updateText (HTMLParser.parse (__text, __textFormat, __textEngine.textFormatRanges));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__layoutDirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tCanvasTextField.render (this, renderSession, __worldTransform);\n\t\t\n\t\tif (__textEngine.antiAliasType == ADVANCED && __textEngine.gridFitType == PIXEL) {\n\t\t\t\n\t\t\tvar smoothingEnabled = untyped (renderSession.context).imageSmoothingEnabled;\n\t\t\t\n\t\t\tif (smoothingEnabled) {\n\t\t\t\t\n\t\t\t\tuntyped (renderSession.context).mozImageSmoothingEnabled = false;\n\t\t\t\t//untyped (renderSession.context).webkitImageSmoothingEnabled = false;\n\t\t\t\tuntyped (renderSession.context).msImageSmoothingEnabled = false;\n\t\t\t\tuntyped (renderSession.context).imageSmoothingEnabled = false;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tsuper.__renderCanvas (renderSession);\n\t\t\t\n\t\t\tif (smoothingEnabled) {\n\t\t\t\t\n\t\t\t\tuntyped (renderSession.context).mozImageSmoothingEnabled = true;\n\t\t\t\t//untyped (renderSession.context).webkitImageSmoothingEnabled = true;\n\t\t\t\tuntyped (renderSession.context).msImageSmoothingEnabled = true;\n\t\t\t\tuntyped (renderSession.context).imageSmoothingEnabled = true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tsuper.__renderCanvas (renderSession);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderDOM (renderSession:RenderSession):Void {\n\t\t\n\t\t#if dom\n\t\t__updateCacheBitmap (renderSession, __forceCachedBitmapUpdate || !__worldColorTransform.__isDefault ());\n\t\t__forceCachedBitmapUpdate = false;\n\t\tif (__cacheBitmap != null && !__cacheBitmapRender) {\n\t\t\t\n\t\t\t__renderDOMClear (renderSession);\n\t\t\t__cacheBitmap.stage = stage;\n\t\t\t\n\t\t\tDOMBitmap.render (__cacheBitmap, renderSession);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tif (__renderedOnCanvasWhileOnDOM) {\n\t\t\t\t\n\t\t\t\t__renderedOnCanvasWhileOnDOM = false;\n\t\t\t\t\n\t\t\t\tif (__isHTML && __rawHtmlText != null) {\n\t\t\t\t\t\n\t\t\t\t\t__updateText (__rawHtmlText);\n\t\t\t\t\t__dirty = true;\n\t\t\t\t\t__layoutDirty = true;\n\t\t\t\t\t__setRenderDirty ();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tDOMTextField.render (this, renderSession);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderDOMClear (renderSession:RenderSession):Void {\n\t\t\n\t\t#if dom\n\t\tDOMTextField.clear (this, renderSession);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderGL (renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tCanvasTextField.render (this, renderSession, __worldTransform);\n\t\t#elseif lime_cairo\n\t\tCairoTextField.render (this, renderSession, __worldTransform);\n\t\t#end\n\t\t\n\t\tsuper.__renderGL (renderSession);\n\t\t\n\t}\n\t\n\t\n\tprivate override function __renderGLMask (renderSession:RenderSession):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tCanvasTextField.render (this, renderSession, __worldTransform);\n\t\t#elseif lime_cairo\n\t\tCairoTextField.render (this, renderSession, __worldTransform);\n\t\t#end\n\t\t\n\t\tsuper.__renderGLMask (renderSession);\n\t\t\n\t}\n\t\n\t\n\tprivate function __startCursorTimer ():Void {\n\t\t\n\t\t__cursorTimer = Timer.delay (__startCursorTimer, 600);\n\t\t__showCursor = !__showCursor;\n\t\t__dirty = true;\n\t\t__setRenderDirty ();\n\t\t\n\t}\n\t\n\t\n\tprivate function __startTextInput ():Void {\n\t\t\n\t\tif (__caretIndex < 0) {\n\t\t\t\n\t\t\t__caretIndex = __text.length;\n\t\t\t__selectionIndex = __caretIndex;\n\t\t\t\n\t\t}\n\t\t\n\t\tvar enableInput = #if dom __renderedOnCanvasWhileOnDOM #else true #end;\n\t\t\n\t\tif (enableInput) {\n\t\t\t\n\t\t\t__enableInput ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\n\t\n\tprivate function __stopCursorTimer ():Void {\n\t\t\n\t\tif (__cursorTimer != null) {\n\t\t\t\n\t\t\t__cursorTimer.stop ();\n\t\t\t__cursorTimer = null;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__showCursor) {\n\t\t\t\n\t\t\t__showCursor = false;\n\t\t\t__dirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\n\t}\n\t\n\t\n\tprivate function __stopTextInput ():Void {\n\t\t\n\t\tvar disableInput: Bool = #if dom __renderedOnCanvasWhileOnDOM #else true #end;\n\t\t\n\t\tif (disableInput) {\n\t\t\t\n\t\t\t__disableInput ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __updateLayout ():Void {\n\t\t\n\t\tif (__layoutDirty) {\n\t\t\t\n\t\t\tvar cacheWidth = __textEngine.width;\n\t\t\tvar cacheHeight = __textEngine.height;\n\t\t\t\n\t\t\t__textEngine.update ();\n\t\t\t\n\t\t\tif (__textEngine.autoSize != NONE) {\n\t\t\t\t\n\t\t\t\tif (__textEngine.width != cacheWidth) {\n\t\t\t\t\t\n\t\t\t\t\tswitch (__textEngine.autoSize) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase RIGHT:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tx += cacheWidth - __textEngine.width;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase CENTER:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tx += (cacheWidth - __textEngine.width) / 2;\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__textEngine.getBounds ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__layoutDirty = false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __updateScrollH ():Void {\n\t\t\n\t\tif (!multiline && type == INPUT) {\n\t\t\t\n\t\t\t__layoutDirty = true;\n\t\t\t__updateLayout ();\n\t\t\t\n\t\t\tvar offsetX = __textEngine.textWidth - __textEngine.width + 4;\n\t\t\t\n\t\t\tif (offsetX > 0) {\n\t\t\t\t\n\t\t\t\tscrollH = Math.ceil (offsetX);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tscrollH = 0;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function __updateText (value:String):Void {\n\t\t\n\t\t#if dom\n\t\tif (__renderedOnCanvasWhileOnDOM) {\n\t\t\t\n\t\t\t__forceCachedBitmapUpdate = __text != value;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t// applies maxChars and restrict on text\n\t\t\n\t\t__textEngine.text = value;\n\t\t__text = __textEngine.text;\n\t\t\n\t\tif (__text.length < __caretIndex) {\n\t\t\t\n\t\t\t__selectionIndex = __caretIndex = __text.length;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (!__displayAsPassword #if (js && html5 && dom) || !__renderedOnCanvasWhileOnDOM #end) {\n\t\t\t\n\t\t\t__textEngine.text = __text;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar length = text.length;\n\t\t\tvar mask = \"\";\n\t\t\t\n\t\t\tfor (i in 0...length) {\n\t\t\t\t\n\t\t\t\tmask += \"*\";\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__textEngine.text = mask;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic override function __updateTransforms (overrideTransform:Matrix = null):Void {\n\t\t\n\t\tsuper.__updateTransforms (overrideTransform);\n\t\t__renderTransform.__translateTransformed (__offsetX, __offsetY);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Getters & Setters\n\t\n\t\n\t\n\t\n\tprivate function get_antiAliasType ():AntiAliasType {\n\t\t\n\t\treturn __textEngine.antiAliasType;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_antiAliasType (value:AntiAliasType):AntiAliasType {\n\t\t\n\t\tif (value != __textEngine.antiAliasType) {\n\t\t\t\n\t\t\t//__dirty = true;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.antiAliasType = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_autoSize ():TextFieldAutoSize {\n\t\t\n\t\treturn __textEngine.autoSize;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_autoSize (value:TextFieldAutoSize):TextFieldAutoSize {\n\t\t\n\t\tif (value != __textEngine.autoSize) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__layoutDirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.autoSize = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_background ():Bool {\n\t\t\n\t\treturn __textEngine.background;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_background (value:Bool):Bool {\n\t\t\n\t\tif (value != __textEngine.background) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.background = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_backgroundColor ():Int {\n\t\t\n\t\treturn __textEngine.backgroundColor;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_backgroundColor (value:Int):Int {\n\t\t\n\t\tif (value != __textEngine.backgroundColor) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.backgroundColor = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_border ():Bool {\n\t\t\n\t\treturn __textEngine.border;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_border (value:Bool):Bool {\n\t\t\n\t\tif (value != __textEngine.border) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.border = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_borderColor ():Int {\n\t\t\n\t\treturn __textEngine.borderColor;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_borderColor (value:Int):Int {\n\t\t\n\t\tif (value != __textEngine.borderColor) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.borderColor = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_bottomScrollV ():Int {\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\treturn __textEngine.bottomScrollV;\n\t\t\n\t}\n\t\n\t\n\tprivate override function get_cacheAsBitmap ():Bool {\n\t\t\n\t\t// HACK\n\t\tif (__filters != null && __filters.length == 1 && Std.is (__filters[0], GlowFilter)) return false;\n\t\treturn super.get_cacheAsBitmap ();\n\t\t\n\t}\n\t\n\t\n\tprivate function get_caretIndex ():Int {\n\t\t\n\t\treturn __caretIndex;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_defaultTextFormat ():TextFormat {\n\t\t\n\t\treturn __textFormat.clone ();\n\t\t\n\t}\n\t\n\t\n\tprivate function set_defaultTextFormat (value:TextFormat):TextFormat {\n\t\t\n\t\t__textFormat.__merge (value);\n\t\t\n\t\t__layoutDirty = true;\n\t\t__dirty = true;\n\t\t__setRenderDirty ();\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_displayAsPassword ():Bool {\n\t\t\n\t\treturn __displayAsPassword;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_displayAsPassword (value:Bool):Bool {\n\t\t\n\t\tif (value != __displayAsPassword) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__layoutDirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t\t__displayAsPassword = value;\n\t\t\t__updateText (__text);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_embedFonts ():Bool {\n\t\t\n\t\treturn __textEngine.embedFonts;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_embedFonts (value:Bool):Bool {\n\t\t\n\t\t//if (value != __textEngine.embedFonts) {\n\t\t\t//\n\t\t\t//__dirty = true;\n\t\t\t//__layoutDirty = true;\n\t\t\t//\n\t\t//}\n\t\t\n\t\treturn __textEngine.embedFonts = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_gridFitType ():GridFitType {\n\t\t\n\t\treturn __textEngine.gridFitType;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_gridFitType (value:GridFitType):GridFitType {\n\t\t\n\t\t//if (value != __textEngine.gridFitType) {\n\t\t\t//\n\t\t\t//__dirty = true;\n\t\t\t//__layoutDirty = true;\n\t\t\t//\n\t\t//}\n\t\t\n\t\treturn __textEngine.gridFitType = value;\n\t\t\n\t}\n\t\n\t\n\tprivate override function get_height ():Float {\n\t\t\n\t\t__updateLayout ();\n\t\treturn __textEngine.height * Math.abs (scaleY);\n\t\t\n\t}\n\t\n\t\n\tprivate override function set_height (value:Float):Float {\n\t\t\n\t\tif (value != __textEngine.height) {\n\t\t\t\n\t\t\t__setTransformDirty ();\n\t\t\t__dirty = true;\n\t\t\t__layoutDirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t\t__textEngine.height = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.height * Math.abs (scaleY);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_htmlText ():String {\n\t\t\n\t\treturn __text;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_htmlText (value:String):String {\n\t\t\n\t\tif (!__isHTML || __text != value) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__layoutDirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\t__isHTML = true;\n\t\t\n\t\t#if (js && html5 && dom)\n\t\t__rawHtmlText = value;\n\t\t#end\n\t\t\n\t\tvalue = HTMLParser.parse(value, __textFormat, __textEngine.textFormatRanges);\n\n\t\t#if (js && html5 && dom)\n\n\t\tif (__textEngine.textFormatRanges.length > 1) {\n\n\t\t\t__textEngine.textFormatRanges.splice (1, __textEngine.textFormatRanges.length - 1);\n\n\t\t}\n\n\t\tvar range = __textEngine.textFormatRanges[0];\n\t\trange.format = __textFormat;\n\t\trange.start = 0;\n\n\t\tif (__renderedOnCanvasWhileOnDOM) {\n\n\t\t\trange.end = value.length;\n\t\t\t__updateText (value);\n\n\t\t} else {\n\n\t\t\trange.end = __rawHtmlText.length;\n\t\t\t__updateText (__rawHtmlText);\n\n\t\t}\n\t\t#else\n\t\t__updateText (value);\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_length ():Int {\n\t\t\n\t\tif (__text != null) {\n\t\t\t\n\t\t\treturn __text.length;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_maxChars ():Int {\n\t\t\n\t\treturn __textEngine.maxChars;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_maxChars (value:Int):Int {\n\t\t\n\t\tif (value != __textEngine.maxChars) {\n\t\t\t\n\t\t\t__textEngine.maxChars = value;\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__layoutDirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_maxScrollH ():Int { \n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\treturn __textEngine.maxScrollH;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_maxScrollV ():Int { \n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\treturn __textEngine.maxScrollV;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_mouseWheelEnabled ():Bool {\n\t\t\n\t\treturn __mouseWheelEnabled;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_mouseWheelEnabled (value:Bool):Bool {\n\t\t\n\t\treturn __mouseWheelEnabled = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_multiline ():Bool {\n\t\t\n\t\treturn __textEngine.multiline;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_multiline (value:Bool):Bool {\n\t\t\n\t\tif (value != __textEngine.multiline) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__layoutDirty = true;\n\t\t\t__updateText (__text);\n\t\t\t__updateScrollH ();\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.multiline = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_numLines ():Int {\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\treturn __textEngine.numLines;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_restrict ():String {\n\t\t\n\t\treturn __textEngine.restrict;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_restrict (value:String):String {\n\t\t\n\t\tif (__textEngine.restrict != value) {\n\t\t\t\n\t\t\t__textEngine.restrict = value;\n\t\t\t__updateText (__text);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_scrollH ():Int {\n\t\t\n\t\treturn __textEngine.scrollH;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_scrollH (value:Int):Int {\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tif (value > __textEngine.maxScrollH) value = __textEngine.maxScrollH;\n\t\tif (value < 0) value = 0;\n\t\t\n\t\tif (value != __textEngine.scrollH) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\tdispatchEvent (new Event (Event.SCROLL));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.scrollH = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_scrollV ():Int {\n\t\t\n\t\treturn __textEngine.scrollV;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_scrollV (value:Int):Int {\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\tif (value > __textEngine.maxScrollV) value = __textEngine.maxScrollV;\n\t\tif (value < 1) value = 1;\n\t\t\n\t\tif (value != __textEngine.scrollV) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\tdispatchEvent(new Event(Event.SCROLL));\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.scrollV = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_selectable ():Bool {\n\t\t\n\t\treturn __textEngine.selectable;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_selectable (value:Bool):Bool {\n\t\t\n\t\tif (value != __textEngine.selectable && type == INPUT) {\n\t\t\t\n\t\t\tif (stage != null && stage.focus == this) {\n\t\t\t\t\n\t\t\t\t__startTextInput ();\n\t\t\t\t\n\t\t\t} else if (!value) {\n\t\t\t\t\n\t\t\t\t__stopTextInput ();\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.selectable = value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_selectionBeginIndex ():Int {\n\t\t\n\t\treturn Std.int (Math.min (__caretIndex, __selectionIndex));\n\t\t\n\t}\n\t\n\t\n\tprivate function get_selectionEndIndex ():Int {\n\t\t\n\t\treturn Std.int (Math.max (__caretIndex, __selectionIndex));\n\t\t\n\t}\n\t\n\t\n\tprivate function get_sharpness ():Float {\n\t\t\n\t\treturn __textEngine.sharpness;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_sharpness (value:Float):Float {\n\t\t\n\t\tif (value != __textEngine.sharpness) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.sharpness = value;\n\t\t\n\t}\n\t\n\t\n\tprivate override function get_tabEnabled ():Bool {\n\t\t\n\t\treturn (__tabEnabled == null ? __textEngine.type == INPUT : __tabEnabled);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_text ():String {\n\t\t\n\t\treturn __text;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_text (value:String):String {\n\t\t\n\t\tif (__isHTML || __text != value) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__layoutDirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__textEngine.textFormatRanges.length > 1) {\n\t\t\t\n\t\t\t__textEngine.textFormatRanges.splice (1, __textEngine.textFormatRanges.length - 1);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar utfValue:UTF8String = value;\n\t\tvar range = __textEngine.textFormatRanges[0];\n\t\trange.format = __textFormat;\n\t\trange.start = 0;\n\t\trange.end = utfValue.length;\n\t\t\n\t\t__isHTML = false;\n\t\t\n\t\t__updateText (value);\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_textColor ():Int { \n\t\t\n\t\treturn __textFormat.color;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_textColor (value:Int):Int {\n\t\t\n\t\tif (value != __textFormat.color) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (range in __textEngine.textFormatRanges) {\n\t\t\t\n\t\t\trange.format.color = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textFormat.color = value;\n\t\t\n\t}\n\t\n\tprivate function get_textWidth ():Float {\n\t\t\n\t\t__updateLayout ();\n\t\treturn __textEngine.textWidth;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_textHeight ():Float {\n\t\t\n\t\t__updateLayout ();\n\t\treturn __textEngine.textHeight;\n\t\t\n\t}\n\t\n\t\n\tprivate function get_type ():TextFieldType {\n\t\t\n\t\treturn __textEngine.type;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_type (value:TextFieldType):TextFieldType {\n\t\t\n\t\tif (value != __textEngine.type) {\n\t\t\t\n\t\t\tif (value == TextFieldType.INPUT) {\n\t\t\t\t\n\t\t\t\taddEventListener (Event.ADDED_TO_STAGE, this_onAddedToStage);\n\t\t\t\t\n\t\t\t\tthis_onFocusIn (null);\n\t\t\t\t__textEngine.__useIntAdvances = true;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tremoveEventListener (Event.ADDED_TO_STAGE, this_onAddedToStage);\n\t\t\t\t\n\t\t\t\t__stopTextInput ();\n\t\t\t\t__textEngine.__useIntAdvances = null;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.type = value;\n\t\t\n\t}\n\t\n\t\n\toverride private function get_width ():Float {\n\t\t\n\t\t__updateLayout ();\n\t\treturn __textEngine.width * Math.abs (__scaleX);\n\t\t\n\t}\n\t\n\t\n\toverride private function set_width (value:Float):Float {\n\t\t\n\t\tif (value != __textEngine.width) {\n\t\t\t\n\t\t\t__setTransformDirty ();\n\t\t\t__dirty = true;\n\t\t\t__layoutDirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t\t__textEngine.width = value;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.width * Math.abs (__scaleX);\n\t\t\n\t}\n\t\n\t\n\tprivate function get_wordWrap ():Bool {\n\t\t\n\t\treturn __textEngine.wordWrap;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_wordWrap (value:Bool):Bool {\n\t\t\n\t\tif (value != __textEngine.wordWrap) {\n\t\t\t\n\t\t\t__dirty = true;\n\t\t\t__layoutDirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __textEngine.wordWrap = value;\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate function stage_onMouseMove (event:MouseEvent) {\n\t\t\n\t\tif (stage == null) return;\n\t\t\n\t\tif (__textEngine.selectable && __selectionIndex >= 0) {\n\t\t\t\n\t\t\t__updateLayout ();\n\t\t\t\n\t\t\tvar position = __getPosition (mouseX + scrollH, mouseY);\n\t\t\t\n\t\t\tif (position != __caretIndex) {\n\t\t\t\t\n\t\t\t\t__caretIndex = position;\n\t\t\t\t#if !dom\n\t\t\t\t__dirty = true;\n\t\t\t\t__setRenderDirty ();\n\t\t\t\t#else\n\t\t\t\tif (__renderedOnCanvasWhileOnDOM) {\n\t\t\t\t\t__forceCachedBitmapUpdate = true;\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function stage_onMouseUp (event:MouseEvent):Void {\n\t\t\n\t\tif (stage == null) return;\n\t\t\n\t\tstage.removeEventListener (MouseEvent.MOUSE_MOVE, stage_onMouseMove);\n\t\tstage.removeEventListener (MouseEvent.MOUSE_UP, stage_onMouseUp);\n\t\t\n\t\tif (stage.focus == this) {\n\t\t\t\n\t\t\t__getWorldTransform ();\n\t\t\t__updateLayout ();\n\t\t\t\n\t\t\tvar px = __worldTransform.__transformInverseX (x, y);\n\t\t\tvar py = __worldTransform.__transformInverseY (x, y);\n\t\t\t\n\t\t\tvar upPos:Int = __getPosition (mouseX + scrollH, mouseY);\n\t\t\tvar leftPos:Int;\n\t\t\tvar rightPos:Int;\n\t\t\t\n\t\t\tleftPos = Std.int (Math.min (__selectionIndex, upPos));\n\t\t\trightPos = Std.int (Math.max (__selectionIndex, upPos));\n\t\t\t\n\t\t\t__selectionIndex = leftPos;\n\t\t\t__caretIndex = rightPos;\n\t\t\t\n\t\t\tif (__inputEnabled) {\n\t\t\t\t\n\t\t\t\tthis_onFocusIn (null);\n\t\t\t\t\n\t\t\t\t__stopCursorTimer ();\n\t\t\t\t__startCursorTimer ();\n\t\t\t\t\n\t\t\t\t#if dom\n\t\t\t\tif (__renderedOnCanvasWhileOnDOM) {\n\t\t\t\t\t__forceCachedBitmapUpdate = true;\n\t\t\t\t}\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function this_onAddedToStage (event:Event):Void {\n\t\t\n\t\tthis_onFocusIn (null);\n\t\t\n\t}\n\t\n\t\n\tprivate function this_onFocusIn (event:FocusEvent):Void {\n\t\t\n\t\tif (selectable && type == INPUT && stage != null && stage.focus == this) {\n\t\t\t\n\t\t\t__startTextInput ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function this_onFocusOut (event:FocusEvent):Void {\n\t\t\n\t\t__stopCursorTimer ();\n\t\t\n\t\t// TODO: Better system\n\t\t\n\t\tif (event.relatedObject == null || !Std.is (event.relatedObject, TextField)) {\n\t\t\t\n\t\t\t__stopTextInput ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tstage.window.onTextInput.remove (window_onTextInput);\n\t\t\tstage.window.onKeyDown.remove (window_onKeyDown);\n\t\t\t__inputEnabled = false;\n\t\t\t\n\t\t}\n\t\t\n\t\tif (__selectionIndex != __caretIndex) {\n\t\t\t\n\t\t\t__selectionIndex = __caretIndex;\n\t\t\t__dirty = true;\n\t\t\t__setRenderDirty ();\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function this_onKeyDown (event:KeyboardEvent):Void {\n\t\t\n\t\tif (selectable && type != INPUT && event.keyCode == Keyboard.C && (event.commandKey || event.ctrlKey)) {\n\t\t\t\n\t\t\tif (__caretIndex != __selectionIndex) {\n\t\t\t\t\n\t\t\t\tClipboard.text = __text.substring (__caretIndex, __selectionIndex);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function this_onMouseDown (event:MouseEvent):Void {\n\t\t\n\t\tif (!selectable) return;\n\t\t\n\t\t__updateLayout ();\n\t\t\n\t\t__caretIndex = __getPosition (mouseX + scrollH, mouseY);\n\t\t__selectionIndex = __caretIndex;\n\t\t#if !dom\n\t\t__dirty = true;\n\t\t__setRenderDirty ();\n\t\t#end\n\t\t\n\t\tstage.addEventListener (MouseEvent.MOUSE_MOVE, stage_onMouseMove);\n\t\tstage.addEventListener (MouseEvent.MOUSE_UP, stage_onMouseUp);\n\t\t\n\t}\n\t\n\t\n\tprivate function window_onKeyDown (key:KeyCode, modifier:KeyModifier):Void {\n\t\t\n\t\tswitch (key) {\n\t\t\t\n\t\t\tcase RETURN, NUMPAD_ENTER:\n\t\t\t\t\n\t\t\t\tif (__textEngine.multiline) {\n\t\t\t\t\t\n\t\t\t\t\treplaceSelectedText (\"\\n\");\n\t\t\t\t\tdispatchEvent (new Event (Event.CHANGE, true));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase BACKSPACE:\n\t\t\t\t\n\t\t\t\tif (__selectionIndex == __caretIndex && __caretIndex > 0) {\n\t\t\t\t\t\n\t\t\t\t\t__selectionIndex = __caretIndex - 1;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (__selectionIndex != __caretIndex) {\n\t\t\t\t\t\n\t\t\t\t\treplaceSelectedText (\"\");\n\t\t\t\t\t__selectionIndex = __caretIndex;\n\t\t\t\t\t\n\t\t\t\t\tdispatchEvent (new Event (Event.CHANGE, true));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase DELETE:\n\t\t\t\t\n\t\t\t\tif (__selectionIndex == __caretIndex && __caretIndex < __text.length) {\n\t\t\t\t\t\n\t\t\t\t\t__selectionIndex = __caretIndex + 1;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (__selectionIndex != __caretIndex) {\n\t\t\t\t\t\n\t\t\t\t\treplaceSelectedText (\"\");\n\t\t\t\t\t__selectionIndex = __caretIndex;\n\t\t\t\t\t\n\t\t\t\t\tdispatchEvent (new Event (Event.CHANGE, true));\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase LEFT:\n\t\t\t\t\n\t\t\t\tif (modifier.metaKey) {\n\t\t\t\t\t\n\t\t\t\t\t__caretBeginningOfLine ();\n\t\t\t\t\t\n\t\t\t\t\tif (!modifier.shiftKey) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__selectionIndex = __caretIndex;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else if (modifier.shiftKey) {\n\t\t\t\t\t\n\t\t\t\t\t__caretPreviousCharacter ();\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (__selectionIndex == __caretIndex) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__caretPreviousCharacter ();\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__caretIndex = Std.int (Math.min (__caretIndex, __selectionIndex));\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t__selectionIndex = __caretIndex;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__stopCursorTimer ();\n\t\t\t\t__startCursorTimer ();\n\t\t\t\n\t\t\tcase RIGHT:\n\t\t\t\t\n\t\t\t\tif (modifier.metaKey) {\n\t\t\t\t\t\n\t\t\t\t\t__caretEndOfLine ();\n\t\t\t\t\t\n\t\t\t\t\tif (!modifier.shiftKey) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__selectionIndex = __caretIndex;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else if (modifier.shiftKey) {\n\t\t\t\t\t\n\t\t\t\t\t__caretNextCharacter ();\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (__selectionIndex == __caretIndex) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__caretNextCharacter ();\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__caretIndex = Std.int (Math.max (__caretIndex, __selectionIndex));\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t__selectionIndex = __caretIndex;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__stopCursorTimer ();\n\t\t\t\t__startCursorTimer ();\n\t\t\t\n\t\t\tcase DOWN:\n\t\t\t\t\n\t\t\t\tif (modifier.shiftKey) {\n\t\t\t\t\t\n\t\t\t\t\t__caretNextLine ();\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (__selectionIndex == __caretIndex) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__caretNextLine ();\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar lineIndex = getLineIndexOfChar (Std.int (Math.max (__caretIndex, __selectionIndex)));\n\t\t\t\t\t\t__caretNextLine (lineIndex, Std.int (Math.min (__caretIndex, __selectionIndex)));\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t__selectionIndex = __caretIndex;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__stopCursorTimer ();\n\t\t\t\t__startCursorTimer ();\n\t\t\t\n\t\t\tcase UP:\n\t\t\t\t\n\t\t\t\tif (modifier.shiftKey) {\n\t\t\t\t\t\n\t\t\t\t\t__caretPreviousLine ();\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif (__selectionIndex == __caretIndex) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t__caretPreviousLine ();\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar lineIndex = getLineIndexOfChar (Std.int (Math.min (__caretIndex, __selectionIndex)));\n\t\t\t\t\t\t__caretPreviousLine (lineIndex, Std.int (Math.min (__caretIndex, __selectionIndex)));\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t__selectionIndex = __caretIndex;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t__stopCursorTimer ();\n\t\t\t\t__startCursorTimer ();\n\t\t\t\n\t\t\tcase HOME:\n\t\t\t\t\n\t\t\t\t__caretBeginningOfLine ();\n\t\t\t\t__stopCursorTimer ();\n\t\t\t\t__startCursorTimer ();\n\t\t\t\n\t\t\tcase END:\n\t\t\t\t\n\t\t\t\t__caretEndOfLine ();\n\t\t\t\t__stopCursorTimer ();\n\t\t\t\t__startCursorTimer ();\n\t\t\t\n\t\t\tcase C:\n\t\t\t\t\n\t\t\t\tif (#if mac modifier.metaKey #elseif js modifier.metaKey || modifier.ctrlKey #else modifier.ctrlKey #end) {\n\t\t\t\t\t\n\t\t\t\t\tif (__caretIndex != __selectionIndex) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tClipboard.text = __text.substring (__caretIndex, __selectionIndex);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tcase X:\n\t\t\t\t\n\t\t\t\tif (#if mac modifier.metaKey #elseif js modifier.metaKey || modifier.ctrlKey #else modifier.ctrlKey #end) {\n\t\t\t\t\t\n\t\t\t\t\tif (__caretIndex != __selectionIndex) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tClipboard.text = __text.substring (__caretIndex, __selectionIndex);\n\t\t\t\t\t\t\n\t\t\t\t\t\treplaceSelectedText (\"\");\n\t\t\t\t\t\tdispatchEvent (new Event (Event.CHANGE, true));\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\t#if !js\n\t\t\tcase V:\n\t\t\t\t\n\t\t\t\tif (#if mac modifier.metaKey #else modifier.ctrlKey #end) {\n\t\t\t\t\t\n\t\t\t\t\tvar text = Clipboard.text;\n\t\t\t\t\t\n\t\t\t\t\tif (text != null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treplaceSelectedText (text);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\treplaceSelectedText (\"\");\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdispatchEvent (new Event (Event.CHANGE, true));\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\t__textEngine.textFormatRanges[__textEngine.textFormatRanges.length - 1].end = __text.length;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t#end\n\t\t\t\n\t\t\tcase A:\n\t\t\t\t\n\t\t\t\tif (#if mac modifier.metaKey #elseif js modifier.metaKey || modifier.ctrlKey #else modifier.ctrlKey #end) {\n\t\t\t\t\t\n\t\t\t\t\t__caretIndex = __text.length;\n\t\t\t\t\t__selectionIndex = 0;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate function window_onTextInput (value:String):Void {\n\t\t\n\t\treplaceSelectedText (value);\n\t\t\n\t\tdispatchEvent (new Event (Event.CHANGE, true));\n\t\t\n\t}\n\t\n\t\n}\n","package openfl.text;\n\n\n@:enum abstract TextFieldAutoSize(Null<Int>) {\n\t\n\tpublic var CENTER = 0;\n\tpublic var LEFT = 1;\n\tpublic var NONE = 2;\n\tpublic var RIGHT = 3;\n\t\n\t@:from private static function fromString (value:String):TextFieldAutoSize {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"center\": CENTER;\n\t\t\tcase \"left\": LEFT;\n\t\t\tcase \"none\": NONE;\n\t\t\tcase \"right\": RIGHT;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase TextFieldAutoSize.CENTER: \"center\";\n\t\t\tcase TextFieldAutoSize.LEFT: \"left\";\n\t\t\tcase TextFieldAutoSize.NONE: \"none\";\n\t\t\tcase TextFieldAutoSize.RIGHT: \"right\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.text;\n\n\n@:enum abstract TextFieldType(Null<Int>) {\n\t\n\tpublic var DYNAMIC = 0;\n\tpublic var INPUT = 1;\n\t\n\t@:from private static function fromString (value:String):TextFieldType {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"dynamic\": DYNAMIC;\n\t\t\tcase \"input\": INPUT;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase TextFieldType.DYNAMIC: \"dynamic\";\n\t\t\tcase TextFieldType.INPUT: \"input\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.text;\n\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\nclass TextFormat {\n\t\n\t\n\tpublic var align:TextFormatAlign;\n\tpublic var blockIndent:Null<Int>;\n\tpublic var bold:Null<Bool>;\n\tpublic var bullet:Null<Bool>;\n\tpublic var color:Null<Int>;\n\tpublic var font:String;\n\tpublic var indent:Null<Int>;\n\tpublic var italic:Null<Bool>;\n\tpublic var kerning:Null<Bool>;\n\tpublic var leading:Null<Int>;\n\tpublic var leftMargin:Null<Int>;\n\tpublic var letterSpacing:Null<Float>;\n\tpublic var rightMargin:Null<Int>;\n\tpublic var size:Null<Int>;\n\tpublic var tabStops:Array<Int>;\n\tpublic var target:String;\n\tpublic var underline:Null<Bool>;\n\tpublic var url:String;\n\t\n\tprivate var __ascent:Null<Float>;\n\tprivate var __descent:Null<Float>;\n\t\n\t\n\tpublic function new (font:String = null, size:Null<Int> = null, color:Null<Int> = null, bold:Null<Bool> = null, italic:Null<Bool> = null, underline:Null<Bool> = null, url:String = null, target:String = null, align:TextFormatAlign = null, leftMargin:Null<Int> = null, rightMargin:Null<Int> = null, indent:Null<Int> = null, leading:Null<Int> = null) {\n\t\t\n\t\tthis.font = font;\n\t\tthis.size = size;\n\t\tthis.color = color;\n\t\tthis.bold = bold;\n\t\tthis.italic = italic;\n\t\tthis.underline = underline;\n\t\tthis.url = url;\n\t\tthis.target = target;\n\t\tthis.align = align;\n\t\tthis.leftMargin = leftMargin;\n\t\tthis.rightMargin = rightMargin;\n\t\tthis.indent = indent;\n\t\tthis.leading = leading;\n\t\t\n\t}\n\t\n\t\n\tpublic function clone ():TextFormat {\n\t\t\n\t\tvar newFormat = new TextFormat (font, size, color, bold, italic, underline, url, target);\n\t\t\n\t\tnewFormat.align = align;\n\t\tnewFormat.leftMargin = leftMargin;\n\t\tnewFormat.rightMargin = rightMargin;\n\t\tnewFormat.indent = indent;\n\t\tnewFormat.leading = leading;\n\t\t\n\t\tnewFormat.blockIndent = blockIndent;\n\t\tnewFormat.bullet = bullet;\n\t\tnewFormat.kerning = kerning;\n\t\tnewFormat.letterSpacing = letterSpacing;\n\t\tnewFormat.tabStops = tabStops;\n\t\t\n\t\tnewFormat.__ascent = __ascent;\n\t\tnewFormat.__descent = __descent;\n\t\t\n\t\treturn newFormat;\n\t\t\n\t}\n\t\n\t\n\tprivate function __merge (format:TextFormat):Void {\n\t\t\n\t\tif (format.font != null) font = format.font;\n\t\tif (format.size != null) size = format.size;\n\t\tif (format.color != null) color = format.color;\n\t\tif (format.bold != null) bold = format.bold;\n\t\tif (format.italic != null) italic = format.italic;\n\t\tif (format.underline != null) underline = format.underline;\n\t\t\n\t\tif (format.url != null && format.url != \"\") url = format.url;\n\t\tif (format.url == \"\" && url == null) url = \"\";\n\t\t\n\t\tif (format.target != null) target = format.target;\n\t\tif (format.align != null) align = format.align;\n\t\tif (format.leftMargin != null) leftMargin = format.leftMargin;\n\t\tif (format.rightMargin != null) rightMargin = format.rightMargin;\n\t\tif (format.indent != null) indent = format.indent;\n\t\tif (format.leading != null) leading = format.leading;\n\t\tif (format.blockIndent != null) blockIndent = format.blockIndent;\n\t\tif (format.bullet != null) bullet = format.bullet;\n\t\tif (format.kerning != null) kerning = format.kerning;\n\t\tif (format.letterSpacing != null) letterSpacing = format.letterSpacing;\n\t\tif (format.tabStops != null) tabStops = format.tabStops;\n\t\t\n\t\tif (format.__ascent != null) __ascent = format.__ascent;\n\t\tif (format.__descent != null) __descent = format.__descent;\n\t\t\n\t}\n\t\n\t\n}","package openfl.text;\n\n\n@:enum abstract TextFormatAlign(Null<Int>) {\n\t\n\tpublic var CENTER = 0;\n\tpublic var END = 1;\n\tpublic var JUSTIFY = 2;\n\tpublic var LEFT = 3;\n\tpublic var RIGHT = 4;\n\tpublic var START = 5;\n\t\n\t@:from private static function fromString (value:String):TextFormatAlign {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"center\": CENTER;\n\t\t\tcase \"end\": END;\n\t\t\tcase \"justify\": JUSTIFY;\n\t\t\tcase \"left\": LEFT;\n\t\t\tcase \"right\": RIGHT;\n\t\t\tcase \"start\": START;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase TextFormatAlign.CENTER: \"center\";\n\t\t\tcase TextFormatAlign.END: \"end\";\n\t\t\tcase TextFormatAlign.JUSTIFY: \"justify\";\n\t\t\tcase TextFormatAlign.LEFT: \"left\";\n\t\t\tcase TextFormatAlign.RIGHT: \"right\";\n\t\t\tcase TextFormatAlign.START: \"start\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.text;\n\n\nclass TextLineMetrics {\n\t\n\t\n\tpublic var ascent:Float;\n\tpublic var descent:Float;\n\tpublic var height:Float;\n\tpublic var leading:Float;\n\tpublic var width:Float;\n\tpublic var x:Float;\n\t\n\t\n\tpublic function new (x:Float, width:Float, height:Float, ascent:Float, descent:Float, leading:Float) {\n\t\t\n\t\tthis.x = x;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.ascent = ascent;\n\t\tthis.descent = descent;\n\t\tthis.leading = leading;\n\t\t\n\t}\n\t\n\t\n}","package openfl.ui;\n\n\nimport lime.ui.Gamepad;\nimport lime.ui.GamepadAxis;\nimport lime.ui.GamepadButton;\nimport openfl.events.Event;\nimport openfl.events.EventDispatcher;\nimport openfl.events.GameInputEvent;\n\n@:access(openfl.ui.GameInputControl)\n@:access(openfl.ui.GameInputDevice)\n\n\n@:final class GameInput extends EventDispatcher {\n\t\n\t\n\tpublic static var isSupported (default, null) = true;\n\tpublic static var numDevices (default, null) = 0;\n\t\n\tprivate static var __deviceList = new Array<GameInputDevice> ();\n\tprivate static var __devices = new Map<Gamepad, GameInputDevice> ();\n\tprivate static var __instances = [];\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tsuper ();\n\t\t\n\t\t__instances.push (this);\n\t\t\n\t}\n\t\n\t\n\tpublic override function addEventListener (type:String, listener:Dynamic->Void, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {\n\t\t\n\t\tsuper.addEventListener (type, listener, useCapture, priority, useWeakReference);\n\t\t\n\t\tif (type == GameInputEvent.DEVICE_ADDED) {\n\t\t\t\n\t\t\tfor (device in __deviceList) {\n\t\t\t\t\n\t\t\t\tdispatchEvent (new GameInputEvent (GameInputEvent.DEVICE_ADDED, device));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function getDeviceAt (index:Int):GameInputDevice {\n\t\t\n\t\tif (index >= 0 && index < __deviceList.length) {\n\t\t\t\n\t\t\treturn __deviceList[index];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tprivate static function __getDevice (gamepad:Gamepad):GameInputDevice {\n\t\t\n\t\tif (gamepad == null) return null;\n\t\t\n\t\tif (!__devices.exists (gamepad)) {\n\t\t\t\n\t\t\tvar device = new GameInputDevice (gamepad.guid, gamepad.name);\n\t\t\t__deviceList.push (device);\n\t\t\t__devices.set (gamepad, device);\n\t\t\tnumDevices = __deviceList.length;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __devices.get (gamepad);\n\t\t\n\t}\n\t\n\t\n\tprivate static function __onGamepadAxisMove (gamepad:Gamepad, axis:GamepadAxis, value:Float):Void {\n\t\t\n\t\tvar device = __getDevice (gamepad);\n\t\tif (device == null) return;\n\t\t\n\t\tif (device.enabled) {\n\t\t\t\n\t\t\tif (!device.__axis.exists (axis)) {\n\t\t\t\t\n\t\t\t\tvar control = new GameInputControl (device, \"AXIS_\" + axis, -1, 1);\n\t\t\t\tdevice.__axis.set (axis, control);\n\t\t\t\tdevice.__controls.push (control);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar control = device.__axis.get (axis);\n\t\t\tcontrol.value = value;\n\t\t\tcontrol.dispatchEvent (new Event (Event.CHANGE));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __onGamepadButtonDown (gamepad:Gamepad, button:GamepadButton):Void {\n\t\t\n\t\tvar device = __getDevice (gamepad);\n\t\tif (device == null) return;\n\t\t\n\t\tif (device.enabled) {\n\t\t\t\n\t\t\tif (!device.__button.exists (button)) {\n\t\t\t\t\n\t\t\t\tvar control = new GameInputControl (device, \"BUTTON_\" + button, 0, 1);\n\t\t\t\tdevice.__button.set (button, control);\n\t\t\t\tdevice.__controls.push (control);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar control = device.__button.get (button);\n\t\t\tcontrol.value = 1;\n\t\t\tcontrol.dispatchEvent (new Event (Event.CHANGE));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __onGamepadButtonUp (gamepad:Gamepad, button:GamepadButton):Void {\n\t\t\n\t\tvar device = __getDevice (gamepad);\n\t\tif (device == null) return;\n\t\t\n\t\tif (device.enabled) {\n\t\t\t\n\t\t\tif (!device.__button.exists (button)) {\n\t\t\t\t\n\t\t\t\tvar control = new GameInputControl (device, \"BUTTON_\" + button, 0, 1);\n\t\t\t\tdevice.__button.set (button, control);\n\t\t\t\tdevice.__controls.push (control);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar control = device.__button.get (button);\n\t\t\tcontrol.value = 0;\n\t\t\tcontrol.dispatchEvent (new Event (Event.CHANGE));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __onGamepadConnect (gamepad:Gamepad):Void {\n\t\t\n\t\tvar device = __getDevice (gamepad);\n\t\tif (device == null) return;\n\t\t\n\t\tfor (instance in __instances) {\n\t\t\t\n\t\t\tinstance.dispatchEvent (new GameInputEvent (GameInputEvent.DEVICE_ADDED, device));\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __onGamepadDisconnect (gamepad:Gamepad):Void {\n\t\t\n\t\tvar device = __devices.get (gamepad);\n\t\t\n\t\tif (device != null) {\n\t\t\t\n\t\t\tif (__devices.exists (gamepad)) {\n\t\t\t\t\n\t\t\t\t__deviceList.remove (__devices.get (gamepad));\n\t\t\t\t__devices.remove (gamepad);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tnumDevices = __deviceList.length;\n\t\t\t\n\t\t\tfor (instance in __instances) {\n\t\t\t\t\n\t\t\t\tinstance.dispatchEvent (new GameInputEvent (GameInputEvent.DEVICE_REMOVED, device));\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n}","package openfl.ui;\n\n\nimport openfl.events.EventDispatcher;\n\n\nclass GameInputControl extends EventDispatcher {\n\t\n\t\n\tpublic var device (default, null):GameInputDevice;\n\tpublic var id (default, null):String;\n\tpublic var maxValue (default, null):Float;\n\tpublic var minValue (default, null):Float;\n\tpublic var value (default, null):Float;\n\t\n\t\n\tprivate function new (device:GameInputDevice, id:String, minValue:Float, maxValue:Float, value:Float = 0) {\n\t\t\n\t\tsuper ();\n\t\t\n\t\tthis.device = device;\n\t\tthis.id = id;\n\t\tthis.minValue = minValue;\n\t\tthis.maxValue = maxValue;\n\t\tthis.value = value;\n\t\t\n\t}\n\t\n\t\n}","package openfl.ui;\n\n\nimport lime.ui.Gamepad;\nimport openfl.utils.ByteArray;\n\n@:access(openfl.ui.GameInputControl)\n\n\n@:final class GameInputDevice {\n\t\n\t\n\tpublic static var MAX_BUFFER_SIZE = 32000;\n\t\n\tpublic var enabled:Bool;\n\tpublic var id (default, null):String;\n\tpublic var name (default, null):String;\n\tpublic var numControls (get, never):Int;\n\tpublic var sampleInterval:Int;\n\t\n\tprivate var __axis = new Map<Int, GameInputControl> ();\n\tprivate var __button = new Map<Int, GameInputControl> ();\n\tprivate var __controls = new Array<GameInputControl> ();\n\tprivate var __gamepad:Gamepad;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperties (GameInputDevice.prototype, {\n\t\t\t\"numControls\": { get: untyped __js__ (\"function () { return this.get_numControls (); }\") },\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tprivate function new (id:String, name:String) {\n\t\t\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\t\n\t\tvar control;\n\t\t\n\t\tfor (i in 0...6) {\n\t\t\t\n\t\t\tcontrol = new GameInputControl (this, \"AXIS_\" + i, -1, 1);\n\t\t\t__axis.set (i, control);\n\t\t\t__controls.push (control);\n\t\t\t\n\t\t}\n\t\t\n\t\tfor (i in 0...15) {\n\t\t\t\n\t\t\tcontrol = new GameInputControl (this, \"BUTTON_\" + i, 0, 1);\n\t\t\t__button.set (i, control);\n\t\t\t__controls.push (control);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getCachedSamples (data:ByteArray, append:Bool = false):Int {\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function getControlAt (i:Int):GameInputControl {\n\t\t\n\t\tif (i >= 0 && i < __controls.length) {\n\t\t\t\n\t\t\treturn __controls[i];\n\t\t\t\n\t\t}\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic function startCachingSamples (numSamples:Int, controls:Vector<String>):Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\tpublic function stopCachingSamples ():Void {\n\t\t\n\t\t\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_numControls ():Int {\n\t\t\n\t\treturn __controls.length;\n\t\t\n\t}\n\t\n\t\n}","package openfl.ui;\n\n\nimport lime.ui.KeyCode;\n\n#if !openfl_debug\n@:fileXml('tags=\"haxe,release\"')\n@:noDebug\n#end\n\n\n@:final class Keyboard {\n\t\n\t\n\tpublic static inline var NUMBER_0 = 48;\n\tpublic static inline var NUMBER_1 = 49;\n\tpublic static inline var NUMBER_2 = 50;\n\tpublic static inline var NUMBER_3 = 51;\n\tpublic static inline var NUMBER_4 = 52;\n\tpublic static inline var NUMBER_5 = 53;\n\tpublic static inline var NUMBER_6 = 54;\n\tpublic static inline var NUMBER_7 = 55;\n\tpublic static inline var NUMBER_8 = 56; \n\tpublic static inline var NUMBER_9 = 57;\n\tpublic static inline var A = 65;\n\tpublic static inline var B = 66;\n\tpublic static inline var C = 67;\n\tpublic static inline var D = 68;\n\tpublic static inline var E = 69;\n\tpublic static inline var F = 70;\n\tpublic static inline var G = 71;\n\tpublic static inline var H = 72;\n\tpublic static inline var I = 73;\n\tpublic static inline var J = 74;\n\tpublic static inline var K = 75;\n\tpublic static inline var L = 76;\n\tpublic static inline var M = 77;\n\tpublic static inline var N = 78;\n\tpublic static inline var O = 79;\n\tpublic static inline var P = 80;\n\tpublic static inline var Q = 81;\n\tpublic static inline var R = 82;\n\tpublic static inline var S = 83;\n\tpublic static inline var T = 84;\n\tpublic static inline var U = 85;\n\tpublic static inline var V = 86;\n\tpublic static inline var W = 87;\n\tpublic static inline var X = 88;\n\tpublic static inline var Y = 89;\n\tpublic static inline var Z = 90;\n\tpublic static inline var NUMPAD_0 = 96;\n\tpublic static inline var NUMPAD_1 = 97;\n\tpublic static inline var NUMPAD_2 = 98;\n\tpublic static inline var NUMPAD_3 = 99;\n\tpublic static inline var NUMPAD_4 = 100;\n\tpublic static inline var NUMPAD_5 = 101;\n\tpublic static inline var NUMPAD_6 = 102;\n\tpublic static inline var NUMPAD_7 = 103;\n\tpublic static inline var NUMPAD_8 = 104;\n\tpublic static inline var NUMPAD_9 = 105;\n\tpublic static inline var NUMPAD_MULTIPLY = 106;\n\tpublic static inline var NUMPAD_ADD = 107;\n\tpublic static inline var NUMPAD_ENTER = 108;\n\tpublic static inline var NUMPAD_SUBTRACT = 109;\n\tpublic static inline var NUMPAD_DECIMAL = 110;\n\tpublic static inline var NUMPAD_DIVIDE = 111;\n\tpublic static inline var F1 = 112;\n\tpublic static inline var F2 = 113;\n\tpublic static inline var F3 = 114;\n\tpublic static inline var F4 = 115;\n\tpublic static inline var F5 = 116;\n\tpublic static inline var F6 = 117;\n\tpublic static inline var F7 = 118;\n\tpublic static inline var F8 = 119;\n\tpublic static inline var F9 = 120;\n\tpublic static inline var F10 = 121; //  F10 is used by browser.\n\tpublic static inline var F11 = 122;\n\tpublic static inline var F12 = 123;\n\tpublic static inline var F13 = 124;\n\tpublic static inline var F14 = 125;\n\tpublic static inline var F15 = 126;\n\tpublic static inline var BACKSPACE = 8;\n\tpublic static inline var TAB = 9;\n\tpublic static inline var ALTERNATE = 18;\n\tpublic static inline var ENTER = 13;\n\tpublic static inline var COMMAND = 15;\n\tpublic static inline var SHIFT = 16;\n\tpublic static inline var CONTROL = 17;\n\tpublic static inline var BREAK = 19;\n\tpublic static inline var CAPS_LOCK = 20;\n\tpublic static inline var NUMPAD = 21;\n\tpublic static inline var ESCAPE = 27;\n\tpublic static inline var SPACE = 32;\n\tpublic static inline var PAGE_UP = 33;\n\tpublic static inline var PAGE_DOWN = 34;\n\tpublic static inline var END = 35;\n\tpublic static inline var HOME = 36;\n\tpublic static inline var LEFT = 37;\n\tpublic static inline var RIGHT = 39;\n\tpublic static inline var UP = 38;\n\tpublic static inline var DOWN = 40;\n\tpublic static inline var INSERT = 45;\n\tpublic static inline var DELETE = 46;\n\tpublic static inline var NUMLOCK = 144;\n\tpublic static inline var SEMICOLON = 186;\n\tpublic static inline var EQUAL = 187;\n\tpublic static inline var COMMA = 188;\n\tpublic static inline var MINUS = 189;\n\tpublic static inline var PERIOD = 190;\n\tpublic static inline var SLASH = 191;\n\tpublic static inline var BACKQUOTE = 192;\n\tpublic static inline var LEFTBRACKET = 219;\n\tpublic static inline var BACKSLASH = 220;\n\tpublic static inline var RIGHTBRACKET = 221;\n\tpublic static inline var QUOTE = 222;\n\t\n\tpublic static var capsLock (default, null):Bool;\n\tpublic static var numLock (default, null):Bool;\n\t\n\t\n\tpublic static function isAccessible ():Bool {\n\t\t\n\t\t// default browser security restrictions are always enforced\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\tprivate static inline function __convertKeyCode (key:KeyCode):Int {\n\t\t\n\t\treturn switch (key) {\n\t\t\t\n\t\t\tcase KeyCode.BACKSPACE: Keyboard.BACKSPACE;\n\t\t\tcase KeyCode.TAB: Keyboard.TAB;\n\t\t\tcase KeyCode.RETURN: Keyboard.ENTER;\n\t\t\tcase KeyCode.ESCAPE: Keyboard.ESCAPE;\n\t\t\tcase KeyCode.SPACE: Keyboard.SPACE;\n\t\t\tcase KeyCode.EXCLAMATION: Keyboard.NUMBER_1;\n\t\t\tcase KeyCode.QUOTE: Keyboard.QUOTE;\n\t\t\tcase KeyCode.HASH: Keyboard.NUMBER_3;\n\t\t\tcase KeyCode.DOLLAR: Keyboard.NUMBER_4;\n\t\t\tcase KeyCode.PERCENT: Keyboard.NUMBER_5;\n\t\t\tcase KeyCode.AMPERSAND: Keyboard.NUMBER_7;\n\t\t\tcase KeyCode.SINGLE_QUOTE: Keyboard.QUOTE;\n\t\t\tcase KeyCode.LEFT_PARENTHESIS: Keyboard.NUMBER_9;\n\t\t\tcase KeyCode.RIGHT_PARENTHESIS: Keyboard.NUMBER_0;\n\t\t\tcase KeyCode.ASTERISK: Keyboard.NUMBER_8;\n\t\t\t//case KeyCode.PLUS: 0x2B;\n\t\t\tcase KeyCode.COMMA: Keyboard.COMMA;\n\t\t\tcase KeyCode.MINUS: Keyboard.MINUS;\n\t\t\tcase KeyCode.PERIOD: Keyboard.PERIOD;\n\t\t\tcase KeyCode.SLASH: Keyboard.SLASH;\n\t\t\tcase KeyCode.NUMBER_0: Keyboard.NUMBER_0;\n\t\t\tcase KeyCode.NUMBER_1: Keyboard.NUMBER_1;\n\t\t\tcase KeyCode.NUMBER_2: Keyboard.NUMBER_2;\n\t\t\tcase KeyCode.NUMBER_3: Keyboard.NUMBER_3;\n\t\t\tcase KeyCode.NUMBER_4: Keyboard.NUMBER_4;\n\t\t\tcase KeyCode.NUMBER_5: Keyboard.NUMBER_5;\n\t\t\tcase KeyCode.NUMBER_6: Keyboard.NUMBER_6;\n\t\t\tcase KeyCode.NUMBER_7: Keyboard.NUMBER_7;\n\t\t\tcase KeyCode.NUMBER_8: Keyboard.NUMBER_8;\n\t\t\tcase KeyCode.NUMBER_9: Keyboard.NUMBER_9;\n\t\t\tcase KeyCode.COLON: Keyboard.SEMICOLON;\n\t\t\tcase KeyCode.SEMICOLON: Keyboard.SEMICOLON;\n\t\t\tcase KeyCode.LESS_THAN: 60;\n\t\t\tcase KeyCode.EQUALS: Keyboard.EQUAL;\n\t\t\tcase KeyCode.GREATER_THAN: Keyboard.PERIOD;\n\t\t\tcase KeyCode.QUESTION: Keyboard.SLASH;\n\t\t\tcase KeyCode.AT: Keyboard.NUMBER_2;\n\t\t\tcase KeyCode.LEFT_BRACKET: Keyboard.LEFTBRACKET;\n\t\t\tcase KeyCode.BACKSLASH: Keyboard.BACKSLASH;\n\t\t\tcase KeyCode.RIGHT_BRACKET: Keyboard.RIGHTBRACKET;\n\t\t\tcase KeyCode.CARET: Keyboard.NUMBER_6;\n\t\t\tcase KeyCode.UNDERSCORE: Keyboard.MINUS;\n\t\t\tcase KeyCode.GRAVE: Keyboard.BACKQUOTE;\n\t\t\tcase KeyCode.A: Keyboard.A;\n\t\t\tcase KeyCode.B: Keyboard.B;\n\t\t\tcase KeyCode.C: Keyboard.C;\n\t\t\tcase KeyCode.D: Keyboard.D;\n\t\t\tcase KeyCode.E: Keyboard.E;\n\t\t\tcase KeyCode.F: Keyboard.F;\n\t\t\tcase KeyCode.G: Keyboard.G;\n\t\t\tcase KeyCode.H: Keyboard.H;\n\t\t\tcase KeyCode.I: Keyboard.I;\n\t\t\tcase KeyCode.J: Keyboard.J;\n\t\t\tcase KeyCode.K: Keyboard.K;\n\t\t\tcase KeyCode.L: Keyboard.L;\n\t\t\tcase KeyCode.M: Keyboard.M;\n\t\t\tcase KeyCode.N: Keyboard.N;\n\t\t\tcase KeyCode.O: Keyboard.O;\n\t\t\tcase KeyCode.P: Keyboard.P;\n\t\t\tcase KeyCode.Q: Keyboard.Q;\n\t\t\tcase KeyCode.R: Keyboard.R;\n\t\t\tcase KeyCode.S: Keyboard.S;\n\t\t\tcase KeyCode.T: Keyboard.T;\n\t\t\tcase KeyCode.U: Keyboard.U;\n\t\t\tcase KeyCode.V: Keyboard.V;\n\t\t\tcase KeyCode.W: Keyboard.W;\n\t\t\tcase KeyCode.X: Keyboard.X;\n\t\t\tcase KeyCode.Y: Keyboard.Y;\n\t\t\tcase KeyCode.Z: Keyboard.Z;\n\t\t\tcase KeyCode.DELETE: Keyboard.DELETE;\n\t\t\tcase KeyCode.CAPS_LOCK: Keyboard.CAPS_LOCK;\n\t\t\tcase KeyCode.F1: Keyboard.F1;\n\t\t\tcase KeyCode.F2: Keyboard.F2;\n\t\t\tcase KeyCode.F3: Keyboard.F3;\n\t\t\tcase KeyCode.F4: Keyboard.F4;\n\t\t\tcase KeyCode.F5: Keyboard.F5;\n\t\t\tcase KeyCode.F6: Keyboard.F6;\n\t\t\tcase KeyCode.F7: Keyboard.F7;\n\t\t\tcase KeyCode.F8: Keyboard.F8;\n\t\t\tcase KeyCode.F9: Keyboard.F9;\n\t\t\tcase KeyCode.F10: Keyboard.F10;\n\t\t\tcase KeyCode.F11: Keyboard.F11;\n\t\t\tcase KeyCode.F12: Keyboard.F12;\n\t\t\tcase KeyCode.PRINT_SCREEN: 301;\n\t\t\tcase KeyCode.SCROLL_LOCK: 145;\n\t\t\tcase KeyCode.PAUSE: Keyboard.BREAK;\n\t\t\tcase KeyCode.INSERT: Keyboard.INSERT;\n\t\t\tcase KeyCode.HOME: Keyboard.HOME;\n\t\t\tcase KeyCode.PAGE_UP: Keyboard.PAGE_UP;\n\t\t\tcase KeyCode.END: Keyboard.END;\n\t\t\tcase KeyCode.PAGE_DOWN: Keyboard.PAGE_DOWN;\n\t\t\tcase KeyCode.RIGHT: Keyboard.RIGHT;\n\t\t\tcase KeyCode.LEFT: Keyboard.LEFT;\n\t\t\tcase KeyCode.DOWN: Keyboard.DOWN;\n\t\t\tcase KeyCode.UP: Keyboard.UP;\n\t\t\tcase KeyCode.NUM_LOCK: Keyboard.NUMLOCK;\n\t\t\tcase KeyCode.NUMPAD_DIVIDE: Keyboard.NUMPAD_DIVIDE;\n\t\t\tcase KeyCode.NUMPAD_MULTIPLY: Keyboard.NUMPAD_MULTIPLY;\n\t\t\tcase KeyCode.NUMPAD_MINUS: Keyboard.NUMPAD_SUBTRACT;\n\t\t\tcase KeyCode.NUMPAD_PLUS: Keyboard.NUMPAD_ADD;\n\t\t\tcase KeyCode.NUMPAD_ENTER: Keyboard.NUMPAD_ENTER;\n\t\t\tcase KeyCode.NUMPAD_1: Keyboard.NUMPAD_1;\n\t\t\tcase KeyCode.NUMPAD_2: Keyboard.NUMPAD_2;\n\t\t\tcase KeyCode.NUMPAD_3: Keyboard.NUMPAD_3;\n\t\t\tcase KeyCode.NUMPAD_4: Keyboard.NUMPAD_4;\n\t\t\tcase KeyCode.NUMPAD_5: Keyboard.NUMPAD_5;\n\t\t\tcase KeyCode.NUMPAD_6: Keyboard.NUMPAD_6;\n\t\t\tcase KeyCode.NUMPAD_7: Keyboard.NUMPAD_7;\n\t\t\tcase KeyCode.NUMPAD_8: Keyboard.NUMPAD_8;\n\t\t\tcase KeyCode.NUMPAD_9: Keyboard.NUMPAD_9;\n\t\t\tcase KeyCode.NUMPAD_0: Keyboard.NUMPAD_0;\n\t\t\tcase KeyCode.NUMPAD_PERIOD: Keyboard.NUMPAD_DECIMAL;\n\t\t\tcase KeyCode.APPLICATION: 302;\n\t\t\t//case KeyCode.POWER: 0x40000066;\n\t\t\t//case KeyCode.NUMPAD_EQUALS: 0x40000067;\n\t\t\tcase KeyCode.F13: Keyboard.F13;\n\t\t\tcase KeyCode.F14: Keyboard.F14;\n\t\t\tcase KeyCode.F15: Keyboard.F15;\n\t\t\t//case KeyCode.F16: 0x4000006B;\n\t\t\t//case KeyCode.F17: 0x4000006C;\n\t\t\t//case KeyCode.F18: 0x4000006D;\n\t\t\t//case KeyCode.F19: 0x4000006E;\n\t\t\t//case KeyCode.F20: 0x4000006F;\n\t\t\t//case KeyCode.F21: 0x40000070;\n\t\t\t//case KeyCode.F22: 0x40000071;\n\t\t\t//case KeyCode.F23: 0x40000072;\n\t\t\t//case KeyCode.F24: 0x40000073;\n\t\t\t//case KeyCode.EXECUTE: 0x40000074;\n\t\t\t//case KeyCode.HELP: 0x40000075;\n\t\t\t//case KeyCode.MENU: 0x40000076;\n\t\t\t//case KeyCode.SELECT: 0x40000077;\n\t\t\t//case KeyCode.STOP: 0x40000078;\n\t\t\t//case KeyCode.AGAIN: 0x40000079;\n\t\t\t//case KeyCode.UNDO: 0x4000007A;\n\t\t\t//case KeyCode.CUT: 0x4000007B;\n\t\t\t//case KeyCode.COPY: 0x4000007C;\n\t\t\t//case KeyCode.PASTE: 0x4000007D;\n\t\t\t//case KeyCode.FIND: 0x4000007E;\n\t\t\t//case KeyCode.MUTE: 0x4000007F;\n\t\t\t//case KeyCode.VOLUME_UP: 0x40000080;\n\t\t\t//case KeyCode.VOLUME_DOWN: 0x40000081;\n\t\t\t//case KeyCode.NUMPAD_COMMA: 0x40000085;\n\t\t\t////case KeyCode.NUMPAD_EQUALS_AS400: 0x40000086;\n\t\t\t//case KeyCode.ALT_ERASE: 0x40000099;\n\t\t\t//case KeyCode.SYSTEM_REQUEST: 0x4000009A;\n\t\t\t//case KeyCode.CANCEL: 0x4000009B;\n\t\t\t//case KeyCode.CLEAR: 0x4000009C;\n\t\t\t//case KeyCode.PRIOR: 0x4000009D;\n\t\t\tcase KeyCode.RETURN2: Keyboard.ENTER;\n\t\t\t//case KeyCode.SEPARATOR: 0x4000009F;\n\t\t\t//case KeyCode.OUT: 0x400000A0;\n\t\t\t//case KeyCode.OPER: 0x400000A1;\n\t\t\t//case KeyCode.CLEAR_AGAIN: 0x400000A2;\n\t\t\t//case KeyCode.CRSEL: 0x400000A3;\n\t\t\t//case KeyCode.EXSEL: 0x400000A4;\n\t\t\t//case KeyCode.NUMPAD_00: 0x400000B0;\n\t\t\t//case KeyCode.NUMPAD_000: 0x400000B1;\n\t\t\t//case KeyCode.THOUSAND_SEPARATOR: 0x400000B2;\n\t\t\t//case KeyCode.DECIMAL_SEPARATOR: 0x400000B3;\n\t\t\t//case KeyCode.CURRENCY_UNIT: 0x400000B4;\n\t\t\t//case KeyCode.CURRENCY_SUBUNIT: 0x400000B5;\n\t\t\t//case KeyCode.NUMPAD_LEFT_PARENTHESIS: 0x400000B6;\n\t\t\t//case KeyCode.NUMPAD_RIGHT_PARENTHESIS: 0x400000B7;\n\t\t\t//case KeyCode.NUMPAD_LEFT_BRACE: 0x400000B8;\n\t\t\t//case KeyCode.NUMPAD_RIGHT_BRACE: 0x400000B9;\n\t\t\t//case KeyCode.NUMPAD_TAB: 0x400000BA;\n\t\t\t//case KeyCode.NUMPAD_BACKSPACE: 0x400000BB;\n\t\t\t//case KeyCode.NUMPAD_A: 0x400000BC;\n\t\t\t//case KeyCode.NUMPAD_B: 0x400000BD;\n\t\t\t//case KeyCode.NUMPAD_C: 0x400000BE;\n\t\t\t//case KeyCode.NUMPAD_D: 0x400000BF;\n\t\t\t//case KeyCode.NUMPAD_E: 0x400000C0;\n\t\t\t//case KeyCode.NUMPAD_F: 0x400000C1;\n\t\t\t//case KeyCode.NUMPAD_XOR: 0x400000C2;\n\t\t\t//case KeyCode.NUMPAD_POWER: 0x400000C3;\n\t\t\t//case KeyCode.NUMPAD_PERCENT: 0x400000C4;\n\t\t\t//case KeyCode.NUMPAD_LESS_THAN: 0x400000C5;\n\t\t\t//case KeyCode.NUMPAD_GREATER_THAN: 0x400000C6;\n\t\t\t//case KeyCode.NUMPAD_AMPERSAND: 0x400000C7;\n\t\t\t//case KeyCode.NUMPAD_DOUBLE_AMPERSAND: 0x400000C8;\n\t\t\t//case KeyCode.NUMPAD_VERTICAL_BAR: 0x400000C9;\n\t\t\t//case KeyCode.NUMPAD_DOUBLE_VERTICAL_BAR: 0x400000CA;\n\t\t\t//case KeyCode.NUMPAD_COLON: 0x400000CB;\n\t\t\t//case KeyCode.NUMPAD_HASH: 0x400000CC;\n\t\t\t//case KeyCode.NUMPAD_SPACE: 0x400000CD;\n\t\t\t//case KeyCode.NUMPAD_AT: 0x400000CE;\n\t\t\t//case KeyCode.NUMPAD_EXCLAMATION: 0x400000CF;\n\t\t\t//case KeyCode.NUMPAD_MEM_STORE: 0x400000D0;\n\t\t\t//case KeyCode.NUMPAD_MEM_RECALL: 0x400000D1;\n\t\t\t//case KeyCode.NUMPAD_MEM_CLEAR: 0x400000D2;\n\t\t\t//case KeyCode.NUMPAD_MEM_ADD: 0x400000D3;\n\t\t\t//case KeyCode.NUMPAD_MEM_SUBTRACT: 0x400000D4;\n\t\t\t//case KeyCode.NUMPAD_MEM_MULTIPLY: 0x400000D5;\n\t\t\t//case KeyCode.NUMPAD_MEM_DIVIDE: 0x400000D6;\n\t\t\t//case KeyCode.NUMPAD_PLUS_MINUS: 0x400000D7;\n\t\t\t//case KeyCode.NUMPAD_CLEAR: 0x400000D8;\n\t\t\t//case KeyCode.NUMPAD_CLEAR_ENTRY: 0x400000D9;\n\t\t\t//case KeyCode.NUMPAD_BINARY: 0x400000DA;\n\t\t\t//case KeyCode.NUMPAD_OCTAL: 0x400000DB;\n\t\t\tcase KeyCode.NUMPAD_DECIMAL: Keyboard.NUMPAD_DECIMAL;\n\t\t\t//case KeyCode.NUMPAD_HEXADECIMAL: 0x400000DD;\n\t\t\tcase KeyCode.LEFT_CTRL: Keyboard.CONTROL;\n\t\t\tcase KeyCode.LEFT_SHIFT: Keyboard.SHIFT;\n\t\t\tcase KeyCode.LEFT_ALT: Keyboard.ALTERNATE;\n\t\t\tcase KeyCode.LEFT_META: Keyboard.COMMAND;\n\t\t\tcase KeyCode.RIGHT_CTRL: Keyboard.CONTROL;\n\t\t\tcase KeyCode.RIGHT_SHIFT: Keyboard.SHIFT;\n\t\t\tcase KeyCode.RIGHT_ALT: Keyboard.ALTERNATE;\n\t\t\tcase KeyCode.RIGHT_META: Keyboard.COMMAND;\n\t\t\t//case KeyCode.MODE: 0x40000101;\n\t\t\t//case KeyCode.AUDIO_NEXT: 0x40000102;\n\t\t\t//case KeyCode.AUDIO_PREVIOUS: 0x40000103;\n\t\t\t//case KeyCode.AUDIO_STOP: 0x40000104;\n\t\t\t//case KeyCode.AUDIO_PLAY: 0x40000105;\n\t\t\t//case KeyCode.AUDIO_MUTE: 0x40000106;\n\t\t\t//case KeyCode.MEDIA_SELECT: 0x40000107;\n\t\t\t//case KeyCode.WWW: 0x40000108;\n\t\t\t//case KeyCode.MAIL: 0x40000109;\n\t\t\t//case KeyCode.CALCULATOR: 0x4000010A;\n\t\t\t//case KeyCode.COMPUTER: 0x4000010B;\n\t\t\t//case KeyCode.APP_CONTROL_SEARCH: 0x4000010C;\n\t\t\t//case KeyCode.APP_CONTROL_HOME: 0x4000010D;\n\t\t\t//case KeyCode.APP_CONTROL_BACK: 0x4000010E;\n\t\t\t//case KeyCode.APP_CONTROL_FORWARD: 0x4000010F;\n\t\t\t//case KeyCode.APP_CONTROL_STOP: 0x40000110;\n\t\t\t//case KeyCode.APP_CONTROL_REFRESH: 0x40000111;\n\t\t\t//case KeyCode.APP_CONTROL_BOOKMARKS: 0x40000112;\n\t\t\t//case KeyCode.BRIGHTNESS_DOWN: 0x40000113;\n\t\t\t//case KeyCode.BRIGHTNESS_UP: 0x40000114;\n\t\t\t//case KeyCode.DISPLAY_SWITCH: 0x40000115;\n\t\t\t//case KeyCode.BACKLIGHT_TOGGLE: 0x40000116;\n\t\t\t//case KeyCode.BACKLIGHT_DOWN: 0x40000117;\n\t\t\t//case KeyCode.BACKLIGHT_UP: 0x40000118;\n\t\t\t//case KeyCode.EJECT: 0x40000119;\n\t\t\t//case KeyCode.SLEEP: 0x4000011A;\n\t\t\tdefault: cast key;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate static function __getCharCode (key:Int, shift:Bool = false):Int {\n\t\t\n\t\tif (!shift) {\n\t\t\t\n\t\t\tswitch (key) {\n\t\t\t\t\n\t\t\t\tcase Keyboard.BACKSPACE: return 8;\n\t\t\t\tcase Keyboard.TAB: return 9;\n\t\t\t\tcase Keyboard.ENTER: return 13;\n\t\t\t\tcase Keyboard.ESCAPE: return 27;\n\t\t\t\tcase Keyboard.SPACE: return 32;\n\t\t\t\tcase Keyboard.SEMICOLON: return 59;\n\t\t\t\tcase Keyboard.EQUAL: return 61;\n\t\t\t\tcase Keyboard.COMMA: return 44;\n\t\t\t\tcase Keyboard.MINUS: return 45;\n\t\t\t\tcase Keyboard.PERIOD: return 46;\n\t\t\t\tcase Keyboard.SLASH: return 47;\n\t\t\t\tcase Keyboard.BACKQUOTE: return 96;\n\t\t\t\tcase Keyboard.LEFTBRACKET: return 91;\n\t\t\t\tcase Keyboard.BACKSLASH: return 92;\n\t\t\t\tcase Keyboard.RIGHTBRACKET: return 93;\n\t\t\t\tcase Keyboard.QUOTE: return 39;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (key >= Keyboard.NUMBER_0 && key <= Keyboard.NUMBER_9) {\n\t\t\t\t\n\t\t\t\treturn key - Keyboard.NUMBER_0 + 48;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (key >= Keyboard.A && key <= Keyboard.Z) {\n\t\t\t\t\n\t\t\t\treturn key - Keyboard.A + 97;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tswitch (key) {\n\t\t\t\t\n\t\t\t\tcase Keyboard.NUMBER_0: return 41;\n\t\t\t\tcase Keyboard.NUMBER_1: return 33;\n\t\t\t\tcase Keyboard.NUMBER_2: return 64;\n\t\t\t\tcase Keyboard.NUMBER_3: return 35;\n\t\t\t\tcase Keyboard.NUMBER_4: return 36;\n\t\t\t\tcase Keyboard.NUMBER_5: return 37;\n\t\t\t\tcase Keyboard.NUMBER_6: return 94;\n\t\t\t\tcase Keyboard.NUMBER_7: return 38;\n\t\t\t\tcase Keyboard.NUMBER_8: return 42;\n\t\t\t\tcase Keyboard.NUMBER_9: return 40;\n\t\t\t\tcase Keyboard.SEMICOLON: return 58;\n\t\t\t\tcase Keyboard.EQUAL: return 43;\n\t\t\t\tcase Keyboard.COMMA: return 60;\n\t\t\t\tcase Keyboard.MINUS: return 95;\n\t\t\t\tcase Keyboard.PERIOD: return 62;\n\t\t\t\tcase Keyboard.SLASH: return 63;\n\t\t\t\tcase Keyboard.BACKQUOTE: return 126;\n\t\t\t\tcase Keyboard.LEFTBRACKET: return 123;\n\t\t\t\tcase Keyboard.BACKSLASH: return 124;\n\t\t\t\tcase Keyboard.RIGHTBRACKET: return 125;\n\t\t\t\tcase Keyboard.QUOTE: return 34;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (key >= Keyboard.A && key <= Keyboard.Z) {\n\t\t\t\t\n\t\t\t\treturn key - Keyboard.A + 65;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tif (key >= Keyboard.NUMPAD_0 && key <= Keyboard.NUMPAD_9) {\n\t\t\t\n\t\t\treturn key - Keyboard.NUMPAD_0 + 48;\n\t\t\t\n\t\t}\n\t\t\n\t\tswitch (key) {\n\t\t\t\n\t\t\tcase Keyboard.NUMPAD_MULTIPLY: return 42;\n\t\t\tcase Keyboard.NUMPAD_ADD: return 43;\n\t\t\tcase Keyboard.NUMPAD_ENTER: return 44;\n\t\t\tcase Keyboard.NUMPAD_DECIMAL: return 45;\n\t\t\tcase Keyboard.NUMPAD_DIVIDE: return 46;\n\t\t\tcase Keyboard.DELETE: return 127;\n\t\t\tcase Keyboard.ENTER: return 13;\n\t\t\tcase Keyboard.BACKSPACE: return 8;\n\t\t\t\n\t\t}\n\t\t\n\t\treturn 0;\n\t\t\n\t}\n\t\n\t\n\tprivate static inline function __getKeyLocation (key:KeyCode):KeyLocation {\n\t\t\n\t\treturn switch (key) {\n\t\t\t\n\t\t\tcase KeyCode.LEFT_CTRL, KeyCode.LEFT_SHIFT, KeyCode.LEFT_ALT, KeyCode.LEFT_META: KeyLocation.LEFT;\n\t\t\tcase KeyCode.RIGHT_CTRL, KeyCode.RIGHT_SHIFT, KeyCode.RIGHT_ALT, KeyCode.RIGHT_META: KeyLocation.RIGHT;\n\t\t\tcase KeyCode.NUMPAD_DIVIDE, KeyCode.NUMPAD_MULTIPLY, KeyCode.NUMPAD_MINUS, KeyCode.NUMPAD_PLUS, KeyCode.NUMPAD_ENTER,\n\t\t\t\tKeyCode.NUMPAD_1, KeyCode.NUMPAD_2, KeyCode.NUMPAD_3, KeyCode.NUMPAD_4, KeyCode.NUMPAD_5, KeyCode.NUMPAD_6,\n\t\t\t\tKeyCode.NUMPAD_7, KeyCode.NUMPAD_8, KeyCode.NUMPAD_9, KeyCode.NUMPAD_0, KeyCode.NUMPAD_PERIOD, KeyCode.NUMPAD_DECIMAL:\n\t\t\t\t\tKeyLocation.NUM_PAD;\n\t\t\tdefault: KeyLocation.STANDARD;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl.ui;\n\n\nimport lime.ui.Mouse in LimeMouse;\n\n@:access(openfl.display.Stage)\n\n\n@:final class Mouse {\n\t\n\t\n\tpublic static var cursor (get, set):MouseCursor;\n\tpublic static var supportsCursor (default, null):Bool = #if !mobile true; #else false; #end\n\tpublic static var supportsNativeCursor (default, null):Bool = #if !mobile true; #else false; #end\n\t\n\tprivate static var __cursor:MouseCursor = MouseCursor.AUTO;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped Object.defineProperty (Mouse, \"cursor\", { get: function () { return Mouse.get_cursor (); }, set: function (value) { return Mouse.set_cursor (value); } });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic static function hide ():Void {\n\t\t\n\t\tLimeMouse.hide ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function show ():Void {\n\t\t\n\t\tLimeMouse.show ();\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate static function get_cursor ():MouseCursor {\n\t\t\n\t\treturn __cursor;\n\t\t\n\t}\n\t\n\t\n\tprivate static function set_cursor (value:MouseCursor):MouseCursor {\n\t\t\n\t\tswitch (value) {\n\t\t\t\n\t\t\tcase MouseCursor.ARROW: LimeMouse.cursor = ARROW;\n\t\t\tcase MouseCursor.BUTTON: LimeMouse.cursor = POINTER;\n\t\t\tcase MouseCursor.HAND: LimeMouse.cursor = MOVE;\n\t\t\tcase MouseCursor.IBEAM: LimeMouse.cursor = TEXT;\n\t\t\tcase MouseCursor.__CROSSHAIR: LimeMouse.cursor = CROSSHAIR;\n\t\t\tcase MouseCursor.__CUSTOM: LimeMouse.cursor = CUSTOM;\n\t\t\tcase MouseCursor.__RESIZE_NESW: LimeMouse.cursor = RESIZE_NESW;\n\t\t\tcase MouseCursor.__RESIZE_NS: LimeMouse.cursor = RESIZE_NS;\n\t\t\tcase MouseCursor.__RESIZE_NWSE: LimeMouse.cursor = RESIZE_NWSE;\n\t\t\tcase MouseCursor.__RESIZE_WE: LimeMouse.cursor = RESIZE_WE;\n\t\t\tcase MouseCursor.__WAIT: LimeMouse.cursor = WAIT;\n\t\t\tcase MouseCursor.__WAIT_ARROW: LimeMouse.cursor = WAIT_ARROW;\n\t\t\tdefault:\n\t\t\t\n\t\t}\n\t\t\n\t\treturn __cursor = value;\n\t\t\n\t}\n\t\n\t\n}","package openfl.ui;\n\n\nimport lime.ui.MouseCursor in LimeMouseCursor;\n\n\n@:enum abstract MouseCursor(String) from String to String {\n\t\n\tpublic var ARROW = \"arrow\";\n\tpublic var AUTO = \"auto\";\n\tpublic var BUTTON = \"button\";\n\tpublic var HAND = \"hand\";\n\tpublic var IBEAM = \"ibeam\";\n\t\n\tprivate var __CROSSHAIR = \"crosshair\";\n\tprivate var __CUSTOM = \"custom\";\n\tprivate var __MOVE = \"move\";\n\tprivate var __RESIZE_NESW = \"resize_nesw\";\n\tprivate var __RESIZE_NS = \"resize_ns\";\n\tprivate var __RESIZE_NWSE = \"resize_nwse\";\n\tprivate var __RESIZE_WE = \"resize_we\";\n\tprivate var __WAIT = \"wait\";\n\tprivate var __WAIT_ARROW = \"waitarrow\";\n\t\n\t@:from private static function fromLimeCursor (cursor:LimeMouseCursor):MouseCursor {\n\t\t\n\t\treturn switch (cursor) {\n\t\t\t\n\t\t\tcase LimeMouseCursor.ARROW: MouseCursor.ARROW;\n\t\t\tcase LimeMouseCursor.DEFAULT: MouseCursor.AUTO;\n\t\t\tcase LimeMouseCursor.POINTER: MouseCursor.BUTTON;\n\t\t\tcase LimeMouseCursor.MOVE: MouseCursor.HAND;\n\t\t\tcase LimeMouseCursor.TEXT: MouseCursor.IBEAM;\n\t\t\tcase LimeMouseCursor.CROSSHAIR: MouseCursor.__CROSSHAIR;\n\t\t\tcase LimeMouseCursor.RESIZE_NESW: MouseCursor.__RESIZE_NESW;\n\t\t\tcase LimeMouseCursor.RESIZE_NS: MouseCursor.__RESIZE_NWSE;\n\t\t\tcase LimeMouseCursor.RESIZE_NWSE: MouseCursor.__RESIZE_NWSE;\n\t\t\tcase LimeMouseCursor.RESIZE_WE: MouseCursor.__RESIZE_WE;\n\t\t\tcase LimeMouseCursor.WAIT: MouseCursor.__WAIT;\n\t\t\tcase LimeMouseCursor.WAIT_ARROW: MouseCursor.__WAIT_ARROW;\n\t\t\tcase LimeMouseCursor.CUSTOM: MouseCursor.__CUSTOM;\n\t\t\tdefault: MouseCursor.AUTO;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.utils;\n\n\nimport lime.utils.Assets in LimeAssets;\nimport openfl.display.BitmapData;\nimport openfl.media.Sound;\nimport openfl.text.Font;\n\n\n@:dox(hide) class AssetCache implements IAssetCache {\n\t\n\t\n\tpublic var enabled (get, set):Bool;\n\t\n\t/* deprecated */ @:dox(hide) public var bitmapData:Map<String, BitmapData>;\n\t/* deprecated */ @:dox(hide) public var font:Map<String, Font>;\n\t/* deprecated */ @:dox(hide) public var sound:Map<String, Sound>;\n\t\n\tprivate var __enabled = true;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped global.Object.defineProperty (AssetCache.prototype, \"enabled\", { get: untyped __js__ (\"function () { return this.get_enabled (); }\"), set: untyped __js__ (\"function (v) { return this.set_enabled (v); }\") });\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new () {\n\t\t\n\t\tbitmapData = new Map<String, BitmapData> ();\n\t\tfont = new Map<String, Font> ();\n\t\tsound = new Map<String, Sound> ();\n\t\t\n\t}\n\t\n\t\n\tpublic function clear (prefix:String = null):Void {\n\t\t\n\t\tif (prefix == null) {\n\t\t\t\n\t\t\tbitmapData = new Map<String, BitmapData> ();\n\t\t\tfont = new Map<String, Font> ();\n\t\t\tsound = new Map<String, Sound> ();\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar keys = bitmapData.keys ();\n\t\t\t\n\t\t\tfor (key in keys) {\n\t\t\t\t\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\n\t\t\t\t\t\n\t\t\t\t\tremoveBitmapData (key);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar keys = font.keys ();\n\t\t\t\n\t\t\tfor (key in keys) {\n\t\t\t\t\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\n\t\t\t\t\t\n\t\t\t\t\tremoveFont (key);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tvar keys = sound.keys ();\n\t\t\t\n\t\t\tfor (key in keys) {\n\t\t\t\t\n\t\t\t\tif (StringTools.startsWith (key, prefix)) {\n\t\t\t\t\t\n\t\t\t\t\tremoveSound (key);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function getBitmapData (id:String):BitmapData {\n\t\t\n\t\treturn bitmapData.get (id);\n\t\t\n\t}\n\t\n\t\n\tpublic function getFont (id:String):Font {\n\t\t\n\t\treturn font.get (id);\n\t\t\n\t}\n\t\n\t\n\tpublic function getSound (id:String):Sound {\n\t\t\n\t\treturn sound.get (id);\n\t\t\n\t}\n\t\n\t\n\tpublic function hasBitmapData (id:String):Bool {\n\t\t\n\t\treturn bitmapData.exists (id);\n\t\t\n\t}\n\t\n\t\n\tpublic function hasFont (id:String):Bool {\n\t\t\n\t\treturn font.exists (id);\n\t\t\n\t}\n\t\n\t\n\tpublic function hasSound (id:String):Bool {\n\t\t\n\t\treturn sound.exists (id);\n\t\t\n\t}\n\t\n\t\n\tpublic function removeBitmapData (id:String):Bool {\n\t\t\n\t\tLimeAssets.cache.image.remove (id);\n\t\treturn bitmapData.remove (id);\n\t\t\n\t}\n\t\n\t\n\tpublic function removeFont (id:String):Bool {\n\t\t\n\t\tLimeAssets.cache.font.remove (id);\n\t\treturn font.remove (id);\n\t\t\n\t}\n\t\n\t\n\tpublic function removeSound (id:String):Bool {\n\t\t\n\t\tLimeAssets.cache.audio.remove (id);\n\t\treturn sound.remove (id);\n\t\t\n\t}\n\t\n\t\n\tpublic function setBitmapData (id:String, bitmapData:BitmapData):Void {\n\t\t\n\t\tthis.bitmapData.set (id, bitmapData);\n\t\t\n\t}\n\t\n\t\n\tpublic function setFont (id:String, font:Font):Void {\n\t\t\n\t\tthis.font.set (id, font);\n\t\t\n\t}\n\t\n\t\n\tpublic function setSound (id:String, sound:Sound):Void {\n\t\t\n\t\tthis.sound.set (id, sound);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\tprivate function get_enabled ():Bool {\n\t\t\n\t\treturn __enabled;\n\t\t\n\t}\n\t\n\t\n\tprivate function set_enabled (value:Bool):Bool {\n\t\t\n\t\treturn __enabled = value;\n\t\t\n\t}\n\t\n\t\n}","package openfl.utils;\n\n\nimport openfl._internal.symbols.SpriteSymbol;\nimport openfl._internal.swf.SWFLiteLibrary;\nimport lime.app.Future;\nimport lime.app.Promise;\nimport lime.text.Font in LimeFont;\nimport lime.utils.AssetLibrary in LimeAssetLibrary;\nimport lime.utils.Assets in LimeAssets;\nimport lime.utils.Log;\nimport openfl.display.Bitmap;\nimport openfl.display.BitmapData;\nimport openfl.display.MovieClip;\nimport openfl.events.Event;\nimport openfl.events.EventDispatcher;\nimport openfl.media.Sound;\nimport openfl.net.URLRequest;\nimport openfl.text.Font;\n\n@:access(openfl.display.BitmapData)\n@:access(openfl.text.Font)\n@:access(openfl.utils.AssetLibrary)\n\n\nclass Assets {\n\t\n\t\n\tpublic static var cache:IAssetCache = new AssetCache ();\n\t\n\tprivate static var dispatcher:EventDispatcher #if !macro = new EventDispatcher () #end;\n\n\tprivate static var libraryByLastLoadedSymbolName: Map<String, String> = new Map();\n\t\n\t\n\tpublic static function addEventListener (type:String, listener:Dynamic, useCapture:Bool = false, priority:Int = 0, useWeakReference:Bool = false):Void {\n\t\t\n\t\tif (!LimeAssets.onChange.has (LimeAssets_onChange)) {\n\t\t\t\n\t\t\tLimeAssets.onChange.add (LimeAssets_onChange);\n\t\t\t\n\t\t}\n\t\t\n\t\tdispatcher.addEventListener (type, listener, useCapture, priority, useWeakReference);\n\t\t\n\t}\n\t\n\t\n\tpublic static function dispatchEvent (event:Event):Bool {\n\t\t\n\t\treturn dispatcher.dispatchEvent (event);\n\t\t\n\t}\n\t\n\t\n\tpublic static function exists (id:String, type:AssetType = null):Bool {\n\t\t\n\t\treturn LimeAssets.exists (id, cast type);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBitmapData (id:String, useCache:Bool = true):BitmapData {\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled && cache.hasBitmapData (id)) {\n\t\t\t\n\t\t\tvar bitmapData = cache.getBitmapData (id);\n\t\t\t\n\t\t\tif (isValidBitmapData (bitmapData)) {\n\t\t\t\t\n\t\t\t\treturn bitmapData;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar image = LimeAssets.getImage (id, false);\n\t\t\n\t\tif (image != null) {\n\t\t\t\n\t\t\t#if flash\n\t\t\tvar bitmapData = image.src;\n\t\t\t#else\n\t\t\tvar bitmapData = BitmapData.fromImage (image);\n\t\t\t#end\n\t\t\t\n\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\n\t\t\t\tcache.setBitmapData (id, bitmapData);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn bitmapData;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getBytes (id:String):ByteArray {\n\t\t\n\t\treturn LimeAssets.getBytes (id);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getFont (id:String, useCache:Bool = true):Font {\n\t\t\n\t\t#if (tools && !display && !macro)\n\t\t\n\t\tif (useCache && cache.enabled && cache.hasFont (id)) {\n\t\t\t\n\t\t\treturn cache.getFont (id);\n\t\t\t\n\t\t}\n\t\t\n\t\tvar limeFont = LimeAssets.getFont (id, false);\n\t\t\n\t\tif (limeFont != null) {\n\t\t\t\n\t\t\t#if flash\n\t\t\tvar font = limeFont.src;\n\t\t\t#else\n\t\t\tvar font = Font.__fromLimeFont (limeFont);\n\t\t\t#end\n\t\t\t\n\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\n\t\t\t\tcache.setFont (id, font);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn font;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn new Font ();\n\t\t\n\t}\n\t\n\t\n\tpublic static function getLibrary (name:String):LimeAssetLibrary {\n\t\t\n\t\treturn LimeAssets.getLibrary (name);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getMovieClip (id:String):MovieClip {\n\t\t\n\t\t#if (tools && !display)\n\n\t\tvar libraryName:String;\n\t\tvar symbolName:String;\n\t\tvar limeLibrary:LimeAssetLibrary;\n\n\t\tif (-1 == id.indexOf (\":\")) {\n\t\t\t// when no library specified, the last loaded symbol by that name is assumed\n\t\t\tsymbolName = id;\n\t\t\tlibraryName = libraryByLastLoadedSymbolName.get(symbolName);\n\t\t}\n\t\telse {\n\t\t\tlibraryName = id.substring (0, id.indexOf (\":\"));\n\t\t\tsymbolName = id.substr (id.indexOf (\":\") + 1);\n\t\t}\n\t\tlimeLibrary = getLibrary (libraryName);\n\n\t\tif (limeLibrary != null) {\n\t\t\t\n\t\t\tif (Std.is (limeLibrary, AssetLibrary)) {\n\t\t\t\t\n\t\t\t\tvar library:AssetLibrary = cast limeLibrary;\n\t\t\t\t\n\t\t\t\tif (library.exists (symbolName, cast AssetType.MOVIE_CLIP)) {\n\t\t\t\t\t\n\t\t\t\t\tif (library.isLocal (symbolName, cast AssetType.MOVIE_CLIP)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn library.getMovieClip (symbolName);\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tLog.error (\"MovieClip asset \\\"\" + id + \"\\\" exists, but only asynchronously\");\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tLog.error (\"There is no MovieClip asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tLog.error (\"There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getMusic (id:String, useCache:Bool = true):Sound {\n\t\t\n\t\t// TODO: Streaming sound\n\t\t\n\t\treturn getSound (id, useCache);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getPath (id:String):String {\n\t\t\n\t\treturn LimeAssets.getPath (id);\n\t\t\n\t}\n\t\n\t\n\tpublic static function getSound (id:String, useCache:Bool = true):Sound {\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled && cache.hasSound (id)) {\n\t\t\t\n\t\t\tvar sound = cache.getSound (id);\n\t\t\t\n\t\t\tif (isValidSound (sound)) {\n\t\t\t\t\n\t\t\t\treturn sound;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar buffer = LimeAssets.getAudioBuffer (id, false);\n\t\t\n\t\tif (buffer != null) {\n\t\t\t\n\t\t\t#if flash\n\t\t\tvar sound = buffer.src;\n\t\t\t#else\n\t\t\tvar sound = Sound.fromAudioBuffer (buffer);\n\t\t\t#end\n\t\t\t\n\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\n\t\t\t\tcache.setSound (id, sound);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn sound;\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn null;\n\t\t\n\t}\n\t\n\t\n\tpublic static function getText (id:String):String {\n\t\t\n\t\treturn LimeAssets.getText (id);\n\t\t\n\t}\n\t\n\t\n\tpublic static function hasEventListener (type:String):Bool {\n\t\t\n\t\treturn dispatcher.hasEventListener (type);\n\t\t\n\t}\n\t\n\t\n\tpublic static function hasLibrary (name:String):Bool {\n\t\t\n\t\treturn LimeAssets.hasLibrary (name);\n\t\t\n\t}\n\t\n\t\n\tpublic static function isLocal (id:String, type:AssetType = null, useCache:Bool = true):Bool {\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled) {\n\t\t\t\n\t\t\tif (type == AssetType.IMAGE || type == null) {\n\t\t\t\t\n\t\t\t\tif (cache.hasBitmapData (id)) return true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (type == AssetType.FONT || type == null) {\n\t\t\t\t\n\t\t\t\tif (cache.hasFont (id)) return true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (type == AssetType.SOUND || type == AssetType.MUSIC || type == null) {\n\t\t\t\t\n\t\t\t\tif (cache.hasSound (id)) return true;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar library = getLibrary (libraryName);\n\t\t\n\t\tif (library != null) {\n\t\t\t\n\t\t\treturn library.isLocal (symbolName, cast type);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t@:analyzer(ignore) private static function isValidBitmapData (bitmapData:BitmapData):Bool {\n\t\t\n\t\t#if (tools && !display)\n\t\t#if flash\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tbitmapData.width;\n\t\t\treturn true;\n\t\t\t\n\t\t} catch (e:Dynamic) {\n\t\t\t\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t\t#else\n\t\t\n\t\treturn (bitmapData != null && #if !lime_hybrid bitmapData.image != null #else bitmapData.__handle != null #end);\n\t\t\n\t\t#end\n\t\t#else\n\t\t\n\t\treturn true;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tprivate static function isValidSound (sound:Sound):Bool {\n\t\t\n\t\t#if ((tools && !display) && (cpp || neko || nodejs))\n\t\t\n\t\treturn true;\n\t\t//return (sound.__handle != null && sound.__handle != 0);\n\t\t\n\t\t#else\n\t\t\n\t\treturn true;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function list (type:AssetType = null):Array<String> {\n\t\t\n\t\treturn LimeAssets.list (cast type);\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadBitmapData (id:String, useCache:Null<Bool> = true):Future<BitmapData> {\n\t\t\n\t\tif (useCache == null) useCache = true;\n\t\t\n\t\tvar promise = new Promise<BitmapData> ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tif (useCache && cache.enabled && cache.hasBitmapData (id)) {\n\t\t\t\n\t\t\tvar bitmapData = cache.getBitmapData (id);\n\t\t\t\n\t\t\tif (isValidBitmapData (bitmapData)) {\n\t\t\t\t\n\t\t\t\tpromise.complete (bitmapData);\n\t\t\t\treturn promise.future;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tLimeAssets.loadImage (id, false).onComplete (function (image) {\n\t\t\t\n\t\t\tif (image != null) {\n\t\t\t\t\n\t\t\t\t#if flash\n\t\t\t\tvar bitmapData = image.src;\n\t\t\t\t#else\n\t\t\t\tvar bitmapData = BitmapData.fromImage (image);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\t\n\t\t\t\t\tcache.setBitmapData (id, bitmapData);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpromise.complete (bitmapData);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tpromise.error (\"[Assets] Could not load Image \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}).onError (promise.error).onProgress (promise.progress);\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadBytes (id:String):Future<ByteArray> {\n\t\t\n\t\tvar promise = new Promise<ByteArray> ();\n\t\tvar future = LimeAssets.loadBytes (id);\n\t\t\n\t\tfuture.onComplete (function (bytes) promise.complete (bytes));\n\t\tfuture.onProgress (function (progress, total) promise.progress (progress, total));\n\t\tfuture.onError (function (msg) promise.error (msg));\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFont (id:String, useCache:Null<Bool> = true):Future<Font> {\n\t\t\n\t\tif (useCache == null) useCache = true;\n\t\t\n\t\tvar promise = new Promise<Font> ();\n\t\t\n\t\t#if (tools && !display && !macro)\n\t\t\n\t\tif (useCache && cache.enabled && cache.hasFont (id)) {\n\t\t\t\n\t\t\tpromise.complete (cache.getFont (id));\n\t\t\treturn promise.future;\n\t\t\t\n\t\t}\n\t\t\n\t\tLimeAssets.loadFont (id).onComplete (function (limeFont) {\n\t\t\t\n\t\t\t#if flash\n\t\t\tvar font = limeFont.src;\n\t\t\t#else\n\t\t\tvar font = Font.__fromLimeFont (limeFont);\n\t\t\t#end\n\t\t\t\n\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\n\t\t\t\tcache.setFont (id, font);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tpromise.complete (font);\n\t\t\t\n\t\t}).onError (promise.error).onProgress (promise.progress);\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadLibrary (name:String):Future<LimeAssetLibrary> {\n\t\t\n\t\tvar future = LimeAssets.loadLibrary (name);\n\t\treturn future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadMusic (id:String, useCache:Null<Bool> = true):Future<Sound> {\n\t\t\n\t\tif (useCache == null) useCache = true;\n\t\t\n\t\t#if !html5\n\t\t\n\t\tvar promise = new Promise<Sound> ();\n\t\t\n\t\tLimeAssets.loadAudioBuffer (id, useCache).onComplete (function (buffer) {\n\t\t\t\n\t\t\tif (buffer != null) {\n\t\t\t\t\n\t\t\t\t#if flash\n\t\t\t\tvar sound = buffer.src;\n\t\t\t\t#else\n\t\t\t\tvar sound = Sound.fromAudioBuffer (buffer);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\t\n\t\t\t\t\tcache.setSound (id, sound);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpromise.complete (sound);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tpromise.error (\"[Assets] Could not load Sound \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}).onError (promise.error).onProgress (promise.progress);\n\t\treturn promise.future;\n\t\t\n\t\t#else\n\t\t\n\t\tvar future = new Future<Sound> (function () return getMusic (id, useCache));\n\t\treturn future;\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadMovieClip (id:String):Future<MovieClip> {\n\t\t\n\t\tvar promise = new Promise<MovieClip> ();\n\t\t\n\t\t#if (tools && !display)\n\t\t\n\t\tvar libraryName = id.substring (0, id.indexOf (\":\"));\n\t\tvar symbolName = id.substr (id.indexOf (\":\") + 1);\n\t\tvar limeLibrary = getLibrary (libraryName);\n\t\t\n\t\tif (limeLibrary != null) {\n\t\t\t\n\t\t\tif (Std.is (limeLibrary, AssetLibrary)) {\n\t\t\t\t\n\t\t\t\tvar library:AssetLibrary = cast limeLibrary;\n\t\t\t\t\n\t\t\t\tif (library.exists (symbolName, cast AssetType.MOVIE_CLIP)) {\n\t\t\t\t\t\n\t\t\t\t\tpromise.completeWith (library.loadMovieClip (symbolName));\n\t\t\t\t\treturn promise.future;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tpromise.error (\"[Assets] There is no MovieClip asset with an ID of \\\"\" + id + \"\\\"\");\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tpromise.error (\"[Assets] There is no asset library named \\\"\" + libraryName + \"\\\"\");\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadSound (id:String, useCache:Null<Bool> = true):Future<Sound> {\n\t\t\n\t\tif (useCache == null) useCache = true;\n\t\t\n\t\tvar promise = new Promise<Sound> ();\n\t\t\n\t\tLimeAssets.loadAudioBuffer (id, useCache).onComplete (function (buffer) {\n\t\t\t\n\t\t\tif (buffer != null) {\n\t\t\t\t\n\t\t\t\t#if flash\n\t\t\t\tvar sound = buffer.src;\n\t\t\t\t#else\n\t\t\t\tvar sound = Sound.fromAudioBuffer (buffer);\n\t\t\t\t#end\n\t\t\t\t\n\t\t\t\tif (useCache && cache.enabled) {\n\t\t\t\t\t\n\t\t\t\t\tcache.setSound (id, sound);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpromise.complete (sound);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tpromise.error (\"[Assets] Could not load Sound \\\"\" + id + \"\\\"\");\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}).onError (promise.error).onProgress (promise.progress);\n\t\treturn promise.future;\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadText (id:String):Future<String> {\n\t\t\n\t\tvar future = LimeAssets.loadText (id);\n\t\treturn future;\n\t\t\n\t}\n\t\n\t\n\t/**\n\t * Registers a new AssetLibrary with the Assets class\n\t * @param\tname\t\tThe name (prefix) to use for the library\n\t * @param\tlibrary\t\tAn AssetLibrary instance to register\n\t */\n\tpublic static function registerLibrary (name:String, library:AssetLibrary):Void {\n\t\t\n\t\tLimeAssets.registerLibrary (name, library);\n\n\t\tvar _library:SWFLiteLibrary = cast library;\n\n\t\t// remember every symbol name we come across and the library it belongs to\n\t\t// if two libraries have the symbol name, the last one loaded will shadow all former\n\t\tfor (symbol in _library.swf.symbols) {\n\n\t\t\tif (symbol.className != \"\" && Std.is (symbol, SpriteSymbol)) {\n\n\t\t\t\tlibraryByLastLoadedSymbolName.set(symbol.className, name);\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic static function removeEventListener (type:String, listener:Dynamic, capture:Bool = false):Void {\n\t\t\n\t\tdispatcher.removeEventListener (type, listener, capture);\n\t\t\n\t}\n\t\n\t\n\tprivate static function resolveClass (name:String):Class <Dynamic> {\n\t\t\n\t\treturn Type.resolveClass (name);\n\t\t\n\t}\n\t\n\t\n\tprivate static function resolveEnum (name:String):Enum <Dynamic> {\n\t\t\n\t\tvar value = Type.resolveEnum (name);\n\t\t\n\t\t#if flash\n\t\t\n\t\tif (value == null) {\n\t\t\t\n\t\t\treturn cast Type.resolveClass (name);\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\tpublic static function unloadLibrary (name:String):Void {\n\t\t\n\t\tLimeAssets.unloadLibrary (name);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Event Handlers\n\t\n\t\n\t\n\t\n\tprivate static function LimeAssets_onChange ():Void {\n\t\t\n\t\tdispatchEvent (new Event (Event.CHANGE));\n\t\t\n\t}\n\t\n\t\n}","package openfl.utils;\n\n\nimport haxe.io.Bytes;\nimport haxe.io.BytesData;\nimport haxe.io.FPHelper;\nimport lime.app.Future;\nimport lime.system.System;\nimport lime.utils.compress.Deflate;\nimport lime.utils.compress.LZMA;\nimport lime.utils.compress.Zlib;\nimport lime.utils.ArrayBuffer;\nimport lime.utils.BytePointer;\nimport lime.utils.Bytes in LimeBytes;\nimport lime.utils.DataPointer;\nimport openfl.errors.EOFError;\n\n@:access(haxe.io.Bytes)\n@:access(openfl.utils.ByteArrayData)\n@:forward(bytesAvailable, endian, objectEncoding, position, clear, compress, deflate, inflate, readBoolean, readByte, readBytes, readDouble, readFloat, readInt, readMultiByte, readShort, readUnsignedByte, readUnsignedInt, readUnsignedShort, readUTF, readUTFBytes, toString, uncompress, writeBoolean, writeByte, writeBytes, writeDouble, writeFloat, writeInt, writeMultiByte, writeShort, writeUnsignedInt, writeUTF, writeUTFBytes)\n\n\nabstract ByteArray(ByteArrayData) from ByteArrayData to ByteArrayData {\n\t\n\t\n\tpublic static var defaultObjectEncoding:UInt;\n\t\n\tprivate static var __bytePointer = new BytePointer ();\n\t\n\tpublic var length (get, set):Int;\n\t\n\t\n\tpublic inline function new (length:Int = 0):Void {\n\t\t\n\t\t#if (display || flash)\n\t\tthis = new ByteArrayData ();\n\t\tthis.length = length;\n\t\t#else\n\t\tthis = new ByteArrayData (length);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess @:noCompletion private inline function get (index:Int):Int {\n\t\t\n\t\t#if display\n\t\treturn 0;\n\t\t#elseif flash\n\t\treturn this[index];\n\t\t#else\n\t\treturn this.get (index);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess @:noCompletion private inline function set (index:Int, value:Int):Int {\n\t\t\n\t\t#if display\n\t\t#elseif flash\n\t\tthis[index] = value;\n\t\t#else\n\t\tthis.__resize (index + 1);\n\t\tthis.set (index, value);\n\t\t#end\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n\t@:from public static function fromArrayBuffer (buffer:ArrayBuffer):ByteArray {\n\t\t\n\t\tif (buffer == null) return null;\n\t\t\n\t\t#if display\n\t\treturn null;\n\t\t#elseif js\n\t\treturn ByteArrayData.fromBytes (Bytes.ofData (buffer));\n\t\t#elseif flash\n\t\treturn (buffer:Bytes).getData ();\n\t\t#else\n\t\treturn ByteArrayData.fromBytes ((buffer:Bytes));\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from public static function fromBytes (bytes:Bytes):ByteArray {\n\t\t\n\t\tif (bytes == null) return null;\n\t\t\n\t\t#if display\n\t\t\n\t\treturn null;\n\t\t\n\t\t#else\n\t\t\n\t\tif (Std.is (bytes, ByteArrayData)) {\n\t\t\t\n\t\t\treturn cast bytes;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\t#if flash\n\t\t\treturn bytes.getData ();\n\t\t\t#else\n\t\t\treturn ByteArrayData.fromBytes (bytes);\n\t\t\t#end\n\t\t\t\n\t\t}\n\t\t\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromBytesData (bytesData:BytesData):ByteArray {\n\t\t\n\t\tif (bytesData == null) return null;\n\t\t\n\t\t#if display\n\t\treturn null;\n\t\t#elseif flash\n\t\treturn bytesData;\n\t\t#else\n\t\treturn ByteArrayData.fromBytes (Bytes.ofData (bytesData));\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromFile (path:String):ByteArray {\n\t\t\n\t\treturn LimeBytes.fromFile (path);\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromBytes (bytes:Bytes):Future<ByteArray> {\n\t\t\n\t\treturn LimeBytes.loadFromBytes (bytes).then (function (limeBytes:LimeBytes) {\n\t\t\t\n\t\t\tvar byteArray:ByteArray = limeBytes;\n\t\t\treturn Future.withValue (byteArray);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\tpublic static function loadFromFile (path:String):Future<ByteArray> {\n\t\t\n\t\treturn LimeBytes.loadFromFile (path).then (function (limeBytes:LimeBytes) {\n\t\t\t\n\t\t\tvar byteArray:ByteArray = limeBytes;\n\t\t\treturn Future.withValue (byteArray);\n\t\t\t\n\t\t});\n\t\t\n\t}\n\t\n\t\n\t@:from @:noCompletion public static function fromLimeBytes (bytes:LimeBytes):ByteArray {\n\t\t\n\t\treturn fromBytes (bytes);\n\t\t\n\t}\n\t\n\t\n\t@:to @:noCompletion public static function toArrayBuffer (byteArray:ByteArray):ArrayBuffer {\n\t\t\n\t\t#if display\n\t\treturn null;\n\t\t#elseif js\n\t\treturn (byteArray:ByteArrayData).getData ();\n\t\t#elseif flash\n\t\treturn Bytes.ofData (byteArray);\n\t\t#else\n\t\treturn (byteArray:ByteArrayData);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:to @:noCompletion private static function toBytePointer (byteArray:ByteArray):BytePointer {\n\t\t\n\t\t#if !display\n\t\t__bytePointer.set (#if flash byteArray #else (byteArray:ByteArrayData) #end, byteArray.position);\n\t\t#end\n\t\treturn __bytePointer;\n\t\t\n\t}\n\t\n\t\n\t#if (sys || display)\n\t@:to @:noCompletion private static function toDataPointer (byteArray:ByteArray):DataPointer {\n\t\t\n\t\t#if !display\n\t\t__bytePointer.set ((byteArray:ByteArrayData), byteArray.position);\n\t\t#end\n\t\treturn __bytePointer;\n\t\t\n\t}\n\t#end\n\t\n\t\n\t@:to @:noCompletion private static function toBytes (byteArray:ByteArray):Bytes {\n\t\t\n\t\t#if display\n\t\treturn null;\n\t\t#elseif flash\n\t\treturn Bytes.ofData (byteArray);\n\t\t#else\n\t\treturn (byteArray:ByteArrayData);\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t#if !display\n\t@:to @:noCompletion private static function toBytesData (byteArray:ByteArray):BytesData {\n\t\t\n\t\t#if display\n\t\treturn null;\n\t\t#elseif flash\n\t\treturn byteArray;\n\t\t#else\n\t\treturn (byteArray:ByteArrayData).getData ();\n\t\t#end\n\t\t\n\t}\n\t#end\n\t\n\t\n\t@:to @:noCompletion private static function toLimeBytes (byteArray:ByteArray):LimeBytes {\n\t\t\n\t\treturn fromBytes (byteArray);\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private function get_length ():Int {\n\t\t\n\t\t#if display\n\t\treturn 0;\n\t\t#else\n\t\treturn this.length;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private function set_length (value:Int):Int {\n\t\t\n\t\t#if display\n\t\t#elseif flash\n\t\tthis.length = value;\n\t\t#else\n\t\tif (value > 0) {\n\t\t\t\n\t\t\tthis.__resize (value);\n\t\t\tif (value < this.position) this.position = value;\n\t\t\t\n\t\t}\n\t\t\n\t\tthis.length = value;\n\t\t#end\n\t\t\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if (!display && !flash)\n\n\n// TODO: Export as \"ByteArray\" in OpenFL-JS\n\n@:autoBuild(lime._macros.AssetsMacro.embedByteArray())\n\n@:noCompletion @:dox(hide) class ByteArrayData extends Bytes implements IDataInput implements IDataOutput {\n\t\n\t\n\tprivate static var __defaultEndian:Endian = null;\n\t\n\tpublic var bytesAvailable (get, never):UInt;\n\tpublic var endian (get, set):Endian;\n\tpublic var objectEncoding:UInt;\n\tpublic var position:Int;\n\t\n\tprivate var __endian:Endian;\n\tprivate var __length:Int;\n\t\n\t\n\t#if openfljs\n\tprivate static function __init__ () {\n\t\t\n\t\tuntyped global.Object.defineProperties (ByteArrayData.prototype, {\n\t\t\t\"bytesAvailable\": { get: untyped __js__ (\"function () { return this.get_bytesAvailable (); }\") },\n\t\t\t\"endian\": { get: untyped __js__ (\"function () { return this.get_endian (); }\"), set: untyped __js__ (\"function (v) { return this.set_endian (v); }\") },\n\t\t\t//\"length\": { get: p.get_length, set: p.set_length }\n\t\t});\n\t\t\n\t}\n\t#end\n\t\n\t\n\tpublic function new (length:Int = 0) {\n\t\t\n\t\tvar bytes = Bytes.alloc (length);\n\t\t\n\t\t#if sys\n\t\tif (length > 0) {\n\t\t\t\n\t\t\tbytes.fill (0, length, 0);\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\t#if js\n\t\tsuper (bytes.b.buffer);\n\t\t#else\n\t\tsuper (length, bytes.getData ());\n\t\t#end\n\t\t\n\t\t__length = length;\n\t\t\n\t\tif (__defaultEndian == null) {\n\t\t\t\n\t\t\tif (System.endianness == LITTLE_ENDIAN) {\n\t\t\t\t\n\t\t\t\t__defaultEndian = LITTLE_ENDIAN;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t__defaultEndian = BIG_ENDIAN;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t#if openfl_big_endian\n\t\tendian = BIG_ENDIAN;\n\t\t#else\n\t\tendian = __defaultEndian;\n\t\t#end\n\t\t\n\t\tposition = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function clear ():Void {\n\t\t\n\t\tlength = 0;\n\t\tposition = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function compress (algorithm:CompressionAlgorithm = ZLIB):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (__length > length) {\n\t\t\t\n\t\t\tvar cacheLength = length;\n\t\t\tthis.length = __length;\n\t\t\tvar data = Bytes.alloc (cacheLength);\n\t\t\tdata.blit (0, this, 0, cacheLength);\n\t\t\t__setData (data);\n\t\t\tthis.length = cacheLength;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tvar bytes = switch (algorithm) {\n\t\t\t\n\t\t\tcase CompressionAlgorithm.DEFLATE: Deflate.compress (this);\n\t\t\tcase CompressionAlgorithm.LZMA: LZMA.compress (this);\n\t\t\tdefault: Zlib.compress (this);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (bytes != null) {\n\t\t\t\n\t\t\t__setData (bytes);\n\t\t\t\n\t\t\tlength = __length;\n\t\t\tposition = length;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function deflate ():Void {\n\t\t\n\t\tcompress (CompressionAlgorithm.DEFLATE);\n\t\t\n\t}\n\t\n\t\n\tpublic static function fromBytes (bytes:Bytes):ByteArrayData {\n\t\t\n\t\tvar result = new ByteArrayData ();\n\t\tresult.__fromBytes (bytes);\n\t\treturn result;\n\t\t\n\t}\n\t\n\t\n\tpublic function inflate () {\n\t\t\n\t\tuncompress (CompressionAlgorithm.DEFLATE);\n\t\t\n\t}\n\t\n\t\n\tpublic function readBoolean ():Bool {\n\t\t\n\t\tif (position < length) {\n\t\t\t\n\t\t\treturn (get (position++) != 0);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthrow new EOFError ();\n\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function readByte ():Int {\n\t\t\n\t\tvar value = readUnsignedByte ();\n\t\t\n\t\tif (value & 0x80 != 0) {\n\t\t\t\n\t\t\treturn value - 0x100;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function readBytes (bytes:ByteArray, offset:Int = 0, length:Int = 0):Void {\n\t\t\n\t\tif (length == 0) length = this.length - position;\n\t\t\n\t\tif (position + length > this.length) {\n\t\t\t\n\t\t\tthrow new EOFError ();\n\t\t\t\n\t\t}\n\t\t\n\t\tif ((bytes:ByteArrayData).length < offset + length) {\n\t\t\t\n\t\t\t(bytes:ByteArrayData).__resize (offset + length);\n\t\t\t\n\t\t}\n\t\t\n\t\t(bytes:ByteArrayData).blit (offset, this, position, length);\n\t\tposition += length;\n\t\t\n\t}\n\t\n\t\n\tpublic function readDouble ():Float {\n\t\t\n\t\tvar ch1 = readInt ();\n\t\tvar ch2 = readInt ();\n\t\t\n\t\tif (endian == LITTLE_ENDIAN) {\n\t\t\t\n\t\t\treturn FPHelper.i64ToDouble (ch1, ch2);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn FPHelper.i64ToDouble (ch2, ch1);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function readFloat ():Float {\n\t\t\n\t\treturn FPHelper.i32ToFloat (readInt ());\n\t\t\n\t}\n\t\n\t\n\tpublic function readInt ():Int {\n\t\t\n\t\tvar ch1 = readUnsignedByte ();\n\t\tvar ch2 = readUnsignedByte ();\n\t\tvar ch3 = readUnsignedByte ();\n\t\tvar ch4 = readUnsignedByte ();\n\t\t\n\t\tif (endian == LITTLE_ENDIAN) {\n\t\t\t\n\t\t\treturn (ch4 << 24) | (ch3 << 16) | (ch2 << 8) | ch1;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn (ch1 << 24) | (ch2 << 16) | (ch3 << 8) | ch4;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function readMultiByte (length:Int, charSet:String):String {\n\t\t\n\t\treturn readUTFBytes (length);\n\t\t\n\t}\n\t\n\t\n\tpublic function readShort ():Int {\n\t\t\n\t\tvar ch1 = readUnsignedByte ();\n\t\tvar ch2 = readUnsignedByte ();\n\t\t\n\t\tvar value;\n\t\t\n\t\tif (endian == LITTLE_ENDIAN) {\n\t\t\t\n\t\t\tvalue = ((ch2 << 8) | ch1);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvalue = ((ch1 << 8) | ch2);\n\t\t\t\n\t\t}\n\t\t\n\t\tif ((value & 0x8000) != 0) {\n\t\t\t\n\t\t\treturn value - 0x10000;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn value;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function readUnsignedByte ():Int {\n\t\t\n\t\tif (position < length) {\n\t\t\t\n\t\t\treturn get (position++);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tthrow new EOFError ();\n\t\t\treturn 0;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function readUnsignedInt ():Int {\n\t\t\n\t\tvar ch1 = readUnsignedByte ();\n\t\tvar ch2 = readUnsignedByte ();\n\t\tvar ch3 = readUnsignedByte ();\n\t\tvar ch4 = readUnsignedByte ();\n\t\t\n\t\tif (endian == LITTLE_ENDIAN) {\n\t\t\t\n\t\t\treturn (ch4 << 24) | (ch3 << 16) | (ch2 << 8) | ch1;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn (ch1 << 24) | (ch2 << 16) | (ch3 << 8) | ch4;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function readUnsignedShort ():Int {\n\t\t\n\t\tvar ch1 = readUnsignedByte ();\n\t\tvar ch2 = readUnsignedByte ();\n\t\t\n\t\tif (endian == LITTLE_ENDIAN) {\n\t\t\t\n\t\t\treturn (ch2 << 8) + ch1;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\treturn (ch1 << 8) | ch2;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function readUTF ():String {\n\t\t\n\t\tvar bytesCount = readUnsignedShort ();\n\t\treturn readUTFBytes (bytesCount);\n\t\t\n\t}\n\t\n\t\n\tpublic function readUTFBytes (length:Int):String {\n\t\t\n\t\tif (position + length > this.length) {\n\t\t\t\n\t\t\tthrow new EOFError ();\n\t\t\t\n\t\t}\n\t\t\n\t\tposition += length;\n\t\t\n\t\t\n\t\treturn getString (position - length, length);\n\t\t\n\t}\n\t\n\t\n\tpublic function uncompress (algorithm:CompressionAlgorithm = ZLIB):Void {\n\t\t\n\t\t#if (js && html5)\n\t\tif (__length > length) {\n\t\t\t\n\t\t\tvar cacheLength = length;\n\t\t\tthis.length = __length;\n\t\t\tvar data = Bytes.alloc (cacheLength);\n\t\t\tdata.blit (0, this, 0, cacheLength);\n\t\t\t__setData (data);\n\t\t\tthis.length = cacheLength;\n\t\t\t\n\t\t}\n\t\t#end\n\t\t\n\t\tvar bytes = switch (algorithm) {\n\t\t\t\n\t\t\tcase CompressionAlgorithm.DEFLATE: Deflate.decompress (this);\n\t\t\tcase CompressionAlgorithm.LZMA: LZMA.decompress (this);\n\t\t\tdefault: Zlib.decompress (this);\n\t\t\t\n\t\t};\n\t\t\n\t\tif (bytes != null) {\n\t\t\t\n\t\t\t__setData (bytes);\n\t\t\t\n\t\t\tlength = __length;\n\t\t\t\n\t\t}\n\t\t\n\t\tposition = 0;\n\t\t\n\t}\n\t\n\t\n\tpublic function writeBoolean (value:Bool):Void {\n\t\t\n\t\tthis.writeByte (value ? 1 : 0);\n\t\t\n\t}\n\t\n\t\n\tpublic function writeByte (value:Int):Void {\n\t\t\n\t\t__resize (position + 1);\n\t\tset (position++, value & 0xFF);\n\t\t\n\t}\n\t\n\t\n\tpublic function writeBytes (bytes:ByteArray, offset:UInt = 0, length:UInt = 0):Void {\n\t\t\n\t\tif (bytes.length == 0) return;\n\t\tif (length == 0) length = bytes.length - offset;\n\t\t\n\t\t__resize (position + length);\n\t\tblit (position, (bytes:ByteArrayData), offset, length);\n\t\t\n\t\tposition += length;\n\t\t\n\t}\n\t\n\t\n\tpublic function writeDouble (value:Float):Void {\n\t\t\n\t\tvar int64 = FPHelper.doubleToI64 (value);\n\t\t\n\t\tif (endian == LITTLE_ENDIAN) {\n\t\t\t\n\t\t\twriteInt (int64.low);\n\t\t\twriteInt (int64.high);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\twriteInt (int64.high);\n\t\t\twriteInt (int64.low);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function writeFloat (value:Float):Void {\n\t\t\n\t\tif (endian == LITTLE_ENDIAN) {\n\t\t\t\n\t\t\t__resize (position + 4);\n\t\t\tsetFloat (position, value);\n\t\t\tposition += 4;\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tvar int = FPHelper.floatToI32 (value);\n\t\t\twriteInt (int);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function writeInt (value:Int):Void {\n\t\t\n\t\t__resize (position + 4);\n\t\t\n\t\tif (endian == LITTLE_ENDIAN) {\n\t\t\t\n\t\t\tset (position++, value & 0xFF);\n\t\t\tset (position++, (value >> 8) & 0xFF);\n\t\t\tset (position++, (value >> 16) & 0xFF);\n\t\t\tset (position++, (value >> 24) & 0xFF);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tset (position++, (value >> 24) & 0xFF);\n\t\t\tset (position++, (value >> 16) & 0xFF);\n\t\t\tset (position++, (value >> 8) & 0xFF);\n\t\t\tset (position++, value & 0xFF);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function writeMultiByte (value:String, charSet:String):Void {\n\t\t\n\t\twriteUTFBytes (value);\n\t\t\n\t}\n\t\n\t\n\tpublic function writeShort (value:Int):Void {\n\t\t\n\t\t__resize (position + 2);\n\t\t\n\t\tif (endian == LITTLE_ENDIAN) {\n\t\t\t\n\t\t\tset (position++, value);\n\t\t\tset (position++, value >> 8);\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tset (position++, value >> 8);\n\t\t\tset (position++, value);\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tpublic function writeUnsignedInt (value:Int):Void {\n\t\t\n\t\twriteInt (value);\n\t\t\n\t}\n\t\n\t\n\tpublic function writeUTF (value:String):Void {\n\t\t\n\t\tvar bytes = Bytes.ofString (value);\n\t\t\n\t\twriteShort (bytes.length);\n\t\twriteBytes (bytes);\n\t\t\n\t}\n\t\n\t\n\tpublic function writeUTFBytes (value:String):Void {\n\t\t\n\t\tvar bytes = Bytes.ofString (value);\n\t\twriteBytes (Bytes.ofString (value));\n\t\t\n\t}\n\t\n\t\n\tprivate function __fromBytes (bytes:Bytes):Void {\n\t\t\n\t\t__setData (bytes);\n\t\tlength = bytes.length;\n\t\t\n\t}\n\t\n\t\n\tprivate function __resize (size:Int) {\n\t\t\n\t\tif (size > __length) {\n\t\t\t\n\t\t\tvar bytes = Bytes.alloc (((size + 1) * 3) >> 1);\n\t\t\t#if sys\n\t\t\tbytes.fill (length, size, 0);\n\t\t\t#end\n\t\t\tvar cacheLength = length;\n\t\t\tlength = __length;\n\t\t\tbytes.blit (0, this, 0, __length);\n\t\t\tlength = cacheLength;\n\t\t\t__setData (bytes);\n\t\t\t\n\t\t}\n\t\t\n\t\tif (length < size) {\n\t\t\t\n\t\t\tlength = size;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\tprivate inline function __setData (bytes:Bytes):Void {\n\t\t\n\t\t#if eval\n\t\t// TODO: Not quite correct, but this will probably\n\t\t// not be called while in a macro\n\t\tvar count = bytes.length < length ? bytes.length : length;\n\t\tfor (i in 0...count) set (i, bytes.get (i));\n\t\t#else\n\t\tb = bytes.b;\n\t\t#end\n\t\t\n\t\t__length = bytes.length;\n\t\t\n\t\t#if js\n\t\tdata = bytes.data;\n\t\t#end\n\t\t\n\t}\n\t\n\t\n\t\n\t\n\t// Get & Set Methods\n\t\n\t\n\t\n\t\n\t@:noCompletion private inline function get_bytesAvailable ():Int {\n\t\t\n\t\treturn length - position;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function get_endian ():Endian {\n\t\t\n\t\treturn __endian;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion private inline function set_endian (value:Endian):Endian {\n\t\t\n\t\treturn __endian = value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#else\n\n\n/**\n * The ByteArray class provides methods and properties to optimize reading,\n * writing, and working with binary data.\n *\n * _Note:_ The ByteArray class is for advanced developers who need to\n * access data on the byte level.\n *\n * In-memory data is a packed array(the most compact representation for\n * the data type) of bytes, but an instance of the ByteArray class can be\n * manipulated with the standard `[]`(array access) operators. It\n * also can be read and written to as an in-memory file, using methods similar\n * to those in the URLStream and Socket classes.\n *\n * In addition, zlib compression and decompression are supported, as well\n * as Action Message Format(AMF) object serialization.\n *\n * Possible uses of the ByteArray class include the following:\n * \n *  * Creating a custom protocol to connect to a server.\n *  * Writing your own URLEncoder/URLDecoder.\n *  * Writing your own AMF/Remoting packet.\n *  * Optimizing the size of your data by using data types.\n *  * Working with binary data loaded from a file in Adobe<sup>®</sup>\n * AIR<sup>®</sup>.\n * \n * \n */\n\n#if flash\n@:native(\"flash.utils.ByteArray\")\n#end\n\nextern class ByteArrayData implements IDataOutput implements IDataInput implements ArrayAccess<Int> {\n\t\n\t\n\t/**\n\t * Denotes the default object encoding for the ByteArray class to use for a\n\t * new ByteArray instance. When you create a new ByteArray instance, the\n\t * encoding on that instance starts with the value of\n\t * `defaultObjectEncoding`. The `defaultObjectEncoding`\n\t * property is initialized to `ObjectEncoding.AMF3`.\n\t *\n\t * When an object is written to or read from binary data, the\n\t * `objectEncoding` value is used to determine whether the\n\t * ActionScript 3.0, ActionScript2.0, or ActionScript 1.0 format should be\n\t * used. The value is a constant from the ObjectEncoding class.\n\t */\n\tpublic static var defaultObjectEncoding:UInt;\n\t\n\t/**\n\t * The number of bytes of data available for reading from the current\n\t * position in the byte array to the end of the array.\n\t *\n\t * Use the `bytesAvailable` property in conjunction with the\n\t * read methods each time you access a ByteArray object to ensure that you\n\t * are reading valid data.\n\t */\n\t#if (flash && !display)\n\tpublic var bytesAvailable (default, never):UInt;\n\t#else\n\tpublic var bytesAvailable (get, never):UInt; private inline function get_bytesAvailable ():UInt { return 0; }\n\t#end\n\t\n\t/**\n\t * Changes or reads the byte order for the data; either\n\t * `Endian.BIG_ENDIAN` or `Endian.LITTLE_ENDIAN`.\n\t */\n\t#if (flash && !display)\n\tpublic var endian:Endian;\n\t#else\n\tpublic var endian (get, set):Endian;\n\t\n\tprivate function get_endian ():Endian;\n\tprivate function set_endian (value:Endian):Endian;\n\t#end\n\t\n\t/**\n\t * The length of the ByteArray object, in bytes.\n\t *\n\t * If the length is set to a value that is larger than the current length,\n\t * the right side of the byte array is filled with zeros.\n\t *\n\t * If the length is set to a value that is smaller than the current\n\t * length, the byte array is truncated.\n\t */\n\tpublic var length:UInt;\n\t\n\t/**\n\t * Used to determine whether the ActionScript 3.0, ActionScript 2.0, or\n\t * ActionScript 1.0 format should be used when writing to, or reading from, a\n\t * ByteArray instance. The value is a constant from the ObjectEncoding class.\n\t */\n\tpublic var objectEncoding:UInt;\n\t\n\t/**\n\t * Moves, or returns the current position, in bytes, of the file pointer into\n\t * the ByteArray object. This is the point at which the next call to a read\n\t * method starts reading or a write method starts writing.\n\t */\n\tpublic var position:UInt;\n\t\n\t#if flash\n\t@:noCompletion @:dox(hide) @:require(flash11_4) public var shareable:Bool;\n\t#end\n\t\n\t\n\t/**\n\t * Creates a ByteArray instance representing a packed array of bytes, so that\n\t * you can use the methods and properties in this class to optimize your data\n\t * storage and stream.\n\t */\n\tpublic function new ();\n\t\n\t\n\t#if flash\n\t@:noCompletion @:dox(hide) @:require(flash11_4) public function atomicCompareAndSwapIntAt (byteIndex:Int, expectedValue:Int, newValue:Int):Int;\n\t#end\n\t\n\t\n\t#if flash\n\t@:noCompletion @:dox(hide) @:require(flash11_4) public function atomicCompareAndSwapLength (expectedLength:Int, newLength:Int):Int;\n\t#end\n\t\n\t\n\t/**\n\t * Clears the contents of the byte array and resets the `length`\n\t * and `position` properties to 0. Calling this method explicitly\n\t * frees up the memory used by the ByteArray instance.\n\t * \n\t */\n\tpublic function clear ():Void;\n\t\n\t\n\t/**\n\t * Compresses the byte array. The entire byte array is compressed. For\n\t * content running in Adobe AIR, you can specify a compression algorithm by\n\t * passing a value(defined in the CompressionAlgorithm class) as the\n\t * `algorithm` parameter. Flash Player supports only the default\n\t * algorithm, zlib.\n\t *\n\t * After the call, the `length` property of the ByteArray is\n\t * set to the new length. The `position` property is set to the\n\t * end of the byte array.\n\t *\n\t * The zlib compressed data format is described at \n\t * [http://www.ietf.org/rfc/rfc1950.txt](http://www.ietf.org/rfc/rfc1950.txt).\n\t *\n\t * The deflate compression algorithm is described at \n\t * [http://www.ietf.org/rfc/rfc1951.txt](http://www.ietf.org/rfc/rfc1951.txt).\n\t *\n\t * The deflate compression algorithm is used in several compression\n\t * formats, such as zlib, gzip, some zip implementations, and others. When\n\t * data is compressed using one of those compression formats, in addition to\n\t * storing the compressed version of the original data, the compression\n\t * format data(for example, the .zip file) includes metadata information.\n\t * Some examples of the types of metadata included in various file formats\n\t * are file name, file modification date/time, original file size, optional\n\t * comments, checksum data, and more.\n\t *\n\t * For example, when a ByteArray is compressed using the zlib algorithm,\n\t * the resulting ByteArray is structured in a specific format. Certain bytes\n\t * contain metadata about the compressed data, while other bytes contain the\n\t * actual compressed version of the original ByteArray data. As defined by\n\t * the zlib compressed data format specification, those bytes(that is, the\n\t * portion containing the compressed version of the original data) are\n\t * compressed using the deflate algorithm. Consequently those bytes are\n\t * identical to the result of calling `compress(<ph\n\t * outputclass=\"javascript\">air.CompressionAlgorithm.DEFLATE)` on the\n\t * original ByteArray. However, the result from `compress(<ph\n\t * outputclass=\"javascript\">air.CompressionAlgorithm.ZLIB)` includes\n\t * the extra metadata, while the\n\t * `compress(CompressionAlgorithm.DEFLATE)` result includes only\n\t * the compressed version of the original ByteArray data and nothing\n\t * else.\n\t *\n\t * In order to use the deflate format to compress a ByteArray instance's\n\t * data in a specific format such as gzip or zip, you cannot simply call\n\t * `compress(CompressionAlgorithm.DEFLATE)`. You must create a\n\t * ByteArray structured according to the compression format's specification,\n\t * including the appropriate metadata as well as the compressed data obtained\n\t * using the deflate format. Likewise, in order to decode data compressed in\n\t * a format such as gzip or zip, you can't simply call\n\t * `uncompress(CompressionAlgorithm.DEFLATE)` on that data. First,\n\t * you must separate the metadata from the compressed data, and you can then\n\t * use the deflate format to decompress the compressed data.\n\t * \n\t */\n\tpublic function compress (algorithm:CompressionAlgorithm = null):Void;\n\t\n\t\n\t/**\n\t * Compresses the byte array using the deflate compression algorithm. The\n\t * entire byte array is compressed.\n\t *\n\t * After the call, the `length` property of the ByteArray is\n\t * set to the new length. The `position` property is set to the\n\t * end of the byte array.\n\t *\n\t * The deflate compression algorithm is described at \n\t * [http://www.ietf.org/rfc/rfc1951.txt](http://www.ietf.org/rfc/rfc1951.txt).\n\t *\n\t * In order to use the deflate format to compress a ByteArray instance's\n\t * data in a specific format such as gzip or zip, you cannot simply call\n\t * `deflate()`. You must create a ByteArray structured according\n\t * to the compression format's specification, including the appropriate\n\t * metadata as well as the compressed data obtained using the deflate format.\n\t * Likewise, in order to decode data compressed in a format such as gzip or\n\t * zip, you can't simply call `inflate()` on that data. First, you\n\t * must separate the metadata from the compressed data, and you can then use\n\t * the deflate format to decompress the compressed data.\n\t * \n\t */\n\tpublic function deflate ():Void;\n\t\n\t\n\t/**\n\t * Decompresses the byte array using the deflate compression algorithm. The\n\t * byte array must have been compressed using the same algorithm.\n\t *\n\t * After the call, the `length` property of the ByteArray is\n\t * set to the new length. The `position` property is set to 0.\n\t *\n\t * The deflate compression algorithm is described at \n\t * [http://www.ietf.org/rfc/rfc1951.txt](http://www.ietf.org/rfc/rfc1951.txt).\n\t *\n\t * In order to decode data compressed in a format that uses the deflate\n\t * compression algorithm, such as data in gzip or zip format, it will not\n\t * work to simply call `inflate()` on a ByteArray containing the\n\t * compression formation data. First, you must separate the metadata that is\n\t * included as part of the compressed data format from the actual compressed\n\t * data. For more information, see the `compress()` method\n\t * description.\n\t * \n\t * @throws IOError The data is not valid compressed data; it was not\n\t *                 compressed with the same compression algorithm used to\n\t *                 compress.\n\t */\n\tpublic function inflate ():Void;\n\t\n\t\n\t/**\n\t * Reads a Boolean value from the byte stream. A single byte is read, and\n\t * `true` is returned if the byte is nonzero, `false`\n\t * otherwise.\n\t * \n\t * @return Returns `true` if the byte is nonzero,\n\t *         `false` otherwise.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readBoolean ():Bool;\n\t\n\t\n\t/**\n\t * Reads a signed byte from the byte stream.\n\t *\n\t * The returned value is in the range -128 to 127.\n\t * \n\t * @return An integer between -128 and 127.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readByte ():Int;\n\t\n\t\n\t/**\n\t * Reads the number of data bytes, specified by the `length`\n\t * parameter, from the byte stream. The bytes are read into the ByteArray\n\t * object specified by the `bytes` parameter, and the bytes are\n\t * written into the destination ByteArray starting at the position specified\n\t * by `offset`.\n\t * \n\t * @param bytes  The ByteArray object to read data into.\n\t * @param offset The offset(position) in `bytes` at which the\n\t *               read data should be written.\n\t * @param length The number of bytes to read. The default value of 0 causes\n\t *               all available data to be read.\n\t * @throws EOFError   There is not sufficient data available to read.\n\t * @throws RangeError The value of the supplied offset and length, combined,\n\t *                    is greater than the maximum for a uint.\n\t */\n\tpublic function readBytes (bytes:ByteArray, offset:UInt = 0, length:UInt = 0):Void;\n\t\n\t\n\t/**\n\t * Reads an IEEE 754 double-precision(64-bit) floating-point number from the\n\t * byte stream.\n\t * \n\t * @return A double-precision(64-bit) floating-point number.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readDouble ():Float;\n\t\n\t\n\t/**\n\t * Reads an IEEE 754 single-precision(32-bit) floating-point number from the\n\t * byte stream.\n\t * \n\t * @return A single-precision(32-bit) floating-point number.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readFloat ():Float;\n\t\n\t\n\t/**\n\t * Reads a signed 32-bit integer from the byte stream.\n\t *\n\t * The returned value is in the range -2147483648 to 2147483647.\n\t * \n\t * @return A 32-bit signed integer between -2147483648 and 2147483647.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readInt ():Int;\n\t\n\t\n\t/**\n\t * Reads a multibyte string of specified length from the byte stream using\n\t * the specified character set.\n\t * \n\t * @param length  The number of bytes from the byte stream to read.\n\t * @param charSet The string denoting the character set to use to interpret\n\t *                the bytes. Possible character set strings include\n\t *                `\"shift-jis\"`, `\"cn-gb\"`,\n\t *                `\"iso-8859-1\"`, and others. For a complete list,\n\t *                see <a href=\"../../charset-codes.html\">Supported Character\n\t *                Sets</a>.\n\t *\n\t *                **Note:** If the value for the `charSet`\n\t *                parameter is not recognized by the current system, the\n\t *                application uses the system's default code page as the\n\t *                character set. For example, a value for the\n\t *                `charSet` parameter, as in\n\t *                `myTest.readMultiByte(22, \"iso-8859-01\")` that\n\t *                uses `01` instead of `1` might work\n\t *                on your development system, but not on another system. On\n\t *                the other system, the application will use the system's\n\t *                default code page.\n\t * @return UTF-8 encoded string.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readMultiByte (length:UInt, charSet:String):String;\n\t\n\t\n\t/**\n\t * Reads an object from the byte array, encoded in AMF serialized format.\n\t * \n\t * @return The deserialized object.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\t#if flash\n\t@:noCompletion @:dox(hide) public function readObject ():Dynamic;\n\t#end\n\t\n\t\n\t/**\n\t * Reads a signed 16-bit integer from the byte stream.\n\t *\n\t * The returned value is in the range -32768 to 32767.\n\t * \n\t * @return A 16-bit signed integer between -32768 and 32767.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readShort ():Int;\n\t\n\t\n\t/**\n\t * Reads a UTF-8 string from the byte stream. The string is assumed to be\n\t * prefixed with an unsigned short indicating the length in bytes.\n\t * \n\t * @return UTF-8 encoded string.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readUTF ():String;\n\t\n\t\n\t/**\n\t * Reads a sequence of UTF-8 bytes specified by the `length`\n\t * parameter from the byte stream and returns a string.\n\t * \n\t * @param length An unsigned short indicating the length of the UTF-8 bytes.\n\t * @return A string composed of the UTF-8 bytes of the specified length.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readUTFBytes (length:UInt):String;\n\t\n\t\n\t/**\n\t * Reads an unsigned byte from the byte stream.\n\t *\n\t * The returned value is in the range 0 to 255. \n\t * \n\t * @return A 32-bit unsigned integer between 0 and 255.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readUnsignedByte ():UInt;\n\t\n\t\n\t/**\n\t * Reads an unsigned 32-bit integer from the byte stream.\n\t *\n\t * The returned value is in the range 0 to 4294967295. \n\t * \n\t * @return A 32-bit unsigned integer between 0 and 4294967295.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readUnsignedInt ():UInt;\n\t\n\t\n\t/**\n\t * Reads an unsigned 16-bit integer from the byte stream.\n\t *\n\t * The returned value is in the range 0 to 65535. \n\t * \n\t * @return A 16-bit unsigned integer between 0 and 65535.\n\t * @throws EOFError There is not sufficient data available to read.\n\t */\n\tpublic function readUnsignedShort ():UInt;\n\t\n\t\n\t/**\n\t * Converts the byte array to a string. If the data in the array begins with\n\t * a Unicode byte order mark, the application will honor that mark when\n\t * converting to a string. If `System.useCodePage` is set to\n\t * `true`, the application will treat the data in the array as\n\t * being in the current system code page when converting.\n\t * \n\t * @return The string representation of the byte array.\n\t */\n\tpublic function toString ():String;\n\t\n\t\n\t/**\n\t * Decompresses the byte array. For content running in Adobe AIR, you can\n\t * specify a compression algorithm by passing a value(defined in the\n\t * CompressionAlgorithm class) as the `algorithm` parameter. The\n\t * byte array must have been compressed using the same algorithm. Flash\n\t * Player supports only the default algorithm, zlib.\n\t *\n\t * After the call, the `length` property of the ByteArray is\n\t * set to the new length. The `position` property is set to 0.\n\t *\n\t * The zlib compressed data format is described at \n\t * [http://www.ietf.org/rfc/rfc1950.txt](http://www.ietf.org/rfc/rfc1950.txt).\n\t *\n\t * The deflate compression algorithm is described at \n\t * [http://www.ietf.org/rfc/rfc1951.txt](http://www.ietf.org/rfc/rfc1951.txt).\n\t *\n\t * In order to decode data compressed in a format that uses the deflate\n\t * compression algorithm, such as data in gzip or zip format, it will not\n\t * work to call `uncompress(CompressionAlgorithm.DEFLATE)` on a\n\t * ByteArray containing the compression formation data. First, you must\n\t * separate the metadata that is included as part of the compressed data\n\t * format from the actual compressed data. For more information, see the\n\t * `compress()` method description.\n\t * \n\t * @throws IOError The data is not valid compressed data; it was not\n\t *                 compressed with the same compression algorithm used to\n\t *                 compress.\n\t */\n\tpublic function uncompress (algorithm:CompressionAlgorithm = null):Void;\n\t\n\t\n\t/**\n\t * Writes a Boolean value. A single byte is written according to the\n\t * `value` parameter, either 1 if `true` or 0 if\n\t * `false`.\n\t * \n\t * @param value A Boolean value determining which byte is written. If the\n\t *              parameter is `true`, the method writes a 1; if\n\t *              `false`, the method writes a 0.\n\t */\n\tpublic function writeBoolean (value:Bool):Void;\n\t\n\t\n\t/**\n\t * Writes a byte to the byte stream.\n\t *\n\t * The low 8 bits of the parameter are used. The high 24 bits are ignored.\n\t * \n\t * \n\t * @param value A 32-bit integer. The low 8 bits are written to the byte\n\t *              stream.\n\t */\n\tpublic function writeByte (value:Int):Void;\n\t\n\t\n\t/**\n\t * Writes a sequence of `length` bytes from the specified byte\n\t * array, `bytes`, starting `offset`(zero-based index)\n\t * bytes into the byte stream.\n\t *\n\t * If the `length` parameter is omitted, the default length of\n\t * 0 is used; the method writes the entire buffer starting at\n\t * `offset`. If the `offset` parameter is also omitted,\n\t * the entire buffer is written. \n\t *\n\t * If `offset` or `length` is out of range, they are\n\t * clamped to the beginning and end of the `bytes` array.\n\t * \n\t * @param bytes  The ByteArray object.\n\t * @param offset A zero-based index indicating the position into the array to\n\t *               begin writing.\n\t * @param length An unsigned integer indicating how far into the buffer to\n\t *               write.\n\t */\n\tpublic function writeBytes (bytes:ByteArray, offset:UInt = 0, length:UInt = 0):Void;\n\t\n\t\n\t/**\n\t * Writes an IEEE 754 double-precision(64-bit) floating-point number to the\n\t * byte stream.\n\t * \n\t * @param value A double-precision(64-bit) floating-point number.\n\t */\n\tpublic function writeDouble (value:Float):Void;\n\t\n\t\n\t/**\n\t * Writes an IEEE 754 single-precision(32-bit) floating-point number to the\n\t * byte stream.\n\t * \n\t * @param value A single-precision(32-bit) floating-point number.\n\t */\n\tpublic function writeFloat (value:Float):Void;\n\t\n\t\n\t/**\n\t * Writes a 32-bit signed integer to the byte stream.\n\t * \n\t * @param value An integer to write to the byte stream.\n\t */\n\tpublic function writeInt (value:Int):Void;\n\t\n\t\n\t/**\n\t * Writes a multibyte string to the byte stream using the specified character\n\t * set.\n\t * \n\t * @param value   The string value to be written.\n\t * @param charSet The string denoting the character set to use. Possible\n\t *                character set strings include `\"shift-jis\"`,\n\t *                `\"cn-gb\"`, `\"iso-8859-1\"`, and\n\t *                others. For a complete list, see <a\n\t *                href=\"../../charset-codes.html\">Supported Character\n\t *                Sets</a>.\n\t */\n\tpublic function writeMultiByte (value:String, charSet:String):Void;\n\t\n\t\n\t/**\n\t * Writes an object into the byte array in AMF serialized format.\n\t * \n\t * @param object The object to serialize.\n\t */\n\t#if flash\n\t@:noCompletion @:dox(hide) public function writeObject (object:Dynamic):Void;\n\t#end\n\t\n\t\n\t/**\n\t * Writes a 16-bit integer to the byte stream. The low 16 bits of the\n\t * parameter are used. The high 16 bits are ignored.\n\t * \n\t * @param value 32-bit integer, whose low 16 bits are written to the byte\n\t *              stream.\n\t */\n\tpublic function writeShort (value:Int):Void;\n\t\n\t\n\t/**\n\t * Writes a UTF-8 string to the byte stream. The length of the UTF-8 string\n\t * in bytes is written first, as a 16-bit integer, followed by the bytes\n\t * representing the characters of the string.\n\t * \n\t * @param value The string value to be written.\n\t * @throws RangeError If the length is larger than 65535.\n\t */\n\tpublic function writeUTF (value:String):Void;\n\t\n\t\n\t/**\n\t * Writes a UTF-8 string to the byte stream. Similar to the\n\t * `writeUTF()` method, but `writeUTFBytes()` does not\n\t * prefix the string with a 16-bit length word.\n\t * \n\t * @param value The string value to be written.\n\t */\n\tpublic function writeUTFBytes (value:String):Void;\n\t\n\t\n\t/**\n\t * Writes a 32-bit unsigned integer to the byte stream.\n\t * \n\t * @param value An unsigned integer to write to the byte stream.\n\t */\n\tpublic function writeUnsignedInt (value:UInt):Void;\n\t\n\t\n}\n\n\n#end","package openfl.utils;\n\n\n@:enum abstract CompressionAlgorithm(Null<Int>) {\n\t\n\tpublic var DEFLATE = 0;\n\t//GZIP;\n\tpublic var LZMA = 1;\n\tpublic var ZLIB = 2;\n\t\n\t@:from private static function fromString (value:String):CompressionAlgorithm {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"deflate\": DEFLATE;\n\t\t\tcase \"lzma\": LZMA;\n\t\t\tcase \"zlib\": ZLIB;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase CompressionAlgorithm.DEFLATE: \"deflate\";\n\t\t\tcase CompressionAlgorithm.LZMA: \"lzma\";\n\t\t\tcase CompressionAlgorithm.ZLIB: \"zlib\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}","package openfl.utils;\n\n\nimport lime.system.Endian in LimeEndian;\n\n\n@:enum abstract Endian(Null<Int>) {\n\t\n\t\n\tpublic var BIG_ENDIAN = 0;\n\tpublic var LITTLE_ENDIAN = 1;\n\t\n\t\n\t@:from private static function fromLimeEndian (value:LimeEndian):Endian {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase LimeEndian.BIG_ENDIAN: BIG_ENDIAN;\n\t\t\tcase LimeEndian.LITTLE_ENDIAN: LITTLE_ENDIAN;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:from private static function fromString (value:String):Endian {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase \"bigEndian\": BIG_ENDIAN;\n\t\t\tcase \"littleEndian\": LITTLE_ENDIAN;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:to private static function toLimeEndian (value:Int):LimeEndian {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Endian.BIG_ENDIAN: LimeEndian.BIG_ENDIAN;\n\t\t\tcase Endian.LITTLE_ENDIAN: LimeEndian.LITTLE_ENDIAN;\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t@:to private static function toString (value:Int):String {\n\t\t\n\t\treturn switch (value) {\n\t\t\t\n\t\t\tcase Endian.BIG_ENDIAN: \"bigEndian\";\n\t\t\tcase Endian.LITTLE_ENDIAN: \"littleEndian\";\n\t\t\tdefault: null;\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t\n}","package openfl.utils;\n\n\n@:forward() abstract Object(ObjectType) from ObjectType {\n\t\n\t\n\tpublic inline function new () {\n\t\t\n\t\tthis = { };\n\t\t\n\t}\n\t\n\t\n\tpublic inline function hasOwnProperty (name:String):Bool {\n\t\t\n\t\treturn (this != null && Reflect.hasField (this, name));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function isPrototypeOf (theClass:Class<Dynamic>):Bool {\n\t\t\n\t\tvar c = Type.getClass (this);\n\t\t\n\t\twhile (c != null) {\n\t\t\t\n\t\t\tif (c == theClass) return true;\n\t\t\tc = Type.getSuperClass (c);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn false;\n\t\t\n\t}\n\t\n\t\n\t@:noCompletion @:dox(hide) public function iterator ():Iterator<String> {\n\t\t\n\t\tvar fields = Reflect.fields (this);\n\t\tif (fields == null) fields = [];\n\t\treturn fields.iterator ();\n\t\t\n\t}\n\t\n\t\n\tpublic inline function propertyIsEnumerable (name:String):Bool {\n\t\t\n\t\treturn (this != null && Reflect.hasField (this, name) && Std.is (Reflect.field (this, name), Iterable_));\n\t\t\n\t}\n\t\n\t\n\tpublic inline function toLocaleString ():String {\n\t\t\n\t\treturn Std.string (this);\n\t\t\n\t}\n\t\n\t\n\t@:to public inline function toString ():String {\n\t\t\n\t\treturn Std.string (this);\n\t\t\n\t}\n\t\n\t\n\tpublic inline function valueOf ():Object {\n\t\t\n\t\treturn this;\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess @:noCompletion @:dox(hide) public inline function __get (key:String):Dynamic {\n\t\t\n\t\treturn Reflect.field (this, key);\n\t\t\n\t}\n\t\n\t\n\t@:arrayAccess @:noCompletion @:dox(hide) public inline function __set (key:String, value:Dynamic):Dynamic {\n\t\t\n\t\tReflect.setField (this, key, value);\n\t\treturn value;\n\t\t\n\t}\n\t\n\t\n}\n\n\n#if (!cs || haxe_ver > \"3.3.0\")\n\n@:keep @:native('haxe.lang.Iterator') private interface Iterator_<T> {\n\t\n\tpublic function hasNext ():Bool;\n\tpublic function next ():T;\n\t\n}\n\n\n@:keep @:native('haxe.lang.Iterable') private interface Iterable_<T> {\n\t\n\tpublic function iterator ():Iterator_<T>;\n\t\n}\n\n#else\ntypedef Iterator_<T> = cs.internal.Iterator<T>;\ntypedef Iterable_<T> = cs.internal.Iterator.Iterable<T>;\n#end\n\n\n#if !flash\ntypedef ObjectType = Dynamic;\n#else\ntypedef ObjectType = flash.utils.Object;\n#end","/*\n * Copyright (C)2005-2017 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math\n{\n\tstatic var PI(default,null) : Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null) : Float;\n\t@:pure private static inline function get_NEGATIVE_INFINITY () : Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get,null) : Float;\n\t@:pure private static inline function get_POSITIVE_INFINITY () : Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null) : Float;\n\t@:pure private static inline function get_NaN () : Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\t@:pure static function abs(v:Float):Float;\n\t@:pure static function acos(v:Float):Float;\n\t@:pure static function asin(v:Float):Float;\n\t@:pure static function atan(v:Float):Float;\n\t@:pure static function atan2(y:Float, x:Float):Float;\n\t@:pure static function ceil(v:Float):Int;\n\t@:pure static function cos(v:Float):Float;\n\t@:pure static function exp(v:Float):Float;\n\t@:pure static function floor(v:Float):Int;\n\t@:pure static function log(v:Float):Float;\n\t@:pure static function max(a:Float, b:Float):Float;\n\t@:pure static function min(a:Float, b:Float):Float;\n\t@:pure static function pow(v:Float, exp:Float):Float;\n\tstatic function random() : Float;\n\t@:pure static function round(v:Float):Int;\n\t@:pure static function sin(v:Float):Float;\n\t@:pure static function sqrt(v:Float):Float;\n\t@:pure static function tan(v:Float):Float;\n\n\t@:pure static inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\t@:pure static inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\t@:pure static inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\t@:pure static inline function isFinite( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\t@:pure static inline function isNaN( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","package openfl.net;\n\n\nclass URLRequestDefaults {\n\t\n\t\n\t//public static var authenticate:Bool;\n\t//public static var cacheResponse:Bool;\n\tpublic static var followRedirects:Bool = true;\n\tpublic static var idleTimeout:Float = 0;\n\tpublic static var manageCookies:Bool = false;\n\t//public static var useCache:Bool;\n\tpublic static var userAgent:String;\n\t\n\t\n\t// public static function setLoginCredentialsForHost (hostname:String, user:String, password:String):Dynamic {\n\t\t\n\t// \topenfl._internal.Lib.notImplemented ();\n\t// \treturn null;\n\t\t\n\t// }\n\t\n\t\n}"],
"names":[],
"mappings":"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K;0CACM;iDAEO;iDACA;+CACF;0CAEL;wCACF;6CACK;qDACQ;8CACP;2DACa;yDACF;kDACP;uDACK;sCACjB;wCACE;sCACF;0CACI;2CACC;0CACD;4CACE;mDACO;0CACT;gCAEV;+BACD;gCACC;iCACC;kCACC;mCACC;iCACF;iCACA;+BAEF;kCACG;+BACH;+BACA;iCACE;oCACG;oCACA;iCAEH;mCACE;kCACD;qCACG;kCAEH;iCACD;iDAEgB;gDACD;gDACA;+CACD;6CAEF;6CACA;yCACJ;yCACA;qCAEJ;kCACH;2CAES;mDACQ;sDACG;sDACA;sDACA;sDACA;sDACA;sDACA;oDACF;mCAEjB;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;oCACC;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;yCACK;iCAER;wCACO;0CACE;qCAEL;qCACA;qCACA;mCACF;mCACA;mCACA;+BACJ;oCACK;oCACA;oCACA;qCACC;qCACA;qCACA;qCACA;uCACE;sDAEe;mDACH;qDACE;mDACF;yDACM;sDACH;6DACO;yDAEJ;2DACE;oDAEP;uCACb;yCAEE;oCAEL;uCACG;qCACF;kCACH;qCACG;mCACF;sCAEG;uCACC;gCAEP;kCACE;iCACD;4CACW;wCACJ;yCACC;wCACD;6CAEK;8CACC;uDACS;gDACP;kDACE;iDACD;kDACC;kDACA;oDACE;6DAES;6DACA;+DACE;uEACQ;4CAE3B;2CACD;6CACE;mDACM;+BAEpB;+CAEgB;4DACa;oEACQ;4DACR;kDACV;8CAEJ;+CACC;gDACC;wDAEQ;8CAEV;yDACW;6CACZ;6DACgB;gDACb;sCAEV;4CACM;2CACD;6CACE;0CACH;yCACD;2CACE;6CACE;6CACA;8CACC;8CACA;gDACE;+CACD;+CACA;0DACW;wDACF;mDACL;mDACA;mDACA;iDACF;0DACS;6CACb;+CACE;uDACQ;wDACC;kDACN;4CACN;8BAEd;+BACC;gCACC;mCACG;qCACE;yCACI;0CACC;0CACA;6CACG;4CACD;+CACG;+CACA;+BAChB;gCACC;uCACO;iDACU;kCACf;iCACD;kCACC;iCACD;2CACU;mDACQ;yCACV;kCACP;mCACC;kCACD;mCACC;kCACD;kCACA;iCACD;kCACC;iCACD;kCACC;iCACD;iCACA;gCACD;sCACM;sCACA;uCACC;6BACV;8BACC;+BACC;+BACA;gCACC;gCACA;8BACF;+BACC;+BACA;gCACC;+BACD;gCACC;+BACD;gCACC;gCACA;iCACC;gCACD;iCACC;mCACE;oCACC;qCACC;sCACC;qCACD;mDACc;mDACA;sDAEG;uDACC;mDACJ;yDACM;4CACb;qCACP;6BACR;qCACQ;6CACQ;wCAEL;uCACD;iDACU;6CACJ;0DACa;2CAEf;uCACJ;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;wCACC;wCACA;wCACA;wCACA;wCACA;wCACA;gDACQ;4CACJ;4CACA;4CACA;4CACA;4CACA;4CACA;4CACA;4CACA;4CACA;6CACC;6CACA;6CACA;6CACA;6CACA;6CACA;qCAER;4CACO;2CACD;kDACO;8CACJ;yCACL;yCACA;2CACE;+CACI;kDACG;kDACA;oDACE;wDACI;sCAClB;0CACI;4CAEE;8CACE;oDACM;sDACE;2CACX;4CACC;mDACO;oDACC;uCAEb;uCACA;uCACA;uCACA;uCACA;uCACA;4CACK;4CACA;4CACA;8CACE;4CACF;sDAEU;sDACA;yDAEG;qEACY;sDACf;0DACI;yDACD;gEACO;wEACQ;kEACN;8CACpB;2CACH;oDACS;4DACQ;6CACf;oDACO;oDACA;qDACC;gEAEW;gEACA;0DACN;4DACE;2DACD;4DACC;4DACA;8DACE;8CAChB;2CACH;mDACQ;2CACR;2CACA;mDACQ;+CACJ;+DACgB;6DACF;yCAEpB;iDACQ;+CACF;8CACD;oDACM;sDACE;sDACA;sDACA;iDACL;iEACgB;mEACE;0DACT;gDACV;uCACT;uCACA;8CACO;yCACL;+CACM;gDACC;+CACD;gDACC;kDACE;wDACM;+DACO;oEACK;sEACE;sCAEhC;yCACG;sCACH;qCACD;qCACA;qDACgB;qCAChB;mCACF;2CACQ;0CACD;8CACI;sCACR;kDACY;gCAElB;gCACA;kCACE;8BACJ;8BACA;4CACc;sCACN;sCACA;sCACA;sCACA;uCACC;uCACA;6CACM;4CACD;wCACJ;0CACE;wDACc;2EI9nBtB;AAAA;AAAA;;;;yDICH,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK;+BEEjG;iDCTa,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK;4BcQtF;6BACC;4BACD;uCACW;wCACC;wCACA;6BACX;gCACG;iCACC;gCACD;+BACD;8BACD;4BACF;gCACI;gCACA;mCACG;oCACC;+BACL;+BACA;8BACD;+BACC;sCACO;yCACG;0CACC;sCACJ;uCACC;oCACH;kCACF;qCACG;mCACF;mCACA;8BACL;iCACG;oCACG;oCACA;qCACC;sCACC;uCACC;iCACN;4BACL;gCACI;4BACJ;gCACI;oCACI;oCACA;qCACC;yCACI;qCACJ;8BACP;+BACC;gCACC;kCACE;sCACI;sCACA;wCACE;sCACF;wCACE;gDACQ;uCACT;+CACQ;yCACN;iDACQ;8BE9DpB;6BACD;kCACK;gCACF;6BACH;qCACQ;uCACE;iCACN;uCACM;wCACC;qCACH;sCACC;sCACA;wCACE;uCACD;iDACU;yCACR;mCACN;0CACO;sDACY;8CACR;iCYZxB;mCGuCqB;0DK1DpC;gEACM;gEACA;gEACA;gEACA;mDELP;sDACG;oDACF;mDAED;qDACE;oDACD;qDACC;uDACE;qDACF;kDACH;qDACG;qDACA;mDACF;gDACH;mDACG;qDACE;oDACD;qDACC;gDACL;kDACE;sDACI;kDACJ;kDACA;mDACC;iDACF;oDAEG;qDAEC;oDACD;+DACW;qDACV;qDACA;kDACH;sDACI;oDACF;kDACF;kDACA;oDACE;mDACD;mDACA;+CACJ;oDAEK;mDACD;uDACI;kDAEL;oDACE;oDACA;qDACC;oDAED;kDACF;qDACG;oDACD;oDACA;mDACD;qDACE;qDAEA;mDACF;uDACI;uDACA;wDACC;wDACA;yDACC;qDACJ;qDAEA;sDACC;gDACN;qDACK;uDACE;mDAEJ;iDACF;qDACI;mDACF;mDACA;mDACA;qDACE;mDACF;uDACI;sDACD;gDACN;oDAEI;kDACF;iEACe;6DACJ;kEACK;mEACC;qDACd;mDACF;iDACF;yDACQ;8DACK;uDACP;sDACD;qDACD;qDACA;kDAEH;mDACC;oDACC;mDAED;6DACU;iEACI;iDAChB;oDACG;yDACK;kDACP;sDAEI;+DACS;qDACV;oDACD;oDACA;mDACD;sDACG;qDACD;qDACA;uDACE;0DACG;iDACT;gDACD;sDACM;8DACQ;uDACP;yDACE;sDACH;wDACE;4DACI;oDACR;oDACA;wDACI;yCS3I4B;yCACA;6CACI;6CACA;4CACD;4CACA;0BrFSrB;4BACE;mDsFbjB;mDACA;oDACC;oDACA;yDACK;0DACC;kDCLZ;kDACA;kDACA;kDACA;qDACG;sDACC;sDACA;2DACK;4DACC;8DACE;+DACC;wDACP;0DACE;0DACA;2DACC;2BxFHW;6BACE;mEyFZwB;iEACF;iEACA;kEACC;+DACH;sEAEO;uEACC;oEACH;qEACC;4CCJ1C;8CACE;wCACN;2CACG;2CACA;0CACD;gDACM;0CACN;yCACD;2CACE;4CACC;8CACE;iDACG;qDACI;sDACC;6CACT;yCACJ;0CACC;0CACA;2CACC;0CACD;6CACG;6CACA;6CACA;6CACA;6CACA;6CACA;6CACA;6CACA;6CACA;6CACA;0CACH;8CACI;8CACA;2CACH;iDACM;6CACJ;uCACN;iDACU;8CACH;kDACI;0CACR;+CACK;0CACL;sCACJ;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;sCACA;2CACK;8CACG;uCACP;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;uCACA;wCACC;wCACA;wCACA;iDACS;gDACD;0CACN;2CACC;yCACF;4CACG;wCACJ;8CACM;0CACJ;yCACD;yCACA;uCACF;6CACM;kDACK;oDACE;iDACH;gDACD;iDACC;6CACJ;6CACA;6CACA;6CACA;6CACA;6CACA;6CACA;6CACA;6CACA;6CACA;kDACK;gDACF;0CACN;kDACQ;wCACV;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;4CACI;yCACH;yCACA;2CACE;yCACF;0CACC;yCACD;wCACD;yCACC;0CACC;yCACD;yCACA;8CACK;gDACE;iDACC;8CAEH;mDACK;2CACR;0CACD;0CACA;4CACE;8CACE;wCACN;yCACC;gDACO;0CACN;0CACA;8CACI;+CACC;uDACQ;sDACD;kDACJ;qDACG;4DACO;6DACC;sDACP;uDACC;+CACR;qDACM;6CACR;6CACA;6CACA;6CACA;6CACA;6CACA;+CACE;iDACE;mDACE;qDACE;wDACG;qDACH;4DACO;wDACJ;+DACO;iDACd;gDACD;iDACC;8CACH;uDACS;qDACF;sDACC;qDACD;mDACF;wDACK;wDACA;sDACF;sDACA;iDACL;uDACM;kDACL;iDACD;mDACE;uDACI;8CACT;+CACC;6CACF;8CACC;+CACC;gDACC;8CACF;+CACC;yCACN;+CACM;mDACI;+CACJ;+CACA;+CACA;iDACE;wCACT;yCACC;+CACM;6CACF;uDACU;qDACF;qDACA;wDACG;qDACH;wDACG;0DACE;oDACN;kDACF;mDACC;qDACE;mDACF;iDACF;0CACP;0CACA;iDChPgC;uDACM;wDACC;sDACF;uDACC;qDACF;sDACC;sDACA;uDACC;qDACF;sDACC;iDACL;iDAEA;kDACC;gDACF;iDACC;8CEV9B;gDACE;0CACN;6CACG;6CACA;4CACD;mDAOO;4CAKP;4CACA;6CACC;4CACD;+CACG;+CACA;+CACA;+CACA;+CACA;+CACA;+CACA;+CACA;+CACA;+CACA;gDAEC;6CAEH;mDAIM;gDACH;oDACI;4CAGR;wCACJ;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;wCACA;6CACK;gDACG;yCACP;yCACA;yCACA;yCACA;yCACA;yCACA;yCACA;yCACA;yCACA;0CACC;0CACA;0CACA;mDACS;kDACD;4CACN;6CACC;2CACF;8CACG;0CACJ;gDACM;4CACJ;2CACD;2CACA;yCACF;+CACM;oDACK;sDACE;mDACH;kDACD;mDACC;+CACJ;+CACA;+CACA;+CACA;+CACA;+CACA;+CACA;+CACA;+CACA;+CACA;oDACK;kDACF;4CACN;oDACQ;0CACV;0CACA;0CACA;0CACA;0CACA;0CACA;0CACA;0CACA;0CACA;0CACA;0CACA;0CACA;8CACI;2CACH;2CACA;6CACE;2CACF;4CACC;2CACD;0CACD;2CACC;4CACC;2CACD;2CACA;gDACK;kDACE;mDACC;gDAEH;qDACK;6CACR;4CACD;4CACA;8CACE;gDACE;0CACN;2CACC;kDACO;4CACN;4CACA;gDACI;iDACC;yDACQ;wDACD;oDACJ;uDACG;8DACO;+DACC;wDACP;yDACC;iDACR;uDACM;+CACR;+CACA;+CACA;+CACA;+CACA;+CACA;iDACE;mDACE;qDACE;uDACE;0DACG;uDACH;8DACO;0DACJ;iEACO;mDACd;kDACD;mDACC;gDACH;yDACS;uDACF;wDACC;uDACD;qDACF;0DACK;0DACA;wDACF;wDACA;mDACL;yDACM;oDACL;mDACD;qDACE;yDACI;gDACT;iDACC;+CACF;gDACC;iDACC;kDACC;gDACF;iDACC;2CACN;iDACM;qDACI;iDACJ;iDACA;iDACA;mDACE;0CACT;2CACC;iDACM;+CACF;yDACU;uDACF;uDACA;0DACG;uDACH;0DACG;4DACE;sDACN;oDACF;qDACC;uDACE;q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uDACC;qDACF;0DACK;2DACC;2ECPE;uFACY;sEACjB;0DCFF;0DACA;yDACD;4DACG;mECHG;mEACA;kEACD;kEACA;oECHA;gEACJ;oEACI;kDEmC0D;0CAEvC;4CACE;mDACO;wDAEE;2CACb;0CAEe;qEAwU9B;6EACQ;8EACC;wEACN;mFACW;wEACX;2EACG;4EACC;sEACN;iFACW;sEACX;kEAES;yFCjYH;yFACA;2EACd;mGACwB;mGACA;8FACL;8FACA;oFACV;oFACA;4EACR;oFCTQ;mFACD;8ECDL;6EACD;+EACE;qFACM;4EACT;kFACM;6EACL;iFACI;6ECPA;8EACC;2EACH;wECAC;oFACY;iFACH;wEACT;oFACY;iFACH;gFCPT;8EACF;0ECDF;8EACI;8FCDU;0FACJ;8FACI;0FACJ;kFACR;gFACF;+EACD;gFACC;0FCPU;yFACD;yFACA;yFACA;kFACP;mFACC;sFCLG;gFACN;uFACO;sFACD;4FACM;2FACD;8ECLX;+EACC;wFACS;8EACV;6FCHG;6FACA;6FACA;6FACA;6FACA;uECJF;kFACW;wEACV;kFACU;oDOeY;wCEVI;+BOAV;4BACH;qCACS;6BACR;6BACA;4BACD;4BACA;+BACG;8BACD;uCACS;2BACZ;0BACD;iCACO;kCACC;iCACD;wCACO;kCACN;iCACD;0BACP;2BACC;kCACO;2BACP;4BACC;8BACE;yCACW;6BACZ;6BACA;6BACA;6BACA;iCACI;qCACI;0CACK;yCACD;uCACF;oCACH;6BACP;uCC3CE;+BCAJ;qCACM;iCCDL;oCCGG;qCACC;4CACO;8CACE;4CCNP;iEACqB;4CCEpB;8CACE;+CACC;qDCFK;4CACT;sCCJH;uCCGA;qCACF;iCCAD;wCACO;wCACA;6CACK;2CACF;sCACL;sCACA;qCACD;sCACC;oCACF;uCACG;2CACI;uCACJ;4CACK;0CACF;oCACN;qCACC;0CCpBC;uCCAF;0CACG;kDCDG;uCCKH;qCACF;sCACC;qCACD;sCACC;0CACI;2CACC;qCACN;kDCZK;8CEMsB;uDACzB;gCOIP;+BACD;4BACH,gDAAwB,WAAY;AAAA,QAAO;EAAe,YAAa;AAAA;;+DEd3E;iEACE;+DACF;2BCSI,+CAAuB,WAAY;AAAA,QAAO;EAAc,YAAa;AAAA,SAAS,EAAG;;+BCAjF,mDAA2B,WAAY;AAAA,QAAO;EAAkB,YAAa;AAAA,SAAS,EAAG,EAAG,EAAG;;8CQP3E;0CAKX;2CAC6C;2CCLhC;sEEL9B;oEACF;yEACK;gDiCCkB;4CACH;8CACC;gD7BDW,oCAAuB;uCEHhC;yCACE;4CACG;gCACZ;6CCHgB;6DCD5B;2DACF;gCCcc;qCACK;iDChBrB;wDACO;mDACL;oDACC;iDCHD;mDACE;uDACI;qDCFR;sDACC;yDACG;mEGFF;iEACF;iEACA;kEACC;4DCHE;0DACF;+DEDC;4DACH;gEACI;6DACH;8DACC;8DACA;kCEO6B;iCACD;mCAEb;gCACH;kCACE;4CEVG;8BCEA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;uBACP;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;8BACO;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;qCACO;gCACL;kCACE;qCACG;oCACD;mCACD;wBACX;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;yBACC;yBACA;yBACA;yBACA;yBACA;yBACA;+BACM;yBACN;+BACM;2BACJ;6BACE;2BACF;6BACE;2BACF;+BACI;4BACH;4BACA;2BACD;6BACE;+BACE;yBACN;0BACC;0BACA;2BACC;wBACH;0BACE;4BACE;4BACA;6BACC;+BACE;2BACJ;2BACA;2BACA;4BACC;2BACD;+BACI;iCACE;+BACF;kCACG;2BACP;iCCtGmC;uCACM;2BAEhC;oDCPvB;mDACD;qDACE;mDACF;oDACC;0DAEO;uDACH;qDACF;4DACO;0DACF;4DACE;0DACF;qDACL;2DACM;4BEMW;iCAEqB;oDAEa;2DCLrC;AAAA;AAAA;;;;2ECtBd;wEAEH;wEACA;kDCCM;qDACG;;;;"
}